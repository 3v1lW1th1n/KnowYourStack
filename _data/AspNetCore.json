{"Data":{"Blog":{"FeedItems":[{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":43,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null},{"Title":"JWT Validation and Authorization in ASP.NET Core","PublishedOn":"2017-04-27T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Post has moved here... <a aria-label=\"read more about JWT Validation and Authorization in ASP.NET Core\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6582798038","Type":"ForkEvent","CreatedAt":"2017-09-13T01:04:54","Actor":"nicolastakashi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/nicolastakashi/Home","RelatedDescription":"Forked aspnet/Home to nicolastakashi/Home","RelatedBody":null},{"Id":"6582487130","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:58:22","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329007616","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I used my omnipotent SO privileges to undelete my answer and expand it a bit."},{"Id":"6582437657","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:41:25","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329004605","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"Well, I tried to point you in the right direction, but my answer got deleted... Here's the exact code you can copy and paste into your application.\r\n``` csharp\r\npublic class DesignTimeDbContextFactory : IDesignTimeDbContextFactory<SampleArchContext>\r\n{    \r\n    public SampleArchContext CreateDbContext(string[] args)\r\n    {\r\n        var host = new WebHostBuilder()\r\n            .UseKestrel()\r\n            .UseContentRoot(Directory.GetCurrentDirectory())\r\n            .ConfigureAppConfiguration((hostingContext, config) =>\r\n            {\r\n                var env = hostingContext.HostingEnvironment;\r\n                config.SetBasePath(env.ContentRootPath);\r\n                config.AddInMemoryCollection(new[]\r\n                       {\r\n                         new KeyValuePair<string,string>(\"the-key\", \"the-value\")\r\n                       })\r\n                       .AddJsonFile(\"appsettings.json\", reloadOnChange: true, optional: false)\r\n                       .AddJsonFile($\"appsettings.{env}.json\", optional: true)\r\n                       .AddEnvironmentVariables();\r\n            })\r\n            .ConfigureLogging((hostingContext, logging) =>\r\n            {\r\n                logging.AddDebug();\r\n                logging.AddConsole();\r\n            })\r\n            .UseIISIntegration()\r\n            .UseDefaultServiceProvider((context, options) =>\r\n            {\r\n                options.ValidateScopes = context.HostingEnvironment.IsDevelopment();\r\n            })\r\n            .UseStartup<Startup>()\r\n            .Build();\r\n            \r\n        return host.Services.CreateScope().ServiceProvider.GetRequiredService<SampleArchContext>();\r\n    }\r\n}\r\n```\r\nIf you follow the [guidance](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/#update-main-method-in-programcs) I pointed to and split the top half of your `Program.Main()` into a `BuildWebHost()` method, EF will do the rest for you (i.e. you could remove the custom `IDesignTimeDbContextFactory` implementation).\r\n\r\nTo directly answer you're question, you can't inject services into `IDesignTimeDbContextFactory`. It is a static entry point into the application (like `Program.Main()`) and the service container must be configured from scratch."},{"Id":"6582117539","Type":"WatchEvent","CreatedAt":"2017-09-12T21:11:37","Actor":"Plac3hold3r","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581812188","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T19:59:25","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-328967523","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"@bricelam looks like @mohammad-hth is attempting to get to `IHostingEnvironment` in a `IDesignTimeDbContextFactory`. What's the recommended pattern here?"},{"Id":"6581222880","Type":"WatchEvent","CreatedAt":"2017-09-12T17:33:14","Actor":"devmonte","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581018985","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:45:41","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328912994","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"What is creating the token? Can you cut and paste an actual token so we can decode it? It's hard to transcribe from a screenshot."},{"Id":"6580986837","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:38:50","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328910892","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"These sorts of issues belong in [aspnet/security](https://github.com/aspnet/Security). Please ask questions about authentication there."},{"Id":"6580979049","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:37:12","Actor":"CharlesOkwuagwu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328910395","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@lorenz31 please share the CodeProject link.\r\nThanks"},{"Id":"6579726732","Type":"WatchEvent","CreatedAt":"2017-09-12T12:36:06","Actor":"vivekmishra-sft","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6579339520","Type":"IssuesEvent","CreatedAt":"2017-09-12T11:00:36","Actor":"manikandan05","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2014","RelatedDescription":"Closed issue \"How to make the entire application as unobtrusive supported mode?\" (#2014) at aspnet/Home","RelatedBody":"I have searched about unobtrusive support in ASP.NET Core application. But unfortunately, nothing get from online.\r\n\r\nMy question is, if there is common unobtrusive feature (apart from validation) exists or not like as MVC5?\r\n\r\nIf its available means, how to make us entire application in unobtrusive mode!.\r\n\r\nCould please share some common details about this!\r\n\r\nThanks."},{"Id":"6578755694","Type":"WatchEvent","CreatedAt":"2017-09-12T08:47:22","Actor":"etrupja","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6578016594","Type":"IssuesEvent","CreatedAt":"2017-09-12T05:04:44","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2195","RelatedDescription":"Opened issue \"JUSTE 1990(E) 2.10.F06F.064Y4 -7LU2RETABLOOKap.µ-klrtlzh9oit.rdk\" (#2195) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFramework\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - ASP.NET Core in Docker: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n\r\nOther common projects:\r\n\r\n - NuGet: https://github.com/NuGet/home\r\n - .NET Core CLI, SDK, or runtime: https://github.com/dotnet/core\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"6578011806","Type":"WatchEvent","CreatedAt":"2017-09-12T05:02:21","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577841725","Type":"ForkEvent","CreatedAt":"2017-09-12T03:40:40","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/ascode/Home","RelatedDescription":"Forked aspnet/Home to ascode/Home","RelatedBody":null},{"Id":"6577841653","Type":"WatchEvent","CreatedAt":"2017-09-12T03:40:38","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577806630","Type":"ForkEvent","CreatedAt":"2017-09-12T03:25:47","Actor":"luququ","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/luququ/Home","RelatedDescription":"Forked aspnet/Home to luququ/Home","RelatedBody":null},{"Id":"6576286680","Type":"WatchEvent","CreatedAt":"2017-09-11T19:14:07","Actor":"al-hadi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6576180900","Type":"ForkEvent","CreatedAt":"2017-09-11T18:49:39","Actor":"jdoddeap","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/jdoddeap/Home","RelatedDescription":"Forked aspnet/Home to jdoddeap/Home","RelatedBody":null},{"Id":"6575725999","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:05:28","Actor":"lucassklp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328594063","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"No, there is not any message. That exception is only displayed into output."},{"Id":"6575505492","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T16:18:15","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328580903","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"Is there a message for that exception?"},{"Id":"6574431005","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T12:52:26","Actor":"lorenz31","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328519515","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer I understand. By the way, I already got it working. I just set aside using Asp.Net Identity for the built-in registration/login and just used the reference I found a code project."},{"Id":"6573554635","Type":"WatchEvent","CreatedAt":"2017-09-11T09:14:14","Actor":"ariefabubakar","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6573428340","Type":"IssuesEvent","CreatedAt":"2017-09-11T08:45:31","Actor":"mohammad-hth","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2194","RelatedDescription":"Opened issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I have a problem when I want to fire add-migration command for an ASP MVC Core 2 project.\r\n\r\n> No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered.\r\n\r\n[You can see more information in stackoverflow](https://stackoverflow.com/questions/46150730/asp-net-core-2-no-service-for-type-microsoft-aspnetcore-hosting-ihostingenviron)"},{"Id":"6573243292","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T07:58:38","Actor":"AlexOliinyk1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328449189","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer  can you help in this issue ? https://github.com/aspnet/Identity/issues/1422\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6573080979","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T07:12:39","Actor":"f1xxxer","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328438161","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@lorenz31 yes, i have a web api project, can't show my repo though. Any way, assuming that you have updated everything to 2nd version, in StartUp.cs you need to configure your Jwt Authentication this way:\r\n\r\n- in ConfigureServices method\r\n\r\n services.AddAuthentication(o =>\r\n            {\r\n                o.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                o.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            }).AddJwtBearer(options =>\r\n            {\r\n                options.Audience = \"your audience\";\r\n                options.ClaimsIssuer = \"claims issuer\";\r\n                options.TokenValidationParameters = new TokenValidationParameters\r\n                {\r\n                    ValidIssuer = \"claims issuer\",\r\n                    IssuerSigningKey = { your signing key }\r\n                };\r\n            });\r\n\r\n- in Configure\r\n\r\napp.UseAuthentication();\r\n\r\napp.UseMvc();\r\n\r\nit is important that UseAuthentication() is before UseMvc()\r\n\r\nhttps://github.com/aspnet/Announcements/issues/262 - here are some details, about Authentication changes"},{"Id":"6573009866","Type":"ForkEvent","CreatedAt":"2017-09-11T06:50:10","Actor":"abhishekd365","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/abhishekd365/Home","RelatedDescription":"Forked aspnet/Home to abhishekd365/Home","RelatedBody":null},{"Id":"6572961608","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T06:33:17","Actor":"grokky1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328429956","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"> davidfowl... this thread is about making app insights opt in instead of opt out\r\n\r\nAgreed, we need to focus on that, or we'll get bogged down in too many problems and not solve anything.\r\n\r\n(...folks maybe we can discuss the other problems in a new issue?)"},{"Id":"6572859138","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:52:42","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328423108","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"Yes but it's specifically because we didn't target ARM as a first class scenario. ARM is currently in the \"it works if you make changes category\". It won't be that way forever but to claim that application insights in the reason for the issue is just incorrect.\r\n\r\nI get that this thread is about making app insights opt in instead of opt out and we need to re-evaluate the experience, but I haven't seen any actual proof of it being the problem in anything mentioned.  I'm all for helping, I just don't like the spreading of FUD."},{"Id":"6572849092","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:48:19","Actor":"nzain","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328422429","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"I agree that arm is niche, but you should not say it \"works by default\". It works by default on windows-x64  for sure. I think the \"run dotnet anywhere\" idea is great, this is the success story of java. Personally, I love dotnet and tricky embedded projects turn into \"dotnet core opportunities\". The default templates should run anywhere, right?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6583298460","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T04:41:26","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/864#discussion_r138522983","RelatedDescription":"Commented on pull request \"MessagePack Serialization fixes\" (#864) at aspnet/SignalR","RelatedBody":"This is part of the protocol but we will probably need Json like formatting on top of that. This setting just says to write key/property value pairs instead of just values. "},{"Id":"6583290826","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T04:37:33","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/865#issuecomment-329056559","RelatedDescription":"Commented on issue \"Appending version to browser javascript file names\" (#865) at aspnet/SignalR","RelatedBody":"We should somehow automate this post alpha."},{"Id":"6583289373","Type":"PullRequestEvent","CreatedAt":"2017-09-13T04:36:50","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/865","RelatedDescription":"Opened pull request \"Appending version to browser javascript file names\" (#865) at aspnet/SignalR","RelatedBody":""},{"Id":"6583287591","Type":"CreateEvent","CreatedAt":"2017-09-13T04:35:59","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/script-versioned","RelatedDescription":"Created branch \"pawelka/script-versioned\" at aspnet/SignalR","RelatedBody":null},{"Id":"6583195867","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:52:36","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/834#issuecomment-329051584","RelatedDescription":"Commented on issue \"SignalR server in UWP\" (#834) at aspnet/SignalR","RelatedBody":"@Bortxx There are a bunch of issues here about it https://github.com/aspnet/Home/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20uwp. The next version of UWP will support netstandard 2.0 and if sockets works, then it might be possible to make kestrel function with the sockets transport. For now, there's nothing SignalR will do differently since it runs on ASP.NET Core."},{"Id":"6583167951","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T03:42:15","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/864#discussion_r138518140","RelatedDescription":"Commented on pull request \"MessagePack Serialization fixes\" (#864) at aspnet/SignalR","RelatedBody":"Is this like Json formatting options or is it just for our part of the protocol?"},{"Id":"6582992336","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T02:30:00","Actor":"Bortxx","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/834#issuecomment-329038975","RelatedDescription":"Commented on issue \"SignalR server in UWP\" (#834) at aspnet/SignalR","RelatedBody":"So then I should give up on a self hosted SignalR server that can be deployed through the Windows store?"},{"Id":"6582796768","Type":"PullRequestEvent","CreatedAt":"2017-09-13T01:04:20","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/864","RelatedDescription":"Opened pull request \"MessagePack Serialization fixes\" (#864) at aspnet/SignalR","RelatedBody":"* serializing user objects as maps (#863)\r\n* enabling serializing objects that potentially cannot be deserialized (#862)"},{"Id":"6582795719","Type":"CreateEvent","CreatedAt":"2017-09-13T01:03:52","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/msgpack-fixes","RelatedDescription":"Created branch \"pawelka/msgpack-fixes\" at aspnet/SignalR","RelatedBody":null},{"Id":"6582629759","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T23:52:22","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/862#issuecomment-329016910","RelatedDescription":"Commented on issue \"Investigate parsing strategy in MsgPack related to ReadOnlyCollections\" (#862) at aspnet/SignalR","RelatedBody":"In `packer.PackObject(...)` we can pass a `SerializationContext` and set `SerializationContext.CompatibilityOptions.AllowAsymmetricSerializer = true` which allows more types through the serializer checker"},{"Id":"6582597513","Type":"IssuesEvent","CreatedAt":"2017-09-12T23:39:12","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/863","RelatedDescription":"Opened issue \"MsgPack doesn't include property names in packed objects\" (#863) at aspnet/SignalR","RelatedBody":"```c#\r\npublic class Stock\r\n{\r\n  public string Symbol {}\r\n  public decimal DayOpen {}\r\n  public decimal DayLow {}\r\n  public decimal DayHigh {}\r\n  public decimal LastChange {}\r\n  public decimal Change {}\r\n  public double PercentChange {}\r\n  public decimal Price {}\r\n}\r\n```\r\n\r\nGets decoded without the names like `Symbol` and `DayOpen`. Looks like it decodes in alphabetical order to deserialize accurately."},{"Id":"6582478539","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:55:23","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/834#issuecomment-329007065","RelatedDescription":"Commented on issue \"SignalR server in UWP\" (#834) at aspnet/SignalR","RelatedBody":"When I last talked with the UWP team about running Kestrel in UWP apps they required a tailored version of libuv (which Kestrel is currently built on top of) so that it can run in the sandbox. Unfortunately some of the functions they had to block were ones that Kestrel uses. It might be possible in the future when Kestrel has an alternative to libuv but to my knowledge you won't be able to run Kestrel in UWP at  the moment."},{"Id":"6582445479","Type":"IssuesEvent","CreatedAt":"2017-09-12T22:44:04","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/862","RelatedDescription":"Opened issue \"Investigate parsing strategy in MsgPack related to ReadOnlyCollections\" (#862) at aspnet/SignalR","RelatedBody":"I had a streaming hub method returning `IReadOnlyCollection<T>` when using MessagePack a parsing exception occurs. We need to investigate this and figure out how to proceed.\r\n\r\n```\r\nSystem.Runtime.Serialization.SerializationException: Type 'System.Collections.ObjectModel.ReadOnlyCollection`1[Microsoft.AspNet.SignalR.StockTicker.Stock]' does\r\n not have both of default (parameterless) public constructor and  public constructor with an Int32 parameter.\r\n   at MsgPack.Serialization.SerializationExceptions.ThrowTargetDoesNotHavePublicDefaultConstructorNorInitialCapacity(Type type)\r\n   at MsgPack.Serialization.UnpackHelpers.DetermineCollectionSerializationStrategy(Type instanceType, Boolean allowAsymmetricSerializer)\r\n   at MsgPack.Serialization.ReflectionSerializers.ReflectionSerializerHelper.CreateCollectionSerializer[T](SerializationContext context, Type targetType, CollectionTraits traits, PolymorphismSchema schema)\r\n   at MsgPack.Serialization.MessagePackSerializer.CreateReflectionInternal[T](SerializationContext context, Type concreteType, PolymorphismSchema schema)\r\n   at MsgPack.Serialization.MessagePackSerializer.CreateInternal[T](SerializationContext context, PolymorphismSchema schema)\r\n   at MsgPack.Serialization.SerializationContext.GetSerializer[T](Object providerParameter)\r\n   at MsgPack.Serialization.SerializationContext.SerializerGetter.Get(SerializationContext context, Type targetType, Object providerParameter)\r\n   at MsgPack.PackerUnpackerExtensions.PackObject(Packer source, Object value)\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.MessagePackHubProtocol.WriteStreamingItemMessage(StreamItemMessage streamItemMessage, Packer packer, Stream output) in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Common\\Internal\\Protocol\\MessagePackHubProtocol.cs:line 164\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.MessagePackHubProtocol.WriteMessageCore(HubMessage message, Stream output) in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Common\\Internal\\Protocol\\MessagePackHubProtocol.cs:line 139\r\n   at Microsoft.AspNetCore.SignalR.Internal.Protocol.MessagePackHubProtocol.WriteMessage(HubMessage message, Stream output) in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Common\\Internal\\Protocol\\MessagePackHubProtocol.cs:line 125\r\n   at Microsoft.AspNetCore.SignalR.Internal.HubProtocolReaderWriter.WriteMessage(HubMessage hubMessage) in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Common\\Internal\\HubProtocolReaderWriter.cs:line 32\r\n   at Microsoft.AspNetCore.SignalR.HubEndPoint`1.<>c__DisplayClass11_0.<<OnConnectedAsync>g__WriteToTransport0>d.MoveNext() in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Core\\HubEndPoint.cs:line 83\r\n```"},{"Id":"6582430391","Type":"IssuesEvent","CreatedAt":"2017-09-12T22:38:59","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/861","RelatedDescription":"Opened issue \"Exceptions thrown from Protocols on the Server-Side hang\" (#861) at aspnet/SignalR","RelatedBody":"The exception is observed when the connection closes.\r\n\r\nhttps://github.com/aspnet/SignalR/blob/30f16fcf4be46d118d34645a77afc31143525250/src/Microsoft.AspNetCore.SignalR.Core/HubEndPoint.cs#L110\r\nThis line observes the exception. But only happens when the connection closes.\r\n\r\nRelated to https://github.com/aspnet/SignalR/issues/816"},{"Id":"6582357485","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:15:15","Actor":"Bortxx","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/834#issuecomment-328999824","RelatedDescription":"Commented on issue \"SignalR server in UWP\" (#834) at aspnet/SignalR","RelatedBody":"> UWP sandbox won't allow for this. I don't think you can host a web server in a UWP app.\r\n\r\nI don't think that's the case. I have spoken again to the Microsoft tech assigned to approve my app to the Windows store and he stated that as long as I move away from using the HTTP.sys as my web listener (which requires Admin rights to register the ACL) and moved to ASP.NET core running Kestrel (which does not) and the new Signal R, then the app would pass all their store tests including Windows 10S.\r\n\r\nNow I am wondering how to do this. Can you reference ASP.NET core from a WPF app and will Signal R run on ASP.NET core? So can I run a self hosted Signal R endpoint from my WPF app? Is so is there any documentation?"},{"Id":"6582036791","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T20:52:40","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/860#issuecomment-328981031","RelatedDescription":"Commented on issue \"Issue with disposing the HttpConnection\" (#860) at aspnet/SignalR","RelatedBody":"Looks like this can happen when `HttpClient.Dispose` is called more than once at the same time. In `HttpConnection` we have two spots we dispose the `HttpClient` we should refactor it to only have 1."},{"Id":"6582008109","Type":"PushEvent","CreatedAt":"2017-09-12T20:46:11","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/240c09034e139656513bc289404ae4f9d3c3e209...30f16fcf4be46d118d34645a77afc31143525250","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6582004094","Type":"DeleteEvent","CreatedAt":"2017-09-12T20:45:16","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"brecon/alphaLog\" at aspnet/SignalR","RelatedBody":null},{"Id":"6582003880","Type":"PushEvent","CreatedAt":"2017-09-12T20:45:13","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/35683fb2b80feaac9822fffd4d1d12a6984f388f...2d4b2239a9c26bf05f7151140da2af060750fce3","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6582003855","Type":"PullRequestEvent","CreatedAt":"2017-09-12T20:45:13","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/857","RelatedDescription":"Merged pull request \"Reduce C# client logging and add HubProtocol log\" (#857) at aspnet/SignalR","RelatedBody":"@moozzyk @davidfowl "},{"Id":"6581849754","Type":"PushEvent","CreatedAt":"2017-09-12T20:08:25","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/05573198701292cc873765898cebacd6362ee0e0...240c09034e139656513bc289404ae4f9d3c3e209","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6581842556","Type":"PushEvent","CreatedAt":"2017-09-12T20:06:40","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/abd669849d6ee7ef6b8854b6f3d8840757e14f47...35683fb2b80feaac9822fffd4d1d12a6984f388f","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6581842510","Type":"PullRequestEvent","CreatedAt":"2017-09-12T20:06:39","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/856","RelatedDescription":"Merged pull request \"Fixing a bug where adding protocol with build would have no effect\" (#856) at aspnet/SignalR","RelatedBody":""},{"Id":"6581840637","Type":"IssuesEvent","CreatedAt":"2017-09-12T20:06:12","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/860","RelatedDescription":"Opened issue \"Issue with disposing the HttpConnection\" (#860) at aspnet/SignalR","RelatedBody":"```\r\nFailed   Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CheckFixedMessage(protocol: JsonHubProtocol { Name = \"json\", Type = Text }, transportType: ServerSentEvents, path: \"/dynamic\")\r\nError Message:\r\n System.ObjectDisposedException : The CancellationTokenSource has been disposed.\r\nStack Trace:\r\n   at System.Threading.CancellationTokenSource.ThrowObjectDisposedException()\r\n   at System.Threading.CancellationTokenSource.Cancel()\r\n   at System.Net.Http.HttpClient.Dispose(Boolean disposing)\r\n   at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<DisposeAsyncCore>d__53.MoveNext() in \r\n```"},{"Id":"6581818548","Type":"IssuesEvent","CreatedAt":"2017-09-12T20:00:55","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/859","RelatedDescription":"Opened issue \"Default JSON protocol to camelcase\" (#859) at aspnet/SignalR","RelatedBody":"Works best for javascript interop and it doesn't really affect other consumption APIs"},{"Id":"6581746299","Type":"IssuesEvent","CreatedAt":"2017-09-12T19:43:31","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/858","RelatedDescription":"Opened issue \"Add CancellationToken representing the lifetime of the IConnection\" (#858) at aspnet/SignalR","RelatedBody":"Today since we only have an event for Disconnect, it makes it hard to write linear code that does something until the client disconnects. It should be possible to write a reconnect loop like this:\r\n\r\n```C#\r\nwhile (true)\r\n{\r\n    // Create a new connection    \r\n    var connection = new HubConnectionBuilder()\r\n                    .WithUrl(\"http://localhost:5000/cache\")\r\n                    .WithMessagePackProtocol()\r\n                    .WithConsoleLogger()\r\n                    .WithTransportType(TransportType.WebSockets)\r\n                    .Build();\r\n\r\n    // Start it\r\n    await connection.StartAsync(); \r\n   \r\n    // Do things while the connection is alive and wait for it to finish\r\n\r\n    await connection.Lifetime.AsTask();\r\n\r\n    // Dispose when it's done\r\n    await connection.DisposeAsync();\r\n}\r\n```"},{"Id":"6581551591","Type":"PushEvent","CreatedAt":"2017-09-12T18:54:13","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/61dd9ca70d53d823c5857f8da4b00b545cd17831...f60873d1a5abbcd96ea139eb6e1fe2bab121ed87","RelatedDescription":"Pushed to refs/heads/brecon/alphaLog at aspnet/SignalR","RelatedBody":null},{"Id":"6581479041","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T18:35:35","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/857#discussion_r138431950","RelatedDescription":"Commented on pull request \"Reduce C# client logging and add HubProtocol log\" (#857) at aspnet/SignalR","RelatedBody":"Server and client."},{"Id":"6581239587","Type":"PullRequestEvent","CreatedAt":"2017-09-12T17:37:09","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/857","RelatedDescription":"Opened pull request \"Reduce C# client logging and add HubProtocol log\" (#857) at aspnet/SignalR","RelatedBody":"@moozzyk @davidfowl "},{"Id":"6581234105","Type":"CreateEvent","CreatedAt":"2017-09-12T17:35:52","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/brecon/alphaLog","RelatedDescription":"Created branch \"brecon/alphaLog\" at aspnet/SignalR","RelatedBody":null}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6583398993","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T05:29:19","Actor":"ruchanb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6809#issuecomment-329063194","RelatedDescription":"Commented on issue \"Response.WriteAsync causes \"The connection was reset\"\" (#6809) at aspnet/Mvc","RelatedBody":"@Eilon I used IISExpress which had the mentioned error. Using CLI gives \r\n```localhost unexpectedly closed the connection.\r\nERR_INCOMPLETE_CHUNKED_ENCODING\r\n```\r\nHere is the stack trace\r\n```info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action WebApplication1.Controllers.HomeController.Test (WebApplication1) in 156.8609ms\r\nfail: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[0]\r\n      An unhandled exception has occurred while executing the request\r\nSystem.InvalidOperationException: StatusCode cannot be set, response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeResultAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResultFilterAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Web.BrowserLink.BrowserLinkMiddleware.<ExecuteWithFilter>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nwarn: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[0]\r\n      The response has already started, the error page middleware will not be executed.\r\nfail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n      Connection id \"0HL7QCVMHJR7N\": An unhandled exception was thrown by the application.\r\nSystem.InvalidOperationException: StatusCode cannot be set, response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.Http.Frame.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeResultAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"6583163310","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:40:17","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6788#issuecomment-329050128","RelatedDescription":"Commented on issue \"prototype build-time code generation using swagger\" (#6788) at aspnet/Mvc","RelatedBody":"> Please consider using strongly-typed attribute descriptors for swagger documentation instead of using XML documentation. 😄\r\n\r\nI was thinking I was the only one in the world that didn't find that compelling.\r\n\r\nThis is something we've considered a few times, and have always ended up deferring on it because we don't consume the descriptions ourselves."},{"Id":"6583084208","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:06:07","Actor":"billpratt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6788#issuecomment-329044974","RelatedDescription":"Commented on issue \"prototype build-time code generation using swagger\" (#6788) at aspnet/Mvc","RelatedBody":"Please consider using strongly-typed attribute descriptors for swagger documentation instead of using XML documentation. 😄 "},{"Id":"6583011560","Type":"WatchEvent","CreatedAt":"2017-09-13T02:38:04","Actor":"joonyoung-lee","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6582992432","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T02:30:02","Actor":"billpratt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6790#issuecomment-329038983","RelatedDescription":"Commented on issue \"Add support for validation attributes on parameters\" (#6790) at aspnet/Mvc","RelatedBody":"I am very excited for this. So many times I have wanted the following to work:\r\n\r\n```csharp\r\n[HttpGet(\"test/{testId}\")]\r\npublic IActionResult Get([FromRoute] string testId, [Required][FromQuery]string name)\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return BadRequest(ModelState);\r\n    }\r\n\r\n    return Ok(\"Hello\");\r\n}\r\n```\r\n\r\nWhere ModelState would be invalid if **name** was null or empty.\r\n\r\nAlso having the ability to easily define custom validation parameter attributes is a _must_"},{"Id":"6582973187","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T02:21:34","Actor":"billpratt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807#discussion_r138511110","RelatedDescription":"Commented on pull request \"[Design] Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"+1 for ```EndsWith(\"Id\"...)```. Extensibility, possibly in the form of an action parameter attribute, to indicate \"this parameter can trigger a 404\" would be useful."},{"Id":"6582959731","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T02:15:50","Actor":"jchadwick","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6653#issuecomment-329037067","RelatedDescription":"Commented on issue \"Allow BindPropertyAttribute to be specified on PageModel \\ handler\" (#6653) at aspnet/Mvc","RelatedBody":"Awesome!"},{"Id":"6582910216","Type":"CreateEvent","CreatedAt":"2017-09-13T01:54:28","Actor":"jkotalik","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/tree/jkotalik/mthv","RelatedDescription":"Created branch \"jkotalik/mthv\" at aspnet/Mvc","RelatedBody":null},{"Id":"6582779546","Type":"CreateEvent","CreatedAt":"2017-09-13T00:56:45","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/tree/kichalla/request-form-limits","RelatedDescription":"Created branch \"kichalla/request-form-limits\" at aspnet/Mvc","RelatedBody":null},{"Id":"6582770544","Type":"PushEvent","CreatedAt":"2017-09-13T00:52:43","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/841fefd3b82a4c5ad1a5c4b13fe2bff56dac5578...a2c2b902228a895d4ed0ab62452692ad28cc7bb3","RelatedDescription":"Pushed to refs/heads/prkrishn/viewstart at aspnet/Mvc","RelatedBody":null},{"Id":"6582758937","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T00:47:36","Actor":"halter73","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6809#issuecomment-329025005","RelatedDescription":"Commented on issue \"Response.WriteAsync causes \"The connection was reset\"\" (#6809) at aspnet/Mvc","RelatedBody":"@Tratcher is right. Some browsers like IE/Edge will show the partial chunked content written to the response body before the connection was closed, but I know Chrome won't without a chunked terminator.\r\n\r\nNormally you wouldn't get a connection reset since Kestrel normally waits for whatever has been written to the response to body flush given an application error. It doesn't try to consume the request body prior to closing the connection though, so maybe that's the cause of the reset.  "},{"Id":"6582770526","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:43:13","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6813#discussion_r138501276","RelatedDescription":"Commented on pull request \"Make @inherit + Razor Pages + _ViewImports work\" (#6813) at aspnet/Mvc","RelatedBody":"We want users to derive from `PageBase` if they do choose a custom base type."},{"Id":"6582770512","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:42:29","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6813#discussion_r138501199","RelatedDescription":"Commented on pull request \"Make @inherit + Razor Pages + _ViewImports work\" (#6813) at aspnet/Mvc","RelatedBody":"For the following scenario:\r\n\r\n```\r\n// /_ViewImports.cshtml\r\n@inherits CustomBasePage\r\n\r\n// _ViewStart.cshtml\r\n@\"Hello world\"\r\n\r\n// Page.cshtml\r\n@page\r\n@model TestModel\r\n```\r\n\r\nThe model value ends up being `null` for the `_ViewStart` since no `Model` property is available on it. However we're starting with a `VDD<TestModel>`. This results in an exception when we attempt to initialize the page. The fix here is that if you're attempting to initialize a page without a model property, you will get a `VDD<object>`"},{"Id":"6582740712","Type":"PullRequestEvent","CreatedAt":"2017-09-13T00:39:17","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6813","RelatedDescription":"Opened pull request \"Make @inherit + Razor Pages + _ViewImports work\" (#6813) at aspnet/Mvc","RelatedBody":"Fixes #6769"},{"Id":"6582740210","Type":"CreateEvent","CreatedAt":"2017-09-13T00:39:03","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/tree/prkrishn/viewstart","RelatedDescription":"Created branch \"prkrishn/viewstart\" at aspnet/Mvc","RelatedBody":null},{"Id":"6582710109","Type":"IssuesEvent","CreatedAt":"2017-09-13T00:25:46","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6543","RelatedDescription":"Closed issue \"Add RedirectToAction overload that takes no arguments\" (#6543) at aspnet/Mvc","RelatedBody":"It's pretty common to have a get and post actions with the same name, where the post action redirects to the get action. We should add a RedirectToAction overload that redirects using the current action name."},{"Id":"6582710093","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T00:25:45","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6543#issuecomment-329022030","RelatedDescription":"Commented on issue \"Add RedirectToAction overload that takes no arguments\" (#6543) at aspnet/Mvc","RelatedBody":"4f18d99d021b33141a8747d63b2303040c8bd9dc"},{"Id":"6582709252","Type":"PullRequestEvent","CreatedAt":"2017-09-13T00:25:23","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6753","RelatedDescription":"Closed pull request \"Added RedirectToAction overload with no arguments\" (#6753) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Mvc/issues/6543"},{"Id":"6582709247","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T00:25:23","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6753#issuecomment-329021965","RelatedDescription":"Commented on issue \"Added RedirectToAction overload with no arguments\" (#6753) at aspnet/Mvc","RelatedBody":"4f18d99d021b33141a8747d63b2303040c8bd9dc"},{"Id":"6582708092","Type":"PushEvent","CreatedAt":"2017-09-13T00:24:50","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/06f6de6c119b2f5ffd79f1d23f18dc81f648bd2e...4f18d99d021b33141a8747d63b2303040c8bd9dc","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Mvc","RelatedBody":null},{"Id":"6582680562","Type":"PushEvent","CreatedAt":"2017-09-13T00:13:09","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/de389226011fb15140ee0a8d6a2429b2eb943f3a...06f6de6c119b2f5ffd79f1d23f18dc81f648bd2e","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Mvc","RelatedBody":null},{"Id":"6582680546","Type":"PullRequestEvent","CreatedAt":"2017-09-13T00:13:08","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6804","RelatedDescription":"Merged pull request \"Changed RequestSizeLimitAttribute to create an authorization filter r…\" (#6804) at aspnet/Mvc","RelatedBody":"…ather than a resource filter.\r\n\r\n[Fixes #6777] RequestSizeLimit is ignored\r\n"},{"Id":"6582680543","Type":"IssuesEvent","CreatedAt":"2017-09-13T00:13:08","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6777","RelatedDescription":"Closed issue \"RequestSizeLimit is ignored\" (#6777) at aspnet/Mvc","RelatedBody":"In asp.net core 2 a breaking changed was added that limits the request size to 30 mb (source).\r\n\r\nIn that article, a solution is provided if you would like to overrule the 30 mb limit. This is supposed to be done by adding an attribute to the action like so:\r\n\r\n```\r\n[HttpPost]\r\n[RequestSizeLimit(100_000_000)]\r\npublic IActionResult MyAction([FromBody] MyViewModel data)\r\n{\r\n```\r\n\r\nWhen I do this, and rebuild my project, I still get the following errors in Kestrel:\r\n\r\n```\r\nAn unhandled exception has occurred while executing the request\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request body too large.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ThrowRequestRejected(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ForContentLength.OnReadStart()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryInit()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.BufferedReadStream.<EnsureBufferedAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReaderStream.<ReadAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.<DrainAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReader.<ReadNextSectionAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.<InnerReadFormAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenStore.<GetRequestTokensAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.<ValidateRequestAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter.<OnAuthorizationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nfail: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[0]\r\n      An unhandled exception has occurred while executing the request\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request body too large.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ThrowRequestRejected(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ForContentLength.OnReadStart()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryInit()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.BufferedReadStream.<EnsureBufferedAsync>d__37.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReaderStream.<ReadAsync>d__36.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.<DrainAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebUtilities.MultipartReader.<ReadNextSectionAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.<InnerReadFormAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenStore.<GetRequestTokensAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.<ValidateRequestAsync>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter.<OnAuthorizationAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\ninfo: Microsoft.AspNetCore.Server.Kestrel[17]\r\n      Connection id \"0HL7KFNC938GT\" bad request data: \"Request body too large.\"\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request body too large.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ThrowRequestRejected(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ForContentLength.OnReadStart()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryInit()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ConsumeAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\ninfoinfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 161.172ms 500 text/html; charset=utf-8\r\n: Microsoft.AspNetCore.Server.Kestrel[17]\r\n      Connection id \"0HL7KFNC938GT\" bad request data: \"Request body too large.\"\r\nMicrosoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException: Request body too large.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ThrowRequestRejected(RequestRejectionReason reason)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ForContentLength.OnReadStart()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.TryInit()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ConsumeAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 161.172ms 500 text/html; charset=utf-8\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 POST http://localhost:55567/ExtensionSpecifiedQuotation/Step5 multipart/form-data; boundary=----WebKitFormBoundaryDbXL0DpRU4KQtqMM 44622809\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 POST http://localhost:55567/ExtensionSpecifiedQuotation/Step5 multipart/form-data; boundary=----WebKitFormBoundaryDbXL0DpRU4KQtqMM 44622809\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action MyRedactedProject.Controllers.ExtensionSpecifiedQuotationController.Step5 (MyRedactedProject) in 0.6059ms\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action MyRedactedProject.Controllers.ExtensionSpecifiedQuotationController.Step5 (MyRedactedProject) in 0.6059ms\r\n\r\n```\r\nAnd this is in my Startup.cs:\r\n\r\n```\r\npublic class Startup\r\n{\r\n    public Startup(IHostingEnvironment env)\r\n    {\r\n        var builder = new ConfigurationBuilder()\r\n            .SetBasePath(env.ContentRootPath)\r\n            .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n            .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true);\r\n\r\n        if (env.IsDevelopment())\r\n        {\r\n            // For more details on using the user secret store see https://go.microsoft.com/fwlink/?LinkID=532709\r\n            builder.AddUserSecrets<Startup>();\r\n        }\r\n\r\n        builder.AddEnvironmentVariables();\r\n        Configuration = builder.Build();\r\n    }\r\n\r\n    public IConfigurationRoot Configuration { get; }\r\n\r\n    // This method gets called by the runtime. Use this method to add services to the container.\r\n    public void ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.Configure<MailSettings>(Configuration.GetSection(\"MailSettings\"));\r\n\r\n        // Add framework services.\r\n        services.AddDbContext<MyExampleContext>(options =>\r\n            options.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n        // Adds a default in-memory implementation of IDistributedCache.\r\n        services.AddDistributedMemoryCache();\r\n\r\n        services.AddSession(options =>\r\n        {\r\n            options.IdleTimeout = TimeSpan.FromMinutes(30);\r\n            options.Cookie.HttpOnly = true;\r\n        });\r\n\r\n        services.AddMvc(options => \r\n                    options.Filters.Add(new AutoValidateAntiforgeryTokenAttribute()));\r\n\r\n        // allow razor-to-string for mailer\r\n        services.AddScoped<IViewRenderService, ViewRenderService>();\r\n\r\n        // enable nodejs in .net core\r\n        services.AddNodeServices();\r\n    }\r\n\r\n    // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n    public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, MyExampleContext context)\r\n    {\r\n        loggerFactory.AddConsole(Configuration.GetSection(\"Logging\"));\r\n        loggerFactory.AddDebug();\r\n\r\n        if (env.IsDevelopment())\r\n        {\r\n            app.UseDeveloperExceptionPage();\r\n        }\r\n        else\r\n        {\r\n            //app.UseExceptionHandler(\"/Home/Error\");\r\n        }\r\n\r\n        app.UseStaticFiles();\r\n        app.UseSession();\r\n\r\n        string culture = \"nl-NL\";\r\n\r\n        app.UseRequestLocalization(new RequestLocalizationOptions\r\n        {\r\n            DefaultRequestCulture = new RequestCulture(culture),\r\n            SupportedCultures = new [] {new CultureInfo(culture) },\r\n            SupportedUICultures = new [] { new CultureInfo(culture) }\r\n        });\r\n\r\n        app.UseMvc(routes =>\r\n        {\r\n            routes.MapRoute(\r\n                name: \"default\",\r\n                template: \"{controller=ExtensionBasicQuotation}/{action=Index}/{id?}\");\r\n        });\r\n\r\n        DbInitializer.Initialize(context);\r\n    }\r\n}\r\n```\r\n\r\nSee https://stackoverflow.com/questions/46060022/cannot-override-kestrel-requestsizelimit-in-aspnet-core"},{"Id":"6582679056","Type":"PushEvent","CreatedAt":"2017-09-13T00:12:31","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/373f758fd4025a47c5012ba5a862d97af33afe87...06f6de6c119b2f5ffd79f1d23f18dc81f648bd2e","RelatedDescription":"Pushed to refs/heads/kichalla/requestsizelimit-authorizationfilter at aspnet/Mvc","RelatedBody":null},{"Id":"6582609298","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T23:43:53","Actor":"Elfocrash","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#issuecomment-329015646","RelatedDescription":"Commented on issue \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"@dougbu Requested changes and new tests are up"},{"Id":"6582446462","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T22:44:24","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#discussion_r138485642","RelatedDescription":"Commented on pull request \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"Up to you. Add a tests whether or not you change code under src."},{"Id":"6582443936","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T22:43:30","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#discussion_r138485515","RelatedDescription":"Commented on pull request \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"The System.Linq methods should help here."},{"Id":"6582402914","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:29:46","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6769#issuecomment-329002506","RelatedDescription":"Commented on issue \"@inheritance does not work on asp.net core 2 razor pages\" (#6769) at aspnet/Mvc","RelatedBody":"`_ViewStart`s are executed as vanilla Razor views, so it doesn't quite make sense to have them inherit from the `Page` \\ `PageBase` types. That said, putting a type that derives from `PageBase` on a `_ViewImports` does throw an exception. I'll get this sorted for 2.1.0. For the current release, the best workaround is to explicitly add an `@inherits Microsoft.AspNetCore.Mvc.Razor.RazorPage<TModel>` to your `_ViewStart.cshtml` if you add a `@inherits CustomRazorPage` to your `_ViewImports.cshtml`. If there's specific issues you're running in to with your app, feel free to post a repro here and I can suggest some workarounds."},{"Id":"6582389105","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T22:25:17","Actor":"Elfocrash","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#discussion_r138482533","RelatedDescription":"Commented on pull request \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"About this last case. I feel like if the current class value is `HtmlEncode[[btn]] HtmlEncode[[btn]]` and you do `RemoveClass(\"btn\", ...)` then it should remove both and also delete the class attribute itself."},{"Id":"6582309885","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T22:01:32","Actor":"Elfocrash","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#discussion_r138478172","RelatedDescription":"Commented on pull request \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"This one isn't valid C# right? `value` is string not char so the method with `StringComparer` isn't available."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6581530416","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T18:48:53","Actor":"VahidN","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425#issuecomment-328946276","RelatedDescription":"Commented on issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"Have you configured your server to store the cookie decryption keys permanently? if not, whenever the server restarts or the app pool restarts, your users will have to login again.\r\n[More info](https://docs.microsoft.com/en-us/aspnet/core/publishing/iis#data-protection)"},{"Id":"6581336320","Type":"IssuesEvent","CreatedAt":"2017-09-12T17:59:51","Actor":"B-Esmaili","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425","RelatedDescription":"Opened issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"Here is my configuration for identity cookie :\r\n```\r\nservices.ConfigureApplicationCookie(cfg =>\r\n            {\r\n                cfg.Cookie.Name = \"application_ms_state\";\r\n                cfg.Cookie.Expiration = TimeSpan.FromDays(10);\r\n                cfg.SlidingExpiration = true;\r\n            });\r\n```\r\nthe problem is despite the value i provide in  `Expiration` the generated cookie has expiration day equals to 15 days.as you can see in following image \r\n\r\n![cookie](https://user-images.githubusercontent.com/9152515/30340920-602ed1ec-9809-11e7-80c1-32f1c480be11.png)\r\n\r\ncookies is generated for 15 days.now the next problem is same cookie expires in almost half an hour.could anyone clarify what is problem with my configuration?"},{"Id":"6580601714","Type":"IssuesEvent","CreatedAt":"2017-09-12T15:23:10","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421","RelatedDescription":"Closed issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Here is my Startup.cs\r\n\r\n``` cs\r\nservices\r\n                .AddAuthentication(options =>\r\n                {\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n                .AddJwtBearer(cfg =>\r\n                {\r\n                    cfg.RequireHttpsMetadata = false;\r\n                    cfg.SaveToken = true;\r\n                    cfg.TokenValidationParameters = new TokenValidationParameters\r\n                    {\r\n                        ValidIssuer = Configuration[\"Tokens:Issuer\"],\r\n                        ValidAudience = Configuration[\"Tokens:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Tokens:Key\"]))\r\n                    };\r\n                });\r\n```\r\n\r\nMy login action:\r\n\r\n``` cs\r\n[HttpPost]\r\n        public async Task<object> Login([FromBody] LoginViewModel model, string returnUrl = null)\r\n        {\r\n            var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, false, false);\r\n            \r\n            if (result.Succeeded)\r\n            {\r\n                var user = await _userManager.GetUserAsync(User) ;\r\n                return GenerateToken(model.Email, user.Id);\r\n            }\r\n            \r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                \r\n                var user = await _signInManager.GetTwoFactorAuthenticationUserAsync();\r\n                var result2 = await _signInManager.TwoFactorAuthenticatorSignInAsync(model.TwoFactorCode, false, false);\r\n\r\n                if (result2.Succeeded)\r\n                {\r\n                    return GenerateToken(model.Email, user.Id);\r\n                }\r\n                else\r\n                {\r\n                    return BadRequest(\"Invalid two-factor token\");\r\n                }\r\n            }\r\n            \r\n            return BadRequest(\"Invalid login attempt\");\r\n        }\r\n```\r\n\r\nGenerateToken():\r\n\r\n``` cs\r\nprivate object GenerateToken(string email, string userId)\r\n        {\r\n            var claims = new[]\r\n            {\r\n                new Claim(JwtRegisteredClaimNames.Sub, email),\r\n                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n                new Claim(new ClaimsIdentityOptions().UserIdClaimType, userId), \r\n            };\r\n\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\r\n            var token = new JwtSecurityToken(\r\n                issuer: _config[\"Tokens:Issuer\"],\r\n                audience: _config[\"Tokens:Issuer\"],\r\n                claims: claims,\r\n                expires: DateTime.Now.AddDays(30),\r\n                signingCredentials: creds\r\n            );\r\n\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n```\r\n\r\nIf I enable two-factor login for user, `GetTwoFactorAuthenticationUserAsync()` returns `null`.\r\n\r\nWhen testing example MVC app that comes with --auth option, I saw it's putting a cookie named `Identity.TwoFactorUserId` when logging if two-factor login enabled, how can I reproduce this using Web Api & Jwt? \r\n\r\nThanks."},{"Id":"6580320971","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T14:33:17","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328871750","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"The 2fa in this case should really be at the JWT issuance point, that's where login takes place, that's what needs protected."},{"Id":"6580315563","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T14:32:19","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422#issuecomment-328871495","RelatedDescription":"Commented on issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":"You can't put authorize on the login endpoint, that's kind of defeating the purpose - it needs to allow anonymous access so you can actually login. You don't really say what the problem is though."},{"Id":"6579741874","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T12:39:34","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328840068","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red when I do that a got this error:\r\n\r\n```\r\nInvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.IUserLockoutStore`1[School360.Models.User]' while attempting to activate 'School360.Api.Controllers.AccountsController'.\r\nMicrosoft.Extensions.Internal.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, bool isDefaultParameterRequired)\r\n```\r\n\r\nTrying to solve it a Add the UserStorage<TUser> like this:\r\n\r\n`builder.AddUserStore<UserStore<User>>();`\r\n\r\nBut then I got this error:\r\n\r\n`InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`1[User]'.`\r\n\r\nI had to add DbContext like this:\r\n\r\n`services.TryAddScoped<DbContext, MyDbContext>();`\r\n\r\nbut I don't know if this is ok!\r\n\r\n"},{"Id":"6578508669","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T07:49:50","Actor":"N41m0r","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328770569","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red Thx, using CheckPasswordSignInAsync solved my problem."},{"Id":"6578137538","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:57:43","Actor":"hey-red","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328745626","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@jcmordan \r\nYou can achieve it like this:\r\n\r\n```C#\r\nvar user = await _userManager.FindByNameAsync(userName);\r\nif (user == null)\r\n{\r\n      return BadRequest(\"Invalid credentials\");\r\n }\r\n\r\nvar result = await _signInManager.CheckPasswordSignInAsync(user, password, true);\r\nif (!result.Succeeded)\r\n{\r\n      return BadRequest(\"Invalid credentials\");\r\n}\r\n\r\n// Create token with user claims..\r\n```\r\n\r\n"},{"Id":"6577669418","Type":"WatchEvent","CreatedAt":"2017-09-12T02:29:57","Actor":"390493386","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6577406728","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:41:42","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328697789","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red @HaoK  What do you mean by:\r\n\r\n> With JWT you will have to manage the authentication yourself. \r\n\r\nI can't use _signInManager.PasswordSignInAsync anymore? what is the alternative?"},{"Id":"6577166380","Type":"WatchEvent","CreatedAt":"2017-09-11T23:05:30","Actor":"tparviainen","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6576536675","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T20:14:02","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1376#issuecomment-328645336","RelatedDescription":"Commented on issue \"Using Identity with JWT Authentication\" (#1376) at aspnet/Identity","RelatedBody":"Hi, I know this is closed but I'm getting this error: \r\n\r\n```\r\nInvalidOperationException: No IAuthenticationSignInHandler is configured to handle sign in for the scheme: Identity.Application\r\nMicrosoft.AspNetCore.Authentication.AuthenticationService+<SignInAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Identity.SignInManager+<SignInAsync>d__30.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Identity.SignInManager+<SignInOrTwoFactorAsync>d__52.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Identity.SignInManager+<PasswordSignInAsync>d__33.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Identity.SignInManager+<PasswordSignInAsync>d__34.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n```"},{"Id":"6575910351","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:48:06","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328605574","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Are there any plans to integrate it to Jwt authentication?"},{"Id":"6575875030","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:40:12","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328603369","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"The current TFA support is only intended for cookies flows"},{"Id":"6575867654","Type":"IssuesEvent","CreatedAt":"2017-09-11T17:38:24","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423","RelatedDescription":"Closed issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Hello,\r\n\r\nI don't understand why i have a cookie filled in my response header while i use  JWT Bearer Authentication. And i can't find way how to configure correctly.\r\n\r\nWhen I authenticate on my webAPI, in my reponse i have :  \r\n`Set-Cookie: .AspNetCore.Identity.Application=CfDJ8KKk9DCF-3ZMv5e0QMpwpsulx6nT_6d68JTe0a8VPBM ...; path=/; samesite=lax; httponly\r\napi-supported-versions: 1\r\n`\r\n\r\nMy startup look like this : \r\n\r\nConfigure : \r\n\r\n```\r\napp.UseAuthentication();\r\napp.UseMvc();\r\n```\r\n\r\nConfigureServices : \r\n\r\n```\r\n           services.Configure<IdentityOptions>(options =>\r\n            {\r\n                // Password settings\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 16;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n\r\n                // User settings\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            // Add framework services.\r\n            services.AddEntityFrameworkNpgsql()\r\n                .AddDbContext<ApplicationDbContext>(options => options.UseNpgsql(Configuration.GetConnectionString(\"ConnectionString\")));\r\n\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthentication(options =>\r\n                {\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n            .AddJwtBearer(options =>\r\n                {\r\n                    options.TokenValidationParameters = new AuthenticationConfiguration(Configuration).JwtTokenValidationParameters;\r\n                    options.SaveToken = true;\r\n                });\r\n\r\n```\r\n\r\nAnd for authenticate i use : \r\n```\r\nvar result = await _signInManager.PasswordSignInAsync(username, password, false, lockoutOnFailure: false);\r\n```\r\n\r\nIs there a way to have no cookie in my response header ?\r\n\r\nThx\r\n\r\n\r\n\r\n"},{"Id":"6575867644","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:38:23","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328602897","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Yep, dupe of #1376 "},{"Id":"6575813032","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:25:32","Actor":"hey-red","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328599413","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"See https://github.com/aspnet/Identity/issues/1376\r\nWith JWT you will have to manage the authentication yourself. \r\n"},{"Id":"6575797572","Type":"WatchEvent","CreatedAt":"2017-09-11T17:21:54","Actor":"FlavioDias97","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6574937629","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:33:05","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424","RelatedDescription":"Closed issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"What's the difference between `User.Identity.IsAuthenticated` and using like `SignInManager.IsSignedIn(User)`?  Is there any?\r\n\r\nWhy I'm asking - I'm not a huge fan of the new `@inject` keyword in Razor, mostly because of the same reasons why a lot of the JS frameworks are trending towards a unidirectional data flow.  So in the template, in /Shared/_LoginPartial I want to replace: `@inject SignInManager<ApplicationUser> SignInManager` and `SignInManager.IsSignedIn(User)` with something that doesn't use the inject keyword and was thinking about `User.Identity.IsAuthenticated`.\r\n\r\n**I looked through the source code of `IsSignedIn` and nothing stood out.  In my testing this appears to work fine.  Just wondering if there are some edge cases I'm not realizing.**\r\n\r\nBasically I want to turn this:\r\n```csharp\r\n@inject SignInManager<ApplicationUser> SignInManager\r\n@inject UserManager<ApplicationUser> UserManager\r\n\r\n@if (SignInManager.IsSignedIn(User))\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @UserManager.GetUserName(User)!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```\r\n\r\n**Into this:**\r\n``` csharp\r\n@if (User.Identity.IsAuthenticated)\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @User.Identity.Name!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```"},{"Id":"6574926650","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:31:01","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424#issuecomment-328547548","RelatedDescription":"Commented on issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"User.IsAuthenticated will work even if the current user identity doesn't come from ASP.NET identity (for example a bearer token, or Integrated authentication). SignInManager is Identity only."},{"Id":"6574913656","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:28:38","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424","RelatedDescription":"Opened issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"What's the difference between `User.Identity.IsAuthenticated` and using like `SignInManager.IsSignedIn(User)`?  Is there any?\r\n\r\nWhy I'm asking - I'm not a huge fan of the new `@inject` keyword in Razor, mostly because of the same reasons why a lot of the JS frameworks are trending towards a unidirectional data flow.  So in the template, in /Shared/_LoginPartial I want to replace: `@inject SignInManager<ApplicationUser> SignInManager` and `SignInManager.IsSignedIn(User)` with something that doesn't use the inject keyword and was thinking about `User.Identity.IsAuthenticated`.\r\n\r\n**I looked through the source code of `IsSignedIn` and nothing stood out.  In my testing this appears to work fine.  Just wondering if there are some edge cases I'm not realizing.**\r\n\r\nBasically I want to turn this:\r\n```csharp\r\n@inject SignInManager<ApplicationUser> SignInManager\r\n@inject UserManager<ApplicationUser> UserManager\r\n\r\n@if (SignInManager.IsSignedIn(User))\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @UserManager.GetUserName(User)!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```\r\n\r\n**Into this:**\r\n``` csharp\r\n@if (User.Identity.IsAuthenticated)\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @User.Identity.Name!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Index\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Index\">Log in</a></li>\r\n    </ul>\r\n}\r\n```"},{"Id":"6574586170","Type":"ForkEvent","CreatedAt":"2017-09-11T13:25:48","Actor":"hamdiahmedamin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/hamdiahmedamin/Identity","RelatedDescription":"Forked aspnet/Identity to hamdiahmedamin/Identity","RelatedBody":null},{"Id":"6574344433","Type":"IssuesEvent","CreatedAt":"2017-09-11T12:32:12","Actor":"N41m0r","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423","RelatedDescription":"Opened issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Hello,\r\n\r\nI don't understand why i have a cookie filled in my response header while i use  JWT Bearer Authentication. And i can't find way how to configure correctly.\r\n\r\nWhen I authenticate on my webAPI, in my reponse i have :  \r\n`Set-Cookie: .AspNetCore.Identity.Application=CfDJ8KKk9DCF-3ZMv5e0QMpwpsulx6nT_6d68JTe0a8VPBM ...; path=/; samesite=lax; httponly\r\napi-supported-versions: 1\r\n`\r\n\r\nMy startup look like this : \r\n\r\nConfigure : \r\n\r\n```\r\napp.UseAuthentication();\r\napp.UseMvc();\r\n```\r\n\r\nConfigureServices : \r\n\r\n```\r\n           services.Configure<IdentityOptions>(options =>\r\n            {\r\n                // Password settings\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 16;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n\r\n                // User settings\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            // Add framework services.\r\n            services.AddEntityFrameworkNpgsql()\r\n                .AddDbContext<ApplicationDbContext>(options => options.UseNpgsql(Configuration.GetConnectionString(\"ConnectionString\")));\r\n\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthentication(options =>\r\n                {\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n            .AddJwtBearer(options =>\r\n                {\r\n                    options.TokenValidationParameters = new AuthenticationConfiguration(Configuration).JwtTokenValidationParameters;\r\n                    options.SaveToken = true;\r\n                });\r\n\r\n```\r\n\r\nAnd for authenticate i use : \r\n`\r\nvar result = await _signInManager.PasswordSignInAsync(username, password, false, lockoutOnFailure: false);\r\n`\r\n\r\nIs there a way to have no cookie in my response header ?\r\n\r\nThx\r\n\r\n\r\n\r\n"},{"Id":"6573224711","Type":"IssuesEvent","CreatedAt":"2017-09-11T07:53:42","Actor":"AlexOliinyk1","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422","RelatedDescription":"Opened issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":"Hi All\r\n\r\nI can't find way how configure my application using bearer token authorization, I used this article as example https://wildermuth.com/2017/08/19/Two-AuthorizationSchemes-in-ASP-NET-Core-2\r\n\r\nI'm implemented it successful   on the empty application. But after moving logic to my already created asp.net core 2 and anngular  4 using angular cli. \r\n\r\nI'm got error like this '404 not found ' for more details  https://github.com/nbarbettini/SimpleTokenProvider/issues/7 \r\n![image](https://user-images.githubusercontent.com/10448723/30217173-0639af84-94be-11e7-9e0c-27ec6463e54b.png)\r\n\r\nBut when I removed authorize attribute this route working. \r\n\r\nProblem is I can't configure the server as I think, because I saw as token was passed to the server in the header. \r\n\r\n\r\nmy startup looks like this \r\n\r\n![image](https://user-images.githubusercontent.com/10448723/30217331-7be106b0-94be-11e7-9e37-98e77d68a89c.png)\r\n![image](https://user-images.githubusercontent.com/10448723/30217347-87e40c46-94be-11e7-813e-00a2ee1afee0.png)\r\n\r\n\r\n"},{"Id":"6573134814","Type":"WatchEvent","CreatedAt":"2017-09-11T07:28:40","Actor":"ileego","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6573051327","Type":"IssuesEvent","CreatedAt":"2017-09-11T07:03:38","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421","RelatedDescription":"Opened issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Here is my Startup.cs\r\n\r\n```\r\nservices\r\n                .AddAuthentication(options =>\r\n                {\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n                .AddJwtBearer(cfg =>\r\n                {\r\n                    cfg.RequireHttpsMetadata = false;\r\n                    cfg.SaveToken = true;\r\n                    cfg.TokenValidationParameters = new TokenValidationParameters\r\n                    {\r\n                        ValidIssuer = Configuration[\"Tokens:Issuer\"],\r\n                        ValidAudience = Configuration[\"Tokens:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Tokens:Key\"]))\r\n                    };\r\n                });\r\n```\r\n\r\nMy login action:\r\n\r\n```\r\n[HttpPost]\r\n        public async Task<object> Login([FromBody] LoginViewModel model, string returnUrl = null)\r\n        {\r\n            var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, false, false);\r\n            \r\n            if (result.Succeeded)\r\n            {\r\n                var user = await _userManager.GetUserAsync(User) ;\r\n                return GenerateToken(model.Email, user.Id);\r\n            }\r\n            \r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                \r\n                var user = await _signInManager.GetTwoFactorAuthenticationUserAsync();\r\n                var result2 = await _signInManager.TwoFactorAuthenticatorSignInAsync(model.TwoFactorCode, false, false);\r\n\r\n                if (result2.Succeeded)\r\n                {\r\n                    return GenerateToken(model.Email, user.Id);\r\n                }\r\n                else\r\n                {\r\n                    return BadRequest(\"Invalid two-factor token\");\r\n                }\r\n            }\r\n            \r\n            return BadRequest(\"Invalid login attempt\");\r\n        }\r\n```\r\n\r\nGenerateToken():\r\n\r\n```\r\nprivate object GenerateToken(string email, string userId)\r\n        {\r\n            var claims = new[]\r\n            {\r\n                new Claim(JwtRegisteredClaimNames.Sub, email),\r\n                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n                new Claim(new ClaimsIdentityOptions().UserIdClaimType, userId), \r\n            };\r\n\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\r\n            var token = new JwtSecurityToken(\r\n                issuer: _config[\"Tokens:Issuer\"],\r\n                audience: _config[\"Tokens:Issuer\"],\r\n                claims: claims,\r\n                expires: DateTime.Now.AddDays(30),\r\n                signingCredentials: creds\r\n            );\r\n\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n```\r\n\r\nIf I enable TwoFactor for user, GetTwoFactorAuthenticationUserAsync() returns null. How can I configure?\r\n\r\nThanks."},{"Id":"6572558118","Type":"ForkEvent","CreatedAt":"2017-09-11T03:17:18","Actor":"khoarin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/khoarin/Identity","RelatedDescription":"Forked aspnet/Identity to khoarin/Identity","RelatedBody":null},{"Id":"6571149757","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T10:30:36","Actor":"kinosang","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1395#issuecomment-328333776","RelatedDescription":"Commented on issue \"Port ChangePhoneNumber fix to 2.0.1\" (#1395) at aspnet/Identity","RelatedBody":"I wanna to know when will this patch released?\r\n\r\nor should I use the nightly build before you publish it?"},{"Id":"6571093244","Type":"PullRequestEvent","CreatedAt":"2017-09-10T09:39:53","Actor":"tugberkugurlu","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1420","RelatedDescription":"Opened pull request \"Rename IUserAuthenticatorInfoStore.cs to IUserAuthenticatorKeyStore.cs\" (#1420) at aspnet/Identity","RelatedBody":"so that it matches the name of the class and makes it easier to find"},{"Id":"6571014176","Type":"WatchEvent","CreatedAt":"2017-09-10T08:35:09","Actor":"t13ka","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6583185749","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:49:03","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#issuecomment-329051183","RelatedDescription":"Commented on issue \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"The latest commit 64f88f9555267a94ce0d59f0cb41a061cac1267a has the change to use the same request processing loop in both HTTP/1.x and HTTP/2. The class hierarchy is now (still using the old names for some things)\r\n\r\n```\r\n        Frame\r\n          ^\r\n          |\r\n     _____|______\r\n    /            \\\r\nHttp1Frame   Http2Stream\r\n    ^             ^\r\n    |             |\r\nFrameOfT    Http2StreamOfT\r\n```\r\n\r\nThe request processing loop is in `Frame`. There is still some duplication in `FrameOfT` and `Http2StreamOfT` to deal with hiding the generic parameter up in the hierarchy, but that duplication is minor."},{"Id":"6583174191","Type":"PushEvent","CreatedAt":"2017-09-13T03:44:58","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/a950c54c4432cf9e7d7429f2e32f65831138acee...64f88f9555267a94ce0d59f0cb41a061cac1267a","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6582941347","Type":"WatchEvent","CreatedAt":"2017-09-13T02:07:56","Actor":"sweetbai","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6582242664","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T21:43:49","Actor":"Priya91","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1802#issuecomment-328993135","RelatedDescription":"Commented on issue \"ASP.NET Core Kestrel on Linux never prompts for client certificate\" (#1802) at aspnet/KestrelHttpServer","RelatedBody":"cc @bartonjs"},{"Id":"6581971886","Type":"PushEvent","CreatedAt":"2017-09-12T20:37:42","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/d45cf23d9615b1af5ab2c90f1f1b74529652fbb5...a950c54c4432cf9e7d7429f2e32f65831138acee","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6581624687","Type":"WatchEvent","CreatedAt":"2017-09-12T19:14:04","Actor":"jorbor","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6579944243","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T13:22:18","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138344934","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"I think you are going too deep; it doesn't compile yet 😉 \r\n\r\nThough it should check the headers and trigger them prior to sending the file data? (i.e. they are normal triggered by a `Response.Body.Write` which this bypasses)\r\n\r\nTransport level send file wouldn't be able to do that; so it should intercept even if the transport supported `SendFile` for prep-work?\r\n\r\nIf `ContentLength` is not set it should also chunk? Not sure how large a single chunk can be (i.e. whole file) as it shouldn't chunk inside the file data, or is altering `SendFile`'s expected behaviour too much (i.e. just top and tail)?"},{"Id":"6579728320","Type":"WatchEvent","CreatedAt":"2017-09-12T12:36:28","Actor":"vivekmishra-sft","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6579224094","Type":"WatchEvent","CreatedAt":"2017-09-12T10:31:31","Actor":"myesn","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6578369079","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T07:13:23","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138268076","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"For a response, something is 'grouping' the data that needs to be sent together (e.g on Flush). Then this 'group' is sent as a a whole (so no data from other responses can interleave).\r\nIn general: How is this implemented? Is this grouping done by `WritableBuffer` and is `_contextLock` responsible for appending a `WritableBuffer` to the output stream? Or something else?\r\nHere specifically: How does `SendFileAsync` get 'grouped' with the response headers?"},{"Id":"6577236307","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:31:46","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328687594","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"@VSadov I restarted the build"},{"Id":"6577182087","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:11:24","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328684401","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"CC @jaredpar "},{"Id":"6577151203","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:00:09","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328682567","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"Actually, I do not know how to rerun the tests..."},{"Id":"6577147780","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:58:54","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328682352","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"Please review this.\r\nThe PR is passing now. I will rerun once more - to be sure.\r\n\r\n@pakrym - It should no longer require 1.1 "},{"Id":"6577091015","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:39:22","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2016#issuecomment-328678956","RelatedDescription":"Commented on issue \"HTTPS binding configuration for Kestrel\" (#2016) at aspnet/KestrelHttpServer","RelatedBody":"@shirhatti where are we with this one?"},{"Id":"6577023771","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:17:37","Actor":"scionwest","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328674840","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"@TotzkePaul Ideally we wouldn't have to hard-code our IP/ports. This should be 100% configurable so we don't have to recompile the app if we decide to deploy the app to a different server having a different IP."},{"Id":"6576662232","Type":"WatchEvent","CreatedAt":"2017-09-11T20:43:28","Actor":"manastalukdar","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6576088349","Type":"PushEvent","CreatedAt":"2017-09-11T18:28:48","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/12d7fddf2297f087c47b9421f3ab6d92952a0df3...d45cf23d9615b1af5ab2c90f1f1b74529652fbb5","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6576060091","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T18:22:24","Actor":"pranavkm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2056#discussion_r138151134","RelatedDescription":"Commented on pull request \"Use ConcurrentQueue in TestApplicationErrorLogger [1.1.3]\" (#2056) at aspnet/KestrelHttpServer","RelatedBody":"👍 "},{"Id":"6575183310","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T15:17:16","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138102603","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"> What ever code is writing the headers before sendfile is writing the content.\r\n\r\nUnlocking in between those calls is fine. We're just making sure the buffer isn't corrupted (i.e. 2 calls don't write to the WritableBuffer in parallel). \r\n\r\n> In general, why don't responses interleave? Does a response get packed as a \"WritableBuffer\"? Or is there some other lock?\r\n\r\nI'm not sure what you mean?"},{"Id":"6575004789","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T14:45:06","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138092486","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"> What is WriteHeaders?\r\n\r\nWhat ever code writing the headers before sendfile is writing the content.\r\n\r\n> Nope.\r\n\r\nIn general, why don't responses interleaved? Does a response get packed as a \"WritableBuffer\"? Or is there some other lock?"},{"Id":"6574894763","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T14:25:16","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138086224","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"What is WriteHeaders?\r\n\r\n> This unlocks in-between. Can http2 interleave responses in a way that this would be an issue?\r\n\r\nNope."},{"Id":"6574708721","Type":"WatchEvent","CreatedAt":"2017-09-11T13:50:21","Actor":"ralphy15","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6574676888","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T13:44:00","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138073404","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"If you have some code like:\r\n```\r\nWriteHeaders\r\nSendFile\r\n```\r\nThis unlocks in-between. Can http2 interleave responses in a way that this would be an issue?"},{"Id":"6574225205","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T12:02:52","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138049477","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"Would be automatic"},{"Id":"6573767057","Type":"WatchEvent","CreatedAt":"2017-09-11T10:02:15","Actor":"wjkang","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6573549076","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T09:12:56","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138017803","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"Today we prevent overlapping writes by locking. SendFile is basically a write."},{"Id":"6573397543","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T08:38:12","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138009652","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"This semaphore, is that something that a user of `IHttpSendFileFeature` must manually lock/unlock to ensure the entire response doesn't interleave with other output?"},{"Id":"6572936727","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T06:23:57","Actor":"ayende","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1802#issuecomment-328428492","RelatedDescription":"Commented on issue \"ASP.NET Core Kestrel on Linux never prompts for client certificate\" (#1802) at aspnet/KestrelHttpServer","RelatedBody":"I investigate this a bit more, and I think that the main issue is here:\r\nhttps://github.com/dotnet/corefx/blob/0fd3d2c5bcb1a83e7ebd8025e4810e11e231ce03/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs#L323\r\n\r\nThe problem is that it adds all the local and user certs by default, and on the Windows side, it doesn't add anything.\r\n\r\nSending an empty list on SSL client cert basically means: \"gimme what you got\", while a list limits that.\r\n\r\nIt seems to be that sending the list (which in our tests http://issues.hibernatingrhinos.com/issue/RavenDB-8524) includes hundreds of entries is not what you want to do.\r\n\r\nThis is called here:\r\nhttps://github.com/dotnet/corefx/blob/0fd3d2c5bcb1a83e7ebd8025e4810e11e231ce03/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs#L97\r\n\r\nThis is a reals tumbling block for us. Our situation calls for the user to use any client cert and the server side will handle the validation. However, with this logic on Linux, the admin is now forced into a lot of running around and managing certs that we would really wish to avoid.\r\n\r\nAllow us to specify it would be much better, yes. Even if we need to write special code for Linux / Windows for this case, but right now this seems to be handled way too deep in the stack for us to have any sort of access to it."},{"Id":"6572352896","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T01:38:52","Actor":"vinhhrv","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1267#issuecomment-328393784","RelatedDescription":"Commented on issue \"Kestrel randomly locked and stop responding.\" (#1267) at aspnet/KestrelHttpServer","RelatedBody":"@cesarbs, i sent to your email.\r\nThanks for support."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6583033626","Type":"IssuesEvent","CreatedAt":"2017-09-13T02:47:25","Actor":"qibucloud","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682","RelatedDescription":"Opened issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"```@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"#\">\r\n                    <i></i><font>@(item.Name)</font>\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a>\r\n               </li>\r\n}\r\n\r\nMicrosoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\r\nindex.cshtml(162,11): Error RZ9999: The \"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\r\nindex.cshtml(162,164): Error RZ9999: Encountered end tag \"a\" with no matching start tag.  Are your start/end tags properly balanced?\r\nindex.cshtml(162,168): Error RZ9999: Encountered end tag \"li\" with no matching start tag.  Are your start/end tags properly balanced?\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)```"},{"Id":"6582699117","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:21:04","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138498963","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Next PR"},{"Id":"6582698200","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:10:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138497723","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Where is this called? Or is that coming in the next PR?"},{"Id":"6582544001","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T23:19:01","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1460#issuecomment-329011223","RelatedDescription":"Commented on issue \"@using directive IntelliSense does not auto complete\" (#1460) at aspnet/Razor","RelatedBody":"On a related note (I suspect), extra whitespace after the `@using` directive loses IntelliSense completely. E.g. `@using  System` is displayed in white rather than colourized."},{"Id":"6581240197","Type":"PullRequestEvent","CreatedAt":"2017-09-12T17:37:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681","RelatedDescription":"Opened pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"There's still nothing processing the notifications in the background.\r\nThis is all the plumbing for dirty checking and publishing updates."},{"Id":"6581239779","Type":"PushEvent","CreatedAt":"2017-09-12T17:37:11","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/37a90ef484f9cfefbac925f6c5a1d3c3326204dc...7cca8618ea81037290c6d29ed16664a3aeac315c","RelatedDescription":"Pushed to refs/heads/rynowak/mt-2 at aspnet/Razor","RelatedBody":null},{"Id":"6581236580","Type":"PushEvent","CreatedAt":"2017-09-12T17:36:28","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/c05e0b79ffacb59663738b8bb2d3fb35d719d782...37a90ef484f9cfefbac925f6c5a1d3c3326204dc","RelatedDescription":"Pushed to refs/heads/rynowak/mt-2 at aspnet/Razor","RelatedBody":null},{"Id":"6579175920","Type":"WatchEvent","CreatedAt":"2017-09-12T10:19:57","Actor":"sdgoh","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Razor","RelatedBody":null},{"Id":"6577042228","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:23:32","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Closed issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."},{"Id":"6577042053","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:23:29","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-328675989","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Implementation detail of #6565. Should be investigated and tracked there."},{"Id":"6575027923","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570","RelatedDescription":"Closed issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"1. File->New->Web App\r\n2. Go to Index.cshtml\r\n3. Add tag helper with `ModelExpression` attribute\r\n4. Use it and set it to unsupported expression type (`\"A\" + \"B\"`)\r\n\r\nExpected: error squiggly in VS\r\n\r\nActual: no errors in VS, fails at runtime\r\n\r\n"},{"Id":"6575027914","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328553600","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I think this is a won't fix then. We don't attempt to do deep analysis and verification of these expressions and we don't want to.\r\n\r\nSomeone scream if you think we should care about this."},{"Id":"6575009145","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:45:52","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328552439","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"**Hi, it looks like you are posting on a closed issue/PR/commit!**\r\n\r\nWe're very likely to lose track of your bug/feedback/question unless you:\r\n1. Open a new issue\r\n2. Explain very clearly what you need help with\r\n3. If you think you have found a bug, include detailed repro steps so that we can investigate the problem\r\n\r\nThanks!"},{"Id":"6570034668","Type":"IssueCommentEvent","CreatedAt":"2017-09-09T16:41:54","Actor":"Ciantic","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328288766","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"I think the main problem is that Visual Studio asp.net core xunit template creates a csproj file that is already broken.\r\n\r\nE.g. here is what it created in my project:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/OksidiCom.UserService.Test.csproj\r\n\r\nAnd it gives the Razor compilation error in here:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/Tests.cs#L120 (LoginIssuesToken test)\r\n\r\nIf there is a simple fix for manipulating the csproj, the VS template for xunit test project should include it already."},{"Id":"6568603451","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T21:44:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328221239","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I investigated this and looks like razor might not have enough information in design time to make this a design time error.\r\n\r\nFor example, in this ModelExpression attribute `for`,\r\n```HTML\r\n<test for=\"StringProp+1\"></test>\r\n```\r\nthe generated code looks like this,\r\n```C#\r\n__WebApplication5_TagHelpers_TestTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.StringProp+1);\r\n```\r\nwhich is valid c# and compiles successfully. It is only caught at runtime [here](https://github.com/aspnet/Mvc/blob/a23307e2b1e7934e2c8d69774cda1b36778f697b/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Internal/ExpressionMetadataProvider.cs#L80) in Mvc.\r\nThis seems to be more of a \"by design\". @rynowak @NTaylorMullen thoughts on if we want to come up with some sort of workaround for this?"},{"Id":"6567281771","Type":"DeleteEvent","CreatedAt":"2017-09-08T15:48:40","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"rynowak/project-manager-redux\" at aspnet/Razor","RelatedBody":null},{"Id":"6567281698","Type":"PullRequestEvent","CreatedAt":"2017-09-08T15:48:39","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677","RelatedDescription":"Closed pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Splits the 'trigger' out from the change manager. The next change will\r\nadd more functionality to DPSMBase."},{"Id":"6567281536","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T15:48:37","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#issuecomment-328140954","RelatedDescription":"Commented on issue \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"82866d9442ae7914980576fd821e162d6c30ecbb"},{"Id":"6567229197","Type":"PushEvent","CreatedAt":"2017-09-08T15:37:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922...82866d9442ae7914980576fd821e162d6c30ecbb","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6567107112","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-08T15:11:14","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137815212","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"github doesn't update the diff when you push to the base branch"},{"Id":"6566326573","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T12:12:45","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328086945","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"In addition to using C# tuples, [as shown above](https://github.com/aspnet/Razor/issues/715#issuecomment-328084286), using local C# functions can also make it simpler to pass multiple arguments:\r\n\r\n```\r\nIHtmlContent Render<T>(Func<T, IHtmlContent> helper, T item = default(T)) =>\r\n    helper(item);\r\n\r\nFunc<object, IHtmlContent> Person(string fn, string ln, int age) =>\r\n    @<p>@fn @ln is @age years old.</p>;\r\n\r\n@Render(Person(\"John\", \"Doe\", 42))\r\n```\r\n\r\n`Render` above is only for cosmetics as `@Person(\"John\", \"Doe\", 42)(null)` would look ugly."},{"Id":"6566275115","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T11:58:20","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328084286","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"@NTaylorMullen [said](https://github.com/aspnet/Razor/issues/715#issuecomment-198468516):\r\n\r\n> This still does not solve the problem of a parameterized Razor code. What if there are two or three parameters of different types?\r\n\r\n>>As unfortunate as it might be you'd need to provide some sort of poco object in that case. A potential, less clean solution would be using variables from outside of the `@<p>...</p>`:\r\n\r\nThe example given was:\r\n\r\n```\r\nvar firstName = \"John\";\r\nvar lastName = \"Doe\";\r\n\r\nFunc<int, IHtmlContent> person = @<p>@firstName @lastName is @item years old.</p>;\r\n\r\n@person(30)\r\n```\r\n\r\nBut how about using a C# tuple to ship several values into the first argument? As in:\r\n\r\n```\r\nFunc<(string FirstName, string LastName, int Age), IHtmlContent> person =\r\n    @<p>@item.FirstName @item.LastName is @item.Age years old.</p>;\r\n\r\n@person((\"John\", \"Doe\", 42))\r\n```\r\n\r\nThe only odd looking bit may be the double parentheses needed at the call sites but that's far better than having to rely on closures for parameterization."},{"Id":"6564195627","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-07T23:38:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137681075","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Not sure why these changes are displayed here while the base branch is set to `rynowak/foreground-theory`"},{"Id":"6564178318","Type":"CommitCommentEvent","CreatedAt":"2017-09-07T23:37:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/commit/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922#commitcomment-24158630","RelatedDescription":"Commented on commit \"1806d26e9a8d3cb6cc41ce9b5858ee61c5373922\" at aspnet/Razor","RelatedBody":"Yolo merge 🙈 "},{"Id":"6564082876","Type":"IssueCommentEvent","CreatedAt":"2017-09-07T23:00:33","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-327950076","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Much appreciated @rynowak "},{"Id":"6564075492","Type":"IssuesEvent","CreatedAt":"2017-09-07T22:57:55","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Opened issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."},{"Id":"6563770151","Type":"IssuesEvent","CreatedAt":"2017-09-07T21:35:56","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1679","RelatedDescription":"Opened issue \"Add helpers to deal with `IHtmlContent`\" (#1679) at aspnet/Razor","RelatedBody":"We have a fair amount of code that deals with `IHtmlContent` and related interfaces. To centralize that and ease things for all, add methods like `IsLiteral()`, `IsMixedContent()`, `GetRaw()` and `GetAsItWillBeRendered(HtmlEncoder encoder)`.\r\n\r\nGoal: As a tag helper author, I have an easy way to get the value of an attribute."},{"Id":"6563358297","Type":"PushEvent","CreatedAt":"2017-09-07T20:16:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/aa445ee9b45d780cb1a33e0ff0f153879e5a1a4a...1806d26e9a8d3cb6cc41ce9b5858ee61c5373922","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6563358283","Type":"PullRequestEvent","CreatedAt":"2017-09-07T20:16:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1676","RelatedDescription":"Merged pull request \"Add [ForegroundTheory]\" (#1676) at aspnet/Razor","RelatedBody":""},{"Id":"6563319925","Type":"PushEvent","CreatedAt":"2017-09-07T20:07:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/ca1de46fc908b0ffdb7be98371a632d3cc3b71a9...5ee4c8ec4d94e1c79a09bf7ddcf369c47ba3264c","RelatedDescription":"Pushed to refs/heads/rynowak/foreground-theory at aspnet/Razor","RelatedBody":null}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6563238976","Type":"WatchEvent","CreatedAt":"2017-09-07T19:46:57","Actor":"m6t","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6545178208","Type":"WatchEvent","CreatedAt":"2017-09-04T02:21:09","Actor":"foxfu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6544528482","Type":"WatchEvent","CreatedAt":"2017-09-03T17:29:33","Actor":"alefranz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6542239491","Type":"WatchEvent","CreatedAt":"2017-09-02T02:49:33","Actor":"BlueColorDemon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6538082530","Type":"WatchEvent","CreatedAt":"2017-09-01T03:11:44","Actor":"ken1211","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6534627582","Type":"WatchEvent","CreatedAt":"2017-08-31T11:36:46","Actor":"csyszf","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6525086646","Type":"WatchEvent","CreatedAt":"2017-08-29T14:48:04","Actor":"anserk","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516751305","Type":"WatchEvent","CreatedAt":"2017-08-27T13:55:26","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516747587","Type":"WatchEvent","CreatedAt":"2017-08-27T13:52:23","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6512833226","Type":"WatchEvent","CreatedAt":"2017-08-25T15:49:37","Actor":"MattPress","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6509699760","Type":"WatchEvent","CreatedAt":"2017-08-24T22:04:39","Actor":"runebakjacobsen","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6506925369","Type":"WatchEvent","CreatedAt":"2017-08-24T11:03:36","Actor":"cemalshukriev","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"},{"Id":"6498883578","Type":"WatchEvent","CreatedAt":"2017-08-22T19:12:28","Actor":"andregr15","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6495189019","Type":"WatchEvent","CreatedAt":"2017-08-22T03:10:54","Actor":"babtsoualiaksandr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6493226643","Type":"IssueCommentEvent","CreatedAt":"2017-08-21T16:09:19","Actor":"anurse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Announcements/issues/237#issuecomment-323786938","RelatedDescription":"Commented on issue \"Microsoft.Extensions.PlatformAbstractions has been removed\" (#237) at aspnet/Announcements","RelatedBody":"Note: As part of this change, you could encounter the following error if you build your WebHost by injecting `IStartup` directly into the container, rather than calling `.UseStartup` or `.Configure`:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentException: A valid non-empty application name must be provided.\r\nParameter name: applicationName\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingEnvironmentExtensions.Initialize(IHostingEnvironment hostingEnvironment, String applicationName, String contentRootPath, WebHostOptions options)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at ConsoleApp11.Program.Main(String[] args) in C:\\Users\\dfowler\\documents\\visual studio 2017\\Projects\\ConsoleApp11\\ConsoleApp11\\Program.cs:line 11\r\n```\r\n\r\nThis occurs because we need to get the name of the application. Previously, we used some heuristics to detect it, but we removed some of them in 2.0. In the scenario above, where `IStartup` is manually injected into the container, add the following call to your `WebHostBuilder` set-up sequence:\r\n\r\n```\r\nWebHost.CreateDefaultBuilder(args)\r\n    // ... other Web Host configuration calls\r\n    .UseSetting(WebHostDefaults.ApplicationKey, \"[Application Name]\")\r\n```\r\n\r\n**NOTE: This is only required in 2.0 and only when you do NOT call `.UseStartup` or `.Configure`**\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1137 for further info."},{"Id":"6487154520","Type":"WatchEvent","CreatedAt":"2017-08-20T04:02:52","Actor":"fahadabdulaziz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6484292850","Type":"WatchEvent","CreatedAt":"2017-08-18T23:29:17","Actor":"DejanMilicic","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481758203","Type":"WatchEvent","CreatedAt":"2017-08-18T16:17:50","Actor":"andreabbondanza","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481116208","Type":"WatchEvent","CreatedAt":"2017-08-18T14:54:17","Actor":"imranakram","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6480883973","Type":"WatchEvent","CreatedAt":"2017-08-18T14:25:21","Actor":"gldraphael","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6473732109","Type":"WatchEvent","CreatedAt":"2017-08-17T16:29:24","Actor":"modulexcite","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6470181527","Type":"WatchEvent","CreatedAt":"2017-08-17T08:23:42","Actor":"svasorcery","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6464186890","Type":"ForkEvent","CreatedAt":"2017-08-16T14:42:02","Actor":"osmarvcneto","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/osmarvcneto/Announcements","RelatedDescription":"Forked aspnet/Announcements to osmarvcneto/Announcements","RelatedBody":null},{"Id":"6462831810","Type":"WatchEvent","CreatedAt":"2017-08-16T11:45:52","Actor":"karelsteinmetz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461972156","Type":"WatchEvent","CreatedAt":"2017-08-16T09:29:11","Actor":"holysdking","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461518520","Type":"WatchEvent","CreatedAt":"2017-08-16T08:21:31","Actor":"kangyangyang","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460495200","Type":"WatchEvent","CreatedAt":"2017-08-16T04:24:35","Actor":"netcore-jroger","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460216180","Type":"WatchEvent","CreatedAt":"2017-08-16T03:01:08","Actor":"raborse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460184131","Type":"WatchEvent","CreatedAt":"2017-08-16T02:52:00","Actor":"hosttor","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":24,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-09-13T05:30:13.7302464Z","RunDurationInMilliseconds":6176}