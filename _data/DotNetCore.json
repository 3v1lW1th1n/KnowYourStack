{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9930827489","Type":"PullRequestEvent","CreatedAt":"2019-07-02T05:25:32","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25525","RelatedDescription":"Merged pull request \"test DisplayUnits/DisplayRateTimeScale properties\" (#25525) at dotnet/coreclr","RelatedBody":"Checking more boxes for https://github.com/dotnet/coreclr/issues/23217..."},{"Id":"9930292963","Type":"PullRequestEvent","CreatedAt":"2019-07-02T02:47:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25517","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,corert\" (#25517) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky"},{"Id":"9930290759","Type":"PullRequestEvent","CreatedAt":"2019-07-02T02:46:38","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25513","RelatedDescription":"Merged pull request \"Delete dead code\" (#25513) at dotnet/coreclr","RelatedBody":""},{"Id":"9930289982","Type":"PullRequestEvent","CreatedAt":"2019-07-02T02:46:25","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25514","RelatedDescription":"Merged pull request \"Get rid of warnings while building tests\" (#25514) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9930722130","Type":"PullRequestEvent","CreatedAt":"2019-07-02T04:54:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11695","RelatedDescription":"Merged pull request \"Merge master into release/3.0.1xx\" (#11695) at dotnet/cli","RelatedBody":"This was a clean merge."},{"Id":"9930721234","Type":"PullRequestEvent","CreatedAt":"2019-07-02T04:54:21","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11693","RelatedDescription":"Merged pull request \"Branding update to \"preview8\"; CLI\" (#11693) at dotnet/cli","RelatedBody":"Branding update to \"preview8\"; SDK\r\n"},{"Id":"9930473242","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:38:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11696","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11696) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.08\r\n- **Date Produced**: 7/2/2019 3:38 AM\r\n- **Commit**: 788f9afff7b5c4cbb2115c688eabf4560bd334f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"9930452834","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:32:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11695","RelatedDescription":"Opened pull request \"Merge master into release/3.0.1xx\" (#11695) at dotnet/cli","RelatedBody":"This was a clean merge."},{"Id":"9930442565","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:29:53","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11694","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11694) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/2/2019 2:56 AM\r\n- **Commit**: e01aac6709b8cd81522fa23677a8e49d004983ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n"},{"Id":"9930335026","Type":"PullRequestEvent","CreatedAt":"2019-07-02T02:59:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11694","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/sdk\" (#11694) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/2/2019 2:56 AM\r\n- **Commit**: e01aac6709b8cd81522fa23677a8e49d004983ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n"},{"Id":"9929846475","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:34:37","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11691","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11691) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 2:57 PM\r\n- **Commit**: 46e1f004a34fe8ed6f608d20d5f8b0b862a245c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n"},{"Id":"9929797455","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:19:07","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11693","RelatedDescription":"Opened pull request \"ip: Branding update to \"preview8\"; CLI\" (#11693) at dotnet/cli","RelatedBody":"Branding update to \"preview8\"\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9929866302","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:40:40","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1300","RelatedDescription":"Opened pull request \"Reduces System.Reflection.Emit to match CoreFX\" (#1300) at dotnet/standard","RelatedBody":"***Do not merge** We need to sign-off from ship room because it's a breaking change.*\r\n\r\n---\r\n\r\nFor .NET Standard 2.1 we planned to extend Reflection Emit match the .NET Framework API surface but we never got around adding those APIs in .NET Core 3.0. Given that these APIs are rarely used, the proposal is to remove them from the .NET Standard 2.1 (not that this isn't a breaking change from .NET Standard 2.0 but it is a breaking change from preview versions of .NET Standard 2.1).\r\n\r\nSee issue dotnet/corefx#36716 for details."},{"Id":"9925770652","Type":"PullRequestEvent","CreatedAt":"2019-07-01T13:04:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1299","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1299) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190630.3\r\n- **Date Produced**: 6/30/2019 6:47 PM\r\n- **Commit**: da3ba7ebe34771dde769b65dfb7f78fa55a5abb6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19330.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9925695100","Type":"PullRequestEvent","CreatedAt":"2019-07-01T12:54:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1299","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1299) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190630.3\r\n- **Date Produced**: 6/30/2019 6:47 PM\r\n- **Commit**: da3ba7ebe34771dde769b65dfb7f78fa55a5abb6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19330.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9925418606","Type":"PullRequestEvent","CreatedAt":"2019-07-01T12:14:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1298","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1298) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9925354436","Type":"PullRequestEvent","CreatedAt":"2019-07-01T12:04:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1298","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1298) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9920821879","Type":"PullRequestEvent","CreatedAt":"2019-06-30T13:03:37","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1297","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1297) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.6\r\n- **Date Produced**: 6/30/2019 12:46 AM\r\n- **Commit**: 68763d3ce7d9db960aadecc0773e7c7b906cc3e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9930588151","Type":"PullRequestEvent","CreatedAt":"2019-07-02T04:13:58","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39096","RelatedDescription":"Merged pull request \"Use same Encoding for Asc() and Chr()\" (#39096) at dotnet/corefx","RelatedBody":"Fixes #34256"},{"Id":"9930588139","Type":"IssuesEvent","CreatedAt":"2019-07-02T04:13:58","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34256","RelatedDescription":"Closed issue \"Microsoft.VisualBasic.Asc/Chr use the Default Encoding, witch is different between .Net Core 3.0 Preview 1 and .Net Framework\" (#34256) at dotnet/corefx","RelatedBody":" Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\nHi,\r\nI noticed that the Microsoft.VisualBasic.Asc and Microsoft.VisualBasic.Chr are relaying on System.Text.Encoding.Default, but since this Returns Different Results in the .Net Framework(CodePage: 1252 on my System) and in .Net Core(CodePage: 65001 on my System), are these not directly compatible.\r\nEven if I add a NuGet Reference to 'System.Text.Encoding.CodePages' and Call 'Encoding.RegisterProvider(CodePagesEncodingProvider.Instance)' there are still differences.\r\nFor Excample: \r\nConsole.Writeline(Asc(Chrw(172)))\r\nReturns on Net Core: -15700\r\nReturns on Net Framework: 172\r\n\r\nThis may/does lead to unexpected results when a Application that relays on Asc/Chr gets converted from .Net Framework to .Net Core 3.0"},{"Id":"9929948189","Type":"PullRequestEvent","CreatedAt":"2019-07-02T01:06:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39100","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#39100) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang @danmosemsft"},{"Id":"9929937176","Type":"IssuesEvent","CreatedAt":"2019-07-02T01:03:01","Actor":"scalablecory","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38267","RelatedDescription":"Closed issue \"Lots of 1st-chance exceptions from HTTP/2 requests\" (#38267) at dotnet/corefx","RelatedBody":"I made 100 serial HTTP/2 requests to https://www.microsoft.com:\r\n```C#\r\n            using (var client = new HttpClient())\r\n            {\r\n                client.DefaultRequestVersion = new Version(2, 0);\r\n                for (int i = 0; i < 100; i++)\r\n                {\r\n                    await client.GetStringAsync(\"https://www.microsoft.com\");\r\n                }\r\n            }\r\n```\r\nAll the requests completed but incurred 28 first-chance exceptions, all of the form:\r\n```\r\nSystem.IO.IOException: Unable to read data from the transport connection: The I/O operation has been aborted because of either a thread exit or an application request.. ---> System.Net.Sockets.SocketException (995): The I/O operation has been aborted because of either a thread exit or an application request.\r\n     --- End of inner exception stack trace ---\r\n     at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken) in D:\\repos\\corefx\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 1107\r\n     at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token) in D:\\repos\\corefx\\src\\System.Net.Sockets\\src\\System\\Net\\Sockets\\Socket.Tasks.cs:line 1073\r\n     at System.Net.Security.SslStream.<FillBufferAsync>g__InternalFillBufferAsync|215_0[TReadAdapter](TReadAdapter adap, ValueTask`1 task, Int32 min, Int32 initial) in D:\\repos\\corefx\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.Implementation.cs:line 1478\r\n     at System.Net.Security.SslStream.ReadAsyncInternal[TReadAdapter](TReadAdapter adapter, Memory`1 buffer) in D:\\repos\\corefx\\src\\System.Net.Security\\src\\System\\Net\\Security\\SslStream.Implementation.cs:line 1356\r\n     at System.Net.Http.Http2Connection.ReadAtLeastAsync(Stream stream, Memory`1 buffer, Int32 minReadBytes) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 1520\r\n     at System.Net.Http.Http2Connection.EnsureIncomingBytesAsync(Int32 minReadBytes) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 154\r\n     at System.Net.Http.Http2Connection.ReadFrameAsync(Boolean initialFrame) in D:\\repos\\corefx\\src\\System.Net.Http\\src\\System\\Net\\Http\\SocketsHttpHandler\\Http2Connection.cs:line 180\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /_/src/System.Private.CoreLib/shared/System/Runtime/ExceptionServices/ExceptionDispatchInfo.cs:line 63\r\n```\r\ncc: @geoffkizer, @wfurt "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9930056652","Type":"PullRequestEvent","CreatedAt":"2019-07-02T01:39:05","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36896","RelatedDescription":"Merged pull request \"Enable nullable for BoundNodes\" (#36896) at dotnet/roslyn","RelatedBody":""},{"Id":"9930024998","Type":"PullRequestEvent","CreatedAt":"2019-07-02T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36923","RelatedDescription":"Merged pull request \"Merge master to features/param-nullchecking\" (#36923) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9930014642","Type":"PullRequestEvent","CreatedAt":"2019-07-02T01:26:58","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36916","RelatedDescription":"Merged pull request \"Add liveshare local forwarders for C#_LSP content type\" (#36916) at dotnet/roslyn","RelatedBody":""},{"Id":"9929927087","Type":"IssuesEvent","CreatedAt":"2019-07-02T01:00:02","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36926","RelatedDescription":"Opened issue \"Synthesized namespaces of SynthesizedEmbeddedAttributeSymbolBase shouldn't be \"missing\"\" (#36926) at dotnet/roslyn","RelatedBody":"SynthesizedEmbeddedAttributeSymbolBase constructs `MissingNamespaceSymbols` here:\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.CSharp/Symbols/Synthesized/SynthesizedEmbeddedAttributeSymbol.cs,43\r\n\r\nthat then flow into the emitter. Although this works ok today, it is unusual for the emitter to encounter missing symbols. I believe the invariant should be that the emitter does not emit any missing symbols."},{"Id":"9929867174","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:40:58","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36925","RelatedDescription":"Opened pull request \"Merge liveshare changes to do dual insertion.\" (#36925) at dotnet/roslyn","RelatedBody":"Draft - Pending\r\n\r\n1.  1 more fix https://github.com/dotnet/roslyn/pull/36916\r\n2.  Signoff from liveshare / our testing."},{"Id":"9929840909","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:32:47","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36924","RelatedDescription":"Opened pull request \"Require System.Index/Range to be present to offer to use the new language features.\" (#36924) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/36909\r\n\r\nA while back the compiler had a permissive view of indexing into a string or array with an `^` indexer, or a Range.  Specifically, it would allow doing this *even if* there was no System.Index or System.Range present.  This was fine as the compiler wasn't using those types anyways, it was just translating things to the underlying calls to the int based indexers/substrings/array-copies.\r\n\r\nWhen i added the \"use index or range operator\" feature i took this into account, and we would offer the feature on strings/arrays when possible.\r\n\r\nHowever, at some point teh compiler changed their strategy, and these are still required to be present (even if they are unused).\r\n\r\nThis changes the IDE feature to respect that and to not offer the feature unless those types are present.\r\n\r\n"},{"Id":"9929784423","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:15:10","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36886","RelatedDescription":"Merged pull request \"Relax the rule that tries to get rid of this./me. in Roslyn code.\" (#36886) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/36874"},{"Id":"9929784403","Type":"IssuesEvent","CreatedAt":"2019-07-02T00:15:09","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36874","RelatedDescription":"Closed issue \"Should we disable \"name can be simplified\" for Roslyn IDE for usages of `this.`\" (#36874) at dotnet/roslyn","RelatedBody":"Right now there are several thousand messages in the IDE code that `name can be simplified` because of hte usage of `this.Foo` (which could be converted to `Foo`).  \r\n\r\nI don't actually this this is warranted.  I think it's reasonable for `this` to be in the code for added clarity (i.e. i'm accessing some instance property, not some static member or potentially a type somewhere).\r\n\r\nShould we disable/change this to be permissive for IDE code?\r\n\r\nI'm ok with any decision made here.  But i will want us to actually make our code consistent with the rule if the severity is not 'none' since this fills my message list with literally thousands of messages."},{"Id":"9929743058","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:02:24","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36923","RelatedDescription":"Opened pull request \"Merge master to features/param-nullchecking\" (#36923) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9929741730","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:02:01","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36922","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#36922) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9929424926","Type":"PullRequestEvent","CreatedAt":"2019-07-01T22:34:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7574","RelatedDescription":"Merged pull request \"Initialize YieldProcessor critical section before finalizer thread\" (#7574) at dotnet/corert","RelatedBody":"Finalizer thread was racing with the initialization.\r\n\r\nFixes #7572."},{"Id":"9929424909","Type":"IssuesEvent","CreatedAt":"2019-07-01T22:34:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7572","RelatedDescription":"Closed issue \"AccessViolation in InitializeYieldProcessorNormalized\" (#7572) at dotnet/corert","RelatedBody":"@MichalStrehovsky \r\n![2019-07-01_19-54-48](https://user-images.githubusercontent.com/7110884/60456731-5f27f080-9c3a-11e9-951d-c42d5d5b44a3.png)\r\n![devenv_2019-07-01_19-53-47](https://user-images.githubusercontent.com/7110884/60456734-60f1b400-9c3a-11e9-94a0-0e7d4c31d174.png)\r\n"},{"Id":"9929000007","Type":"IssuesEvent","CreatedAt":"2019-07-01T21:08:42","Actor":"SomeAnon42","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7575","RelatedDescription":"Opened issue \"dotnet publish seems broken when using Core 3.0 Preview 6 SDK\" (#7575) at dotnet/corert","RelatedBody":"The behavior of ``dotnet publish -r %RID%`` (assuming the CoreRT package is referenced) has changed after upgrading to preview 6 of the SDK.\r\nHere's what the output looks like when using previous versions of the SDK (including the latest stable 2.2 SDK):\r\n```\r\n├── netcoreappX.X/\r\n    └── %RID%/\r\n        ├── <managed output>\r\n        └── publish/\r\n            ├── native/ \r\n            ├── App.exe (native)\r\n            ├── <app content>\r\n            └── <native dependencies>\r\n```\r\n↑ The ``publish`` directory contains the native executable, along with the app's content. No managed assemblies.\r\n\r\nAnd this is what the output looks like after installing preview 6:\r\n```\r\n├── netcoreappX.X/\r\n    ├── %RID%/\r\n    │   ├── publish/\r\n    │   |   ├── <managed publish> (incl. all of .NET runtime)\r\n    │   |   └── App.pdb (native, while App.exe is a CoreCLR runtime host)\r\n    │   └── <managed publish>\r\n    └── native/\r\n        ├── App.exe\r\n        └── App.pdb\r\n```\r\n↑ The managed *publish* output ends up in both ``%RID%`` and ``%RID%/publish`` (which seems like an SDK issue to me). The native binary is only found in the ``native`` directory, and the directory itself is in the wrong location. The native pdb ends up in both ``%framework%/%RID%/publish`` and ``%framework%/native``."},{"Id":"9928073887","Type":"PullRequestEvent","CreatedAt":"2019-07-01T18:30:36","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7574","RelatedDescription":"Opened pull request \"Initialize YieldProcessor critical section before finalizer thread\" (#7574) at dotnet/corert","RelatedBody":"Finalizer thread was racing with the initialization.\r\n\r\nFixes #7572."},{"Id":"9928038906","Type":"PullRequestEvent","CreatedAt":"2019-07-01T18:25:00","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7573","RelatedDescription":"Opened pull request \"Implement GC.AllocateUninitializedArray\" (#7573) at dotnet/corert","RelatedBody":"fixes #5680"},{"Id":"9927876359","Type":"IssuesEvent","CreatedAt":"2019-07-01T17:57:26","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7572","RelatedDescription":"Opened issue \"AccessViolation in InitializeYieldProcessorNormalized\" (#7572) at dotnet/corert","RelatedBody":"@MichalStrehovsky \r\n![2019-07-01_19-54-48](https://user-images.githubusercontent.com/7110884/60456731-5f27f080-9c3a-11e9-951d-c42d5d5b44a3.png)\r\n![devenv_2019-07-01_19-53-47](https://user-images.githubusercontent.com/7110884/60456734-60f1b400-9c3a-11e9-94a0-0e7d4c31d174.png)\r\n"},{"Id":"9927784090","Type":"PullRequestEvent","CreatedAt":"2019-07-01T17:41:48","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7571","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7571) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9922918188","Type":"PullRequestEvent","CreatedAt":"2019-07-01T05:16:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7567","RelatedDescription":"Merged pull request \"Implement LayoutClass/LayoutClassPtr/AsAny marshalers\" (#7567) at dotnet/corert","RelatedBody":"This is a couple marshallers that nobody should be using for anything, but WinForms and System.Drawing uses them for everything. Frankly, it feels like the designers of .NET 1.0 got too excited about marshalling everything with these and someone should have stopped them.\r\n\r\nThese marshallers are for marshalling abritrary reference types to native code.\r\n\r\nThis is enough to get basic WinForms apps running. E.g. the MatchingGame .NET Sample works with this. Serious WinForms apps will eventually hit missing COM support, but at least the basics work now and it's enough to get a read on things like startup time."},{"Id":"9922916541","Type":"PullRequestEvent","CreatedAt":"2019-07-01T05:16:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Merged pull request \"Port normalized SpinWait from CoreCLR\" (#7569) at dotnet/corert","RelatedBody":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim."},{"Id":"9922914057","Type":"PullRequestEvent","CreatedAt":"2019-07-01T05:15:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7570","RelatedDescription":"Merged pull request \"Use AssemblyLoadContext from shared partition\" (#7570) at dotnet/corert","RelatedBody":"We were missing methods that got added for 3.0. The only LoadContext that works is the default one though."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9930446066","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:30:51","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3384","RelatedDescription":"Merged pull request \"Branding update to \"preview8\"; SDK\" (#3384) at dotnet/sdk","RelatedBody":"Branding update to \"preview8\"; SDK"},{"Id":"9930444376","Type":"PullRequestEvent","CreatedAt":"2019-07-02T03:30:23","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3382","RelatedDescription":"Merged pull request \"Merge master into release 3.0.1xx for preview7 - SDK\" (#3382) at dotnet/sdk","RelatedBody":"Merge master to release/3.0.1xx for preview7\r\nCommonly referred to as the 'snap'"},{"Id":"9929795082","Type":"PullRequestEvent","CreatedAt":"2019-07-02T00:18:25","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3384","RelatedDescription":"Opened pull request \"WIP: Branding update to \"preview8\"; SDK\" (#3384) at dotnet/sdk","RelatedBody":"Branding update to \"preview8\""},{"Id":"9929776436","Type":"IssuesEvent","CreatedAt":"2019-07-02T00:12:33","Actor":"bergbria","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3383","RelatedDescription":"Opened issue \"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file\" (#3383) at dotnet/sdk","RelatedBody":"## Repro\r\n1. Create a .csproj with multiple ````<RuntimeIdentifiers>```` (e.g.  ````<RuntimeIdentifiers>osx-x64;win-x64</RuntimeIdentifiers>````)\r\n2. `dotnet restore`\r\n3. `dotnet publish --no-restore  --runtime win-x64`\r\n\r\nThis will fail with \r\n>error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file. \r\n\r\n## Automated repro\r\nDownload/unzip \r\n[publish_multi_rid.zip](https://github.com/dotnet/sdk/files/3347730/publish_multi_rid.zip) and run repro.bat\r\n\r\n## Additional context\r\n* Omitting  `--no-restore` will cause different package versions to be used than would be produced the by original `dotnet restore`. While being icky in general, this also causes breaks when NuGet lock files are used (e.g. https://github.com/NuGet/Home/issues/8287)\r\n* This seems vaguely related to #2682 "}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"462969507","IsPullRequest":true,"CreatedAt":"2019-07-02T05:25:32","Actor":"sywhang","Number":"25525","RawContent":null,"Title":"test DisplayUnits/DisplayRateTimeScale properties","State":"closed","Body":"Checking more boxes for https://github.com/dotnet/coreclr/issues/23217...","Url":"https://github.com/dotnet/coreclr/pull/25525","RelatedDescription":"Closed or merged PR \"test DisplayUnits/DisplayRateTimeScale properties\" (#25525)"},{"Id":"462832662","IsPullRequest":true,"CreatedAt":"2019-07-02T02:47:13","Actor":"Dotnet-GitSync-Bot","Number":"25517","RawContent":null,"Title":"Mirror changes from dotnet/corefx,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/coreclr/pull/25517","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,corert\" (#25517)"},{"Id":"462802549","IsPullRequest":true,"CreatedAt":"2019-07-02T02:46:37","Actor":"jkotas","Number":"25513","RawContent":null,"Title":"Delete dead code","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25513","RelatedDescription":"Closed or merged PR \"Delete dead code\" (#25513)"},{"Id":"462808705","IsPullRequest":true,"CreatedAt":"2019-07-02T02:46:25","Actor":"MichalStrehovsky","Number":"25514","RawContent":null,"Title":"Get rid of warnings while building tests","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25514","RelatedDescription":"Closed or merged PR \"Get rid of warnings while building tests\" (#25514)"},{"Id":"462980201","IsPullRequest":false,"CreatedAt":"2019-07-02T01:43:10","Actor":"VincentBu","Number":"25528","RawContent":null,"Title":"Test failed: Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190701.1/workItem/System.Security.Cryptography.Csp.Tests/analysis/xunit/System.Security.Cryptography.Rsa.Tests.EncryptDecrypt_Span~2FRsaCryptRoundtrip_OaepSHA1\r\n\r\n**Log:**\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal error occurred\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25528","RelatedDescription":"Open issue \"Test failed: Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#25528)"},{"Id":"462979324","IsPullRequest":false,"CreatedAt":"2019-07-02T01:38:38","Actor":"VincentBu","Number":"25527","RawContent":null,"Title":"Test failed: System.IO.DirectoryNotFoundException","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190630.1/workItem/System.IO.FileSystem.Watcher.Tests/analysis/xunit/System.IO.Tests.FileSystemWatcherTests~2FFileSystemWatcher_Directory_Delete_MultipleFilters\r\n\r\n**Log:**\r\n```\r\nSystem.IO.DirectoryNotFoundException : Could not find a part of the path '/tmp/FileSystemWatcherTests_iisbyhb5.uga/FileSystemWatcher_Directory_Delete_MultipleFilters_1052_2ea7d60c/FileSystemWatcher_Directory_Delete_MultipleFilters_1053_85c8d3a6'.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25527","RelatedDescription":"Open issue \"Test failed: System.IO.DirectoryNotFoundException\" (#25527)"},{"Id":"462974550","IsPullRequest":true,"CreatedAt":"2019-07-02T01:14:19","Actor":"sywhang","Number":"25526","RawContent":null,"Title":"Decrease EventListener buffer size","State":"open","Body":"Decrease the default buffer size used by EventListener sessions from 1GB to 10MB","Url":"https://github.com/dotnet/coreclr/pull/25526","RelatedDescription":"Open PR \"Decrease EventListener buffer size\" (#25526)"},{"Id":"462967802","IsPullRequest":false,"CreatedAt":"2019-07-02T00:39:13","Actor":"noahfalk","Number":"25524","RawContent":null,"Title":"Tracing and Counters Interest Group - Announcements","State":"open","Body":"I'm making this issue as an informal way to flag other issues and discussions that might be relevant to doing tracing, logging, and performance counters in the .Net runtime. This includes technologies such as EventSource, EventPipe, ETW, Lttng, EventCounter, EventListener, DiagnosticsSource, and Activity. This thread is likely to stay closer to the bleeding edge than release notes or docs on docs.microsoft.com, but in exchange it is likely be more informal. If this is something you are interested in, subscribe to this issue to follow along.\r\n\r\nPlease don't do discussion directly in this issue, just links or short announcements. Thanks!","Url":"https://github.com/dotnet/coreclr/issues/25524","RelatedDescription":"Open issue \"Tracing and Counters Interest Group - Announcements\" (#25524)"},{"Id":"462961693","IsPullRequest":true,"CreatedAt":"2019-07-02T00:07:01","Actor":"josalem","Number":"25523","RawContent":null,"Title":"Prevent EventPipe rundown from blocking on write","State":"open","Body":"Write all rundown events to the buffer manager to prevent the write from blocking while holding the CodeManager lock\r\n\r\nresolves #25095 \r\n\r\nCC @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/25523","RelatedDescription":"Open PR \"Prevent EventPipe rundown from blocking on write\" (#25523)"},{"Id":"462923234","IsPullRequest":false,"CreatedAt":"2019-07-01T21:39:22","Actor":"swaroop-sridhar","Number":"25522","RawContent":null,"Title":"PublishReadyToRun should not compile mscorlib","State":"open","Body":"ReadyToRun compilation of self-contained apps compiles mscorlib.dll to generate the native image. \r\n\r\nSee: https://github.com/dotnet/sdk/pull/3381 where an SDK test failed recently, because mscorlib.ni.pdbs started showing up in app publish directory (unexpectedly). \r\n\r\nThis issue tracks shipping the native image in the .net core runtime-pack.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25522","RelatedDescription":"Open issue \"PublishReadyToRun should not compile mscorlib\" (#25522)"},{"Id":"462904179","IsPullRequest":false,"CreatedAt":"2019-07-01T21:10:49","Actor":"lidgren","Number":"25521","RawContent":null,"Title":"Add Span<T>.AsReadOnly()","State":"closed","Body":"As far as I can tell; there's no way to convert an instance of `Span<T>` to a `ReadOnlySpan<T>` without having a reference to the underlying data. Adding the method `AsReadOnly()` to `Span<T>` or a constructor/implicit conversion to `ReadOnlySpan<T>` would be useful.","Url":"https://github.com/dotnet/coreclr/issues/25521","RelatedDescription":"Closed issue \"Add Span<T>.AsReadOnly()\" (#25521)"},{"Id":"462895384","IsPullRequest":true,"CreatedAt":"2019-07-01T20:25:23","Actor":"davmason","Number":"25520","RawContent":null,"Title":"Add check to prevent attaching a profiler when one is already present","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25520","RelatedDescription":"Open PR \"Add check to prevent attaching a profiler when one is already present\" (#25520)"},{"Id":"462879130","IsPullRequest":false,"CreatedAt":"2019-07-01T19:42:38","Actor":"WardenGnaw","Number":"25519","RawContent":null,"Title":"ValueTuple<System.__Canon, System.__Canon> returned from funcEval of List<ValueTuple<string, string>>.get_Item(int)","State":"open","Body":"In VS, creating a dotnet 3.0 console app with:\r\n```\r\nvar list = new List<(string first, string second)>();\r\nlist.Add((\"first\", \"second\"));\r\n```\r\nAdding list[0].first in the watch window results in it being null.\r\n\r\nThis is due to funeval-ing `System.Collections.Generic.List'1[T].get_Item` with two arguments via `ICorDebugEval2.CallParameterizedFunction`.\r\nThe two arguments are:\r\n```\r\n[0]: \"System.Collections.Generic.List'1[[System.ValueTuple'2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"\r\n[1]: \"System.Int32\"\r\n```\r\n\r\nHowever, the CorValue of this call results in `\"System.ValueTuple'2[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"`\r\n","Url":"https://github.com/dotnet/coreclr/issues/25519","RelatedDescription":"Open issue \"ValueTuple<System.__Canon, System.__Canon> returned from funcEval of List<ValueTuple<string, string>>.get_Item(int)\" (#25519)"},{"Id":"462864265","IsPullRequest":true,"CreatedAt":"2019-07-01T19:04:52","Actor":"davmason","Number":"25518","RawContent":null,"Title":"Merge ReadyToRunInfo::GenericMethodIterator with ReadyToRunInfo::MethodIterator","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25518","RelatedDescription":"Open PR \"Merge ReadyToRunInfo::GenericMethodIterator with ReadyToRunInfo::MethodIterator\" (#25518)"},{"Id":"462399291","IsPullRequest":true,"CreatedAt":"2019-07-01T18:17:21","Actor":"dotnet-maestro[bot]","Number":"25503","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25503","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25503)"},{"Id":"462824795","IsPullRequest":false,"CreatedAt":"2019-07-01T17:19:40","Actor":"shvez","Number":"25516","RawContent":null,"Title":"AssemblyLoadContext: Loading of assemblies from 'runtimes' folder","State":"open","Body":"@vitek-karas  you asked me here(https://github.com/dotnet/coreclr/issues/13277) to create a new issue. here it is.\r\n\r\nIn short:\r\nMy plugin application has a dependency from System.Diagnostics.PerformanceCounter.dll. I publish it as `dotnet publish -f netcoreapp3.0`\r\n\r\nThe issue is that if I just build my loader and start it, it loads plugin application without any issues. It takes a version of the library from `runtimes` folder.\r\nif I publish Loader application like 'dotnet publish -f netcoreapp3.0 -r win-x64' (it is important that I use RID 'win-x64', not 'win10-x64') it loads  System.Diagnostics.PerformanceCounter.dll assembly from the plugin application folder. And this version is generating an exception that platform is not supported.\r\n\r\nI've checked the trace file for failure case and found out that it can not load from runtimes folder because RID win10-x64 is not compatible with platform 'win' where System.Diagnostics.PerformanceCounter.dll is situated.  `runtimes\\win\\lib\\netcoreapp2.0\\System.Diagnostics.PerformanceCounter.dll` to be precise.  I do not see such message for NotPublished version\r\n\r\nWhat do I do wrong? What should I do to get it working correctly? I need a version of my application which may run on windows, on linux, and on mac. \r\n\r\nhere is netcore info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n\r\nhere are links to trace files and to sample application:\r\nLoader app sample: https://www.dropbox.com/s/lqragpd26vfccr2/Loader.7z?dl=0\r\nit contains Loader - app, Application - the plugin, AppInterfaces - common interface lib. \r\n'_out' folder which contains 'dev' folder with build results and 'publish' folder with results of publishing.\r\n\r\ntrace_p.7z(https://www.dropbox.com/s/vfwbzgfoyqf4umb/trace_p.log.7z?dl=0) - zipped version of trace for the version from 'publish' folder\r\ntrace.7z(https://www.dropbox.com/s/613qu1n8wy5a3rv/trace.log.7z?dl=0) - zipped version of trace for the version from 'dev' folder\r\n\r\nto start dev version you may use visual studio. to start published version you have to go to '_out/publish/Loader' folder and start Loader.exe","Url":"https://github.com/dotnet/coreclr/issues/25516","RelatedDescription":"Open issue \"AssemblyLoadContext: Loading of assemblies from 'runtimes' folder\" (#25516)"},{"Id":"462474841","IsPullRequest":false,"CreatedAt":"2019-07-01T16:50:36","Actor":"VincentBu","Number":"25511","RawContent":null,"Title":"Test failed: tracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd","State":"closed","Body":"**Job:**\r\n\r\n**Failed tests:**\r\ntracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\00890681-7c89-4393-9b62-fa4b36a1f4bf\\\\Work\\\\8cedcec5-2887-447e-9eab-4d6406d90123\\\\Exec\\\\tracing\\\\eventcounter\\\\Reports\\\\tracing.eventcounter\\\\incrementingeventcounter\\\\incrementingeventcounter.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\00890681-7c89-4393-9b62-fa4b36a1f4bf\\\\Payload\\\\corerun.exe\\\" incrementingeventcounter.exe \r\nTest Failed\r\nExpected to see 100 events - saw 100\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\00890681-7c89-4393-9b62-fa4b36a1f4bf\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\00890681-7c89-4393-9b62-fa4b36a1f4bf\\\\Work\\\\8cedcec5-2887-447e-9eab-4d6406d90123\\\\Exec\\\\tracing\\\\eventcounter\\\\incrementingeventcounter\\\\incrementingeventcounter.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25511","RelatedDescription":"Closed issue \"Test failed: tracing_eventcounter._incrementingeventcounter_incrementingeventcounter_._incrementingeventcounter_incrementingeventcounter_cmd\" (#25511)"},{"Id":"462810873","IsPullRequest":false,"CreatedAt":"2019-07-01T16:42:01","Actor":"tommcdon","Number":"25515","RawContent":null,"Title":"EventPipe::Disable blocks all sessions from doing work","State":"open","Body":"Break the lock when doing EventPipe::Disable, otherwise disabling a session will be able to block all other sessions from doing work for a long time.\r\n\r\nThis issue was previous tracked in https://github.com/dotnet/coreclr/issues/24753#issue-447926225","Url":"https://github.com/dotnet/coreclr/issues/25515","RelatedDescription":"Open issue \"EventPipe::Disable blocks all sessions from doing work\" (#25515)"},{"Id":"462401105","IsPullRequest":true,"CreatedAt":"2019-07-01T16:05:41","Actor":"dotnet-maestro[bot]","Number":"25504","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 11:21 AM\r\n- **Commit**: 5750c69cdab5d2013fdebe2c6080132e9edb5a3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190701.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190701.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25504","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25504)"},{"Id":"462746326","IsPullRequest":true,"CreatedAt":"2019-07-01T14:27:39","Actor":"sdmaclea","Number":"25512","RawContent":null,"Title":"WIP arm64singlestepper","State":"open","Body":"In progress work to enable arm64 single step emulation\r\n\r\n/cc @noahfalk @tommcdon @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/25512","RelatedDescription":"Open PR \"WIP arm64singlestepper\" (#25512)"},{"Id":"462414073","IsPullRequest":true,"CreatedAt":"2019-07-01T04:06:56","Actor":"RussKeldorph","Number":"25507","RawContent":null,"Title":"Disable windows formatting job in PRs","State":"closed","Body":"Temporarily disable this job to stop redness in PRs until #25499 is addressed.","Url":"https://github.com/dotnet/coreclr/pull/25507","RelatedDescription":"Closed or merged PR \"Disable windows formatting job in PRs\" (#25507)"},{"Id":"462473696","IsPullRequest":false,"CreatedAt":"2019-07-01T01:37:43","Actor":"VincentBu","Number":"25510","RawContent":null,"Title":"Test failed: ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190629.1/workItem/PayloadGroup0/analysis/xunit/ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_~2F_Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Failed tests:**\r\nilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      /home/helixbot/work/8a6018bc-45e6-42d2-a3c8-0aa958a91fed/Work/21f80e77-4aaa-40a3-a3c4-fb7a50c11df0/Exec/ilasm/System/Reports/ilasm.System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/home/helixbot/work/8a6018bc-45e6-42d2-a3c8-0aa958a91fed/Payload/corerun MethodImplOptionsTests.exe ''\r\nAggressiveOptimizationTest\r\n\r\nAssembling 'MiAggressiveOptimization.il'  to DLL --> 'MiAggressiveOptimization.dll'\r\nSource file is ANSI\r\n\r\nAssembled method Program::Main\r\nCreating PE file\r\n\r\nEmitting classes:\r\nClass 1:\\tProgram\r\n\r\nEmitting fields and methods:\r\nGlobal \\t\r\nClass 1\\tMethods: 1;\\t\r\n\r\nEmitting events and properties:\r\nGlobal \\t\r\nClass 1\\t\r\nWriting PE file\r\nOperation completed successfully\r\nTimed out waiting for ilasm to exit\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/home/helixbot/work/8a6018bc-45e6-42d2-a3c8-0aa958a91fed/Payload\r\n> /home/helixbot/work/8a6018bc-45e6-42d2-a3c8-0aa958a91fed/Work/21f80e77-4aaa-40a3-a3c4-fb7a50c11df0/Exec/ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25510","RelatedDescription":"Open issue \"Test failed: ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\" (#25510)"},{"Id":"462473009","IsPullRequest":false,"CreatedAt":"2019-07-01T01:33:09","Actor":"VincentBu","Number":"25509","RawContent":null,"Title":"Test failed: Interop_ICustomMarshaler._Primitives_ICustomMaraler_ICustomMaraler_._Primitives_ICustomMarshaler_ICustomMarshaler_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190629.1/workItem/Interop/analysis/xunit/Interop_ICustomMarshaler._Primitives_ICustomMaraler_ICustomMaraler_~2F_Primitives_ICustomMarshaler_ICustomMarshaler_sh\r\n\r\n**Failed tests:**\r\nInterop_ICustomMarshaler._Primitives_ICustomMaraler_ICustomMaraler_._Primitives_ICustomMarshaler_ICustomMarshaler_sh\r\n\r\n**Log:**\r\n```\r\n/root/helix/work/workitem/Interop/ICustomMarshaler/Primitives/ICustomMarshaler/ICustomMarshaler.sh: line 259:  1356 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/Interop/ICustomMarshaler/Reports/Interop.ICustomMarshaler/Primitives/ICustomMarshaler/ICustomMarshaler.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun ICustomMarshaler.exe ''\r\nDiscovering...\r\nRunning 25 of 25 tests...\r\nFinished: 25 tests in 379.385s (0 failed, 0 skipped)\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/Interop/ICustomMarshaler/Primitives/ICustomMarshaler/ICustomMarshaler.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25509","RelatedDescription":"Open issue \"Test failed: Interop_ICustomMarshaler._Primitives_ICustomMaraler_ICustomMaraler_._Primitives_ICustomMarshaler_ICustomMarshaler_sh\" (#25509)"},{"Id":"462422753","IsPullRequest":true,"CreatedAt":"2019-06-30T16:30:00","Actor":"tannergooding","Number":"25508","RawContent":null,"Title":"Refactoring the ARM intrinsics to match API review and share code with x86","State":"open","Body":"This updates the ARM64 intrinsics to match the proposed layout from: https://github.com/dotnet/corefx/issues/37199.\r\n\r\nThis also updates the ARM64 intrinsics to share much of the importation logic and various data structures that were already created for x86.\r\n\r\nCurrently, this also removes many of the APIs that were exposed as part of the `Arm.AdvSimd` class, but I am working on updating those to match the above proposal as well.\r\n-- I don't think merging this should be blocked on that, but since this can't be merged until after master starts targeting .NET 5, I will try to get it completed before then.","Url":"https://github.com/dotnet/coreclr/pull/25508","RelatedDescription":"Open PR \"Refactoring the ARM intrinsics to match API review and share code with x86\" (#25508)"},{"Id":"462413067","IsPullRequest":false,"CreatedAt":"2019-06-30T15:12:29","Actor":"reality77","Number":"25506","RawContent":null,"Title":"Bad globalization behavior in docker with CultureInfo.CurrentCulture","State":"closed","Body":"**Issue**\r\n\r\nThe current culture is not used correctly when displaying a date in a docker environment\r\n\r\n**How to reproduce**\r\n\r\nA simple test to reproduce this issue can be found here https://github.com/reality77/culture-test\r\n\r\n**Info**\r\n\r\ndotnet\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.204\r\n Commit:    8757db13ec\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.204/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.2.204 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\ndocker\r\n\r\n`Docker version 18.06.1-ce, build e68fc7a`","Url":"https://github.com/dotnet/coreclr/issues/25506","RelatedDescription":"Closed issue \"Bad globalization behavior in docker with CultureInfo.CurrentCulture\" (#25506)"},{"Id":"462349488","IsPullRequest":false,"CreatedAt":"2019-06-29T23:03:20","Actor":"bergmeister","Number":"25502","RawContent":null,"Title":"CoreClr crashes sporadically when interacting with Windows COM API","State":"open","Body":"This issue has been observed to happen sporadically and is hard to reproduce but we have lots of logs and narrowed down the offending code. The issue causes PowerShell Core itself to sporadically crash on Windows at startup\r\n- It does not seem to be specific to a version of Windows, it has been seen in various environments\r\n- It has been observed with the latest runtime of .Net Core 2.1 as well as `3.0-preview5`\r\n- The process is running in `MTA` appartment state and interacts with Windows COM APIs to create an elevated `JumpList` entry on application startup. The APIs are public and there were no issues when the code was written in `C++` for Windows PowerShell and the code was later ported to managed C# with COM interfaces being taken from the Windows API kit.\r\n- The issue is described in detail [here](https://github.com/PowerShell/PowerShell/issues/9295) with a crash log [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-500770387), a memory dump [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501135947) and its associated stack trace [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113), some preliminary analysis of what goes on in the coreclr is [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-501353113)\r\n- We added more logging statements and found that the fatal CLR error happens [here](https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.ConsoleHost/WindowsTaskbarJumpList/TaskbarJumpList.cs#L87) in PowerShell's code. Sometimes (more rarely) a `InvalidComObjectException` is observed, which is happening just one line later, see comment with stack trace [here](https://github.com/PowerShell/PowerShell/issues/9295#issuecomment-505638825)","Url":"https://github.com/dotnet/coreclr/issues/25502","RelatedDescription":"Open issue \"CoreClr crashes sporadically when interacting with Windows COM API\" (#25502)"},{"Id":"462347006","IsPullRequest":true,"CreatedAt":"2019-06-29T22:20:21","Actor":"sywhang","Number":"25501","RawContent":null,"Title":"Add a check before firing some threadpool events","State":"open","Body":"Fix #25405","Url":"https://github.com/dotnet/coreclr/pull/25501","RelatedDescription":"Open PR \"Add a check before firing some threadpool events\" (#25501)"},{"Id":"462322117","IsPullRequest":true,"CreatedAt":"2019-06-29T21:57:59","Actor":"BruceForstall","Number":"25500","RawContent":null,"Title":"Remove an old CoreFX exclusion file","State":"closed","Body":"Plus, add comments to the new exclusion file","Url":"https://github.com/dotnet/coreclr/pull/25500","RelatedDescription":"Closed or merged PR \"Remove an old CoreFX exclusion file\" (#25500)"},{"Id":"462401621","IsPullRequest":false,"CreatedAt":"2019-06-29T21:38:23","Actor":"LordBenjamin","Number":"25505","RawContent":null,"Title":"MemoryStream.Write() slow on Ryzen CPUs","State":"open","Body":"I've noticed while doing some benchmarking that .NET Core is noticeably (21%) slower than .NET Framework on my AMD Ryzen 1200 based PC for a certain piece of code.\r\n\r\nRunning the same benchmark on an Intel i7 6700 based PC shows .NET Core running significantly (41%) faster than Framework.\r\n\r\nCode to reproduce is here:\r\nhttps://github.com/LordBenjamin/DotNetCore-Ryzen-Performance-Repro/\r\n\r\n**Benchmarks**\r\n\r\n* `OriginalBenchmark.cs` \r\n\r\nQuite close to my actual code. Slower on Ryzen and faster on Intel.\r\n\r\n* `StreamWriteBenchmark.cs`\r\n\r\nDistilled down after I noticed that commenting out the call to  `MemoryStream.Write(byte[] buffer, int offset, int count);` in  `OriginalBenchmark.cs` leaves .NET Core consistently faster on both CPUs. Core performance is significantly worse on Ryzen, but comparable to Framework on Intel.\r\n\r\n**Affected Frameworks**\r\n\r\nI can reproduce using both .NET Core 2.1 and 3.0. Framework version is 4.7.2 in both cases.\r\n\r\n**Results**\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nAMD Ryzen 3 1200, 1 CPU, 4 logical and 4 physical cores\r\n.NET Core SDK=3.0.100-preview6-012264\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3416.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |      Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |----------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr |  68.21 us | 0.4611 us | 0.4088 us |\r\n| StreamWrite | Core |    Core | 118.42 us | 0.5408 us | 0.5058 us |\r\n| Original    |  Clr |     Clr |  502.4 us | 6.2900 us | 5.8840 us |\r\n| Original    | Core |    Core |  630.2 us | 3.8080 us | 3.5620 us |\r\n```\r\n\r\n```\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.557 (1809/October2018Update/Redstone5)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET Core SDK=2.1.700\r\n  [Host] : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3801.0\r\n  Core   : .NET Core 2.1.11 (CoreCLR 4.6.27617.04, CoreFX 4.6.27617.02), 64bit RyuJIT\r\n\r\n\r\n|      Method |  Job | Runtime |     Mean |     Error |    StdDev |\r\n|------------ |----- |-------- |---------:|----------:|----------:|\r\n| StreamWrite |  Clr |     Clr | 75.37 us | 0.9133 us |  0.7626 us|\r\n| StreamWrite | Core |    Core | 75.39 us | 0.8624 us |  0.8067 us|\r\n| Original    |  Clr |     Clr | 598.0 us |11.6530 us | 14.74 us  |\r\n| Original    | Core |    Core | 341.6 us | 6.8020 us | 10.79 us  |\r\n```\r\n\r\nHappy to supply further information or change and re-run benchmarks as required.","Url":"https://github.com/dotnet/coreclr/issues/25505","RelatedDescription":"Open issue \"MemoryStream.Write() slow on Ryzen CPUs\" (#25505)"},{"Id":"462310776","IsPullRequest":false,"CreatedAt":"2019-06-29T15:06:26","Actor":"jkotas","Number":"25499","RawContent":null,"Title":"Formatting Windows_NT x64 CI leg failing 100%","State":"open","Body":"This failure was introduce by deployment of updated VS2017 build images with broken VS C++ installation (parts of the default UCRT are missing in the image).\r\n\r\nhttps://github.com/dotnet/coreclr/pull/25444 worked around this issue for build legs. The formatting leg needs a different workaround.","Url":"https://github.com/dotnet/coreclr/issues/25499","RelatedDescription":"Open issue \"Formatting Windows_NT x64 CI leg failing 100%\" (#25499)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"463002873","IsPullRequest":true,"CreatedAt":"2019-07-02T04:54:37","Actor":"livarcocc","Number":"11695","RawContent":null,"Title":"Merge master into release/3.0.1xx","State":"closed","Body":"This was a clean merge.","Url":"https://github.com/dotnet/cli/pull/11695","RelatedDescription":"Closed or merged PR \"Merge master into release/3.0.1xx\" (#11695)"},{"Id":"462964119","IsPullRequest":true,"CreatedAt":"2019-07-02T04:54:21","Actor":"johnbeisner","Number":"11693","RawContent":null,"Title":"Branding update to \"preview8\"; CLI","State":"closed","Body":"Branding update to \"preview8\"; SDK\r\n","Url":"https://github.com/dotnet/cli/pull/11693","RelatedDescription":"Closed or merged PR \"Branding update to \"preview8\"; CLI\" (#11693)"},{"Id":"463004065","IsPullRequest":true,"CreatedAt":"2019-07-02T03:38:38","Actor":"dotnet-maestro[bot]","Number":"11696","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.08\r\n- **Date Produced**: 7/2/2019 3:38 AM\r\n- **Commit**: 788f9afff7b5c4cbb2115c688eabf4560bd334f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11696","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#11696)"},{"Id":"462995834","IsPullRequest":true,"CreatedAt":"2019-07-02T03:29:53","Actor":"dotnet-maestro[bot]","Number":"11694","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/2/2019 2:56 AM\r\n- **Commit**: e01aac6709b8cd81522fa23677a8e49d004983ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11694)"},{"Id":"462958007","IsPullRequest":true,"CreatedAt":"2019-07-02T00:34:36","Actor":"dotnet-maestro[bot]","Number":"11691","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 2:57 PM\r\n- **Commit**: 46e1f004a34fe8ed6f608d20d5f8b0b862a245c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11691","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11691)"},{"Id":"462962791","IsPullRequest":true,"CreatedAt":"2019-07-02T00:12:44","Actor":"dotnet-maestro[bot]","Number":"11692","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.7\r\n- **Date Produced**: 7/2/2019 12:11 AM\r\n- **Commit**: 8d41acba67c9ccc9ec7b2030dbf3d9a5b487cd6d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19351.7\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11692","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11692)"},{"Id":"462938939","IsPullRequest":true,"CreatedAt":"2019-07-01T23:42:29","Actor":"wli3","Number":"11690","RawContent":null,"Title":"WIP no merge test ci","State":"closed","Body":"try insert on master https://github.com/dotnet/cli/pull/11685/files","Url":"https://github.com/dotnet/cli/pull/11690","RelatedDescription":"Closed or merged PR \"WIP no merge test ci\" (#11690)"},{"Id":"462936673","IsPullRequest":true,"CreatedAt":"2019-07-01T22:51:49","Actor":"dotnet-maestro[bot]","Number":"11689","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.07\r\n- **Date Produced**: 7/1/2019 10:21 PM\r\n- **Commit**: f8c97c34e80df0ce59dbdb36bfa11b1457842e9c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-07\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11689","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11689)"},{"Id":"462889481","IsPullRequest":false,"CreatedAt":"2019-07-01T20:09:58","Actor":"wli3","Number":"11688","RawContent":null,"Title":"Investigate running CI in Linux/ARM64 box","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/11688","RelatedDescription":"Open issue \"Investigate running CI in Linux/ARM64 box\" (#11688)"},{"Id":"462852288","IsPullRequest":true,"CreatedAt":"2019-07-01T19:03:52","Actor":"dotnet-maestro[bot]","Number":"11686","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 6:33 PM\r\n- **Commit**: 8057775f5891275632d0b8deda9f71975481be0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19351.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11686)"},{"Id":"462676704","IsPullRequest":true,"CreatedAt":"2019-07-01T18:48:27","Actor":"dotnet-maestro[bot]","Number":"11681","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 1:40 PM\r\n- **Commit**: 68c9529fe390ab0a13d8d554b04ee93af7fdad5d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19330.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11681","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11681)"},{"Id":"462856189","IsPullRequest":false,"CreatedAt":"2019-07-01T18:43:30","Actor":"mwpowellhtx","Number":"11687","RawContent":null,"Title":"CLI attempts NuGet Restore instead of using provided DLL path","State":"open","Body":"## Background\r\n\r\nI have not published my tooling project to NuGet yet. I plan to today, but I have a curious message, error, or warning, that is happening at the moment.\r\n\r\nI uniquely renamed my project output such that it no longer conflicts with existing NuGet packages. I am finding this kind of error during the build. I think that the local path is being used, but the error in the meantime is curious. I'm not sure there is anything else I can do with that from my end, when the build resolves, the asset is *there*, so to speak.\r\n\r\n```\r\nError / NU1101 / Unable to find package dotnet-mytool. No packages exist with this id in source(s): ... / MyTool.Integration.Tests / path\\to\\MyTool.Integration.Tests\\MyTool.Integration.Tests.csproj\r\n```\r\n\r\nThat being said on the one hand, I'm not sure my targets do not need a bit of fine tuning. There is one in particular depending on some curious *Microsoft Build* targets, which are triggered at odd times when the asset might not be *there*, i.e. preparatory phases when the build outputs might not otherwise be there, for instance.\r\n\r\nSo, really, I'm just curious, if we provide a full path to the *DLL* assets, isn't that sufficient to preclude this sort of condition? The default position, then, would be to ask for a *NuGet Restore*, for example.\r\n\r\n## Environment data\r\nAttached.\r\n\r\n[dotnet-info.txt](https://github.com/dotnet/cli/files/3346921/dotnet-info.txt)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11687","RelatedDescription":"Open issue \"CLI attempts NuGet Restore instead of using provided DLL path\" (#11687)"},{"Id":"462830654","IsPullRequest":true,"CreatedAt":"2019-07-01T17:35:29","Actor":"dotnet-maestro[bot]","Number":"11685","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/1/2019 7:08 PM\r\n- **Commit**: 3ce7695b54e89523ff6e116742472e3c5f4d19bb\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview7.19351.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11685","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11685)"},{"Id":"462786846","IsPullRequest":true,"CreatedAt":"2019-07-01T16:16:10","Actor":"dotnet-maestro[bot]","Number":"11684","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/1/2019 3:45 PM\r\n- **Commit**: 635da5b73abdb5f6b1e3a5595c3a988385967272\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19351.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11684","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11684)"},{"Id":"462700668","IsPullRequest":true,"CreatedAt":"2019-07-01T13:29:28","Actor":"dotnet-maestro[bot]","Number":"11683","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.2\r\n- **Date Produced**: 7/1/2019 12:58 PM\r\n- **Commit**: 60a8f2348e09f577b05568aba6ee6e5c9e4d4e81\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19351.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11683)"},{"Id":"462679384","IsPullRequest":true,"CreatedAt":"2019-07-01T12:42:26","Actor":"dotnet-maestro[bot]","Number":"11682","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:44 PM\r\n- **Commit**: e49047593d9a8f71e48cf4283ed4debceb76409b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview.19330.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11682)"},{"Id":"462676517","IsPullRequest":true,"CreatedAt":"2019-07-01T12:35:16","Actor":"dotnet-maestro[bot]","Number":"11680","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11680","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11680)"},{"Id":"462607352","IsPullRequest":false,"CreatedAt":"2019-07-01T09:24:14","Actor":"stroborobo","Number":"11679","RawContent":null,"Title":"dotnet sln: support for custom configurations","State":"open","Body":"At the moment (3.0.100-preview6) the `dotnet sln` command only supports adding, removing and listing projects. However it is not possible to change the build configurations, so that has to be done either manually or using e.g. Visual Studio.\r\n\r\nIt would be nice if you could add and remove configurations from the solution file.","Url":"https://github.com/dotnet/cli/issues/11679","RelatedDescription":"Open issue \"dotnet sln: support for custom configurations\" (#11679)"},{"Id":"462475035","IsPullRequest":true,"CreatedAt":"2019-07-01T02:16:42","Actor":"dotnet-maestro[bot]","Number":"11678","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190630.4\r\n- **Date Produced**: 7/1/2019 1:46 AM\r\n- **Commit**: 9f18444518ff3c851f9e49d40e819b0cfe195acd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19330.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11678","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11678)"},{"Id":"462397814","IsPullRequest":true,"CreatedAt":"2019-06-30T18:52:34","Actor":"dotnet-maestro[bot]","Number":"11676","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11676","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11676)"},{"Id":"462429373","IsPullRequest":true,"CreatedAt":"2019-06-30T18:18:40","Actor":"dotnet-maestro[bot]","Number":"11677","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190630.2\r\n- **Date Produced**: 6/30/2019 5:48 PM\r\n- **Commit**: d6d12507dc2524ec55754974c77f32ce7c17bbdb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19330.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11677","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11677)"},{"Id":"462296736","IsPullRequest":true,"CreatedAt":"2019-06-30T12:41:57","Actor":"dotnet-maestro[bot]","Number":"11671","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 12:45 PM\r\n- **Commit**: ac48d58550544a9adbb9181042baff06edc6e347\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview.19329.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11671","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11671)"},{"Id":"462296234","IsPullRequest":true,"CreatedAt":"2019-06-30T12:05:01","Actor":"dotnet-maestro[bot]","Number":"11670","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 10:07 PM\r\n- **Commit**: ef7932d094d8cf6bfd567e3de0f852a3abda9fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19328.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11670","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11670)"},{"Id":"462296207","IsPullRequest":true,"CreatedAt":"2019-06-30T12:04:27","Actor":"dotnet-maestro[bot]","Number":"11669","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11669","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11669)"},{"Id":"462390922","IsPullRequest":true,"CreatedAt":"2019-06-30T11:03:57","Actor":"dotnet-maestro[bot]","Number":"11675","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 10:33 AM\r\n- **Commit**: 6dc65b16730abb9cba59e759012211e576f99188\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19330.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11675","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11675)"},{"Id":"462351574","IsPullRequest":true,"CreatedAt":"2019-06-30T10:33:17","Actor":"dotnet-maestro[bot]","Number":"11674","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.3\r\n- **Date Produced**: 6/29/2019 11:42 PM\r\n- **Commit**: 3b4ca06bbc96e4bd483cb5384e1da7d4a535e715\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11674","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11674)"},{"Id":"462287528","IsPullRequest":true,"CreatedAt":"2019-06-29T23:42:31","Actor":"dotnet-maestro[bot]","Number":"11667","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 10:02 AM\r\n- **Commit**: ef19361731617687698071cd8b3c64d7d68b28ac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19329.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11667","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11667)"},{"Id":"462307742","IsPullRequest":true,"CreatedAt":"2019-06-29T20:28:48","Actor":"nguerrera","Number":"11672","RawContent":null,"Title":"Fix issue with stale deps.json in tests and re-enable dotnet new tests","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11672","RelatedDescription":"Closed or merged PR \"Fix issue with stale deps.json in tests and re-enable dotnet new tests\" (#11672)"},{"Id":"462320274","IsPullRequest":false,"CreatedAt":"2019-06-29T16:58:12","Actor":"BruceForstall","Number":"11673","RawContent":null,"Title":"dotnet.exe keeps running in background","State":"open","Body":"After a build, I have 8 dotnet.exe processes around. If I use \"dotnet build-server shutdown\", I still have one dotnet.exe process running. How do I shut it down without just killing it using \"taskkill\" or the equivalent?\r\n\r\n## Steps to reproduce\r\n\r\nI build the dotnet/coreclr or dotnet/corefx repo. These download and install a dotnet CLI in the .dotnet directory.\r\n\r\n## Expected  behavior\r\n\r\ndotnet.exe goes away\r\n\r\n## Actual behavior\r\n\r\nI have many dotnet.exe processes, and one sticks around after \"build-server shutdown\". This causes \"git clean -dxf\" to fail.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n```\r\nC:\\gh\\corefx>.\\.dotnet\\dotnet.exe --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012630\r\n Commit:    11df535cab\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\gh\\corefx\\.dotnet\\sdk\\3.0.100-preview7-012630\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012630 [C:\\gh\\corefx\\.dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19325.7 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\gh\\corefx\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n(seems like this command ignores the \".dotnet\" directory)\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11673","RelatedDescription":"Open issue \"dotnet.exe keeps running in background\" (#11673)"},{"Id":"462289587","IsPullRequest":false,"CreatedAt":"2019-06-29T10:31:09","Actor":"benaadams","Number":"11668","RawContent":null,"Title":"dotnet publish should default to release mode","State":"open","Body":"Currently it defaults to debug\r\n\r\nWhile this is obvious when using `dotnet publish` without parameters as it puts it in a Debug folder; it is not obvious when using an output setting as it is put in the output directory without an obvious `Debug` moniker \r\n","Url":"https://github.com/dotnet/cli/issues/11668","RelatedDescription":"Open issue \"dotnet publish should default to release mode\" (#11668)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"462968084","IsPullRequest":true,"CreatedAt":"2019-07-02T00:40:40","Actor":"terrajobst","Number":"1300","RawContent":null,"Title":"Reduces System.Reflection.Emit to match CoreFX","State":"open","Body":"***DO NOT MERGE**. We need sign-off from ship room because it's a breaking change from an earlier preview.*\r\n\r\n---\r\n\r\nFor .NET Standard 2.1 we planned to extend Reflection Emit match the .NET Framework API surface but we never got around adding those APIs in .NET Core 3.0. Given that these APIs are rarely used, the proposal is to remove them from the .NET Standard 2.1. Please note that this isn't a breaking change from .NET Standard 2.0 but it is a breaking change from earlier preview versions of .NET Standard 2.1.\r\n\r\nSee issue dotnet/corefx#36716 for details.","Url":"https://github.com/dotnet/standard/pull/1300","RelatedDescription":"Open PR \"Reduces System.Reflection.Emit to match CoreFX\" (#1300)"},{"Id":"462698498","IsPullRequest":true,"CreatedAt":"2019-07-01T13:04:51","Actor":"dotnet-maestro[bot]","Number":"1299","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190630.3\r\n- **Date Produced**: 6/30/2019 6:47 PM\r\n- **Commit**: da3ba7ebe34771dde769b65dfb7f78fa55a5abb6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19330.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1299","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1299)"},{"Id":"462676118","IsPullRequest":true,"CreatedAt":"2019-07-01T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1298","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1298","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1298)"},{"Id":"462402162","IsPullRequest":true,"CreatedAt":"2019-06-30T13:03:36","Actor":"dotnet-maestro[bot]","Number":"1297","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.6\r\n- **Date Produced**: 6/30/2019 12:46 AM\r\n- **Commit**: 68763d3ce7d9db960aadecc0773e7c7b906cc3e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1297","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1297)"},{"Id":"462397733","IsPullRequest":true,"CreatedAt":"2019-06-30T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1296","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1296","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1296)"},{"Id":"462312057","IsPullRequest":false,"CreatedAt":"2019-06-29T15:21:55","Actor":"alecgn","Number":"1295","RawContent":null,"Title":"Consider adding AesGcm to .NET Standard 2.1","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Open issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295)"},{"Id":"462299907","IsPullRequest":true,"CreatedAt":"2019-06-29T13:03:28","Actor":"dotnet-maestro[bot]","Number":"1294","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1294)"},{"Id":"462296158","IsPullRequest":true,"CreatedAt":"2019-06-29T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1293","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1293)"},{"Id":"462019019","IsPullRequest":true,"CreatedAt":"2019-06-28T12:59:17","Actor":"dotnet-maestro[bot]","Number":"1292","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 4:10 AM\r\n- **Commit**: b8761d4848d42040c81ec25c8b51fd386b97f5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19327.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1292","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1292)"},{"Id":"462015053","IsPullRequest":false,"CreatedAt":"2019-06-28T12:38:56","Actor":"brad302","Number":"1291","RawContent":null,"Title":"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.","State":"open","Body":"Apologies if this isn't the correct place but it seems like the most logical place to start.\r\n\r\nI used this link ... [https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/](https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/) (which worked for other projects) ... to convert my PCL project in Xamarin Forms to .NET Standard 2.0 and ever since, I've had the issue where XAML files appear twice and no matter what I try, they simply will not fall back into line as one with the .cs file as its dependency ...\r\n\r\n<img width=\"301\" alt=\"Screen Shot 2019-06-28 at 10 25 57 pm\" src=\"https://user-images.githubusercontent.com/14899088/60342052-c43dd500-99f3-11e9-814e-c1441bde4484.png\">\r\n\r\n... even new XAML ContentPage files display the same behaviour, however, not initially.  If I close the project and reopen, they appear as 2.  I've tried removing and adding the files back in different ways but still no luck.\r\n\r\nMy .csproj file is very light on ...\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <!--<PackageReference Include=\"\" Version=\"\"/>-->\r\n        <PackageReference Include=\"CarouselView.FormsPlugin\" Version=\"5.0.0\" />\r\n        <PackageReference Include=\"Com.Airbnb.Xamarin.Forms.Lottie\" Version=\"2.5.4\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Analytics\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Crashes\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" />\r\n        <PackageReference Include=\"Refit\" Version=\"4.5.6\" />\r\n        <PackageReference Include=\"SkiaSharp.Views.Forms\" Version=\"1.68.0\" />\r\n        <PackageReference Include=\"sqlite-net-pcl\" Version=\"1.5.231\" />\r\n        <PackageReference Include=\"System.Net.Http\" Version=\"4.3.4\" />\r\n        <PackageReference Include=\"Xam.Plugin.Media\" Version=\"4.0.1.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Forms.ImageCircle\" Version=\"3.0.0.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Messaging\" Version=\"5.2.0\" />\r\n        <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.1.0\" />\r\n        <PackageReference Include=\"Xamarin.Forms\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"Xamarin.Forms.Maps\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile.Forms\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.5.0\" />\r\n        <PackageReference Include=\"UltimateXF\" Version=\"2.3.2\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Auth\" Version=\"2.1.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n... and nothing on other community sites (e.g. StackOverflow) have helped me overcome this.\r\n\r\nThis is the entire error minus ALL of the XAML files within the project listed ...\r\n\r\n`/usr/local/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.DefaultItems.targets(5,5): Error NETSDK1022: Duplicate 'EmbeddedResource' items were included. The .NET SDK includes 'EmbeddedResource' items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultEmbeddedResourceItems' property to 'false' if you want to explicitly include them in your project file. For more information, see https://aka.ms/sdkimplicititems. The duplicate items were: 'App.xaml'; etc … (NETSDK1022) (cPanel)`\r\n\r\nI've looked at the resource in the error message, tried a number of things as listed but none had the desired outcome.\r\n\r\nEverything was behaving until I upgraded to Xamarin Forms 4.0 and want to move forward with the latest SDK.\r\n\r\nHopefully someone can help me through this.","Url":"https://github.com/dotnet/standard/issues/1291","RelatedDescription":"Open issue \"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.\" (#1291)"},{"Id":"462001956","IsPullRequest":true,"CreatedAt":"2019-06-28T12:14:01","Actor":"dotnet-maestro[bot]","Number":"1289","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1289","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1289)"},{"Id":"462004700","IsPullRequest":true,"CreatedAt":"2019-06-28T12:11:43","Actor":"roji","Number":"1290","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*()","State":"open","Body":"See https://github.com/dotnet/corefx/issues/31595\r\n\r\nThis is the 3rd and last in this batch of System.Data changes.\r\n\r\nNote that for the naming and namespace for the new DataReaderExtensions class, see https://github.com/dotnet/corefx/pull/36123#issuecomment-475762481 and https://github.com/dotnet/corefx/pull/36123#discussion_r267625142.","Url":"https://github.com/dotnet/standard/pull/1290","RelatedDescription":"Open PR \"Add string overloads to DbDataReader.Get*()\" (#1290)"},{"Id":"461045281","IsPullRequest":true,"CreatedAt":"2019-06-28T11:31:25","Actor":"roji","Number":"1284","RawContent":null,"Title":"Add feature detection properties to DbProviderFactory","State":"closed","Body":"CanCreateDataAdapter, CanCreateCommandBuilder\r\n\r\nSee https://github.com/dotnet/corefx/issues/35564\r\n\r\n/cc @divega @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1284","RelatedDescription":"Closed or merged PR \"Add feature detection properties to DbProviderFactory\" (#1284)"},{"Id":"461514630","IsPullRequest":true,"CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Number":"1288","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1288)"},{"Id":"461489560","IsPullRequest":true,"CreatedAt":"2019-06-27T12:14:35","Actor":"dotnet-maestro[bot]","Number":"1287","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1287)"},{"Id":"461135035","IsPullRequest":true,"CreatedAt":"2019-06-26T20:09:26","Actor":"dotnet-maestro-bot","Number":"1285","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1285","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1285)"},{"Id":"461136908","IsPullRequest":true,"CreatedAt":"2019-06-26T19:14:40","Actor":"wtgodbe","Number":"1286","RawContent":null,"Title":"Update branding to preview8 in master","State":"closed","Body":"CC @terrajobst","Url":"https://github.com/dotnet/standard/pull/1286","RelatedDescription":"Closed or merged PR \"Update branding to preview8 in master\" (#1286)"},{"Id":"461018856","IsPullRequest":true,"CreatedAt":"2019-06-26T14:51:16","Actor":"roji","Number":"1283","RawContent":null,"Title":"Add async methods in System.Data.Common, implement IAsyncDisposable","State":"open","Body":"***DO NOT MERGE until dotnet/corefx#39070 is merged***\r\n\r\n---\r\n\r\nThis brings over https://github.com/dotnet/corefx/issues/35012 (already merged for .NET Core 3.0) to .NET Standard 2.1.\r\n\r\nOne thing I noticed, is that in the corefx implementation the types have been updated to implement IAsyncDisposable, but in the ref they have not (although `DisposeAsync()` has been added). Can someone please confirm whether the interface should get added there?","Url":"https://github.com/dotnet/standard/pull/1283","RelatedDescription":"Open PR \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#1283)"},{"Id":"460955255","IsPullRequest":true,"CreatedAt":"2019-06-26T13:07:21","Actor":"dotnet-maestro[bot]","Number":"1282","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 10:31 AM\r\n- **Commit**: 219b67118e3a2d539afc1ff3bb2c10e1bc7b03d2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19326.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1282","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1282)"},{"Id":"460930584","IsPullRequest":true,"CreatedAt":"2019-06-26T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1281","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1281","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1281)"},{"Id":"460410476","IsPullRequest":true,"CreatedAt":"2019-06-25T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1280","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190624.8\r\n- **Date Produced**: 6/25/2019 7:00 AM\r\n- **Commit**: 60d8aa31a4c1ffa0e125bd7941aca171439a2f72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19324.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1280","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1280)"},{"Id":"460383422","IsPullRequest":true,"CreatedAt":"2019-06-25T12:13:57","Actor":"dotnet-maestro[bot]","Number":"1278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190624.24\r\n- **Date Produced**: 6/25/2019 1:31 AM\r\n- **Commit**: 062febd818fa51e82c7192782a6b6e6429cc81c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19324.24\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1278)"},{"Id":"460383487","IsPullRequest":false,"CreatedAt":"2019-06-25T12:04:02","Actor":"Rajesht2305","Number":"1279","RawContent":null,"Title":"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'","State":"open","Body":"Hello Team,\r\nwe are using .net standard libraries in .net framework application. trying to access network share by using Impersonation but windows identity is throwing not supported exception. \r\n\r\nCode snippet: \r\n\r\n public void RunImpersonated(Action action)\r\n        {\r\n            using (WindowsIdentity identity = new WindowsIdentity(_token))\r\n            {\r\n                WindowsIdentity.RunImpersonated(identity.AccessToken, action);\r\n                //_context = identity.Impersonate();\r\n            }\r\n        }\r\n\r\n.net standard dll versions:\r\n.net standard -version 2.0\r\nSystem.Security.Principal.Windows - version: 4.1.1.1\r\n.net framework version -4.7.2\r\n\r\nany support to resolve this issue?","Url":"https://github.com/dotnet/standard/issues/1279","RelatedDescription":"Open issue \"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'\" (#1279)"},{"Id":"459877781","IsPullRequest":true,"CreatedAt":"2019-06-24T13:09:35","Actor":"dotnet-maestro[bot]","Number":"1277","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 1:16 AM\r\n- **Commit**: 2861ef06530df06b70f17a91616d979c8f18f75e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19323.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1277","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1277)"},{"Id":"459852547","IsPullRequest":true,"CreatedAt":"2019-06-24T12:13:59","Actor":"dotnet-maestro[bot]","Number":"1276","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 7:07 AM\r\n- **Commit**: 9946534da4f73e6242ca105f6798ab58119c9ab0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19323.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1276","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1276)"},{"Id":"459599516","IsPullRequest":false,"CreatedAt":"2019-06-23T17:33:09","Actor":"hankir","Number":"1275","RawContent":null,"Title":"Date type needed","State":"open","Body":"DateTime type is useful, but of some cases require different types for Date and DateTime. Sometimes time is not filled and equal 00:00:00.\r\nBut how detect case when timezone offset take 00:00:00 from date with time.\r\nFor example, 04:00 (UTC +04:00) AM will be 00:00 when it convert to UTC for store in database.\r\n\r\nCan do lot of implementations for solve this problem. For example, use NodeTime, but i think that this type should be in .Net Standad.\r\n\r\nWhat do you think?","Url":"https://github.com/dotnet/standard/issues/1275","RelatedDescription":"Open issue \"Date type needed\" (#1275)"},{"Id":"459597750","IsPullRequest":false,"CreatedAt":"2019-06-23T17:13:19","Actor":"hankir","Number":"1274","RawContent":null,"Title":"Reflections on Enum","State":"open","Body":"In java enum is more useful. Just look at this:\r\n\r\npublic enum DayOfWeek {\r\n   SUNDAY (\"Sunday\"),\r\n   MONDAY (\"Monday\"),\r\n   TUESDAY (\"Tuesday\"),\r\n   WEDNESDAY (\"Wednesday\"),\r\n   THURSDAY (\"Thursday\"),\r\n   FRIDAY (\"Friday\"),\r\n   SATURDAY (\"Saturday\");\r\n\r\n   private String title;\r\n\r\n   DayOfWeek(String title) {\r\n       this.title = title;\r\n   }\r\n\r\n   public String getTitle() {\r\n       return title;\r\n   }\r\n\r\n   @Override\r\n   public String toString() {\r\n       return \"DayOfWeek{\" +\r\n               \"title='\" + title + '\\'' +\r\n               '}';\r\n   }\r\n}\r\n\r\nWhat do you think about this way?\r\nIt is powerful when use DDD practice and in other cases.","Url":"https://github.com/dotnet/standard/issues/1274","RelatedDescription":"Open issue \"Reflections on Enum\" (#1274)"},{"Id":"459573820","IsPullRequest":true,"CreatedAt":"2019-06-23T13:12:01","Actor":"dotnet-maestro[bot]","Number":"1273","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190622.7\r\n- **Date Produced**: 6/23/2019 6:08 AM\r\n- **Commit**: 3b39190472c73ef0c4da485bfba0aa57f9ae3b37\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19322.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19322.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1273","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1273)"},{"Id":"459568213","IsPullRequest":true,"CreatedAt":"2019-06-23T12:14:03","Actor":"dotnet-maestro[bot]","Number":"1272","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190622.2\r\n- **Date Produced**: 6/22/2019 12:46 PM\r\n- **Commit**: 48aed493ffa093728bc9ffd17be0e5957f77aade\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19322.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19322.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1272","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1272)"},{"Id":"459472124","IsPullRequest":true,"CreatedAt":"2019-06-22T13:11:49","Actor":"dotnet-maestro[bot]","Number":"1271","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1271)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"462908989","IsPullRequest":true,"CreatedAt":"2019-07-02T04:13:58","Actor":"cston","Number":"39096","RawContent":null,"Title":"Use same Encoding for Asc() and Chr()","State":"closed","Body":"Fixes #34256","Url":"https://github.com/dotnet/corefx/pull/39096","RelatedDescription":"Closed or merged PR \"Use same Encoding for Asc() and Chr()\" (#39096)"},{"Id":"462949224","IsPullRequest":true,"CreatedAt":"2019-07-02T01:06:32","Actor":"Dotnet-GitSync-Bot","Number":"39100","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang @danmosemsft","Url":"https://github.com/dotnet/corefx/pull/39100","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#39100)"},{"Id":"462963203","IsPullRequest":true,"CreatedAt":"2019-07-02T00:15:02","Actor":"terrajobst","Number":"39102","RawContent":null,"Title":"Simplify baselining for .NET Standard","State":"open","Body":"In order to update the .NET Standard baseline, you can just start the build with either\r\n\r\n```shell\r\n/p:UpdateNETStandardBaseline=True\r\n```\r\n\r\nof\r\n\r\n```shell\r\n/p:UpdateNETStandardBaselineLocally=True\r\n```\r\n\r\nThe difference is that the former uses the official .NET Standard while the latter uses a locally built .NET Standard (Debug, in a folder parallel to where you checked out CoreFx).\r\n\r\nGiven that the baseline is written using redirection, I've also added an extra new line in the baseline file to remove future noise.\r\n","Url":"https://github.com/dotnet/corefx/pull/39102","RelatedDescription":"Open PR \"Simplify baselining for .NET Standard\" (#39102)"},{"Id":"462865270","IsPullRequest":false,"CreatedAt":"2019-07-01T23:49:49","Actor":"brhoten","Number":"39093","RawContent":null,"Title":"HttpClient super slow when used with localhost","State":"closed","Body":"I'm using dotnet-sdk-3.0.100-preview6-012264-win-x64, but experienced the same problem in older .net core versions. Does not appear to be a problem with .net framework implementations.\r\n\r\n```var content = await client.PostAsync(\"http://localhost:8187/\", payload);```\r\n\r\nis about 10-100x slower than\r\n\r\n```var content = await client.PostAsync(\"http://127.0.0.1:8187/\", payload);```\r\n","Url":"https://github.com/dotnet/corefx/issues/39093","RelatedDescription":"Closed issue \"HttpClient super slow when used with localhost\" (#39093)"},{"Id":"462953405","IsPullRequest":true,"CreatedAt":"2019-07-01T23:27:59","Actor":"cston","Number":"39101","RawContent":null,"Title":"Compile InvocationExpression target if necessary","State":"open","Body":"Replaces code removed in https://github.com/dotnet/corefx/pull/18468.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/30471","Url":"https://github.com/dotnet/corefx/pull/39101","RelatedDescription":"Open PR \"Compile InvocationExpression target if necessary\" (#39101)"},{"Id":"462941125","IsPullRequest":true,"CreatedAt":"2019-07-01T22:37:04","Actor":"buyaa-n","Number":"39099","RawContent":null,"Title":"Fixing issue happenning on very large zip files","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/39075. Had 2 bug here:\r\n1. Issue with determining if the zip file is 64 bit zip or not\r\n2. Casting long to int before comparing with int was very stupid mistake \r\n\r\nDidn't had a test with such big files and didn't added such test case because Compression Test data doesn't have big enough zip file for this kind of testing. As this failing test `System.IO.Packaging.Tests.VeryLargePart` reported in the issue is covering this uncovered scenario i think we are good.","Url":"https://github.com/dotnet/corefx/pull/39099","RelatedDescription":"Open PR \"Fixing issue happenning on very large zip files\" (#39099)"},{"Id":"462933101","IsPullRequest":true,"CreatedAt":"2019-07-01T22:10:32","Actor":"Anipik","Number":"39098","RawContent":null,"Title":"Font converter implementation made similar to netfx","State":"open","Body":"Fixes #38960 \r\n\r\nThe current implementation of System.Drawing.Converters is quite different from .NetFramework\r\nThe main difference is in Font Coverter eg\r\nDefault units for input size is px on core vs pt on framework.\r\n.Net core doesnot support size without units.\r\n.Net Core doesnot have any restrictions on the input style string eg Name, size , anyRandomGarbageBold will be consider as bold style.\r\n\r\nFontUnitConverter treats \"Display\" as a value in .net core while its not a value in .netFramework\r\n\r\nThe rest of the converters are almost similar. This PR all adds Tests for the fontConverter\r\n\r\nIt is technically a breaking change but I think we should go ahead and fix this behavior\r\n","Url":"https://github.com/dotnet/corefx/pull/39098","RelatedDescription":"Open PR \"Font converter implementation made similar to netfx\" (#39098)"},{"Id":"462920807","IsPullRequest":true,"CreatedAt":"2019-07-01T21:32:01","Actor":"wfurt","Number":"39097","RawContent":null,"Title":"improve Http2_PendingSend_SendsReset test.","State":"open","Body":"This adds extra time to make test more resilient to timing.\r\nNote, that this does not increase test duration in normal case.  We will try to cancel as soon as we get request headers and test will finish when we verify proper cancelation. \r\n\r\nfixes #38820\r\n\r\nI also added check to verify that we get only one RST and nothing more. \r\n\r\ncontributes to #38913 \r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39097","RelatedDescription":"Open PR \"improve Http2_PendingSend_SendsReset test.\" (#39097)"},{"Id":"462832759","IsPullRequest":true,"CreatedAt":"2019-07-01T19:47:41","Actor":"Dotnet-GitSync-Bot","Number":"39090","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @kouvel @MichalStrehovsky","Url":"https://github.com/dotnet/corefx/pull/39090","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#39090)"},{"Id":"462880860","IsPullRequest":true,"CreatedAt":"2019-07-01T19:47:19","Actor":"akoeplinger","Number":"39095","RawContent":null,"Title":"System.Numerics.Vectors: Remove reflection in GenericVectorTests","State":"open","Body":"This allows us to use the test with the managed linker enabled in Xamarin.iOS\r\nsince it no longer strips out the MaxValue/MinValue fields.\r\n\r\nSee https://github.com/mono/mono/issues/14877","Url":"https://github.com/dotnet/corefx/pull/39095","RelatedDescription":"Open PR \"System.Numerics.Vectors: Remove reflection in GenericVectorTests\" (#39095)"},{"Id":"462880425","IsPullRequest":true,"CreatedAt":"2019-07-01T19:46:06","Actor":"layomia","Number":"39094","RawContent":null,"Title":"Add real world tests","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/39094","RelatedDescription":"Open PR \"Add real world tests\" (#39094)"},{"Id":"462815954","IsPullRequest":true,"CreatedAt":"2019-07-01T19:15:16","Actor":"bartonjs","Number":"39087","RawContent":null,"Title":"Standardize error for RSACng.ImportParameters","State":"closed","Body":"Windows 7, 8.1, 10-RS4, and 10-19H1 all fail to import the key described in the\r\nRSAXml.FromNonsenseXml test with a WindowsCryptographicException from\r\nNCryptImportKey reporting NTE_NOT_SUPPORTED.\r\n\r\nWindows 10-RS1 successfully imports the invalid key, not realizing that it is\r\ninvalid until use -- e.g. calling SignData throws a\r\nWindowsCryptographicException reporting NTE_INVALID_PARAMETER.\r\n\r\nBy copying the same D.Length == Modulus.Length, everything else == halfModulusLength\r\ncheck from RSACryptoServiceProvider, invalid keys of this form are now\r\nconsistently rejected in ImportParameters, and the exception message is\r\na bit friendlier.\r\n\r\nFixes #37886.","Url":"https://github.com/dotnet/corefx/pull/39087","RelatedDescription":"Closed or merged PR \"Standardize error for RSACng.ImportParameters\" (#39087)"},{"Id":"462802407","IsPullRequest":true,"CreatedAt":"2019-07-01T19:12:55","Actor":"stephentoub","Number":"39085","RawContent":null,"Title":"Fix MaxResponseHeadersLength assert for value string","State":"closed","Body":"I'd fixed the assert message to contain the right value when MaxResponseHeadersLength was exceeded, but this error message isn't used for WinHttpHandler, and thus it doesn't contain the value.  Special-case the check for just SocketsHttpHandler.","Url":"https://github.com/dotnet/corefx/pull/39085","RelatedDescription":"Closed or merged PR \"Fix MaxResponseHeadersLength assert for value string\" (#39085)"},{"Id":"462817820","IsPullRequest":true,"CreatedAt":"2019-07-01T19:10:58","Actor":"carlossanlop","Number":"39088","RawContent":null,"Title":"Update ownership for System.IO.Packaging","State":"closed","Body":"I noticed I'm receiving the automated emails for this area when someone reports a new issue, but I wasn't officially an owner in the [ownership page](https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/issue-guide.md), so I added myself.\r\n@karelz if this is not correct, let me know to cancel the PR.","Url":"https://github.com/dotnet/corefx/pull/39088","RelatedDescription":"Closed or merged PR \"Update ownership for System.IO.Packaging\" (#39088)"},{"Id":"462863491","IsPullRequest":true,"CreatedAt":"2019-07-01T19:02:56","Actor":"safern","Number":"39092","RawContent":null,"Title":"Fix Utf8JsonWriter xml docs","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/38896\r\n\r\ncc: @ahsonkhan @stephentoub @bartonjs ","Url":"https://github.com/dotnet/corefx/pull/39092","RelatedDescription":"Open PR \"Fix Utf8JsonWriter xml docs\" (#39092)"},{"Id":"462842736","IsPullRequest":true,"CreatedAt":"2019-07-01T18:09:20","Actor":"ViktorHofer","Number":"39091","RawContent":null,"Title":"Enable deps.json generation","State":"open","Body":"This will cause tests to fail.","Url":"https://github.com/dotnet/corefx/pull/39091","RelatedDescription":"Open PR \"Enable deps.json generation\" (#39091)"},{"Id":"462829579","IsPullRequest":false,"CreatedAt":"2019-07-01T17:32:35","Actor":"atanasa","Number":"39089","RawContent":null,"Title":"Extend the Xml Serializer Generator to generate serializers for faults","State":"open","Body":"I have operations that use the XmlSerializer to serialize faults. The pregenerated serializers does not have serializers for those. \r\n\r\nIs there an option to extend the svcutil serializer generator to emit code for those too?\r\n\r\nI've noticed that if I don't pregenerate the serializers, at runtime the serializer that is generated in-memory generates mappings for faults (along with the request/responce serializers).\r\nFor some reason when I pregenerate the serializers, only the mappings of the request/response serializers are generated and faults are left to the default serializer.\r\n\r\nLooking at the code, WCF already generated the mappings for the faults but does not include them for the pregenerated serializers for some reason.","Url":"https://github.com/dotnet/corefx/issues/39089","RelatedDescription":"Open issue \"Extend the Xml Serializer Generator to generate serializers for faults\" (#39089)"},{"Id":"462804828","IsPullRequest":false,"CreatedAt":"2019-07-01T16:26:07","Actor":"ViktorHofer","Number":"39086","RawContent":null,"Title":"Harvest old netfx configurations","State":"open","Body":"Live built netfx configuration which aren't maintained/developed further and which haven't changed since the last release should be harvested to simplify our configuration matrix. Additionally, applicable tests should be removed as having them run in LTS branches should be sufficient.\r\n\r\ncc @ericstj @safern ","Url":"https://github.com/dotnet/corefx/issues/39086","RelatedDescription":"Open issue \"Harvest old netfx configurations\" (#39086)"},{"Id":"462765858","IsPullRequest":true,"CreatedAt":"2019-07-01T16:24:27","Actor":"dotnet-maestro[bot]","Number":"39080","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190701.2\r\n- **Date Produced**: 7/1/2019 1:21 PM\r\n- **Commit**: 0b73020d8036a5dff3675774e1a7d20110dd17f6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19351.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39080","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#39080)"},{"Id":"462752263","IsPullRequest":true,"CreatedAt":"2019-07-01T16:15:25","Actor":"tmds","Number":"39078","RawContent":null,"Title":"WaitIdAnyExitedNoHangNoWait: handle waitid returning 0 for no waitable children","State":"closed","Body":"This may fix https://github.com/dotnet/corefx/issues/39060.\r\n\r\n@stephentoub ptal","Url":"https://github.com/dotnet/corefx/pull/39078","RelatedDescription":"Closed or merged PR \"WaitIdAnyExitedNoHangNoWait: handle waitid returning 0 for no waitable children\" (#39078)"},{"Id":"462799681","IsPullRequest":false,"CreatedAt":"2019-07-01T16:13:32","Actor":"stephentoub","Number":"39084","RawContent":null,"Title":"ConvertTo_DestinationType_Success test failed in CI","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F39078~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.19/workItem/System.ComponentModel.TypeConverter.Tests/analysis/xunit/System.ComponentModel.Tests.DateTimeOffsetConverterTests~2FConvertTo_DestinationType_Success\r\n```\r\nWindows.10.Amd64.ClientRS5.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.AllException\r\nMessage :\r\nAssert.All() Failure: 1 out of 13 items in the collection did not pass.\r\n[3]: Item: System.ComponentModel.Tests.TypeConverterTestBase+ConvertTest\r\n     Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n     Expected: 12/5/1998 10:30 PM +00:00\r\n     Actual:   05/12/1998 22:30 +00:00\r\n        at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\EqualityAsserts.cs:line 41\r\n        at Xunit.Assert.Equal[T](T expected, T actual) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\EqualityAsserts.cs:line 25\r\n        at System.ComponentModel.Tests.TypeConverterTestBase.AssertEqualInstanceDescriptor(Object expected, Object actual) in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 173\r\n        at System.ComponentModel.Tests.TypeConverterTestBase.<ConvertTo_DestinationType_Success>b__13_0(ConvertTest convertTest) in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 42\r\n        at Xunit.Assert.All[T](IEnumerable`1 collection, Action`1 action) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\CollectionAsserts.cs:line 36\r\nStack Trace :\r\n   at System.ComponentModel.Tests.TypeConverterTestBase.ConvertTo_DestinationType_Success() in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 31\r\n```","Url":"https://github.com/dotnet/corefx/issues/39084","RelatedDescription":"Open issue \"ConvertTo_DestinationType_Success test failed in CI\" (#39084)"},{"Id":"462775586","IsPullRequest":true,"CreatedAt":"2019-07-01T15:22:52","Actor":"adiaaida","Number":"39083","RawContent":null,"Title":"[no merge] [WIP] Add perf testing","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/39083","RelatedDescription":"Open PR \"[no merge] [WIP] Add perf testing\" (#39083)"},{"Id":"462769790","IsPullRequest":false,"CreatedAt":"2019-07-01T15:11:41","Actor":"stephentoub","Number":"39082","RawContent":null,"Title":"Http2_InitialWindowSize_ClientDoesNotExceedWindows test sporadically failing CI","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38804~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.1/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2~2FHttp2_InitialWindowSize_ClientDoesNotExceedWindows\r\n\r\ne.g.\r\n```\r\nWindows.81.Amd64.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.FalseException\r\nMessage :\r\nAssert.False() Failure\r\nExpected: False\r\nActual:   True\r\nStack Trace :\r\n   at System.Net.Test.Common.Http2LoopbackConnection.ExpectSettingsAck() in /_/src/Common/tests/System/Net/Http/Http2LoopbackConnection.cs:line 199\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.Http2_InitialWindowSize_ClientDoesNotExceedWindows() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 1193\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/corefx/issues/39082","RelatedDescription":"Open issue \"Http2_InitialWindowSize_ClientDoesNotExceedWindows test sporadically failing CI\" (#39082)"},{"Id":"462743906","IsPullRequest":true,"CreatedAt":"2019-07-01T15:09:53","Actor":"stephentoub","Number":"39077","RawContent":null,"Title":"Disable Http2_PendingSend_SendsReset test sporadically failing in CI","State":"closed","Body":"#38820","Url":"https://github.com/dotnet/corefx/pull/39077","RelatedDescription":"Closed or merged PR \"Disable Http2_PendingSend_SendsReset test sporadically failing in CI\" (#39077)"},{"Id":"462740341","IsPullRequest":true,"CreatedAt":"2019-07-01T15:09:38","Actor":"stephentoub","Number":"39076","RawContent":null,"Title":"Disable VeryLargePart Packaging test","State":"closed","Body":"https://github.com/dotnet/corefx/issues/39075","Url":"https://github.com/dotnet/corefx/pull/39076","RelatedDescription":"Closed or merged PR \"Disable VeryLargePart Packaging test\" (#39076)"},{"Id":"462768606","IsPullRequest":false,"CreatedAt":"2019-07-01T15:09:23","Actor":"stephentoub","Number":"39081","RawContent":null,"Title":"System.Text.Json tests crashing outerloop on Unix","State":"open","Body":"e.g.\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38804~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.1/workItem/System.Text.Json.Tests/wilogs\r\n\r\ncc: @ahsonkhan, @steveharter, @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/39081","RelatedDescription":"Open issue \"System.Text.Json tests crashing outerloop on Unix\" (#39081)"},{"Id":"462707424","IsPullRequest":true,"CreatedAt":"2019-07-01T14:58:55","Actor":"dotnet-maestro[bot]","Number":"39074","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 12:30 PM\r\n- **Commit**: 40737fcdcec614cefe21a1ccd305743bf83db08b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19351.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39074","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#39074)"},{"Id":"462761652","IsPullRequest":true,"CreatedAt":"2019-07-01T14:56:12","Actor":"tmds","Number":"39079","RawContent":null,"Title":"[no merge] CI test run for Socket.Dispose changes","State":"open","Body":"Runs tests of https://github.com/dotnet/corefx/pull/38804.","Url":"https://github.com/dotnet/corefx/pull/39079","RelatedDescription":"Open PR \"[no merge] CI test run for Socket.Dispose changes\" (#39079)"},{"Id":"462694659","IsPullRequest":true,"CreatedAt":"2019-07-01T14:23:54","Actor":"dotnet-maestro[bot]","Number":"39073","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 11:21 AM\r\n- **Commit**: 5750c69cdab5d2013fdebe2c6080132e9edb5a3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190701.1\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39073","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#39073)"},{"Id":"462739732","IsPullRequest":false,"CreatedAt":"2019-07-01T14:15:48","Actor":"stephentoub","Number":"39075","RawContent":null,"Title":"System.IO.Packaging VeryLargePart outerloop test failing in CI","State":"open","Body":"It's failing e.g. on all OSes here:\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38804~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.1/workItem/System.IO.Packaging.Tests/analysis/xunit/System.IO.Packaging.Tests.Tests~2FVeryLargePart\r\n```\r\nUnhandled Exception of Type System.IO.InvalidDataException\r\nMessage :\r\nSystem.IO.InvalidDataException : A local file header is corrupt.\r\nStack Trace :\r\n   at System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable(Boolean needToUncompress, Boolean needToLoadIntoMemory) in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 597\r\n   at System.IO.Compression.ZipArchiveEntry.OpenInReadMode(Boolean checkOpenable) in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 670\r\n   at System.IO.Compression.ZipArchiveEntry.Open() in /_/src/System.IO.Compression/src/System/IO/Compression/ZipArchiveEntry.cs:line 297\r\n   at System.IO.Packaging.ZipStreamManager.Open(ZipArchiveEntry zipArchiveEntry, FileMode streamFileMode, FileAccess streamFileAccess) in /_/src/System.IO.Packaging/src/System/IO/Packaging/ZipStreamManager.cs:line 86\r\n   at System.IO.Packaging.ZipPackagePart.GetStreamCore(FileMode streamFileMode, FileAccess streamFileAccess) in /_/src/System.IO.Packaging/src/System/IO/Packaging/ZipPackagePart.cs:line 38\r\n   at System.IO.Packaging.PackagePart.GetStream(FileMode mode, FileAccess access) in /_/src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs:line 323\r\n   at System.IO.Packaging.PackagePart.GetStream() in /_/src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs:line 270\r\n   at System.IO.Packaging.Tests.Tests.VeryLargePart() in /_/src/System.IO.Packaging/tests/Tests.cs:line 3739\r\n```\r\ncc: @ericstj","Url":"https://github.com/dotnet/corefx/issues/39075","RelatedDescription":"Open issue \"System.IO.Packaging VeryLargePart outerloop test failing in CI\" (#39075)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"462960674","IsPullRequest":true,"CreatedAt":"2019-07-02T01:30:06","Actor":"dotnet-bot","Number":"36923","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36923","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36923)"},{"Id":"462949307","IsPullRequest":true,"CreatedAt":"2019-07-02T01:26:56","Actor":"dibarbet","Number":"36916","RawContent":null,"Title":"Add liveshare local forwarders for C#_LSP content type","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36916","RelatedDescription":"Closed or merged PR \"Add liveshare local forwarders for C#_LSP content type\" (#36916)"},{"Id":"462971806","IsPullRequest":false,"CreatedAt":"2019-07-02T01:00:01","Actor":"tmat","Number":"36926","RawContent":null,"Title":"Synthesized namespaces of SynthesizedEmbeddedAttributeSymbolBase shouldn't be \"missing\"","State":"open","Body":"`SynthesizedEmbeddedAttributeSymbolBase` constructs `MissingNamespaceSymbol` here:\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.CSharp/Symbols/Synthesized/SynthesizedEmbeddedAttributeSymbol.cs,43\r\n\r\nthat then flow into the emitter. Although this works ok today, it is unusual for the emitter to encounter missing symbols. I believe the invariant should be that the emitter does not emit any missing symbols.\r\n\r\nAlso, the code does not look for existing source namespaces that the compilation might already contain and creates new `MissingNamespaceSymbol` regardless.","Url":"https://github.com/dotnet/roslyn/issues/36926","RelatedDescription":"Open issue \"Synthesized namespaces of SynthesizedEmbeddedAttributeSymbolBase shouldn't be \"missing\"\" (#36926)"},{"Id":"462968144","IsPullRequest":true,"CreatedAt":"2019-07-02T00:40:57","Actor":"dibarbet","Number":"36925","RawContent":null,"Title":"Merge liveshare changes to do dual insertion.","State":"open","Body":"Draft - Pending\r\n\r\n1.  1 more fix https://github.com/dotnet/roslyn/pull/36916\r\n2.  Signoff from liveshare / our testing.","Url":"https://github.com/dotnet/roslyn/pull/36925","RelatedDescription":"Open PR \"Merge liveshare changes to do dual insertion.\" (#36925)"},{"Id":"462966658","IsPullRequest":true,"CreatedAt":"2019-07-02T00:32:46","Actor":"CyrusNajmabadi","Number":"36924","RawContent":null,"Title":"Require System.Index/Range to be present to offer to use the new language features.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36909\r\n\r\nA while back the compiler had a permissive view of indexing into a string or array with an `^` indexer, or a Range.  Specifically, it would allow doing this *even if* there was no System.Index or System.Range present.  This was fine as the compiler wasn't using those types anyways, it was just translating things to the underlying calls to the int based indexers/substrings/array-copies.\r\n\r\nWhen i added the \"use index or range operator\" feature i took this into account, and we would offer the feature on strings/arrays when possible.\r\n\r\nHowever, at some point teh compiler changed their strategy, and these are still required to be present (even if they are unused).\r\n\r\nThis changes the IDE feature to respect that and to not offer the feature unless those types are present.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/36924","RelatedDescription":"Open PR \"Require System.Index/Range to be present to offer to use the new language features.\" (#36924)"},{"Id":"462960583","IsPullRequest":true,"CreatedAt":"2019-07-02T00:01:58","Actor":"dotnet-bot","Number":"36922","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36922","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36922)"},{"Id":"462960555","IsPullRequest":true,"CreatedAt":"2019-07-02T00:01:51","Actor":"dotnet-bot","Number":"36921","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36921","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36921)"},{"Id":"462960408","IsPullRequest":true,"CreatedAt":"2019-07-02T00:01:13","Actor":"dotnet-bot","Number":"36920","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36920","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#36920)"},{"Id":"462960239","IsPullRequest":true,"CreatedAt":"2019-07-02T00:00:35","Actor":"dotnet-bot","Number":"36919","RawContent":null,"Title":"Merge release/dev16.3-preview1 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36919","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to master\" (#36919)"},{"Id":"462957674","IsPullRequest":false,"CreatedAt":"2019-07-01T23:48:03","Actor":"mikadumont","Number":"36918","RawContent":null,"Title":"Keyboard Setup Confusing","State":"open","Body":"**Feature Goals**: \r\nKeyboard setup to be less confusing and consolidate the settings wizard experience with the reset keyboard experience. \r\n\r\n**Proposal**: \r\n1. 'Ok' Saves the keymap profile so instead of it saying 'Ok' have it say 'Save':\r\n![image](https://user-images.githubusercontent.com/46729679/60142359-47e69000-976e-11e9-874c-c2dab52c7e2d.png)\r\n\r\n2. 'Reset' resets to default but if a user sets their keymap profile to a non default option and selects 'Reset' they can think its resetting to the keymap profile they chose - perhaps we can surface a message when you hover over 'Reset' to say: 'Reset to default':\r\n![image](https://user-images.githubusercontent.com/46729679/60142479-d9ee9880-976e-11e9-84d1-d5c6054c88ae.png)\r\n\r\n3. 'Reset' doesn't seem to fully reset keymap. For instance, a user that uninstalls a third party extension that changed their keymap profile still needs to go into the Import and Export Settings Wizard to actually reset their keymap profile back to default because 'Reset' doesn't seem to do the trick:\r\n![image](https://user-images.githubusercontent.com/46729679/60142531-1ae6ad00-976f-11e9-8457-73005c738786.png)\r\n\r\n4. Update keymap profile options since some are outdated: \r\n![image](https://user-images.githubusercontent.com/46729679/60142703-dad3fa00-976f-11e9-88c4-90c6e4f71ee2.png)\r\n\r\n5. Make this a standard search box and have it say 'search' commands containing instead of 'show':\r\n![image](https://user-images.githubusercontent.com/46729679/60142833-6f3e5c80-9770-11e9-84db-e915f79053df.png)\r\n\r\n6. Commands can be grouped as: Editor Actions, Main menu, Tool Windows, Version Control. Then each option can expand like a tree view and list the commands that fall under that section. Also command names can be written more clearly: For example: 'Edit.ToggleBlockComment' can simply be 'Toggle Block Comment'.\r\n\r\n7. Add tags for search indexing for the following words: shortcut, keybindings, keybind and keymap.\r\n\r\n_Originally posted by @mikadumont in https://github.com/dotnet/roslyn/issues/34990#issuecomment-505679939_","Url":"https://github.com/dotnet/roslyn/issues/36918","RelatedDescription":"Open issue \"Keyboard Setup Confusing\" (#36918)"},{"Id":"462491866","IsPullRequest":true,"CreatedAt":"2019-07-01T23:30:28","Actor":"davkean","Number":"36898","RawContent":null,"Title":"Consistently name C#/VB editors","State":"closed","Body":"This changes the names of the C# and VB editors so that they have a name that matches the other editors and usage elsewhere.\r\n\r\nOld Name|New Name\r\n---|---\r\nCSharp Editor|C# Editor\r\nCSharp Editor with Encoding|C# Editor with Encoding\r\nMicrosoft Visual Basic Editor|Visual Basic Editor\r\nMicrosoft Visual Basic Code Page Editor|Visual Basic Editor with Encoding\r\n\r\nThis PR renames this usage:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/60408567-cde95780-9c02-11e9-8d7f-f03be54dff12.png)\r\n![image](https://user-images.githubusercontent.com/1103906/60408598-eeb1ad00-9c02-11e9-901a-667e88febce0.png)","Url":"https://github.com/dotnet/roslyn/pull/36898","RelatedDescription":"Closed or merged PR \"Consistently name C#/VB editors\" (#36898)"},{"Id":"462949340","IsPullRequest":false,"CreatedAt":"2019-07-01T23:10:02","Actor":"drewnoakes","Number":"36917","RawContent":null,"Title":"CS8625 when assigning null to MaybeNullWhen(false) out parameter then returning false","State":"open","Body":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <LangVersion>preview</LangVersion>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Net.Compilers.ToolSet\" Version=\"3.3.0-beta1-19328-01\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n```c#\r\n#nullable enable\r\n\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nnamespace NullableAnnotationSpike\r\n{\r\n    class C\r\n    {\r\n        string? M()\r\n        {\r\n            if (TryGet1(1, out var s1))\r\n                return s1.ToUpper();\r\n\r\n            if (TryGet2(1, out var s2))\r\n                return s2.ToUpper();\r\n\r\n            return s1.ToUpper()  // Expected CS8602\r\n                 + s2.ToUpper(); // Expected CS8602\r\n        }\r\n\r\n        bool TryGet1(int _, [MaybeNullWhen(false)] out string s)\r\n        {\r\n            s = null;           // Unexpected CS8625\r\n            return false;\r\n        }\r\n\r\n        bool TryGet2(int _, [NotNullWhen(true)] out string? s)\r\n        {\r\n            s = null;\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nnamespace System.Diagnostics.CodeAnalysis\r\n{\r\n    [AttributeUsage(AttributeTargets.Parameter, Inherited = false)]\r\n    internal sealed class MaybeNullWhenAttribute : Attribute\r\n    {\r\n        public MaybeNullWhenAttribute(bool returnValue) => ReturnValue = returnValue;\r\n\r\n        public bool ReturnValue { get; }\r\n    }\r\n\r\n    [AttributeUsage(AttributeTargets.Parameter, Inherited = false)]\r\n    public sealed class NotNullWhenAttribute : Attribute\r\n    {\r\n        public NotNullWhenAttribute(bool returnValue) => ReturnValue = returnValue;\r\n\r\n        public bool ReturnValue { get; }\r\n    }\r\n}\r\n``` \r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostic assigning `s = null` in `TryGet1` before returning `false`.\r\n\r\n**Actual Behavior**:\r\n\r\nDiagnostic.","Url":"https://github.com/dotnet/roslyn/issues/36917","RelatedDescription":"Open issue \"CS8625 when assigning null to MaybeNullWhen(false) out parameter then returning false\" (#36917)"},{"Id":"462945286","IsPullRequest":false,"CreatedAt":"2019-07-01T22:53:10","Actor":"petrroll","Number":"36915","RawContent":null,"Title":"Enable ExtractMethod for code that returns","State":"open","Body":"Enable extract method for selected statements that return via adding `bool` as return type (create tuple, append to current tupple) and return in \"parent\" method in case the `success` was false -> i.e. for code paths that would return previously.\r\n\r\nAlternatively adding out bool parameter with the same semantic could also be used to be consistent with TryXXX methods. The ExtractedMethod could also be named `TryNewMethod` to indicate the change.\r\n\r\n**Rationale**\r\nThe pattern of returning within the method (i.e. for quick bail out on some processing) is relatively common and not supporting it within one of the most useful refactorings is unfortunate.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Select code containing `return statement`, invoke refactorings menu.\r\n```csharp\r\n    object M()\r\n    {\r\n        [|var a = TryGetFromSomewhere();\r\n        if(a == null)\r\n        {\r\n            return new object();\r\n        }\r\n        DoSomeWOrk(a);|]\r\n\r\n        return a;\r\n    }\r\n```\r\n\r\n**Expected Behavior**:\r\n```csharp\r\n    object M()\r\n    {\r\n        (bool success, object result) a = NewMethod();\r\n        if (a.success)\r\n        {\r\n            return new object();\r\n        }\r\n\r\n        return a.result;\r\n    }\r\n\r\n    private (bool, object) NewMethod()\r\n    {\r\n        var a = TryGetFromSomewhere();\r\n        if (a == null)\r\n        {\r\n            return (false, default);\r\n        }\r\n        DoSomeWOrk(a);\r\n        return (true, a);\r\n    }\r\n```\r\n\r\n**Actual Behavior**:\r\nNo refactoring shows up.","Url":"https://github.com/dotnet/roslyn/issues/36915","RelatedDescription":"Open issue \"Enable ExtractMethod for code that returns\" (#36915)"},{"Id":"462935541","IsPullRequest":true,"CreatedAt":"2019-07-01T22:18:17","Actor":"dpoeschl","Number":"36914","RawContent":null,"Title":"Add cache to target-typed completion","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36914","RelatedDescription":"Open PR \"Add cache to target-typed completion\" (#36914)"},{"Id":"462869282","IsPullRequest":true,"CreatedAt":"2019-07-01T22:18:14","Actor":"RikkiGibson","Number":"36905","RawContent":null,"Title":"Revert \"Fix couple of false positives in unused parameter analyzer\"","State":"closed","Body":"Reverts dotnet/roslyn#36818 in order to make the release branch state match what we've shipped","Url":"https://github.com/dotnet/roslyn/pull/36905","RelatedDescription":"Closed or merged PR \"Revert \"Fix couple of false positives in unused parameter analyzer\"\" (#36905)"},{"Id":"462933381","IsPullRequest":false,"CreatedAt":"2019-07-01T22:11:28","Actor":"vsfeedback","Number":"36913","RawContent":null,"Title":"Add brace new line code style for switch expressions","State":"open","Body":"<p>Currently in Visual Studio 2019 release, there is no option to specify new line options for braces when using the new switch expression.  Visual Studio will always place the opening brace on a new line, regardless of what has been specified for a switch statement, and there is no switch statement specific setting to change the option to having the opening brace on the same line.  I typically change all of my code style options for all braces to begin on the same line as the statement/expression creating the brace, but this is one expression where I am unable to configure currently.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/524975/add-brace-new-line-code-style-for-switch-expressio.html\nVSTS ticketId: 843465_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 4/10/2019, 00:52 AM (82 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36913","RelatedDescription":"Open issue \"Add brace new line code style for switch expressions\" (#36913)"},{"Id":"462932775","IsPullRequest":false,"CreatedAt":"2019-07-01T22:09:19","Actor":"vsfeedback","Number":"36912","RawContent":null,"Title":"When moving a class, update the namespace","State":"open","Body":"<p>When you move a class it keeps its old namespace, it would be nice if after you move the class it updates the namespace. Also it would be nice if after you updated the namespace it updates all references.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/519845/when-moving-a-class-update-the-namespace.html\nVSTS ticketId: 841091_\n_These are the original issue comments:_\n\nMike Taylor on 4/5/2019, 06:51 AM (87 days ago): <p>This would literally be the best.</p>\n\nJane Wu [MSFT] on 4/9/2019, 02:17 AM (83 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>","Url":"https://github.com/dotnet/roslyn/issues/36912","RelatedDescription":"Open issue \"When moving a class, update the namespace\" (#36912)"},{"Id":"462931497","IsPullRequest":false,"CreatedAt":"2019-07-01T22:04:55","Actor":"RikkiGibson","Number":"36911","RawContent":null,"Title":"Nullable analysis should learn from calls to Interlocked.CompareExchange","State":"open","Body":"https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md#compareexchange\r\n\r\n```cs\r\npublic static extern object? CompareExchange( \r\n    ref object? location1, object? value, object? comparand); \r\n \r\npublic static T CompareExchange<T>( \r\n    ref T location1, T value, T comparand) where T : class?\r\n```\r\n\r\n> The most important case to infer here: If comparand is a constant null and value is non-null, location will be non-null on return.","Url":"https://github.com/dotnet/roslyn/issues/36911","RelatedDescription":"Open issue \"Nullable analysis should learn from calls to Interlocked.CompareExchange\" (#36911)"},{"Id":"462928163","IsPullRequest":false,"CreatedAt":"2019-07-01T21:54:08","Actor":"vsfeedback","Number":"36910","RawContent":null,"Title":"Rename namespaces.","State":"open","Body":"VSF_TYPE_MARKDOWNCan you add a way to rename namespaces in Visual Studio?\nNot the one which offers to rename only one part of it but a feature to rename the entire namespace and change its depth.\n\nFor instance, I would like to rename the namespace of a class &quot;Company.Project.Subfolder.MyClass&quot; to &quot;Company.Project.MyClass&quot;, or &quot;OtherCompany.OtherProject.MyClass&quot;.\n\nThanks!\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/627968/rename-namespaces.html\nVSTS ticketId: 940134_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 7/1/2019, 04:03 AM (10 hours ago): <markdown><p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n</markdown>","Url":"https://github.com/dotnet/roslyn/issues/36910","RelatedDescription":"Open issue \"Rename namespaces.\" (#36910)"},{"Id":"462901617","IsPullRequest":false,"CreatedAt":"2019-07-01T21:32:45","Actor":"CyrusNajmabadi","Number":"36908","RawContent":null,"Title":"Switch expressoins are marked as having formatting problems.","State":"closed","Body":"i.e.\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/60465319-a942af00-9c05-11e9-9473-30faee330391.png)\r\n\r\n1. this is incorrect.  We don't want those switch expressions dedented as indicated. \r\n2. the 'fix' doesn't actually do anything.\r\n3. this really clutters up the build log since there are hundreds of messages about this.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36908","RelatedDescription":"Closed issue \"Switch expressoins are marked as having formatting problems.\" (#36908)"},{"Id":"462910665","IsPullRequest":false,"CreatedAt":"2019-07-01T21:03:55","Actor":"CyrusNajmabadi","Number":"36909","RawContent":null,"Title":"\"Indexing can be simplified\" has changed behavior","State":"open","Body":"It used to be that the compiler had intrinsic knowledge of strings/arrays for indexing/slicing operations.  As such, we could offer to convert to use those new features in projects that didn't hve a reference to System.Index or System.Range.  \r\n\r\nThis behavior seems to have regressed and the compiler seems to now require those types to be avialable.  This breaks our feature which offers to convert to this form (even if those types aren't available) for strings or arrays.","Url":"https://github.com/dotnet/roslyn/issues/36909","RelatedDescription":"Open issue \"\"Indexing can be simplified\" has changed behavior\" (#36909)"},{"Id":"462889166","IsPullRequest":true,"CreatedAt":"2019-07-01T20:09:06","Actor":"roji","Number":"36907","RawContent":null,"Title":"Fix NullableAttribute.Flags->NullableFlags in docs","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36907","RelatedDescription":"Open PR \"Fix NullableAttribute.Flags->NullableFlags in docs\" (#36907)"},{"Id":"462869655","IsPullRequest":false,"CreatedAt":"2019-07-01T19:19:17","Actor":"dpoeschl","Number":"36906","RawContent":null,"Title":"Beginning completion with backspace causes non-IntelliCode matches to always be preferred","State":"open","Body":"**Version Used**: VS 2017 and above.","Url":"https://github.com/dotnet/roslyn/issues/36906","RelatedDescription":"Open issue \"Beginning completion with backspace causes non-IntelliCode matches to always be preferred\" (#36906)"},{"Id":"462869019","IsPullRequest":false,"CreatedAt":"2019-07-01T19:17:40","Actor":"dpoeschl","Number":"36904","RawContent":null,"Title":"Completion MRU overpowers IntelliCode preselect","State":"open","Body":"Not sure when this got introduced yet. Will add details when available.","Url":"https://github.com/dotnet/roslyn/issues/36904","RelatedDescription":"Open issue \"Completion MRU overpowers IntelliCode preselect\" (#36904)"},{"Id":"462866744","IsPullRequest":true,"CreatedAt":"2019-07-01T19:11:33","Actor":"jasonmalinowski","Number":"36903","RawContent":null,"Title":"Don't lose tree DiganosticOptions when we recover or replace a tree","State":"open","Body":"We were not passing through DiagnosticOptions when we created a recoverable tree or when we called Solution.WithDocumentSyntaxRoot. This implementation takes a straightforward approach that we simply hold onto the DiagnosticOptions in the process (rather than recovering it); we could improve on that but it makes things a bit trickier since DiagnosticOptions would have to be fetched on demand.\r\n\r\nFixes #26391","Url":"https://github.com/dotnet/roslyn/pull/36903","RelatedDescription":"Open PR \"Don't lose tree DiganosticOptions when we recover or replace a tree\" (#36903)"},{"Id":"462834999","IsPullRequest":false,"CreatedAt":"2019-07-01T17:47:54","Actor":"vsfeedback","Number":"36902","RawContent":null,"Title":"Is it possible to extend c# compiler to mimic properties {get; set;} the same way as a field? details in attached picture below.","State":"open","Body":"<a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/80541-proposal-serges.png\">proposal-serges.png</a>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/622696/is-it-possible-to-extend-c-compiler-to-mimic-prope.html\nVSTS ticketId: 937516_\n_These are the original issue comments:_\n\nSerge Sudja on 6/25/2019, 09:06 PM (5 days ago): <p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/80561-proposal-serges-1.png\">proposal-serges-1.png</a></p><p>Updated code example to expose question.</p>\n\nJane Wu [MSFT] on 6/26/2019, 01:05 AM (5 days ago): <markdown><p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n</markdown>","Url":"https://github.com/dotnet/roslyn/issues/36902","RelatedDescription":"Open issue \"Is it possible to extend c# compiler to mimic properties {get; set;} the same way as a field? details in attached picture below.\" (#36902)"},{"Id":"462739365","IsPullRequest":false,"CreatedAt":"2019-07-01T14:15:04","Actor":"TessenR","Number":"36901","RawContent":null,"Title":"Roslyn should warn about possible mismatching nullability when assigning dependent type parameters","State":"open","Body":"**Steps to Reproduce**:\r\n\r\nCompile and run the following code:\r\n```cs\r\n#nullable enable\r\nclass C<T, V>\r\n  where T: class, V\r\n  where V: class?\r\n{\r\n  public V M()\r\n  {\r\n      T? nt = default(T?);\r\n      V v = nt; // missing warning\r\n      return v;\r\n  }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var nonNullableString = new C<string, string>().M();\r\n        nonNullableString.ToString();\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n`CS8601 Possible null reference assignment` reported for the line `V v = nt;`.\r\n\r\n**Actual Behavior**:\r\nNo warnings at all reported for the code above. The program crashes at runtime with a `NullReferenceException`.\r\n\r\n**Version Used**: \r\n\r\n```\r\nBranch master (21 Jun 2019)\r\nLatest commit 898bed by Heejae Chang:\r\nadded NFW to get some data on incremental parsing bug where source si� (#36620)\r\n\r\n* added NFW to get some data on incremental parsing bug where source size and tree size is different\r\n\r\n* more comments\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/36901","RelatedDescription":"Open issue \"Roslyn should warn about possible mismatching nullability when assigning dependent type parameters\" (#36901)"},{"Id":"462674825","IsPullRequest":true,"CreatedAt":"2019-07-01T14:00:07","Actor":"dotnet-bot","Number":"36900","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36900","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#36900)"},{"Id":"462497039","IsPullRequest":false,"CreatedAt":"2019-07-01T03:49:54","Actor":"davkean","Number":"36899","RawContent":null,"Title":"[Regression] Visual Studio becomes unusable if you open large set of VB files","State":"open","Body":"**Version Used**: \r\nVersion 15.9.13 - does not repro\r\nVersion 16.2.0 Preview 4.0 [29029.12.d16.2stg] - repros\r\n\r\n**Steps to Reproduce**:\r\n\r\n-- Clone Repo --\r\n1. git clone http://github.com/dotnet/project-system\r\n2. `cd project-system`\r\n3. `project-system> build`\r\n4. `project-system> ProjectSystem.sln`\r\n\r\n-- Disable designers (they will prevent you from opening all the files) --\r\n\r\n5. Right-click on Microsoft.VisualStudio.AppDesigner\\PropPages\\PropPageHostDialog.vb and choose, `Open With` -> `Visual Basic Editor` -> `Set As Default`\r\n7. Right-click on Microsoft.VisualStudio.AppDesigner\\PropPages\\PropPageUserControlBase.vb and choose, `Open With` -> `Visual Basic Editor` -> `Set As Default`\r\n8. Right-click on  Microsoft.VisualStudio.AppDesigner\\ApplicationDesigner\\ApplicationDesignerView.vb and choose, `Open With` -> `Visual Basic Editor` -> `Set As Default`\r\n\r\n-- Open files --\r\n\r\n9. `File` -> `Open`, navigate to the project-system folder above\r\n10. In Search, enter `ext:\"vb\"`\r\n11. `CTRL+A` to select all, and choose `Open`\r\n\r\n-- Wait for files to open --\r\n\r\n12. Open Microsoft.VisualStudio.Editors\\PropPages\\CompilePropPage2.vb, navigate to `EnableDisableWarningControls` right-click on parameter and click Rename\r\n13. Rename and commit the change\r\n\r\n**Expected Behavior**:\r\nNo UI delays\r\n\r\n**Actual Behavior**:\r\nVisual Studio has constant delays that prevent you from interacting with it.\r\n\r\nTrace is [internalshare]\\davkean\\Roslyn\\36899.","Url":"https://github.com/dotnet/roslyn/issues/36899","RelatedDescription":"Open issue \"[Regression] Visual Studio becomes unusable if you open large set of VB files\" (#36899)"},{"Id":"462481419","IsPullRequest":false,"CreatedAt":"2019-07-01T02:24:19","Actor":"davkean","Number":"36897","RawContent":null,"Title":"Choosing \"Use defaults\" in Fonts and Colors, loses the \"defaults\" for the new syntax colors","State":"open","Body":"Make sure you've never set the new syntax coloring colors.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Tools -> Options -> Fonts and Colors \r\n2. Scroll down to `User Members - Methods`\r\n3. Click  Use Defaults\r\n\r\n**Expected Behavior**:\r\nFor the color to not change for `User Members - Methods`\r\n\r\n**Actual Behavior**:\r\nThe color changes by to \"Default\" (black) which is different default to what it was originally set to.\r\n\r\nLooks like there's a concept of \"Default\" colors that we're not making user of for this?\r\n","Url":"https://github.com/dotnet/roslyn/issues/36897","RelatedDescription":"Open issue \"Choosing \"Use defaults\" in Fonts and Colors, loses the \"defaults\" for the new syntax colors\" (#36897)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"462851015","IsPullRequest":true,"CreatedAt":"2019-07-01T22:34:37","Actor":"MichalStrehovsky","Number":"7574","RawContent":null,"Title":"Initialize YieldProcessor critical section before finalizer thread","State":"closed","Body":"Finalizer thread was racing with the initialization.\r\n\r\nFixes #7572.","Url":"https://github.com/dotnet/corert/pull/7574","RelatedDescription":"Closed or merged PR \"Initialize YieldProcessor critical section before finalizer thread\" (#7574)"},{"Id":"462838415","IsPullRequest":false,"CreatedAt":"2019-07-01T22:34:37","Actor":"Suchiman","Number":"7572","RawContent":null,"Title":"AccessViolation in InitializeYieldProcessorNormalized","State":"closed","Body":"@MichalStrehovsky \r\n![2019-07-01_19-54-48](https://user-images.githubusercontent.com/7110884/60456731-5f27f080-9c3a-11e9-951d-c42d5d5b44a3.png)\r\n![devenv_2019-07-01_19-53-47](https://user-images.githubusercontent.com/7110884/60456734-60f1b400-9c3a-11e9-94a0-0e7d4c31d174.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7572","RelatedDescription":"Closed issue \"AccessViolation in InitializeYieldProcessorNormalized\" (#7572)"},{"Id":"462912400","IsPullRequest":false,"CreatedAt":"2019-07-01T21:08:41","Actor":"SomeAnon42","Number":"7575","RawContent":null,"Title":"dotnet publish seems broken when using Core 3.0 Preview 6 SDK","State":"open","Body":"The behavior of ``dotnet publish -r %RID%`` (assuming the CoreRT package is referenced) has changed after upgrading to preview 6 of the SDK.\r\nHere's what the output looks like when using previous versions of the SDK (including the latest stable 2.2 SDK):\r\n```\r\n├── netcoreappX.X/\r\n    └── %RID%/\r\n        ├── <managed output>\r\n        └── publish/\r\n            ├── native/ \r\n            ├── App.exe (native)\r\n            ├── App.pdb (native)\r\n            ├── <app content>\r\n            └── <native dependencies>\r\n```\r\n↑ The ``publish`` directory contains the native executable, along with the app's content. No managed assemblies.\r\n\r\nAnd this is what the output looks like after installing preview 6:\r\n```\r\n├── netcoreappX.X/\r\n    ├── %RID%/\r\n    │   ├── publish/\r\n    │   |   ├── <managed publish> (incl. all of .NET runtime)\r\n    │   |   └── App.pdb (native, while App.exe is a CoreCLR runtime host)\r\n    │   └── <managed publish>\r\n    └── native/\r\n        ├── App.exe\r\n        └── App.pdb\r\n```\r\n↑ The managed *publish* output ends up in both ``%RID%`` and ``%RID%/publish`` (which seems like an SDK issue to me). The native binary is only found in the ``native`` directory, and the directory itself is in the wrong location. The native pdb ends up in both ``%framework%/%RID%/publish`` and ``%framework%/native``.","Url":"https://github.com/dotnet/corert/issues/7575","RelatedDescription":"Open issue \"dotnet publish seems broken when using Core 3.0 Preview 6 SDK\" (#7575)"},{"Id":"462848807","IsPullRequest":true,"CreatedAt":"2019-07-01T18:24:59","Actor":"Suchiman","Number":"7573","RawContent":null,"Title":"Implement GC.AllocateUninitializedArray","State":"open","Body":"fixes #5680\r\n\r\nInspired by https://github.com/dotnet/coreclr/blob/c81d3caee2cfd7a401429dea9709acc18064acdd/src/vm/gchelpers.cpp#L424-L591\r\nand https://github.com/dotnet/corert/blob/fcaa7ed872ea0befcb2a5c8bb5ba504f674f0df1/src/Native/Runtime/gcrhenv.cpp#L228-L294","Url":"https://github.com/dotnet/corert/pull/7573","RelatedDescription":"Open PR \"Implement GC.AllocateUninitializedArray\" (#7573)"},{"Id":"462832822","IsPullRequest":true,"CreatedAt":"2019-07-01T17:41:47","Actor":"Dotnet-GitSync-Bot","Number":"7571","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @kouvel","Url":"https://github.com/dotnet/corert/pull/7571","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corefx\" (#7571)"},{"Id":"462317380","IsPullRequest":true,"CreatedAt":"2019-07-01T05:16:49","Actor":"MichalStrehovsky","Number":"7567","RawContent":null,"Title":"Implement LayoutClass/LayoutClassPtr/AsAny marshalers","State":"closed","Body":"This is a couple marshallers that nobody should be using for anything, but WinForms and System.Drawing uses them for everything. Frankly, it feels like the designers of .NET 1.0 got too excited about marshalling everything with these and someone should have stopped them.\r\n\r\nThese marshallers are for marshalling abritrary reference types to native code. See the test cases in this pull request for some samples. But please don't take ideas from it.\r\n\r\nThis is enough to get basic WinForms apps running. E.g. the MatchingGame .NET Sample works with this. Serious WinForms apps will eventually hit missing COM support, but at least the basics work now and it's enough to get a read on things like startup time.","Url":"https://github.com/dotnet/corert/pull/7567","RelatedDescription":"Closed or merged PR \"Implement LayoutClass/LayoutClassPtr/AsAny marshalers\" (#7567)"},{"Id":"462343022","IsPullRequest":true,"CreatedAt":"2019-07-01T05:16:17","Actor":"MichalStrehovsky","Number":"7569","RawContent":null,"Title":"Port normalized SpinWait from CoreCLR","State":"closed","Body":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim.","Url":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Closed or merged PR \"Port normalized SpinWait from CoreCLR\" (#7569)"},{"Id":"462399742","IsPullRequest":true,"CreatedAt":"2019-07-01T05:15:29","Actor":"MichalStrehovsky","Number":"7570","RawContent":null,"Title":"Use AssemblyLoadContext from shared partition","State":"closed","Body":"We were missing methods that got added for 3.0. The only LoadContext that works is the default one though.","Url":"https://github.com/dotnet/corert/pull/7570","RelatedDescription":"Closed or merged PR \"Use AssemblyLoadContext from shared partition\" (#7570)"},{"Id":"459481444","IsPullRequest":true,"CreatedAt":"2019-06-30T13:04:16","Actor":"MichalStrehovsky","Number":"7549","RawContent":null,"Title":"Add support for x86/x64 hardware intrinsics","State":"closed","Body":"RyuJIT has had support for HW intrinsics for a while but we didn't enable them (besides SSE/SSE2) because the way RyuJIT implements them only suits JIT environments: RyuJIT is not able to generate code that switches based on the intrinsics supported by the CPU at runtime - the intrinsic support level is hardcoded at compilation time. This works for a JIT, but not so well for AOT.\r\n\r\nFollowing scheme is used to adapt this for AOT compilation:\r\n* We tell RyuJIT all non-VEX intrinsics are supported.\r\n* We intercept the `IsSupported` property calls on the individual intrinsic classes and instead of telling RyuJIT the `IsSupported` methods are intrinsics (that RyuJIT would expand to a constant `true` based on the flags we passed to RyuJIT), we treat them as normal method calls.\r\n* We rewrite the IL of the `IsSupported` method to read a value from an RVA static field and check for a bit (each bit representing a different ISA extension).\r\n* At process startup we initialize the RVA static field with bits based on a CPUID check.","Url":"https://github.com/dotnet/corert/pull/7549","RelatedDescription":"Closed or merged PR \"Add support for x86/x64 hardware intrinsics\" (#7549)"},{"Id":"462318480","IsPullRequest":true,"CreatedAt":"2019-06-29T20:24:33","Actor":"MichalStrehovsky","Number":"7568","RawContent":null,"Title":"Fix GetTypeCode of metadata-only enums","State":"closed","Body":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type.","Url":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Closed or merged PR \"Fix GetTypeCode of metadata-only enums\" (#7568)"},{"Id":"462288706","IsPullRequest":true,"CreatedAt":"2019-06-29T18:29:06","Actor":"MichalStrehovsky","Number":"7566","RawContent":null,"Title":"Implement obsolete `Marshal.Write*` APIs","State":"closed","Body":"Because bad APIs come in pairs.","Url":"https://github.com/dotnet/corert/pull/7566","RelatedDescription":"Closed or merged PR \"Implement obsolete `Marshal.Write*` APIs\" (#7566)"},{"Id":"462130373","IsPullRequest":true,"CreatedAt":"2019-06-28T22:19:01","Actor":"csnewman","Number":"7565","RawContent":null,"Title":"Remove extra bracket","State":"closed","Body":"Fixes arm building","Url":"https://github.com/dotnet/corert/pull/7565","RelatedDescription":"Closed or merged PR \"Remove extra bracket\" (#7565)"},{"Id":"461738560","IsPullRequest":false,"CreatedAt":"2019-06-28T20:45:36","Actor":"csnewman","Number":"7563","RawContent":null,"Title":"arm registers do not fit into unw_context_t","State":"closed","Body":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```","Url":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Closed issue \"arm registers do not fit into unw_context_t\" (#7563)"},{"Id":"461791927","IsPullRequest":true,"CreatedAt":"2019-06-28T00:27:04","Actor":"jkotas","Number":"7564","RawContent":null,"Title":"Fix ARM build break","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Closed or merged PR \"Fix ARM build break\" (#7564)"},{"Id":"461402520","IsPullRequest":true,"CreatedAt":"2019-06-27T13:24:43","Actor":"jkotas","Number":"7561","RawContent":null,"Title":"Fix ETW GCEvents","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Closed or merged PR \"Fix ETW GCEvents\" (#7561)"},{"Id":"461406438","IsPullRequest":false,"CreatedAt":"2019-06-27T09:01:30","Actor":"OmerRaviv","Number":"7562","RawContent":null,"Title":"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API","State":"open","Body":"I find that one of the biggest challenges in working with the CLR Profiling API is attempting to mitigate the risk that a bug in my IL-rewriting logic may produce invalid IL, which would in turn produce catastrophic results at runtime (ExecutionEngineException, InvalidProgramException, etc). \r\n\r\nI think it could be extremely helpful if profiler vendors had a documented way to run ILVerify/PEVerify on assemblies after preforming IL-rewriting / ReJIT. This method could be used as part of integration testing, and also as a very useful debugging aid.\r\n\r\n[Someone asked on stackoverflow](https://stackoverflow.com/questions/55793865/creating-a-pe-file-using-imetadataemitsave-tomemory-tostream) if this could be accomplished using `IMetadataEmit::SaveToStream`, but unfortunately that method would only write out the .NET module, not a complete PE that can then be fed to ILVerify/PEVerify.\r\n\r\nIf anyone has an idea how this could be accomplished, I’d be more than happy to attempt it, and then once I succeed, to open-source/document the approach.\r\n\r\n/cc  @noahfalk @davmason @jkotas ","Url":"https://github.com/dotnet/corert/issues/7562","RelatedDescription":"Open issue \"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API\" (#7562)"},{"Id":"461341179","IsPullRequest":true,"CreatedAt":"2019-06-27T08:54:05","Actor":"Dotnet-GitSync-Bot","Number":"7560","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @stephentoub @jkotas","Url":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7560)"},{"Id":"461084607","IsPullRequest":true,"CreatedAt":"2019-06-27T06:29:12","Actor":"Dotnet-GitSync-Bot","Number":"7558","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7558)"},{"Id":"461233093","IsPullRequest":true,"CreatedAt":"2019-06-27T03:11:36","Actor":"jkotas","Number":"7559","RawContent":null,"Title":"Try VS2019 CI queue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7559","RelatedDescription":"Closed or merged PR \"Try VS2019 CI queue\" (#7559)"},{"Id":"460640977","IsPullRequest":true,"CreatedAt":"2019-06-26T19:49:25","Actor":"trylek","Number":"7557","RawContent":null,"Title":"Small SuperIlc fix for wrong architecture identifier","State":"closed","Body":"When analyzing the Pri#1 CPAOT results I noticed that some of the\r\n\"issues.targets\" exclusions got silently ignored and I tracked it\r\ndown to incorrect architecture specification - I apparently used\r\n\"amd64\" instead of the expected \"x64\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7557","RelatedDescription":"Closed or merged PR \"Small SuperIlc fix for wrong architecture identifier\" (#7557)"},{"Id":"460638909","IsPullRequest":true,"CreatedAt":"2019-06-26T19:44:15","Actor":"trylek","Number":"7556","RawContent":null,"Title":"Remove the Crossgen-specific VSD flag from CPAOT","State":"closed","Body":"Based on JanK's advice I have slightly refactored CPAOT to free it\r\nfrom blindly reusing the Crossgen hack of using a special bit flag\r\nto pass information around within the ZAP logic. As part of the cleanup\r\nI have also removed the AppendMangledName override in\r\nDelayLoadMethodHelperImport as it wasn't adding any extra\r\nuseful information.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7556","RelatedDescription":"Closed or merged PR \"Remove the Crossgen-specific VSD flag from CPAOT\" (#7556)"},{"Id":"459991969","IsPullRequest":true,"CreatedAt":"2019-06-24T21:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7555","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @HermanEldering @Marusyk @siriak @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7555","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7555)"},{"Id":"459900202","IsPullRequest":false,"CreatedAt":"2019-06-24T13:43:53","Actor":"kvittokonito","Number":"7554","RawContent":null,"Title":"NuGet package not being built","State":"open","Body":"As far as I can tell, no new NuGet package has been deployed to MyGet for months, is this intentional?\r\n\r\nI would rather not have to built and deploy CoreRT from source into our CI/CD pipeline to take advantage of fixes like #7526.","Url":"https://github.com/dotnet/corert/issues/7554","RelatedDescription":"Open issue \"NuGet package not being built\" (#7554)"},{"Id":"459595649","IsPullRequest":true,"CreatedAt":"2019-06-23T20:12:48","Actor":"Suchiman","Number":"7553","RawContent":null,"Title":" Clear stacktrace before throwing exceptions","State":"closed","Body":"fixes #5183","Url":"https://github.com/dotnet/corert/pull/7553","RelatedDescription":"Closed or merged PR \" Clear stacktrace before throwing exceptions\" (#7553)"},{"Id":"459515304","IsPullRequest":true,"CreatedAt":"2019-06-23T20:11:58","Actor":"timmydo","Number":"7551","RawContent":null,"Title":"add StaticallyLinked csproj property for unix","State":"closed","Body":"Add `<StaticallyLinked>true</StaticallyLinked>` to your csproj to compile a statically liked binary. ","Url":"https://github.com/dotnet/corert/pull/7551","RelatedDescription":"Closed or merged PR \"add StaticallyLinked csproj property for unix\" (#7551)"},{"Id":"459515874","IsPullRequest":true,"CreatedAt":"2019-06-23T19:18:22","Actor":"timmydo","Number":"7552","RawContent":null,"Title":"Devcontainer files for vscode cross-platform development.","State":"closed","Body":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs.","Url":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Closed or merged PR \"Devcontainer files for vscode cross-platform development.\" (#7552)"},{"Id":"459508048","IsPullRequest":true,"CreatedAt":"2019-06-23T02:46:21","Actor":"Suchiman","Number":"7550","RawContent":null,"Title":"Ports dotnet/coreclr#25216 to CoreRT","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)","Url":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Closed or merged PR \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550)"},{"Id":"459366444","IsPullRequest":false,"CreatedAt":"2019-06-22T01:28:46","Actor":"tim241","Number":"7548","RawContent":null,"Title":"async issue","State":"closed","Body":"I'm developing an application which uses `youtube-dl` for some of it's functionality\r\n\r\nhowever, I get a different result when using a build from `dotnet build -c Release`  and the corert,\r\n\r\n`dotnet build -c Release`:\r\n![cmd_dj5LUjFmF3](https://user-images.githubusercontent.com/18737914/59950014-196a6b80-9475-11e9-9bee-5238114dd27e.png)\r\n\r\ncorert:\r\n![cmd_aFvdtYM0vh](https://user-images.githubusercontent.com/18737914/59950038-29824b00-9475-11e9-845f-38d77661cc5a.png)\r\n\r\nrelevant code:\r\n[main](https://github.com/tim241/corert-async-bug/blob/master/AudioControlServer/Program.cs)\r\n[async function](https://github.com/tim241/corert-async-bug/blob/master/YoutubeCandyWrapper/AudioDownloader.cs#L72-L108)\r\n\r\n# How to reproduce\r\n* `git clone https://github.com/tim241/corert-async-bug`\r\n* install youtube-dl and add it to PATH\r\n* use `dotnet publish -c Release -r win-x64` (in the `AudioControlServer` folder) to build for the corert\r\n\r\nI'm not sure why the corert is giving me a different result, maybe it doesn't fill the `JsonList`?","Url":"https://github.com/dotnet/corert/issues/7548","RelatedDescription":"Closed issue \"async issue\" (#7548)"},{"Id":"459012632","IsPullRequest":true,"CreatedAt":"2019-06-21T14:12:31","Actor":"jkotas","Number":"7547","RawContent":null,"Title":"Make acquiring cache size optional","State":"closed","Body":"Contributes to #7524","Url":"https://github.com/dotnet/corert/pull/7547","RelatedDescription":"Closed or merged PR \"Make acquiring cache size optional\" (#7547)"},{"Id":"458992661","IsPullRequest":true,"CreatedAt":"2019-06-21T14:09:17","Actor":"jkotas","Number":"7546","RawContent":null,"Title":"Port dotnet/coreclr#25130 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7546","RelatedDescription":"Closed or merged PR \"Port dotnet/coreclr#25130 to CoreRT\" (#7546)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"462963954","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:51","Actor":"johnbeisner","Number":"3384","RawContent":null,"Title":"Branding update to \"preview8\"; SDK","State":"closed","Body":"Branding update to \"preview8\"; SDK","Url":"https://github.com/dotnet/sdk/pull/3384","RelatedDescription":"Closed or merged PR \"Branding update to \"preview8\"; SDK\" (#3384)"},{"Id":"462957863","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:22","Actor":"johnbeisner","Number":"3382","RawContent":null,"Title":"Merge master into release 3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3382","RelatedDescription":"Closed or merged PR \"Merge master into release 3.0.1xx for preview7 - SDK\" (#3382)"},{"Id":"462962755","IsPullRequest":false,"CreatedAt":"2019-07-02T00:12:33","Actor":"bergbria","Number":"3383","RawContent":null,"Title":"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file","State":"open","Body":"## Repro\r\n1. Create a .csproj with multiple ````<RuntimeIdentifiers>```` (e.g.  ````<RuntimeIdentifiers>osx-x64;win-x64</RuntimeIdentifiers>````)\r\n2. `dotnet restore`\r\n3. `dotnet publish --no-restore  --runtime win-x64`\r\n\r\nThis will fail with \r\n>error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file. \r\n\r\n## Automated repro\r\nDownload/unzip \r\n[publish_multi_rid.zip](https://github.com/dotnet/sdk/files/3347730/publish_multi_rid.zip) and run repro.bat\r\n\r\n## Additional context\r\n* Omitting  `--no-restore` will cause different package versions to be used than would be produced the by original `dotnet restore`. While being icky in general, this also causes breaks when NuGet lock files are used (e.g. https://github.com/NuGet/Home/issues/8287)\r\n* This seems vaguely related to #2682 ","Url":"https://github.com/dotnet/sdk/issues/3383","RelatedDescription":"Open issue \"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file\" (#3383)"},{"Id":"462173177","IsPullRequest":true,"CreatedAt":"2019-07-01T23:35:51","Actor":"nugetlurker","Number":"3372","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/3.0.1xx branch","Url":"https://github.com/dotnet/sdk/pull/3372","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3372)"},{"Id":"462905459","IsPullRequest":true,"CreatedAt":"2019-07-01T23:23:02","Actor":"swaroop-sridhar","Number":"3381","RawContent":null,"Title":"SingleFile: Update a test with ni-pdbs","State":"closed","Body":"The test GivenThatWeWantToPublishASingleFileApp.It_excludes_ni_pdbs_from_single_file\r\nchecks for the fact that ni.pdb files are not bundled into the single-file by default.\r\n\r\nThis test was expecting only the `<app>.ni.pdb` file to exist in the publish directory.\r\nHowever, in recent versions of the build, mscorlib.ni.pdb is also found.\r\n\r\nThis commit changes the test to accomodate additional files in the publish directory.","Url":"https://github.com/dotnet/sdk/pull/3381","RelatedDescription":"Closed or merged PR \"SingleFile: Update a test with ni-pdbs\" (#3381)"},{"Id":"462854507","IsPullRequest":false,"CreatedAt":"2019-07-01T18:39:09","Actor":"AlexanderTaeschner","Number":"3380","RawContent":null,"Title":"Duplicated frameworks in runtimeconfig.json","State":"open","Body":"Using .NET core version 3.0.100-preview7-012741 some generated ProjectName.runtimeconfig.json files contain duplicated entries for the frameworks, which lead to a direct crash at application start:\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nwhich seems to be linked to the following entry in the build log:\r\n```\r\n5>      Task \"GenerateRuntimeConfigurationFiles\"\r\n5>        Task Parameter:AssetsFilePath=[...]\\obj\\project.assets.json\r\n5>        Task Parameter:TargetFrameworkMoniker=.NETCoreApp,Version=v3.0\r\n5>        Task Parameter:TargetFramework=netcoreapp3.0\r\n5>        Task Parameter:RuntimeConfigPath=[...].runtimeconfig.json\r\n5>        Task Parameter:RuntimeConfigDevPath=[...].runtimeconfig.dev.json\r\n5>        Task Parameter:\r\n5>            RuntimeFrameworks=\r\n5>                Microsoft.NETCore.App\r\n5>                        FrameworkName=Microsoft.NETCore.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WPF\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WindowsForms\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>        Task Parameter:UserRuntimeConfig=[...]/runtimeconfig.template.json\r\n5>        Task Parameter:AdditionalProbingPaths=[...]\\.dotnet\\store\\|arch|\\|tfm|\r\n5>        Task Parameter:IsSelfContained=False\r\n5>      Done executing task \"GenerateRuntimeConfigurationFiles\".\r\n```\r\nwhere three RuntimeFrameworks with the same name, but different FrameworkName are listed.\r\nWith preview 5 this problem did not appear.","Url":"https://github.com/dotnet/sdk/issues/3380","RelatedDescription":"Open issue \"Duplicated frameworks in runtimeconfig.json\" (#3380)"},{"Id":"462676233","IsPullRequest":true,"CreatedAt":"2019-07-01T13:50:12","Actor":"dotnet-maestro[bot]","Number":"3378","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3378)"},{"Id":"462397761","IsPullRequest":true,"CreatedAt":"2019-07-01T01:24:56","Actor":"dotnet-maestro[bot]","Number":"3377","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3377","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3377)"},{"Id":"462296170","IsPullRequest":true,"CreatedAt":"2019-06-30T12:03:58","Actor":"dotnet-maestro[bot]","Number":"3374","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3374","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3374)"},{"Id":"462350708","IsPullRequest":false,"CreatedAt":"2019-06-29T23:25:42","Actor":"mattleibow","Number":"3376","RawContent":null,"Title":"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.","State":"open","Body":"I am trying to use Ubuntu 18.04 to test some things, and I can use any of the newer .NET Core SDKs.\r\n\r\nI just installed a fresh VM with 18.04, and [installed my usual tools](https://gist.github.com/mattleibow/7e02a32193fb9bb14069bedb7384205e). I then try and build SkiaSharp, and then the .NET Standard projects and Tizen fail to build with the same error.\r\n\r\nI can roll back to dotnet-sdk-2.1.105, and that seems to work fine. As soon as I go later, then it fails. I tried installing a different version of dotnet 2.2, but I only have one for some reason. Sure, I could install it manually and all that. But, who wants to do that - and I am not even sure it is going to work.\r\n\r\nHere is my apt-search output: https://gist.github.com/mattleibow/935de7d22b24cfcf3ae9ab0c16b1908f\r\n\r\nWhat is the reason for these failures? My code was working - as it is building just fine with 2.1.105, and then I bump up just a fraction and boom?\r\n\r\nBuild Errors:\r\n\r\n```\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n\r\n...\r\n\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3376","RelatedDescription":"Open issue \"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.\" (#3376)"},{"Id":"462344960","IsPullRequest":true,"CreatedAt":"2019-06-29T21:48:07","Actor":"fadimounir","Number":"3375","RawContent":null,"Title":"Disable R2R compilations for non-exe projects","State":"open","Body":"Fixes #3364","Url":"https://github.com/dotnet/sdk/pull/3375","RelatedDescription":"Open PR \"Disable R2R compilations for non-exe projects\" (#3375)"},{"Id":"462173148","IsPullRequest":true,"CreatedAt":"2019-06-29T00:54:45","Actor":"nugetlurker","Number":"3370","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3370","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3370)"},{"Id":"462173165","IsPullRequest":true,"CreatedAt":"2019-06-29T00:44:54","Actor":"nugetlurker","Number":"3371","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3371","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3371)"},{"Id":"462244182","IsPullRequest":true,"CreatedAt":"2019-06-29T00:07:02","Actor":"swaroop-sridhar","Number":"3373","RawContent":null,"Title":"Always publish the AppHost","State":"open","Body":"Always copy the AppHost from intermediate to publish directory in order to ensure that the sequence\r\n    dotnet publish /p:PublishSingleFile=true\r\n    dotnet publish /p:PublishSingleFile=false\r\nplaces the correct unbundled apphost in the publish directory.\r\n\r\nFixes #3337","Url":"https://github.com/dotnet/sdk/pull/3373","RelatedDescription":"Open PR \"Always publish the AppHost\" (#3373)"},{"Id":"460676784","IsPullRequest":true,"CreatedAt":"2019-06-28T20:55:16","Actor":"dsplaisted","Number":"3355","RawContent":null,"Title":"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3355","RelatedDescription":"Closed or merged PR \"Provide ResolvedFrameworkReferences for VS to populate Solution Explorer\" (#3355)"},{"Id":"462114199","IsPullRequest":true,"CreatedAt":"2019-06-28T17:50:33","Actor":"johnbeisner","Number":"3369","RawContent":null,"Title":"WIP: Merge master to release/3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\n\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3369","RelatedDescription":"Closed or merged PR \"WIP: Merge master to release/3.0.1xx for preview7 - SDK\" (#3369)"},{"Id":"462002047","IsPullRequest":true,"CreatedAt":"2019-06-28T14:00:09","Actor":"dotnet-maestro[bot]","Number":"3368","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3368","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3368)"},{"Id":"461375402","IsPullRequest":true,"CreatedAt":"2019-06-28T01:25:44","Actor":"dsplaisted","Number":"3359","RawContent":null,"Title":"Require manifests in runtime and targeting packs","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3359","RelatedDescription":"Closed or merged PR \"Require manifests in runtime and targeting packs\" (#3359)"},{"Id":"461489674","IsPullRequest":true,"CreatedAt":"2019-06-27T18:49:34","Actor":"dotnet-maestro[bot]","Number":"3360","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3360","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3360)"},{"Id":"461682812","IsPullRequest":false,"CreatedAt":"2019-06-27T18:25:33","Actor":"heng-liu","Number":"3367","RawContent":null,"Title":"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)","State":"open","Body":"Running \"dotnet publish\" on a console projects failed when GeneratePackageOnBuild is true.\r\ndotnet --version                                                                                                                                                                                                                                                                                          3.0.100-preview6-012264\r\nIt seems Microsoft.NET.Publish.targets skips build when  GeneratePackageOnBuild is true.\r\n\r\n**Steps to reproduce:**\r\n1.install .NETCore SDK 3.0.100-preview6-012264\r\n2.run \"dotnet new console\" to create a project A\r\n3.add \"`<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`\" in A.csproj PropertyGroup and save.\r\n4.run \"dotnet publish A.csproj\"\r\n\r\n**Expected behavior:**\r\nPublish successfully.\r\n**Actual behavior:**\r\nFailed with following error messages:\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.dll\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.deps.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.pdb\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.runtimeconfig.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\obj\\Debug\\netcoreapp3.0\\A.exe\" because it was not found. [C:\\repos\\A\\A.csproj]","Url":"https://github.com/dotnet/sdk/issues/3367","RelatedDescription":"Open issue \"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)\" (#3367)"},{"Id":"461681875","IsPullRequest":false,"CreatedAt":"2019-06-27T18:23:37","Actor":"terrajobst","Number":"3366","RawContent":null,"Title":"Preview 7 still requires a private feed","State":"open","Body":"In tactics @livarcocc said that Preview 7 shouldn't require a private feed. However, you can't build `xunit` right now:\r\n\r\n> $ dotnet new xunit -o xunit30\r\n> The template \"xUnit Test Project\" was created successfully.\r\n> \r\n> Processing post-creation actions...\r\n> Running 'dotnet restore' on xunit30\\xunit30.csproj...\r\n> T:\\xunit30\\xunit30.csproj : error NU1102: Unable to find package Microsoft.NETCore.App with version (>= 3.0.0-preview7-27826-04)\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 70 version(s) in nuget.org [ Nearest version: 3.0.0-preview6-27804-01 ]\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in dotnet.myget.org roslyn\r\n> Restore failed in 952.45 ms for T:\\xunit30\\xunit30.csproj.\r\n> \r\n> Restore failed.\r\n> Post action failed.\r\n> Description: Restore NuGet packages required by this project.\r\n> Manual instructions: Run 'dotnet restore'\r\n\r\nThat seems like a bug, right?\r\n\r\nNote, these templates work:\r\n\r\n* Restore completed in 32.51 ms for T:\\netcore3\\console\\console.csproj.\r\n* Restore completed in 40.65 ms for T:\\netcore3\\classlib\\classlib.csproj.\r\n* Restore completed in 32.51 ms for T:\\netcore3\\winforms\\winforms.csproj.\r\n* Restore completed in 32.48 ms for T:\\netcore3\\wpf\\wpf.csproj.\r\n* Restore completed in 32.49 ms for T:\\netcore3\\mvc\\mvc.csproj.\r\n\r\n<details>\r\n<summary>dotnet --info</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012650\r\n Commit:    b959696aad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18912\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012650\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012650 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/3366","RelatedDescription":"Open issue \"Preview 7 still requires a private feed\" (#3366)"},{"Id":"461680983","IsPullRequest":false,"CreatedAt":"2019-06-27T18:21:55","Actor":"pranavkm","Number":"3365","RawContent":null,"Title":"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true","State":"open","Body":"Based on https://github.com/aspnet/AspNetCore/issues/11636.\r\n\r\nhttps://github.com/dotnet/sdk/pull/3255 causes publish to fail when a project has project references. Treating `NoBuild` and `GeneratePackageOnBuild` as equivalent causes project references to [stop building](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L74-L78).\r\n\r\nRepro steps:\r\n\r\n* Clone https://github.com/pranavkm/repro/tree/publish-p2p/\r\n* Call `dotnet publish` on mvcapp\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3365","RelatedDescription":"Open issue \"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true\" (#3365)"},{"Id":"461651868","IsPullRequest":false,"CreatedAt":"2019-06-27T17:19:02","Actor":"fadimounir","Number":"3364","RawContent":null,"Title":"Block R2R compilation for library projects","State":"open","Body":"Publish on library is a strange case already and trips people up a lot.\r\n\r\nIt could also be a source of problems if some lib developer publishes R2R for a certain platform/arch, and another app developer uses that lib on a different target","Url":"https://github.com/dotnet/sdk/issues/3364","RelatedDescription":"Open issue \"Block R2R compilation for library projects\" (#3364)"},{"Id":"461646733","IsPullRequest":true,"CreatedAt":"2019-06-27T17:07:51","Actor":"dotnet-bot","Number":"3363","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3363","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3363)"},{"Id":"461617180","IsPullRequest":false,"CreatedAt":"2019-06-27T16:04:24","Actor":"ericstj","Number":"3362","RawContent":null,"Title":"Conflict resolution broken for self-contained APP when packages have same version as shared framework","State":"open","Body":"The hardcoded list here is now broken:\r\nhttps://github.com/dotnet/sdk/blob/ec0d2190853afd6c6a8a410d7dc386a9f1ca391b/src/Tasks/Microsoft.NET.Build.Tasks/ResolveTargetingPackAssets.cs#L133-L135\r\n\r\nThis causes bad behavior from conflict resolution:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.win32.registry\\4.6.0-preview7.19326.1\\runtimes\\win\\lib\\netstandard2.0\\Microsoft.Win32.Registry.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll'. Choosing 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll' arbitrarily as both items are copy-local and have equal file and assembly versions.\r\n```\r\n\r\nHappening because the items now have the runtime pack package ID:\r\n```\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll\r\n    AssetType = runtime\r\n    CopyLocal = true\r\n    DestinationSubPath = Microsoft.Win32.Registry.dll\r\n    IsTrimmable = true\r\n    PackageName = Microsoft.NETCore.App.Runtime.win-x64\r\n    PackageVersion = 3.0.0-preview7-27826-01\r\n    RuntimeIdentifier = win-x64\r\n```\r\n\r\nBut the preferred packages refer to the old runtime nuget packages, due to that hardcoded list.\r\n\r\nWe cannot ship like this.  Please remove the hardcoding and compute this from the list of RIDs supported by the REFPack.  I couldn't find where this list of RIDs is stored... hopefully that isn't hardcoded too.\r\n\r\nI noticed https://github.com/dotnet/cli/issues/10581 mentions one way that this might be addressed, but I'm not convinced it handles this scenario.\r\n\r\nRepro project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeFrameworkVersion>3.0.0-preview7-27826-01</RuntimeFrameworkVersion>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- SDK doesn't honor RuntimeFrameworkVersion for targeting pack-->\r\n    <KnownFrameworkReference Update=\"Microsoft.NETCore.App\" TargetingPackVersion=\"$(RuntimeFrameworkVersion)\" />\r\n\r\n    <!-- Temporary till SDK supports transitive framework references. -->\r\n    <KnownFrameworkReference Remove=\"Microsoft.AspNetCore.App\" />\r\n    <KnownFrameworkReference Remove=\"Microsoft.WindowsDesktop.App\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.6.0-preview7.19326.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRestore and build it to observe the issue.\r\n","Url":"https://github.com/dotnet/sdk/issues/3362","RelatedDescription":"Open issue \"Conflict resolution broken for self-contained APP when packages have same version as shared framework\" (#3362)"},{"Id":"461567502","IsPullRequest":false,"CreatedAt":"2019-06-27T14:36:05","Actor":"vitek-karas","Number":"3361","RawContent":null,"Title":"Self-contained apps should include RID fallback graph in .deps.json","State":"open","Body":"With the introduction of `AssemblyDependencyResolver` in 3.0 we're making it relatively easy to dynamically load components with their entire dependency trees. Such components can be portable in the sense that they include RID specific assets (for example different asset for Windows and Linux).\r\n\r\nIn order to correctly resolve dependencies of such component, the `AssemblyDependencyResolver` must have a RID fallback graph to follow (so that when we're running on `win10-x64`, we know that we should also look for assets which are `win-x64` or even `win`). The component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nJust like framework dependent apps which rely on the framework to provide the RID fallback graph, the component should rely on the host app to provide the RID fallback graph.\r\n\r\nSo if the host app is a framework dependent app, the RID fallback graph comes from the core framework `Microsoft.NETCore.App`. In this case everything works fine.\r\n\r\nIf the host app is a self-contained app, it in itself it doesn't need a RID fallback graph since it's been built/published for one specific RID and thus it only carries assets which are necessary for that RID. But if a portable component is about to be loaded into such app, the RID fallback graph is necessary.\r\n\r\nThe proposal is to modify the SDK to include the RID fallback graph in self-contained app's `.deps.json`. It should be the graph filtered by the RID the app is targeting (just like what we do for the shared framework).\r\n\r\nThe problem is also discussed in https://github.com/dotnet/core-setup/issues/6960","Url":"https://github.com/dotnet/sdk/issues/3361","RelatedDescription":"Open issue \"Self-contained apps should include RID fallback graph in .deps.json\" (#3361)"},{"Id":"461190450","IsPullRequest":true,"CreatedAt":"2019-06-27T03:45:22","Actor":"johnbeisner","Number":"3358","RawContent":null,"Title":"Update the stage0 SDK version","State":"closed","Body":"Update the stage0 SDK version","Url":"https://github.com/dotnet/sdk/pull/3358","RelatedDescription":"Closed or merged PR \"Update the stage0 SDK version\" (#3358)"},{"Id":"461189443","IsPullRequest":true,"CreatedAt":"2019-06-27T03:02:05","Actor":"wli3","Number":"3357","RawContent":null,"Title":"Remove experiment on collecting UseWPF and UseWinform","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3357","RelatedDescription":"Closed or merged PR \"Remove experiment on collecting UseWPF and UseWinform\" (#3357)"},{"Id":"460930778","IsPullRequest":true,"CreatedAt":"2019-06-26T13:50:24","Actor":"dotnet-maestro[bot]","Number":"3356","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3356","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3356)"},{"Id":"462787366","IsPullRequest":false,"CreatedAt":"2019-06-09T03:00:01","Actor":"DualBrain","Number":"3379","RawContent":null,"Title":"VB.NET 'End' not available and odd error message.","State":"open","Body":"Start with a .NET Core 3.0 Console app and simply modify Sub Main.\r\n\r\nModule Program\r\n  Sub Main(args As String())\r\n     End '<--- I added this.\r\n  End Sub\r\nEnd Module\r\n\r\nBy all appearance, Visual Studio thinks things are just fine (no squiggles).  When I build, the build fails with the following error:\r\n\r\n\"BC37234: Unstructured exception handling is not supported in current project type.\"\r\n\r\nHuh?  How is 'End' part of unstructured exception handling?  Also, why wouldn't 'End' be supported for a console application on .NET Core?\r\n\r\nThanks.\r\n\r\nCC: @KathleenDollard, @cston ","Url":"https://github.com/dotnet/sdk/issues/3379","RelatedDescription":"Open issue \"VB.NET 'End' not available and odd error message.\" (#3379)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1144288349022085120","CreatedAt":"2019-06-27T16:56:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":1,"RawContent":null},{"Id":"1143896700047646727","CreatedAt":"2019-06-26T15:00:00+00:00","UserScreenname":"dotnet","Text":"Run samples and tutorials using Try .NET global tool \nhttps://t.co/xxmNIK7SVd https://t.co/yhtPGPTKds","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":29,"RawContent":null},{"Id":"1143254803008458753","CreatedAt":"2019-06-24T20:29:20+00:00","UserScreenname":"dotnet","Text":"Care about AI &amp; Machine Learning? Check out this interview with @zeeshantweets, who is a developer on #MLNET. https://t.co/NuaAjE4Kod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":22,"RawContent":null},{"Id":"1143242317358178304","CreatedAt":"2019-06-24T19:39:43+00:00","UserScreenname":"dotnet","Text":"#dotnetconf Call for papers is open! Are you interested in speaking about .NET at our annual, free, virtual event?… https://t.co/q9IU7uUg4d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":161,"FavoriteCount":103,"RawContent":null},{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":60,"FavoriteCount":18,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":23,"RawContent":null},{"Id":"1141752346860347394","CreatedAt":"2019-06-20T16:59:06+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"1141074032273453056","CreatedAt":"2019-06-18T20:03:44+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core https://t.co/modbwJLbCR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":318,"FavoriteCount":156,"RawContent":null}]}},"RunOn":"2019-07-02T05:30:33.7328945Z","RunDurationInMilliseconds":13166}