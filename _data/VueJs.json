{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6777022305","Type":"PullRequestEvent","CreatedAt":"2017-10-27T20:16:10","Actor":"scottbedard","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1851","RelatedDescription":"Opened pull request \"Prevent banner from being removed by minifiers\" (#1851) at vuejs/vue-router","RelatedBody":"Trying to debug a webpack bundle splitting setup was made a bit trickier because it was hard to tell where this package was being included. Adding this should make the process a bit simpler.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"},{"Id":"6774359917","Type":"IssuesEvent","CreatedAt":"2017-10-27T10:03:20","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1850","RelatedDescription":"Closed issue \"Render v-for is failed in vue-router\" (#1850) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nvar foo = {\r\n        template:\"<div v-for='(el,index) in arr'>{{el}}</div>\"\r\n        ,data:function(){\r\n            return{\r\n                arr:[1,2,3]\r\n            }\r\n        }\r\n    };\r\n    var routes = [\r\n        {path:\"/foo\",component:foo}\r\n    ]\r\n    var router = new VueRouter({\r\n        routes:routes\r\n    })\r\n    var app = new Vue({\r\n        router:router\r\n    }).$mount('#app');\r\n\r\n\r\n"},{"Id":"6774359855","Type":"IssuesEvent","CreatedAt":"2017-10-27T10:03:19","Actor":"xualen","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1850","RelatedDescription":"Opened issue \"Render v-for is failed in vue-router\" (#1850) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nvar foo = {\r\n        template:\"<div v-for='(el,index) in arr'>{{el}}</div>\"\r\n        ,data:function(){\r\n            return{\r\n                arr:[1,2,3]\r\n            }\r\n        }\r\n    };\r\n    var routes = [\r\n        {path:\"/foo\",component:foo}\r\n    ]\r\n    var router = new VueRouter({\r\n        routes:routes\r\n    })\r\n    var app = new Vue({\r\n        router:router\r\n    }).$mount('#app');\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6777248120","Type":"IssuesEvent","CreatedAt":"2017-10-27T21:16:26","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1028","RelatedDescription":"Closed issue \"Vuex Broken promise chain.\" (#1028) at vuejs/vuex","RelatedBody":"This issue is really weird and has me stumped.\r\n\r\nThe following dispatch is not called until after the contents of then(() => { .\r\n\r\nIt's almost like dispatch is returning a resolved promise immediately and then calling the Registration_register action.\r\n\r\n`\r\n....\r\nmethods: {\r\n\t\tregister: function () {\r\n\r\n\t\t\treturn this.$store.dispatch('Registration_register', this._data).then(() => {\r\n                         // this is executed immediately \r\n\t\t\t\tif (this.isRegistered) {\r\n\t\t\t\t\tthis.$router.push({ path: '/login' });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n// When this returns the Registration_register vuex action is called.\r\n....\r\n`\r\n\r\n Now Registration_register is called and works, no exceptions are thrown and the axios get call is successful. It seems the contents of Registration_register do not matter, the dispatch is simply called after the contents of then is run.\r\n\r\n`\r\n....\r\nactions: {\r\n\r\n\r\n\t\tRegistration_clearId ({ dispatch, commit, state }) {\r\n\t\t\tvar clear = {user: '', restaurant: '', device: '', registrationId: ''};\r\n\t\t\tcommit('Registration_setId', clear);\r\n\t\t\tCookies.set('PosDroidRegistrationID', clear);\r\n\t\t},\r\n\t\tRegistration_register ({ dispatch, commit, state }, {restaurant, device, user, pin}) {\r\n\t\t\treturn dispatch('Registration_clearId').then(() => {\r\n\t\t\t\tcommit('Registration_setIsRegistering', true);\r\n\t\t\t\treturn axios.get('api/registraton/register', {params: {restaurant, device, user, pin}}).then((result) => {\r\n\t\t\t\t\tif (result.data.result && result.data.result.valid) {\r\n\t\t\t\t\t\tvar registration = result.data.result;\r\n\t\t\t\t\t\tcommit('Registration_setId', registration);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!result.data.status.success) {\r\n\t\t\t\t\t\t\t// Somthing went wrong show server error message.\r\n\t\t\t\t\t\t\tcommit('Registration_addError', result.data.status.message);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcommit('Registration_addError', 'Incorrect registration name or password.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcommit('Registration_setIsRegistering', false);\r\n\t\t\t\t});\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t},\r\n....\r\n`\r\n\r\nHere is my Store setup.\r\n\r\n`\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex); // Install Vuex Data Store\r\n\r\n// Data Stores\r\nimport {Registration} from './store/registration';\r\nimport {Help} from './store/help';\r\nimport {Sync} from './store/sync';\r\nimport {Accounts} from './store/accounts';\r\nimport {Options} from './store/options';\r\nimport {Login} from './store/login';\r\n\r\nclass Store {\r\n\tstatic instance;\r\n\r\n\tconstructor () {\r\n\t\tif (this.instance) {\r\n\t\t\treturn this.instance;\r\n\t\t}\r\n\t\tthis.instance = this;\r\n\t\tthis.store = new Vuex.Store({\r\n\t\t\tmodules: {\r\n\t\t\t\tRegistration,\r\n\t\t\t\tHelp,\r\n\t\t\t\tAccounts,\r\n\t\t\t\tOptions,\r\n\t\t\t\tSync,\r\n\t\t\t\tLogin\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new Store().store;\r\n\r\n`\r\n\r\nVersions.\r\n    \"vue\": \"~2.3.4\",\r\n    \"vue-router\": \"^2.7.0\",\r\n    \"vuex\": \"^2.4.0\"\r\n\r\n"},{"Id":"6777248055","Type":"IssuesEvent","CreatedAt":"2017-10-27T21:16:25","Actor":"posdroid","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1028","RelatedDescription":"Opened issue \"Vuex Broken promise chain.\" (#1028) at vuejs/vuex","RelatedBody":"This issue is really weird and has me stumped.\r\n\r\nThe following dispatch is not called until after the contents of then(() => { .\r\n\r\nIt's almost like dispatch is returning a resolved promise immediately and then calling the Registration_register action.\r\n\r\n`\r\n....\r\nmethods: {\r\n\t\tregister: function () {\r\n\r\n\t\t\treturn this.$store.dispatch('Registration_register', this._data).then(() => {\r\n                         // this is executed immediately \r\n\t\t\t\tif (this.isRegistered) {\r\n\t\t\t\t\tthis.$router.push({ path: '/login' });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n// When this returns the Registration_register vuex action is called.\r\n....\r\n`\r\n\r\n Now Registration_register is called and works, no exceptions are thrown and the axios get call is successful. It seems the contents of Registration_register do not matter, the dispatch is simply called after the contents of then is run.\r\n\r\n`\r\n....\r\nactions: {\r\n\r\n\r\n\t\tRegistration_clearId ({ dispatch, commit, state }) {\r\n\t\t\tvar clear = {user: '', restaurant: '', device: '', registrationId: ''};\r\n\t\t\tcommit('Registration_setId', clear);\r\n\t\t\tCookies.set('PosDroidRegistrationID', clear);\r\n\t\t},\r\n\t\tRegistration_register ({ dispatch, commit, state }, {restaurant, device, user, pin}) {\r\n\t\t\treturn dispatch('Registration_clearId').then(() => {\r\n\t\t\t\tcommit('Registration_setIsRegistering', true);\r\n\t\t\t\treturn axios.get('api/registraton/register', {params: {restaurant, device, user, pin}}).then((result) => {\r\n\t\t\t\t\tif (result.data.result && result.data.result.valid) {\r\n\t\t\t\t\t\tvar registration = result.data.result;\r\n\t\t\t\t\t\tcommit('Registration_setId', registration);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!result.data.status.success) {\r\n\t\t\t\t\t\t\t// Somthing went wrong show server error message.\r\n\t\t\t\t\t\t\tcommit('Registration_addError', result.data.status.message);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcommit('Registration_addError', 'Incorrect registration name or password.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcommit('Registration_setIsRegistering', false);\r\n\t\t\t\t});\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t},\r\n....\r\n`\r\n\r\nHere is my Store setup.\r\n\r\n`\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex); // Install Vuex Data Store\r\n\r\n// Data Stores\r\nimport {Registration} from './store/registration';\r\nimport {Help} from './store/help';\r\nimport {Sync} from './store/sync';\r\nimport {Accounts} from './store/accounts';\r\nimport {Options} from './store/options';\r\nimport {Login} from './store/login';\r\n\r\nclass Store {\r\n\tstatic instance;\r\n\r\n\tconstructor () {\r\n\t\tif (this.instance) {\r\n\t\t\treturn this.instance;\r\n\t\t}\r\n\t\tthis.instance = this;\r\n\t\tthis.store = new Vuex.Store({\r\n\t\t\tmodules: {\r\n\t\t\t\tRegistration,\r\n\t\t\t\tHelp,\r\n\t\t\t\tAccounts,\r\n\t\t\t\tOptions,\r\n\t\t\t\tSync,\r\n\t\t\t\tLogin\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new Store().store;\r\n\r\n`\r\n\r\nVersions.\r\n    \"vue\": \"~2.3.4\",\r\n    \"vue-router\": \"^2.7.0\",\r\n    \"vuex\": \"^2.4.0\"\r\n\r\n"},{"Id":"6776675115","Type":"IssuesEvent","CreatedAt":"2017-10-27T18:48:41","Actor":"franzwilhelm","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1027","RelatedDescription":"Opened issue \"Vuex form input bindings - get/set - array\" (#1027) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nAs described here (https://vuex.vuejs.org/en/forms.html), form input bindings can be handled with a computed property containing a getter and a setter. As far as i know this is not possible with arrays, as the get/set is not a deep watcher. So far the code underneath has worked fine, but feels a bit hacky. How would one go around this. I think form input handling is one of vuex' most important use cases, and that this should be a feature.\r\n\r\n``` javascript\r\nwatch: {\r\n    filters: {\r\n      handler(value) {\r\n        this.$store.commit('testCreation/SET_FILTERS', [...value]);\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      filters: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.filters = [...this.sFilters];\r\n  },\r\n  computed: {\r\n    ...mapGetters(['sFilters']),\r\n  },\r\n```\r\n\r\n### What does the proposed API look like?\r\nThe proposed API is the same as described in https://vuex.vuejs.org/en/forms.html, only a watcher that makes this possible for arrays\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6775531858","Type":"IssuesEvent","CreatedAt":"2017-10-27T14:35:42","Actor":"tatsujb","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1026","RelatedDescription":"Opened issue \"No Store.\" (#1026) at vuejs/vuex","RelatedBody":"this is a store scaffold right?\r\n\r\nwell there's no store. not between components and not after a refresh \r\ntake a look : \r\nhttps://i.imgur.com/UQhYe94.gifv"},{"Id":"6775423871","Type":"IssuesEvent","CreatedAt":"2017-10-27T14:14:47","Actor":"minedun6","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1025","RelatedDescription":"Opened issue \"Vuex mutations not being processed\" (#1025) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://youtu.be/w-CPQ-JGVLc](https://youtu.be/w-CPQ-JGVLc)\r\n\r\n### Steps to reproduce\r\nThe problem seems to be a bit odd as i add an object to an array, it doesn't update getters.\r\nI joined a video to detail the problem a bit more.\r\n\r\n[Problem](https://youtu.be/w-CPQ-JGVLc)\r\n\r\nI have no idea why it works sometimes, and sometimes it doesn't work.\r\nAnd when I commit it using Vue Devtools it works and the rest of the flow works perfectly.\r\nBut for the first it doesn't and it is confusing me so much.\r\nthe getter responsible for getting the custom presentations doesn't get updated at first.\r\n\r\n### What is expected?\r\nEverything is inside the video\r\n\r\n### What is actually happening?\r\nEverything is inside the video\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6775356304","Type":"IssuesEvent","CreatedAt":"2017-10-27T14:01:28","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1024","RelatedDescription":"Closed issue \"Vuex mutations not being processed\" (#1024) at vuejs/vuex","RelatedBody":"What is the problem ?\r\n================\r\n\r\nThe problem seems to be a bit odd as i add an object to an array, it doesn't update getters.\r\nI joined a video to detail the problem a bit more.\r\n\r\n[Problem](https://youtu.be/w-CPQ-JGVLc)\r\n\r\nI have no idea why it works sometimes, and sometimes it doesn't work.\r\nAnd when I commit it using Vue Devtools it works and the rest of the flow works perfectly.\r\nBut for the first it doesn't and it is confusing me so much.\r\nthe getter responsible for getting the custom presentations doesn't get updated at first."},{"Id":"6775356223","Type":"IssuesEvent","CreatedAt":"2017-10-27T14:01:27","Actor":"minedun6","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1024","RelatedDescription":"Opened issue \"Vuex mutations not being processed\" (#1024) at vuejs/vuex","RelatedBody":"What is the problem ?\r\n================\r\n\r\nThe problem seems to be a bit odd as i add an object to an array, it doesn't update getters.\r\nI joined a video to detail the problem a bit more.\r\n\r\n[Problem](https://youtu.be/w-CPQ-JGVLc)\r\n\r\nI have no idea why it works sometimes, and sometimes it doesn't work.\r\nAnd when I commit it using Vue Devtools it works and the rest of the flow works perfectly.\r\nBut for the first it doesn't and it is confusing me so much.\r\nthe getter responsible for getting the custom presentations doesn't get updated at first."}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-28T05:30:32.5767934Z","RunDurationInMilliseconds":1889}