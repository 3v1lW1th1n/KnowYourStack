{"Data":{"Sdk":{"Events":[{"Id":"11852229510","Type":"IssuesEvent","CreatedAt":"2020-03-24T19:32:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/506","RelatedDescription":"Closed issue \"Workbook with custom properties becomes corrupt\" (#506) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nUsing OpenXML to purely open and save a file (without any manipulation) causes a corrupt file, i.e. Excel 2013 64b complains:\r\n![image](https://user-images.githubusercontent.com/145854/41104354-74e23734-6a6b-11e8-856f-184535172d76.png)\r\n\r\nNote that the file contains custom property parts, some of which are of 0 lengths. I don't have control of those parts.\r\n\r\nThis problem occurs only when using .NET Core, not with .NET Framework.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n- System.IO.Packaging Version: v.4.5.0 (explicitly added)\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Validation;\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace OpenXMLCustomPropertyPackagingProblemCore\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            File.Copy(\"test.xlsx\", \"file_to_open.xlsx\", true);\r\n            LoadAndValidate(\"file_to_open.xlsx\");\r\n\r\n            Console.WriteLine(\"Done.\");\r\n            Console.ReadKey(false);\r\n        }\r\n\r\n        public static void LoadAndValidate(string sourcePath)\r\n        {\r\n            using (SpreadsheetDocument package = SpreadsheetDocument.Open(sourcePath, true))\r\n            {\r\n                var validator = new OpenXmlValidator();\r\n                var errors = validator.Validate(package);\r\n\r\n                foreach (var e in errors)\r\n                {\r\n                    Console.WriteLine($\"{e.Part} {e.Path.PartUri}\");\r\n                    Console.WriteLine($\"\\t{e.Description}\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\nInput file: \r\n- [test.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/2089585/test.xlsx)\r\n- [file_to_open.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/2089586/file_to_open.xlsx)\r\n\r\nMD5 hashes:\r\n```\r\n815363ba1700d2f2aae99e677475f564 *file_to_open.xlsx\r\nac39d841fc15384c252c4870063f9b54 *test.xlsx\r\n```\r\n\r\n**Observed**\r\n\r\n`file_to_open.xlsx` becomes corrupt.\r\n\r\n**Expected**\r\n\r\n`file_to_open.xlsx` remains readable by Excel.\r\n"},{"Id":"11852007452","Type":"PullRequestEvent","CreatedAt":"2020-03-24T19:07:11","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/695","RelatedDescription":"Merged pull request \"Add FileFormatVersions.Office2019 for completeness\" (#695) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11851837989","Type":"PullRequestEvent","CreatedAt":"2020-03-24T18:48:05","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/707","RelatedDescription":"Merged pull request \"Ensure minimum office versions are included on enums\" (#707) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11851347642","Type":"PullRequestEvent","CreatedAt":"2020-03-24T17:58:54","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/706","RelatedDescription":"Merged pull request \"Add missing values to `CompatSettingNameValues`\" (#706) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #451 "},{"Id":"11851347596","Type":"IssuesEvent","CreatedAt":"2020-03-24T17:58:53","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/451","RelatedDescription":"Closed issue \"Word 2016 : file validation error with value \"useWord2013TrackBottomHyphenation\"\" (#451) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWord 2016 : file validation error with value \"useWord2013TrackBottomHyphenation\"\r\n\r\n**Information**\r\n\r\n- .NET Framework 4.7\r\n- DocumentFormat.OpenXml Version: (ie 2.8.1)\r\n\r\n**Repro**\r\n\r\nHere is the OneDrive url from the container where you will find my test word file  :\r\n\r\nhttps://onedrive.live.com/?id=7F7C6DE1B049242F%21105&cid=7F7C6DE1B049242F\r\n\r\nand here is the class I need to test this document :\r\n\r\n    public class WellFormedDocxRule : ITextValidationRule\r\n    {\r\n        public IResourceManagerService ResourceManagerService { get; set; }\r\n\r\n        public ValidationTarget ValidationTarget { get { return ValidationTarget.All; } }\r\n\r\n        //We assume the Validate method is thread safe\r\n        OpenXmlValidator validator = new OpenXmlValidator(FileFormatVersions.Office2010);\r\n\r\n        public IEnumerable<TextValidationErrorInfo> Validate(Text text, WordprocessingDocument document)\r\n        {\r\n            foreach (ValidationErrorInfo error in validator.Validate(document))\r\n            {\r\n                if (error.Description.Contains(\"useWord2013TrackBottomHyphenation\")) continue;\r\n                string strError = String.Format(\"(Part={0} ; Path={1}) : {2}\", error.Part.Uri, error.Path.XPath, error.Description);\r\n                yield return new TextValidationErrorInfo() { Description = ResourceManagerService.GetString(\"text_validation_wellformed_docx_rule_description\"), Details = strError, Severity = ValidationSeverity.Error, ValidationTarget = ValidationTarget };\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n**Observed**\r\n\r\nAfter having define my validator in C# with : \r\nOpenXmlValidator validator = new OpenXmlValidator(FileFormatVersions.Office2010) \r\nI have this error when I validate my docx document with Word 2016 : \r\nThe attribute http://schemas.openxmlformats.org/wordprocessingml/2006/main:name has invalid value 'useWord2013TrackBottomHyphenation'. The Enumeration constraint failed.\" \r\nI'm working with a 2.8.1.15 DocumentFormat.OpenXml.dll file.\r\nFiles created by Word 2016 seem to have more compatsetting elements than files created in Word 2010. \r\nOne of them is useWord2013TrackBottomHyphenation.\r\nI note that whether Validate Option provided in OpenXML SDK Tools or FileFormatVersions enumeration provided by Open XML SDK could only support for Office 2007,2010 and 2013. \r\nSo I think that OpenXMLValidator is not updated for Office 2016 at present. \r\n\r\n\r\n**Expected**\r\n\r\nUpdate OpenXMLValidator to be compatible with Word 2016\r\n"},{"Id":"11842953612","Type":"IssuesEvent","CreatedAt":"2020-03-24T00:41:01","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/645","RelatedDescription":"Closed issue \"Embedded documents with images breaks \"Save As\" on Word for Mac\" (#645) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nUsing OpenXML, appending a word document with embedded images into another word document using `AddAlternativeFormatImportPart(AlternativeFormatImportPartType.WordprocessingML, altChunkId)` causes an issue where the user can not \"Save\" or \"Save As\" when altering the content in Word for Mac.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework, .NET Core 3\r\n- DocumentFormat.OpenXml Version: 2.9.1\r\n\r\n**Repro**\r\n\r\n1. Create a new Console App in Visual Studio on Mac\r\n1. Add a folder to the top level called \"Docs\"\r\n1. Download the Nuget dependency DocumentFormat.OpenXml\r\n1. Create a new word doc named \"test-source.docx\"\r\n    1. Put some test text in there, doesn't matter what\r\n    1. Add the document to the solution in \"Docs\" folder\r\n    1. Change the property to \"Copy always\"\r\n1. Create a new word doc named \"test-append.docx\" (the embedded word doc)\r\n    1.  Put in some test text at the top\r\n    1. Copy over a jpg of your choice. The image type I used to reproduce is a jpg. I fetched mine from http://apod.nasa.gov/apod/ , one of their big pics should do it.\r\n    1. Add to the \"Docs\" folder in the solution\r\n    1. Change property of document to \"Copy always\"\r\n1. Copy paste the code below into your Program.cs file:\r\n\r\n```csharp\r\nusing System.IO;\r\nusing System.Linq;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\nusing Text = DocumentFormat.OpenXml.Wordprocessing.Text;\r\n\r\nnamespace TestWordAppend\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var destinationDoc = \"Docs/test-destination.docx\";\r\n            var sourceDoc = \"Docs/test-source.docx\";\r\n            var appendedDoc = \"Docs/test-append2.docx\";\r\n\r\n            File.Delete(destinationDoc);\r\n            File.Copy(sourceDoc, destinationDoc);\r\n\r\n            using (var doc = WordprocessingDocument.Open(destinationDoc, true))\r\n            {\r\n                var body = doc.MainDocumentPart.Document.Body;\r\n\r\n                var p2 = body.InsertAfter(\r\n                    new Paragraph(\r\n                        new ParagraphProperties(\r\n                            new PageBreakBefore()\r\n                    )),\r\n                    body.Elements<Paragraph>().Last()\r\n                );\r\n\r\n\r\n                var altChunkId = \"AltChunkId\";\r\n                var chunk = doc.MainDocumentPart.AddAlternativeFormatImportPart(\r\n                    AlternativeFormatImportPartType.WordprocessingML,\r\n                    altChunkId);\r\n\r\n                using (var fs = File.Open(appendedDoc, FileMode.Open))\r\n                    chunk.FeedData(fs);\r\n\r\n                var altChunk = new AltChunk { Id = altChunkId };\r\n                var run = new Run(new TabChar(), new Text(appendedDoc), new Break());\r\n                run.PrependChild(new RunProperties { RunStyle = new RunStyle { Val = \"Bold\" } });\r\n                var fileP = p2.InsertAfterSelf(new Paragraph());\r\n                fileP.Append(run);\r\n                run = new Run(new TabChar(), new Text(\"Uploaded by: \"), new TabChar(), new Text(\"Test User\"));\r\n                run.PrependChild(new RunProperties { RunStyle = new RunStyle { Val = \"Italic\" } });\r\n                fileP.Append(run);\r\n\r\n                body.Append(altChunk);\r\n                doc.MainDocumentPart.Document.Save();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n\r\n**Observed**\r\n\r\nWhen I open the destination document using Word on Mac, I will indeed see the document contents embedded in the destination document, however I can no longer utilize \"Save\" or \"Save As\".  Upon clicking \"save\" on a \"Save As\" when changing the name of the file, you will see the file name revert back to the original document name in the title and when you go to your \"Save As\" destination, you will not find a new document.  This problem does not exist in Word for Windows.\r\n\r\n**Expected**\r\n\r\nThe document should be able to be altered and saved within the MacOS Word application.\r\n"},{"Id":"11842942514","Type":"PullRequestEvent","CreatedAt":"2020-03-24T00:38:46","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/708","RelatedDescription":"Merged pull request \"Add no response support\" (#708) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11842926426","Type":"PullRequestEvent","CreatedAt":"2020-03-24T00:35:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/708","RelatedDescription":"Opened pull request \"Add no response support\" (#708) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11842923403","Type":"PullRequestEvent","CreatedAt":"2020-03-24T00:35:05","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/705","RelatedDescription":"Merged pull request \"Use Cache.ReadOnlyCollection<OpenXmlAttribute> for OpenXmlDomReader.Attributes\" (#705) at OfficeDev/Open-XML-SDK","RelatedBody":"The original code used the List type. This type will request a piece of memory by default.\r\n\r\nBecause we also need to support the .NET Framework versions below 4.6, and these versions do not exist Array.Empty method. See https://docs.microsoft.com/en-us/dotnet/api/system.array.empty\r\n\r\nThe `_emptyReadOnlyList` field  is only used here as the return value"},{"Id":"11842900586","Type":"IssuesEvent","CreatedAt":"2020-03-24T00:30:39","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/674","RelatedDescription":"Closed issue \"PPTX Sunburst chart?\" (#674) at OfficeDev/Open-XML-SDK","RelatedBody":"How would I go about creating a sunburst chart using OpenXML SDK? I tried reflecting it using the Productivity Tool but it would seem it does not support it correctly, and the chart itself is an image embedded into the PPTX. Seems to be stored very much differently than other types of charts.\r\n\r\nI know this is a question and not a bug, but SO is entirely unhelpful in answering new questions, I tried asking and they just outright closed my question."},{"Id":"11842893327","Type":"IssuesEvent","CreatedAt":"2020-03-24T00:29:12","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/98","RelatedDescription":"Closed issue \"Where are the w:headers and w:header elements?\" (#98) at OfficeDev/Open-XML-SDK","RelatedBody":"I understand that WordprocessingML got w:headers and w:header elements added on the standards, so that w:tcPr can have a w:headers child and the latest could have any amount of w:header elements as children.\n\nI could not find any reference or matching element whatsoever to use it. How could one get a reference to these elements by class name?\n\n> Annex M. (informative) Differences Between ECMA-376:2012 and ECMA-376:2006 \n> \n> This annex is informative.\n> \n> This annex highlights the differences between the versions of the Strict form of the Office Open XML schemas, as defined in ECMA-376:2012 and the schemas as defined by ECMA-376:2006.\n> \n> ...\n> - The header element (§17.4.18) was added\n> - The headers element (§17.4.19) was added\n\nAnd\n\n> 17.4.18 header (Header Cell Reference)\n> \n> This element specifies a reference, using a unique identifier, to a table header cell that is associated with the current table cell. The identifier representing the reference shall be stored on this element’s val attribute and is used to reference the unique identifier value of the id attribute of a header cell tc element of the current table.\n> The contents of the table header cell tc element designated by the specific unique identifier in its id attribute shall be used as the table header information associated with the table cell that references that specific unique identifier.\n> If this element is omitted or the value of the header cell identifier cannot be resolved, no header cell shall be associated with the current table cell.\n> \n> ...\n> \n> 17.4.19 headers (Header Cells Associated With Table Cell)\n> \n> This element specifies the list of header cells, as specified by children header elements, that provide header information associated with the current table cell. Each header cell shall specify a unique identifier, as specified by the use of the attribute id on the header cell tc element. This element is typically used to gather header information about data and sub header cells.\n> If this element is omitted or no children header element exists, no header cell shall be associated with the given table cell.\n> \n> ```\n> <w:tbl>\n>   …\n>   <w:tr>\n>     …\n>     <w:tc >\n>       …\n>     </w:tc>\n>     <w:tc w:id=\"HeaderA\">\n>        …\n>       <w:p>\n>         <w:r>\n>           <w:t>A</w:t>\n>         </w:r>\n>       </w:p>\n>     </w:tc>\n>     …\n>   </w:tr>\n>   <w:tr>\n>     …\n>     <w:tc w:id=\"HeaderC\">\n>       …\n>       <w:p>\n>         <w:r>\n>           <w:t>C</w:t>\n>         </w:r>\n>       </w:p>\n>     </w:tc>\n>     <w:tc>\n>       <w:tcPr>\n>         …\n>         <w:headers>\n>           <w:header w:val=\"HeaderA\" />\n>           <w:header w:val=\"HeaderC\" />\n>         </w:headers>\n>         …\n>       </w:tcPr>\n>       <w:p>\n>         <w:r>\n>           <w:t>x1</w:t>\n>         </w:r>\n>       </w:p>\n>     </w:tc>\n>     …\n>   </w:tr>\n> </w:tbl>\n> ```\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-03-25T05:30:48.6419634Z","RunDurationInMilliseconds":1709}