{"Data":{"Blog":{"FeedItems":[{"Title":"The C# Developer’s Guide to Shipping Better Apps with Visual Studio App Center","PublishedOn":"2018-01-16T19:41:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At our annual Microsoft Connect event in November, we announced the General Availability of Visual Studio App Center, combining our best developer services, incuding Xamarin Test Cloud and HockeyApp,...","Href":"https://blog.xamarin.com/c-developers-guide-shipping-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Podcast: Android 8.1, Xamarin Device Manager, and Visual Studio versions 15.5 & 15.6","PublishedOn":"2018-01-12T20:59:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Android 8.1, the new Xamarin Device Manager Preview, what&#8217;s new for mobile developers in Visual Studio versions 15.5/15.6,...","Href":"https://blog.xamarin.com/podcast-android-8-1-xamarin-device-manager-visual-studio-versions-15-5-15-6/","RawContent":null},{"Title":"Xamarin.Android Now Double Stuffed with Oreo 8.1","PublishedOn":"2018-01-11T19:55:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Oreo 8.1 introduces new features, including Android Go, Neural Networks API, Autofill framework enhancements, SharedMemory API, and many more. We&#8217;re excited to announce Xamarin.Android...","Href":"https://blog.xamarin.com/xamarin-android-now-double-stuffed-with-oreo-8-1/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-11T14:55:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Mark Smith, Director of Xamarin University, on Thursday, January 25 at 9 am PT / 12 pm ET / 5 pm GMT to learn how to automate your app development pipeline with Visual Studio App Center. You’ll...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null},{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7115132903","Type":"PullRequestEvent","CreatedAt":"2018-01-18T05:04:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1203","RelatedDescription":"Merged pull request \"Bump to mono/2017-10/267896c4\" (#1203) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/6383\r\nContext: https://github.com/mono/mono/issues/6414"},{"Id":"7114843026","Type":"PullRequestEvent","CreatedAt":"2018-01-18T03:05:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1203","RelatedDescription":"Opened pull request \"Bump to mono/2017-10/267896c4\" (#1203) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/6383\r\nContext: https://github.com/mono/mono/issues/6414"},{"Id":"7114809651","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:53:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1200","RelatedDescription":"Merged pull request \"[d15-6][enumification][Mono.Android] fix ChoiceMode enum generation.\" (#1200) at xamarin/xamarin-android","RelatedBody":"After the last API XML generation sanitization, ChoiceMode was removed\r\nbecause they were generated from AbsListView fields which DOES NOT EXIST\r\nin API Level 10.\r\n\r\nAnd getChoiceMode() and setChoiceMode are removed because they expect\r\nthat nonexistent enum.\r\n\r\nFortunately they are in ListView in API Level 10, so they can be generated\r\nfrom there."},{"Id":"7114387436","Type":"IssuesEvent","CreatedAt":"2018-01-18T00:25:59","Actor":"davidortinau","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1199","RelatedDescription":"Closed issue \"Entry did not moves upwards when keyboard is raised\" (#1199) at xamarin/xamarin-android","RelatedBody":" In my custom component I have used one property type of Xamarin.Forms View. My scenario is I am adding Xamarin.Forms Entry (or any other text field) to the view and placing the component to bottom of the screen. While focusing the entry keyboard will popup and the field moves above the keypad and allows us to enter value it is the expected behaviour but in may case entry stays at the same position. So we unable to see what we are editing in entry field. Could you please help me on this?.\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe Entry becomes disappear with the half of the screen untill the keyboard overlaps.\r\n\r\n### Actual Behavior\r\nThe Entry has to move up with the keyboard takes over the screen\r\n\r\nSample link: https://bugzilla.xamarin.com/attachment.cgi?id=23581 \r\n\r\nIssue reproducing Video link: https://mail.google.com/mail/u/0/?ui=2&ik=fe63368efa&view=att&th=160310781053cca3&attid=0.1&disp=safe&realattid=f_jawhdor00&zw\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7114288858","Type":"IssuesEvent","CreatedAt":"2018-01-17T23:53:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1170","RelatedDescription":"Closed issue \"No longer able to access `Android.Widget.ChoiceMode` when compiling against v2.3 in d15-6\" (#1170) at xamarin/xamarin-android","RelatedBody":"It appears that the ChoiceMode property of `Android.Widget.AbsListView` https://developer.android.com/reference/android/widget/AbsListView.html#setChoiceMode(int) is no longer accessible when comping against v2.3. This appears to be a regression introduced in d15-6.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the AccessoryViews monodroid sample - https://github.com/xamarin/monodroid-samples/tree/master/AccessoryViews\r\n2. Ensure you have SDK Platform Version 10 (2.3) installed, and attempt to build the project. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe project builds without error when targeting v2.3. This succeeds using d15-5 builds:\r\nhttps://gist.githubusercontent.com/pjcollins/22ca1e9064404355a0d88e72bb25d929/raw/3d07327d36390d523ac74e1b7d32af4fc63c73f5/15.5%2520Output\r\n\r\n### Actual Behavior\r\nThe project fails to build against monodroid/d15-6:\r\nhttp://xqa.blob.core.windows.net/gist/report-c995421b88984113bef0729590cdf1cf.txt\r\n```\r\n(CoreCompile target) -> \r\n  HomeScreen.cs(31,16): error CS1061: 'ListView' does not contain a definition for 'ChoiceMode' and no extension method 'ChoiceMode' accepting a first argument of type 'ListView' could be found (are you missing a using directive or an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n  HomeScreen.cs(31,29): error CS0234: The type or namespace name 'ChoiceMode' does not exist in the namespace 'Android.Widget' (are you missing an assembly reference?) [/Users/xamarinqa/myagent/_work/r1/a/monodroid-samples/AccessoryViews/AccessoryViews.csproj]\r\n```\r\nInterestingly enough, if I update the Target Framework version of my project to v4.0.3 or higher, the type can be resolved and the project builds successfully.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttps://gist.github.com/pjcollins/03e44af172a79acd68ccf2d25dd129ae\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7114288389","Type":"PullRequestEvent","CreatedAt":"2018-01-17T23:53:02","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1183","RelatedDescription":"Merged pull request \"[enumification][Mono.Android] fix ChoiceMode enum generation.\" (#1183) at xamarin/xamarin-android","RelatedBody":"After the last API XML generation sanitization, ChoiceMode was removed\r\nbecause they were generated from AbsListView fields which DOES NOT EXIST\r\nin API Level 10.\r\n\r\nAnd getChoiceMode() and setChoiceMode are removed because they expect\r\nthat nonexistent enum.\r\n\r\nFortunately they are in ListView in API Level 10, so they can be generated\r\nfrom there."},{"Id":"7112922774","Type":"PullRequestEvent","CreatedAt":"2018-01-17T18:39:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1202","RelatedDescription":"Merged pull request \"Rename .deb, as per conversation on Slack\" (#1202) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7111903605","Type":"PullRequestEvent","CreatedAt":"2018-01-17T15:32:45","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1202","RelatedDescription":"Opened pull request \"Rename .deb, as per conversation on Slack\" (#1202) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7114389202","Type":"IssuesEvent","CreatedAt":"2018-01-18T00:26:33","Actor":"ConX-Ryan","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1599","RelatedDescription":"Opened issue \"Command Binding doesn't work .NET Standard\" (#1599) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nBasic command binding fails when debugging android devices \r\n### Steps to Reproduce\r\n\r\n1.  create new master detail template project using .NET standard\r\n2.  install package Microsoft.EntityFrameworkCore.Sqlite and make the work around so you can deploy\r\n3.  navigate to about page and click button\r\n\r\n### Expected Behavior\r\nCommand function should be called\r\n### Actual Behavior\r\n01-18 13:22:13.145 D/ViewRootImpl@770e4f0[MainActivity]( 8796): ViewPostImeInputStage processPointer 0\r\n01-18 13:22:13.221 D/ViewRootImpl@770e4f0[MainActivity]( 8796): ViewPostImeInputStage processPointer 1\r\n\r\nbut no command is fired\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\nAPI 21-24\r\nXF 2.5.0.12203\r\n.NET Standard 2.0\r\n- Last known good version: N/A\r\n- IDE: VS 15.5.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: N/A\r\n  - Android: Oreo \r\n  - UWP:   16299 \r\n- Android Support Library Version: \r\n- Nuget Packages: Microsoft.EntityFrameworkCore.Sqlite\r\n- Affected Devices: Many\r\n"},{"Id":"7113524151","Type":"IssuesEvent","CreatedAt":"2018-01-17T20:47:34","Actor":"tomgilder","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1598","RelatedDescription":"Opened issue \"Android crash: InvalidCastException when ListView item is tapped under RecycleElement strategy\" (#1598) at xamarin/Xamarin.Forms","RelatedBody":"_Migrated from https://bugzilla.xamarin.com/show_bug.cgi?id=51648_\r\n\r\n### Description\r\n\r\nTapping a ListView item under some situations causes an `InvalidCastException` crash.\r\n\r\nOriginal bug report says \"list item\", but I've only been able to reproduce it with a header.\r\n\r\nThe ListView's `ListViewCachingStrategy` must be `RecycleElement` or `RecycleElementAndDataTemplate`, and items must be added to the ListView after the page has loaded.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the [attached project](https://github.com/xamarin/Xamarin.Forms/files/1640413/Bug51648.zip) on Android (tested on Android 6.0 in the simulator)\r\n2. Tap the list header\r\n\r\n### Expected Behavior\r\n\r\nNothing should happen\r\n\r\n### Actual Behavior\r\n\r\nApp crashes with InvalidCastException\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: unknown\r\n- IDE: VS for Mac 7.3\r\n- Platform Target Frameworks:\r\n  - Android: 7.1\r\n\r\n### Reproduction Link\r\n\r\n- [Repro project](https://github.com/xamarin/Xamarin.Forms/files/1640413/Bug51648.zip)"},{"Id":"7113072228","Type":"IssuesEvent","CreatedAt":"2018-01-17T19:10:43","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1597","RelatedDescription":"Opened issue \"[Proposal] Allow us to see UI test results when a PR is pushed\" (#1597) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nRunning UI tests on different devices, platforms, and API levels before submitting a PR is not possible for most of us, so we can't always know what existing tests we're breaking if any.\r\n\r\n![capture](https://user-images.githubusercontent.com/16855542/35061674-91e0cf10-fb87-11e7-8481-bd38acbb7aad.PNG)\r\n\r\nClicking on 'Details' shows a 401 page. Can the community have read access to UI test results?\r\n"},{"Id":"7112640173","Type":"IssuesEvent","CreatedAt":"2018-01-17T17:40:30","Actor":"Sivaraman761","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1596","RelatedDescription":"Opened issue \"Need to set the Scrollbar always visible \" (#1596) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nWe have try to set the horizontal and vertical scrollbar is always visible in view. But currently, the scrollbar is visible only when we scroll the view. But we need to set the scrollbar visibility as true.\r\n\r\nWe have attached the sample for your reference. Can you please check this and let, us known In case of any concern.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample.\r\n2. scroll the view then only the scrollbar comes to view.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNeed to set the horizontal and vertical scrollbar as always visible. \r\n\r\n### Actual Behavior\r\n\r\nCurrently, scrollbar visible only  while scrolling the view .\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\r\nRegards,\r\nSivaraman \r\n[WorkingWithListview (2).zip](https://github.com/xamarin/Xamarin.Forms/files/1640031/WorkingWithListview.2.zip)\r\n"},{"Id":"7111466904","Type":"PullRequestEvent","CreatedAt":"2018-01-17T14:19:19","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1594","RelatedDescription":"Merged pull request \"[Xaml] let the previewer know the asm\" (#1594) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nin addition to the resourcePath, tell the previewer the assembly in\r\nwhich we're looking for the resource.\r\n\r\nit changes an API that's not supposed to be used (yet) but the previewer, but I'd like @alanmcgovern approval on this.\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nChanged:\r\n - `public static Func<AssemblyName, string, string> Xamarin.Forms.Internals.ResourceLoader.ResourceProvider { get; internal set; }`\r\n\r\n### Behavioral Changes ###\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"7111039473","Type":"IssuesEvent","CreatedAt":"2018-01-17T12:55:51","Actor":"ninaada","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1595","RelatedDescription":"Opened issue \"Localization does not work properly with \"Bundle assemblies into native code\" option enabled\" (#1595) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nLocalization does not work properly with \"Bundle assemblies into native code\" option enabled in release mode. Once the locale is changed, the app picks the default locale strings(English), although the language/locale was changed to, say, spanish/french.\r\n\r\nTo fully change the strings, we have to force kill the app (Remove from recent apps section), and then restart the app, only then the strings are picked correctly according to the set locale. The locale changes only once per session of the app. If we change the locale again from spanish to french, it starts picking default strings(English) again and we have to force kill the app and restart again. \r\n\r\nHowever this problem doesn't occur when running in debug mode, or in release mode with \"Bundle assemblies into native code\" switched off. The resource strings are in Xamarin.Forms project and we are changing the locale as given in this [link](https://developer.xamarin.com/guides/xamarin-forms/advanced/localization/).\r\nSomewhat very similar to [this bug](https://bugzilla.xamarin.com/show_bug.cgi?id=55603) . \r\nAlso, the said workaround in the bug comments don't work either.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms app\r\n2. Add localization support as shown [here](https://developer.xamarin.com/guides/xamarin-forms/advanced/localization/)\r\n3. Enable \"Bundle assemblies into native code\" in Android build options\r\n4. Start the app and change the language\r\n\r\n\r\n### Expected Behavior\r\nApp should change the locale and display the strings of the changed locale.\r\n\r\n### Actual Behavior\r\nApp shows the default/previous locale strings, doesn't change the strings until next restart of the app.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: 15.5.1\r\n- IDE: VS 2017 Enterprise - Platform Target Frameworks: iOS, Android\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.1.0.24 (HEAD/9cfa7836b)\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7114259586","Type":"PullRequestEvent","CreatedAt":"2018-01-17T23:43:55","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3251","RelatedDescription":"Opened pull request \"[install-source] Add console runner from Nuget and fix xharness to restore nugets before attempting to build.\" (#3251) at xamarin/xamarin-macios","RelatedBody":"xharness needs a solution in order to ask for a nuget restore, so make sure to\nprovide the path to the solution.\n\nThis fixes a build issue where the install source tests would fail to build\ndue to picking up the system's nunit.framework.dll because the nuget one\nwasn't found/restored:\n\n    MonoPathManglerTest.cs(8,3): error CS0619: 'TestFixtureAttribute' is obsolete: 'The NUnit framework shipped with Mono is deprecated and will be removed in a future release. It was based on NUnit 2.4 which is long outdated. Please move to the NUnit NuGet package or some other form of acquiring NUnit.'\n    XamarinSourcesPathManglerTest.cs(8,3): error CS0619: 'TestFixtureAttribute' is obsolete: 'The NUnit framework shipped with Mono is deprecated and will be removed in a future release. It was based on NUnit 2.4 which is long outdated. Please move to the NUnit NuGet package or some other form of acquiring NUnit.'\n    OpenTKManglerTest.cs(8,3): error CS0619: 'TestFixtureAttribute' is obsolete: 'The NUnit framework shipped with Mono is deprecated and will be removed in a future release. It was based on NUnit 2.4 which is long outdated. Please move to the NUnit NuGet package or some other form of acquiring NUnit.'\n    PathManclerFactoryTests.cs(8,3): error CS0619: 'TestFixtureAttribute' is obsolete: 'The NUnit framework shipped with Mono is deprecated and will be removed in a future release. It was based on NUnit 2.4 which is long outdated. Please move to the NUnit NuGet package or some other form of acquiring NUnit.'\n    OpenTKManglerTest.cs(29,4): error CS0616: 'TestCase' is not an attribute class\n    OpenTKManglerTest.cs(30,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(29,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(30,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(31,4): error CS0616: 'TestCase' is not an attribute class\n    XamarinSourcesPathManglerTest.cs(33,4): error CS0616: 'TestCase' is not an attribute class\n    XamarinSourcesPathManglerTest.cs(35,4): error CS0616: 'TestCase' is not an attribute class\n    XamarinSourcesPathManglerTest.cs(37,4): error CS0616: 'TestCase' is not an attribute class\n    OpenTKManglerTest.cs(36,4): error CS0616: 'TestCase' is not an attribute class\n    OpenTKManglerTest.cs(37,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(37,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(38,4): error CS0616: 'TestCase' is not an attribute class\n    MonoPathManglerTest.cs(39,4): error CS0616: 'TestCase' is not an attribute class\n    XamarinSourcesPathManglerTest.cs(47,4): error CS0616: 'TestCase' is not an attribute class"},{"Id":"7114213879","Type":"PullRequestEvent","CreatedAt":"2018-01-17T23:29:41","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3250","RelatedDescription":"Opened pull request \"[xharness] Fix Makefile generation of grouped targets with spaces.\" (#3250) at xamarin/xamarin-macios","RelatedBody":"These targets will already be properly escaped (using backslash), so adding\nquotes will cause make to treat the backslashes literally (and break).\n\nFixes an issue with package-tests:\n\n    $ make package-tests\n    [...]\n    build-mac-classic-dont\\ link failed\n    build-mac-unified-dont\\ link failed\n    build-mac-unifiedXM45-dont\\ link failed\n    build-mac-unified32-dont\\ link failed\n    build-mac-unifiedXM4532-dont\\ link failed\n    build-mac-unified-link\\ all failed\n    build-mac-unified-link\\ sdk failed\n    make[4]: *** [build-mac] Error 1\n    make[3]: *** [mac-test-package.zip] Error 2\n    make[2]: *** [package-tests] Error 2"},{"Id":"7114129942","Type":"PullRequestEvent","CreatedAt":"2018-01-17T23:05:27","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3249","RelatedDescription":"Opened pull request \"[xharness] Add project configuration to run Jenkins-style tests.\" (#3249) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7113948692","Type":"PullRequestEvent","CreatedAt":"2018-01-17T22:20:29","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3248","RelatedDescription":"Opened pull request \"Fix RequiresSuperAttribute\" (#3248) at xamarin/xamarin-macios","RelatedBody":"Looks like the wrong RequiresSuperAttribute was used by the generator (from `generator-attributes.cs`).\n\n- Removed incorrect RequiresSuperAttribute from `generator-attributes.cs`.\n- Added remaining [RequiresSuper] attributes to UIKit.\n- Fixed typo in RequiresSuperAttribute.cs\n- Fixed frameworks.sources so [RequiresSuper] works in the bindings files."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"953670252793090049","CreatedAt":"2018-01-17T16:48:01+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/BbdcfvhwCa","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"953354972019732481","CreatedAt":"2018-01-16T19:55:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/yTZCnF9Yko","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":56,"RawContent":null},{"Id":"953306603851218944","CreatedAt":"2018-01-16T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":24,"RawContent":null},{"Id":"952935662407348230","CreatedAt":"2018-01-15T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use new project templates in #VisualStudio 2017 that enable you to use #dotNET Standard as a code shar… https://t.co/nRyxpQLx5D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"952587115417821191","CreatedAt":"2018-01-14T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/WfBaPE3aMD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":27,"RawContent":null},{"Id":"952220954310127617","CreatedAt":"2018-01-13T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/olv2ycerlY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":182,"FavoriteCount":79,"RawContent":null},{"Id":"951923977278164992","CreatedAt":"2018-01-12T21:08:56+00:00","UserScreenname":"xamarinhq","Text":"Start your weekend on a high note with this week's episode of the @XamarinPodcast, covering Android 8.1, the new… https://t.co/nyDaQnMQOM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"951862087931789312","CreatedAt":"2018-01-12T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/Drj1AHQYPg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":12,"RawContent":null},{"Id":"951544245466423296","CreatedAt":"2018-01-11T20:00:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the exciting new features in Android Oreo 8.1 with updated support in #Xamarin.Android:… https://t.co/7RaFvwrg4V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":19,"RawContent":null},{"Id":"951505598268563456","CreatedAt":"2018-01-11T17:26:27+00:00","UserScreenname":"xamarinhq","Text":"Ready to start building better apps, faster? Learn how to get started with #VSAppCenter in our upcoming @XamarinU w… https://t.co/zkJdTZ6JTX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":31,"RawContent":null},{"Id":"951487872753946625","CreatedAt":"2018-01-11T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/TGqFOONLio","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"951172797337866240","CreatedAt":"2018-01-10T19:24:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio 2017 version 15.6 Preview is now available! Get started today: https://t.co/KG2CJ20AHH https://t.co/e5VR78hTLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":29,"RawContent":null},{"Id":"951133533246025738","CreatedAt":"2018-01-10T16:48:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":23,"RawContent":null},{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":40,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":135,"FavoriteCount":65,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":48,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-01-18T05:30:38.8886745Z","RunDurationInMilliseconds":3778}