{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7686820287","Type":"IssuesEvent","CreatedAt":"2018-05-17T01:36:25","Actor":"cilerler","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3153","RelatedDescription":"Opened issue \"IOptionsSnapshot is not working with non API/Web scenarios\" (#3153) at aspnet/Home","RelatedBody":"It looks like `IOptionsSnapshot` with `reloadOnChange: true` set on [`HostBuilder`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.hosting.hostbuilder?view=aspnetcore-2.1) is not updating the options value when the **appsettings.json** content changes.\r\n\r\nThis behavior works fine on `WebHost`.  As far as my understanding `IOptionsSnapshot` gets generated as `Scoped` in `WebHost` for each call.  However this doesn't apply to `HostBuilder` since there is no outside caller exist.\r\n\r\nWe should be able to detect setting changes and I would like you to consider this issue as a feature request.  \r\n\r\nThanks in advance"},{"Id":"7686434095","Type":"IssuesEvent","CreatedAt":"2018-05-16T23:13:46","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3152","RelatedDescription":"Closed issue \"Antiforgery not found on Ubuntu 18.04 TLS\" (#3152) at aspnet/Home","RelatedBody":"Just stumbled uppon this issue, that it won't find Antiforgery. I published a selfcontained app for Ubuntu(Windows works fine).\r\nusing this cli:\r\n`dotnet publish -c Release -r ubuntu.14.04-x64`\r\nor\r\n`dotnet publish -c Release -r ubuntu-x64`\r\ngrafik\r\n![grafik](https://user-images.githubusercontent.com/1398184/40144395-c3997d4c-595e-11e8-9ace-3b76251a15ed.png)\r\n\r\nAnd i don't understand why it tries to look in `/lib/*`\r\nAll files seem to be in the publish subfolder. As of now i even tried installing the sdk on my Ubuntu using\r\n`sudo apt-get install dotnet-sdk-2.1.200`\r\nInstallation went fine. But still no success :/\r\n\r\nThis is how my project looks like:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n\t<PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Remove=\"Properties\\PublishProfiles\\FolderProfile1.pubxml\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Antiforgery\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Server.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.InMemory\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n\r\n```"},{"Id":"7685990323","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:19:51","Actor":"Memnarch","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3152","RelatedDescription":"Opened issue \"Antiforgery not found on Ubuntu 18.04 TLS\" (#3152) at aspnet/Home","RelatedBody":"Just stumbled uppon this issue, that it won't find Antiforgery. I published a selfcontained app for Ubuntu(Windows works fine).\r\nusing this cli:\r\n`dotnet publish -c Release -r ubuntu.14.04-x64`\r\nor\r\n`dotnet publish -c Release -r ubuntu-x64`\r\ngrafik\r\n![grafik](https://user-images.githubusercontent.com/1398184/40144395-c3997d4c-595e-11e8-9ace-3b76251a15ed.png)\r\n\r\nAnd i don't understand why it tries to look in `/lib/*`\r\nAll files seem to be in the publish subfolder. As of now i even tried installing the sdk on my Ubuntu using\r\n`sudo apt-get install dotnet-sdk-2.1.200`\r\nInstallation went fine. But still no success :/\r\n\r\nThis is how my project looks like:\r\n``<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n\t<PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <None Remove=\"Properties\\PublishProfiles\\FolderProfile1.pubxml\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Antiforgery\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.Server.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.InMemory\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n``\r\n"},{"Id":"7685809507","Type":"IssuesEvent","CreatedAt":"2018-05-16T20:44:02","Actor":"xtianus79","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3151","RelatedDescription":"Opened issue \"aspnet-webpack is failing and not working with spatemplates or manual configuration\" (#3151) at aspnet/Home","RelatedBody":"I keep getting this error when running the example on this page\r\n\r\nhttps://docs.microsoft.com/en-us/aspnet/core/client-side/spa-services?view=aspnetcore-2.0#webpack-dev-middleware\r\n\r\n\r\n`System.AggregateException: One or more errors occurred. (Webpack dev middleware failed because of an error while loading 'aspnet-webpack'. Error was: Error: Cannot find module 'webpack'\r\n    at Function.Module._resolveFilename (module.js:538:15)\r\n    at Function.Module._load (module.js:468:25)\r\n    at Module.require (module.js:587:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (C:\\Users\\choles\\source\\repos\\WebApplication1test\\WebApplication1test\\node_modules\\aspnet-webpack\\WebpackDevMiddleware.js:4:15)\r\n    at Module._compile (module.js:643:30)\r\n    at Object.Module._extensions..js (module.js:654:10)\r\n    at Module.load (module.js:556:32)\r\n    at tryModuleLoad (module.js:499:12)\r\n    at Function.Module._load (module.js:491:3)\r\n`"},{"Id":"7683249924","Type":"IssuesEvent","CreatedAt":"2018-05-16T13:17:30","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3150","RelatedDescription":"Opened issue \"File Provider - deprecate PhysicalPath\" (#3150) at aspnet/Home","RelatedBody":"The IFileProvider / IFileInfo abstraction seems broken:\r\n\r\nLook at this: https://github.com/aspnet/FileSystem/blob/dev/src/FS.Embedded/EmbeddedResourceFileInfo.cs#L65\r\n\r\nPhysicalPath seems only relevant for the `PhysicalFileProvider`.\r\nAlso why is it necessary to leak the physical path? Why not keep it encapsulated. \r\n\r\nPlease consider deprecating this property - it's causing confusion: https://github.com/dazinator/Dazinator.AspNet.Extensions.FileProviders/issues/30"},{"Id":"7680906110","Type":"IssuesEvent","CreatedAt":"2018-05-16T04:37:19","Actor":"kailashp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3144","RelatedDescription":"Closed issue \"Asp.Net Core signalR is not working if publishing inside virtual directory\" (#3144) at aspnet/Home","RelatedBody":"I have developed an application in asp.net core and used signalR. When i publish it in root directory it works fine, but if i publish it inside virtual directory it doesn't work. My signalR hub is always pointing to the root directory.\r\n\r\nStartup.cs\r\n\r\n```\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    // ... other middleware ...\r\n    app.UseSignalR(routes =>\r\n    {\r\n        routes.MapHub<ChatHub>(\"/chat\");\r\n    });\r\n}\r\n```\r\nAnd i have initialized it in client side like this,\r\n\r\nchat.js\r\n\r\n`var connection = new signalR.HubConnection(\"/chat\");`\r\n\r\nAfter publishing it inside virtual directory(/development/chatapp/source) it points like this, \r\nhttp://localhost:100/chat?userId=1\r\n\r\nBut actually it has to point like this, so that it will work,\r\nhttp://localhost:100/development/chatapp/source/chat?userId=1\r\n\r\nI have used asp.net core 2.0 and this signalR version(1.0.0-preview1-final).\r\n\r\nSomeone please suggest me to resolve this issue."},{"Id":"7680019726","Type":"IssuesEvent","CreatedAt":"2018-05-15T23:08:52","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3050","RelatedDescription":"Closed issue \"2.1 preview 2 Fedora packaging issue\" (#3050) at aspnet/Home","RelatedBody":"I just upgraded from preview1 to preview2, and am getting the following error when running my application:\r\n\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.App', version '2.1.0-preview2-final' was notfound.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /usr/share/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n  - The following versions are installed:\r\n      2.1.0-preview1-final at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n```\r\n\r\nHere are the dotnet related packages I've installed (`dnf list --installed dotnet* aspnet*`) - in particular, note that aspnetcore-runtime-2.1.0-preview2-final is installed:\r\n\r\n```\r\nInstalled Packages\r\naspnetcore-runtime-2.1.0-preview1-final.x86_64     2.1.0_preview1_final-1    @packages-microsoft-com-prod\r\naspnetcore-runtime-2.1.0-preview2-final.x86_64     2.1.0_preview2_final-1    @packages-microsoft-com-prod\r\naspnetcore-store-2.0.0.x86_64                      2.0.0-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.3.x86_64                      2.0.3-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.5.x86_64                      2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-host.x86_64                                 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-deps-2.1.0-preview2-26406-04.x86_64 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.0.3.x86_64                            2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.2.x86_64                            2.1.2-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview1-008174.x86_64          2.1.300_preview1_008174-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview2-008530.x86_64          2.1.300_preview2_008530-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.4.x86_64                            2.1.4-1                   @packages-microsoft-com-prod\r\n```\r\n\r\nLooking at the contents of aspnetcore-runtime-2.1.0-preview2-final (`dnf repoquery -l aspnetcore-runtime-2.1.0-preview2-final`), I noticed the Microsoft.AspNetCore.All and Microsoft.AspNetCore.App were listed as being in `/opt/rh/rh-dotnet20/root/usr/lib64/dotnet/shared/` rather than `/usr/share/dotnet/shared/`.\r\n\r\nI then copied the contents from /opt/rh.. to the expected location in /usr/share and then the application worked again."},{"Id":"7679781562","Type":"IssuesEvent","CreatedAt":"2018-05-15T22:02:13","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/3147","RelatedDescription":"Reopened issue \"React template index.html caching?\" (#3147) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nI seem to be facing a problem when deploying a new build to my server. \r\n\r\nIt seems that index.html is cached by the browser and tries to load the old bundle, which leads to a 404.\r\n\r\nAny ideas how to fix this?\r\n\r\nThanks!"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7686968811","Type":"PullRequestEvent","CreatedAt":"2018-05-17T02:31:17","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2292","RelatedDescription":"Opened pull request \"Refactor LongPollingTransport stop in TS client to align with C# client\" (#2292) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2163"},{"Id":"7686821770","Type":"IssuesEvent","CreatedAt":"2018-05-17T01:37:01","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2291","RelatedDescription":"Opened issue \"Document how to debug TS tests\" (#2291) at aspnet/SignalR","RelatedBody":"Please share @anurse. Inquiring minds would like to know 🐴 "},{"Id":"7686743177","Type":"IssuesEvent","CreatedAt":"2018-05-17T01:07:45","Actor":"AndreSteenbergen","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2290","RelatedDescription":"Opened issue \"High memory usage\" (#2290) at aspnet/SignalR","RelatedBody":"I am building an app with a high volume of messages over Microsoft.AspNetCore.SignalR 1.0.0-preview2-final. Latest on nuget at the moment I think. I see a very high memeory usage which is constant. So I guess there is a buffer somewhere.\r\n\r\nThe \"old\" signalr settings gave options to reduce the number of messages in the buffer. This field is not in the HupOptions anymore. How do I reduce the memory footprint. I checked all code, my project is not storing stuff in dictionaries, internal cache or whatsoever. It is basically a realtime portal to the backend. The full web project is stable at about 800Mb contantly. That numer shouldn't be that high.\r\n\r\nI hope someone knows how to reduce the memory footprint of my signalr app."},{"Id":"7686294263","Type":"PullRequestEvent","CreatedAt":"2018-05-16T22:31:41","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2242","RelatedDescription":"Merged pull request \"Add Content-Type header in HttpClient.ts\" (#2242) at aspnet/SignalR","RelatedBody":"This change prevents an error in react-native when running on the Android platform. If the Content-Type header is not set, an error is thrown.\r\n\r\nSetting the value to `text/plain;charset=UTF-8` matches what Chrome sends without the header being specified.\r\n\r\nError w/out change:\r\n![image](https://user-images.githubusercontent.com/4699747/39844289-31ad2e3e-53a4-11e8-998e-76dd944a5a7d.png)\r\n\r\nWhen setting the `LogLevel` to `Debug`,  it would fail after:\r\n\r\n`Debug: Sending negotiation request: ...`\r\n\r\nWhen debugging the `xhr.onerror` function in HttpClient.ts, the details on the `xhr` object shows the underlying error from react-native is \"Payload is set but no content-type header specified\".\r\n\r\nWith this proposed change, the error is not thrown and results in the connection established and working as expected.\r\n\r\nThanks."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7687251315","Type":"IssuesEvent","CreatedAt":"2018-05-17T04:19:36","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6619","RelatedDescription":"Closed issue \"Improve CSS link helper test to check if stylesheet loaded or not\" (#6619) at aspnet/Mvc","RelatedBody":"I have the following razor code:\r\n\r\n    <link rel=\"stylesheet\" href=\"https://cdn.evaluate.com/css/site.min.css\"\r\n                  asp-fallback-href=\"~/css/site.min.css\"\r\n                  asp-fallback-test-class=\"fallback-test\" asp-fallback-test-property=\"table-layout\" asp-fallback-test-value=\"auto\" />\r\n\r\nWhich generates the following HTML:\r\n\r\n    <link rel=\"stylesheet\" href=\"https://cdn.evaluate.com/css/site.min.css\" />\r\n    <meta name=\"x-stylesheet-fallback-test\" content=\"\" class=\"fallback-test\" />\r\n    <script>!function(a,b,c,d){var e,f=document,g=f.getElementsByTagName(\"SCRIPT\"),h=g[g.length-1].previousElementSibling,i=f.defaultView&&f.defaultView.getComputedStyle?f.defaultView.getComputedStyle(h):h.currentStyle;if(i&&i[a]!==b)for(e=0;e<c.length;e++)f.write('<link href=\"'+c[e]+'\" '+d+\"/>\")}(\"table-layout\",\"auto\",[\"\\/css\\/site.min.css\"], \"rel=\\u0022stylesheet\\u0022 \");</script>\r\n\r\nBut when the CDN goes down the local fallback CSS file is not loaded.\r\n\r\nIn the network tab of the developer console in Firefox, there is no request for the local fallback."},{"Id":"7687243056","Type":"IssuesEvent","CreatedAt":"2018-05-17T04:16:04","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6890","RelatedDescription":"Closed issue \"Url.Action with Route parameters in Controller Route\" (#6890) at aspnet/Mvc","RelatedBody":"I'm having an issue using `Url.Action` to generate an absolute Url.\r\nI moved a route parameter that is shared by all actions in the Controller into the `Route` parameter for the _whole controller_ and that seems to have broken the ability to generate a Url.\r\n\r\nHere is a stub version of the Controller:\r\n\r\n    [ApiVersion(\"1.0\")]\r\n    [Route(\"api/v{version:apiVersion}/whiteboards/{whiteboardId}/thumbnail\")]\r\n    public class ThumbnailController : Controller\r\n    {\r\n        public ThumbnailController()\r\n        {\r\n        }\r\n        // GET api/v1/whiteboards/<id>/thumbnail\r\n        [HttpGet]\r\n        public async Task<Stream> Get(string whiteboardId)\r\n        {\r\n            Response.ContentType = \"image/jpeg\";\r\n            return <data from store>;\r\n        }\r\n\r\n        // POST api/v1/whiteboards/<id>/thumbnail\r\n        [HttpPost]\r\n        public async Task Post(string whiteboardId)\r\n        {\r\n            <store thumbnail in store>\r\n        }\r\n    }\r\n\r\nThis is the code that I'm using to generate the Uri:\r\n\r\n    return new Uri(Url.Action(new UrlActionContext\r\n    {\r\n        Controller = \"Thumbnail\",\r\n        Action = \"Get\",\r\n        Values = new\r\n        {\r\n            whiteboardId = 10\r\n        },\r\n        Protocol = Request.Scheme\r\n    }));\r\n\r\nHowever, this is returning `null`.\r\n\r\nSwitching it back to the following works, but doesn't look as good as we now have duplicated part of the route.\r\n\r\n    [ApiVersion(\"1.0\")]\r\n    [Route(\"api/v{version:apiVersion}/whiteboards\")]\r\n    public class ThumbnailController : Controller\r\n    {\r\n        public ThumbnailController()\r\n        {\r\n        }\r\n        // GET api/v1/whiteboards/<id>/thumbnail\r\n        [HttpGet(\"{whiteboardId}/thumbnail\")]\r\n        public async Task<Stream> Get(string whiteboardId)\r\n        {\r\n            Response.ContentType = \"image/jpeg\";\r\n            return <data from store>;\r\n        }\r\n\r\n        // POST api/v1/whiteboards/<id>/thumbnail\r\n        [HttpPost(\"{whiteboardId}/thumbnail\")]\r\n        public async Task Post(string whiteboardId)\r\n        {\r\n            <store thumbnail in store>\r\n        }\r\n    }\r\n\r\nIs this intended for it to not work? It would be really nice if it did, but maybe there is something that messes up the route generation when we do this?\r\nIs using a parameter in the `Route` attribute in the constructor even supported/recommended at all?"},{"Id":"7687186484","Type":"IssuesEvent","CreatedAt":"2018-05-17T03:53:23","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7777","RelatedDescription":"Closed issue \"exceptions when starting project for the first time in IIS Express\" (#7777) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Description of the problem:\r\nGetting exceptions when starting the project from locally. \r\n\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker: Information: Executed action SIS.Web.Controllers.HomeController.Index (SIS.Web) in 7183.5607ms\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 8219.2518ms 200 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/app.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/vendor.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/app.bundle.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/gantt.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/pie.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/amcharts/serial.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/datatables/media/css/jquery.dataTables.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/font.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/perfect-scrollbar.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/fullcalendar.min.css  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/jquery.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/perfect-scrollbar.jquery.min.js  \r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n'SIS.Web.exe' (CLR v4.0.30319: SIS.Web.exe): Loaded 'C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.IO.MemoryMappedFiles\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.IO.MemoryMappedFiles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'SIS.Web.exe' (CLR v4.0.30319: SIS.Web.exe): Loaded 'C:\\Windows\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.Handles\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Runtime.Handles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100267.3715ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100225.1655ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100288.5788ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100243.5967ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100221.8418ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100241.4037ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<PerformProxyRequest>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100046.4715ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request finished in 100046.7863ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/cal/alasql.min.js  \r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost: Information: Request starting HTTP/1.1 GET http://localhost:56284/dist/datatables/media/js/jquery.dataTables.min.js  \r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: Error: An unhandled exception has occurred while executing the request\r\n\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 1.1.2\r\n\r\nMicrosoft.AspNetCore.Mvc: 1.1.3\r\n\r\n"},{"Id":"7687185268","Type":"IssuesEvent","CreatedAt":"2018-05-17T03:52:55","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7778","RelatedDescription":"Closed issue \"System.IO.IOException: Too many open files\" (#7778) at aspnet/Mvc","RelatedBody":"```c#\r\n:ulimit -n 204800\r\n:ulimit -n\r\n204800\r\n```\r\n\r\nCentos 7.2 以上设置好了，但还是会报下面的错误\r\nCentos 7.2 above set up, but still reported the following error\r\n\r\nSystem.IO.IOException: Too many open files\r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream()\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileContext.<SendAsync>d__49.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.ResponseCaching.ResponseCachingMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.ResponseCompression.ResponseCompressionMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\r\n----------------------------------------------------------------\r\n"},{"Id":"7686155465","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:56:25","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6682","RelatedDescription":"Closed issue \"Build fluent API for app model conventions\" (#6682) at aspnet/Mvc","RelatedBody":"We should build a fluent API for app model conventions that allows:\r\n1. Easily selecting (i.e. querying) the objects to apply conventions to (e.g. Razor pages, controllers)\r\n2. Easily setting a convention on the selected objects (e.g. applying filters)\r\n\r\nSee https://github.com/aspnet/Mvc/issues/6630 for previous discussion and an example of filter ideas."},{"Id":"7686129283","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:50:34","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5705","RelatedDescription":"Closed issue \"Have unique prefixes for different model binding source in Model State\" (#5705) at aspnet/Mvc","RelatedBody":"Today all model binding errors, regardless of source, share a single \"namespace\" within model state. This means that unrelated errors from one source could affect the ability to validate models created from another source.\r\n\r\nInstead, we should consider having model state keys be somehow based on which source the data came from.\r\n\r\nThis would mitigate some of the problems as seen in https://github.com/aspnet/Mvc/issues/5672.\r\n\r\nNote: This should presumably apply only in the case where an explicit prefix wasn't used.\r\n\r\ncc @rynowak @dougbu "},{"Id":"7686060201","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:34:50","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7786","RelatedDescription":"Closed issue \"Dependency Injection into IViewLocationExpander implementing class\" (#7786) at aspnet/Mvc","RelatedBody":"Is it possible to use constructor Dependency Injection in a class implementing IViewLocationExpander?\r\nIt is initialized in Startup.cs ConfigureServices\r\n\r\n                .AddRazorOptions(options =>\r\n                {\r\n                    options.ViewLocationExpanders.Add(new CustomViewLocationExpander());\r\n                })\r\nSo it seems a problem to inject into the constructor.\r\nIs there some solution?"},{"Id":"7686020425","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:26:19","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7788","RelatedDescription":"Closed issue \"Make types which own disposable resources disposable\" (#7788) at aspnet/Mvc","RelatedBody":"This came up in the following PR, where some types which own disposable resources aren't actually disposable: https://github.com/aspnet/Mvc/pull/7780\r\nAfter a discussion regarding that it seems there was a design decision to not do that for singleton types as there is no much value.\r\nHowever, there are cases where the types are used in testing for example, where it ends up created and not disposed for prolonged period of time.\r\nThings which fall into the same bucket are:\r\n- `MvcViewOptions`\r\n- `RazorViewEngineOptions`\r\n- many more\r\n\r\nThis issue is filed to revisit that design decision."},{"Id":"7685958622","Type":"IssuesEvent","CreatedAt":"2018-05-16T21:13:07","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7597","RelatedDescription":"Closed issue \"Suggestion: Allow using interfaces for controllers\" (#7597) at aspnet/Mvc","RelatedBody":"We're building a microservices-based system using Service Fabric and MVC, and many of the services are internal. In order to ease the development of those services, I've created an `IApplicationModelProvider` (a bit [hacky](https://gist.github.com/aelij/7a6f8c51deaa14b4f3783122afc2242b) but works) that also reads route and verb attributes from interfaces which are shared between services. This makes them very easy to consume. Essentially turning MVC to RPC-style calls.\r\n\r\nFor example:\r\n\r\n```csharp\r\n[ContractRoute(\"api/foo\")]\r\npublic interface IFooService\r\n{\r\n    [HttpGet(\"{type}\"]\r\n    Task<List<Foo>> GetFoo([FromRoute] string type);\r\n    [HttpPost]\r\n    Task<Foo> UpdateFoo([FromBody] Foo foo);\r\n}\r\n```\r\n\r\nThe controller just implements the interface with no attributes at all.\r\n\r\nI've also written a Roslyn analyzer and code generator that creates clients from those interfaces using `HttpClient` and the `Microsoft.AspNet.WebApi.Client` package. The analyzer checks the contract for:\r\n\r\n* Valid route template syntax\r\n* Match route parameters with method parameters\r\n* All parameters have binding attributes (implicit not allowed)\r\n\r\nSome of those diagnostics could probably be used by any controller.\r\n\r\nNote this is not meant to replace Swagger, which is great for public APIs."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7686002481","Type":"PullRequestEvent","CreatedAt":"2018-05-16T21:22:30","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1795","RelatedDescription":"Opened pull request \"Added test for verifying fallbacksrc data\" (#1795) at aspnet/Identity","RelatedBody":""},{"Id":"7683307536","Type":"PullRequestEvent","CreatedAt":"2018-05-16T13:26:54","Actor":"kichalla","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1794","RelatedDescription":"Opened pull request \"Fixed sha-integrity content of script tags in IdentityUI's cshtml files\" (#1794) at aspnet/Identity","RelatedBody":"Related to https://github.com/aspnet/templating/issues/520"},{"Id":"7682747945","Type":"IssuesEvent","CreatedAt":"2018-05-16T11:44:06","Actor":"tidyui","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1793","RelatedDescription":"Opened issue \"Primary Key in RoleClaim & UserClaim provider dependent\" (#1793) at aspnet/Identity","RelatedBody":"This probably belongs in the EntityFrameworkCore repo, but I haven't bumped into it before using Identity. The migration generated for `RoleClaim` and `UserClaim` is provider dependent on the provider that was used when generating the migration.\r\n\r\nFor example the primary keys are generated with `Annotation(Sqlite:Autoincrement, true)` when using SQLite, and `Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn)` when creating the migration with SqlServer.\r\n\r\nWhile this probably works when generating a migration for a single application it totally breaks when using it in a reusable library that is not supposed to be database dependent because the migration only works on the same type of database as it was created for.\r\n\r\nIt also seems a bit odd as one of the main features of EntityFramework is to abstract the database provider from the application making it easy to change the underlying infrastructure.\r\n\r\nBest regards\r\n\r\nHåkan"},{"Id":"7681274275","Type":"IssuesEvent","CreatedAt":"2018-05-16T06:43:56","Actor":"iAmBipinPaul","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1658","RelatedDescription":"Closed issue \"Identity-UI MVC scaffolder\" (#1658) at aspnet/Identity","RelatedBody":"scaffolding UI in the from of MVC pattern, so that it will be easy to manage for application that is built using MVC template instead of Razor Page template."},{"Id":"7678442398","Type":"IssuesEvent","CreatedAt":"2018-05-15T17:31:46","Actor":"adams-hub","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1792","RelatedDescription":"Closed issue \"ApplicationUser properties not added to AspNetUsers\" (#1792) at aspnet/Identity","RelatedBody":"I'm using the following code to try extend identity user, but the properties are not being added to the user table. How do I accomplish this?\r\n\r\n```\r\n    public class ApplicationUser : IdentityUser<Guid>\r\n    {\r\n        public string Name { get; set; }\r\n        public string StripeCustomerId{ get; set; }\r\n    }\r\n```\r\n```\r\n    public class ApplicationRole : IdentityRole<Guid>\r\n    {\r\n\r\n    }\r\n```\r\n\r\n```\r\n    public class ApplicationDbContext : IdentityDbContext<ApplicationUser, ApplicationRole, Guid>\r\n    {\r\n        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.Entity<ApplicationUser>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n            builder.Entity<ApplicationRole>().Property(x => x.Id).ValueGeneratedOnAdd();\r\n        }\r\n\r\n        public DbSet<Plan> Plans { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n services.AddIdentity<ApplicationUser, ApplicationRole>(options => options.Stores.MaxLengthForKeys = 128)\r\n            .AddEntityFrameworkStores<ApplicationDbContext>()\r\n            .AddDefaultUI()\r\n            .AddDefaultTokenProviders();\r\n```"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7686581047","Type":"IssuesEvent","CreatedAt":"2018-05-17T00:04:43","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2582","RelatedDescription":"Opened issue \"Flaky test: RequestTests.ServerCanAbortConnectionAfterUnobservedClose\" (#2582) at aspnet/KestrelHttpServer","RelatedBody":"Logs: http://aspnetci/viewLog.html?buildId=469789&tab=buildResultsDiv&buildTypeId=Releases_21Public_Win2012\r\n```\r\nSystem.TimeoutException : The operation at /_/test/Kestrel.FunctionalTests/RequestTests.cs:1296 timed out after reaching the limit of 30000ms.\r\n   at Microsoft.AspNetCore.Testing.TaskExtensions.<TimeoutAfter>d__0`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.<ServerCanAbortConnectionAfterUnobservedClose>d__32.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"},{"Id":"7686273498","Type":"IssuesEvent","CreatedAt":"2018-05-16T22:25:58","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2581","RelatedDescription":"Opened issue \"Flaky test: AppCanHandleClientAbortingConnectionMidResponse\" (#2581) at aspnet/KestrelHttpServer","RelatedBody":"This test [fails](http://aspnetci/viewLog.html?buildId=469532&buildTypeId=Lite_KestrelStressTest) occasionally with the following error:\r\n```\r\nMoq.MockException : \r\nExpected invocation on the mock once, but was 0 times: t => t.ConnectionStop(It.IsAny<String>())\r\nNo setups configured.\r\nPerformed invocations:\r\nKestrelTrace.IsEnabled(Critical)\r\nKestrelTrace.BeginScope<ConnectionLogScope>([[ConnectionId, 0HLDRBFHJGCHT]])\r\nKestrelTrace.ConnectionStart(\"0HLDRBFHJGCHT\")\r\nKestrelTrace.ConnectionDisconnect(\"0HLDRBFHJGCHT\")\r\n   at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)\r\n   at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)\r\n   at Moq.Mock.Verify[T](Mock`1 mock, Expression`1 expression, Times times, String failMessage)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.AppCanHandleClientAbortingConnectionMidResponse(ListenOptions listenOptions) in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 2504\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7686532842","Type":"PullRequestEvent","CreatedAt":"2018-05-16T23:47:31","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2356","RelatedDescription":"Opened pull request \"Go to Rosyn 2.9\" (#2356) at aspnet/Razor","RelatedBody":"Moved to Roslyn version 2.9.0-beta4-62911-02. This is the version that exists in VS 15.8 preview 2."},{"Id":"7686531162","Type":"PullRequestEvent","CreatedAt":"2018-05-16T23:46:53","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/2355","RelatedDescription":"Closed pull request \"Go to Rosyn 2.9\" (#2355) at aspnet/Razor","RelatedBody":"Moved to Roslyn version 2.9.0-beta4-62911-02. This is the version that exists in VS 15.8 preview 2."},{"Id":"7686530352","Type":"PullRequestEvent","CreatedAt":"2018-05-16T23:46:37","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2355","RelatedDescription":"Opened pull request \"Go to Rosyn 2.9\" (#2355) at aspnet/Razor","RelatedBody":"Moved to Roslyn version 2.9.0-beta4-62911-02. This is the version that exists in VS 15.8 preview 2."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":483,"FavoriteCount":271,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-17T05:30:13.7952003Z","RunDurationInMilliseconds":8751}