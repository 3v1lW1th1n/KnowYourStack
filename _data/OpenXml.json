{"Data":{"Sdk":{"Events":[{"Id":"9279231087","Type":"IssuesEvent","CreatedAt":"2019-03-20T12:11:43","Actor":"t08094a","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/579","RelatedDescription":"Opened issue \"Generating objects from outer xml results in missing property values\" (#579) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nGenerating OpenXmlElements from an XML string results in missing property values of those generated objects. After getting the outer XML of those objects, the attributes with their values are also missing.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework (4.7.2)\r\n- DocumentFormat.OpenXml Version: (2.9.0)\r\n\r\n**Repro**\r\n\r\n```csharp\r\n[Fact]\r\npublic void TableLookShouldHaveIdenticalOuterXmlToGivenInputXml()\r\n{\r\n    // arrange\r\n    const string xmlContent = @\"\r\n<w:tblPr>\r\n    <w:tblLook w:firstRow=\"\"true\"\" w:lastRow=\"\"false\"\" w:firstColumn=\"\"false\"\" w:lastColumn=\"\"true\"\" w:noHBand=\"\"false\"\" w:noVBand=\"\"true\"\" />\r\n</w:tblPr>\";\r\n\r\n    // act\r\n    TableProperties p = new TableProperties(xmlContent);\r\n    TableLook tableLook = p.TableLook;\r\n\r\n    // assert\r\n    Assert.True(tableLook.FirstRow.Value);\r\n    Assert.False(tableLook.LastRow.Value);\r\n    Assert.False(tableLook.FirstColumn.Value);\r\n    Assert.True(tableLook.LastColumn.Value);\r\n    Assert.False(tableLook.NoHorizontalBand.Value);\r\n    Assert.True(tableLook.NoVerticalBand.Value);\r\n\r\n    Assert.Equal(xmlContent, p.OuterXml);\r\n}\r\n``` \r\n\r\n**Observed**\r\nBy generating OpenXmlElement objects based on an outer XML the created XmlReader uses `strictTranslation = true` and stores all attribute values in the property defined by `StrictTranslationLocalName`. The other property values of the created object are not updated.\r\n\r\n**Expected**\r\n\r\nI would have expected that the properties in the test above have the values from the XML attributes.\r\n"},{"Id":"9252645648","Type":"IssuesEvent","CreatedAt":"2019-03-15T17:32:56","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/578","RelatedDescription":"Closed issue \"Is there some api to export word/excel/ppt documents to svg or pdf or jpg?\" (#578) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Question on library usage\r\n\r\n**Description**\r\n\r\nIs there some api we can use to export word/excel/ppt documents to svg or pdf or jpg?\r\n"},{"Id":"9248920343","Type":"IssuesEvent","CreatedAt":"2019-03-15T07:58:45","Actor":"WeihanLi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/578","RelatedDescription":"Opened issue \"Is there some api to export word/excel/ppt documents to svg or pdf or jpg?\" (#578) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Question on library usage\r\n\r\n**Description**\r\n\r\nIs there some api to export word/excel/ppt documents to svg or pdf or jpg?\r\n"},{"Id":"9248034323","Type":"PullRequestEvent","CreatedAt":"2019-03-15T03:44:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/577","RelatedDescription":"Merged pull request \"Remove reliance on ChildElementInfoAttribute\" (#577) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"9247743325","Type":"PullRequestEvent","CreatedAt":"2019-03-15T02:18:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/577","RelatedDescription":"Opened pull request \"Remove reliance on ChildElementInfoAttribute\" (#577) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"9247741367","Type":"PullRequestEvent","CreatedAt":"2019-03-15T02:18:06","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/533","RelatedDescription":"Closed pull request \"comand-line build instructions clarification\" (#533) at OfficeDev/Open-XML-SDK","RelatedBody":"add some helpful changes to the comman-line build instructions."},{"Id":"9246458639","Type":"PullRequestEvent","CreatedAt":"2019-03-14T21:05:44","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/576","RelatedDescription":"Merged pull request \"Add tests for element lookup\" (#576) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"9246036030","Type":"PullRequestEvent","CreatedAt":"2019-03-14T19:59:10","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/576","RelatedDescription":"Opened pull request \"Add tests for element lookup\" (#576) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"8996877097","Type":"PullRequestEvent","CreatedAt":"2019-02-02T05:48:33","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/271","RelatedDescription":"Merged pull request \"Replace file headers with MIT license\" (#271) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"8996442444","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:27:29","Actor":"twsouthwick","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/271","RelatedDescription":"Opened pull request \"Replace file headers with MIT license\" (#271) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"8996441806","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:27:15","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/270","RelatedDescription":"Closed pull request \"update DocumentFormat.OpenXml to 2.9.0\" (#270) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"8996440977","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:26:52","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/256","RelatedDescription":"Closed pull request \"Fix issue related to text-align with rtl direction\" (#256) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"When adding style=\"direction:rtl; text-align:left\" it doesn't apply text-align property."},{"Id":"8996440049","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:26:27","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/247","RelatedDescription":"Closed pull request \"Update ChartUpdater.cs\" (#247) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"UpdateChart.UpdateChart.UpdateSeries does not work on Radar chart types, it is a simple one line fix that I have used for a few years now.\r\nCloses OfficeDev/Open-Xml-PowerTools#245"},{"Id":"8996439414","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:26:11","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/246","RelatedDescription":"Closed pull request \"Process page breaks\" (#246) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Page breaks are shown like \r\n\r\n    <p:r><docx properties like font, .../><w:br type=\"page\"/></p:r>\r\n\r\nWhen converting this to HTML, this is replaced by <span></span> in the function:\r\n\r\n     // Transform w:br to h:br.\r\n     if (element.Name == W.br || element.Name == W.cr)\r\n      {\r\n           return ProcessBreak(element);\r\n      }\r\n\r\nWhich causes the page break to not appear.\r\n\r\nI have changed this so it returns a div style=\"page-break-before:always;\"  in the following function.\r\n\r\n    private static object ProcessPageBreak(XElement element)\r\n        {\r\n            XElement div = new XElement(Xhtml.div);\r\n            div.SetAttributeValue(NoNamespace.style, \"page-break-before:always;\");\r\n            XElement span = null;\r\n\r\n            return new object[]\r\n            {\r\n                div,\r\n                new XEntity(\"#x200e\"),\r\n                span\r\n         };\r\n        }\r\n\r\nWhich causes a correct page break.\r\n\r\nPS. The page break (docx) is detected in a child element. So i have to set the page break ( html) in it's parent. I detect it with the following function:\r\n\r\n     private static bool HasAPageBreak(XElement element)\r\n        {\r\n            return element.Descendants().Any(dl => dl.Name == W.br && dl.Attribute(W.type).Value == \"page\");\r\n        }\r\n"},{"Id":"8996438798","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:25:55","Actor":"tomjebo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/241","RelatedDescription":"Closed pull request \"Document Assembler: Ability to merge in whole documents or sub-templates\" (#241) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"As some interest was shown in this feature here is the pull request.\r\n\r\nFrom issue 191;\r\n\r\nImplementation is as follows;\r\n\r\n- Added two new elements; Document and DocumentTemplate\r\n- These two elements share common attributes Path and Data\r\n- The Path attribute can be either a file path or XPath that retrieves a file path from the input XML\r\n- The Data attribute is intended to hold a base64 encoded string containing the Word document contents\r\n- The DocumentTemplate element also has a Select attribute so that XML data can be passed to the template\r\n\r\ne.g.\r\n\r\n```\r\n<Repeat Select=\"//Invoice\" />\r\n<DocumentTemplate Path=\"SubTemplate.docx\" Select=\".\" />\r\n<Document Path=\"Terms.docx\" />\r\n<EndRepeat />\r\n\r\n```\r\nWith the above in place what I do is take a two pass approach.\r\n\r\nFirstly I process the Document and DocumentTemplate elements converting all to a Document element which contains a Data attribute with the base64 encoded content of the Document or assembled DocumentTemplate.\r\n\r\nThen I have introduced a second step and as such a dependency on DocumentBuilder in DocumentAssembler. I am not sure if this will be frowned upon or not :)\r\n\r\nThis second step is largely based on this post from Eric White;\r\n\r\nhttps://blogs.msdn.microsoft.com/ericwhite/2009/04/21/using-documentbuilder-with-content-controls-for-document-assembly/\r\n\r\n\r\nAlthough in my practical experience (been using this code in production for months) the Word documents generated are valid I had issues with the Unit Tests.  I think this is because we are using Office 365 and it looks like the validator only supports up-to 2013 at the minute?  I could re-author my test files in 2013 but don't have access to a copy.\r\n\r\nAny comments and feedback appreciated, this is my first pull request on an open-source project so be gentle :)"}],"ResultType":"GitHubEvent"}},"RunOn":"2019-03-25T05:30:36.2526315Z","RunDurationInMilliseconds":828}