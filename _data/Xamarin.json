{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null},{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null},{"Title":"Draw your Next App Idea with Ink to Code","PublishedOn":"2018-02-05T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Imagine that you&#8217;ve just been struck by inspiration for your next great app. You might start by jotting some notes and sketching out screens. If you&#8217;re thinking about reaching for a...","Href":"https://blog.xamarin.com/draw-next-app-idea-ink-code/","RawContent":null},{"Title":"Lose the Cables: Make Deploying to an iOS or tvOS Device Easier","PublishedOn":"2018-02-02T19:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing most developers consistently do during app development is deploy to a testing device. One main drawback during this process is the struggle to find a cable, connect it to a computer, plug it...","Href":"https://blog.xamarin.com/lose-cables-make-deploying-ios-tvos-device-easier/","RawContent":null},{"Title":"Just Push Play: Using Google Play on an Android Emulator","PublishedOn":"2018-02-01T20:22:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The needs of an Android developer using the Android emulator continuously expand. The latest emulator development from Google provides a system image for the Google Play Store, which includes a fully...","Href":"https://blog.xamarin.com/just-push-play-using-google-play-android-emulator/","RawContent":null},{"Title":"Xamarin Developer Events in February","PublishedOn":"2018-01-31T19:26:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you haven&#8217;t started working on your new year&#8217;s resolutions yet, we have the perfect solution: get out there and start building on your mobile app development education by networking...","Href":"https://blog.xamarin.com/xamarin-developer-events-february/","RawContent":null},{"Title":"Webinar Recording | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-30T19:53:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this pre-recorded webinar, Mark Smith, Director of Xamarin University, shows you how to automate your app development pipeline with Visual Studio App Center, walking through how to connect your app...","Href":"https://blog.xamarin.com/webinar-recording-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Android Emulator Quick Boot","PublishedOn":"2018-01-29T19:41:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Emulator version 27.0.2 now includes a feature called Quick Boot, which launches the emulator in just a few seconds. For Quick Boot to work, your AVD must perform a cold boot on its first time...","Href":"https://blog.xamarin.com/android-emulator-quick-boot/","RawContent":null},{"Title":"First Look: Xamarin Android Device Manager Preview","PublishedOn":"2018-01-25T19:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of SDK Tools 26, Google replaced the standalone UI for the SDK and Device Manager with a command line interface. In an effort to make Android component management accessible and easy...","Href":"https://blog.xamarin.com/first-look-xamarin-android-device-manager-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7223746496","Type":"PullRequestEvent","CreatedAt":"2018-02-09T16:29:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1238","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add Support for CodeBehind for layout files\" (#1238) at xamarin/xamarin-android","RelatedBody":"This commit is based on work done by @grendello. It adds support\r\nfor the generation of code behind for layout files. This will\r\nmake it easier for users to write code since they will no longer\r\nneed to use `FindViewbyId` manually. The generated code will\r\nautomatically provide properties for the various UI elements\r\nin the layout file.\r\n\r\nFor example if you have a Button with an id of `@id/myButton` you\r\nwill see a property is available on your activity `myButton`. You\r\ncan then replace code like\r\n\r\n\tvar button = FindViewById<Button> (Resource.Id.myButton);\r\n\tbutton.Click += delegate {\r\n\t};\r\n\r\nwith\r\n\r\n\tmyButton.Click += delegate {\r\n\t};\r\n\r\nmuch nicer eh :).\r\n\r\nThere are a couple of caviats. The main one is your layout class\r\nMUST be a `partial` class. So\r\n\r\n\tpublic class MainActivity : Activity {\r\n\t}\r\n\r\nbecomes\r\n\r\n\tpublic partial class MainActivity : Activity {\r\n\t}\r\n\r\nNext is you need to add two items to your root layout of your\r\naxml/xml files.\r\n\r\n\txmlns:tools=\"http://schemas.android.com/tools\"\r\n\ttools:class=\"$(Namespace).$(ClassName)\"\r\n\r\nwhere `$(Namespace)` and `$(ClassName)` are replaced with the\r\napproprite values. Note these MUST match the full namespace/classname\r\nof the layout class.\r\n\r\nThe following is a sample of the kind of code which will be\r\ngenerated by this new system.\r\n\r\n\t//------------------------------------------------------------------------------\r\n\t// <auto-generated>\r\n\t//     This code was generated by a tool.\r\n\t//     Runtime Version:4.0.30319.42000\r\n\t//\r\n\t//     Changes to this file may cause incorrect behavior and will be lost if\r\n\t//     the code is regenerated.\r\n\t// </auto-generated>\r\n\t//------------------------------------------------------------------------------\r\n\r\n\tnamespace UnnamedProject {\r\n\t\tusing System;\r\n\t\tusing Android.App;\r\n\t\tusing Android.Widget;\r\n\t\tusing Android.Views;\r\n\t\tusing Android.OS;\r\n\r\n\t\t// Generated from layout file 'Resources/layout/Main.axml'\r\n\t\tpublic partial class MainActivity {\r\n\r\n\t\t\tprivate Func<Button> @__myButtonFunc;\r\n\r\n\t\t\t#line 1 \"/Users/dean/Documents/Sandbox/Xamarin/xamarin-android/bin/TestDebug/temp/CheckCodeBehindIsGenerated/Resources/layout/Main.axml\"\r\n\t\t\tprivate Button @__myButton;\r\n\r\n\t\t\t#line default\r\n\t\t\t#line hidden\r\n\r\n\t\t\tpartial void OnLayoutViewNotFound<T> (int resourceId, ref T type) where T : global::Android.Views.View;\r\n\r\n\t\t\t#line 1 \"/Users/dean/Documents/Sandbox/Xamarin/xamarin-android/bin/TestDebug/temp/CheckCodeBehindIsGenerated/Resources/layout/Main.axml\"\r\n\t\t\tpublic Button myButton {\r\n\t\t\t\tget {\r\n\t\t\t\t\tif (@__myButtonFunc == null) {\r\n\t\t\t\t\t\t@__myButtonFunc = this.@__Create_myButton;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.@__EnsureView<Button>(this.@__myButtonFunc, ref this.@__myButton);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#line default\r\n\t\t\t#line hidden\r\n\r\n\t\t\tprivate void InitializeContentView() {\r\n\t\t\t\tthis.SetContentView(Resource.Layout.Main);\r\n\t\t\t}\r\n\r\n\t\t\tprivate T @__FindView<T>(global::Android.Views.View parentView, int resourceId) where T : global::Android.Views.View {\r\n\t\t\t\tT view = parentView.FindViewById<T>(resourceId);\r\n\t\t\t\tif ((view == null)) {\r\n\t\t\t\t\tthis.OnLayoutViewNotFound(resourceId, ref view);\r\n\t\t\t\t}\r\n\t\t\t\tif ((view != null)) {\r\n\t\t\t\t\treturn view;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new System.InvalidOperationException($\"View not found (ID: {resourceId})\");\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprivate T @__FindView<T>(global::Android.App.Activity parentView, int resourceId) where T : global::Android.Views.View {\r\n\t\t\t\tT view = parentView.FindViewById<T>(resourceId);\r\n\t\t\t\tif ((view == null)) {\r\n\t\t\t\t\tthis.OnLayoutViewNotFound(resourceId, ref view);\r\n\t\t\t\t}\r\n\t\t\t\tif ((view != null)) {\r\n\t\t\t\t\treturn view;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new System.InvalidOperationException($\"View not found (ID: {resourceId})\");\r\n\t\t\t}\r\n\r\n\t\t\tprivate T @__FindView<T>(global::Android.App.Fragment parentView, int resourceId) where T : global::Android.Views.View {\r\n\t\t\t\treturn this.@__FindView<T>(parentView.Activity, resourceId);\r\n\t\t\t}\r\n\r\n\t\t\tprivate T @__EnsureView<T>(System.Func<T> creator, ref T field) where T :  class {\r\n\t\t\t\tif ((field != null)) {\r\n\t\t\t\t\treturn field;\r\n\t\t\t\t}\r\n\t\t\t\tif ((creator == null)) {\r\n\t\t\t\t\tthrow new System.ArgumentNullException(nameof (creator));\r\n\t\t\t\t}\r\n\t\t\t\tfield = creator();\r\n\t\t\t\treturn field;\r\n\t\t\t}\r\n\r\n\t\t\tprivate Button @__Create_myButton() {\r\n\t\t\t\treturn this.@__FindView<Button>(this, Resource.Id.myButton);\r\n\t\t\t}\r\n\t\t}\r\n\t}"},{"Id":"7223581198","Type":"IssuesEvent","CreatedAt":"2018-02-09T16:00:07","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1288","RelatedDescription":"Closed issue \"How to Exclude default material icons from Xamarin.Android Apk?\" (#1288) at xamarin/xamarin-android","RelatedBody":"I unzipped my apk and in res folder there many sub folders as shown below and each folder has icons which are not part of my project as shown in the 2nd image. At least they arent in my source code. I dont know where they are coming from. Probably Xamarin.Android includes them as default material icons. But I am using my own svg icons as embedded resources in my PCL project and I dont need those pngs to be part of my apk. They just bloat and increase size of my apk (even though probably 1-2mb max.)\r\n\r\nHow can I exclude or remove those? I am already using full linking and proguard in my xamarin.android project.\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/36021825-535fbf8c-0d87-11e8-81a7-151d4399740c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/36021837-57d134f6-0d87-11e8-9716-bde7faf0cfdb.png)\r\n"},{"Id":"7221872298","Type":"IssuesEvent","CreatedAt":"2018-02-09T09:52:52","Actor":"EmilAlipiev","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1288","RelatedDescription":"Opened issue \"How to Exclude default material icons from Xamarin.Android Apk?\" (#1288) at xamarin/xamarin-android","RelatedBody":"I unzipped my apk and in res folder there many sub folders as shown below and each folder has icons which are not part of my project as shown in the 2nd image. At least they arent in my source code. I dont know where they are coming from. Probably Xamarin.Android includes them as default material icons. But I am using my own svg icons as embedded resources in my PCL project and I dont need those pngs to be part of my apk. They just bloat and increase size of my apk (even though probably 1-2mb max.)\r\n\r\nHow can I exclude or remove those? I am already using full linking and proguard in my xamarin.android project.\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/36021825-535fbf8c-0d87-11e8-81a7-151d4399740c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/36021837-57d134f6-0d87-11e8-9716-bde7faf0cfdb.png)\r\n"},{"Id":"7220467184","Type":"PullRequestEvent","CreatedAt":"2018-02-09T02:07:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1285","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/80b3c104\" (#1285) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1138"},{"Id":"7219299753","Type":"IssuesEvent","CreatedAt":"2018-02-08T20:54:46","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1093","RelatedDescription":"Closed issue \"Add the linker analyzer tool to XA\" (#1093) at xamarin/xamarin-android","RelatedBody":"### Expected Behavior\r\n\r\nMake the linkeranalyzer.exe and a helper script available in the XA installation.\r\n\r\n### Actual Behavior\r\n\r\nlinkeranalyzer.exe is not installed.\r\n"},{"Id":"7218891701","Type":"IssuesEvent","CreatedAt":"2018-02-08T19:29:54","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1287","RelatedDescription":"Opened issue \"Unable to discover new string resource (or other xml defined resources) in Intellisense after building\" (#1287) at xamarin/xamarin-android","RelatedBody":"This issue appears to be a regression in d15-6, so I will be adding it to the 15.6 milestone. However, I am not sure if it is related to the managed resource parser changes that have been re-enabled there.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App.\r\n2. Add a new string entry in Resources -> values -> Strings.xml, such as:\r\n```xml\r\n<string name=\"test\">test</string>\r\n```\r\n3. Open MainActivity.cs and confirm that you are unable to see Intellisense for `Resource.String.test`.\r\n4. Select Build -> Build solution\r\n5. Open MainActivity.cs and confirm that you are _still_ unable to see Intellisense for `Resource.String.test`.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nNewly added string and other xml resources can be discovered via Intellisense immediately after completing a build.\r\n\r\n### Actual Behavior\r\nIntellisense does not work for a new string resource after building.\r\n\r\n### Version Information\r\nVS 15.6 Preview 4:\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nDiagnostic build output:\r\nhttps://gist.github.com/pjcollins/292e2acf118eaced6de4124aedf15254\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7218782963","Type":"IssuesEvent","CreatedAt":"2018-02-08T19:06:49","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1286","RelatedDescription":"Opened issue \"Resource related intellisense breaks after Rebuilding\" (#1286) at xamarin/xamarin-android","RelatedBody":"Moving report from https://bugzilla.xamarin.com/show_bug.cgi?id=60880 into Issues. It looks like the clean target is still deleting `designtime\\Resource.Designer.cs`.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App\r\n2. Open MainActivity.cs, and notice that both `Resource.Layout.Main` and `Resource.ID.myButton` are available in Intellisense\r\n3. Select Build -> Clean Solution.\r\n4. Resource.* related Intellisense no longer works as expected\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nResource related Intellisense will continue to work after cleaning, building, rebuilding, etc.\r\n\r\n### Actual Behavior\r\nThe following IntelliSense output is displayed, and Resource related Intellisense no longer works.\r\n> [Failure] Could not find file 'c:\\users\\peter\\source\\repos\\App16\\App16\\obj\\Debug\\designtime\\Resource.Designer.cs'.\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/ee151a4e90f0d8ac7ec9d28984e52be7#file-gistfile1-txt-L1197-L1205\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7218641907","Type":"PullRequestEvent","CreatedAt":"2018-02-08T18:38:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1285","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/80b3c104\" (#1285) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1138"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7225450846","Type":"IssuesEvent","CreatedAt":"2018-02-09T22:55:17","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1851","RelatedDescription":"Closed issue \"System.ComponentModel.DataAnnotations throws exception on IOS Actual Device\" (#1851) at xamarin/Xamarin.Forms","RelatedBody":"I have use System.ComponentModel.DataAnnotations in portable class project. This work great in Android Actual Device but failed on IOS actual device. In IOS emulator it work great but not on Actual iPhone. It thows deployment error as \r\n\r\nCould not AOT the assembly '/Users/rnr_mac/Library/Caches/Xamarin/mtbs/builds/RujulERP_Mobile.iOS/43d2ca3e2c725a70d6f4c6086aa946e8/obj/iPhone/Debug/mtouch-cache/64/Build/System.ComponentModel.DataAnnotations.dll'\tRujulERP_Mobile.iOS\t\t\t\r\n"},{"Id":"7224794841","Type":"IssuesEvent","CreatedAt":"2018-02-09T20:11:40","Actor":"jonpryor","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1835","RelatedDescription":"Closed issue \"Using AOT + Bundle into native assemblies duplicates nuget packages into APK?\" (#1835) at xamarin/Xamarin.Forms","RelatedBody":"I tried using AOT and LLVM to reduce start up time in my xamarin forms app on android. It really made trick. I had around 10-12secs and now google firebase reports between 2-7secs based on the device as shown below.\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/35947583-d6bbf29e-0c68-11e8-8875-6c4b55297b69.png)\r\n\r\nWhat my settings are as followings; - Link SDK and User assemblies - Bundle into native assemblies - Proguard - no-write-symbols,nodebug - Separate Apk for each Abis\r\n\r\nProject file for related group looks like as below;\r\n\r\n```\r\n<PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\Release\\</OutputPath>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n    <AndroidUseSharedRuntime>False</AndroidUseSharedRuntime>\r\n    <DebugType>\r\n    </DebugType>\r\n    <AndroidLinkMode>Full</AndroidLinkMode>\r\n    <EmbedAssembliesIntoApk>true</EmbedAssembliesIntoApk>\r\n    <AndroidCreatePackagePerAbi>true</AndroidCreatePackagePerAbi>\r\n    <JavaMaximumHeapSize>1G</JavaMaximumHeapSize>\r\n    <AotAssemblies>true</AotAssemblies>\r\n    <EnableLLVM>true</EnableLLVM>\r\n    <AndroidAotAdditionalArguments>no-write-symbols,nodebug</AndroidAotAdditionalArguments>\r\n    <DebugSymbols>false</DebugSymbols>\r\n    <BundleAssemblies>true</BundleAssemblies>\r\n    <AndroidEnableMultiDex>True</AndroidEnableMultiDex>\r\n    <EnableProguard>true</EnableProguard>\r\n    <Debugger>Xamarin</Debugger>\r\n    <AndroidSupportedAbis>armeabi-v7a;x86;x86_64</AndroidSupportedAbis>\r\n    <AndroidLinkSkip>Akavache;Akavache.Sqlite3;SQLiteNetExtensions;SQLiteNetExtensionsAsync;SQLite.Net;SQLite.Net.Async;Syncfusion.DataSource.Portable;Syncfusion.Data.Portable;Syncfusion.Pdf.Portable;Syncfusion.SfDataGrid.XForms;Syncfusion.SfNumericUpDown.XForms;Syncfusion.SfDataGrid.XForms.Android;Syncfusion.SfNavigationDrawer.Android;Syncfusion.SfNavigationDrawer.XForms;Syncfusion.SfNavigationDrawer.XForms.Android;Syncfusion.SfSchedule.XForms;Syncfusion.SfSchedule.XForms.Android;Syncfusion.SfSchedule.Android;Syncfusion.Compression.Portable;Xamarin.GooglePlayServices.AppIndexing;Xamarin.Insights;Splat;Xamarin.GooglePlayServices.Basement;Xamarin.FireBase.AppIndexing;Xamarin.FireBase.Common;Xamarin.GooglePlayServices.Gcm;</AndroidLinkSkip>\r\n    <AndroidEnableMultipleDex>true</AndroidEnableMultipleDex>\r\n    <AndroidExplicitCrunch>true</AndroidExplicitCrunch>\r\n  </PropertyGroup>\r\n```\r\n \r\n**PROBLEM;** App size increased as expected but it is not the Apk size problem for me, rather installed size on device. here are the values.\r\n\r\nAPK is 20mb using single apk, settings above but no AOT no LLVM\r\nAPK separate apks per abi are 16mb, settings above but no AOT no LLVM\r\nsingle apk 49 mb, , settings above but with AOT + LLVM\r\nseparate Apks per abi are 26 mb,settings above with AOT + LLVM a\r\nUntil here, everything seems perfect. I can accept 6mb-10mb increase even it is still so high amount but the difference is installed size of the app on the device. without AOT is around 30mb installs. with AOT+LLVM 100mb+\r\n\r\nWhen I extract the apk, i can see what is in the apk. Capture below is from lib folder (biggest folder) without using AOT and Bundle into Native assemblies\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/35947624-160e8574-0c69-11e8-9ebf-9f54908380ec.png)\r\n\r\nCapture for with AOT+LLVVM.. see the yellow highlighteds are indeed what we need to install the apk according to the previous apk. I dont know if I need any extra library to run AOT but why those blue underlined 3rd party libraries are there. they are supposed to be bundled into native assemblies as in the first screenshot. Do I understand it wrong or Xamarin has bug on using AOT with Bundles into Native assemblies?\r\n\r\n![image](https://user-images.githubusercontent.com/10422347/35947638-244149f6-0c69-11e8-83d8-5fff802e80f0.png)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7225450785","Type":"IssuesEvent","CreatedAt":"2018-02-09T22:55:16","Actor":"jassmith","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3449","RelatedDescription":"Opened issue \"System.ComponentModel.DataAnnotations throws exception on IOS Actual Device\" (#3449) at xamarin/xamarin-macios","RelatedBody":"_From @kishorupare on February 9, 2018 9:44_\n\nI have use System.ComponentModel.DataAnnotations in portable class project. This work great in Android Actual Device but failed on IOS actual device. In IOS emulator it work great but not on Actual iPhone. It thows deployment error as \r\n\r\nCould not AOT the assembly '/Users/rnr_mac/Library/Caches/Xamarin/mtbs/builds/RujulERP_Mobile.iOS/43d2ca3e2c725a70d6f4c6086aa946e8/obj/iPhone/Debug/mtouch-cache/64/Build/System.ComponentModel.DataAnnotations.dll'\tRujulERP_Mobile.iOS\t\t\t\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#1851_"},{"Id":"7224851700","Type":"PullRequestEvent","CreatedAt":"2018-02-09T20:24:57","Actor":"baulig","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3439","RelatedDescription":"Closed pull request \"[DONT-MERGE]: Test possible fix.\" (#3439) at xamarin/xamarin-macios","RelatedBody":"Mono repo points to work branch."},{"Id":"7224809415","Type":"PullRequestEvent","CreatedAt":"2018-02-09T20:14:58","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3448","RelatedDescription":"Merged pull request \"[Tests] Ensure that tests do not fail due to the locale. Fixes #3445\" (#3448) at xamarin/xamarin-macios","RelatedBody":"Previous tests would fail if the simulator or device was using a diff locale."},{"Id":"7224523786","Type":"PullRequestEvent","CreatedAt":"2018-02-09T19:11:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3436","RelatedDescription":"Merged pull request \"[StoreKit] Update to Xcode 9.3 Beta 2\" (#3436) at xamarin/xamarin-macios","RelatedBody":"Diff file\r\n- https://github.com/xamarin/xamarin-macios/wiki/StoreKit-iOS-xcode9.3-beta2"},{"Id":"7224521484","Type":"PullRequestEvent","CreatedAt":"2018-02-09T19:10:42","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3433","RelatedDescription":"Merged pull request \"[Appkit] Update to Xcode 9.3 beta 2\" (#3433) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/xamarin-macios/wiki/AppKit-macOS-xcode9.3-beta2"},{"Id":"7224351747","Type":"PullRequestEvent","CreatedAt":"2018-02-09T18:33:49","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3448","RelatedDescription":"Opened pull request \"[Tests] Ensure that tests do not fail due to the locale. Fixes #3445\" (#3448) at xamarin/xamarin-macios","RelatedBody":"Previous tests would fail if the simulator or device was using a diff locale."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"962049464084062208","CreatedAt":"2018-02-09T19:44:00+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast, @JamesMontemagno and @pierceboggan talk rapid UI prototyping with Ink to Code, me… https://t.co/FTH39xKI1K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":10,"RawContent":null},{"Id":"962005422142967809","CreatedAt":"2018-02-09T16:49:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0Fi4MU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":28,"RawContent":null},{"Id":"961696657250443269","CreatedAt":"2018-02-08T20:22:05+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/pUb6M2pQLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":30,"RawContent":null},{"Id":"961642559880749056","CreatedAt":"2018-02-08T16:47:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/utcp887bgL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":10,"RawContent":null},{"Id":"961326059965870080","CreatedAt":"2018-02-07T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar with @XamarinU on building your first intelligent app with #Xamarin and Micro… https://t.co/lEsIH9mU1Q","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":38,"RawContent":null},{"Id":"961281908750635008","CreatedAt":"2018-02-07T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/48PO2bI3Mt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":17,"RawContent":null},{"Id":"960921785641455616","CreatedAt":"2018-02-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/OXIdlOPZyn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":11,"RawContent":null},{"Id":"960588991375511552","CreatedAt":"2018-02-05T19:00:37+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/sIDGF4Kcp0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":252,"FavoriteCount":128,"RawContent":null},{"Id":"960557379606794248","CreatedAt":"2018-02-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":14,"RawContent":null},{"Id":"960308752409923584","CreatedAt":"2018-02-05T00:27:02+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/ChPi6XDAGH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":18,"RawContent":null},{"Id":"959520671754850304","CreatedAt":"2018-02-02T20:15:29+00:00","UserScreenname":"xamarinhq","Text":"Make deploying to an iOS or tvOS device easier with Wireless Deployment and our new Unlock Device Alert: https://t.co/DKgtjGzPfo","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":47,"FavoriteCount":22,"RawContent":null},{"Id":"959469971301691392","CreatedAt":"2018-02-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/qc6cGwoxhK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":29,"RawContent":null},{"Id":"959164072196526085","CreatedAt":"2018-02-01T20:38:29+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/kmW8uIDW80","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":18,"RawContent":null},{"Id":"959109618067738624","CreatedAt":"2018-02-01T17:02:06+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/xYx6fUVhML","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":10,"RawContent":null},{"Id":"958788443647152136","CreatedAt":"2018-01-31T19:45:53+00:00","UserScreenname":"xamarinhq","Text":"Help ensure a productive 2018 with #Xamarin developer events near you this February: https://t.co/9aPslPGW2O https://t.co/zRGM0lEoZe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"958747709963415552","CreatedAt":"2018-01-31T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/xLDqS3Z9sI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":21,"RawContent":null},{"Id":"958386328797884416","CreatedAt":"2018-01-30T17:08:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/JOLj1szAol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":16,"RawContent":null},{"Id":"958065243565051904","CreatedAt":"2018-01-29T19:52:08+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/75XbYDGg8m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":225,"FavoriteCount":123,"RawContent":null},{"Id":"958020024941334528","CreatedAt":"2018-01-29T16:52:27+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d https://t.co/QvuhUZfhAd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-02-10T05:30:35.4506336Z","RunDurationInMilliseconds":3747}