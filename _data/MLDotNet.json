{"Data":{"GitHub":{"Issues":[{"Id":"438008060","IsPullRequest":true,"CreatedAt":"2019-04-28T03:26:08","Actor":"Anipik","Number":"3614","RawContent":null,"Title":"Added new configurations and updates Jobnames","State":"open","Body":"Changing the job names caused the links on readme page to fail. This updates those links and adds new configuration that we added for fullframework like testing it on ubuntu and full framework","Url":"https://github.com/dotnet/machinelearning/pull/3614","RelatedDescription":"Open PR \"Added new configurations and updates Jobnames\" (#3614)"},{"Id":"437993764","IsPullRequest":true,"CreatedAt":"2019-04-27T23:25:23","Actor":"debpu06","Number":"3613","RawContent":null,"Title":"Fixed typo of word \"defined\"","State":"open","Body":"Updated AucAggregator.cs ComputeWeightedAuc method to fix spelling issue of \"defined\" in message text.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3613","RelatedDescription":"Open PR \"Fixed typo of word \"defined\"\" (#3613)"},{"Id":"437895556","IsPullRequest":true,"CreatedAt":"2019-04-27T02:13:14","Actor":"codemzs","Number":"3612","RawContent":null,"Title":"Resize image transformer cannot handle images with unknown pixel format.","State":"open","Body":"fixes #3611\r\n\r\nThe test image added has creative commons license and was pulled from Bing with the license filter.","Url":"https://github.com/dotnet/machinelearning/pull/3612","RelatedDescription":"Open PR \"Resize image transformer cannot handle images with unknown pixel format.\" (#3612)"},{"Id":"437893365","IsPullRequest":true,"CreatedAt":"2019-04-27T02:12:11","Actor":"Dmitry-A","Number":"3610","RawContent":null,"Title":"[AutoML] take dependency on a specific ml.net version","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3610","RelatedDescription":"Closed or merged PR \"[AutoML] take dependency on a specific ml.net version\" (#3610)"},{"Id":"437895394","IsPullRequest":false,"CreatedAt":"2019-04-27T02:11:32","Actor":"codemzs","Number":"3611","RawContent":null,"Title":"Resize image transformer cannot handle images with unknown pixel format.","State":"open","Body":"This results in an exception thrown by Resize transform and the entire pipeline is cancelled and user training stops. Ideally there should be a way to continue training on error, where by, we ignore the row that has an invalid data.\r\n\r\nAlternatively, when resizing an image with unknown pixel format we can create the resized image with known pixel format such as Format32bppArgb, the same way we handled Index Pixel Format image in #3601 ","Url":"https://github.com/dotnet/machinelearning/issues/3611","RelatedDescription":"Open issue \"Resize image transformer cannot handle images with unknown pixel format.\" (#3611)"},{"Id":"437890296","IsPullRequest":true,"CreatedAt":"2019-04-27T01:35:53","Actor":"Dmitry-A","Number":"3609","RawContent":null,"Title":"[AutoML] rename Auto to AutoML in namespace and nuget","State":"closed","Body":"sorry for messy commit history, keep forgetting to catch my fork up","Url":"https://github.com/dotnet/machinelearning/pull/3609","RelatedDescription":"Closed or merged PR \"[AutoML] rename Auto to AutoML in namespace and nuget\" (#3609)"},{"Id":"437867495","IsPullRequest":true,"CreatedAt":"2019-04-26T22:29:38","Actor":"shauheen","Number":"3608","RawContent":null,"Title":"Cherrypicks into release branch","State":"open","Body":"This adds release notes and hotfix for ImageLoader into Release branch","Url":"https://github.com/dotnet/machinelearning/pull/3608","RelatedDescription":"Open PR \"Cherrypicks into release branch\" (#3608)"},{"Id":"437799119","IsPullRequest":true,"CreatedAt":"2019-04-26T21:45:35","Actor":"Dmitry-A","Number":"3606","RawContent":null,"Title":"[AutoML]mlnet CLI nupkg creation/signing","State":"closed","Body":"also cleaned up build yml a bit","Url":"https://github.com/dotnet/machinelearning/pull/3606","RelatedDescription":"Closed or merged PR \"[AutoML]mlnet CLI nupkg creation/signing\" (#3606)"},{"Id":"437814105","IsPullRequest":true,"CreatedAt":"2019-04-26T21:45:14","Actor":"eerhardt","Number":"3607","RawContent":null,"Title":"Disable building NuGet packages other than Microsoft.Extensions.ML.","State":"closed","Body":"Note this is only for the `features/IntegrationPackage` branch.","Url":"https://github.com/dotnet/machinelearning/pull/3607","RelatedDescription":"Closed or merged PR \"Disable building NuGet packages other than Microsoft.Extensions.ML.\" (#3607)"},{"Id":"437457843","IsPullRequest":true,"CreatedAt":"2019-04-26T20:41:07","Actor":"codemzs","Number":"3601","RawContent":null,"Title":"Handle Indexed Pixel Format correctly in Image Resize transform.","State":"closed","Body":"fixes #3600\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3601","RelatedDescription":"Closed or merged PR \"Handle Indexed Pixel Format correctly in Image Resize transform.\" (#3601)"},{"Id":"437457751","IsPullRequest":false,"CreatedAt":"2019-04-26T20:41:07","Actor":"codemzs","Number":"3600","RawContent":null,"Title":"Image Resize Transform does not handle Indexed Pixel Format images correctly.","State":"closed","Body":"It tries to Graphics.DrawImage when resizing images that are of Indexed Pixel Format as evident from the below code. This will throw an exception \"A Graphics object cannot be created from an image that has an indexed pixel format.\" This bug seems to affects images converted to `.gif` format as well.\r\n\r\n```csharp\r\ndst = new Bitmap(info.ImageWidth, info.ImageHeight, src.PixelFormat);\r\n\r\nvar srcRectangle = new Rectangle(sourceX, sourceY, sourceWidth, sourceHeight);\r\nvar destRectangle = new Rectangle(destX, destY, destWidth, destHeight);\r\nusing (var g = Graphics.FromImage(dst))\r\n {\r\n    g.DrawImage(src, destRectangle, srcRectangle, GraphicsUnit.Pixel);\r\n|\r\n                        \r\n```\r\n\r\nInstead of Indexed Pixel Format the images should be resized in the below manner:\r\n\r\n```csharp\r\nif (src.PixelFormat == PixelFormat.Format1bppIndexed ||\r\n    src.PixelFormat == PixelFormat.Format4bppIndexed ||\r\n    src.PixelFormat == PixelFormat.Format8bppIndexed)\r\n {\r\n   dst = new Bitmap(info.ImageWidth, info.ImageHeight);\r\n}\r\nelse\r\n   dst = new Bitmap(info.ImageWidth, info.ImageHeight, src.PixelFormat);\r\n\r\nvar srcRectangle = new Rectangle(sourceX, sourceY, sourceWidth, sourceHeight);\r\nvar destRectangle = new Rectangle(destX, destY, destWidth, destHeight);\r\nusing (var g = Graphics.FromImage(dst))\r\n{\r\n    g.DrawImage(src, destRectangle, srcRectangle, GraphicsUnit.Pixel);\r\n}\r\n```\r\nTo read more refer to https://stackoverflow.com/questions/17313285/graphics-on-indexed-image and specifically the last answer is the most accurate.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3600","RelatedDescription":"Closed issue \"Image Resize Transform does not handle Indexed Pixel Format images correctly.\" (#3600)"},{"Id":"437771734","IsPullRequest":true,"CreatedAt":"2019-04-26T18:50:34","Actor":"shauheen","Number":"3605","RawContent":null,"Title":"Adds release notes for 1.0","State":"closed","Body":"Adding release notes for `1.0.0`","Url":"https://github.com/dotnet/machinelearning/pull/3605","RelatedDescription":"Closed or merged PR \"Adds release notes for 1.0\" (#3605)"},{"Id":"437751619","IsPullRequest":false,"CreatedAt":"2019-04-26T16:29:37","Actor":"glebuk","Number":"3604","RawContent":null,"Title":"Ensure that we warn in the documentation that models should be treated as code from security point of view","State":"open","Body":"Issue:\r\nRunning ML.NET models from untrusted sources can be a security issue as there is a potential that they might lead to arbitrary code execution.\r\nEnsure that in topical help we mention that models should be treated as code from the security point of view.","Url":"https://github.com/dotnet/machinelearning/issues/3604","RelatedDescription":"Open issue \"Ensure that we warn in the documentation that models should be treated as code from security point of view\" (#3604)"},{"Id":"437612289","IsPullRequest":false,"CreatedAt":"2019-04-26T10:40:52","Actor":"rauhs","Number":"3603","RawContent":null,"Title":"How to append estimator after a LightGBM trainer with early stopping","State":"open","Body":"Version: 0.11\r\n\r\nWhen using early stopping (which is fantastic) with LightGBM you have to use:\r\n\r\n```C#\r\nvar trainer = ctx.MulticlassClassification.Trainers.LightGbm(options);\r\nvar model = trainer.Fit(trainEncodedDv, testEncodedDv);\r\n```\r\n\r\nHowever, I need to append other estimators after the trainer. Like:\r\n\r\n```C#\r\ntrainer = trainer.Append(ctx.Transforms.Conversion.MapKeyToValue(DefaultColumnNames.PredictedLabel))\r\n  .Append(ctx.Transforms.Conversion.MapKeyToValue((nameof(MlNetPrediction.OriginalLabelData), DefaultColumnNames.Label)));\r\n```\r\n\r\nWhich of course I cannot do since then I cannot call the *two*-arity `fit` method anymore.\r\n\r\nHow can I solve this issue?\r\n\r\nBtw: I think early stopping is absolutely crucial for any machine learning and IMO all iterative algorithms should support it.","Url":"https://github.com/dotnet/machinelearning/issues/3603","RelatedDescription":"Open issue \"How to append estimator after a LightGBM trainer with early stopping\" (#3603)"},{"Id":"437526444","IsPullRequest":false,"CreatedAt":"2019-04-26T06:57:31","Actor":"shauheen","Number":"3602","RawContent":null,"Title":"Need to add API breaking change definition and enforce it","State":"open","Body":"With version `1.0.0` release we need to formally adopt the API breaking change definitions similar to [CoreFx](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/breaking-change-definitions.md) and [here](https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/breaking-changes.md). We also need to add a test to run [APICompat](https://github.com/dotnet/arcade/tree/master/src/Microsoft.DotNet.ApiCompat) tool to enforce these rules. @eerhardt @TomFinley @glebuk ","Url":"https://github.com/dotnet/machinelearning/issues/3602","RelatedDescription":"Open issue \"Need to add API breaking change definition and enforce it\" (#3602)"},{"Id":"437419183","IsPullRequest":true,"CreatedAt":"2019-04-26T02:44:56","Actor":"daholste","Number":"3591","RawContent":null,"Title":"[AutoML] If first three iterations all fail, short-circuit AutoML experiment","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/341","Url":"https://github.com/dotnet/machinelearning/pull/3591","RelatedDescription":"Closed or merged PR \"[AutoML] If first three iterations all fail, short-circuit AutoML experiment\" (#3591)"},{"Id":"437435111","IsPullRequest":true,"CreatedAt":"2019-04-26T02:39:15","Actor":"daholste","Number":"3597","RawContent":null,"Title":"[AutoML] AutoML SDK API: validate schema types of input IDataView","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3597","RelatedDescription":"Closed or merged PR \"[AutoML] AutoML SDK API: validate schema types of input IDataView\" (#3597)"},{"Id":"437447208","IsPullRequest":true,"CreatedAt":"2019-04-26T01:19:07","Actor":"daholste","Number":"3599","RawContent":null,"Title":"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/348","Url":"https://github.com/dotnet/machinelearning/pull/3599","RelatedDescription":"Closed or merged PR \"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view\" (#3599)"},{"Id":"437423840","IsPullRequest":true,"CreatedAt":"2019-04-26T01:18:05","Actor":"daholste","Number":"3593","RawContent":null,"Title":"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/311","Url":"https://github.com/dotnet/machinelearning/pull/3593","RelatedDescription":"Closed or merged PR \"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed\" (#3593)"},{"Id":"437446991","IsPullRequest":true,"CreatedAt":"2019-04-26T00:13:11","Actor":"daholste","Number":"3598","RawContent":null,"Title":"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3598","RelatedDescription":"Closed or merged PR \"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view\" (#3598)"},{"Id":"437431622","IsPullRequest":false,"CreatedAt":"2019-04-25T23:00:14","Actor":"shmoradims","Number":"3596","RawContent":null,"Title":"Ensure samples auto-generated .cs files are in-sync with .tt files","State":"open","Body":"For trainers' samples, we're using T4 templates to reduce boilerplate code. This creates a problem when devs directly modify the autogenerated .cs files, which will make the .tt and .cs files out of sync. We need a way to check that auto-generated .cs files don't have any manual changes.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3596","RelatedDescription":"Open issue \"Ensure samples auto-generated .cs files are in-sync with .tt files\" (#3596)"},{"Id":"437430325","IsPullRequest":true,"CreatedAt":"2019-04-25T22:54:12","Actor":"artidoro","Number":"3595","RawContent":null,"Title":"Refactoring clustering catalog samples line width to 85","State":"open","Body":"Towards #3478.","Url":"https://github.com/dotnet/machinelearning/pull/3595","RelatedDescription":"Open PR \"Refactoring clustering catalog samples line width to 85\" (#3595)"},{"Id":"437428668","IsPullRequest":true,"CreatedAt":"2019-04-25T22:46:56","Actor":"wschin","Number":"3594","RawContent":null,"Title":"Clean SamplesUtils","State":"open","Body":"This PR cleans SampleUtils a bit. Toward #3584.\r\n\r\n- If a function/class is used only in less than two places, we copy them wherever it's used.\r\n- Function/class referenced by nothing is removed.\r\n\r\nCurrently, we can't not remove SamplesUtils entirely because some samples are still using it.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3594","RelatedDescription":"Open PR \"Clean SamplesUtils\" (#3594)"},{"Id":"437423544","IsPullRequest":true,"CreatedAt":"2019-04-25T22:26:11","Actor":"daholste","Number":"3592","RawContent":null,"Title":"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/311","Url":"https://github.com/dotnet/machinelearning/pull/3592","RelatedDescription":"Closed or merged PR \"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed\" (#3592)"},{"Id":"437418780","IsPullRequest":true,"CreatedAt":"2019-04-25T22:10:14","Actor":"daholste","Number":"3590","RawContent":null,"Title":"[AutoML] If first three iterations all fail, short-circuit AutoML experiment","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3590","RelatedDescription":"Closed or merged PR \"[AutoML] If first three iterations all fail, short-circuit AutoML experiment\" (#3590)"},{"Id":"437418219","IsPullRequest":false,"CreatedAt":"2019-04-25T22:07:45","Actor":"eerhardt","Number":"3589","RawContent":null,"Title":"Change baseline tests to use the new NumberParseOption.UseSingle","State":"open","Body":"A lot of our tests use baseline files that have serialized numbers in them. We've had a lot of issues in the past comparing these baselines files because of minor changes in how floating point values are written to the output file (sometimes changes in which .NET we are running on, or Windows vs. Linux, etc. cause the values to slightly change).\r\n\r\nOne cause of these issues is because we are writing `float` (32-bit floating points) to the file, but when we are parsing the values, we are using `double` (64-bit floating points).\r\n\r\nAt times, we've decreased the `digitsOfPrecision` low enough to tolerate these differences. However, there are cases where `digitsOfPrecision` isn't enough, specifically when we have large values that differ by a digit in the exponential form, for example:\r\n\r\n```\r\n3.40282347E+38\r\n```\r\nvs\r\n```\r\n3.4028235E+38\r\n```\r\n\r\nTo solve this issue, I've added a new option - to parse the numbers using `float.Parse` instead of `double.Parse`.\r\n\r\nSee the solution added in https://github.com/dotnet/machinelearning/pull/3532.\r\n\r\nWe should go through the tests where we use a lowered `digitsOfPrecision`, and see if using `float.Parse` fixes the test on all platforms. This may allow us to remove the `digitsOfPrecision` parameter altogether if all these places can be converted to `UseSingle`.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/machinelearning/issues/3589","RelatedDescription":"Open issue \"Change baseline tests to use the new NumberParseOption.UseSingle\" (#3589)"},{"Id":"437415497","IsPullRequest":true,"CreatedAt":"2019-04-25T21:59:07","Actor":"codemzs","Number":"3588","RawContent":null,"Title":"Reformat categorical transform samples.","State":"open","Body":"towards #3478\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3588","RelatedDescription":"Open PR \"Reformat categorical transform samples.\" (#3588)"},{"Id":"437411327","IsPullRequest":false,"CreatedAt":"2019-04-25T21:46:08","Actor":"dckorben","Number":"3587","RawContent":null,"Title":"Fast Tree Nuget 1.0.0-preview doesn't set PackageReference","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10\r\n- **.NET Version (eg., dotnet --info)**:  Dot Net 4.7.2\r\n\r\n### Issue\r\n\r\n- **What did you do?** Added Fast Tree NUGET\r\n- **What happened?** DLL Not Found Error On Execute\r\n- **What did you expect?** No DLL Not Found Error\r\n\r\n### Source code / logs\r\n\r\nTo use Fast Tree you must manually add `<PackageReference Include=\"Microsoft.ML.FastTree\" Version=\"1.0.0-preview\" />` to the project file otherwise it won't copy the fast tree dll to the output folder.","Url":"https://github.com/dotnet/machinelearning/issues/3587","RelatedDescription":"Open issue \"Fast Tree Nuget 1.0.0-preview doesn't set PackageReference\" (#3587)"},{"Id":"437380363","IsPullRequest":true,"CreatedAt":"2019-04-25T20:20:29","Actor":"wschin","Number":"3586","RawContent":null,"Title":"L1-norm and L2-norm regularization doc","State":"open","Body":"Fix #3356.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3586","RelatedDescription":"Open PR \"L1-norm and L2-norm regularization doc\" (#3586)"},{"Id":"437323910","IsPullRequest":true,"CreatedAt":"2019-04-25T18:38:10","Actor":"shauheen","Number":"3585","RawContent":null,"Title":"Updates release with latest changes from master","State":"closed","Body":"This PR takes the documentation updates from master and updates the release branch.\r\n\r\n*No Squash*","Url":"https://github.com/dotnet/machinelearning/pull/3585","RelatedDescription":"Closed or merged PR \"Updates release with latest changes from master\" (#3585)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-28T05:30:33.0825074Z","RunDurationInMilliseconds":554}