{"Data":{"GitHubIssues":{"Issues":[{"Id":"366961962","IsPullRequest":true,"CreatedAt":"2018-10-04T20:46:06","Actor":"alenros","Number":"1523","RawContent":null,"Title":"amend MSRC link","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1523","RelatedDescription":"Closed or merged PR \"amend MSRC link\" (#1523)"},{"Id":"366933789","IsPullRequest":true,"CreatedAt":"2018-10-04T19:21:21","Actor":"alenros","Number":"1522","RawContent":null,"Title":"updated MSRC link","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1522","RelatedDescription":"Open PR \"updated MSRC link\" (#1522)"},{"Id":"366822187","IsPullRequest":false,"CreatedAt":"2018-10-04T14:37:35","Actor":"mattd73uk","Number":"1521","RawContent":null,"Title":"Components could expose properties using public instead of Parameter ","State":"open","Body":"Hi,\r\nAs per the VS template project, to be able to assign to a component\r\n`<SurveyPrompt Title=\"How is Blazor working for you?\" />`\r\n\r\ncurrently the child component needs Title to have the Parameter attribute:\r\n```\r\n [Parameter]\r\n string Title { get; set; } \r\n```\r\n\r\nI am new to the project, so forgive any newbie foolishness, but can't we drop the ParameterAttribute and simply say that child component properties which are _public_ can be assigned to by the parent?\r\nTo me this is the intention of C# public/private access modifiers.\r\n\r\nI'd like to contribute to the project & have a go at this if it was thought sensible.\r\nThanks\r\nMatt","Url":"https://github.com/aspnet/Blazor/issues/1521","RelatedDescription":"Open issue \"Components could expose properties using public instead of Parameter \" (#1521)"},{"Id":"366798199","IsPullRequest":false,"CreatedAt":"2018-10-04T13:46:24","Actor":"neerajbharti","Number":"1520","RawContent":null,"Title":"Support type constraints on @typeparam","State":"open","Body":"This is in regards to the new @typeParam released in 0.6.0 version.\r\nI am not sure if Type Constraints can be defined on the generic type passed to @typeParam.\r\n\r\n If this is something which already existing, can you please direct me to some semantics help. And if it is not there; is there any  plan to support this.\r\n\r\nThis feature will be very much helpful while developing abstract components which must take \"T\" of some base type for example.","Url":"https://github.com/aspnet/Blazor/issues/1520","RelatedDescription":"Open issue \"Support type constraints on @typeparam\" (#1520)"},{"Id":"366484450","IsPullRequest":false,"CreatedAt":"2018-10-04T06:34:52","Actor":"codeinstinct","Number":"1517","RawContent":null,"Title":"Upgrade to 0.6.0 causes build errors","State":"closed","Body":"Upgrading from 0.5.1 to 0.6.0 gives a build error.\r\n\r\n``/webui/blazor/blazor.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Blazor.Server with version (>= 0.6.0)\r\nwebui/blazor/blazor.csproj : error NU1102:   - Found 7 version(s) in nuget.org [ Nearest version: 0.5.1 ]\r\n``\r\n\r\nThe problem is with this line in particular:\r\n\r\n`` \r\n<DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.6.0\" />\r\n``\r\n\r\nAdditional info:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.403/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [/usr/share/dotnet/sdk]\r\n  2.1.402 [/usr/share/dotnet/sdk]\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]","Url":"https://github.com/aspnet/Blazor/issues/1517","RelatedDescription":"Closed issue \"Upgrade to 0.6.0 causes build errors\" (#1517)"},{"Id":"366629540","IsPullRequest":false,"CreatedAt":"2018-10-04T05:38:55","Actor":"MorneZaayman","Number":"1519","RawContent":null,"Title":"Calling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)","State":"open","Body":"### Title\r\nCalling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)\r\n\r\n### Functional impact\r\nJSInterop does not work in Async mode. I did manage to get the code to work by down-casting to IJSInProcessRuntime and then calling Invoke instead of InvokeAsync, but this still felt like a bug so I thought I should report it.\r\n\r\nI have the following code in a Component which is supposed to show one section of code if a token is present in local storage, and another if not.\r\n\r\n```\r\n@inject AuthService AuthService\r\n\r\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n \r\n    @if (IsLoggedIn())\r\n    {\r\n        <div class=\"dropdown\">\r\n            <a class=\"dropdown-toggle text-light\">\r\n                Welcome User\r\n            </a>\r\n\r\n            <div class=\"dropdown-menu\">\r\n                <a class=\"dropdown-item\" href=\"#\"><i class=\"fa fa-user\"></i> Edit Profile</a>\r\n                <div class=\"divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"#\"><i class=\"fa fa-sign-out\"></i> Log out</a>\r\n            </div>\r\n        </div>\r\n    }\r\n    else\r\n    {\r\n        <form class=\"form-inline my-2 my-lg-0\" onsubmit=\"@LogIn\"> @*Change to bind-to-oninput when it is fixed*@\r\n            <input class=\"form-control mr-sm-2\" name=\"username\" placeholder=\"Username\" type=\"text\" required bind=\"@Username\" />\r\n            <input class=\"form-control mr-sm-2\" name=\"password\" placeholder=\"Password\" type=\"text\" required bind=\"@Password\" />\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" disabled=\"@_loginDisabled\">Login</button>\r\n        </form>\r\n    }\r\n\r\n</nav>\r\n\r\n@functions {\r\n    // Other methods and properties left out for brevity.\r\n\r\n    bool IsLoggedIn()\r\n    {\r\n        // Using .Result as await cannot be used in the Razor HTML\r\n        return AuthService.IsLoggedIn().Result;\r\n    }\r\n}\r\n```\r\nAnd then inside AuthService.cs\r\n```\r\npublic async Task<bool> IsLoggedIn()\r\n{\r\n    try\r\n    {\r\n        var token = await JSRuntime.Current.InvokeAsync<string>(\"jsinterop.getLocalStorageItem\", TOKEN_KEY);\r\n                \r\n        return !string.IsNullOrWhiteSpace(token);\r\n    }\r\n    catch (Exception e)\r\n    {\r\n        Console.WriteLine($\"public async Task<bool> IsLoggedIn()': {e.Message}\");\r\n        \r\n        return false;\r\n    }    \r\n}\r\n```\r\n\r\n### Minimal repro steps\r\nLoad the component and look in the console.\r\n\r\n### Actual result\r\nThe following console output:\r\n\r\n> blazor.webassembly.js:1 WASM: 13\r\n> d.printErr @ blazor.webassembly.js:1\r\n> blazor.webassembly.js:1 Uncaught (in promise) abort(13). Build with -s ASSERTIONS=1 for more info.\r\n\r\n### Further technical details\r\nUsing Visual Studio 2017 15.8.6 and Blazor 0.6","Url":"https://github.com/aspnet/Blazor/issues/1519","RelatedDescription":"Open issue \"Calling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)\" (#1519)"},{"Id":"366590027","IsPullRequest":true,"CreatedAt":"2018-10-04T01:37:40","Actor":"simpman4","Number":"1518","RawContent":null,"Title":"Added a \".\" to the end of ln. 41","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1518","RelatedDescription":"Open PR \"Added a \".\" to the end of ln. 41\" (#1518)"},{"Id":"365682132","IsPullRequest":false,"CreatedAt":"2018-10-03T15:18:58","Actor":"azutake","Number":"1508","RawContent":null,"Title":"When the path of `applicationUrl` is changed, \"MSB3026\" will be occurs at Auto-build","State":"closed","Body":"Hi, i use the Blazor Auto-build feature in the following conditions, i will get an error while building the hosted server.\r\n(this problem is less important because the client works correctly)\r\n\r\n# Phenomenon\r\nThe MSB3026 warning occurs and the build takes longer than usual.\r\n\r\n# How to reproduce\r\nBased on Blazor (ASP.NET Core hosted).\r\nASP.NET Core 2.1 used.\r\n\r\n1. Add `fetchdata` to the end of `applicationUrl` in `launchSettings.json` at `***.Server` project.\r\n2. Start without debugging(Ctrl+F5) at `***.Server`.\r\n3. Wait for browser loading.\r\n4. Make changes to a portion of `Pages/fetchdata.cshtml` in `***.Client` project.\r\n5. Reload on the browser.\r\n\r\n# Repro repository\r\nhttps://github.com/azutake/BlazorMsb3026Problem\r\nreproduction commit: https://github.com/azutake/BlazorMsb3026Problem/commit/06fcf823e7840e72f5bc4a35874e1ac11c22cd93\r\n\r\n# Environment\r\n* Microsoft Visual Studio Professional 2017 (15.8.5)\r\n* ASP.NET Core Blazor Language Services (15.7.10384)\r\n* .NET Core SDK (2.1.300)","Url":"https://github.com/aspnet/Blazor/issues/1508","RelatedDescription":"Closed issue \"When the path of `applicationUrl` is changed, \"MSB3026\" will be occurs at Auto-build\" (#1508)"},{"Id":"365752840","IsPullRequest":false,"CreatedAt":"2018-10-03T14:58:52","Actor":"MorneZaayman","Number":"1510","RawContent":null,"Title":"Binding to oninput event results in method being called before the value has changed.","State":"closed","Body":"### Title\r\nBinding to `oninput `event results in method being called before the value has changed.\r\n\r\n### Functional impact\r\n`oninput `event does not work as expected,\r\n\r\nIâ€™m busy working through this [course ](https://www.udemy.com/build-an-app-with-aspnet-core-and-angular-from-scratch) and I'm implementing the project in Blazor at the same time. \r\n\r\nI have the following code in a Component which is supposed to disable a login button when either of the input elements are blank.\r\n\r\n```\r\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Dating App</a>\r\n\r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"#\">Matches</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Lists</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Messages</a>\r\n        </li>\r\n    </ul>\r\n\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" name=\"username\" placeholder=\"Username\" type=\"text\" required bind=\"@Username\" oninput=\"@ValidateLogin\" />\r\n        <input class=\"form-control mr-sm-2\" name=\"password\" placeholder=\"Password\" type=\"text\" required bind=\"@Password\" oninput=\"@ValidateLogin\" />\r\n        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" disabled=\"@_loginDisabled\">Login</button>\r\n    </form>\r\n\r\n</nav>\r\n\r\n@functions {\r\n    public string Username { get; set; }\r\n    public string Password { get; set; }\r\n\r\n    bool _loginDisabled = true;\r\n\r\n    void ValidateLogin()\r\n    {\r\n        if (string.IsNullOrWhiteSpace(Username) || (string.IsNullOrWhiteSpace(Password)))\r\n        {\r\n            _loginDisabled = true;\r\n        }\r\n        else\r\n        {\r\n            _loginDisabled = false;\r\n        }\r\n        Console.WriteLine($\"ValidateLogin(): Username={Username} IsNullOrWhiteSpace={string.IsNullOrWhiteSpace(Username)}, Password={Password} IsNullOrWhiteSpace={string.IsNullOrWhiteSpace(Password)}, LoginDisabled={_loginDisabled}\");\r\n    }\r\n}\r\n```\r\n\r\n### Minimal repro steps\r\nLooking at the console output there seems to be an issue where the value of Username or Password is only set after the method is called. In the output Iâ€™ve listed below, I typed the following:\r\n\r\n1.\tâ€˜aâ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username= IsNullOrWhiteSpace=True, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n2.\tâ€˜bâ€™ in password input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n3.\tâ€˜câ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password=b IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n### Expected result\r\n1.\tâ€˜aâ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=**a** IsNullOrWhiteSpace=True, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n2.\tâ€˜bâ€™ in password input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password=**b** IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n3.\tâ€˜câ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=a**c** IsNullOrWhiteSpace=False, Password=b IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n### Actual result\r\nExplained in Minimal repro steps\r\n\r\n### Further technical details\r\nUsing the latest Visual Studio 2017 15.8.5 and Blazor 0.5.1","Url":"https://github.com/aspnet/Blazor/issues/1510","RelatedDescription":"Closed issue \"Binding to oninput event results in method being called before the value has changed.\" (#1510)"},{"Id":"366044309","IsPullRequest":false,"CreatedAt":"2018-10-03T14:50:02","Actor":"Meir017","Number":"1513","RawContent":null,"Title":"support help in Blazor cli","State":"closed","Body":"```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <RunCommand>dotnet</RunCommand>\r\n    <RunArguments>blazor serve</RunArguments>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Browser\" Version=\"0.6.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Build\" Version=\"0.6.0\" PrivateAssets=\"all\" />\r\n\r\n    <DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nusing blazor `0.6.0`\r\n\r\nafter running `dotnet new blazor` and then `dotnet blazor -h`\r\nan `InvalidOperationException` is thrown.\r\n\r\nis there any reason why blazor does not use the `CommandLineApplication`? ","Url":"https://github.com/aspnet/Blazor/issues/1513","RelatedDescription":"Closed issue \"support help in Blazor cli\" (#1513)"},{"Id":"366026711","IsPullRequest":false,"CreatedAt":"2018-10-03T14:45:15","Actor":"chanhong","Number":"1512","RawContent":null,"Title":"Blazor won't load in IIS","State":"closed","Body":"I created a basic Blazor application using VS 2017 and select \"Blazor\" and it runs fine in VS 2017 but when I create a website in Windows 2016 IIS that point to the \"public\" folder that I published in VS 2017, it just stuck at \"loading...\" and here are the log of the reason why it got stuck.\r\n\r\n[Blazor_IIS_stuck_at_loading_with_error.txt](https://github.com/aspnet/Blazor/files/2439214/Blazor_IIS_stuck_at_loading_with_error.txt)\r\n\r\nBlazor is what I have been waiting for a long time but not being able to run in IIS is a big obstacle!\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1512","RelatedDescription":"Closed issue \"Blazor won't load in IIS\" (#1512)"},{"Id":"366047604","IsPullRequest":false,"CreatedAt":"2018-10-03T14:44:19","Actor":"VictorioBerra","Number":"1514","RawContent":null,"Title":"Why is WeatherForecastService an abstract class and not an interface?","State":"closed","Body":"This is more of a general C# question than a Blayzor question but I was just curious why `WeatherForecastService` is an abstract class implemented by `DefaultWeatherForecastService` rather than making it an interface?\r\n\r\nIs this unique to Blayzor in that is HAS to be abstract?","Url":"https://github.com/aspnet/Blazor/issues/1514","RelatedDescription":"Closed issue \"Why is WeatherForecastService an abstract class and not an interface?\" (#1514)"},{"Id":"366240472","IsPullRequest":false,"CreatedAt":"2018-10-03T14:39:56","Actor":"wstaelens","Number":"1516","RawContent":null,"Title":"Question: Does Blazor support Microsoft MAT for localization/translation management?","State":"closed","Body":"We've been using Microsoft MAT almost in every recent project (WPF, asp.net mvc, asp.net core, winforms, â€¦),\r\nDoes a Blazor project in Visual Studio 2017 also support Microsoft MAT for localization/translations of resources?\r\n\r\nhttps://multilingualapptoolkit.uservoice.com/ \r\nhttps://marketplace.visualstudio.com/items?itemName=MultilingualAppToolkit.MultilingualAppToolkit-18308#overview \r\n\r\n![mat editor](https://user-images.githubusercontent.com/7447285/46400992-161f2c00-c6fc-11e8-963d-0bfedee4959c.png)\r\n![mat multiling](https://user-images.githubusercontent.com/7447285/46400994-17505900-c6fc-11e8-8d07-687fbdc66da7.PNG)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1516","RelatedDescription":"Closed issue \"Question: Does Blazor support Microsoft MAT for localization/translation management?\" (#1516)"},{"Id":"366057511","IsPullRequest":true,"CreatedAt":"2018-10-02T20:02:35","Actor":"KristianJakubik","Number":"1515","RawContent":null,"Title":"Fixing types of UIEventArgs properties.","State":"open","Body":"Hi, \r\nI found out that some properties of [UIEventArgs ](https://github.com/aspnet/Blazor/blob/master/src/Microsoft.AspNetCore.Blazor/UIEventArgs.cs)objects doesn't match with either w3 standard or with their description.\r\n\r\nExample:\r\n`public float Detail { get; set; }` \r\nshould be based on [mozilla](https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail) or [w3](https://www.w3.org/TR/uievents/#interface-uievent)\r\n`public long Detail { get; set; }`\r\nEven the description of property says, that it represents count of clicks incremented by 1, therefor  representing them by `long` makes more sense to me.\r\n\r\nI found several other properties with mismatching types. I can fix them and propose fixes in this PR, but at first I would like to get some feedback on this.\r\n\r\nThanks.\r\n","Url":"https://github.com/aspnet/Blazor/pull/1515","RelatedDescription":"Open PR \"Fixing types of UIEventArgs properties.\" (#1515)"},{"Id":"365967588","IsPullRequest":true,"CreatedAt":"2018-10-02T15:59:48","Actor":"danroth27","Number":"1511","RawContent":null,"Title":"Update copyright for Microsoft.AspNetCore.Blazor.Templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1511","RelatedDescription":"Closed or merged PR \"Update copyright for Microsoft.AspNetCore.Blazor.Templates\" (#1511)"},{"Id":"365015514","IsPullRequest":false,"CreatedAt":"2018-10-02T10:35:43","Actor":"nvonbenken","Number":"1496","RawContent":null,"Title":"Successive calls to StateHasChanged don't seem to work as intended","State":"closed","Body":"I initially began my project following the FlightFinder sample here: https://github.com/aspnet/samples/tree/master/samples/aspnetcore/blazor/FlightFinder\r\n\r\nI found my components were not updating properly. I then simplified it to the version I have now, and I still cannot get the loader to display.\r\n\r\nMy impression was that calling `StateHasChanged` in my `RunTest()` function would reload things but it looks like its only ever reloading one time, when the execution of the function is complete. My loading spinner never renders and my results component never gets hidden based on the if blocks around each of them. \r\n\r\nAm I approaching this the wrong way to get them to render in proper sequence/when they should based on my test running?\r\n\r\n```\r\n@inject AppState state\r\n\r\n<div>\r\n  <h3>Choose Test Params</h3>\r\n  <div class=\"container form-group\">\r\n    <label for=\"source\">Data Source:</label>\r\n    <select class=\"form-control\" id=\"source\" disabled bind=\"testParams.DataSource\">\r\n      <option value=\"1\">Source 1</option>\r\n    </select>\r\n\r\n    <label for=\"recCount\">Record Count:</label>\r\n    <select class=\"form-control\" id=\"recCount\" bind=\"testParams.RecordCount\">\r\n      <option value=\"1\">1</option>\r\n      <option value=\"50\">50</option>\r\n      <option value=\"500\">500</option>\r\n      <option value=\"1000\">1000</option>\r\n    </select>\r\n\r\n    <label for=\"ddlThreads\">Thread Count:</label>\r\n    <select class=\"form-control\" id=\"ddlThreads\" bind=\"testParams.ThreadCount\">\r\n      <option value=\"1\">1</option>\r\n      <option value=\"3\">3</option>\r\n      <option value=\"5\">5</option>\r\n    </select>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" onclick=@(() => RunTest())>Run Test</button>\r\n  </div>\r\n\r\n  @if(IsLoading)\r\n  {\r\n    <div class=\"loader\" />\r\n  }\r\n\r\n  @if(TestComplete)\r\n  {\r\n    <Results Res=state.Res></Results>\r\n  }\r\n\r\n  @*<Graph></Graph>*@\r\n</div>\r\n\r\n@functions\r\n{\r\n  [Parameter] Action<TestParams> OnRun { get; set; }\r\n\r\n  private bool IsLoading { get; set; }\r\n  private bool TestComplete { get; set; }\r\n  private TestParams testParams = new TestParams(1, \"\", 1);\r\n\r\n  private void RunTest()\r\n  {\r\n    IsLoading = true;\r\n    TestComplete = false;\r\n    StateHasChanged();\r\n\r\n    OnRun(testParams);\r\n\r\n    IsLoading = false;\r\n    TestComplete = true;\r\n    StateHasChanged();\r\n  }\r\n}\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1496","RelatedDescription":"Closed issue \"Successive calls to StateHasChanged don't seem to work as intended\" (#1496)"},{"Id":"365678924","IsPullRequest":true,"CreatedAt":"2018-10-02T09:39:09","Actor":"rynowak","Number":"1507","RawContent":null,"Title":"Add required fields to build nuspec","State":"closed","Body":"These required fields are missing from the .Build nuspec, and this is blocking package upload.","Url":"https://github.com/aspnet/Blazor/pull/1507","RelatedDescription":"Closed or merged PR \"Add required fields to build nuspec\" (#1507)"},{"Id":"365682412","IsPullRequest":false,"CreatedAt":"2018-10-01T23:54:10","Actor":"danroth27","Number":"1509","RawContent":null,"Title":"Add package descriptions","State":"closed","Body":"Currently almost all of the Blazor packages have \"Package description\" for the package description. We should add meaningful descriptions","Url":"https://github.com/aspnet/Blazor/issues/1509","RelatedDescription":"Closed issue \"Add package descriptions\" (#1509)"},{"Id":"365070861","IsPullRequest":true,"CreatedAt":"2018-10-01T18:13:09","Actor":"natemcmaster","Number":"1498","RawContent":null,"Title":"Upgrade KoreBuild","State":"closed","Body":"* remove sources.props and use NuGet.config. Source.props is only necessary for products that bulid in ProdCon, which Blazor does not\r\n* Remove code signing glue code. This is part of KoreBuild now\r\n* Update SDK to 2.1.400\r\n* Update certificate names used for code-signing to use SHA2","Url":"https://github.com/aspnet/Blazor/pull/1498","RelatedDescription":"Closed or merged PR \"Upgrade KoreBuild\" (#1498)"},{"Id":"365519616","IsPullRequest":false,"CreatedAt":"2018-10-01T15:35:11","Actor":"kant2002","Number":"1506","RawContent":null,"Title":"Strange excption in OnInit","State":"open","Body":"I following scenario in 0.6.0 preview\r\n```\r\nprotected override void OnInit()\r\n    {\r\n        this.scoreOptions = new API.GetScoreOptions();\r\n    }\r\n```\r\n\r\nThis is results in the \r\n```\r\nWASM: 13\r\n```\r\n\r\nThis is quite a magic for me. I understand that this may be not an issue with Blazor itself but with Mono, but trying anything in OnInit always give me all kind of funny errors.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1506","RelatedDescription":"Open issue \"Strange excption in OnInit\" (#1506)"},{"Id":"365015546","IsPullRequest":false,"CreatedAt":"2018-10-01T12:18:11","Actor":"seancpeters","Number":"1497","RawContent":null,"Title":"Issue with multiproject template creation with 2.2 Preview2 SDK","State":"closed","Body":"_From @livarcocc on September 27, 2018 18:37_\n\n@danroth27 commented on [Thu Sep 27 2018](https://github.com/dotnet/sdk/issues/2556)\n\nRepro steps:\r\n\r\n1. Install the Blazor 0.6.0-preview1 templates: `dotnet new -i Microsoft.AspNetCore.Blazor.Templates::0.6.0-preview1-final --nuget-source https://dotnet.myget.org/f/blazor-dev/api/v3/index.json`\r\n1. Create a multi-project Blazor hosted template: `dotnet new blazorhosted -o BlazorHostedApp1`\r\n\r\nExpected result: Template creates successfully\r\n\r\nActual result: Project template creation fails\r\n\r\n```\r\nC:\\Users\\Admin\\Desktop>dotnet new blazorhosted -o BlazorHostedApp2\r\nThe template \"Blazor (hosted in ASP.NET server)\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on BlazorHostedApp2\\BlazorHosted-CSharp.Server\\BlazorHosted-CSharp.Server.csproj...\r\nMSBUILD : error MSB1009: Project file does not exist.\r\nSwitch: BlazorHostedApp2\\BlazorHosted-CSharp.Server\\BlazorHosted-CSharp.Server.csproj\r\n\r\nRestore failed.\r\nRunning 'dotnet restore' on BlazorHostedApp2\\BlazorHosted-CSharp.Client\\BlazorHosted-CSharp.Client.csproj...\r\nMSBUILD : error MSB1009: Project file does not exist.\r\nSwitch: BlazorHostedApp2\\BlazorHosted-CSharp.Client\\BlazorHosted-CSharp.Client.csproj\r\n\r\nRestore failed.\r\nRunning 'dotnet restore' on BlazorHostedApp2\\BlazorHosted-CSharp.Shared\\BlazorHosted-CSharp.Shared.csproj...\r\nMSBUILD : error MSB1009: Project file does not exist.\r\nSwitch: BlazorHostedApp2\\BlazorHosted-CSharp.Shared\\BlazorHosted-CSharp.Shared.csproj\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n```\r\n\r\nWorks fine with the 2.1.402 SDK.\r\n\n\n---\n\n@livarcocc commented on [Thu Sep 27 2018](https://github.com/dotnet/sdk/issues/2556#issuecomment-425199378)\n\nThis seems an issue with the template and with the post action to restore the projects created. I am moving the issue to dotnet/template, where they can help better correcting it.\n\n\n\n_Copied from original issue: dotnet/templating#1668_","Url":"https://github.com/aspnet/Blazor/issues/1497","RelatedDescription":"Closed issue \"Issue with multiproject template creation with 2.2 Preview2 SDK\" (#1497)"},{"Id":"365432145","IsPullRequest":true,"CreatedAt":"2018-10-01T12:17:04","Actor":"SteveSandersonMS","Number":"1505","RawContent":null,"Title":"Fix templates with .NET Core 2.2 SDKs. Fixes #1497","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1505","RelatedDescription":"Closed or merged PR \"Fix templates with .NET Core 2.2 SDKs. Fixes #1497\" (#1505)"},{"Id":"364991113","IsPullRequest":false,"CreatedAt":"2018-10-01T11:56:42","Actor":"doggy8088","Number":"1495","RawContent":null,"Title":"Call DOM's methods","State":"closed","Body":"For DOM properties, we can use binding syntax to get/set it.  But for DOM methods, is it possible to easily call to arbitary DOM's method without implementing JS Interop?  Such as calling `focus()` or `blur()` methods of a input element.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1495","RelatedDescription":"Closed issue \"Call DOM's methods\" (#1495)"},{"Id":"365121868","IsPullRequest":false,"CreatedAt":"2018-10-01T11:55:36","Actor":"sth349","Number":"1500","RawContent":null,"Title":"Blazor doesn't load","State":"closed","Body":"I'm using Blazor 0.5.0.\r\nI have published the default template but when I launch the index.html chrome just displays \"loading\" and it never actually loads, normally when I run dotnet run it works but I can't use the static files.\r\nThe browser console displays:\r\n```\r\nFailed to load resource: net::ERR_FILE_NOT_FOUND /C:/css/bootstrap/bootstrap.min.css:1 \r\nFailed to load resource: net::ERR_FILE_NOT_FOUND /C:/css/site.css:1 \r\nFailed to load resource: net::ERR_FILE_NOT_FOUND blazor.webassembly.js:1 \r\n```\r\nI need the static files as I want to wrap it in a Apache Cordova container, is there a more productive way to do it?","Url":"https://github.com/aspnet/Blazor/issues/1500","RelatedDescription":"Closed issue \"Blazor doesn't load\" (#1500)"},{"Id":"365085602","IsPullRequest":false,"CreatedAt":"2018-10-01T11:52:48","Actor":"lqdev","Number":"1499","RawContent":null,"Title":"Error when trying to use ML.NET framework","State":"closed","Body":"Because at the moment ML.NET only supports x64 environments, I created a class library with helper methods \r\nto make predictions using a pretrained ML.NET model. The model is stored in Azure Storage as a Blob.\r\n\r\nThe function I use in the class library takes as input the DTO representing the input to the model in this case `IrisData` as well as the pretrained model as a byte array. The function returns a `Task<string>` so at no point are there any types other than those provided by BCL (on the Blazor side). The code for it is below:\r\n\r\n```csharp\r\npublic static async Task<string> MakeSerializedPrediction(byte[] serialModel,IrisData input)\r\n{\r\n    PredictionModel<IrisData,IrisPrediction> model = await LoadSerializeModel(new MemoryStream(serialModel));\r\n    IrisPrediction prediction = model.Predict(input);\r\n    return prediction.PredictedLabels;\r\n}\r\n```\r\n\r\nThen, from Blazor I load the blob as a byte array using HttpClient. I am accounting for the default handler issue #1372 . Below is what my page in Blazor looks like. My byte array is stored in the `serializedModel` variable which gets initialized inside the `OnInit` method. Then, inside the `predict` method is where I pass `serializedModel` and the `userInput` variable of type `IrisData` which contains the input from the user to make a call to the `MakeSerialPrediction` method. However, I get an error. Attached is the web console output. The class library works when tested on a console application and based on the browser console output it appears to be an issue with wasm/mono.\r\n\r\n```text\r\n@page \"/predict\"\r\n@inject HttpClient Http\r\n\r\n<input type=\"text\" bind=\"@userInput.SepalLength\" placeholder=\"@userInput.SepalLength\"/>\r\n<input type=\"text\" bind=\"@userInput.SepalWidth\" placeholder=\"@userInput.SepalWidth\"/>\r\n<input type=\"text\" bind=\"@userInput.PetalLength\" placeholder=\"@userInput.PetalLength\"/>\r\n<input type=\"text\" bind=\"@userInput.PetalWidth\" placeholder=\"@userInput.PetalWidth\"/>\r\n<button class=\"btn btn-primary\" onclick=\"@predict\">Predict</button>\r\n\r\n<p>@prediction</p>\r\n@functions {\r\n\r\n    IrisData userInput;\r\n    string prediction;\r\n    byte[] serializedModel;\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        prediction = \"\";\r\n\r\n        userInput = new IrisData()\r\n        {\r\n            SepalLength = 0.0f,\r\n            SepalWidth = 0.0f,\r\n            PetalLength = 0.0f,\r\n            PetalWidth = 0.0f\r\n        };\r\n\r\n        using(var client = new HttpClient(new BrowserHttpMessageHandler()))\r\n        {\r\n            serializedModel = await client.GetByteArrayAsync(\"<MYBLOBURI>\");\r\n        }\r\n    }\r\n    \r\n    public async void predict()\r\n    {\r\n        prediction = await Model.MakeSerializedPrediction(serializedModel,userInput);\r\n    }\r\n}\r\n```\r\n## See Log Here: \r\n[blazormlneterror.txt](https://github.com/aspnet/Blazor/files/2430158/blazormlneterror.txt)\r\n\r\n```text\r\nWASM: Initialized blazor.webassembly.js:1:31958\r\nWASM: blazor.webassembly.js:1:32013\r\nWASM: Unhandled Exception: blazor.webassembly.js:1:32013\r\nWASM: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.MemberAccessException: Cannot create an abstract class: System.Reflection.Emit.DynamicMethod blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&) blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) <0x1a6e588 + 0x00096> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:    --- End of inner exception stack trace --- blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) <0x1a6e588 + 0x000ba> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) <0x1a6e258 + 0x00022> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.ApiUtils.GeneratePeek[TOwn,TRow] (Microsoft.ML.Runtime.Api.InternalSchemaDefinition+Column column) <0x21a0668 + 0x000f2> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils+DataViewBase`1[TRow]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.String name, Microsoft.ML.Runtime.Api.InternalSchemaDefinition schemaDefn) <0x2198af0 + 0x000ec> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils+StreamingDataView`1[TRow]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable`1[T] data, Microsoft.ML.Runtime.Api.InternalSchemaDefinition schemaDefn) <0x2198820 + 0x00020> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils.CreateFromEnumerable[TRow] (Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable`1[T] data, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) <0x215dd60 + 0x00058> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.BatchPredictionEngine`2[TSrc,TDst]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, System.Boolean ignoreMissingColumns, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) <0x215d7f0 + 0x00036> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine[TSrc,TDst] (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, System.Boolean ignoreMissingColumns, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) <0x215d130 + 0x00044> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.PredictionModel.ReadAsync[TInput,TOutput] (System.IO.Stream stream) <0x1f91628 + 0x00056> in <de9eefdf9e51466c93acc3fbf86a9f7e>:0 blazor.webassembly.js:1:32013\r\nWASM:   at ModelLib.Model.LoadSerializeModel (System.IO.Stream serializedModel) <0x1f90f68 + 0x00026> in <4aa657c316ee4f4aa7fcb58dbfaae765>:0 blazor.webassembly.js:1:32013\r\nWASM:   at ModelLib.Model.MakeSerializedPrediction (System.Byte[] serialModel, ModelLib.IrisData input) <0x1f900c0 + 0x000d0> in <4aa657c316ee4f4aa7fcb58dbfaae765>:0 blazor.webassembly.js:1:32013\r\nWASM:   at MyBlazorApp.Pages.Prediction.predict () <0x1efc930 + 0x000d8> in <7889ac77b41345e69b6488605767213c>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_1 (System.Object state) <0x21d4080 + 0x00014> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper delegate-invoke) <Module>.invoke_void_object(object) blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) <0x21d4028 + 0x00026> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper delegate-invoke) <Module>.invoke_void_object(object) blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e40218 + 0x000f8> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e3ffb0 + 0x00020> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () <0x21d3fa8 + 0x0004a> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ThreadPoolWorkQueue.Dispatch () <0x1e3b680 + 0x000ee> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () <0x1e3b270 + 0x00000> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM: [ERROR] FATAL UNHANDLED EXCEPTION: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.MemberAccessException: Cannot create an abstract class: System.Reflection.Emit.DynamicMethod blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&) blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) <0x1a6e588 + 0x00096> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:    --- End of inner exception stack trace --- blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) <0x1a6e588 + 0x000ba> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) <0x1a6e258 + 0x00022> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.ApiUtils.GeneratePeek[TOwn,TRow] (Microsoft.ML.Runtime.Api.InternalSchemaDefinition+Column column) <0x21a0668 + 0x000f2> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils+DataViewBase`1[TRow]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.String name, Microsoft.ML.Runtime.Api.InternalSchemaDefinition schemaDefn) <0x2198af0 + 0x000ec> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils+StreamingDataView`1[TRow]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable`1[T] data, Microsoft.ML.Runtime.Api.InternalSchemaDefinition schemaDefn) <0x2198820 + 0x00020> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.DataViewConstructionUtils.CreateFromEnumerable[TRow] (Microsoft.ML.Runtime.IHostEnvironment env, System.Collections.Generic.IEnumerable`1[T] data, Microsoft.ML.Runtime.Api.SchemaDefinition schemaDefinition) <0x215dd60 + 0x00058> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.BatchPredictionEngine`2[TSrc,TDst]..ctor (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, System.Boolean ignoreMissingColumns, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) <0x215d7f0 + 0x00036> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.Runtime.Api.ComponentCreation.CreateBatchPredictionEngine[TSrc,TDst] (Microsoft.ML.Runtime.IHostEnvironment env, System.IO.Stream modelStream, System.Boolean ignoreMissingColumns, Microsoft.ML.Runtime.Api.SchemaDefinition inputSchemaDefinition, Microsoft.ML.Runtime.Api.SchemaDefinition outputSchemaDefinition) <0x215d130 + 0x00044> in <700e03bdc1224020a9c51406f31b73d4>:0 blazor.webassembly.js:1:32013\r\nWASM:   at Microsoft.ML.PredictionModel.ReadAsync[TInput,TOutput] (System.IO.Stream stream) <0x1f91628 + 0x00056> in <de9eefdf9e51466c93acc3fbf86a9f7e>:0 blazor.webassembly.js:1:32013\r\nWASM:   at ModelLib.Model.LoadSerializeModel (System.IO.Stream serializedModel) <0x1f90f68 + 0x00026> in <4aa657c316ee4f4aa7fcb58dbfaae765>:0 blazor.webassembly.js:1:32013\r\nWASM:   at ModelLib.Model.MakeSerializedPrediction (System.Byte[] serialModel, ModelLib.IrisData input) <0x1f900c0 + 0x000d0> in <4aa657c316ee4f4aa7fcb58dbfaae765>:0 blazor.webassembly.js:1:32013\r\nWASM:   at MyBlazorApp.Pages.Prediction.predict () <0x1efc930 + 0x000d8> in <7889ac77b41345e69b6488605767213c>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_1 (System.Object state) <0x21d4080 + 0x00014> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper delegate-invoke) <Module>.invoke_void_object(object) blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) <0x21d4028 + 0x00026> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at (wrapper delegate-invoke) <Module>.invoke_void_object(object) blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e40218 + 0x000f8> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) <0x1e3ffb0 + 0x00020> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () <0x21d3fa8 + 0x0004a> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading.ThreadPoolWorkQueue.Dispatch () <0x1e3b680 + 0x000ee> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nWASM:   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () <0x1e3b270 + 0x00000> in <4995adec482d4649a860872c8ccba266>:0 blazor.webassembly.js:1:32013\r\nExitStatus: Program terminated with exit(255) mono.js:1:177894 \r\n```","Url":"https://github.com/aspnet/Blazor/issues/1499","RelatedDescription":"Closed issue \"Error when trying to use ML.NET framework\" (#1499)"},{"Id":"365377462","IsPullRequest":false,"CreatedAt":"2018-10-01T09:28:59","Actor":"Tarmil","Number":"1504","RawContent":null,"Title":"NullReferenceException in resolve-dependencies","State":"open","Body":"I get the following error when using Blazor.Server on an F# project:\r\n\r\n```\r\nEXEC : error : Object reference not set to an instance of an object. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__GetAssemblyReferences|13_1(AssemblyEntry current) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 103\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__ResolveAssembliesCore|13_0(<>c__DisplayClass13_0& ) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 91\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.ResolveAssemblies() in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 82\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.ResolveRuntimeDependenciesCore(String entryPoint, String[] applicationDependencies, String[] monoBclDirectories) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 46\r\n     at Microsoft.AspNetCore.Blazor.Build.Cli.Commands.ResolveRuntimeDependenciesCommand.<>c__DisplayClass0_0.<Command>b__0() in /_/src/Microsoft.AspNetCore.Blazor.Build/Cli/Commands/ResolveRuntimeDependenciesCommand.cs:line 44\r\nC:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\Blazor.MonoRuntime.targets(538,5): error MSB3073: The command \"dotnet \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" resolve-dependencies \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\server.dll\" --references \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolve-dependencies.txt\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/Facades/\" --output \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolved.assemblies.txt\"\" exited with code 1. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n```\r\n\r\nI ran this with a locally built Razor with print debugging to find what was going on, and it seems that the problem is that it can't find `System.Buffers.dll`; it's not copied locally, and it's not in mono's stdlib either. And indeed, the issue disappears if I add this to my project:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Include=\"$(NuGetPackageRoot)system.buffers/4.5.0/lib/netstandard2.0/System.Buffers.dll\" />\r\n  </ItemGroup>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1504","RelatedDescription":"Open issue \"NullReferenceException in resolve-dependencies\" (#1504)"},{"Id":"365333738","IsPullRequest":false,"CreatedAt":"2018-10-01T07:10:30","Actor":"msimpsonnz","Number":"1503","RawContent":null,"Title":"Having issues with NavigateTo","State":"open","Body":"Hi\r\nI am having issues with NavigateTo function after submitting a page, it supper simple but cannot seem to make any progress\r\n\r\nThis is my method I am calling but as soon as the Post message happens it just refreshed the page I was on and doesn't redirect to the new page with the Id, am I doing something wrong? Just updated to Blazor 0.6 and using .NET Core 2.1\r\n\r\n```\r\n        protected async Task SubmitForm()\r\n        {\r\n            var request = await Http.PostJsonAsync<ModeratorResult>(\"/api/moderator/ScreenText\", ci);\r\n            UriHelper.NavigateTo($\"/tickets/{request.TrackingId}\");\r\n\r\n        }\r\n```\r\n\r\nFull code is here\r\nhttps://github.com/msimpsonnz/fn18/tree/master/src/FN18.Blazor.Client\r\n","Url":"https://github.com/aspnet/Blazor/issues/1503","RelatedDescription":"Open issue \"Having issues with NavigateTo\" (#1503)"},{"Id":"365247918","IsPullRequest":false,"CreatedAt":"2018-10-01T02:04:49","Actor":"edwardyehuang","Number":"1502","RawContent":null,"Title":"Blazor (ASP.NET Core hosted) project create failed","State":"closed","Body":"When I tried to create a project in Visual studio with \"Blazor (ASP.NET Core hosted) \" template, its create 3 folders:\r\n\r\n- XXXX.shared\r\n- XXXX.server\r\n- XXXX.client\r\n\r\nOnly the shared project is loaded Others cannot be loaded and seems incompleted.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1502","RelatedDescription":"Closed issue \"Blazor (ASP.NET Core hosted) project create failed\" (#1502)"},{"Id":"365197050","IsPullRequest":true,"CreatedAt":"2018-09-30T21:31:29","Actor":"danroth27","Number":"1501","RawContent":null,"Title":"Update survey link for 0.6.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1501","RelatedDescription":"Closed or merged PR \"Update survey link for 0.6.0\" (#1501)"},{"Id":"364962603","IsPullRequest":true,"CreatedAt":"2018-09-28T16:40:25","Actor":"sharpninja","Number":"1494","RawContent":null,"Title":"Added Proteced Property for the `RenderHandle` of the `BlazorComponent`","State":"open","Body":"What: Added a `protected` property to `BlazorComponent` that exposes the `RenderHandle` to sub-classes.\r\n\r\nWhy: This allows sub-classes to be instantiated individually with the ability to set the `RenderHandle` from the sub-class's `IComponent.Init` method, which prevents the `BlazorComponent` to not have the ability to be rendered when accessed as `BlazorComponent`.","Url":"https://github.com/aspnet/Blazor/pull/1494","RelatedDescription":"Open PR \"Added Proteced Property for the `RenderHandle` of the `BlazorComponent`\" (#1494)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-05T05:30:04.5452213Z","RunDurationInMilliseconds":2723}