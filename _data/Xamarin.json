{"Data":{"Blog":{"FeedItems":[{"Title":"Update to Xamarin.Forms 3.0 Pre-Release Available Today!","PublishedOn":"2018-03-30T19:02:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that the latest update to the Xamarin.Forms 3.0 Pre-release is now available! Help us make this our best Xamarin.Forms release ever by updating today and giving it a...","Href":"https://blog.xamarin.com/update-to-xamarin-forms-3-0-pre-release-available-today/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 2, Xamarin.iOS","PublishedOn":"2018-03-28T19:17:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the second part in a four-part series. In the first post, we covered building Xamarin.Forms from the source and then stepping into and debugging that code. In this post, we&#8217;ll explore...","Href":"https://blog.xamarin.com/debugging-xamarin-ios/","RawContent":null},{"Title":"New Xamarin.Android and Xamarin.iOS Project Templates Now Available","PublishedOn":"2018-03-26T18:31:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Whether you&#8217;re new or a seasoned Xamarin developer, project templates are an important part of the app building journey. They should be easy to find and set you up for success from the start. As...","Href":"https://blog.xamarin.com/new-xamarin-android-ios-templates/","RawContent":null},{"Title":"Performing Geospatial Calculations with Azure CosmosDB","PublishedOn":"2018-03-23T15:56:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure CosmosDB is a multi-model, globally distributed database, as well as a geospatial calculation powerhouse. It can calculate the distance between two points, determine whether a road runs through...","Href":"https://blog.xamarin.com/performing-geospatial-calculations-azure-cosmosdb/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 1, Xamarin.Forms","PublishedOn":"2018-03-21T18:59:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At some point, while working with Xamarin to build awesome mobile apps, you may have received an exception or error notification from the Xamarin framework code, Mono runtime, or Base Class Library...","Href":"https://blog.xamarin.com/debugging-xamarin-forms/","RawContent":null},{"Title":"Creating Cloud-Connected Mobile Apps with Xamarin + Azure","PublishedOn":"2018-03-19T17:56:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Case You Missed It A few weeks ago, we announced “Your Guide to Azure Services for Apps Built with Xamarin” on the Visual Studio blog to help you identify which cloud-connected services in Azure...","Href":"https://blog.xamarin.com/cloud-connected-apps-xamarin-azure/","RawContent":null},{"Title":"Add Cloud Storage to Xamarin Apps with Azure Blob Storage","PublishedOn":"2018-03-16T18:17:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Cloud Storage has become a must-have feature for mobile apps. It gives developers the ability to store large files in the cloud and securely distribute them to all mobile app users. Moving these large...","Href":"https://blog.xamarin.com/xamarin-plus-azure-blob-cloud-storage/","RawContent":null},{"Title":"Xamarin Joins docs.microsoft.com","PublishedOn":"2018-03-14T17:22:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re beginning a new chapter in mobile developer documentation: Xamarin docs are now live on docs.microsoft.com/xamarin! Here are a few highlights of the new documentation experience:...","Href":"https://blog.xamarin.com/xamarin-joins-docs-microsoft-com/","RawContent":null},{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7459978781","Type":"PullRequestEvent","CreatedAt":"2018-03-30T17:40:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1499","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] %(AndroidApiInfo.Stable)=False\" (#1499) at xamarin/xamarin-android","RelatedBody":"Fixes: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/592736\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1498\r\n\r\nContext: 0780e274f1a301b709ba8eeb82ed83d6d77cfa7e\r\nContext: https://github.com/xamarin/xamarin-android/pull/1439\r\n\r\nWhat does it take to *use* a new (and unstable!) API level?\r\n\r\nCommit 8942eca0 tried to lay some of this out, but *in principal* the\r\ncurrent process should be:\r\n\r\n 1. Bind the new API level.\r\n 2. Add a new `@(AndroidApiInfo)` entry for the new API level.\r\n 3. Specify the `$(TargetFrameworkVersion)` of the new API level when\r\n    building a project.\r\n\r\nCommit 8ce25376 bound API-P as v8.1.99, finishing steps (1) and (2).\r\nTherefore, step (3) should just work, right?\r\n\r\n\t$ cd samples/HelloWorld\r\n\t$ ../../bin/Debug/bin/xabuild /p:TargetFrameworkVersion=v8.1.99\r\n\t# no errors\r\n\r\nSuccess!\r\n\r\nExcept, when reading the diagnostic log file, we see:\r\n\r\n\tResolveSdksTask Outputs:\r\n\t  AndroidApiLevel: 27\r\n\t  AndroidApiLevelName: 27\r\n\t  ...\r\n\t  TargetFrameworkVersion: v8.1.99\r\n\r\nWe're using the correct v8.1.99 *binding assembly*, but we're *not*\r\nusing the API-P `android.jar`, because the `<ResolveSdks>` task is\r\ntreating v8.1.99 (API-P/API-28) as API-27.\r\n\r\nOops.\r\n\r\n---\r\n\r\nThere are three msbuild invocations of consequence here:\r\n\r\n 1. `xabuild /p:AndroidUseLatestPlatformSdk=True`\r\n 2. `xabuild /p:AndroidUseLatestPlatformSdk=True  /p:TargetFrameworkVersion=v8.1.99`\r\n 3. `xabuild /p:AndroidUseLatestPlatformSdk=False /p:TargetFrameworkVersion=v8.1.99`\r\n\r\n(1) is the \"default build\" scenario (at least so long as our default\r\nproject templates specify `$(AndroidUseLatestPlatformSdk)`=True).\r\nThis should build the project against the latest *stable* API level\r\nand `$(TargetFrameworkVersion)`, as per 0780e274. This works. (Yay!)\r\n\r\nIf you want to build an *unstable* API level, then the\r\n`$(TargetFrameworkVersion)` value must be set explicitly, either on\r\nthe command-line (as shown here) or by editing the `.csproj`.\r\n\r\n(2) and (3) are variations to build using the unstable API-P binding;\r\nthey *should* be identical, but due to code-path differences in\r\n`<ResolveSdks>`, they are not necessarily the same.\r\n\r\nBoth (2) and (3) *should* work; they don't, with different behaviors.\r\n\r\n(2) *builds*, but uses the wrong `android.jar` during compilation, as\r\ndescribed above with the `samples/HelloWorld` example.\r\n\r\nFix (2) by setting `ResolveSdks.AndroidApiLevel` to\r\n`ResolveSdks.SupportedApiLevel`, so that it overrides the default\r\nbehavior of using the latest *stable* API level value when\r\n`$(AndroidUseLatestPlatformSdk)`=True.\r\n\r\n(3) does *not* build:\r\n\r\n\t  ResolveSdksTask Outputs:\r\n\t    AndroidApiLevel: P\r\n\t    AndroidApiLevelName: P\r\n\t...\r\n\tTask \"GetAndroidDefineConstants\"\r\n\t…\\Xamarin\\Android\\Xamarin.Android.Common.targets(910,29):\r\n\terror MSB4030: \"P\" is an invalid value for the \"AndroidApiLevel\" parameter of the \"GetAndroidDefineConstants\" task. The \"AndroidApiLevel\" parameter is of type \"System.Int32\".\r\n\tDone executing task \"GetAndroidDefineConstants\" -- FAILED.\r\n\r\n(3) doesn't build because the `<GetAndroidDefineConstants/>` task\r\ninvocation is provided `$(_SupportedApiLevel)`, which is the above\r\n`AndroidApiLevel` output, and thus contains a value of `P`.\r\n\r\nFix (3) by using `AndroidVersions.GetApiLevelFromId()` to lookup the\r\ncorrect API level based on the id derived from\r\n`$(TargetFrameworkVersion)` value.\r\n\r\nThis in turn raises a *different* bug: `aapt package` doesn't like\r\nto use id values, it wants *just* numbers. Fixing *just*\r\n`<ResolveSdks>` results in a build error:\r\n\r\n\tAapt Task\r\n\t  ...\r\n\tExecuting package -f -m -M obj/Debug/android/manifest/AndroidManifest.xml -J /var/folders/1y/wwmg3hv5685ft661f5q2w2100000gn/T/7464w5of.vfk --custom-package com.xamarin.android.helloworld -F obj/Debug/android/bin/packaged_resources.bk -S obj/Debug/res/ -I …/android-toolchain/sdk/platforms/android-P/android.jar --auto-add-overlay --max-res-version P\r\n\taapt: error APT0000: max res 0, skipping mipmap-hdpi \"max res 0, skipping mipmap-hdpi\".\r\n\taapt: error APT0000: max res 0, skipping mipmap-mdpi \"max res 0, skipping mipmap-mdpi\".\r\n\taapt: error APT0000: max res 0, skipping mipmap-xhdpi \"max res 0, skipping mipmap-xhdpi\".\r\n\taapt: error APT0000: max res 0, skipping mipmap-xxhdpi \"max res 0, skipping mipmap-xxhdpi\".\r\n\taapt: error APT0000: max res 0, skipping mipmap-xxxhdpi \"max res 0, skipping mipmap-xxxhdpi\".\r\n\tobj/Debug/android/manifest/AndroidManifest.xml(7): error APT0000: No resource found that matches the given name (at 'icon' with value '@mipmap/icon').\r\n\tobj/Debug/android/manifest/AndroidManifest.xml(8): error APT0000: No resource found that matches the given name (at 'icon' with value '@mipmap/icon').\r\n\r\nFix this by updating the `<GetJavaPlatformJar/>` task so that\r\n`GetJavaPlatformJar.TargetSdkVersion` contains an integer API level\r\nvalue, not the API id. This fixes the `<Aapt/>` error."},{"Id":"7459749535","Type":"IssuesEvent","CreatedAt":"2018-03-30T16:40:09","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1498","RelatedDescription":"Opened issue \"Unable to build against preview Android API levels\" (#1498) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Copy the v8.1 framework to v99.99.\r\n2. Edit v99.99\\AndroidApiInfo.xml, and set `<Id/>` to \"Z\", set `<Level/>` to 99, set `<Version/>` to v99.99, and `<Stable/>` to False:\r\n\r\n    <AndroidApiInfo>\r\n      <Id>Z</Id>\r\n      <Level>99</Level>\r\n      <Name>Z</Name>\r\n      <Version>v99.99</Version>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n\r\n3. Copy `$(AndroidSdkDirectory)\\platforms\\android-27` to `$(AndroidSdkDirectory)\\platforms\\android-Z`.\r\n\r\n4. Update an new or existing project so that `$(TargetFrameworkVersion)`=v99.99.\r\n\r\n\r\nAlternatively, a recent build from master which has early P preview support can be used.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProject compiles against preview bindings and preview platform SDK.\r\n\r\n### Actual Behavior\r\nProject fails with:\r\n>   C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(907,29): error MSB4030: \"Z\" is an invalid value for the \"AndroidApiLevel\" parameter of the \"GetAndroidDefineConstants\" task. The \"AndroidApiLevel\" parameter is of type \"System.Int32\".\r\n\r\n### Version Information\r\nXamarin.Android.Sdk-OSS-8.3.99.86_HEAD_7800139\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nBuild output using the steps provided above:\r\nhttps://gist.github.com/pjcollins/da86d3595cfa97304ac32a42e09a69ac\r\n\r\nBuild output using Android P preview:\r\nhttps://gist.github.com/pjcollins/4badecdce72fe24071563fd56fd93e1c\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7459392769","Type":"PullRequestEvent","CreatedAt":"2018-03-30T15:07:42","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1497","RelatedDescription":"Opened pull request \"Makefile was missing another `build-tools/mono-runtimes` specification.\" (#1497) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7459230720","Type":"PullRequestEvent","CreatedAt":"2018-03-30T14:27:30","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1495","RelatedDescription":"Merged pull request \"Move a couple of soure build scripts from build-tools to src.\" (#1495) at xamarin/xamarin-android","RelatedBody":"https://github.com/xamarin/xamarin-android/pull/1489#issuecomment-377226800\r\ncomplains that the additions of new sources to build-tools is wrong because\r\nthey are not \"build-tools\", mentioning that the existing sources are wrong.\r\n\r\nWait, then, why not fix it right now.\r\n\r\nTherefore, fixing this.\r\n`mono-runtimes`, `libzip` and `libzip-windows` are moved to src."},{"Id":"7457803402","Type":"PullRequestEvent","CreatedAt":"2018-03-30T07:07:05","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1496","RelatedDescription":"Opened pull request \"[Mono.Android] remove duplicate Mono.Android.projitems includes.\" (#1496) at xamarin/xamarin-android","RelatedBody":"This resulted in thousands lines of compiler warnings (xxx.cs is added twice)."},{"Id":"7457599359","Type":"PullRequestEvent","CreatedAt":"2018-03-30T05:44:51","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1495","RelatedDescription":"Opened pull request \"Move a couple of soure build scripts from build-tools to src.\" (#1495) at xamarin/xamarin-android","RelatedBody":"https://github.com/xamarin/xamarin-android/pull/1489#issuecomment-377226800\r\ncomplains that the additions of new sources to build-tools is wrong because\r\nthey are not \"build-tools\", mentioning that the existing sources are wrong.\r\n\r\nWait, then, why not fix it right now.\r\n\r\nTherefore, fixing this.\r\n`mono-runtimes`, `libzip` and `libzip-windows` are moved to src."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7462969983","Type":"IssuesEvent","CreatedAt":"2018-03-31T22:02:00","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2219","RelatedDescription":"Opened issue \"[Enhancement] CarouselView implementation\" (#2219) at xamarin/Xamarin.Forms","RelatedBody":"Hi colleagues\r\nI saw, that you merged https://github.com/alexrainman/CarouselView project into your repository and it will be standard carousel view of XF.\r\n\r\nI want to suggest you to check my implementation of this view that is base on PanGestureRecognizer.\r\n\r\nAlso my implementation provides opportunities:\r\na) customizing of animations time/easing etc. (CardsView/CarouselView etc.)\r\nb) customizing carousel indicators (you can use circle view or any Image or what you want)\r\nc) you can manage view via adding them into collection or by setting properties directly (So, your view model will contain 3 properties next/current/previous contexts)\r\n\r\nMy implementation supports caching views (So, views can be reused)\r\n\r\nYou can check it here https://github.com/AndreiMisiukevich/CardView\r\n"},{"Id":"7462881187","Type":"IssuesEvent","CreatedAt":"2018-03-31T20:59:00","Actor":"robinmanuelthiel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2218","RelatedDescription":"Opened issue \"[iOS] Frame background color does not match the color of other elements\" (#2218) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn Xamarin Forms on iOS, the `Frame` control background color does not match the color of other elements due to differences between CGColor and UIColor. @GalaxiaGuy has created a nice [GitHub Repository](https://github.com/GalaxiaGuy/xamarin-forms-frame-color) to reproduce this easily\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a `Page` with Background Color `#37404A`\r\n2. Add a `Frame`with Background Color `#37404A`\r\n3. See that `Frame`'s Background Color renderes differently than the `Page`s on iOS\r\n\r\n### Expected Behavior\r\n\r\nBoth colors should be the same.\r\n\r\nIn Xamarin Forms on iOS, the frame control background color does not match the color of other elements due to differences between CGColor and UIColor.\r\n\r\nMost iOS renderers work using UIKit and UIColor. The background color for instance is set using UIView.BackgroundColor.\r\n\r\nFrame however works using CoreGraphics and CGColor and manipulating a view's layer. The background color is set using UIView.Layer.BackgroundColor.\r\n\r\nThe bottom line, for consistency, `ToCGColor` should be defined as follows:\r\n\r\n```csarp\r\npublic static CGColor ToCGColor(this Color color)\r\n{\r\n  return color.ToUIColor().CGColor;\r\n}\r\n```\r\n\r\n### Actual Behavior\r\n\r\nBoth colors are defined as the same but are rendered differently.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 5.0.5280555\r\n\r\n### Screenshots\r\n\r\n![Screenshot](https://github.com/GalaxiaGuy/xamarin-forms-frame-color/blob/master/screenshot.png?raw=true)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/GalaxiaGuy/xamarin-forms-frame-color\r\n"},{"Id":"7462616961","Type":"IssuesEvent","CreatedAt":"2018-03-31T17:59:17","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2134","RelatedDescription":"Closed issue \"System.NullReferenceException ListViewRenderer+<OnScrollToRequested>d__43.MoveNext () on iOS\" (#2134) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nApp crashes with NullReferenceException when navigating away from page after attempting to scroll. I am not positive, but this may only happen on iOS 11 (all of the crash reports that we have received with this issue are from users on iOS 11).\r\n\r\nExample code:\r\n`\r\nthis.Appearing += async (object sender, EventArgs e) =>\r\n{\r\nif (this.scrollItem != null && App.IsIos && this.listView != null)\r\n{\r\nthis.listView.ScrollTo(scrollItem, ScrollToPosition.Center, false);\r\nthis.scrollItem = null;\r\n}\r\n};\r\n`\r\n\r\n[Crash Report](https://github.com/xamarin/Xamarin.Forms/files/1826516/app-24e9f53f-0e00-4ad4-bf1e-79e026c73f92-id-709a7f6b-6f10-4832-aafc-861eabc46269.txt)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Call ListView.ScrollTo() on a page (within a navigation stack) in the Page.Appearing call\r\n2. Quickly navigate away from the page using the navigation arrow\r\n3. App crashes with the NullReferenceException\r\n\r\n### Expected Behavior\r\nApp doesn't crash\r\n\r\n### Actual Behavior\r\nApp hard crashes after attempting to scroll on the page after it has disappeared from view.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio for Mac Community 7.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.8.0.20<!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n- Nuget Packages: Xamarin.Forms\r\n- Affected Devices: iOS devices simulator and actual devices(possibly iOS 11 only)\r\n"},{"Id":"7462496275","Type":"IssuesEvent","CreatedAt":"2018-03-31T16:42:46","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2167","RelatedDescription":"Closed issue \"[Android] Regression HorizontalTextAlignment of Entry control no longer works\" (#2167) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add Entry control to page\r\n2. Set \"Center\" or \"End\" to HorizontalTextAlignment property\r\n3. Run\r\n\r\n### Expected Behavior\r\nPlaceholder and text can be placed to Center or End.\r\n### Actual Behavior\r\nPlaceholder and text are allways in Start position\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.296286-pre2\r\n- Last known good version: 2.5.****\r\n- IDE: Visual Studio 2017 (PC)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: Target 8.1\r\n- Android Support Library Version: 27.0.2\r\n- Nuget Packages:\r\n- Affected Devices: Test device: samsung galaxy a5 2017 android 7.0\r\n"},{"Id":"7462142699","Type":"IssuesEvent","CreatedAt":"2018-03-31T12:49:34","Actor":"MartinZikmund","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2217","RelatedDescription":"Opened issue \"Registrar class Register no-ops\" (#2217) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have noticed an unusual no-op logic in `Xamarin.Forms.Internals.Registrar<TRegistrable>`.\r\n\r\nThe `GetHandlerType` method is trying to cache the result of the handler search, which might be `null` and to avoid repeated `RenderWithAttribute` reflection it uses the `Register` method to cache the result - see [line 98](https://github.com/xamarin/Xamarin.Forms/blob/e0d85bda5ea8a8224dbaf4e4ba5e2fa8361a7708/Xamarin.Forms.Core/Registrar.cs#L98) and [line 113](https://github.com/xamarin/Xamarin.Forms/blob/e0d85bda5ea8a8224dbaf4e4ba5e2fa8361a7708/Xamarin.Forms.Core/Registrar.cs#L113).\r\n\r\n```\r\nRegister(viewType, null); // Cache this result so we don't have to do GetCustomAttribute again\r\n```\r\n\r\nHowever, if you check the `Register` method, you can see it just skips execution for `null` handler parameter (see [line 26](https://github.com/xamarin/Xamarin.Forms/blob/e0d85bda5ea8a8224dbaf4e4ba5e2fa8361a7708/Xamarin.Forms.Core/Registrar.cs#L26)).\r\n\r\n```\r\npublic void Register(Type tview, Type trender)\r\n{\r\n    //avoid caching null renderers\r\n    if (trender == null)\r\n        return;\r\n    _handlers[tview] = trender;\r\n}\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe `GetHandlerType` method seems to expect that the `Register` call will cache even the `null` handler and that will avoid repeated evaulation of the `RenderWith` attribute`.\r\n\r\n### Actual Behavior\r\nThe `Register` method call does not cache the `null` handler which means the call is effectively a no-op.\r\n"},{"Id":"7461670446","Type":"IssuesEvent","CreatedAt":"2018-03-31T06:26:17","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2216","RelatedDescription":"Opened issue \"Design assemblies should only target v4.5\" (#2216) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThe .Design assemblies are targeting .NET 4.7, but if you use Xamarin.Forms in WPF and target an older version (4.5-4.7) you'll get the following warnings:\r\n```\r\n2>------ Build started: Project: FormsTestApp.WPF, Configuration: Debug Any CPU ------\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(2052,5): warning MSB3274: The primary reference \"Xamarin.Forms.Core.Design, Version=2.0.0.0, Culture=neutral, processorArchitecture=MSIL\" could not be resolved because it was built against the \".NETFramework,Version=v4.7\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.6.1\".\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(2052,5): warning MSB3274: The primary reference \"Xamarin.Forms.Xaml.Design, Version=2.0.0.0, Culture=neutral, processorArchitecture=MSIL\" could not be resolved because it was built against the \".NETFramework,Version=v4.7\" framework. This is a higher version than the currently targeted framework \".NETFramework,Version=v4.6.1\".\r\n2>  FormsTestApp.WPF -> c:\\apps\\dotnet\\TestApps\\FormsTestApp.WPF\\bin\\Debug\\FormsTestApp.WPF.exe\r\n========== Build: 1 succeeded, 0 failed, 1 up-to-date, 1 skipped ==========\r\n```\r\n### Steps to Reproduce\r\n\r\n1. Create a WPF project targeting 4.6.1\r\n2. Reference `Xamarin.Forms.Platform.WPF.3.0.0.296286-pre2` and the dependencies which only requires 4.5.0\r\n3. Build, and observe the above warnings\r\n\r\n### Expected Behavior\r\nNo warning is generated.\r\n\r\n### Actual Behavior\r\nBuild warnings\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.296286-pre2\r\n- Last known good version:\r\n- IDE: VS2017 (15.5.2)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  -net461\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n```xml\r\n    <PackageReference Include=\"Xamarin.Forms\">\r\n      <Version>3.0.0.296286-pre2</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Xamarin.Forms.Platform.WPF\">\r\n      <Version>3.0.0.296286-pre2</Version>\r\n    </PackageReference>\r\n```\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/1378165/38160384-b6f6d3bc-3471-11e8-8d4f-66ce36cd8744.png)\r\n\r\n"},{"Id":"7460846935","Type":"PullRequestEvent","CreatedAt":"2018-03-30T21:40:59","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2215","RelatedDescription":"Opened pull request \"[Android] Second measurement pass in IPlatform.GetNativeSize \" (#2215) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd a `MeasureSpecMode.Exactly` measurement pass in `IPlatform.GetNativeSize` on Android in cases where the layout size is known but the measured size is less than the constrained area.\r\n\r\n### Bugs Fixed ###\r\n\r\n- #1415 HorizontalTextAlignment=\"Center\" loses alignment when scrolled\r\n- #1396 Label HorizontalTextAlignment (Center or End) is not kept when navigating back to a page\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - public interface  Xamarin.Forms.Platform.Android.IViewRenderer\r\n    * void MeasureExactly();\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7461154624","Type":"PullRequestEvent","CreatedAt":"2018-03-30T23:42:27","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3835","RelatedDescription":"Merged pull request \"Merge xcode 9.3 into d15-7\" (#3835) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7461001394","Type":"IssuesEvent","CreatedAt":"2018-03-30T22:36:02","Actor":"wjk","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3841","RelatedDescription":"Opened issue \"make reset-versions fails on fresh clone\" (#3841) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a fresh clone of xamarin-macios\r\n2. Run `make reset-versions`\r\n3. Wait for make to finish cloning LLVM, then watch it fail.\r\n\r\n### Expected Behavior\r\n\r\n`make` should keep cloning the other dependencies.\r\n\r\n### Actual Behavior\r\n\r\n`make` fails (see error log below). I think this is due to a dependency error between the LLVM and Mono submodules.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 2f7490c4-93db-429d-9511-4b9317c93fbc\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nEditorConfig 1.2\r\nEto.Forms Support Addin 2.4.0.0\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n*** git submodule update --init --recursive --force -- ./external/llvm\r\ncd /Volumes/Sources/xamarin-macios && git submodule update --init --recursive --force -- ./external/llvm\r\nSubmodule path 'external/llvm': checked out 'bdb3a116dbf4a77ef5f6f70d7f845bdaca2b24ca'\r\necho \"DISABLE_ANDROID=1\" > ../external/mono/sdks/Make.config\r\n/bin/sh: ../external/mono/sdks/Make.config: No such file or directory\r\nmake[1]: *** [../external/mono/sdks/Make.config] Error 1\r\nmake: *** [reset-llvm] Error 2\r\n```"},{"Id":"7460806432","Type":"IssuesEvent","CreatedAt":"2018-03-30T21:28:08","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3840","RelatedDescription":"Opened issue \"Getting a nuget restore issue \" error MSB4226: The imported project \"/Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/xbuild/Microsoft/WindowsXaml/v15.0/Microsoft.Windows.UI.Xaml.CSharp.targets\" was not found\"\" (#3840) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Use solution \"https://github.com/xamarin/xamarin-forms-book-samples/tree/master/Chapter01/PlatformVisuals\"\r\n2. Execute \"nuget restore xamarin-forms-book-samples/Chapter01/PlatformVisuals/PlatformVisuals.sln\" from command line\r\n\r\n### Expected Behavior\r\nnugets are successfully restored and able to build the csproj successfully\r\n\r\n### Actual Behavior\r\nnugets fail to restore.\r\nLog: https://gist.github.com/GouriKumari/a5bf48a60b3f9d944fb85ffd7c471d74\r\n.csproj fails to build from command line. \r\n\r\n### Environment\r\nhttps://gist.github.com/GouriKumari/1cd31f769f738061b528f55120639da7\r\n\r\n### Logs\r\nhttps://gist.github.com/GouriKumari/a5bf48a60b3f9d944fb85ffd7c471d74\r\n\r\n##Additional Info:\r\nWith current stable, it works.  Test Env: https://gist.github.com/GouriKumari/21f621582a150ed951c5d63677f2a147\r\n\r\n"},{"Id":"7459903164","Type":"IssuesEvent","CreatedAt":"2018-03-30T17:22:32","Actor":"therealjohn","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3839","RelatedDescription":"Closed issue \"Unable to configure iOS SDK path in Visual Studio 2017\" (#3839) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Tools Menu -> Options -> Xamarin -> iOS Settings\r\n2. Apple SDK Use Default Xcode path is disabled and cannot be selected. It is also unticked. Xcode path is blank.\r\n3. Visual Studio is attempting to locate the SDK at /Applications/Xcode 9.2.app which I have previously configured in this panel. However, I now cannot use this panel to revert the settings.\r\n\r\nIf I try to connect to my Mac the connection fails because xcodebuild cannot be located at this path. And I cannot reset it as the above form is not working.\r\n\r\n### Expected Behavior\r\n\r\nShould be able to reconfigure the SDK path using the form above\r\n\r\n### Actual Behavior\r\n\r\nForms controls are disabled\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.6.4\r\nVisualStudio.15.Release/15.6.4+27428.2015\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-90253-22591-AA071\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-90253-22591-AA071\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-90253-22591-AA071\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.21208.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40322.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.1\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDebugging Tools for Windows   10.0.16292.1001\r\nIntegrates the Windows Debugger functionality (http://go.microsoft.com/fwlink/?linkid=223405) in Visual Studio.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nRedgate ReadyRoll   1.16.18088.9228\r\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\r\n\r\nVisit https://www.red-gate.com/readyroll for more information.\r\n\r\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\r\n\r\nThis software contains components from Component Owl.\r\nSQL Server is a registered trademark of Microsoft Corporation.\r\nVisual Studio is a registered trademark of Microsoft Corporation.\r\n\r\nReadyRoll contains code from the following open source software:\r\n\r\nNuGet https://www.nuget.org/\r\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\r\nAutofac https://autofac.org/\r\nJson.NET https://json.net/\r\nMahApps.Metro http://mahapps.com/\r\nSemVer https://github.com/maxhauser/semver\r\nLog4Net http://logging.apache.org/log4net/\r\nStringTemplate https://github.com/antlr/stringtemplate4\r\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\r\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\r\nOctoPack https://github.com/OctopusDeploy/OctoPack\r\nSQLite https://sqlite.org/\r\n\r\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\r\n\r\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the ReadyRoll application folder.\r\n    \r\n\r\nRedgate SQL Prompt   9.1.5.4619\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Linux Development   1.0.8\r\nVisual C++ for Linux Development\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Unity   3.6.0.5\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Driver Kit   10.0.16292.1001\r\nHeaders, libraries, and tools needed to develop, debug, and test Windows drivers (msdn.microsoft.com/en-us/windows/hardware/gg487428.aspx)\r\n\r\nXamarin   4.9.0.752 (0faa808ee)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.1.28 (3979d08)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"979799673417424907","CreatedAt":"2018-03-30T19:17:00+00:00","UserScreenname":"xamarinhq","Text":"The #XamarinForms 3.0 pre-release is now available! Download and get started today: https://t.co/oMrz45f2XW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":114,"FavoriteCount":85,"RawContent":null},{"Id":"979752111947722753","CreatedAt":"2018-03-30T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/cS0ZDvkieM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":23,"RawContent":null},{"Id":"979078173127331841","CreatedAt":"2018-03-28T19:30:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/2os3iP5NYD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":23,"RawContent":null},{"Id":"979020041961328647","CreatedAt":"2018-03-28T15:39:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/ytWxQJabcG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"978661722415337472","CreatedAt":"2018-03-27T15:55:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/VUSk4VabEQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"978342321241710592","CreatedAt":"2018-03-26T18:46:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/kUritX48ob","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":86,"FavoriteCount":45,"RawContent":null},{"Id":"978300318671917056","CreatedAt":"2018-03-26T15:59:06+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/XR9lZrk3w5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":9,"RawContent":null},{"Id":"978013910426095616","CreatedAt":"2018-03-25T21:01:01+00:00","UserScreenname":"xamarinhq","Text":"Check out the what, why, and how of Mobile #DevOps with #VSAppCenter in this special guest series from @gshackles:… https://t.co/dfcNpP11MG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":26,"RawContent":null},{"Id":"977681217578561536","CreatedAt":"2018-03-24T22:59:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/MDSraESKAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":19,"RawContent":null},{"Id":"977215672307650561","CreatedAt":"2018-03-23T16:09:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/N0vbBblqBW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":20,"RawContent":null},{"Id":"977200551246131200","CreatedAt":"2018-03-23T15:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/int1dSs7We","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"976840931130400768","CreatedAt":"2018-03-22T15:20:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/eRGOmvMMmR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":8,"RawContent":null},{"Id":"976537324434706432","CreatedAt":"2018-03-21T19:13:35+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/OLQs53P4vY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":34,"RawContent":null},{"Id":"976489364602617859","CreatedAt":"2018-03-21T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/lu400TXBl2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":14,"RawContent":null},{"Id":"976110617575780353","CreatedAt":"2018-03-20T14:58:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/FllQaROslT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":100,"FavoriteCount":45,"RawContent":null},{"Id":"975795670622892032","CreatedAt":"2018-03-19T18:06:31+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":14,"RawContent":null},{"Id":"975467903750426626","CreatedAt":"2018-03-18T20:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/oyG6oJ6UN2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":217,"FavoriteCount":90,"RawContent":null},{"Id":"975154821358608384","CreatedAt":"2018-03-17T23:40:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/jHWAbLK0zw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":25,"RawContent":null},{"Id":"974742352538558464","CreatedAt":"2018-03-16T20:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/g1O7qUdDb7 https://t.co/KYZ5XlPeGr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-04-01T05:30:39.6921745Z","RunDurationInMilliseconds":3865}