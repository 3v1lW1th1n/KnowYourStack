{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":143,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8642551835","Type":"PullRequestEvent","CreatedAt":"2018-11-25T08:45:39","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21184","RelatedDescription":"Opened pull request \"[WIP] Fix \"normalize on load\" handling in assertion propagation\" (#21184) at dotnet/coreclr","RelatedBody":""},{"Id":"8642065990","Type":"IssuesEvent","CreatedAt":"2018-11-25T01:27:46","Actor":"Tirraon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21183","RelatedDescription":"Opened issue \"CancellationToken.Register with 'useSynchronizationContext = true' doesn't work on UWP\" (#21183) at dotnet/coreclr","RelatedBody":"Hi.\r\nWhen I try to use CancellationToken.Register with 'useSynchronizationContext = true', it throws \"NotSupportedException: Send is not supported in the Windows Runtime SynchronizationContext\" after token was cancelled. \r\nI think, Exception goes from line [#L669](https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/Threading/CancellationTokenSource.cs#L669)\r\n\r\nI need to run code on UI thread, when token is cancelled, so 'useSynchronizationContext = true' is required for me. \r\nI can pass context manually or invoke Dispather.RunAsync and it will work, but useSynchronizationContext should work also or throw NotSupportedException when Register is invoked, not after token was cancelled, so it can be easier to find the problem."},{"Id":"8642008606","Type":"PullRequestEvent","CreatedAt":"2018-11-25T00:35:19","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21131","RelatedDescription":"Merged pull request \"Fix Interop/PInvoke/Miscellaneous/HandleRef tests under GCStress\" (#21131) at dotnet/coreclr","RelatedBody":"Emit a `GC.KeepAlive` call for the object wrapped in a `HandleRef` when marshalling a `HandleRef` to native code. Also, add an extra `GC.KeepAlive` for an object in the test that needs to live across the call but wasn't referenced after the P/Invoke originally.\r\n\r\nFixes #21115 "},{"Id":"8642008600","Type":"IssuesEvent","CreatedAt":"2018-11-25T00:35:18","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21115","RelatedDescription":"Closed issue \"[Arm/Linux] Interop_PInvoke._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_sh failed with TestLibrary.AssertTestException\" (#21115) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_ubuntu_gcstress0xc_jitstress1_tst/36/\r\n**Failed test:**\r\nInterop_PInvoke._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_sh\r\n\r\n**Failed log:**\r\n```\r\nInterop_PInvoke._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_sh [FAIL]\r\n        /n/nReturn code:      1/nRaw output file:      /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm.Checked/Interop/PInvoke/Reports/Interop.PInvoke/Miscellaneous/HandleRef/HandleRefTest/HandleRefTest.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/corerun HandleRefTest.exe\r\n        MarshalPointer_In\r\n        MarshalPointer_InOut\r\n        MarshalPointer_Out\r\n        TestNoGC\r\n        2\r\n        GC callback now\r\n        Test Failure: TestLibrary.AssertTestException: Assert.AreEqual: Expected: [3000]. Actual: [4000]. The return value is wrong\r\n           at TestLibrary.Assert.AreEqual[T](T expected, T actual, String message) in /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/tests/src/Common/CoreCLRTestLibrary/Assertion.cs:line 414\r\n           at HandleRefTest.Main(String[] args) in /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/tests/src/Interop/PInvoke/Miscellaneous/HandleRef/HandleRefTest.cs:line 78\r\n        Error in Function TestNoGC(Native Client)\r\n        Expected:1000\r\n        Actual:0\r\n        Expected: 100\r\n        Actual: 101\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm.Checked/Tests/Core_Root/n> /ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_gcstress0xc_jitstress1_tst/bin/tests/Linux.arm.Checked/Interop/PInvoke/Miscellaneous/HandleRef/HandleRefTest/HandleRefTest.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm_cross_checked_ubuntu/bin/tests/Linux.arm.Checked/TestWrappers/Interop.PInvoke/Interop.PInvoke.XUnitWrapper.cs(1369,0): at Interop_PInvoke._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_._Miscellaneous_HandleRef_HandleRefTest_HandleRefTest_sh()\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8643335971","Type":"PullRequestEvent","CreatedAt":"2018-11-25T16:57:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10388","RelatedDescription":"Merged pull request \"Update dependency files\" (#10388) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18573.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18573.1\r\n\r\n"},{"Id":"8643332896","Type":"PullRequestEvent","CreatedAt":"2018-11-25T16:56:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10386","RelatedDescription":"Merged pull request \"Typos\" (#10386) at dotnet/cli","RelatedBody":""},{"Id":"8643332054","Type":"IssuesEvent","CreatedAt":"2018-11-25T16:55:43","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10389","RelatedDescription":"Closed issue \"Running all tests in a solution in parallel\" (#10389) at dotnet/cli","RelatedBody":"Hi, I'm trying to run all tests in a given .sln file in parallel, using either ```dotnet test``` or ```dotnet vstest```.\r\n\r\nUsing https://dasmulli.blog/2018/01/20/make-dotnet-test-work-on-solution-files/ I managed to run all the tests, but they are running sequentially.\r\n\r\nI did manage to use vstest to run tests in parallel, but only using .dll files.\r\n\r\nIs there any way to achieve this?\r\n"},{"Id":"8643152265","Type":"IssuesEvent","CreatedAt":"2018-11-25T15:17:03","Actor":"mixandmatch025","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10389","RelatedDescription":"Opened issue \"Running all tests in a solution in parallel\" (#10389) at dotnet/cli","RelatedBody":"Hi, I'm trying to run all tests in a given .sln file in parallel, using either ```dotnet test``` or ```dotnet vstest```.\r\n\r\nUsing https://dasmulli.blog/2018/01/20/make-dotnet-test-work-on-solution-files/ I managed to run all the tests, but they are running sequentially.\r\n\r\nI did manage to use vstest to run tests in parallel, but only using .dll files.\r\n\r\nIs there any way to achieve this?\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8642041876","Type":"PullRequestEvent","CreatedAt":"2018-11-25T01:05:12","Actor":"edwinfrc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/981","RelatedDescription":"Closed pull request \"Release/2.0.0\" (#981) at dotnet/standard","RelatedBody":""},{"Id":"8642041706","Type":"PullRequestEvent","CreatedAt":"2018-11-25T01:05:04","Actor":"edwinfrc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/981","RelatedDescription":"Opened pull request \"Release/2.0.0\" (#981) at dotnet/standard","RelatedBody":""},{"Id":"8641919637","Type":"IssuesEvent","CreatedAt":"2018-11-24T23:17:50","Actor":"verb0se","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/976","RelatedDescription":"Closed issue \"Could not load file or assembly System.Configuration.ConfigurationManager\" (#976) at dotnet/standard","RelatedBody":"Upgrading some .NET Framework projects to Standard 2.0, I've installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet on all projects.  Getting the following error:\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Configuration.ConfigurationManager, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n  \r\nJust to see if the issue might have been due to something with the current solution, I created a new Standard 2.0 console app, installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet as the only dependency, and got the same error.\r\n\r\nFrom the deps.json file:\r\n\r\n\"System.Configuration.ConfigurationManager/4.5.0\": {\r\n        \"dependencies\": {\r\n          \"System.Security.Cryptography.ProtectedData\": \"4.5.0\",\r\n          \"System.Security.Permissions\": \"4.5.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Configuration.ConfigurationManager.dll\": {\r\n            \"assemblyVersion\": \"4.0.1.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n          }\r\n        }\r\n      }\r\n\r\nWe would like to use System.Configuration.ConfigurationManager with our upgrade but I can't seem to load it from a project \r\n"},{"Id":"8633204741","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Merged pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8633148967","Type":"PullRequestEvent","CreatedAt":"2018-11-22T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Opened pull request \"Update dependency files\" (#980) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n"},{"Id":"8628628658","Type":"PullRequestEvent","CreatedAt":"2018-11-21T17:57:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Merged pull request \"Make sure Signing target finds packages to sign\" (#978) at dotnet/standard","RelatedBody":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft @JohnTortugo"},{"Id":"8626741279","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:11:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Merged pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"},{"Id":"8626683193","Type":"PullRequestEvent","CreatedAt":"2018-11-21T13:01:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Opened pull request \"Update dependency files\" (#979) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8643441628","Type":"PullRequestEvent","CreatedAt":"2018-11-25T17:58:54","Actor":"hughbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33688","RelatedDescription":"Opened pull request \"Add more DateTime tests\" (#33688) at dotnet/corefx","RelatedBody":""},{"Id":"8643327088","Type":"PullRequestEvent","CreatedAt":"2018-11-25T16:52:59","Actor":"benaadams","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/33685","RelatedDescription":"Closed pull request \"AwaitableSocketAsyncEventArgs should use UnsafeQueueUserWorkItem\" (#33685) at dotnet/corefx","RelatedBody":"Might even be non-allocating if... https://github.com/dotnet/coreclr/pull/21159 😉 \r\n\r\n/cc @stephentoub @davidfowl "},{"Id":"8643249398","Type":"IssuesEvent","CreatedAt":"2018-11-25T16:09:39","Actor":"dhuyvett","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33677","RelatedDescription":"Closed issue \"Unexpected behavior of HttpClientHandler.ServerCertificateCustomValidationCallback\" (#33677) at dotnet/corefx","RelatedBody":"I have a dotnet core 2.1 application that is doing an explicit DNS lookup before using HttpClient to call the URL with the IP address substituted for the hostname.\r\n\r\nAs expected, for https URLS this results in \r\n\r\n    System.Security.Authentication.AuthenticationException : The remote certificate is invalid according to the validation procedure.\r\n\r\nI add the original hostname to the request in the Host header, and the exception persists.\r\n\r\nI add a trivial ServerCertificateCustomValidationCallback . and the exception is no longer thrown.\r\n\r\n    httpHandler.ServerCertificateCustomValidationCallback = (message, cert, chain, errors) => errors == SslPolicyErrors.None;\r\n\r\nI remove the Host header from the request, or put bad data in that header, and AuthenticationException returns.\r\n\r\nIt appears that the very existence of ServerCertificateCustomValidationCallback changes the way that the HttpClientHandler validates the hostname/certificate match.\r\n\r\nIs this dependable behavior?  Is there a better way in 2.1 to trigger host name validation to prefer the Host header? Is this documented anywhere?  (I haven't been able to find any discussion of the current behavior)"},{"Id":"8643217928","Type":"PullRequestEvent","CreatedAt":"2018-11-25T15:52:57","Actor":"AlexejLiebenthal","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33687","RelatedDescription":"Opened pull request \"Added TryParse to StandardFormat\" (#33687) at dotnet/corefx","RelatedBody":"Fixes issue #32950 \r\n\r\n1. Removed StandardFormat.Parse(string) overload in src/System.Memory/ref/System.Memory.cs\r\n2. Added StandardFormat.TryParse in src/System.Memory/ref/System.Memory.cs\r\n3. Removed StandardFormat.Parse(string) overload in src/Common/src/CoreLib/System/Buffers/StandardFormat.cs\r\n4. Added TryParse in src/Common/src/CoreLib/System/Buffers/StandardFormat.cs\r\n5. Added UnitTests for TryParse in src/System.Memory/tests/ParsersAndFormatters/StandardFormatTests.cs"},{"Id":"8643127781","Type":"IssuesEvent","CreatedAt":"2018-11-25T15:03:43","Actor":"samir105","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33686","RelatedDescription":"Opened issue \"Proposal: Ref returns for container types\" (#33686) at dotnet/corefx","RelatedBody":"It would be nice if it was possible to make index operator of generic container types like list to return ref (So we could write listOfStruct[i].field=value)"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8644461791","Type":"IssuesEvent","CreatedAt":"2018-11-26T02:58:32","Actor":"TessenR","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31368","RelatedDescription":"Closed issue \"Created by mistake\" (#31368) at dotnet/roslyn","RelatedBody":""},{"Id":"8644451122","Type":"IssuesEvent","CreatedAt":"2018-11-26T02:54:40","Actor":"TessenR","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31368","RelatedDescription":"Opened issue \"Recursive pattern matching: incorrect parsing for 'when' keyword\" (#31368) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nBranch C# 8.0: Recursive patterns (6 Nov 2018)\r\n\r\nLatest commit 69c39e by +?imon Kon+?-?ek:\r\nFixing when keyword recommender in recursive patterns branch #2 (#30870)\r\n* Fixing WhenKeywordRecommender to understand var pattern\r\n* Using block body for test methods\r\n* Adding a comment\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n\r\n```cs\r\nusing System;\r\npublic class C {\r\n    public static void Main() \r\n    {\r\n        Console.WriteLine(\"1\");\r\n    }\r\n    public void M(object obj) {\r\n        switch (obj)\r\n        {\r\n            case C { Name: { Length: 5 } when } c: break; // <-- why 'when' is allowed here?\r\n        }\r\n    }\r\n    String Name;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nParsing error - either stating that `when` keyword is not allowed or that it must be followed by an expression. \r\n\r\n**Actual Behavior**:\r\n\r\nThe code compiles and runs.\r\n\r\n**Notes**\r\n\r\nYou can't add anything meaningful to that guard clause e.g. `when true` has the `error CS1003: Syntax error, ',' expected` error so I guess `when` keyword should not be parsed there at all.\r\n"},{"Id":"8644252944","Type":"IssuesEvent","CreatedAt":"2018-11-26T01:34:14","Actor":"miloush","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31367","RelatedDescription":"Opened issue \"Autocompletion for pattern matches in switch \" (#31367) at dotnet/roslyn","RelatedBody":"**Version Used**: VisualStudio.15.Preview/15.9.0-pre.6.0+28307.53\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nswitch (object)\r\n{\r\n    case A a|\r\n}\r\n```\r\nNow hit colon.\r\n\r\n**Expected Behavior**: `case A a:`\r\n\r\n**Actual Behavior**: `case A as:`\r\n\r\nIf I am correct `as` is not a valid syntax at this point, maybe the autocompletion should be in the names suggestion mode?\r\n"},{"Id":"8644111939","Type":"IssuesEvent","CreatedAt":"2018-11-26T00:20:38","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31366","RelatedDescription":"Opened issue \"Multi-targeting context can never work via VSHPROPID_ActiveIntellisenseProjectContext\" (#31366) at dotnet/roslyn","RelatedBody":"In the new language-service integration rewrite, we were told to move over to using VSHPROPID_ActiveIntellisenseProjectContext. \r\n\r\nHow it's supposed to work:\r\n\r\n1. Changing the editor context, causes VSHPROPID_ActiveIntellisenseProjectContext to be set\r\n2. This causes the IVsHierarchy to be set VSHPROPID_ActiveIntellisenseProjectContext\r\n3. This raises an property change event, and causes Roslyn to react to the context change\r\n\r\n\r\nDebugging this, 2 never occurs in VisualStudioWorkspaceImpl.SetContext."},{"Id":"8644104867","Type":"IssuesEvent","CreatedAt":"2018-11-26T00:16:37","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31365","RelatedDescription":"Opened issue \"[Regression] Multi-targeting context is broken in 16.0 Preview 1\" (#31365) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.0.0 Preview 1.0 [28321.56.d16.0]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new Console App (.NET Core) and replace contents with:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net45;net46</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n2. Reload project\r\n3. In Editor, attempt to change context from net45 -> net46 (or vice versa)\r\n4. Click in editor\r\n\r\n**Expected Behavior**:\r\nContext to be changed\r\n\r\n**Actual Behavior**:\r\nContext is flipped back to the previous context.\r\n\r\nThis is a regression from 15.9.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8643461304","Type":"PullRequestEvent","CreatedAt":"2018-11-25T18:10:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6613","RelatedDescription":"Opened pull request \"React to .NET Core 3.0 SDK changes\" (#6613) at dotnet/corert","RelatedBody":"Fixes #6612"},{"Id":"8643023788","Type":"IssuesEvent","CreatedAt":"2018-11-25T14:06:15","Actor":"Fabi","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6612","RelatedDescription":"Opened issue \"FileLoadErrorGeneric: Newtonsoft.Json\" (#6612) at dotnet/corert","RelatedBody":"Hey, today I faced some issues when compiling some of my tools.\r\n\r\nIt get the following error message: `EXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Newtonsoft.Json`\r\n\r\nCommand line used: `dotnet publish -r win-x64 /p:Configuration=Release /p:platform=\"x64\"`\r\nILCompiler pkg: 1.0.0-alpha-27124-01\r\n\r\nSample source: \r\n\r\n```\r\nusing System;\r\n\r\nnamespace jsontest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var test = Newtonsoft.Json.JsonConvert.SerializeObject(new int[5]);\r\n\r\n            Console.WriteLine(test);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncsproj file:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n\t<Platforms>x64</Platforms>\r\n    <PlatformTarget>x64</PlatformTarget>\r\n    <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <RdXmlFile Include=\"rd.xml\" />\r\n  </ItemGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.1-beta2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nrd.xml:\r\n```\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"Newtonsoft.Json\" >\r\n      <Type Name=\"Newtonsoft.Json.Serialization.ObjectConstructor`1[[System.Object,System.Private.CoreLib]]\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\n.NET Core info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009782\r\n Commit:    d07ba39934\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009782\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview-009782 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10772 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27122-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n"},{"Id":"8641634946","Type":"PullRequestEvent","CreatedAt":"2018-11-24T19:53:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6610","RelatedDescription":"Merged pull request \"Delete CORECLR ifdef\" (#6610) at dotnet/corert","RelatedBody":"This ifdef should not be needed anymore."},{"Id":"8641291104","Type":"PullRequestEvent","CreatedAt":"2018-11-24T16:11:51","Actor":"tonerdo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6611","RelatedDescription":"Opened pull request \"[Interpreter] Locals and operators\" (#6611) at dotnet/corert","RelatedBody":"The PR extends the interpreter to support locals and some operator opcodes:\r\n\r\n### Locals\r\n\r\n* stloc.*\r\n* ldloc.*\r\n\r\n### Unary operators\r\n\r\n* not\r\n* neg\r\n* pop\r\n* dup\r\n\r\n### Conversion operators\r\n\r\n* conv.*\r\n* conv.ovf.*\r\n\r\n### Bitwise Shift operators\r\n\r\n* shl\r\n* shr*\r\n\r\nThe CoreCLR interpreter (https://github.com/dotnet/coreclr/blob/master/src/vm/interpreter.cpp) was used as a development reference. However, I'm still not very confident about my implementation of the conversion and bitwise shift operators especially around things relating to type casting and general code structure.\r\n\r\ncc @jkotas @MichalStrehovsky @morganbr \r\n"},{"Id":"8639625792","Type":"PullRequestEvent","CreatedAt":"2018-11-23T20:18:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6610","RelatedDescription":"Opened pull request \"Delete CORECLR ifdef\" (#6610) at dotnet/corert","RelatedBody":"This ifdef should not be needed anymore."},{"Id":"8639278986","Type":"PullRequestEvent","CreatedAt":"2018-11-23T18:02:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6609","RelatedDescription":"Merged pull request \"Implement new math helpers\" (#6609) at dotnet/corert","RelatedBody":"Fixes #6577."},{"Id":"8639278982","Type":"IssuesEvent","CreatedAt":"2018-11-23T18:02:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6577","RelatedDescription":"Closed issue \"Update the native compiler to support the new math functions\" (#6577) at dotnet/corert","RelatedBody":"https://github.com/dotnet/coreclr/pull/20788 added some new functions to `System.Math` and `System.MathF`, we should update the CoreRT native compiler to support these new methods."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1064967345070882817","CreatedAt":"2018-11-20T19:42:55+00:00","UserScreenname":"dotnet","Text":"Find out what's new in F# 4.5 from Phillip Carter (@_cartermp) in this episode of the #OnDotNet show.\n\nhttps://t.co/B5Q1Xt828F","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":35,"RawContent":null},{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":81,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2018-11-26T05:30:29.4493824Z","RunDurationInMilliseconds":7314}