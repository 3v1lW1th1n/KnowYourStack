{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Connect(); 2017 Xamarin and App Center Recap","PublishedOn":"2017-11-17T22:08:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, I am joined by App Center program manager James White. We sit down and cover all of the amazing announcements from this years Connect(); 2017 event. Sit back,...","Href":"https://blog.xamarin.com/podcast-connect-2017-xamarin-app-center-recap/","RawContent":null},{"Title":"Xamarin Announcements from Microsoft Connect(); 2017","PublishedOn":"2017-11-15T16:42:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2017, we shared some very exciting updates related to Visual Studio and Xamarin. We invite you to join us tomorrow and Thursday to see even more during the remainder of...","Href":"https://blog.xamarin.com/xamarin-announcements-microsoft-connect-2017/","RawContent":null},{"Title":"Visual Studio App Center: The Next Generation of Xamarin Test Cloud","PublishedOn":"2017-11-15T13:08:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today at Microsoft Connect(); we announced the launch of Visual Studio App Center, the next generation of Xamarin Test Cloud. App Center brings the power of Xamarin Test Cloud combined with ability to...","Href":"https://blog.xamarin.com/visual-studio-app-center-next-generation-xamarin-test-cloud/","RawContent":null},{"Title":"Microsoft Connect(); 2017 Sessions for Xamarin Developers","PublishedOn":"2017-11-15T12:18:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); 2017 is underway, and there will be a ton of great content for mobile developers over the next three days. To help ensure you catch it all,  we’ve compiled a list of the sessions...","Href":"https://blog.xamarin.com/microsoft-connect-2017-sessions-xamarin-developers/","RawContent":null},{"Title":"Webinar Recording | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-11-14T19:49:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join David Antognoli in this pre-recorded webinar and see how to take your Unity games to the next level with powerful cloud services. He walks through how to connect your apps to Microsoft Azure,...","Href":"https://blog.xamarin.com/webinar-recording-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Adding Sound to a Xamarin.Forms App","PublishedOn":"2017-11-13T20:15:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Audio has many uses in mobile applications. Sounds can be essential to your app; they may notify users of important events or make your app accessible to visually-impaired users. We can also use sound...","Href":"https://blog.xamarin.com/adding-sound-xamarin-forms-app/","RawContent":null},{"Title":".NET Standard Comes to Xamarin.Forms Project Templates!","PublishedOn":"2017-11-10T19:06:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Standard is a formal specification of the .NET APIs that allow you to share even more code across the platforms you target. Xamarin developers are able to use .NET Standard libraries for sharing...","Href":"https://blog.xamarin.com/net-standard-comes-xamarin-forms-project-templates/","RawContent":null},{"Title":"Xamarin and Xamarin University Sessions at Microsoft Connect(); 2017","PublishedOn":"2017-11-09T20:47:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We invite you to join us for Microsoft&#8217;s annual Connect(); developer event, scheduled to stream live online November 15–17, 2017! Save the date now to ensure you don&#8217;t miss a minute of...","Href":"https://blog.xamarin.com/xamarin-xamarin-university-sessions-microsoft-connect-2017/","RawContent":null},{"Title":"Android Oreo Notification Channels","PublishedOn":"2017-11-07T20:52:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important features introduced in Android 8.0 Oreo is notification channels. Notification channels make it possible for you to group notifications so that all notifications posted to a...","Href":"https://blog.xamarin.com/android-oreo-notification-channels/","RawContent":null},{"Title":"Simplified App Signing with Secure Files in Visual Studio Team Services","PublishedOn":"2017-11-06T21:00:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One thing I never want to worry about when building my apps is needing to remember where I stored my provisioning profiles, certificates, and keystores. Thanks to Visual Studio Team Services (VSTS), I...","Href":"https://blog.xamarin.com/simplified-app-signing-secure-files-visual-studio-team-services/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6872901138","Type":"PullRequestEvent","CreatedAt":"2017-11-18T02:40:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/980","RelatedDescription":"Merged pull request \"Add API Level 27.\" (#980) at xamarin/xamarin-android","RelatedBody":"I cannot check if it builds by myself because I never get working build locally. `make clean` should never fail but it never got fixed. And asking to run `git clean -xdf` for developers is a huge no-go."},{"Id":"6872014405","Type":"PullRequestEvent","CreatedAt":"2017-11-17T20:57:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1040","RelatedDescription":"Merged pull request \"[tests] set $(AndroidSdkDirectory) for JI tests\" (#1040) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/pull/211\r\n\r\nFor Windows to set `ANDROID_SDK_PATH` for the Java.Interop unit tests,\r\nwe need to pass `$(AndroidSdkDirectory)` through.\r\n\r\nOtherwise a few tests get skipped in\r\nXamarin.Android.Tools.Bytecode-Tests.dll."},{"Id":"6872002041","Type":"PullRequestEvent","CreatedAt":"2017-11-17T20:54:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1041","RelatedDescription":"Merged pull request \"[tests] fix emulator launch when ANDROID_HOME is set\" (#1041) at xamarin/xamarin-android","RelatedBody":"It appears the installation of Android Studio has exported `ANDROID_HOME`\r\non my system. This is problematic for our build, since it installs a\r\nspecific version of the Android SDK into ~/android-toolchain/sdk.\r\n\r\nThe fix is to set `ANDROID_HOME` for the `emulator` command using the\r\nexisting value for `AndroidSdkHome` from our build. This allows the emulator\r\nto locate the proper system image in ~/android-toolchain/sdk/system-images.\r\nI suspect a similar problem is happening on VSTS, in our monodroid build.\r\n\r\nI also added the `-verbose` flag to the `emulator` command so we will have\r\nmore information if the emulator fails to launch during a build."},{"Id":"6871143397","Type":"PullRequestEvent","CreatedAt":"2017-11-17T17:29:21","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1041","RelatedDescription":"Opened pull request \"[tests] fix emulator launch when ANDROID_HOME is set\" (#1041) at xamarin/xamarin-android","RelatedBody":"It appears the installation of Android Studio has exported `ANDROID_HOME`\r\non my system. This is problematic for our build, since it installs a\r\nspecific version of the Android SDK into ~/android-toolchain/sdk.\r\n\r\nThe fix is to set `ANDROID_HOME` for the `emulator` command using the\r\nexisting value for `AndroidSdkHome` from our build. This allows the emulator\r\nto locate the proper system image in ~/android-toolchain/sdk/system-images.\r\nI suspect a similar problem is happening on VSTS, in our monodroid build.\r\n\r\nI also added the `-verbose` flag to the `emulator` command so we will have\r\nmore information if the emulator fails to launch during a build."},{"Id":"6870509545","Type":"PullRequestEvent","CreatedAt":"2017-11-17T15:24:45","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1040","RelatedDescription":"Opened pull request \"[tests] set $(AndroidSdkDirectory) for JI tests\" (#1040) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/pull/211\r\n\r\nFor Windows to set `ANDROID_SDK_PATH` for the Java.Interop unit tests,\r\nwe need to pass `$(AndroidSdkDirectory)` through.\r\n\r\nOtherwise a few tests get skipped in\r\nXamarin.Android.Tools.Bytecode-Tests.dll."},{"Id":"6870190972","Type":"PullRequestEvent","CreatedAt":"2017-11-17T14:20:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1039","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Apksigner invocation fails on build-tools 25 and lower\" (#1039) at xamarin/xamarin-android","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems?id=525752\r\n\r\nOlder `apksigner` versions did not have an `--in` parameter. Instead\r\nthey expected the last item to be passed to be the .apk to sign.\r\n\r\nSo to make this work on older `apksigner` versions we should rework\r\nthe Task to pass the apk last."},{"Id":"6870174354","Type":"PullRequestEvent","CreatedAt":"2017-11-17T14:17:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1030","RelatedDescription":"Merged pull request \"[Xamarin.Android.Bcl-Tests] Allow Xamarin.Android.NUnitLite.dll path to be overridden\" (#1030) at xamarin/xamarin-android","RelatedBody":"This is required for \"system\" execution on Windows, as there is no 'xbuild-frameworks' folder installed by the XA .vsix. An example framework installation location in VS2017 is shown below:\r\n'C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v1.0'."},{"Id":"6869581525","Type":"PullRequestEvent","CreatedAt":"2017-11-17T11:52:15","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1039","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Apksigner invocation fails on build-tools 25 and lower\" (#1039) at xamarin/xamarin-android","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems?id=525752\r\n\r\nOlder `apksigner` versions did not have an `--in` parameter. Instead\r\nthey expected the last item to be passed to be the .apk to sign.\r\n\r\nSo to make this work on older `apksigner` versions we should rework\r\nthe Task to pass the apk last."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6874329986","Type":"PullRequestEvent","CreatedAt":"2017-11-18T21:43:14","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1290","RelatedDescription":"Opened pull request \"Fix bz60575 again\" (#1290) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd test, and fix the case, when the collection defined by an attached BP has a single element.\r\n\r\n### Bugs Fixed ###\r\n\r\n - some additional cases for 60575\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6874058926","Type":"PullRequestEvent","CreatedAt":"2017-11-18T18:27:39","Actor":"albilaga","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1289","RelatedDescription":"Opened pull request \"Update Platform Create Renderer\" (#1289) at xamarin/Xamarin.Forms","RelatedBody":"\r\n\r\n### Description of Change ###\r\n\r\nPlatform.CreateRenderer(VisualElement element) is marked as obsolete but the replacing method Platform.IVisualElementRenderer CreateRenderer(VisualElement element, Context context) marked as internal so the user can not use it.\r\n\r\n### Bugs Fixed ###\r\n\r\n- \r\n\r\n### API Changes ###\r\nChanged:\r\n - internal static internal static IVisualElementRenderer CreateRenderer(VisualElement element, Context context) => public static IVisualElementRenderer CreateRenderer(VisualElement element, Context context)\r\n\r\n### Behavioral Changes ###\r\n\r\nI don't think there will be any behavioral changes. Just changing the access modifier so the obsolete method can be replaced with the new one.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x ] Rebased on top of master at time of PR\r\n- [x ] Changes adhere to coding standard\r\n- [ x] Consolidate commits as makes sense\r\n"},{"Id":"6873922114","Type":"PullRequestEvent","CreatedAt":"2017-11-18T16:53:39","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1288","RelatedDescription":"Opened pull request \"[iOS] Update status bar color while page is appearing\" (#1288) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\niOS status bar color is being set when View is loading and when `BarTextColor` property changes. This means that if a page is popped off the stack, the status bar color is not syncing with the previous page.\r\n\r\nSee the changes made to bring `ViewWillAppear` into the equation.\r\n\r\nPreviously, users would have to set this color in `OnAppearing` via a message/dependency service call. I'm not sure if the current logic should stay intact or change.\r\n\r\nAlso note that there are other properties in `ViewDidLoad` that could potentially be updated in `ViewWillAppear`.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60716\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6873667266","Type":"PullRequestEvent","CreatedAt":"2017-11-18T13:51:26","Actor":"bentmar","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1287","RelatedDescription":"Opened pull request \"[Android] AppCompat NavigationBar should handle Transluscent Flags\" (#1287) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen using either TransluscentStatus or TransluscentNavigation flags on Android the content will be layed out under the statusbar (not below as it would without them). This PR adds padding to NavigationBar if any of those flags are set. The padding is calculated based on the statusbar height.\r\nNow we can finally use the flags mentioned on android to create stunning looking UI.\r\n\r\nBefore we added a statusbarunderlay = we couldnt layout stuff under the statusbar even with those flags, but that got removed in 2.3.4 (i think). Now the only thing stopping us is the adjusting padding, thats what this PR solves for NavigationBar.\r\n\r\nHere are som images:\r\n\r\n**BEFORE with transluscentNavigation**\r\n![before_trans_nav](https://user-images.githubusercontent.com/10244000/32980857-6fdcd046-cc6e-11e7-863c-de0612f0b4b7.PNG)\r\n\r\n**AFTER with transluscentNavigation**\r\n![after_trans_nav](https://user-images.githubusercontent.com/10244000/32980866-9829702c-cc6e-11e7-805d-72850c54f0e9.PNG)\r\n\r\n**BEFORE with both transluscent statusbar and navigation**\r\n![before_trans_both](https://user-images.githubusercontent.com/10244000/32980876-c04e07a2-cc6e-11e7-9450-d4ad6a25f22d.PNG)\r\n\r\n**After with both transluscent statusbar and navigation**\r\n![after_trans_both](https://user-images.githubusercontent.com/10244000/32980882-d04495ea-cc6e-11e7-86e5-a9392b24cbea.PNG)\r\n\r\n**Drawer looks nice on MDP with trascuscentstatusbar!**\r\n![after_drawer_trans_status](https://user-images.githubusercontent.com/10244000/32980892-041efe3c-cc6f-11e7-9cc1-7f590e30ca09.PNG)\r\n\r\n**Drawer looks nice on MDP with trascuscent flags! (this is KitKat)**\r\n![kitkat_drawer_open](https://user-images.githubusercontent.com/10244000/32980911-43dbfb92-cc6f-11e7-836a-43b37a76b551.PNG)\r\n\r\n**Kitkat with no transluscentflags**\r\n![kitkat_noflags](https://user-images.githubusercontent.com/10244000/32980919-67020652-cc6f-11e7-86a7-6c9774bfa29b.PNG)\r\n\r\n**BEFORE Kitkat with both flags transluscentflags**\r\n![kitkat_before_both](https://user-images.githubusercontent.com/10244000/32980929-90358012-cc6f-11e7-8d7f-a2eb11d93174.PNG)\r\n\r\n\r\n**AFTER Kitkat with both flags transluscentflags**\r\n![kitkat_after_both](https://user-images.githubusercontent.com/10244000/32980922-7536eab2-cc6f-11e7-8bf5-06eda270af94.PNG)\r\n\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X ] Rebased on top of master at time of PR\r\n- [X ] Changes adhere to coding standard\r\n- [X ] Consolidate commits as makes sense\r\n"},{"Id":"6873171787","Type":"PullRequestEvent","CreatedAt":"2017-11-18T06:44:55","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1282","RelatedDescription":"Merged pull request \"[C] fix an issue with netstandard when context type is object\" (#1282) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[C] fix an issue with netstnadard when context type is object\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6870951848","Type":"PullRequestEvent","CreatedAt":"2017-11-17T16:48:53","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1286","RelatedDescription":"Opened pull request \"[UWP] Entry alignment re-adjustment\" (#1286) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOne more removal of bottom alignment re: #1220  to correctly fix placeholder.\r\n\r\n![1](https://user-images.githubusercontent.com/1251024/32958666-27f4e43a-cb8d-11e7-8f0c-c4d6869e7496.JPG)\r\n![2](https://user-images.githubusercontent.com/1251024/32958669-291c33c2-cb8d-11e7-8277-429dbebe2951.JPG)\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60041\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Behavioral Changes ###\r\n\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6869197452","Type":"PullRequestEvent","CreatedAt":"2017-11-17T10:20:02","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1281","RelatedDescription":"Merged pull request \"[XamlC] treat netstandard types as mscorlib\" (#1281) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf the end user project type differs from Core's type, the compiler can\r\nbe confused while comparing base styles, like System.Double.\r\n\r\nthis fixes that by assuming System.Runtime, mscorlib and netstandard\r\ntypes are equivalent (because they are)\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6872438962","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:56:14","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3022","RelatedDescription":"Opened pull request \"Bump mono\" (#3022) at xamarin/xamarin-macios","RelatedBody":"- Picking up fix for https://bugzilla.xamarin.com/show_bug.cgi?id=60540"},{"Id":"6871422459","Type":"PullRequestEvent","CreatedAt":"2017-11-17T18:35:55","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3021","RelatedDescription":"Merged pull request \"[macos] Fix APITest crash due to missing version check\" (#3021) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"932048027908526080","CreatedAt":"2017-11-19T00:49:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/FDIv3uFKZF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":16,"RawContent":null},{"Id":"931551005816311809","CreatedAt":"2017-11-17T15:54:01+00:00","UserScreenname":"xamarinhq","Text":"Day 3 of #MSFTConnect starts NOW! Get FREE live, online training from @XamarinU, streaming all day—join us:… https://t.co/SDurZQlgnh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"931327778301063168","CreatedAt":"2017-11-17T01:07:00+00:00","UserScreenname":"xamarinhq","Text":"Thanks for joining us for Day 2 of #MSFTConnect! Tune in tomorrow for live online training from @XamarinU.","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"931308149457506305","CreatedAt":"2017-11-16T23:49:00+00:00","UserScreenname":"xamarinhq","Text":"It's the last talk of the day at #MSFTConnect! Join Donovan Brown &amp; Jessica Deen for \"#DevOps for Any Language and… https://t.co/BYNjySPV9Y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":10,"RawContent":null},{"Id":"931293552717582336","CreatedAt":"2017-11-16T22:51:00+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @JamesMontemagno takes the stage with \"#Xamarin: The Future of App Development\" at #MSFTConnect at 3 pm P… https://t.co/pLEDlA2VAK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"931279207916650496","CreatedAt":"2017-11-16T21:54:00+00:00","UserScreenname":"xamarinhq","Text":"Don't touch that browser! You've got a choice coming up—\"#CICD #DevOps Pipeline for Mobile Apps and Services\" with… https://t.co/v6YuQuwoS6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"931263355259621376","CreatedAt":"2017-11-16T20:51:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this—join us at 1 pm PT / 4 pm ET on the #MSFTConnect live stream to learn how to \"Ship Five… https://t.co/cXLM0ODYH4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"931236175414784003","CreatedAt":"2017-11-16T19:03:00+00:00","UserScreenname":"xamarinhq","Text":"Can't watch #MSFTConnect live? Check out these #Xamarin-focused on demand videos from the event: https://t.co/6pOPUzJTMN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":8,"RawContent":null},{"Id":"931225857670156288","CreatedAt":"2017-11-16T18:22:00+00:00","UserScreenname":"xamarinhq","Text":"See \"What's New in #XamarinForms\" with @davidortinau in this on demand video from #MSFTConnect: https://t.co/hSAuXQjcYf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":17,"RawContent":null},{"Id":"931205440263938048","CreatedAt":"2017-11-16T17:00:52+00:00","UserScreenname":"xamarinhq","Text":"Don't miss \"A Day in the Life of a Modern #dotNET Developer\" with Scott Hunter, featuring live Q&amp;A, next up at 12 p… https://t.co/age6LgkvjS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":6,"RawContent":null},{"Id":"931189619772805121","CreatedAt":"2017-11-16T15:58:00+00:00","UserScreenname":"xamarinhq","Text":"Day 2 of #MSFTConnect is about to start! Don't know which sessions you should prioritize? Here's our guide to the b… https://t.co/DRguluF5x4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":11,"RawContent":null},{"Id":"930920821035601920","CreatedAt":"2017-11-15T22:09:54+00:00","UserScreenname":"xamarinhq","Text":"That's it for Day 1 of #MSFTConnect! Join us again tomorrow for technical deep dives on today's announcements: https://t.co/kdvGKzBVFW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":6,"RawContent":null},{"Id":"930877295233064961","CreatedAt":"2017-11-15T19:16:56+00:00","UserScreenname":"xamarinhq","Text":"Everything #Xamarin developers should know about from #MSFTConnect, from #VSAppCenter to new #VisualStudio tools:… https://t.co/Z9XxAesS3S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":56,"RawContent":null},{"Id":"930875853751373825","CreatedAt":"2017-11-15T19:11:13+00:00","UserScreenname":"xamarinhq","Text":"#VSAppCenter is the next generation of #Xamarin Test Cloud. Learn more: https://t.co/mjIAHM40mM https://t.co/xQR77mRQiA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":47,"RawContent":null},{"Id":"930874776209543169","CreatedAt":"2017-11-15T19:06:56+00:00","UserScreenname":"xamarinhq","Text":"#MSFTConnect has SO MANY amazing sessions from today through Friday! Not sure where to start? Here's our guide to C… https://t.co/2HHFUNEayR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":7,"RawContent":null},{"Id":"930868754552180737","CreatedAt":"2017-11-15T18:43:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss #Xamarin's @NatFriedman showing you how to build and ship apps faster with C# and #VSAppCenter, live fro… https://t.co/6yKsZl32lU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2017-11-19T05:30:39.1683923Z","RunDurationInMilliseconds":4254}