{"Data":{"Vue":{"Events":[{"Id":"6842502013","Type":"IssuesEvent","CreatedAt":"2017-11-12T02:35:20","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/7047","RelatedDescription":"Closed issue \"Document does not explain several parameters about $watch\" (#7047) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nhttps://vuejs.org/v2/api/#vm-watch\r\n\r\nAbout $watch, the document just mention the options about deep and immediate.\r\n\r\nBut after review the source code, there are four options about ```$watch``` :\r\n\r\n1. deep\r\n2. user\r\n3. lazy\r\n4. sync\r\n\r\n```\r\n  // options\r\n  if (options) {\r\n    this.deep = !!options.deep;\r\n    this.user = !!options.user;\r\n    this.lazy = !!options.lazy;\r\n    this.sync = !!options.sync;\r\n  } else {\r\n    this.deep = this.user = this.lazy = this.sync = false;\r\n  }\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nDocument must talk more about ```sync``` and ```user```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6842464127","Type":"IssuesEvent","CreatedAt":"2017-11-12T02:00:01","Actor":"kitkimwong","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7047","RelatedDescription":"Opened issue \"Document does not explain several parameters about $watch\" (#7047) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nhttps://vuejs.org/v2/api/#vm-watch\r\n\r\nAbout $watch, the document just mention the options about deep and immediate.\r\n\r\nBut after review the source code, there are for options about ```$watch``` :\r\n\r\n1. deep\r\n2. user\r\n3. lazy\r\n4. sync\r\n\r\n```\r\n  // options\r\n  if (options) {\r\n    this.deep = !!options.deep;\r\n    this.user = !!options.user;\r\n    this.lazy = !!options.lazy;\r\n    this.sync = !!options.sync;\r\n  } else {\r\n    this.deep = this.user = this.lazy = this.sync = false;\r\n  }\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nDocument must talk more about ```sync``` and ```user```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6842557206","Type":"PullRequestEvent","CreatedAt":"2017-11-12T03:27:35","Actor":"38elements","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1877","RelatedDescription":"Opened pull request \"Update docs/ja\" (#1877) at vuejs/vue-router","RelatedBody":"\r\n"},{"Id":"6842263366","Type":"IssuesEvent","CreatedAt":"2017-11-11T23:06:17","Actor":"newbie78","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1876","RelatedDescription":"Opened issue \"dynamic path assembly by route name\" (#1876) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nif we have nested routes like this for example:\r\n```\r\nexport let routes = [\r\n  {\r\n    path: '/:lang',\r\n    name: 'Main',\r\n    component: Main,\r\n    children: [\r\n      {\r\n        path: '/cabinet',\r\n        name: 'Cabinet',\r\n        component: Cabinet\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\nin the template, we must call:\r\n<router-link :to=\"{ path:`/${$route.params.lang}/cabinet`}\">Cabinet</router-link>\r\n\r\n### What does the proposed API look like?\r\nwhy you can not specify for this simply named route like this:\r\n<router-link :to=\"{ name: 'Cabinet'}\">Cabinet</router-link>\r\n\r\nmaybe I'm wrong it cook?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6837978561","Type":"IssuesEvent","CreatedAt":"2017-11-10T14:05:56","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1875","RelatedDescription":"Closed issue \"beforeRouteUpdate not called if different route uses same component\" (#1875) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/75563/](https://jsfiddle.net/50wL7mdz/75563/)\r\n\r\n### Steps to reproduce\r\n1 - click first on the router-link \"edit 1\"  \r\n2 - click on router-link \"edit 2\"  \r\n3 - click on router-link \"create\"\r\n\r\n### What is expected?\r\n1) the form component will be first mounted with id = 1  \r\n2) the function beforeRouteUpdate will be called with id = 2  \r\n3) the function beforeRouteUpdate will be called with id = null and isCreate = true\r\n\r\n### What is actually happening?\r\nActually, after clicking the router-link create(step 3), the function beforeRouteUpdate won't be called.\r\n\r\n---\r\nI found out that beforeRouteUpdate will be called only when changing params to the same route, not when changing the whole route.   \r\nBut since i use the same form for editing and creating a resource, wouldn't it be nice  to call beforeRouteUpdate anyway?   \r\nIf it's not possible, is there another way to do it (maybe without watching the $route in the component)?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6837358671","Type":"IssuesEvent","CreatedAt":"2017-11-10T11:30:28","Actor":"Rockson","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1875","RelatedDescription":"Opened issue \"beforeRouteUpdate not called if different route uses same component\" (#1875) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/75563/](https://jsfiddle.net/50wL7mdz/75563/)\r\n\r\n### Steps to reproduce\r\n1 - click first on the router-link \"edit 1\"  \r\n2 - click on router-link \"edit 2\"  \r\n3 - click on router-link \"create\"\r\n\r\n### What is expected?\r\n1) the form component will be first mounted with id = 1  \r\n2) the function beforeRouteUpdate will be called with id = 2  \r\n3) the function beforeRouteUpdate will be called with id = null and isCreate = true\r\n\r\n### What is actually happening?\r\nActually, after clicking the router-link create(step 3), the function beforeRouteUpdate won't be called.\r\n\r\n---\r\nI found out that beforeRouteUpdate will be called only when changing params to the same route, not when changing the whole route.   \r\nBut since i use the same form for editing and creating a resource, wouldn't it be nice  to call beforeRouteUpdate anyway?   \r\nOr is there another way to do it (maybe not watching the $route in the component)?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6841627828","Type":"PullRequestEvent","CreatedAt":"2017-11-11T15:55:17","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1057","RelatedDescription":"Opened pull request \"[zh-cn] synced from #687962b to #8fae0bc\" (#1057) at vuejs/vuex","RelatedBody":"https://github.com/vuejs/vuex/compare/687962b..8fae0bc\r\n/ping @Justineo "},{"Id":"6841603978","Type":"PullRequestEvent","CreatedAt":"2017-11-11T15:39:27","Actor":"mikeRocketVisor","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1056","RelatedDescription":"Opened pull request \"Explained how to use mutations with Vue templates\" (#1056) at vuejs/vuex","RelatedBody":"When learning Vuex, I found this to be a little confusing that 'mutations' were not automatically available just like 'methods' were.  Given the way in which most things with Vue just work 'batteries included,' I think it's important to call this out that the developer must explicitly make mutations available through methods."},{"Id":"6841598531","Type":"PullRequestEvent","CreatedAt":"2017-11-11T15:35:41","Actor":"mikeRocketVisor","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1055","RelatedDescription":"Opened pull request \"Updated to explain getters in more detail\" (#1055) at vuejs/vuex","RelatedBody":"It can be confusing that getters are defined as functions but accessed as properties.  This is explained in greater detail. \r\n\r\nIt also can be confusing how getters can be accessed using Vue templates.  Explanation is provided why it is necessary to mapGetters"},{"Id":"6841543800","Type":"IssuesEvent","CreatedAt":"2017-11-11T14:57:45","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1025","RelatedDescription":"Closed issue \"Vuex mutations not being processed\" (#1025) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://youtu.be/w-CPQ-JGVLc](https://youtu.be/w-CPQ-JGVLc)\r\n\r\n### Steps to reproduce\r\nThe problem seems to be a bit odd as i add an object to an array, it doesn't update getters.\r\nI joined a video to detail the problem a bit more.\r\n\r\n[Problem](https://youtu.be/w-CPQ-JGVLc)\r\n\r\nI have no idea why it works sometimes, and sometimes it doesn't work.\r\nAnd when I commit it using Vue Devtools it works and the rest of the flow works perfectly.\r\nBut for the first it doesn't and it is confusing me so much.\r\nthe getter responsible for getting the custom presentations doesn't get updated at first.\r\n\r\n### What is expected?\r\nEverything is inside the video\r\n\r\n### What is actually happening?\r\nEverything is inside the video\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6841538131","Type":"IssuesEvent","CreatedAt":"2017-11-11T14:53:45","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1008","RelatedDescription":"Closed issue \"If a Promise.all contains multiple asynchronous commits, the logger will only pick up the first one.  \" (#1008) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/lmjzzn18q](https://codesandbox.io/s/lmjzzn18q)\r\n\r\n### Steps to reproduce\r\nApologies. I'm working on proprietary code, so I can't copy/paste the error. This is an error with Vue-logger. \r\n\r\nI have an action called \"updateQueue\" which returns Promise.all([\r\n  asyncAPICall().then(data => commit(types.FOO, data)),\r\n  anotherAsyncAPICall().then(data => commit(types.BAR, data))\r\n])\r\n\r\nIn this case, commit(types.FOO) shows up in the log, but commit(types.BAR) does not.  \r\n\r\nI've tried to reproduce in the fiddle and cannot, probably because the actual API call uses axios.interceptors.request.use to make additional logs? \r\n\r\n### What is expected?\r\nI expect both Commit(types.FOO) and commit(types.BAR) to show up in the console log.\r\n\r\n### What is actually happening?\r\nOnly commit(types.FOO) is logged. \r\n\r\n---\r\nSorry I can't give you the actual code.  When I'm not at work I'll try to resubmit this issue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-12T05:30:34.0105042Z","RunDurationInMilliseconds":2066}