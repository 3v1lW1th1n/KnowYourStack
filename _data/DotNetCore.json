{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 3.0 Preview 7 and Entity Framework 6.3 Preview 7","PublishedOn":"2019-07-23T17:06:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are making new previews ofÂ EF Core 3.0Â andÂ EF 6.3Â available onÂ nuget.org.\n.NET Core 3.0 Preview 7Â andÂ ASP.NET Core 3.0 Preview 7Â were also made available today.\nWe encourage you to install...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-7-and-entity-framework-6-3-preview-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 7","PublishedOn":"2019-07-23T17:00:54+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 7. We&#8217;ve transitioned from creating new features to polishing the release. Expect a singular focus on quality for the remaining preview...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-7/","RawContent":null},{"Title":"Announcing ML.NET 1.2 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-07-17T19:25:46+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We are excited to announce ML.NET 1.2 and updates to Model Builder and the CLI. ML.NET is an open-source and cross-platform machine learning framework for .NET developers. ML.NET also includes Model...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-2-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Write Better Code Faster with Roslyn Analyzers","PublishedOn":"2019-07-10T16:40:11+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Roslyn, the .NET compiler platform, helps you catch bugs even before you run your code. One example is Roslynâ€™s spellcheck analyzer that is built into Visual Studio. Letâ€™s say you are creating a...","Href":"https://devblogs.microsoft.com/dotnet/write-better-code-faster-with-roslyn-analyzers/","RawContent":null},{"Title":".NET Core July 2019 Updates â€“ 2.1.12 and 2.2.6","PublishedOn":"2019-07-09T17:50:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2019/","RawContent":null},{"Title":".NET Framework July 2019 Security and Quality Rollup","PublishedOn":"2019-07-09T17:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1006 â€“Â WCF/WIF SAML Token Authentication Bypass...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Apache Sparkâ„¢ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet tryÂ a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10047192673","Type":"IssuesEvent","CreatedAt":"2019-07-19T16:54:03","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Opened issue \".NET Core master branches have switched to \"5.0\"\" (#118) at dotnet/announcements","RelatedBody":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available."},{"Id":"9971220766","Type":"IssuesEvent","CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Opened issue \"System.Text.Json usability study results\" (#117) at dotnet/announcements","RelatedBody":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies ðŸ˜Š\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304."},{"Id":"9963969636","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:13:39","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Opened issue \"Updates to releases.json (.NET Core release metadata)\" (#116) at dotnet/announcements","RelatedBody":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, msbuild, nuget, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is a partial example of the new array based on the upcoming July update. \r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n  \"sdks\": [\r\n    {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": [\r\n            {\r\n            \"name\": \"\",\r\n            \"rid\": \"\",\r\n            \"url\": \"\",\r\n            \"hash\": \"\"\r\n            }\r\n        ]\r\n    }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the communitiy which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility comprimises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10080220693","Type":"IssuesEvent","CreatedAt":"2019-07-25T04:57:13","Actor":"cskwrd","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25859","RelatedDescription":"Closed issue \"Errors when trying to test coreclr built from source\" (#25859) at dotnet/coreclr","RelatedBody":"I am trying to follow this guide: [Using your .NET Core Runtime Build with dotnet cli](https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/UsingDotNetCli.md)\r\n\r\nI have met the first pre-req. (Meaning I have built the source). I have **NOT** added the latest SDK to my _PATH_, but I have tested using [master](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x64.zip) and [Release/3.0.1XX](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.zip). I can provide all the information pertaining to the release version if needed, but every file and bit of output below is from the master build.\r\n\r\n```powershell\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013411\r\n Commit:    437573d428\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\dotnet-nightly-master\\sdk\\3.0.100-preview8-013411\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28373-17\r\n  Commit:  5d8d5e8661\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.108 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013401 [C:\\dotnet-nightly-master\\sdk]\r\n  3.0.100-preview8-013411 [C:\\dotnet-nightly-master\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19372.3 [C:\\dotnet-nightly-master\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19373.7 [C:\\dotnet-nightly-master\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27919-09 [C:\\dotnet-nightly-master\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\dotnet-nightly-master\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27919-09 [C:\\dotnet-nightly-master\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\dotnet-nightly-master\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nI have made a new directory and entered it: `mkdir coreclr-test; cd coreclr-test`\r\n\r\nI have created the `nuget.config` file, and it looks like:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n\r\n    <add key=\"local CoreCLR\" value=\"C:\\Users\\cskwrd\\Source\\Repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\pkg\" /> <!-- CHANGE THIS PATH to your local output path -->\r\n    <add key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" /> <!-- link to corefx NuGet feed -->\r\n  </packageSources>\r\n</configuration>\r\n\r\n```\r\n\r\nMy `coreclr-test-master.csproj` file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RootNamespace>coreclr_test_master</RootNamespace>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <RuntimeFrameworkVersion>5.0.0-dev.19373.1</RuntimeFrameworkVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"runtime.win-x64.Microsoft.NETCore.Runtime.CoreCLR\" Version=\"5.0.0-dev.19373.1\" />\r\n    <PackageReference Include=\"runtime.win-x64.Microsoft.NETCore.Jit\" Version=\"5.0.0-dev.19373.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nThe output from executing `C:\\dotnet-nightly-master\\dotnet.exe publish`:\r\n```powershell\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19373-03+bd233ed5d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Runtime.win-x64 with version (= 5.0.0-dev.19373.1)\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102:   - Found 93 version(s) in dotnet-core [ Nearest version: 3.0.0-preview4-19177-01 ]\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102:   - Found 0 version(s) in local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.NETCore.App.Host.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\n  Restore failed in 520.34 ms for C:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj.\r\n```\r\n\r\nObviously, those packages don't exist in my nuget pkg directory. I noticed that the version suffix on my built nuget packages is very different than the one mentioned in the guide. Did I miss a step building `coreclr`? Are the steps I am following out of date?\r\n\r\nUltimately, I am trying to step through the process that occurs between executing the assembly  and the invocation of the console app's main method."},{"Id":"10080055469","Type":"PullRequestEvent","CreatedAt":"2019-07-25T04:07:30","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23234","RelatedDescription":null,"RelatedBody":"Fixes #18869\r\n\r\nPreliminary PIN data - 1.34% instruction decrease - https://1drv.ms/x/s!Av4baJYSo5pjgsVn0CgTZP9OSY0gQw\r\n\r\nThis also reduces memory usage by 2.7% - https://gist.github.com/mikedn/a03b5e9218c435858f31390bbd31ee2d"},{"Id":"10080055201","Type":"PullRequestEvent","CreatedAt":"2019-07-25T04:07:25","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23234","RelatedDescription":"Closed pull request \"Improve LclVar sorting throughput\" (#23234) at dotnet/coreclr","RelatedBody":"Fixes #18869\r\n\r\nPreliminary PIN data - 1.34% instruction decrease - https://1drv.ms/x/s!Av4baJYSo5pjgsVn0CgTZP9OSY0gQw\r\n\r\nThis also reduces memory usage by 2.7% - https://gist.github.com/mikedn/a03b5e9218c435858f31390bbd31ee2d"},{"Id":"10079844920","Type":"IssuesEvent","CreatedAt":"2019-07-25T03:06:14","Actor":"Gopinath-mahadevan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25872","RelatedDescription":"Opened issue \"Method enter/exit hook not working for few methods\" (#25872) at dotnet/coreclr","RelatedBody":"I got the core clr profiler from the below link. \r\nhttps://github.com/microsoft/clr-samples/tree/master/ProfilingAPI/ELTProfiler\r\n\r\nI'm trying to find the time taken for execution of all methods. I created a single api .net core web application to test it.\r\n\r\nMethod enter/exit hook is working not working for the function i wrote. \r\n\r\nBelow is the sample code what I'm testing. Here enter hook works for ValuesController.Get method. But enter/exit hook doesn't works for the other methods what I wrote eg: MyTestMethod(), one(), Two(), AppService.getCalssName()\r\n\r\n`using System.Collections.Generic;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\nnamespace SampleApp.Controllers\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class ValuesController : ControllerBase\r\n    {\r\n        // GET api/values\r\n        [HttpGet]\r\n        public ActionResult<IEnumerable<string>> Get()\r\n        {\r\n            AppService app = new AppService();\r\n            One();\r\n            return new string[] { One(), app.getCalssName() };\r\n        }\r\n\r\n        public string MyTestMethod()\r\n        {\r\n            return \"MyTestMethod\";\r\n        }\r\n\r\n        public string One()\r\n        {\r\n            return \"One\";\r\n        }\r\n\r\n        public string Two()\r\n        {\r\n            return \"Two\";\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nI'm not sure what I'm missing.\r\n\r\n"},{"Id":"10079501815","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:31:23","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25871","RelatedDescription":"Opened issue \"Assert failure: m_ThreadCount - m_UnstartedThreadCount - m_DeadThreadCount - Thread::m_ActiveDetachCount + m_PendingThreadCount >= m_BackgroundThreadCount\" (#25871) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190723.1/workItem/baseservices.threading.generics/analysis/xunit/baseservices_threading._generics_WaitCallback_thread08_thread08_~2F_generics_WaitCallback_thread08_thread08_sh\r\n\r\n**Failed tests:**\r\nbaseservices_threading._generics_WaitCallback_thread08_thread08_._generics_WaitCallback_thread08_thread08_sh\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 65967 [0x000101af], Thread: 10643789 [0xa2694d]): m_ThreadCount - m_UnstartedThreadCount - m_DeadThreadCount - Thread::m_ActiveDetachCount + m_PendingThreadCount >= m_BackgroundThreadCount\r\n    File: /Users/vsts/agent/2.154.3/work/1/s/src/vm/threads.h Line: 5160\r\n    Image: /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload/corerun\r\n\r\n/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/generics/WaitCallback/thread08/thread08.sh: line 252: 65967 Abort trap: 6           $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/Reports/baseservices.threading/generics/WaitCallback/thread08/thread08.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload/corerun thread08.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload\r\n> /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/generics/WaitCallback/thread08/thread08.sh\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"10079473943","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:23:24","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25862","RelatedDescription":"Merged pull request \"Fix EventCounter regression test\" (#25862) at dotnet/coreclr","RelatedBody":"Fix #25850. In some unfortunate cases, we might be landing between two exceptions being thrown, and the timer isn't \"perfect\" so it may sleep for a little bit longer than 1 second. That means we may record 2 exceptions.  Plus we have enough delay for 2 additional exceptions to be thrown for the first callback we get because of EventSource.write delay and reflection.\r\n\r\n"},{"Id":"10079473937","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:23:24","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25850","RelatedDescription":"Closed issue \"Test failure: tracing_eventcounter._regression_25709_regression_25709_/_regression_25709_regression_25709_sh\" (#25850) at dotnet/coreclr","RelatedBody":"The test `tracing_eventcounter._regression_25709_regression_25709_/_regression_25709_regression_25709_sh` has failed.\r\n\r\nFailure Message:\r\n```\r\n\r\nReturn code:      1\r\nRaw output file:      /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/Reports/tracing.eventcounter/regression-25709/regression-25709.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\nin takeLock\r\n/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload/crossgen /Platform_Assemblies_Paths /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload:/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709/IL:/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709 /in regression-25709.org /out regression-25709.exe\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image regression-25709.exe generated successfully.\r\nin ReleaseLock\r\nin takeLock\r\n/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload/corerun regression-25709.exe ''\r\nTest Failed - Saw more than 3 exceptions / sec 4\r\nin ReleaseLock\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload\r\n> /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709/regression-25709.sh\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\nStack Trace:\r\n```\r\n   at tracing_eventcounter._regression_25709_regression_25709_._regression_25709_regression_25709_sh() in /__w/2/s/bin/tests/Linux.x64.Release/TestWrappers/tracing.eventcounter/tracing.eventcounter.XUnitWrapper.cs:line 530\r\n```\r\n\r\nBuild : Master - 20190723.2 (Ready-To-Run Tests)\r\nFailing configurations:\r\n- Ubuntu.1604.Amd64\r\n  - x64\r\n\r\nDetails:\r\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fr2r~2Fcli~2F/build/20190723.2/workItem/PayloadGroup0/analysis/xunit/tracing_eventcounter._regression_25709_regression_25709_~2F_regression_25709_regression_25709_sh"},{"Id":"10079453909","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:17:22","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25870","RelatedDescription":"Opened issue \"Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#25870) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190724.1/workItem/System.Security.Cryptography.Cng.Tests/analysis/xunit/System.Security.Cryptography.Cng.Tests.DSACngPkcs8Tests~2FNoPlaintextExportAllowsEncryptedPkcs8(algorithm:%20TripleDes3KeyPkcs12)\r\n\r\n**Log:**\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal error occurred\r\n```\r\n\r\n**Stack Trace:**\r\n```\r\n   at System.Security.Cryptography.CngKey.Create(CngAlgorithm algorithm, String keyName, CngKeyCreationParameters creationParameters)\r\n   at Internal.Cryptography.CngAlgorithmCore.GetOrGenerateKey(Int32 keySize, CngAlgorithm algorithm)\r\n   at System.Security.Cryptography.Cng.Tests.DSACngPkcs8Tests.CreateKey(CngKey& cngKey) in /_/src/System.Security.Cryptography.Cng/tests/DSACngPkcs8Tests.cs:line 14\r\n   at System.Security.Cryptography.Cng.Tests.CngPkcs8Tests`1.NoPlaintextExportAllowsEncryptedPkcs8(PbeEncryptionAlgorithm algorithm) in /_/src/System.Security.Cryptography.Cng/tests/CngPkcs8Tests.cs:line 34\r\n```"},{"Id":"10079449124","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:15:58","Actor":"TIHan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25865","RelatedDescription":"Closed issue \"ILAsm does not support DIMs (Default Interface Methods)\" (#25865) at dotnet/coreclr","RelatedBody":"While ILDasm works on assemblies that have DIMs, it is not possible to re-assemble the IL.\r\n\r\nIL code:\r\n```\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly ClassLibrary1\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 02 00 00 00 00 00 ) \r\n\r\n  .custom instance void [System.Runtime]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string) = ( 01 00 18 2E 4E 45 54 43 6F 72 65 41 70 70 2C 56   // ....NETCoreApp,V\r\n                                                                                                              65 72 73 69 6F 6E 3D 76 33 2E 30 01 00 54 0E 14   // ersion=v3.0..T..\r\n                                                                                                              46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C 61 79   // FrameworkDisplay\r\n                                                                                                              4E 61 6D 65 00 )                                  // Name.\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                      00 00 ) \r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 07 52 65 6C 65 61 73 65 00 00 )             // ...Release..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 07 31 2E 30 2E 30 2E 30 00 00 )             // ...1.0.0.0..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyInformationalVersionAttribute::.ctor(string) = ( 01 00 05 31 2E 30 2E 30 00 00 )                   // ...1.0.0..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                      00 00 ) \r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                    00 00 ) \r\n  .hash algorithm 0x00008004\r\n  .ver 1:0:0:0\r\n}\r\n.module ClassLibrary1.dll\r\n// MVID: {42EF172F-72A5-4FCA-96A6-5454244E5433}\r\n.imagebase 0x10000000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x04EC0000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class interface public abstract auto ansi ILTest.ITest\r\n{\r\n  .method public hidebysig newslot virtual \r\n          instance void  DefaultMethod() cil managed\r\n  {\r\n    // Code size       1 (0x1)\r\n    .maxstack  8\r\n    IL_0000:  ret\r\n  } // end of method ITest::DefaultMethod\r\n\r\n} // end of class ILTest.ITest\r\n\r\n\r\n// =============================================================\r\n\r\n// *********** DISASSEMBLY COMPLETE ***********************\r\n```\r\n\r\nError from ILAsm 2.0.8:\r\n```\r\nMicrosoft (R) .NET Framework IL Assembler.  Version 4.5.22220.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\nAssembling 'dim.il'  to DLL --> 'dim.dll'\r\nSource file is ANSI\r\n\r\ndim.il(54) : warning : Non-virtual, non-abstract instance method in interface, set to such\r\ndim.il(58) : error : Method cannot have body if it is non-static declared in interface abstract\r\nAssembled method ILTest.ITest::DefaultMethod\r\n\r\n***** FAILURE *****\r\n```\r\n\r\nNot a huge deal, but was hoping to write tests for F# DIM consumption support against IL itself."},{"Id":"10079218622","Type":"PullRequestEvent","CreatedAt":"2019-07-25T00:07:55","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25869","RelatedDescription":"Opened pull request \"Remove code and documentation related to the old corefx testing system\" (#25869) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10079648395","Type":"PullRequestEvent","CreatedAt":"2019-07-25T02:13:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11996","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11996) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.11\r\n- **Date Produced**: 7/25/2019 1:37 AM\r\n- **Commit**: 69feac263332424ceccfb673cbf205e31855abdc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"10079523314","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:37:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11996","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11996) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.11\r\n- **Date Produced**: 7/25/2019 1:37 AM\r\n- **Commit**: 69feac263332424ceccfb673cbf205e31855abdc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"10079492529","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:28:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11995","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11995) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190724.06\r\n- **Date Produced**: 7/25/2019 1:28 AM\r\n- **Commit**: 3002d85a81dac020d101a02143f194eb20431cad\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-28374-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10079437778","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:12:38","Actor":"WardenGnaw","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11994","RelatedDescription":"Opened issue \"dotnet restore fails with RuntimeFrameworkVersion specified \" (#11994) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nWhen specified `<RuntimeFrameworkVersion>3.0.0-preview7-27912-14</RuntimeFrameworkVersion>`, `dotnet restore` fails\r\n\r\n## Expected behavior\r\nDownloads `3.0.0-preview7-27912-14` for `Microsoft.NetCore.App.Runtime.linux-arm64` and `3.0.0-preview7.19365.7` for `Microsoft.AspNetCore.App.Runtime.linux-arm64`\r\n\r\n## Actual behavior\r\nErrors with \r\n`Unable to find package Microsoft.AspNetCore.App.Runtime.linux-arm64 with version (= 3.0.0-preview7-27912-14)`\r\n\r\nIt looks like it is using the `RuntimeFrameworkVersion` to download the associated `AspNetCore.App.Runtime`\r\n\r\nFrom msbuild.binlog, the KnownFrameworkReference knows about `3.0.0-preview7.19365.7`, but once its about to be restored, the version range is replaced and uses `3.0.0-preview7-27912-14`.\r\n\r\n**KnownFrameWorkReference:**\r\n![image](https://user-images.githubusercontent.com/3953714/61838220-21834580-ae3d-11e9-8bf0-de6c8a303b6a.png)\r\n\r\n**Restore Task:**\r\n![image](https://user-images.githubusercontent.com/3953714/61838407-f3eacc00-ae3d-11e9-98b8-d0ee17cab0ae.png)\r\n\r\n\r\n## Environment data\r\n<details>\r\n<summary>`dotnet --info` output:</summary>\r\n\r\n<p>\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012821\r\n Commit:    6348f1068a\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /root/dotnet/sdk/3.0.100-preview7-012821/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview7-012821 [/root/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [/root/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [/root/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n</p>\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10079419835","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:07:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11993","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11993) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 8:38 PM\r\n- **Commit**: 54da777b7c978f19327a18e03aab90887d6a210e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"10079324059","Type":"PullRequestEvent","CreatedAt":"2019-07-25T00:38:28","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11992","RelatedDescription":"Merged pull request \"Update CLI's stage0 SDK to 3.0.100-preview8-013422.\" (#11992) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10074907695","Type":"PullRequestEvent","CreatedAt":"2019-07-24T13:11:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1367","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1367) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 11:35 AM\r\n- **Commit**: ca3fe6738ae6afc56e1f8fb5477a57a8dc2e183c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19374.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10074830227","Type":"PullRequestEvent","CreatedAt":"2019-07-24T13:01:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1367","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1367) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 11:35 AM\r\n- **Commit**: ca3fe6738ae6afc56e1f8fb5477a57a8dc2e183c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19374.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10074430233","Type":"PullRequestEvent","CreatedAt":"2019-07-24T12:05:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1366","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1366) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190723.6\r\n- **Date Produced**: 7/23/2019 10:01 PM\r\n- **Commit**: 56b5e5a9debc87b98c5dd394e8a72c916099d9d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19373.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10066385060","Type":"PullRequestEvent","CreatedAt":"2019-07-23T13:11:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1365","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1365) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190722.9\r\n- **Date Produced**: 7/23/2019 8:02 AM\r\n- **Commit**: b58a866ba8709d66eed52bb8ecb13966b7436a1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19372.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10066307213","Type":"PullRequestEvent","CreatedAt":"2019-07-23T13:01:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1365","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1365) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190722.9\r\n- **Date Produced**: 7/23/2019 8:02 AM\r\n- **Commit**: b58a866ba8709d66eed52bb8ecb13966b7436a1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19372.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10065971644","Type":"PullRequestEvent","CreatedAt":"2019-07-23T12:15:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1364","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1364) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190722.10\r\n- **Date Produced**: 7/23/2019 2:43 AM\r\n- **Commit**: 0793e2df782efc9ccae387bc779b2549208fa4a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19372.10\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10065903294","Type":"PullRequestEvent","CreatedAt":"2019-07-23T12:05:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1364","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1364) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190722.10\r\n- **Date Produced**: 7/23/2019 2:43 AM\r\n- **Commit**: 0793e2df782efc9ccae387bc779b2549208fa4a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19372.10\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10080209198","Type":"PullRequestEvent","CreatedAt":"2019-07-25T04:54:00","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39754","RelatedDescription":"Opened pull request \"Add [Obsolete] to vbNewLine\" (#39754) at dotnet/corefx","RelatedBody":"Add `[Obsolete]` to `Microsoft.VisualBasic.Constants.vbNewLine` rather than `vbNarrow` in reference assembly.\r\n\r\n(release/3.0 branch)\r\n"},{"Id":"10080173635","Type":"PullRequestEvent","CreatedAt":"2019-07-25T04:43:19","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39753","RelatedDescription":"Opened pull request \"Add [Obsolete] to vbNewLine\" (#39753) at dotnet/corefx","RelatedBody":"Add `[Obsolete]` to `Microsoft.VisualBasic.Constants.vbNewLine` rather than `vbNarrow`."},{"Id":"10080113230","Type":"IssuesEvent","CreatedAt":"2019-07-25T04:25:16","Actor":"NextTurn","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34578","RelatedDescription":"Reopened issue \"Proposal: YAML support\" (#34578) at dotnet/corefx","RelatedBody":"YAML has become a popular language, even adopted in widely used Microsoft's products such as [Azure Pipelines](https://azure.microsoft.com/en-us/services/devops/pipelines/) and [DocFX](https://dotnet.github.io/docfx/). However, .NET hasn't had built-in APIs or great third-party libraries (like Json.NET) to deal with YAML.\r\n\r\nI suggest a `System.Yaml` namespace (like `System.Xml`) which supports YAML serialization."},{"Id":"10079979669","Type":"PullRequestEvent","CreatedAt":"2019-07-25T03:44:50","Actor":"msftbot[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39681","RelatedDescription":"Merged pull request \"Auto-generate the reference assemblies to normalize them\" (#39681) at dotnet/corefx","RelatedBody":"Auto-generated the reference assemblies using `/t:GenerateReferenceSource` on all projects that already contained a `/ref/` directory.\r\nhttps://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/updating-ref-source.md\r\n\r\n- Sorting alphabetically to be consistent, and fix formatting.\r\n- Fully qualify the types.\r\n- Enums are ordered numerically.\r\n- Follow consistent file name guidelines (fixing the `Utf8String` ref specifically).\r\n- Left `System.Runtime` as is for now other than a cosmetic change.\r\n- Removed nullability annotation from explicit interface implementations (based on discussion with @safern).\r\n\r\nPartially addresses https://github.com/dotnet/corefx/issues/29737\r\n\r\n**There is no additional/removal of APIs in this change. The diff between this PR and master is empty.**"},{"Id":"10079633582","Type":"PullRequestEvent","CreatedAt":"2019-07-25T02:09:16","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39752","RelatedDescription":"Merged pull request \"Only Removing logName which are not actual logs from the geteventlogs  api output\" (#39752) at dotnet/corefx","RelatedBody":"The handle returned on the https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs#L663 is invalid if the user doesnot have access to this log eg non admin trying to access security log.\r\nThe code added in this #38430 ended up removing such logs as well.\r\nThis Pr fixes that problem for release 3.0 branch"},{"Id":"10079612288","Type":"PullRequestEvent","CreatedAt":"2019-07-25T02:03:12","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39740","RelatedDescription":"Merged pull request \"Enable xunit2007 analyzer\" (#39740) at dotnet/corefx","RelatedBody":"Contributes to #39697\r\n\r\nhttps://xunit.net/xunit.analyzers/rules/xUnit2007"},{"Id":"10079596194","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:58:46","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39739","RelatedDescription":"Merged pull request \"Re-enable xUnit2008 (Assert.True with regex)\" (#39739) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/corefx/issues/39697\r\ncc: @ViktorHofer "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10080244240","Type":"PullRequestEvent","CreatedAt":"2019-07-25T05:03:59","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37466","RelatedDescription":"Opened pull request \"Use AnalyzerConfigOptionsProvider when available\" (#37466) at dotnet/roslyn","RelatedBody":""},{"Id":"10080166950","Type":"IssuesEvent","CreatedAt":"2019-07-25T04:41:19","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37465","RelatedDescription":"Opened issue \"Verify that _modelToDetector does not hold objects forever\" (#37465) at dotnet/roslyn","RelatedBody":"https://github.com/dotnet/roslyn/blob/4c171beb0ea8e18e020c1a75bac8e0229e1b4fd5/src/Workspaces/Core/Portable/EmbeddedLanguages/RegularExpressions/LanguageServices/RegexPatternDetector.cs#L74\r\n\r\n`_modelToDetector` is a conditional weak table, where the values in the table have a strong reference to the key. @stephentoub will this pattern prevent the values in the table from ever getting collected?"},{"Id":"10079498070","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:30:19","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37462","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#37462) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10079497229","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:30:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37463","RelatedDescription":"Merged pull request \"Merge master to features/compilerNext\" (#37463) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/compilerNext.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/compilerNext\ngit reset --hard upstream/features/compilerNext\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/compilerNext --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10079457090","Type":"IssuesEvent","CreatedAt":"2019-07-25T01:18:20","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37464","RelatedDescription":"Opened issue \"TestTypeImportCompletion failed in CI\" (#37464) at dotnet/roslyn","RelatedBody":"https://dev.azure.com/dnceng/public/_build/results?buildId=278273&view=ms.vss-test-web.build-test-results-tab&runId=7686360&resultId=100429&paneView=debug\r\n\r\n```\r\nCurrent completion is not hard-selected.\\r\\nExpected: True\\r\\nActual: False\r\n```\r\n\r\n```\r\n  at Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.LegacyTestState.VB$StateMachine_32_AssertSelectedCompletionItem.MoveNext() in /_/src/EditorFeatures/TestUtilities2/Intellisense/LegacyTestState.vb:line 205\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.CSharpCompletionCommandHandlerTests.VB$StateMachine_206_TestTypeImportCompletion.MoveNext() in /_/src/EditorFeatures/Test2/IntelliSense/CSharpCompletionCommandHandlerTests.vb:line 5212\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```"},{"Id":"10079200336","Type":"PullRequestEvent","CreatedAt":"2019-07-25T00:02:41","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37463","RelatedDescription":"Opened pull request \"Merge master to features/compilerNext\" (#37463) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/compilerNext.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/compilerNext\ngit reset --hard upstream/features/compilerNext\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/compilerNext --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10079198215","Type":"PullRequestEvent","CreatedAt":"2019-07-25T00:02:06","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37462","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#37462) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10075705202","Type":"PullRequestEvent","CreatedAt":"2019-07-24T14:46:08","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7649","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7649) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10074275628","Type":"IssuesEvent","CreatedAt":"2019-07-24T11:40:58","Actor":"FrancoisM","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7648","RelatedDescription":"Opened issue \"Build error: nutc_driver.exe returned exit code 1 with VS2019. No others errors. Ok on VS2017\" (#7648) at dotnet/corert","RelatedBody":"My project has built on Azure Pipelines hosted agent for months.\r\nI switched from VS2017 to VS2019. Now it fails with \"nutc_driver.exe returned exit code 1\".\r\n\r\nI read about similar issue saying to use `<Use64BitCompiler>true</Use64BitCompiler>`. I did yet the problem remains. Other issues mention \"Out of memory\" or other errors. In my case, the log doesn't have any other errors but the one I report.\r\n\r\nI tried to uncheck \"native compilation\" but then the build took 2min (instead of over an hour), the app was about 30mb (vs 100mb usually) and would'nt install.\r\n"},{"Id":"10071238618","Type":"PullRequestEvent","CreatedAt":"2019-07-24T02:07:48","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7647","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7647) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang"},{"Id":"10071211706","Type":"PullRequestEvent","CreatedAt":"2019-07-24T02:00:21","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7646","RelatedDescription":"Merged pull request \"Add Linux / Mac ReadyToRun CI testing\" (#7646) at dotnet/corert","RelatedBody":"* Remove Windows_NT only condition on CI R2R test leg\r\n* Use Top200 suite of CoreCLR tests since they reliably pass in R2R mode"},{"Id":"10070567797","Type":"PullRequestEvent","CreatedAt":"2019-07-23T23:02:10","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7647","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7647) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10070181698","Type":"PullRequestEvent","CreatedAt":"2019-07-23T21:42:32","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7646","RelatedDescription":"Opened pull request \"Add Linux / Mac ReadyToRun CI testing\" (#7646) at dotnet/corert","RelatedBody":"* Remove Windows_NT only condition on CI R2R test leg\r\n* Use Top200 suite of CoreCLR tests since they reliably pass in R2R mode"},{"Id":"10070142672","Type":"PullRequestEvent","CreatedAt":"2019-07-23T21:35:44","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7645","RelatedDescription":"Opened pull request \"CoreCLR Pri#1 fixes for the IsManagedSequential method\" (#7645) at dotnet/corert","RelatedBody":"This change fixes all remaining differences between CPAOT\r\nand Crossgen for the CoreCLR Pri#1 tests w.r.t. my recently\r\nimplemented IsManagedSequential instrumentation.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10069979974","Type":"PullRequestEvent","CreatedAt":"2019-07-23T21:09:19","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7644","RelatedDescription":"Merged pull request \"Mechanical move of IsManagedSequentialType to R2R field algorithm\" (#7644) at dotnet/corert","RelatedBody":"Based on JanK's suggestion I'm moving IsManagedSequentialType\r\nto ReadyToRunMetadataFieldLayoutAlgorithm. In this change I'm not\r\nmaking any semantic changes to the method; I'll send out a subsequent\r\nPR for an additional delta fixing discrepancies in the method\r\nas discovered by the instrumentation I recently implemented.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10068515306","Type":"PullRequestEvent","CreatedAt":"2019-07-23T17:32:44","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7633","RelatedDescription":"Merged pull request \"Initial support for IsManagedSequential diffing in SuperIlc\" (#7633) at dotnet/corert","RelatedBody":"This change searches compiler logs for specially formatted sections\r\nproduced by my private CPAOT and Crossgen instrumentation changes\r\nand outputs their lists and diffs between CPAOT and Crossgen.\r\n\r\nI have finally reached almost 100% parity between CPAOT and Crossgen\r\nqueries for the IsManagedSequential type characteristics and I have\r\nalready identified a type with mismatching results. Based on JanK's\r\nsuggestion I assume we should run this through anything we can find\r\nto maximize our confidence in the R2R compiler.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I'm going to send out separate not-for-checkin PR's for the\r\nappropriate CPAOT and Crossgen instrumentations. For SuperIlc,\r\nI believe there's no harm in actually merging the change in."},{"Id":"10067347928","Type":"PullRequestEvent","CreatedAt":"2019-07-23T15:01:01","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7644","RelatedDescription":"Opened pull request \"Mechanical move of IsManagedSequentialType to R2R field algorithm\" (#7644) at dotnet/corert","RelatedBody":"Based on JanK's suggestion I'm moving IsManagedSequentialType\r\nto ReadyToRunMetadataFieldLayoutAlgorithm. In this change I'm not\r\nmaking any semantic changes to the method; I'll send out a subsequent\r\nPR for an additional delta fixing discrepancies in the method\r\nas discovered by the instrumentation I recently implemented.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10061407738","Type":"IssuesEvent","CreatedAt":"2019-07-22T21:15:59","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7643","RelatedDescription":"Opened issue \"Compile static constructors for R2R\" (#7643) at dotnet/corert","RelatedBody":"CPAOT doesn't compile static constructors which has a runtime JIT cost. We should measure with them enabled (rooting them all for compilation) to assess if they give a startup benefit worth the cost of carrying them in the binary."},{"Id":"10061098781","Type":"IssuesEvent","CreatedAt":"2019-07-22T20:29:12","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7642","RelatedDescription":"Opened issue \"Access checks in JIT interface methods\" (#7642) at dotnet/corert","RelatedBody":"The final section of `CEEInfo::getCallInfo` (https://github.com/dotnet/coreclr/blob/5f93d3b1c48ba6916d5f31d79cb7c17d564eecef/src/vm/jitinterface.cpp#L5597) deals with access checks validating the declarative authority of a given caller to call the callee. This is currently missing in the CPAOT compiler. Similar checks needed in `CEEInfo::getFieldInfo`."},{"Id":"10061062403","Type":"IssuesEvent","CreatedAt":"2019-07-22T20:23:51","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7641","RelatedDescription":"Opened issue \"Type Layout Checks\" (#7641) at dotnet/corert","RelatedBody":"To protect system resiliency, Crossgen emits method pre-codes (code that is guaranteed to run once before a given method is executed for the first time) that checks various properties of dependent types outside the version bubble that affect codegen of that particular method. This functionality is currently missing and needs porting into CPAOT."},{"Id":"10060721373","Type":"IssuesEvent","CreatedAt":"2019-07-22T19:33:02","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7605","RelatedDescription":"Closed issue \"Build failing when Adding Npgsql\" (#7605) at dotnet/corert","RelatedBody":"Hello,\r\n\r\nI keep getting the same problem when running the HelloWorld Sample with Npgsql.\r\n\r\nRunning `dotnet publish -r linux-x64 -c Release -v d`\r\n\r\nI get this error during the \"Exec\" task of the publish command: \r\n`Task \"Exec\"\r\n         \"/root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/tools/ilc\" @\"obj/Release/netcoreapp2.1/linux-x64/native/DbPrototype.ilc.rsp\"\r\n         Killed\r\n   1:7>/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27906-01/tools/ilc\" @\"obj/Release/netcoreapp2.1/linux-x64/native/DbPrototype.ilc.rsp\"\" exited with code 137. [/DbPrototype/DbPrototype.fsproj]\r\n       Done executing task \"Exec\" -- FAILED.\r\n   1:7>Done building target \"IlcCompile\" in project \"DbPrototype.fsproj\" -- FAILED.\r\n   1:7>Done Building Project \"/DbPrototype/DbPrototype.fsproj\" (Publish target(s)) -- FAILED.`\r\n\r\n\r\nOS: Ubuntu 18.04 (All pre requisites installed based on [Helloworld sample](https://github.com/dotnet/corert/tree/master/samples/HelloWorld))\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10080059926","Type":"PullRequestEvent","CreatedAt":"2019-07-25T04:08:49","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3436","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.3.0-preview.2.6103 into sdk\" (#3436) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.3.0-preview.2.6103 into sdk master branch"},{"Id":"10079524792","Type":"PullRequestEvent","CreatedAt":"2019-07-25T01:38:16","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3460","RelatedDescription":"Opened pull request \"Don't fail design-time build if runtime pack isn't downloaded\" (#3460) at dotnet/sdk","RelatedBody":"- Fixes #3409\r\n- Fixes test flakiness which prevented #3409 from being caught before checkin\r\n- Adds better error message if runtime pack hasn't been downloaded\r\n- Doesn't also report error finding runtime list if the runtime pack hasn't been downloaded"},{"Id":"10079297628","Type":"PullRequestEvent","CreatedAt":"2019-07-25T00:31:02","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3455","RelatedDescription":"Merged pull request \"Don't reference assemblies from targeting pack with ReferencedByDefault=\"false\"\" (#3455) at dotnet/sdk","RelatedBody":"FYI @dagood @vatsan-madhavan "},{"Id":"10079129622","Type":"PullRequestEvent","CreatedAt":"2019-07-24T23:42:45","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3459","RelatedDescription":"Opened pull request \"Calculate PackageConflictPreferredPackages from KnownFrameworkReference items\" (#3459) at dotnet/sdk","RelatedBody":"This PR currently includes the changes from #3455 which hasn't been merged, it's only the last commit that is actually part of this PR.  I'm sending it now (as a draft PR) to get feedback on it.\r\n\r\nUse `KnownFrameworkReference` metadata to calculate `PackageConflictPreferredPackages` instead of hardcoding.  The hardcoded values were incorrect after the runtime packs had been renamed.\r\n\r\nI haven't figured out a good way to test this, as the behavior would only be observable when you reference a package with an asset that matches the assembly and file versions of the same asset in a runtime pack.  But there's not a good way to determine which package version you would need to reference to line these up."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"472345878","IsPullRequest":false,"CreatedAt":"2019-07-25T04:57:12","Actor":"cskwrd","Number":"25859","RawContent":null,"Title":"Errors when trying to test coreclr built from source","State":"closed","Body":"I am trying to follow this guide: [Using your .NET Core Runtime Build with dotnet cli](https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/UsingDotNetCli.md)\r\n\r\nI have met the first pre-req. (Meaning I have built the source). I have **NOT** added the latest SDK to my _PATH_, but I have tested using [master](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x64.zip) and [Release/3.0.1XX](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.zip). I can provide all the information pertaining to the release version if needed, but every file and bit of output below is from the master build.\r\n\r\n```powershell\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013411\r\n Commit:    437573d428\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\dotnet-nightly-master\\sdk\\3.0.100-preview8-013411\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28373-17\r\n  Commit:  5d8d5e8661\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.108 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013401 [C:\\dotnet-nightly-master\\sdk]\r\n  3.0.100-preview8-013411 [C:\\dotnet-nightly-master\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19372.3 [C:\\dotnet-nightly-master\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19373.7 [C:\\dotnet-nightly-master\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27919-09 [C:\\dotnet-nightly-master\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\dotnet-nightly-master\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27919-09 [C:\\dotnet-nightly-master\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\dotnet-nightly-master\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nI have made a new directory and entered it: `mkdir coreclr-test; cd coreclr-test`\r\n\r\nI have created the `nuget.config` file, and it looks like:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n\r\n    <add key=\"local CoreCLR\" value=\"C:\\Users\\cskwrd\\Source\\Repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\pkg\" /> <!-- CHANGE THIS PATH to your local output path -->\r\n    <add key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" /> <!-- link to corefx NuGet feed -->\r\n  </packageSources>\r\n</configuration>\r\n\r\n```\r\n\r\nMy `coreclr-test-master.csproj` file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RootNamespace>coreclr_test_master</RootNamespace>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <RuntimeFrameworkVersion>5.0.0-dev.19373.1</RuntimeFrameworkVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"runtime.win-x64.Microsoft.NETCore.Runtime.CoreCLR\" Version=\"5.0.0-dev.19373.1\" />\r\n    <PackageReference Include=\"runtime.win-x64.Microsoft.NETCore.Jit\" Version=\"5.0.0-dev.19373.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nThe output from executing `C:\\dotnet-nightly-master\\dotnet.exe publish`:\r\n```powershell\r\nMicrosoft (R) Build Engine version 16.3.0-preview-19373-03+bd233ed5d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.NETCore.App.Runtime.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Runtime.win-x64 with version (= 5.0.0-dev.19373.1)\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102:   - Found 93 version(s) in dotnet-core [ Nearest version: 3.0.0-preview4-19177-01 ]\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1102:   - Found 0 version(s) in local CoreCLR\r\nC:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj : error NU1101: Unable to find package Microsoft.NETCore.App.Host.win-x64. No packages exist with this id in source(s): dotnet-core, local CoreCLR\r\n  Restore failed in 520.34 ms for C:\\Users\\cskwrd\\Source\\Repos\\coreclr-test-master\\coreclr-test-master.csproj.\r\n```\r\n\r\nObviously, those packages don't exist in my nuget pkg directory. I noticed that the version suffix on my built nuget packages is very different than the one mentioned in the guide. Did I miss a step building `coreclr`? Are the steps I am following out of date?\r\n\r\nUltimately, I am trying to step through the process that occurs between executing the assembly  and the invocation of the console app's main method.","Url":"https://github.com/dotnet/coreclr/issues/25859","RelatedDescription":"Closed issue \"Errors when trying to test coreclr built from source\" (#25859)"},{"Id":"472641628","IsPullRequest":false,"CreatedAt":"2019-07-25T03:06:14","Actor":"Gopinath-mahadevan","Number":"25872","RawContent":null,"Title":"Method enter/exit hook not working for few methods","State":"open","Body":"I got the core clr profiler from the below link. \r\nhttps://github.com/microsoft/clr-samples/tree/master/ProfilingAPI/ELTProfiler\r\n\r\nI'm trying to find the time taken for execution of all methods. I created a single api .net core web application to test it. But method enter/exit hook is not working for the function i wrote. \r\n\r\nBelow is the sample code what I'm testing. Here enter hook works for ValuesController.Get method. But enter/exit hook doesn't works for the other methods what I wrote eg: MyTestMethod(), one(), Two(), AppService.getCalssName()\r\n\r\n```\r\nusing System.Collections.Generic;\r\nusing Microsoft.AspNetCore.Mvc;\r\nnamespace SampleApp.Controllers\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class ValuesController : ControllerBase\r\n    {\r\n\r\n        [HttpGet]\r\n        public ActionResult<IEnumerable<string>> Get()\r\n        {\r\n            AppService app = new AppService();\r\n            One();\r\n            return new string[] { One(), app.getCalssName() };\r\n        }\r\n\r\n        public string MyTestMethod()\r\n        {\r\n            return \"MyTestMethod\";\r\n        }\r\n\r\n        public string One()\r\n        {\r\n            return \"One\";\r\n        }\r\n\r\n        public string Two()\r\n        {\r\n            return \"Two\";\r\n        }\r\n    }\r\n}\r\n```\r\nI'm not sure what I'm missing.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25872","RelatedDescription":"Open issue \"Method enter/exit hook not working for few methods\" (#25872)"},{"Id":"472621835","IsPullRequest":false,"CreatedAt":"2019-07-25T01:31:23","Actor":"VincentBu","Number":"25871","RawContent":null,"Title":"Assert failure: m_ThreadCount - m_UnstartedThreadCount - m_DeadThreadCount - Thread::m_ActiveDetachCount + m_PendingThreadCount >= m_BackgroundThreadCount","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190723.1/workItem/baseservices.threading.generics/analysis/xunit/baseservices_threading._generics_WaitCallback_thread08_thread08_~2F_generics_WaitCallback_thread08_thread08_sh\r\n\r\n**Failed tests:**\r\nbaseservices_threading._generics_WaitCallback_thread08_thread08_._generics_WaitCallback_thread08_thread08_sh\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 65967 [0x000101af], Thread: 10643789 [0xa2694d]): m_ThreadCount - m_UnstartedThreadCount - m_DeadThreadCount - Thread::m_ActiveDetachCount + m_PendingThreadCount >= m_BackgroundThreadCount\r\n    File: /Users/vsts/agent/2.154.3/work/1/s/src/vm/threads.h Line: 5160\r\n    Image: /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload/corerun\r\n\r\n/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/generics/WaitCallback/thread08/thread08.sh: line 252: 65967 Abort trap: 6           $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/Reports/baseservices.threading/generics/WaitCallback/thread08/thread08.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload/corerun thread08.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Payload\r\n> /Users/dotnet-bot/dotnetbuild/work/ba3a2847-71b9-4bd3-8a49-252e52aa0800/Work/cae2db5b-63a6-4481-a3c4-4d7c368aacb6/Exec/baseservices/threading/generics/WaitCallback/thread08/thread08.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25871","RelatedDescription":"Open issue \"Assert failure: m_ThreadCount - m_UnstartedThreadCount - m_DeadThreadCount - Thread::m_ActiveDetachCount + m_PendingThreadCount >= m_BackgroundThreadCount\" (#25871)"},{"Id":"472401717","IsPullRequest":true,"CreatedAt":"2019-07-25T01:23:23","Actor":"sywhang","Number":"25862","RawContent":null,"Title":"Fix EventCounter regression test","State":"closed","Body":"Fix #25850. In some unfortunate cases, we might be landing between two exceptions being thrown, and the timer isn't \"perfect\" so it may sleep for a little bit longer than 1 second. That means we may record 2 exceptions.  Plus we have enough delay for 2 additional exceptions to be thrown for the first callback we get because of EventSource.write delay and reflection.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25862","RelatedDescription":"Closed or merged PR \"Fix EventCounter regression test\" (#25862)"},{"Id":"472152233","IsPullRequest":false,"CreatedAt":"2019-07-25T01:23:23","Actor":"AriNuer","Number":"25850","RawContent":null,"Title":"Test failure: tracing_eventcounter._regression_25709_regression_25709_/_regression_25709_regression_25709_sh","State":"closed","Body":"The test `tracing_eventcounter._regression_25709_regression_25709_/_regression_25709_regression_25709_sh` has failed.\r\n\r\nFailure Message:\r\n```\r\n\r\nReturn code:      1\r\nRaw output file:      /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/Reports/tracing.eventcounter/regression-25709/regression-25709.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\nin takeLock\r\n/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload/crossgen /Platform_Assemblies_Paths /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload:/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709/IL:/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709 /in regression-25709.org /out regression-25709.exe\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nNative image regression-25709.exe generated successfully.\r\nin ReleaseLock\r\nin takeLock\r\n/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload/corerun regression-25709.exe ''\r\nTest Failed - Saw more than 3 exceptions / sec 4\r\nin ReleaseLock\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Payload\r\n> /datadisks/disk1/work/1c4d8099-bfaf-43d8-850e-29b355be2f02/Work/b439c451-f47c-4f8c-83a0-709799b7fac9/Exec/tracing/eventcounter/regression-25709/regression-25709.sh\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\nStack Trace:\r\n```\r\n   at tracing_eventcounter._regression_25709_regression_25709_._regression_25709_regression_25709_sh() in /__w/2/s/bin/tests/Linux.x64.Release/TestWrappers/tracing.eventcounter/tracing.eventcounter.XUnitWrapper.cs:line 530\r\n```\r\n\r\nBuild : Master - 20190723.2 (Ready-To-Run Tests)\r\nFailing configurations:\r\n- Ubuntu.1604.Amd64\r\n  - x64\r\n\r\nDetails:\r\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fr2r~2Fcli~2F/build/20190723.2/workItem/PayloadGroup0/analysis/xunit/tracing_eventcounter._regression_25709_regression_25709_~2F_regression_25709_regression_25709_sh","Url":"https://github.com/dotnet/coreclr/issues/25850","RelatedDescription":"Closed issue \"Test failure: tracing_eventcounter._regression_25709_regression_25709_/_regression_25709_regression_25709_sh\" (#25850)"},{"Id":"472619081","IsPullRequest":false,"CreatedAt":"2019-07-25T01:17:21","Actor":"VincentBu","Number":"25870","RawContent":null,"Title":"Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190724.1/workItem/System.Security.Cryptography.Cng.Tests/analysis/xunit/System.Security.Cryptography.Cng.Tests.DSACngPkcs8Tests~2FNoPlaintextExportAllowsEncryptedPkcs8(algorithm:%20TripleDes3KeyPkcs12)\r\n\r\n**Log:**\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal error occurred\r\n```\r\n\r\n**Stack Trace:**\r\n```\r\n   at System.Security.Cryptography.CngKey.Create(CngAlgorithm algorithm, String keyName, CngKeyCreationParameters creationParameters)\r\n   at Internal.Cryptography.CngAlgorithmCore.GetOrGenerateKey(Int32 keySize, CngAlgorithm algorithm)\r\n   at System.Security.Cryptography.Cng.Tests.DSACngPkcs8Tests.CreateKey(CngKey& cngKey) in /_/src/System.Security.Cryptography.Cng/tests/DSACngPkcs8Tests.cs:line 14\r\n   at System.Security.Cryptography.Cng.Tests.CngPkcs8Tests`1.NoPlaintextExportAllowsEncryptedPkcs8(PbeEncryptionAlgorithm algorithm) in /_/src/System.Security.Cryptography.Cng/tests/CngPkcs8Tests.cs:line 34\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25870","RelatedDescription":"Open issue \"Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#25870)"},{"Id":"472474833","IsPullRequest":false,"CreatedAt":"2019-07-25T01:15:58","Actor":"TIHan","Number":"25865","RawContent":null,"Title":"ILAsm does not support DIMs (Default Interface Methods)","State":"closed","Body":"While ILDasm works on assemblies that have DIMs, it is not possible to re-assemble the IL.\r\n\r\nIL code:\r\n```\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly ClassLibrary1\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 02 00 00 00 00 00 ) \r\n\r\n  .custom instance void [System.Runtime]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string) = ( 01 00 18 2E 4E 45 54 43 6F 72 65 41 70 70 2C 56   // ....NETCoreApp,V\r\n                                                                                                              65 72 73 69 6F 6E 3D 76 33 2E 30 01 00 54 0E 14   // ersion=v3.0..T..\r\n                                                                                                              46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C 61 79   // FrameworkDisplay\r\n                                                                                                              4E 61 6D 65 00 )                                  // Name.\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                      00 00 ) \r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 07 52 65 6C 65 61 73 65 00 00 )             // ...Release..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 07 31 2E 30 2E 30 2E 30 00 00 )             // ...1.0.0.0..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyInformationalVersionAttribute::.ctor(string) = ( 01 00 05 31 2E 30 2E 30 00 00 )                   // ...1.0.0..\r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                      00 00 ) \r\n  .custom instance void [System.Runtime]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 0D 43 6C 61 73 73 4C 69 62 72 61 72 79 31   // ...ClassLibrary1\r\n                                                                                                    00 00 ) \r\n  .hash algorithm 0x00008004\r\n  .ver 1:0:0:0\r\n}\r\n.module ClassLibrary1.dll\r\n// MVID: {42EF172F-72A5-4FCA-96A6-5454244E5433}\r\n.imagebase 0x10000000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x04EC0000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class interface public abstract auto ansi ILTest.ITest\r\n{\r\n  .method public hidebysig newslot virtual \r\n          instance void  DefaultMethod() cil managed\r\n  {\r\n    // Code size       1 (0x1)\r\n    .maxstack  8\r\n    IL_0000:  ret\r\n  } // end of method ITest::DefaultMethod\r\n\r\n} // end of class ILTest.ITest\r\n\r\n\r\n// =============================================================\r\n\r\n// *********** DISASSEMBLY COMPLETE ***********************\r\n```\r\n\r\nError from ILAsm 2.0.8:\r\n```\r\nMicrosoft (R) .NET Framework IL Assembler.  Version 4.5.22220.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\nAssembling 'dim.il'  to DLL --> 'dim.dll'\r\nSource file is ANSI\r\n\r\ndim.il(54) : warning : Non-virtual, non-abstract instance method in interface, set to such\r\ndim.il(58) : error : Method cannot have body if it is non-static declared in interface abstract\r\nAssembled method ILTest.ITest::DefaultMethod\r\n\r\n***** FAILURE *****\r\n```\r\n\r\nNot a huge deal, but was hoping to write tests for F# DIM consumption support against IL itself.","Url":"https://github.com/dotnet/coreclr/issues/25865","RelatedDescription":"Closed issue \"ILAsm does not support DIMs (Default Interface Methods)\" (#25865)"},{"Id":"472605162","IsPullRequest":true,"CreatedAt":"2019-07-25T00:07:55","Actor":"BruceForstall","Number":"25869","RawContent":null,"Title":"Remove code and documentation related to the old corefx testing system","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25869","RelatedDescription":"Open PR \"Remove code and documentation related to the old corefx testing system\" (#25869)"},{"Id":"472262693","IsPullRequest":true,"CreatedAt":"2019-07-24T23:35:08","Actor":"dotnet-maestro[bot]","Number":"25855","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.20\r\n- **Date Produced**: 7/24/2019 5:56 AM\r\n- **Commit**: 44932efd33653c0655f17266badee7405229cfed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19373.20\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25855","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25855)"},{"Id":"472573900","IsPullRequest":true,"CreatedAt":"2019-07-24T22:26:00","Actor":"RussKeldorph","Number":"25868","RawContent":null,"Title":"crossgen-comparison CI job","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25868","RelatedDescription":"Open PR \"crossgen-comparison CI job\" (#25868)"},{"Id":"472260527","IsPullRequest":true,"CreatedAt":"2019-07-24T22:23:49","Actor":"dotnet-maestro[bot]","Number":"25854","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 11:35 AM\r\n- **Commit**: ca3fe6738ae6afc56e1f8fb5477a57a8dc2e183c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19374.2\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19374.2\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25854","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25854)"},{"Id":"472559921","IsPullRequest":true,"CreatedAt":"2019-07-24T22:00:01","Actor":"cshung","Number":"25867","RawContent":null,"Title":"Sort debug info to allow diffing","State":"open","Body":"As Simon noted in the code, the NativeVarInfo doesn't come with any order, and it doesn't matter because the debugger is simply doing a linear search on these non-overlapping ranges.\r\n\r\nHowever, when we make changes to debug info generation, we need to be able to compare them. So I added this flag in R2RDump so that we sort them according to the variable number first and then compare by the start offset, that allows the debug info of two R2R binaries to be compared using a simple textual diff tool. For example, I arrived at the conclusion that all the differences are immaterial reordering for #25822 by using this change.\r\n\r\nFYI @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/25867","RelatedDescription":"Open PR \"Sort debug info to allow diffing\" (#25867)"},{"Id":"471910353","IsPullRequest":false,"CreatedAt":"2019-07-24T21:09:01","Actor":"grubioe","Number":"25846","RawContent":null,"Title":"MSB4094 when publishing WPF app with PublishReadyToRun and PublishTrimmed","State":"closed","Body":"@vegardlarsen commented on [Sat Jul 20 2019](https://github.com/dotnet/wpf/issues/1327)\n\n* .NET Core Version: 3.0.100-preview6-012264\r\n* Windows version: Windows 10 version 1903 (OS Build 18362.239)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: N/A\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n \r\nWhen creating a blank WPF app, and setting PublishTrimmed and PublishReadyToRun, you will get a MSB4094 error when publishing the app.\r\n\r\n **Actual behavior:** \r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(281,28): error MSB4094: \"obj\\release\\netcoreapp3.0\\win-x86\\linked\\Microsoft.Win32.Registry.dll;obj\\release\\netcoreapp3.0\\win-x86\\linked\\Microsoft.Win32.Registry.dll\" is an invalid value for the \"CompilationEntry\" parameter of the \"RunReadyToRunCompiler\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [C:\\test\\test.csproj]\r\n```\r\n \r\n **Minimal repro:**\r\n\r\n```\r\ndotnet new wpf --name test\r\n```\r\n\r\nMake the `.csproj` file look like this:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <UseWPF>true</UseWPF>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n    <PublishReadyToRun>true</PublishReadyToRun>\r\n    <RuntimeIdentifier>win-x86</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThen try to publish this project using:\r\n\r\n```\r\ndotnet publish -c release\r\n```\r\n \r\n\n\n---\n\n@grubioe commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1327#issuecomment-514324275)\n\n@jeffschwMSFT - do you know where this should be routed to?  Thanks\n\n---\n\n@jeffschwMSFT commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1327#issuecomment-514325150)\n\nPlease route to dotnet/coreclr\r\n\r\ncc @fadimounir \n\n","Url":"https://github.com/dotnet/coreclr/issues/25846","RelatedDescription":"Closed issue \"MSB4094 when publishing WPF app with PublishReadyToRun and PublishTrimmed\" (#25846)"},{"Id":"472486889","IsPullRequest":true,"CreatedAt":"2019-07-24T19:59:36","Actor":"CoffeeFlux","Number":"25866","RawContent":null,"Title":"Fix test error reporting","State":"open","Body":"I attempted to run the CoreCLR test suite on OSX and a few of the tests hit errors. The mechanism for reporting that appeared to index one layer too deep - with this, it continues and reports them correctly.","Url":"https://github.com/dotnet/coreclr/pull/25866","RelatedDescription":"Open PR \"Fix test error reporting\" (#25866)"},{"Id":"472436541","IsPullRequest":true,"CreatedAt":"2019-07-24T18:39:01","Actor":"sywhang","Number":"25864","RawContent":null,"Title":"Make counters use dedicated thread instead of timer","State":"open","Body":"Another attempt at fixing #25071. When there is a threadpool starvation, counter timer doesn't get fired because of threadpool starvation. Since counters are used to diagnose such an issue, we should make sure counter itself doesn't just aggravate the problem & become useless in such a scenario.\r\n\r\nThis fix creates a dedicated thread used for polling counter values at the interval requested and removes the existing code using timers.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25864","RelatedDescription":"Open PR \"Make counters use dedicated thread instead of timer\" (#25864)"},{"Id":"472422984","IsPullRequest":true,"CreatedAt":"2019-07-24T18:09:09","Actor":"jorive","Number":"25863","RawContent":null,"Title":"Close hPipe when a connection error occurred.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25863","RelatedDescription":"Open PR \"Close hPipe when a connection error occurred.\" (#25863)"},{"Id":"472326149","IsPullRequest":true,"CreatedAt":"2019-07-24T16:13:03","Actor":"Dotnet-GitSync-Bot","Number":"25858","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/25858","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#25858)"},{"Id":"472356993","IsPullRequest":true,"CreatedAt":"2019-07-24T15:43:21","Actor":"NextTurn","Number":"25860","RawContent":null,"Title":"Use Buffer.Memmove in Encoding APIs","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25860","RelatedDescription":"Open PR \"Use Buffer.Memmove in Encoding APIs\" (#25860)"},{"Id":"472323139","IsPullRequest":false,"CreatedAt":"2019-07-24T14:41:01","Actor":"EgorBo","Number":"25857","RawContent":null,"Title":"Math.Round returns different values for the same input.","State":"open","Body":"When mscorlib is prejitted (by default), the platform intrinsics are not used, e.g. `MathF.Round` won't use `SSE` (see https://github.com/dotnet/coreclr/pull/25365). Then as far as I understand, it could be re-compiled for tier1 if it's in a hot method and will use SSE instead). Is it ok that it might start returning different values for the same input? E.g.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading;\r\n\r\npublic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        Thread.Sleep(1000);\r\n\r\n        float x = 0.499999969f;\r\n        for (int i = 0; i < 100; i++)\r\n        {\r\n            // on i=30 iteration it will re-compile MyRound and it will start returning \r\n            // different result for the same x\r\n            Console.WriteLine(MyRound(x));\r\n\r\n            Thread.Sleep(100);\r\n        }\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static float MyRound(float x) => MathF.Round(x);\r\n}\r\n```\r\nOutput is:\r\n```\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n...\r\n```\r\n\r\n/cc @tannergooding ","Url":"https://github.com/dotnet/coreclr/issues/25857","RelatedDescription":"Open issue \"Math.Round returns different values for the same input.\" (#25857)"},{"Id":"472275228","IsPullRequest":true,"CreatedAt":"2019-07-24T13:11:15","Actor":"EgorBo","Number":"25856","RawContent":null,"Title":"JIT: Recognize FMA patterns (x*y+z)","State":"open","Body":"I know, such features certainly require design and discussions, so it's just a do-not-merge PR to show how it could be done (this is how I learn how the RuyJIT actually works ðŸ™‚ thanks to your feedback/comments).\r\nSo the PR teaches JIT to recognize `a * b + c` patterns (see https://github.com/dotnet/coreclr/issues/17541) and replace them with, basically, `Fma.MultiplyAddScalar` intrinsics (depending on signs and types):\r\n\r\n![image](https://user-images.githubusercontent.com/523221/61794095-263dfe80-ae29-11e9-80f0-09c7fd26f47c.png)\r\n\r\n[Benchmark](https://gist.github.com/EgorBo/bbebdfee917e00575c43dafe12f7b5f0#file-fastmathbenchmarks-cs-L31-L52): (Coffee Lake i7 8700K)\r\n\r\n| Method |      Mean | Ratio |\r\n|------- |----------:|------:|\r\n|    Old | 129.41 ns |  1.00 |\r\n|    New |  64.95 ns |  0.50 |\r\n\r\nSo it morphs:\r\n```asm\r\nfgMorphTree BB01, stmt 1 (before)\r\n    [000005] ------------              *  RETURN    float \r\n    [000004] ------------              \\--*  ADD       float \r\n    [000002] ------------                 +--*  MUL       float \r\n    [000000] ------------                 |  +--*  LCL_VAR   float  V01 arg1     \r\n    [000001] ------------                 |  \\--*  LCL_VAR   float  V02 arg2      \r\n    [000003] ------------                 \\--*  LCL_VAR   float  V03 arg3       \r\n```\r\ninto\r\n```asm\r\nfgMorphTree BB01, stmt 1 (after)\r\n    [000005] -----+------              *  RETURN    float \r\n    [000014] -----+------              \\--*  HWIntrinsic float  float ToScalar\r\n    [000013] -----+------                 \\--*  HWIntrinsic simd16 float MultiplyAddScalar\r\n    [000012] -----+------                    \\--*  LIST      void  \r\n    [000007] -----+------                       +--*  HWIntrinsic simd16 float CreateScalarUnsafe\r\n    [000000] -----+------                       |  \\--*  LCL_VAR   float  V01 arg1         \r\n    [000011] ------------                       \\--*  LIST      void  \r\n    [000008] -----+------                          +--*  HWIntrinsic simd16 float CreateScalarUnsafe\r\n    [000001] -----+------                          |  \\--*  LCL_VAR   float  V02 arg2         \r\n    [000010] ------------                          \\--*  LIST      void  \r\n    [000009] -----+------                             \\--*  HWIntrinsic simd16 float CreateScalarUnsafe\r\n    [000003] -----+------                                \\--*  LCL_VAR   float  V03 arg3         \r\n```\r\n(`Math.FusedMultiplyAdd()` generates the same IR tree)\r\n\r\nHowever, I suspect this transformation should be done in `lower.cpp` instead (I tried but it was too complicated to figure out how to do that)\r\n\r\n## Issues\r\n```csharp\r\nstatic double NoMadd(double a, double b, double c, out double z)\r\n{\r\n    z = a * b;         // a * b\r\n    return a * b + c;  // z + c\r\n}\r\n```\r\n^ currently generates `mul` and `fmadd` here instead of `mul` and `add` because, I suspect, CSE happens after morphing (moving this transformation to lowering will help).\r\n\r\n  <br/>\r\n  \r\n```csharp\r\nstatic float Madd(float a)\r\n{\r\n    return a * a + a;\r\n}\r\n```\r\n^ generates redundant movs. (while could be just `vfmadd231ss  xmm0, xmm0, xmm0`) - jit-diff shows some size regressions because of that.\r\n\r\nAlso, If an FMADD candidate is prejitted (R2R'd) then if we re-compile it with FMA it might return different values for the same input (however, it already happens in .NET Core: https://github.com/dotnet/coreclr/issues/25857)\r\n  <br/>\r\n\r\nPS: `mono` supports it thanks to `LLVM` (if `-fp-contract=fast` is set) see https://twitter.com/EgorBo/status/1063468884257316865/photo/1\r\n","Url":"https://github.com/dotnet/coreclr/pull/25856","RelatedDescription":"Open PR \"JIT: Recognize FMA patterns (x*y+z)\" (#25856)"},{"Id":"472253668","IsPullRequest":true,"CreatedAt":"2019-07-24T12:25:10","Actor":"dotnet-maestro[bot]","Number":"25853","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190723.6\r\n- **Date Produced**: 7/23/2019 10:01 PM\r\n- **Commit**: 56b5e5a9debc87b98c5dd394e8a72c916099d9d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19373.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19373.6\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25853","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#25853)"},{"Id":"472172517","IsPullRequest":false,"CreatedAt":"2019-07-24T09:21:23","Actor":"Zonciu","Number":"25852","RawContent":null,"Title":"Struct value doesn't initialize correctly on .NET Framework target","State":"open","Body":"By adding redundant type cast, `Vec2` gets correct result.\r\n## S1 (bug)\r\n```\r\n    public struct S1\r\n    {\r\n        public Vector2 Vec2;\r\n\r\n        public S1_1 A;\r\n\r\n        public S1(Vector2 p, float a)\r\n        {\r\n            Vec2 = p;\r\n            A = new S1_1(a);\r\n        }\r\n    }\r\n\r\n    public struct S1_1\r\n    {\r\n        public float A;\r\n\r\n        public float B;\r\n\r\n        public S1_1(float a)\r\n        {\r\n            A = (float) Math.Cos(a);\r\n            B = (float) Math.Sin(a);\r\n        }\r\n\r\n        public Vector2 GetVector2()\r\n        {\r\n            return new Vector2(A, B);\r\n        }\r\n    }\r\n```\r\n## S2 (ok)\r\n```\r\n    public struct S2\r\n    {\r\n        public Vector2 Vec2;\r\n\r\n        public S2_1 A;\r\n\r\n        public S2(Vector2 p, float a)\r\n        {\r\n            Vec2 = p;\r\n            A = new S2_1(a);\r\n        }\r\n    }\r\n\r\n    public struct S2_1\r\n    {\r\n        public float A;\r\n\r\n        public float B;\r\n\r\n        public S2_1(float a)\r\n        {\r\n            A = (float) Math.Cos(a);\r\n            B = (float) Math.Sin(a);\r\n        }\r\n\r\n        public Vector2 GetVector2()\r\n        {\r\n            return new Vector2((float) A, (float) B);\r\n        }\r\n    }\r\n```\r\n```\r\n    internal class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            {\r\n                var s = new S1(Vector2.Zero, 0.34324f);\r\n                s.Vec2 = s.A.GetVector2();\r\n                Console.WriteLine($\"s1.Vec2 == s1.A.GetVector2() {s.Vec2} == {s.A.GetVector2()}: {s.Vec2 == s.A.GetVector2()}\");\r\n            }\r\n            {\r\n                var s = new S1(Vector2.Zero, 0.34324f);\r\n                s.Vec2 = new Vector2(s.A.A, s.A.B);\r\n                Console.WriteLine($\"s1.Vec2 == s1.A.GetVector2() {s.Vec2} == {s.A.GetVector2()}: {s.Vec2 == s.A.GetVector2()}\");\r\n            }\r\n            {\r\n                var s = new S2(Vector2.Zero, 0.34324f);\r\n                s.Vec2 = s.A.GetVector2();\r\n                Console.WriteLine($\"s2.Vec2 == s2.A.GetVector2() {s.Vec2} == {s.A.GetVector2()}: {s.Vec2 == s.A.GetVector2()}\");\r\n            }\r\n            {\r\n                var s = new S2(Vector2.Zero, 0.34324f);\r\n                s.Vec2 = new Vector2(s.A.A, s.A.B);\r\n                Console.WriteLine($\"s1.Vec2 == s1.A.GetVector2() {s.Vec2} == {s.A.GetVector2()}: {s.Vec2 == s.A.GetVector2()}\");\r\n            }\r\n        }\r\n    }\r\n```\r\n## Test results\r\n\r\nReproduction project: [BugTest.zip](https://github.com/dotnet/coreclr/files/3425749/BugTest.zip)\r\n\r\nTested version:\r\n\r\n| net472 fx | net472 | net461 | 3.0 | 2.2 | 2.1 |\r\n| --------- | ------ | ------ | --- | --- | --- |\r\n| - | bug | bug | - | - | - |\r\n\r\n* NETCore3.0 (SDK 3.0.100-preview7-012821)\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.33653986> == <0.9416692, 0.33653986>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.33653986> == <0.9416692, 0.33653986>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.33653986> == <0.9416692, 0.33653986>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.33653986> == <0.9416692, 0.33653986>: True\r\n```\r\n\r\n* NETCore2.2\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\n```\r\n\r\n* NETCore2.1\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\n```\r\n\r\n* NET472 - dotnet\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <-4.630952E+21, 4.591074E-41> == <0.9416692, 0.3365399>: False\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\n```\r\n\r\n* NET461 - dotnet\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <-4.649399E+21, 4.591074E-41> == <0.9416692, 0.3365399>: False\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\n```\r\n\r\n\r\n* NET472 Fx - msbuild\r\n```\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns2.Vec2 == s2.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\ns1.Vec2 == s1.A.GetVector2() <0.9416692, 0.3365399> == <0.9416692, 0.3365399>: True\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25852","RelatedDescription":"Open issue \"Struct value doesn't initialize correctly on .NET Framework target\" (#25852)"},{"Id":"472167243","IsPullRequest":false,"CreatedAt":"2019-07-24T09:10:31","Actor":"k15tfu","Number":"25851","RawContent":null,"Title":"Block signals when using libunwind","State":"open","Body":"Hi!\r\n\r\nHere is the problem I was talking about a week ago: RaiseException() uses your bundled libunwind, which has mutex to protect struct dwarf_rs_cache in find_reg_state(). AFAIK libunwind has reentrancy protection, but it's under CONFIG_BLOCK_SIGNALS flag, which is turn off in coreclr. Thus, without this flag, I get the following deadlock:\r\n```\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n__lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n135     ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S: No such file or directory.\r\n(gdb) bt\r\n#0  __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n#1  0x00007f4c98537023 in __GI___pthread_mutex_lock (mutex=0x7f4c97298378 <local_addr_space+88>)\r\n    at ../nptl/pthread_mutex_lock.c:78\r\n#2  0x00007f4c96f7a938 in _ULx86_64_dwarf_step ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#3  0x00007f4c96f74cb1 in _ULx86_64_step ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#4  0x00007f4c96f37613 in PAL_VirtualUnwind ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#5  0x00007f4c96ce5c3b in LazyMachState::unwindLazyState(LazyMachState*, MachState*, unsigned int, int, HostCallPreference) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#6  0x00007f4c96b71556 in HelperMethodFrame::InsureInit(bool, MachState*, HostCallPreference) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#7  0x00007f4c96b714b2 in HelperMethodFrame::GetFunction() ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#8  0x00007f4c96bc7b16 in StackFrameIterator::ProcessCurrentFrame() ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#9  0x00007f4c96bc8fa4 in StackFrameIterator::NextRaw() ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#10 0x00007f4c96bc8688 in StackFrameIterator::Filter() ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#11 0x00007f4c96bc742b in StackFrameIterator::Init(Thread*, Frame*, REGDISPLAY*, unsigned int) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#12 0x00007f4c96bc716f in Thread::StackWalkFramesEx(REGDISPLAY*, StackWalkAction (*)(CrawlFrame*, void*), void*, unsigned int, Frame*) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#13 0x00007f4c96bc759c in Thread::StackWalkFrames(StackWalkAction (*)(CrawlFrame*, void*), void*, unsigned int, Frame*) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#14 0x00007f4c96c7d93e in ProfToEEInterfaceImpl::DoStackSnapshotHelper(Thread*, _PROFILER_STACK_WALK_DATA*, unsigned int, _CONTEXT*) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#15 0x00007f4c96c7d809 in ProfToEEInterfaceImpl::DoStackSnapshot(unsigned long, int (*)(unsigned long, unsigned long, unsigned long, unsigned int, unsigned char*, void*), unsigned int, void*, unsigned char*, unsigned int) ()\r\n   from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n...\r\n#26 0x00007f4c8ea27516 in do_sample (signum=27, info=0x7fff7b46d3b0, ucontext=0x7fff7b46d280)\r\n    at ???:???\r\n#27 <signal handler called>\r\n#28 __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135\r\n#29 0x00007f4c98537098 in __GI___pthread_mutex_lock (mutex=0x7f4c98b78990 <_rtld_global+2352>) at ../nptl/pthread_mutex_lock.c:113\r\n#30 0x00007f4c97962deb in __GI___dl_iterate_phdr (callback=0x7f4c96f7c790 <_ULx86_64_dwarf_callback>, data=0x7fff7b46d978) at dl-iteratephdr.c:40\r\n#31 0x00007f4c96f7cdce in _ULx86_64_dwarf_find_proc_info () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#32 0x00007f4c96f7ab02 in _ULx86_64_dwarf_step () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#33 0x00007f4c96f74cb1 in _ULx86_64_step () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so #34 0x00007f4c96f37613 in PAL_VirtualUnwind () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#35 0x00007f4c96f37a38 in RaiseException () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so #36 0x00007f4c96b62d93 in RaiseTheExceptionInternalOnly(Object*, int, int) () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#37 0x00007f4c96c5a0e0 in IL_Throw(Object*) () from /home/user/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.1.11/runtimes/linux-x64/native/libcoreclr.so\r\n#38 0x00007f4c1db1516a in ?? ()\r\n#39 0x00007fff7b46e770 in ?? ()\r\n#40 0x000000630000029a in ?? ()\r\n#41 0x0000000000000000 in ?? ()\r\n```\r\n\r\ncc @davmason @janvorli ","Url":"https://github.com/dotnet/coreclr/issues/25851","RelatedDescription":"Open issue \"Block signals when using libunwind\" (#25851)"},{"Id":"472089459","IsPullRequest":false,"CreatedAt":"2019-07-24T05:43:24","Actor":"ddobrev","Number":"25849","RawContent":null,"Title":"Returning a UTF-8 string from unmanaged code","State":"open","Body":"How should UTF-8 strings be returned from C++ code? Does:\r\n\r\n```cs\r\n[return: MarshalAs(UnmanagedType.LPUTF8Str)]\r\npublic static extern string function();\r\n```\r\n\r\nalways work or should we use IntPtr + manual marshalling for most cases? In case it's the latter, why isn't [Marshal.PtrToStringUTF8](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.ptrtostringutf8?view=netstandard-2.1) available in .NET Framework too?","Url":"https://github.com/dotnet/coreclr/issues/25849","RelatedDescription":"Open issue \"Returning a UTF-8 string from unmanaged code\" (#25849)"},{"Id":"472079857","IsPullRequest":true,"CreatedAt":"2019-07-24T05:01:49","Actor":"jakobbotsch","Number":"25848","RawContent":null,"Title":"Generate RIP-relative jmp for tailcalls on x64","State":"open","Body":"Every tailcall is currently emitted using `mov rax, dest` followed by a `rex.jmp rax`. This changes direct tail-calls to use a RIP-relative jump.\r\n\r\ncc @jashook @AndyAyersMS @RussKeldorph","Url":"https://github.com/dotnet/coreclr/pull/25848","RelatedDescription":"Open PR \"Generate RIP-relative jmp for tailcalls on x64\" (#25848)"},{"Id":"472074625","IsPullRequest":false,"CreatedAt":"2019-07-24T04:35:45","Actor":"AdamSpeight2008","Number":"25847","RawContent":null,"Title":"IL Opcode for Range and Bound Checks","State":"open","Body":"Should we consider adding an opcode for;\r\nrange (`lowest <= value <= highest`) and\r\nbound (`lowest<=value < highest `).\r\nThen let the underlying runtime / jit / compiler take care of how it it is handled?\r\nEg the cpu has a dedicated range comparison instruction.  \r\n\r\nIt would take three arguments, (Value, Lowest, Highest) then set Equals flag to true if in the value, otherwise set NotEquals flag to true. The IL produce by the compiler (such as Roslyn) would shorter.\r\n```vbnet\r\n    Function IsWithin(Value As Int32, Lowest As Int32, Highest As Int32) As Boolean\r\n    Return (Lowest <= Value) And (Value<=Highest)\r\n    End Function  \r\n```\r\n```il\r\n        IL_0000: ldarg.1\r\n        IL_0001: ldarg.0\r\n        IL_0002: cgt\r\n        IL_0004: ldc.i4.0\r\n        IL_0005: ceq\r\n        IL_0007: ldarg.0\r\n        IL_0008: ldarg.2\r\n        IL_0009: cgt\r\n        IL_000b: ldc.i4.0\r\n        IL_000c: ceq\r\n        IL_000e: and\r\n        IL_000f: ret\r\n```\r\nwould become\r\n```il\r\n        IL_0000: ldarg.0\r\n        IL_0001: ldarg.1\r\n        IL_0002: ldarg.2\r\n        IL_0003: range   ' result is push onto stack\r\n        IL_0005: ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25847","RelatedDescription":"Open issue \"IL Opcode for Range and Bound Checks\" (#25847)"},{"Id":"471843949","IsPullRequest":true,"CreatedAt":"2019-07-23T22:38:50","Actor":"jorive","Number":"25845","RawContent":null,"Title":"Avoid AV when `EventPipeSession::m_pFile` is nullptr.","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25845","RelatedDescription":"Closed or merged PR \"Avoid AV when `EventPipeSession::m_pFile` is nullptr.\" (#25845)"},{"Id":"471814690","IsPullRequest":true,"CreatedAt":"2019-07-23T16:58:04","Actor":"josalem","Number":"25844","RawContent":null,"Title":"Allow for interface implementations in EventSource.WriteEventVarArgs","State":"open","Body":"A catch all solution that should address dotnet/corefx#39431 as well as #20493.\r\n\r\nThis should allow for implementations of interfaces to be used with calls to `WriteEvent` rather than having the type check fail.\r\n\r\nThis should align the functionality with the behavior described in the comments at the top of `EventSource`\r\nhttps://github.com/dotnet/coreclr/blob/95c0dd13c80f96f450b959ed8e0df56753a82f70/src/System.Private.CoreLib/shared/System/Diagnostics/Tracing/EventSource.cs#L51-L70\r\n\r\nCurrently, interface implementations will fail and cause additional work to be done and additional logging which reduces performance and is not the expected behavior.\r\n\r\nCC - @brianrob ","Url":"https://github.com/dotnet/coreclr/pull/25844","RelatedDescription":"Open PR \"Allow for interface implementations in EventSource.WriteEventVarArgs\" (#25844)"},{"Id":"471813459","IsPullRequest":false,"CreatedAt":"2019-07-23T16:56:09","Actor":"adamsitnik","Number":"25843","RawContent":null,"Title":"Potential performance regression: Process.GetCurrentProcess() on Windows","State":"open","Body":"It looks like `Process.GetCurrentProcess()` have regressed on Windows.\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\ncd performance\r\n# if you don't have cli installed and want python script to download the latest cli for you\r\npy .\\scripts\\benchmarks_ci.py -f netcoreapp2.2 netcoreapp3.0 --filter System.Diagnostics.Perf_Process.GetCurrentProcess\r\n# if you do\r\ndotnet run -p .\\src\\benchmarks\\micro\\MicroBenchmarks.csproj -c Release -f netcoreapp2.2 --runtimes netcoreapp2.2 netcoreapp3.0 --filter System.Diagnostics.Perf_Process.GetCurrentProcess\r\n```\r\n\r\nIt's also suprising that the method is 4 times slower on Ubuntu 18 compared to Ubuntu 16.\r\n\r\n## System.Diagnostics.Perf_Process.GetCurrentProcess\r\n\r\n| conclusion |   Base |   Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | ------:| ------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 445.90 | 459.75 |      0.97 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     |  85.47 | 105.94 |      0.81 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 165.85 | 202.40 |      0.82 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 792.90 | 812.41 |      0.98 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 119.86 | 130.78 |      0.92 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 100.94 | 127.77 |      0.79 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     |  77.25 |  97.51 |      0.79 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     |  94.54 | 106.37 |      0.89 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     |  91.95 | 107.41 |      0.86 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n/cc @danmosemsft @billwert @DrewScoggins ","Url":"https://github.com/dotnet/coreclr/issues/25843","RelatedDescription":"Open issue \"Potential performance regression: Process.GetCurrentProcess() on Windows\" (#25843)"},{"Id":"471795063","IsPullRequest":false,"CreatedAt":"2019-07-23T16:25:32","Actor":"adamsitnik","Number":"25842","RawContent":null,"Title":"Potential regression: Dictionary of Value Types","State":"open","Body":"It looks like `TryGetValueFalse`, `IndexerSet` and `ContainsKeyFalse` benchmarks have regressed for Dictionaries of Value Types (at least for int).\r\n\r\nIf you run the benchmarks from command prompt on Windows remember to escape the `<` and `>` characters https://stackoverflow.com/questions/251557/escape-angle-brackets-in-a-windows-command-prompt\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\ncd performance\r\n# if you don't have cli installed and want python script to download the latest cli for you\r\npy .\\scripts\\benchmarks_ci.py -f netcoreapp2.2 netcoreapp3.0 --filter System.Collections.TryGetValueFalse<Int32, Int32>.Dictionary  System.Collections.IndexerSet<Int32>.Dictionary System.Collections.ContainsKeyFalse<Int32, Int32>.Dictionary\r\n# if you do\r\ndotnet run -p .\\src\\benchmarks\\micro\\MicroBenchmarks.csproj -c Release -f netcoreapp2.2 --runtimes netcoreapp2.2 netcoreapp3.0 --filter System.Collections.TryGetValueFalse<Int32, Int32>.Dictionary  System.Collections.IndexerSet<Int32>.Dictionary System.Collections.ContainsKeyFalse<Int32, Int32>.Dictionary\r\n```\r\n\r\n<details>\r\n\r\n# Legend\r\n\r\n* Statistical Test threshold: 5%, the noise filter: 0.3 ns\r\n* Base is Median Base in ns\r\n* Diff is Median Diff in ns\r\n\r\n## System.Collections.TryGetValueFalse<Int32, Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Slower     | 5295.43 |  6811.15 |      0.78 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5272.73 |  6315.75 |      0.83 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 7988.74 | 10439.93 |      0.77 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 8264.68 | 10447.93 |      0.79 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 6485.37 |  8888.85 |      0.73 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5929.86 |  7316.52 |      0.81 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4313.13 |  5634.35 |      0.77 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 8571.55 |  8547.10 |      1.00 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 6349.02 |  5867.96 |      1.08 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.IndexerSet<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 5601.16 |  5854.49 |      0.96 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4804.04 |  5765.14 |      0.83 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 7659.42 |  9554.84 |      0.80 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 7804.73 | 11132.91 |      0.70 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 5712.55 |  7655.82 |      0.75 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5766.95 |  6789.14 |      0.85 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4538.18 |  4962.10 |      0.91 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 6773.35 |  7110.47 |      0.95 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 6138.49 |  6838.30 |      0.90 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.ContainsKeyFalse<Int32, Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Slower     | 3486.84 | 3924.93 |      0.89 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 3761.00 | 4114.12 |      0.91 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4940.27 | 6053.05 |      0.82 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 5465.07 | 6421.09 |      0.85 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 3804.62 | 4382.17 |      0.87 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 6600.46 | 4449.21 |      1.48 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 2948.90 | 3387.96 |      0.87 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 5838.99 | 5940.53 |      0.98 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5115.72 | 6207.43 |      0.82 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryGetValueTrue<Int32, Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 5194.73 | 5073.09 |      1.02 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 5234.50 | 5186.53 |      1.01 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 8061.81 | 8079.26 |      1.00 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 8380.88 | 8229.03 |      1.02 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 5759.74 | 5876.48 |      0.98 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 6052.86 | 5953.19 |      1.02 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4658.07 | 5555.07 |      0.84 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 7094.80 | 7649.99 |      0.93 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5627.71 | 6355.82 |      0.89 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CreateAddAndRemove<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 17701.49 | 17517.70 |      1.01 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 18452.02 | 17709.50 |      1.04 | bimodal  | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 29694.18 | 33165.93 |      0.90 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 31797.33 | 34541.30 |      0.92 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 20598.60 | 21475.80 |      0.96 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 20499.53 | 21339.19 |      0.96 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 15860.64 | 15598.53 |      1.02 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24168.69 | 22836.90 |      1.06 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 20466.31 | 20372.86 |      1.00 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.IterateForEach<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 3003.86 | 2880.22 |      1.04 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 2880.91 | 3085.71 |      0.93 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 4691.82 | 4634.44 |      1.01 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 4671.38 | 4610.64 |      1.01 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 3232.59 | 3088.48 |      1.05 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 3076.07 | 3103.48 |      0.99 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 2266.42 | 2308.13 |      0.98 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 3090.96 | 3237.50 |      0.95 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 2750.85 | 2798.80 |      0.98 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.IterateForEach<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 3371.93 | 3368.18 |      1.00 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 3404.82 | 3251.40 |      1.05 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 5309.34 | 5329.04 |      1.00 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Slower     | 4921.87 | 5516.72 |      0.89 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 4250.64 | 4254.07 |      1.00 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 4103.80 | 4104.19 |      1.00 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 3103.42 | 3160.00 |      0.98 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 4872.76 | 4876.25 |      1.00 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 1602.23 | 1507.21 |      1.06 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorFromCollection<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       |  7599.64 |  7435.50 |      1.02 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  7628.57 |  7153.13 |      1.07 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 12619.87 | 12488.09 |      1.01 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 12576.80 | 12608.67 |      1.00 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       |  8515.05 |  8768.64 |      0.97 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8905.51 |  8576.95 |      1.04 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  6552.72 |  6875.59 |      0.95 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8703.53 |  8874.56 |      0.98 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8519.41 |  8436.37 |      1.01 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.ContainsKeyTrue<Int32, Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 4544.10 | 3676.81 |      1.24 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 4280.00 | 3957.07 |      1.08 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 6041.30 | 5970.68 |      1.01 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 5829.06 | 6126.16 |      0.95 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 4261.07 | 4323.67 |      0.99 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 5741.74 | 4618.07 |      1.24 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 3280.15 | 3676.56 |      0.89 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 5509.53 | 5859.87 |      0.94 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 4948.77 | 6803.44 |      0.73 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryAddDefaultSize<Int32>.Dictionary(Count: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       | 11678.56 | 12234.64 |      0.95 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 12453.23 | 13135.74 |      0.95 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 20399.68 | 23070.23 |      0.88 | several? | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 21411.61 | 22531.40 |      0.95 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 15574.27 | 14700.11 |      1.06 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 14956.01 | 13893.13 |      1.08 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 10656.56 | 10075.52 |      1.06 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18632.48 | 15756.03 |      1.18 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 14185.75 | 14149.19 |      1.00 | bimodal  | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CreateAddAndClear<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 12966.89 | 12161.91 |      1.07 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 12154.61 | 12018.09 |      1.01 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 21596.98 | 24235.24 |      0.89 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 22853.63 | 21772.18 |      1.05 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 14398.43 | 14781.05 |      0.97 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 14327.71 | 15141.58 |      0.95 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 10954.89 |  9876.63 |      1.11 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17677.40 | 16550.38 |      1.07 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 14840.39 | 14675.31 |      1.01 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.AddGivenSize<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       |  7273.88 |  7124.56 |      1.02 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  7587.89 |  7258.82 |      1.05 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 11995.41 | 12786.21 |      0.94 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 12782.59 | 12184.82 |      1.05 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     |  8707.46 |  7956.41 |      1.09 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  8500.30 |  7716.40 |      1.10 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  6401.37 |  6615.31 |      0.97 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8068.01 |  8382.09 |      0.96 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  8482.18 |  7973.79 |      1.06 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryAddGiventSize<Int32>.Dictionary(Count: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       |  7279.07 |  6976.97 |      1.04 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  6970.00 |  6678.90 |      1.04 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 12893.92 | 13239.60 |      0.97 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 12699.59 | 12571.00 |      1.01 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       |  8538.66 |  8460.38 |      1.01 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8425.09 |  8062.77 |      1.04 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  6321.64 |  5905.14 |      1.07 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8204.06 |  8028.82 |      1.02 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  8242.49 |  7812.25 |      1.06 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.Concurrent.IsEmpty<String>.Dictionary(Size: 0)\r\n\r\n| conclusion |   Base |   Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | ------:| ------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 251.56 | 236.93 |      1.06 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 217.89 | 192.24 |      1.13 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 134.83 | 136.06 |      0.99 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 138.89 | 139.18 |      1.00 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     |  93.91 |  87.48 |      1.07 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  82.25 |  84.66 |      0.97 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 133.22 | 138.36 |      0.96 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 328.49 | 313.21 |      1.05 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 236.24 | 214.82 |      1.10 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorDefaultSize<String>.Dictionary\r\n\r\n| conclusion |   Base |   Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | ------:| ------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     |  90.71 |  78.00 |      1.16 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  64.30 |  64.61 |      1.00 | several? | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 154.71 | 138.37 |      1.12 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 162.98 | 141.59 |      1.15 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     |  98.04 |  87.51 |      1.12 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  72.19 |  68.55 |      1.05 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  53.97 |  51.92 |      1.04 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  73.62 |  66.43 |      1.11 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  78.24 |  63.68 |      1.23 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorGivenSize<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |    Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| -------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     |  853.72 |  802.14 |      1.06 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  787.32 |  770.44 |      1.02 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 1505.12 | 1365.45 |      1.10 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 1433.72 | 1365.16 |      1.05 | several? | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       | 1171.62 | 1164.09 |      1.01 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  921.11 |  983.63 |      0.94 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  539.01 |  566.64 |      0.95 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 1160.66 |  630.28 |      1.84 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  658.39 |  651.35 |      1.01 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorGivenSize<Int32>.Dictionary(Size: 512)\r\n\r\n| conclusion |    Base |   Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -------:| ------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Same       |  571.10 | 543.17 |      1.05 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  528.64 | 512.22 |      1.03 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 1011.14 | 902.18 |      1.12 | bimodal  | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       |  963.46 | 971.86 |      0.99 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Same       |  791.36 | 761.59 |      1.04 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  610.48 | 611.34 |      1.00 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  354.42 | 361.46 |      0.98 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  736.38 | 408.62 |      1.80 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       |  559.69 | 547.62 |      1.02 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryAddDefaultSize<String>.Dictionary(Count: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 28207.52 | 23258.19 |      1.21 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 27086.47 | 22896.84 |      1.18 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 47680.40 | 43078.16 |      1.11 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 48569.49 | 42167.41 |      1.15 | several? | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 33700.22 | 27433.74 |      1.23 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 31552.95 | 27398.83 |      1.15 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 22250.29 | 19139.31 |      1.16 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 36224.75 | 29298.68 |      1.24 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 26046.30 | 21879.92 |      1.19 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CreateAddAndClear<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 28667.42 | 23548.60 |      1.22 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 27621.61 | 23601.45 |      1.17 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 48636.39 | 41526.00 |      1.17 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 50315.68 | 41718.74 |      1.21 | bimodal  | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 34333.88 | 28505.54 |      1.20 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 32172.51 | 28224.23 |      1.14 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 22859.11 | 19321.35 |      1.18 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 36481.48 | 29721.37 |      1.23 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 26528.62 | 23418.55 |      1.13 | bimodal  | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CreateAddAndRemove<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 48069.48 | 39942.91 |      1.20 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 47123.88 | 39203.86 |      1.20 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 80249.26 | 70160.91 |      1.14 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 85761.66 | 71548.10 |      1.20 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 55491.41 | 46829.23 |      1.18 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 54927.32 | 44042.79 |      1.25 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 40208.73 | 33611.44 |      1.20 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 55272.34 | 45439.19 |      1.22 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 44827.99 | 40444.86 |      1.11 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.IndexerSet<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 20675.47 | 15230.89 |      1.36 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 20194.46 | 15513.44 |      1.30 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 32071.87 | 24248.56 |      1.32 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 31500.21 | 26681.85 |      1.18 | several? | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 24550.56 | 19046.64 |      1.29 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 23401.05 | 17870.68 |      1.31 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17357.95 | 15724.87 |      1.10 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 23032.18 | 20222.18 |      1.14 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 16815.31 | 17960.88 |      0.94 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.ContainsKeyTrue<String, String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 18266.12 | 13344.64 |      1.37 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 16833.89 | 14102.05 |      1.19 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 28704.82 | 21049.67 |      1.36 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 29612.18 | 22465.43 |      1.32 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 20708.04 | 15567.50 |      1.33 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 19124.84 | 15928.88 |      1.20 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 16182.61 | 11271.75 |      1.44 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 20455.57 | 17127.64 |      1.19 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 16466.09 | 16388.59 |      1.00 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorFromCollection<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 21791.01 | 16444.40 |      1.33 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 21389.91 | 16250.77 |      1.32 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 36807.47 | 28643.79 |      1.29 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 35096.07 | 28424.47 |      1.23 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 25742.03 | 18869.65 |      1.36 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24231.20 | 18830.84 |      1.29 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18341.36 | 14155.77 |      1.30 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24404.04 | 20471.91 |      1.19 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 19265.24 | 14981.31 |      1.29 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryGetValueFalse<String, String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 17761.97 | 12785.89 |      1.39 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 16099.17 | 13254.93 |      1.21 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 27971.51 | 20633.79 |      1.36 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 28805.73 | 21631.65 |      1.33 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 20443.39 | 14297.54 |      1.43 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18412.29 | 15005.62 |      1.23 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 15407.42 | 10071.44 |      1.53 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 20898.22 | 16360.82 |      1.28 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Slower     | 13628.61 | 15021.99 |      0.91 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryAddGiventSize<String>.Dictionary(Count: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 21459.90 | 16373.78 |      1.31 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 21164.92 | 16051.18 |      1.32 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 36405.59 | 28090.61 |      1.30 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 38089.32 | 29026.59 |      1.31 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 25448.68 | 18402.92 |      1.38 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24570.11 | 18287.97 |      1.34 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17556.47 | 13378.44 |      1.31 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 23931.91 | 19455.30 |      1.23 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18856.41 | 15322.55 |      1.23 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.TryGetValueTrue<String, String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 19799.95 | 14226.80 |      1.39 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18421.70 | 14209.94 |      1.30 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 31125.84 | 22523.90 |      1.38 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 32749.70 | 24159.19 |      1.36 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 22806.45 | 16593.35 |      1.37 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 21483.98 | 16568.36 |      1.30 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17323.69 | 12966.12 |      1.34 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 22336.25 | 19391.06 |      1.15 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 18344.99 | 15375.17 |      1.19 | bimodal  | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.AddGivenSize<String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 21741.80 | 15534.18 |      1.40 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 21060.82 | 15606.88 |      1.35 | bimodal  | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 36003.59 | 26562.07 |      1.36 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 38583.04 | 27579.71 |      1.40 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 25625.07 | 19859.45 |      1.29 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24423.75 | 18442.88 |      1.32 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17824.92 | 13257.09 |      1.34 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 24130.71 | 19364.14 |      1.25 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 19449.74 | 15223.92 |      1.28 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.CtorDefaultSize<Int32>.Dictionary\r\n\r\n| conclusion |  Base |  Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | -----:| -----:| ---------:| -------- | -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 12.18 |  9.43 |      1.29 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 11.05 |  8.28 |      1.33 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 20.94 | 16.94 |      1.24 | several? | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 21.98 | 18.78 |      1.17 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 14.07 | 11.42 |      1.23 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 13.22 |  9.66 |      1.37 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  8.87 |  6.18 |      1.44 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 13.87 |  8.03 |      1.73 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     |  7.85 |  5.69 |      1.38 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n## System.Collections.ContainsKeyFalse<String, String>.Dictionary(Size: 512)\r\n\r\n| conclusion |     Base |     Diff | Base/Diff | Modality | Operating System     | Arch  | Processor Name                              | Base Runtime    | Diff Runtime                     |\r\n| ---------- | --------:| --------:| ---------:| --------:| -------------------- | ----- | ------------------------------------------- | --------------- | --------------------------------- |\r\n| Faster     | 16831.37 | 10258.00 |      1.64 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 15797.53 | 10531.75 |      1.50 |          | Windows 10.0.18362   | 64bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 25910.66 | 16292.41 |      1.59 |          | ubuntu 16.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 26962.33 | 17381.47 |      1.55 |          | ubuntu 18.04         | 64bit | Intel Xeon CPU E5-2673 v4 2.30GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-01|\r\n| Faster     | 19288.75 | 11842.58 |      1.63 |          | macOS Mojave 10.14.5 | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 17575.18 | 11974.48 |      1.47 |          | Windows 10.0.18362   | 64bit | Intel Core i7-5557U CPU 3.10GHz (Broadwell) | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 14757.73 | 10677.82 |      1.38 |          | Windows 10.0.18362   | 64bit | Intel Core i7-7700 CPU 3.60GHz (Kaby Lake)  | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Faster     | 19752.07 | 14697.61 |      1.34 |          | Windows 10.0.18362   | 64bit | AMD Ryzen 7 1800X                           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n| Same       | 12613.78 | 12933.80 |      0.98 |          | Windows 10.0.18362   | 32bit | Intel Xeon CPU E5-1650 v4 3.60GHz           | .NET Core 2.2.6 | .NET Core 3.0.0-preview8-27919-09|\r\n\r\n</details>\r\n\r\n/cc @danmosemsft @AndyAyersMS @billwert @DrewScoggins","Url":"https://github.com/dotnet/coreclr/issues/25842","RelatedDescription":"Open issue \"Potential regression: Dictionary of Value Types\" (#25842)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"472623097","IsPullRequest":true,"CreatedAt":"2019-07-25T02:13:18","Actor":"dotnet-maestro[bot]","Number":"11996","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.11\r\n- **Date Produced**: 7/25/2019 1:37 AM\r\n- **Commit**: 69feac263332424ceccfb673cbf205e31855abdc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.11\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11996","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11996)"},{"Id":"472621295","IsPullRequest":true,"CreatedAt":"2019-07-25T01:28:44","Actor":"dotnet-maestro[bot]","Number":"11995","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190724.06\r\n- **Date Produced**: 7/25/2019 1:28 AM\r\n- **Commit**: 3002d85a81dac020d101a02143f194eb20431cad\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-28374-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-28374-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11995","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#11995)"},{"Id":"472618108","IsPullRequest":false,"CreatedAt":"2019-07-25T01:12:37","Actor":"WardenGnaw","Number":"11994","RawContent":null,"Title":"dotnet restore fails with RuntimeFrameworkVersion specified ","State":"open","Body":"## Steps to reproduce\r\nWhen specified `<RuntimeFrameworkVersion>3.0.0-preview7-27912-14</RuntimeFrameworkVersion>`, `dotnet restore` fails\r\n\r\n## Expected behavior\r\nDownloads `3.0.0-preview7-27912-14` for `Microsoft.NetCore.App.Runtime.linux-arm64` and `3.0.0-preview7.19365.7` for `Microsoft.AspNetCore.App.Runtime.linux-arm64`\r\n\r\n## Actual behavior\r\nErrors with \r\n`Unable to find package Microsoft.AspNetCore.App.Runtime.linux-arm64 with version (= 3.0.0-preview7-27912-14)`\r\n\r\nIt looks like it is using the `RuntimeFrameworkVersion` to download the associated `AspNetCore.App.Runtime`\r\n\r\nFrom msbuild.binlog, the KnownFrameworkReference knows about `3.0.0-preview7.19365.7`, but once its about to be restored, the version range is replaced and uses `3.0.0-preview7-27912-14`.\r\n\r\n**KnownFrameWorkReference:**\r\n![image](https://user-images.githubusercontent.com/3953714/61838220-21834580-ae3d-11e9-8bf0-de6c8a303b6a.png)\r\n\r\n**Restore Task:**\r\n![image](https://user-images.githubusercontent.com/3953714/61838407-f3eacc00-ae3d-11e9-98b8-d0ee17cab0ae.png)\r\n\r\n\r\n## Environment data\r\n<details>\r\n<summary>`dotnet --info` output:</summary>\r\n\r\n<p>\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012821\r\n Commit:    6348f1068a\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /root/dotnet/sdk/3.0.100-preview7-012821/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview7-012821 [/root/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [/root/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [/root/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n</p>\r\n\r\n</details>\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11994","RelatedDescription":"Open issue \"dotnet restore fails with RuntimeFrameworkVersion specified \" (#11994)"},{"Id":"472511411","IsPullRequest":true,"CreatedAt":"2019-07-25T01:07:13","Actor":"dotnet-maestro[bot]","Number":"11993","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 8:38 PM\r\n- **Commit**: 54da777b7c978f19327a18e03aab90887d6a210e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11993","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11993)"},{"Id":"472499815","IsPullRequest":true,"CreatedAt":"2019-07-25T00:38:27","Actor":"livarcocc","Number":"11992","RawContent":null,"Title":"Update CLI's stage0 SDK to 3.0.100-preview8-013422.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11992","RelatedDescription":"Closed or merged PR \"Update CLI's stage0 SDK to 3.0.100-preview8-013422.\" (#11992)"},{"Id":"472418904","IsPullRequest":true,"CreatedAt":"2019-07-24T18:29:26","Actor":"dotnet-maestro[bot]","Number":"11991","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190724.1\r\n- **Date Produced**: 7/24/2019 5:58 PM\r\n- **Commit**: 2029a0f3e4f46e6657ef0b1062c8644625b1103e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19374.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11991)"},{"Id":"472184518","IsPullRequest":true,"CreatedAt":"2019-07-24T16:17:56","Actor":"vagisha-nidhi","Number":"11985","RawContent":null,"Title":"Updating the test templates for net core 2.2","State":"closed","Body":"Related to [https://github.com/dotnet/test-templates/pull/65](https://github.com/dotnet/test-templates/pull/65)\r\n","Url":"https://github.com/dotnet/cli/pull/11985","RelatedDescription":"Closed or merged PR \"Updating the test templates for net core 2.2\" (#11985)"},{"Id":"472332422","IsPullRequest":false,"CreatedAt":"2019-07-24T15:29:23","Actor":"rpc-scandinavia","Number":"11990","RawContent":null,"Title":"dotnet publish assembly with whitespace in filename","State":"closed","Body":"## Steps to reproduce\r\n1) In a \"netcoreapp3\" application, comsume a \"netstandard2.1\" library assembly (DLL) with spaces in its names (project directory, csproj-file and build assembly).\r\n\r\n2) Restore, build and publish:\r\ndotnet  publish  --self-contained true  --configuration release  --runtime \"linux-x86\"  --output \"../bin.release\"\r\n\r\n3) Execute the application, which gives this exception:\r\n\r\n```\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'RPC Core, Version=4.5.0.0, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\n\r\nFile name: 'RPC Core, Version=4.5.0.0, Culture=neutral, PublicKeyToken=null'\r\n   at RpcScandinavia.ITDD.ItddApplication..ctor(String[] args)\r\n   at RpcScandinavia.ITDD.ItddApplication.Main(String[] args) in /data/users/rpc@rpc-scandinavia.dk/Development/Projects3/ITDD/ITDD - Program.cs:line 55\r\n\r\nAborted\r\n```\r\n\r\nBut \"RPC Core.dll\" is where it should be.\r\n\r\n\r\n## Expected  behavior\r\nThe runtime assembly loader, should be able to handle assemblies with whitespaces in their file name, in my case \"RPC Core.dll\", \"RPC Core OpenSource.dll\" and \"RPC Core Resources.dll\".\r\n\r\n\r\n## Actual behavior\r\nPlease see step 3 above.\r\n\r\nI have tried to build the same assemblies without whitespaces in their filenames, and then everything works as expected. But really here about 30 years after DOS!\r\n\r\nI have newer experienced this with MONO, only now then I try to migrate to dotnet 3.\r\n\r\nI have no problem running the same build from the debug directory, and manually copying the missing assemblies from the publish directory. So the problem must be the self-contained runtime assembly loader.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview6-012264/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.2.300 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview6-012264 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11990","RelatedDescription":"Closed issue \"dotnet publish assembly with whitespace in filename\" (#11990)"},{"Id":"472249252","IsPullRequest":true,"CreatedAt":"2019-07-24T12:45:25","Actor":"dotnet-maestro[bot]","Number":"11989","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190723.1\r\n- **Date Produced**: 7/23/2019 1:01 PM\r\n- **Commit**: ee58e8a484f7e8ea188c67a984a64cfb96158a1b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview8.19373.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11989","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11989)"},{"Id":"472246023","IsPullRequest":true,"CreatedAt":"2019-07-24T12:37:48","Actor":"dotnet-maestro[bot]","Number":"11988","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190723.4\r\n- **Date Produced**: 7/24/2019 3:00 AM\r\n- **Commit**: 7a119c42ad462c203dde95c64f1484e6718e2a4b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview8.19373.4\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11988","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11988)"},{"Id":"472245795","IsPullRequest":true,"CreatedAt":"2019-07-24T12:06:56","Actor":"dotnet-maestro[bot]","Number":"11987","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190723.6\r\n- **Date Produced**: 7/23/2019 10:01 PM\r\n- **Commit**: 56b5e5a9debc87b98c5dd394e8a72c916099d9d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19373.6\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11987","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11987)"},{"Id":"472193992","IsPullRequest":false,"CreatedAt":"2019-07-24T10:05:07","Actor":"StefanOssendorf","Number":"11986","RawContent":null,"Title":"dotnet build fails with stack overflow in .Net Core 3.0 Preview 7 ","State":"open","Body":"This problem occurs only with Preview 7 (exact version see below). With sdk version 3.0.100-preview6-012264 everything works as expected.\r\n\r\n## Steps to reproduce\r\nHave a big solution (90 projects) with a couple of postbuild copy-steps in some projects (e.g. copy 80 files from A to B).\r\n\r\nCommands used:\r\n`dotnet restore <Solution>`\r\n`dotnet build <Solution> --no-restore`\r\n\r\n## Expected  behavior\r\n`dotnet build` runs successful without errors\r\n\r\n## Actual behavior\r\n`dotnet build` fails with commandline output:\r\n\r\n- Stack Overflow\r\nor \r\n\r\n- MSBUILD : error MSB4166: Child node \"7\" exited prematurely. Shutting down. Diagnostic information may be found in files in \"C:\\Users\\s.ossendorf\\AppData\\Local\\Temp\\\" and will be named MSBuild_*.failure.txt. This location can be changed by setting the MSBUILDDEBUGPATH environment variable to a different directory.  \r\n\r\nContent of one of those diagnostics is:\r\n```\r\nUNHANDLED EXCEPTIONS FROM PROCESS 8052:\r\n=====================\r\n24.07.2019 11:38:52\r\nSystem.IO.IOException: Pipe is broken.\r\n   at System.IO.Pipes.PipeStream.CheckWriteOperations()\r\n   at System.IO.Pipes.PipeStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n   at Microsoft.Build.BackEnd.NodeEndpointOutOfProcBase.RunReadLoop(Stream localReadPipe, Stream localWritePipe, ConcurrentQueue`1 localPacketQueue, AutoResetEvent localPacketAvailable, AutoResetEvent localTerminatePacketPump)\r\n===================\r\n```\r\nThe only difference in the files is the process number.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012821\r\n Commit:    6348f1068a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009618 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.106 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11986","RelatedDescription":"Open issue \"dotnet build fails with stack overflow in .Net Core 3.0 Preview 7 \" (#11986)"},{"Id":"472063941","IsPullRequest":true,"CreatedAt":"2019-07-24T04:12:37","Actor":"dotnet-maestro[bot]","Number":"11984","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.17\r\n- **Date Produced**: 7/24/2019 3:40 AM\r\n- **Commit**: 5d8d5e866113c9f144136a04222f191456dfff1d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28373-17\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28373-17\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-28373-17\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-28373-17\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-28373-17\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11984","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11984)"},{"Id":"472061901","IsPullRequest":true,"CreatedAt":"2019-07-24T04:02:03","Actor":"dotnet-maestro[bot]","Number":"11983","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190723.7\r\n- **Date Produced**: 7/24/2019 3:30 AM\r\n- **Commit**: fad6a1867ccb42bcf23c8507218b944e8798a06a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19373.7\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11983","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11983)"},{"Id":"472043518","IsPullRequest":true,"CreatedAt":"2019-07-24T02:40:11","Actor":"dotnet-maestro[bot]","Number":"11982","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.14\r\n- **Date Produced**: 7/24/2019 2:04 AM\r\n- **Commit**: 4c34f98d3f3f32623d574cb98bfb74c9831fa21b\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28373-14\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28373-14\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-28373-14\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-28373-14\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-28373-14\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11982","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11982)"},{"Id":"471670952","IsPullRequest":true,"CreatedAt":"2019-07-24T01:13:56","Actor":"vagisha-nidhi","Number":"11979","RawContent":null,"Title":"Updating Test Platform version 16.3 preview","State":"closed","Body":"Updating testplatform version to 16.3.0-preview-20190715-02","Url":"https://github.com/dotnet/cli/pull/11979","RelatedDescription":"Closed or merged PR \"Updating Test Platform version 16.3 preview\" (#11979)"},{"Id":"471835404","IsPullRequest":true,"CreatedAt":"2019-07-24T01:13:02","Actor":"dotnet-maestro[bot]","Number":"11980","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.06\r\n- **Date Produced**: 7/23/2019 5:42 PM\r\n- **Commit**: 8e6b84998c17aad5a8bc382026948c3a262167a6\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-19373-06\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-19373-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-19373-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-19373-06\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11980","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11980)"},{"Id":"471618625","IsPullRequest":false,"CreatedAt":"2019-07-23T17:30:07","Actor":"Shuenhoy","Number":"11977","RawContent":null,"Title":"`dotnet-watch run` fails when there are access-denied folders","State":"closed","Body":"## Steps to reproduce\r\n\r\n```bash\r\n$ mkdir test\r\n$ sudo chown 0:0 test\r\n$ sudo chmod 700 test\r\n$ dotnet watch run\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet-watch` should ignore the `test` folder.\r\n\r\n## Actual behavior\r\n`dotnet-watch` fails with exception `System.UnauthorizedAccessException: Access to the path 'test' is denied. ---> System.IO.IOException: Permission denied`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview6-012264/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview6-012264 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11977","RelatedDescription":"Closed issue \"`dotnet-watch run` fails when there are access-denied folders\" (#11977)"},{"Id":"471658631","IsPullRequest":true,"CreatedAt":"2019-07-23T12:37:22","Actor":"dotnet-maestro[bot]","Number":"11978","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190722.10\r\n- **Date Produced**: 7/23/2019 2:43 AM\r\n- **Commit**: 0793e2df782efc9ccae387bc779b2549208fa4a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19372.10\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11978","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11978)"},{"Id":"471604344","IsPullRequest":true,"CreatedAt":"2019-07-23T10:36:57","Actor":"dotnet-maestro[bot]","Number":"11976","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.02\r\n- **Date Produced**: 7/23/2019 10:06 AM\r\n- **Commit**: 1ff3588d49079733e228a7d34bc06ebc33796bc1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-19373-02\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-19373-02\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-19373-02\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-19373-02\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11976","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11976)"},{"Id":"471393683","IsPullRequest":true,"CreatedAt":"2019-07-23T08:08:42","Actor":"dotnet-maestro[bot]","Number":"11975","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190722.15\r\n- **Date Produced**: 7/23/2019 7:35 AM\r\n- **Commit**: 0d9ff903c62304cd5e27835a90aa9c10555e3cee\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-19372-15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-19372-15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-19372-15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-19372-15\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11975","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11975)"},{"Id":"471259852","IsPullRequest":true,"CreatedAt":"2019-07-22T23:06:44","Actor":"dotnet-maestro[bot]","Number":"11972","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190722.3\r\n- **Date Produced**: 7/22/2019 8:55 PM\r\n- **Commit**: 7ca234607a37c9e7db06013a21208769e3eeb0a2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19372.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11972","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11972)"},{"Id":"471269005","IsPullRequest":true,"CreatedAt":"2019-07-22T22:36:14","Actor":"dotnet-maestro[bot]","Number":"11973","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190722.03\r\n- **Date Produced**: 7/22/2019 7:20 PM\r\n- **Commit**: 758a89c36c33310b2573bfa11ee2cc78e020c6c8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-19372-03\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-19372-03\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-19372-03\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-19372-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11973","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11973)"},{"Id":"471279755","IsPullRequest":true,"CreatedAt":"2019-07-22T20:36:45","Actor":"TravisEz13","Number":"11974","RawContent":null,"Title":"Fix break in dotnet-install.sh on macOS","State":"closed","Body":"skip ci please\r\n\r\ntried to write â€”remove-destination in bash because the switch doesnâ€™t exist on macOS and is breaking PowerShell CI\r\nhttps://github.com/PowerShell/PowerShell/issues/10206\r\n","Url":"https://github.com/dotnet/cli/pull/11974","RelatedDescription":"Closed or merged PR \"Fix break in dotnet-install.sh on macOS\" (#11974)"},{"Id":"471214170","IsPullRequest":true,"CreatedAt":"2019-07-22T17:30:27","Actor":"xavierdecoster","Number":"11971","RawContent":null,"Title":"Adding support for dotnet list package --deprecated","State":"open","Body":"Adds support for `dotnet list package --deprecated` command forwarding to NuGet xplat as per [spec](https://github.com/NuGet/Home/wiki/Deprecate-packages#cli).\r\n\r\nFixes https://github.com/dotnet/cli/issues/11969\r\n","Url":"https://github.com/dotnet/cli/pull/11971","RelatedDescription":"Open PR \"Adding support for dotnet list package --deprecated\" (#11971)"},{"Id":"471182576","IsPullRequest":true,"CreatedAt":"2019-07-22T17:10:00","Actor":"dotnet-maestro[bot]","Number":"11970","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190722.1\r\n- **Date Produced**: 7/22/2019 4:39 PM\r\n- **Commit**: 330a7708c098d356b8cf59855317915c9270d997\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19372.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11970","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11970)"},{"Id":"471034374","IsPullRequest":false,"CreatedAt":"2019-07-22T11:10:58","Actor":"xavierdecoster","Number":"11969","RawContent":null,"Title":"dotnet list package --deprecated","State":"open","Body":"Tracking issue for adding support for `dotnet list package --deprecated` to the CLI (to be forwarded to NuGet xplat CLI commands).\r\n\r\n[NuGet CLI spec](https://github.com/NuGet/Home/wiki/Deprecate-packages#cli)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11969","RelatedDescription":"Open issue \"dotnet list package --deprecated\" (#11969)"},{"Id":"470910208","IsPullRequest":true,"CreatedAt":"2019-07-22T06:40:26","Actor":"dotnet-maestro[bot]","Number":"11968","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190721.5\r\n- **Date Produced**: 7/22/2019 6:09 AM\r\n- **Commit**: e69328b3d0bee7fd1777226d16e4d8f550acce75\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19371.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11968","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11968)"},{"Id":"470883030","IsPullRequest":true,"CreatedAt":"2019-07-22T04:42:38","Actor":"dotnet-maestro[bot]","Number":"11967","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190721.4\r\n- **Date Produced**: 7/22/2019 4:11 AM\r\n- **Commit**: 6a24db55433402d693d26cc764c704e0d7ac9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19371.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11967","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11967)"},{"Id":"471835533","IsPullRequest":false,"CreatedAt":"2019-07-22T03:13:10","Actor":"Thaodan","Number":"11981","RawContent":null,"Title":"[Linux] Don't use dot folder comply by XDG Base Directory Specification","State":"open","Body":"Currently SDK files get installed into _~/.dotnet_ on Linux.\r\nHowever this outdated, apps should follow the XDG Base Directory Specification.\r\nThis isn't an issue of the CLI (I think), as this about setting the defaults for Linux.","Url":"https://github.com/dotnet/cli/issues/11981","RelatedDescription":"Open issue \"[Linux] Don't use dot folder comply by XDG Base Directory Specification\" (#11981)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"472270481","IsPullRequest":true,"CreatedAt":"2019-07-24T13:11:42","Actor":"dotnet-maestro[bot]","Number":"1367","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190724.2\r\n- **Date Produced**: 7/24/2019 11:35 AM\r\n- **Commit**: ca3fe6738ae6afc56e1f8fb5477a57a8dc2e183c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19374.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19374.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1367","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1367)"},{"Id":"472245036","IsPullRequest":true,"CreatedAt":"2019-07-24T12:05:01","Actor":"dotnet-maestro[bot]","Number":"1366","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190723.6\r\n- **Date Produced**: 7/23/2019 10:01 PM\r\n- **Commit**: 56b5e5a9debc87b98c5dd394e8a72c916099d9d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19373.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1366","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1366)"},{"Id":"471683422","IsPullRequest":true,"CreatedAt":"2019-07-23T13:11:11","Actor":"dotnet-maestro[bot]","Number":"1365","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190722.9\r\n- **Date Produced**: 7/23/2019 8:02 AM\r\n- **Commit**: b58a866ba8709d66eed52bb8ecb13966b7436a1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19372.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19372.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1365","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1365)"},{"Id":"471657801","IsPullRequest":true,"CreatedAt":"2019-07-23T12:15:09","Actor":"dotnet-maestro[bot]","Number":"1364","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190722.10\r\n- **Date Produced**: 7/23/2019 2:43 AM\r\n- **Commit**: 0793e2df782efc9ccae387bc779b2549208fa4a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19372.10\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1364","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1364)"},{"Id":"471068821","IsPullRequest":true,"CreatedAt":"2019-07-22T12:41:52","Actor":"dotnet-maestro[bot]","Number":"1363","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190721.2\r\n- **Date Produced**: 7/21/2019 6:08 PM\r\n- **Commit**: 347412c9a917c71a744d8e20b090da90aa558a79\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19371.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19371.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19371.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1363","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1363)"},{"Id":"470778037","IsPullRequest":true,"CreatedAt":"2019-07-21T12:59:17","Actor":"dotnet-maestro[bot]","Number":"1362","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190720.5\r\n- **Date Produced**: 7/21/2019 4:24 AM\r\n- **Commit**: 9bb93a61365db848aaf914b5dfb8d6684df3335e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19370.5\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19370.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19370.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1362","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1362)"},{"Id":"470671520","IsPullRequest":true,"CreatedAt":"2019-07-20T13:02:05","Actor":"dotnet-maestro[bot]","Number":"1361","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190719.9\r\n- **Date Produced**: 7/20/2019 6:18 AM\r\n- **Commit**: 45851336efa3b754f427d00cef3d388357aed308\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19369.9\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19369.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19369.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1361","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1361)"},{"Id":"470667719","IsPullRequest":true,"CreatedAt":"2019-07-20T12:15:15","Actor":"dotnet-maestro[bot]","Number":"1360","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190719.2\r\n- **Date Produced**: 7/19/2019 5:55 PM\r\n- **Commit**: a190d4865fe3c86a168ec49c4fc61c90c96ae051\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19369.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1360","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1360)"},{"Id":"470573371","IsPullRequest":true,"CreatedAt":"2019-07-19T23:02:20","Actor":"terrajobst","Number":"1359","RawContent":null,"Title":"Adds attribution for APIs previously specialcased by the compiler","State":"closed","Body":"Reviewed as #1356.","Url":"https://github.com/dotnet/standard/pull/1359","RelatedDescription":"Closed or merged PR \"Adds attribution for APIs previously specialcased by the compiler\" (#1359)"},{"Id":"470089821","IsPullRequest":true,"CreatedAt":"2019-07-19T21:44:01","Actor":"terrajobst","Number":"1356","RawContent":null,"Title":"Adds attribution for APIs previously special-cased by the compiler","State":"closed","Body":"This applies some of the nullable attributes for APIs that were previously special-cased by the compiler. The attribution is very basic only includes cases where we'e a 100% certain that these are never going to change.\r\n\r\nI've arrived here by diffing CoreFX and .NET Standard using the following approach:\r\n\r\n**Included**\r\n\r\n* `DoesNotReturn`\r\n* `DoesNotReturnIf`\r\n\r\n**Considered**\r\n\r\n* `NotNullWhen`\r\n\r\n**Excluded**\r\n\r\n* `MaybeNullWhenAttribute`\r\n* `MaybeNullAttribute`\r\n* `AllowNullAttribute`\r\n* `DisallowNullAttribute`\r\n* `NotNullAttribute`\r\n* `NotNullIfNotNullAttribute`\r\n\r\n@stephentoub @jcouv @dotnet/nullablefc: Please double check my work here.","Url":"https://github.com/dotnet/standard/pull/1356","RelatedDescription":"Closed or merged PR \"Adds attribution for APIs previously special-cased by the compiler\" (#1356)"},{"Id":"470307252","IsPullRequest":true,"CreatedAt":"2019-07-19T12:58:18","Actor":"dotnet-maestro[bot]","Number":"1358","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190718.5\r\n- **Date Produced**: 7/19/2019 2:12 AM\r\n- **Commit**: 182bed51dec709b3b1b56a4f435e0727e5dea110\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19368.5\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19368.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19368.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1358","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1358)"},{"Id":"470290592","IsPullRequest":true,"CreatedAt":"2019-07-19T12:14:40","Actor":"dotnet-maestro[bot]","Number":"1357","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190718.7\r\n- **Date Produced**: 7/18/2019 11:09 PM\r\n- **Commit**: eecde8a8751dbe7fdb17ba4dfbd032e26f4cae7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19368.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1357","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1357)"},{"Id":"469972263","IsPullRequest":true,"CreatedAt":"2019-07-18T21:52:21","Actor":"terrajobst","Number":"1355","RawContent":null,"Title":"Add attributes for expressing nullability","State":"closed","Body":"Discussed in #1349.\r\n\r\n@danmosemsft, any objections taking this? \r\n\r\n/cc @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1355","RelatedDescription":"Closed or merged PR \"Add attributes for expressing nullability\" (#1355)"},{"Id":"469751295","IsPullRequest":true,"CreatedAt":"2019-07-18T20:38:18","Actor":"dotnet-maestro[bot]","Number":"1354","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190717.11\r\n- **Date Produced**: 7/18/2019 5:04 AM\r\n- **Commit**: ba2d62a24ea8574f40c43cd27cc384f079958a0c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19367.11\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19367.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19367.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1354","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1354)"},{"Id":"468943337","IsPullRequest":true,"CreatedAt":"2019-07-18T20:15:44","Actor":"terrajobst","Number":"1349","RawContent":null,"Title":"Add attributes for expressing nullability","State":"closed","Body":"This issue was brought up as part of a conversation with @divega from the EF team. While .NET Standard 2.1 itself won't have nullable annotations (see #1118), the idea is that code building for .NET Standard 2.1 should be able to express its own nullable state. This PR adds the attribute that are needed by library authors to tweak how their APIs are treated by C#'s flow analysis.\r\n\r\nThese APIs were reviewed in https://github.com/dotnet/corefx/issues/37826.","Url":"https://github.com/dotnet/standard/pull/1349","RelatedDescription":"Closed or merged PR \"Add attributes for expressing nullability\" (#1349)"},{"Id":"469365862","IsPullRequest":false,"CreatedAt":"2019-07-18T18:12:45","Actor":"codernator","Number":"1352","RawContent":null,"Title":"Interesting BadImageFormatException involving generics, deferred functions, and closures.","State":"closed","Body":"I stumbled over an edge case in which it is possible to write code that compiles but generates a BadImageFormatException with HResult: 0x8007000B during runtime. I originally found it in a C# 7.3 dotnet core 2.2 API application, but have reproduced it with a simple example in LINQPad 5, which uses C#7 and I believe dotnet standard 2.  The below contains both the exception generating code as well as similar counter-examples.\r\n\r\n\t/// <summary>\r\n\t/// Demonstrate how a generic function passing a closure to of a deferred function\r\n\t/// can create a BadImageFormatException. This includes an example of the exception,\r\n\t/// and similar examples that do not create the exception.\r\n\t/// </summary>\r\n\tstatic void Main()\r\n\t{\r\n\t\t// The data type and value is not important to this example.\r\n\t\t// Only the context in which this variable is used is important.\r\n\t\tvar myClosure = 0;\r\n\t\t\r\n\t\tHereComesTheException(new object[0]);\r\n\t\t//NonGenericNoException(new object[0]);\r\n\t\t//GenericWorkAroundA(new object[0]);\r\n\t\t//GenericWorkAroundB(new object[0]);\r\n\t\r\n\t\t// This fucntion creates a BadImageFormatException. Note the\r\n\t\t// use of myClosure within a deferred function that is\r\n\t\t// inline to a foreach. As far as I could read the IL, there is no\r\n\t\t// reference to myClosure in the scope of this function.\r\n\t\tvoid HereComesTheException<T>(IEnumerable<T> things)\r\n\t\t{\r\n\t\t\tforeach (var thing in things.Where(tt => myClosure == 0)) {}\r\n\t\t}\r\n\t\r\n\t\t// This function doesn't create a BadImageFormatException...\r\n\t\t// The only difference from HereComesTheException is that\r\n\t\t// this function is not generic.\r\n\t\tvoid NonGenericNoException(IEnumerable<object> things)\r\n\t\t{\r\n\t\t\tforeach (var thing in things.Where(tt => myClosure == 0)) {}\r\n\t\t}\r\n\t\r\n\t\t// This function doesn't create a BadImageFormatException because the\r\n\t\t// outer closure is stored in a local variable that is clearly in scope \r\n\t\t// when the deferred function is executed.\r\n\t\tvoid GenericWorkAroundA<T>(IEnumerable<T> things)\r\n\t\t{\r\n\t\t\tvar inner = myClosure;\r\n\t\t\tforeach (var thing in things.Where(tt => inner == 0)) {}\r\n\t\t}\r\n\t\t\r\n\t\t// This function doesn't create a BadImageFormatException... \r\n\t\t// Is this because declaring the Enumerator as a local variable forces\r\n\t\t// local context to be given to myClosure?\r\n\t\tvoid GenericWorkAroundB<T>(IEnumerable<T> things)\r\n\t\t{\r\n\t\t\tvar filtered = things.Where(tt => myClosure == 0);\r\n\t\t\tforeach (var thing in filtered) {}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1352","RelatedDescription":"Closed issue \"Interesting BadImageFormatException involving generics, deferred functions, and closures.\" (#1352)"},{"Id":"469731560","IsPullRequest":true,"CreatedAt":"2019-07-18T17:36:33","Actor":"dotnet-maestro[bot]","Number":"1353","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190717.8\r\n- **Date Produced**: 7/17/2019 10:06 PM\r\n- **Commit**: 2359dc4184133defa27c8f3072622270b71b4ecf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19367.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19367.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19367.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19367.8\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19367.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19367.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1353","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1353)"},{"Id":"469174631","IsPullRequest":true,"CreatedAt":"2019-07-17T13:00:53","Actor":"dotnet-maestro[bot]","Number":"1351","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190716.11\r\n- **Date Produced**: 7/17/2019 5:26 AM\r\n- **Commit**: da3d086edde315db03ff9b04c2926ab22940d50c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19366.11\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19366.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19366.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1351","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1351)"},{"Id":"469154006","IsPullRequest":true,"CreatedAt":"2019-07-17T12:15:21","Actor":"dotnet-maestro[bot]","Number":"1350","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190716.4\r\n- **Date Produced**: 7/16/2019 7:16 PM\r\n- **Commit**: 0dd5e2025f0049c133a8706f40e4463b193e5d17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19366.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19366.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19366.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19366.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19366.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19366.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1350","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1350)"},{"Id":"468893474","IsPullRequest":true,"CreatedAt":"2019-07-17T01:56:05","Actor":"dotnet-maestro-bot","Number":"1348","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @wtgodbe\n* @terrajobst\n* @akoeplinger\n* @ericstj\n* @208120+akeeton\n* @roji\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1348","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1348)"},{"Id":"468352094","IsPullRequest":true,"CreatedAt":"2019-07-16T22:48:08","Actor":"wtgodbe","Number":"1344","RawContent":null,"Title":"Update branding to 2.2","State":"closed","Body":"Update File/Product versions to 5.0, and package versions to 2.2. Please don't merge before noon on 7/16\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1344","RelatedDescription":"Closed or merged PR \"Update branding to 2.2\" (#1344)"},{"Id":"468383500","IsPullRequest":true,"CreatedAt":"2019-07-16T17:19:36","Actor":"dotnet-maestro[bot]","Number":"1346","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190715.4\r\n- **Date Produced**: 7/15/2019 7:17 PM\r\n- **Commit**: fb27fd4d8a2b67d4333e33d4b898c65171c9f3c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19365.4\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1346","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1346)"},{"Id":"468629163","IsPullRequest":true,"CreatedAt":"2019-07-16T12:46:38","Actor":"dotnet-maestro[bot]","Number":"1347","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190715.14\r\n- **Date Produced**: 7/16/2019 8:58 AM\r\n- **Commit**: 4b348cc28f0ec996322d4d1a62cfae300f77604e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19365.14\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19365.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19365.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1347","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1347)"},{"Id":"468375012","IsPullRequest":true,"CreatedAt":"2019-07-15T23:25:46","Actor":"dotnet-maestro[bot]","Number":"1345","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190715.4\r\n- **Date Produced**: 7/15/2019 7:17 PM\r\n- **Commit**: fb27fd4d8a2b67d4333e33d4b898c65171c9f3c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19365.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19365.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1345","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1345)"},{"Id":"468110792","IsPullRequest":true,"CreatedAt":"2019-07-15T16:09:13","Actor":"dotnet-maestro[bot]","Number":"1343","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190714.1\r\n- **Date Produced**: 7/14/2019 3:24 PM\r\n- **Commit**: c14b80faff694bae4e085bad221e2e83410e5f33\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19364.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19364.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19364.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1343","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1343)"},{"Id":"468089492","IsPullRequest":true,"CreatedAt":"2019-07-15T12:15:20","Actor":"dotnet-maestro[bot]","Number":"1342","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190714.1\r\n- **Date Produced**: 7/14/2019 1:05 PM\r\n- **Commit**: 0c81c2bbdc49749e9940bc8858ebd16026d51277\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19364.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19364.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19364.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19364.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19364.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19364.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1342","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1342)"},{"Id":"467832518","IsPullRequest":true,"CreatedAt":"2019-07-14T12:59:01","Actor":"dotnet-maestro[bot]","Number":"1341","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190713.4\r\n- **Date Produced**: 7/14/2019 1:05 AM\r\n- **Commit**: 750e954f0c82accded6ca7ac5a3b0c053de647a5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19363.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19363.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19363.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1341","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1341)"},{"Id":"467828224","IsPullRequest":true,"CreatedAt":"2019-07-14T12:14:03","Actor":"dotnet-maestro[bot]","Number":"1340","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190713.1\r\n- **Date Produced**: 7/13/2019 12:59 PM\r\n- **Commit**: 8c94bc75d29cd84e3592e4044100d45a341653f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19363.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19363.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19363.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19363.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19363.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19363.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1340","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1340)"},{"Id":"467716205","IsPullRequest":true,"CreatedAt":"2019-07-13T12:54:47","Actor":"dotnet-maestro[bot]","Number":"1339","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190712.11\r\n- **Date Produced**: 7/13/2019 6:12 AM\r\n- **Commit**: 1841042b99062de13dc80098cede9413be569238\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19362.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19362.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1339","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1339)"},{"Id":"467712007","IsPullRequest":true,"CreatedAt":"2019-07-13T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1338","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190712.5\r\n- **Date Produced**: 7/12/2019 10:49 PM\r\n- **Commit**: 15f50ca6a9d0b441c9927421657fb9dc91206cc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19362.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19362.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1338","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1338)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"472663578","IsPullRequest":true,"CreatedAt":"2019-07-25T04:54:00","Actor":"cston","Number":"39754","RawContent":null,"Title":"Add [Obsolete] to vbNewLine","State":"open","Body":"Add `[Obsolete]` to `Microsoft.VisualBasic.Constants.vbNewLine` rather than `vbNarrow` in reference assembly.\r\n\r\n(release/3.0 branch)\r\n","Url":"https://github.com/dotnet/corefx/pull/39754","RelatedDescription":"Open PR \"Add [Obsolete] to vbNewLine\" (#39754)"},{"Id":"472661255","IsPullRequest":true,"CreatedAt":"2019-07-25T04:43:19","Actor":"cston","Number":"39753","RawContent":null,"Title":"Add [Obsolete] to vbNewLine","State":"open","Body":"Add `[Obsolete]` to `Microsoft.VisualBasic.Constants.vbNewLine` rather than `vbNarrow` in reference assembly.","Url":"https://github.com/dotnet/corefx/pull/39753","RelatedDescription":"Open PR \"Add [Obsolete] to vbNewLine\" (#39753)"},{"Id":"472614179","IsPullRequest":true,"CreatedAt":"2019-07-25T02:09:15","Actor":"Anipik","Number":"39752","RawContent":null,"Title":"Only Removing logName which are not actual logs from the geteventlogs  api output","State":"closed","Body":"The handle returned on the https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.EventLog/src/System/Diagnostics/EventLog.cs#L663 is invalid if the user doesnot have access to this log eg non admin trying to access security log.\r\nThe code added in this #38430 ended up removing such logs as well.\r\nThis Pr fixes that problem for release 3.0 branch","Url":"https://github.com/dotnet/corefx/pull/39752","RelatedDescription":"Closed or merged PR \"Only Removing logName which are not actual logs from the geteventlogs  api output\" (#39752)"},{"Id":"472496322","IsPullRequest":true,"CreatedAt":"2019-07-25T02:03:10","Actor":"ViktorHofer","Number":"39740","RawContent":null,"Title":"Enable xunit2007 analyzer","State":"closed","Body":"Contributes to #39697\r\n\r\nhttps://xunit.net/xunit.analyzers/rules/xUnit2007","Url":"https://github.com/dotnet/corefx/pull/39740","RelatedDescription":"Closed or merged PR \"Enable xunit2007 analyzer\" (#39740)"},{"Id":"472492534","IsPullRequest":true,"CreatedAt":"2019-07-25T01:58:45","Actor":"stephentoub","Number":"39739","RawContent":null,"Title":"Re-enable xUnit2008 (Assert.True with regex)","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/39697\r\ncc: @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/39739","RelatedDescription":"Closed or merged PR \"Re-enable xUnit2008 (Assert.True with regex)\" (#39739)"},{"Id":"472492004","IsPullRequest":true,"CreatedAt":"2019-07-25T00:46:55","Actor":"stephentoub","Number":"39738","RawContent":null,"Title":"Re-enable xUnit1016 (public MemberDatas)","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/39697\r\ncc: @ViktorHofer \r\n\r\nI thought I'd found all of these as part of working on https://github.com/dotnet/corefx/pull/36434, but apparently I missed a few (and some have snuck in since).","Url":"https://github.com/dotnet/corefx/pull/39738","RelatedDescription":"Closed or merged PR \"Re-enable xUnit1016 (public MemberDatas)\" (#39738)"},{"Id":"472518831","IsPullRequest":true,"CreatedAt":"2019-07-25T00:45:39","Actor":"Anipik","Number":"39744","RawContent":null,"Title":"Correcting the parameter name to match the ref file","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/39744","RelatedDescription":"Closed or merged PR \"Correcting the parameter name to match the ref file\" (#39744)"},{"Id":"472612773","IsPullRequest":true,"CreatedAt":"2019-07-25T00:44:59","Actor":"steveharter","Number":"39751","RawContent":null,"Title":"Reduce memory usage of tests and fix checks for escaped size","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/39081\r\n\r\nOn Linux, some writer tests were failing randomly by `SIGKILL`. I was able to repro these failures locally on Centos with 8.5GB of RAM max (including swap file).\r\n\r\nThe obvious fix is to just run these tests on Windows\\OSX where OutOfMemoryException is gracefully thrown and the process is not killed (due to Linux out-of-memory-killer). However, when inspecting the tests some were allocating unnecessary large amounts of memory in order to cause an expected exception. So the first change was to:\r\n- Change a couple tests to use appropriate max unescaped size + 1 (instead of 1GB+1 use 166.66MB + 1)\r\n\r\nIn addition, upon further testing I found asserts in the product code (not test code) were incorrectly comparing against unescaped (166.66MB) instead of max escaped (1GB) sizes for already-escaped values. So second change:\r\n- Fix Debug.Asserts that compare Length against already-escaped values to use appropriate length of 1GB (see `JsonConstants.MaxEscapedTokenSize` in the code)\r\n- Added test `WriteLargeKeyEscapedValue` to ensure the Debug.Assert changes are hit appropriately\r\n\r\nWith these changes, I no longer encountered the `SIGKILL` on my 8.5GB Centos machine. However, to guard against future issues with machines < 8.5GB:\r\n- Tests that allocate large amounts of memory now only run on Windows and OSX.\r\n\r\ncc @ericstj requesting approval to also add this to 3.0 branch once in master.\r\n","Url":"https://github.com/dotnet/corefx/pull/39751","RelatedDescription":"Open PR \"Reduce memory usage of tests and fix checks for escaped size\" (#39751)"},{"Id":"472605271","IsPullRequest":true,"CreatedAt":"2019-07-25T00:08:20","Actor":"buyaa-n","Number":"39750","RawContent":null,"Title":"Tests for JsonSerializerOptions.GetConverter() and converter methods","State":"open","Body":"For https://github.com/dotnet/corefx/issues/39457","Url":"https://github.com/dotnet/corefx/pull/39750","RelatedDescription":"Open PR \"Tests for JsonSerializerOptions.GetConverter() and converter methods\" (#39750)"},{"Id":"472510009","IsPullRequest":true,"CreatedAt":"2019-07-24T23:22:54","Actor":"wtgodbe","Number":"39743","RawContent":null,"Title":"Mark System.Numerics.Tensors package as nonshipping","State":"closed","Body":"Marks `System.Numerics.Tensors` as nonshipping so we stop publishing it to nuget.org, as well as giving it the `BlockStable` property so we don't generate a stable version of it.\r\n\r\nSince CoreFx defines its own package output directory scheme, and doesn't follow Arcade's `ArtifactsShippingPackagesDir`/`ArtifactsNonShippingPackagesDir` structure, we can't just wire into their calculation of `ManifestArtifactData` by setting `IsShippingPackage=false` in the .pkgproj. Instead, I define an explicit list of NonShippingPackages which currently contains only `System.Numerics.Tensors`. @mmitche, do you know if there's a way I can generate the manifest for this build to confirm that the package winds up in `nonshipping`, without first merging this commit?\r\n\r\n@safern @ericstj @ViktorHofer PTAL\r\n\r\nCC @tannergooding ","Url":"https://github.com/dotnet/corefx/pull/39743","RelatedDescription":"Closed or merged PR \"Mark System.Numerics.Tensors package as nonshipping\" (#39743)"},{"Id":"472583213","IsPullRequest":false,"CreatedAt":"2019-07-24T22:44:52","Actor":"kdawg1406","Number":"39749","RawContent":null,"Title":"DataAnnotations Missing RuleSet Feature Common To Most Other Validation Frameworks","State":"open","Body":"The DataAnnotations library is missing the RuleSet feature common to most other validation frameworks.\r\n\r\nThe proposal can be accomplished WITHOUT ANY BREAKING CHANGES.\r\n\r\nThe RuleSet feature provides the following:\r\n- ability to skip a validation rule based on the state of the object\r\n- ability to run a validation rule based on the state of the object\r\n\r\nYouTube video that describes the problem and solution https://www.youtube.com/watch?v=rLoEyZe2Fp4\r\n\r\nExample Project https://github.com/Oceanware/Extend-DataAnnotations-To-Have-RuleSets","Url":"https://github.com/dotnet/corefx/issues/39749","RelatedDescription":"Open issue \"DataAnnotations Missing RuleSet Feature Common To Most Other Validation Frameworks\" (#39749)"},{"Id":"472575604","IsPullRequest":true,"CreatedAt":"2019-07-24T22:29:29","Actor":"bartonjs","Number":"39748","RawContent":null,"Title":"Change the default symmetric encryption algorithm for EnvelopedCms","State":"open","Body":".NET Framework upgraded this for 4.8, .NET Core should for 3.0.\r\n\r\nThe Key Agreement (Diffie-Hellman) tests failed with AES-256, but that's because Windows CryptMsg doesn't support KeyAgreement + AES-256.\r\n\r\nNo one does Key Agreement, though (since it's nigh impossible to even get an IFC Diffie-Hellman certificate).","Url":"https://github.com/dotnet/corefx/pull/39748","RelatedDescription":"Open PR \"Change the default symmetric encryption algorithm for EnvelopedCms\" (#39748)"},{"Id":"472556287","IsPullRequest":true,"CreatedAt":"2019-07-24T21:53:34","Actor":"ahsonkhan","Number":"39747","RawContent":null,"Title":"[release/3.0] Update dummy fields within the ref by auto-generating them from the source assembly.","State":"open","Body":"Porting https://github.com/dotnet/corefx/pull/39687 since its meet the 3.0 bar.\r\n\r\nManually grabbing the changes specific to dummy primitive fields from the auto-generation (from https://github.com/ahsonkhan/corefx/commit/ceec15160b977fa4850c3974f3b015bcfdbc1b34).\r\n\r\ncc @ericstj ","Url":"https://github.com/dotnet/corefx/pull/39747","RelatedDescription":"Open PR \"[release/3.0] Update dummy fields within the ref by auto-generating them from the source assembly.\" (#39747)"},{"Id":"472542537","IsPullRequest":false,"CreatedAt":"2019-07-24T21:29:15","Actor":"tonyredondo","Number":"39746","RawContent":null,"Title":"NullReferenceException in Regex.Replace","State":"open","Body":"The following code works when the project is targeting `netcoreapp2.2` framework, but fails with a **`NullReferenceException`** in `netcoreapp3.0` preview7.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace BugDemo\r\n{\r\n    class Program\r\n    {\r\n        private static readonly Regex EnvironmentTemplateFormatRegex = \r\n            new Regex(@\"{Env:([A-Za-z0-9_ |+-\\\\*/_!\"\"$% &\\(\\) = '?Â¡Â¿.:,;<>]*)}\", \r\n                RegexOptions.Compiled | RegexOptions.Multiline);\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(ReplaceEnvironmentTemplate(\"value value {Env:MYENVVAR} value value\"));\r\n        }\r\n\r\n        public static string ReplaceEnvironmentTemplate(string source)\r\n        {\r\n            if (source is null) return null;\r\n            var result = EnvironmentTemplateFormatRegex.Replace(source, match =>\r\n            {\r\n                if (match.Groups.Count < 2) return match.Value;\r\n                var key = match.Groups[1].Value;\r\n                return Environment.GetEnvironmentVariable(key);\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n![image](https://user-images.githubusercontent.com/69803/61830151-c10afd00-ae6a-11e9-8daf-81bf6edc05cf.png)\r\n","Url":"https://github.com/dotnet/corefx/issues/39746","RelatedDescription":"Open issue \"NullReferenceException in Regex.Replace\" (#39746)"},{"Id":"472526259","IsPullRequest":true,"CreatedAt":"2019-07-24T21:02:15","Actor":"geoffkizer","Number":"39745","RawContent":null,"Title":"HTTP2: fix race between request failure and response body read","State":"open","Body":"Fixes #39729\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39745","RelatedDescription":"Open PR \"HTTP2: fix race between request failure and response body read\" (#39745)"},{"Id":"472501748","IsPullRequest":true,"CreatedAt":"2019-07-24T20:23:43","Actor":"cston","Number":"39742","RawContent":null,"Title":"Adjust precision of Microsoft.VisualBasic.Tests.FinancialTests based on platform","State":"open","Body":"Fixes #39380 \r\nFixes #39393","Url":"https://github.com/dotnet/corefx/pull/39742","RelatedDescription":"Open PR \"Adjust precision of Microsoft.VisualBasic.Tests.FinancialTests based on platform\" (#39742)"},{"Id":"472499996","IsPullRequest":false,"CreatedAt":"2019-07-24T20:20:57","Actor":"Joelius300","Number":"39741","RawContent":null,"Title":"How to use JsonStringEnumConverter","State":"open","Body":"Since I'm trying to migrate from `Newtonsoft.Json` to the new `System.Text.Json` APIs, I have to be able to use a Enum-string converter.  \r\n\r\nIn json.net you can do this really easily with this attribute on the enum.  \r\n```\r\n[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]\r\n```\r\n\r\nSince there is both a [JsonConverterAttribute](https://docs.microsoft.com/en-us/dotnet/api/system.text.json.serialization.jsonconverterattribute?view=netcore-3.0) and a [JsonStringEnumConverter](https://docs.microsoft.com/en-us/dotnet/api/system.text.json.serialization.jsonstringenumconverter?view=netcore-3.0) class, I thought you would do it like this:\r\n```\r\n[System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]\r\n```\r\n\r\nHowever after getting a compiler error I quickly realized that the `JsonConverterAttribute` can't even be used on an Enum because it only has the following three `AttributeTargets`-flags.  \r\n - `AttributeTargets.Class`\r\n - `AttributeTargets.Struct`\r\n - `AttributeTargets.Property`\r\n\r\nAre you not supposed to use this attribute and converter like this?  \r\nAre there any samples because there I've not found any in [the docs](https://docs.microsoft.com/en-us/dotnet/api/system.text.json.serialization?view=netcore-3.0)?","Url":"https://github.com/dotnet/corefx/issues/39741","RelatedDescription":"Open issue \"How to use JsonStringEnumConverter\" (#39741)"},{"Id":"472462222","IsPullRequest":true,"CreatedAt":"2019-07-24T19:18:51","Actor":"stephentoub","Number":"39737","RawContent":null,"Title":"Re-enable xUnit1025 (duplicate InlineData)","State":"open","Body":"Contributes to https://github.com/dotnet/corefx/issues/39697\r\nContributes to https://github.com/dotnet/corefx/issues/39650\r\ncc: @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/39737","RelatedDescription":"Open PR \"Re-enable xUnit1025 (duplicate InlineData)\" (#39737)"},{"Id":"472430519","IsPullRequest":false,"CreatedAt":"2019-07-24T18:27:32","Actor":"Doggie52","Number":"39736","RawContent":null,"Title":"Serializing List<object>'s yields empty output","State":"open","Body":"Hopefully a simple test case comparing `System.Text.Json` with `Newtonsoft.Json`:\r\n\r\n```c#\r\nusing System.Collections.Generic;\r\n\r\nnamespace Test\r\n{\r\n\tpublic class Foo\r\n\t{\r\n\t\tpublic string Name;\r\n\t\tpublic List<Bar> Bars = new List<Bar>();\r\n\t}\r\n\r\n\tpublic class Bar\r\n\t{\r\n\t\tpublic string Location;\r\n\t}\r\n\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar foos = new List<Foo>();\r\n\r\n\t\t\tvar oneBar = new Bar {\r\n\t\t\t\tLocation = \"Somewhere\"\r\n\t\t\t};\r\n\r\n\t\t\tvar oneFoo = new Foo();\r\n\r\n\t\t\toneFoo.Name = \"Test\";\r\n\t\t\toneFoo.Bars.Add(oneBar);\r\n\r\n\t\t\tfoos.Add(oneFoo);\r\n\r\n\t\t\tvar test1 = System.Text.Json.JsonSerializer.Serialize(foos);\r\n\t\t\tvar test2 = Newtonsoft.Json.JsonConvert.SerializeObject(foos);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nWhy does `test1` yield `[{}]` whilst `test2` yields (the expected) `[{\"Name\":\"Test\",\"Bars\":[{\"Location\":\"Somewhere\"}]}]` ? Am I missing something crucial here?","Url":"https://github.com/dotnet/corefx/issues/39736","RelatedDescription":"Open issue \"Serializing List<object>'s yields empty output\" (#39736)"},{"Id":"472412093","IsPullRequest":false,"CreatedAt":"2019-07-24T17:42:35","Actor":"Joelius300","Number":"39735","RawContent":null,"Title":"Globally ignore null values for all properties and subclasses (without JsonSerializerOptions)","State":"open","Body":"Because [IJSRuntime won't support customizable serialization](https://github.com/aspnet/AspNetCore/issues/11954) there is currently no way of using `JsonSerializerOptions` with `IgnoreNullValues = true`. This seems like a functionality which shouldn't be missing as it leads to dead-ends really fast - but sadly [the AspNetCore-team has confirmed that this is not planned and won't be added](https://github.com/aspnet/AspNetCore/issues/11954#issuecomment-509298779).  \r\n\r\nTo work around this I thought of something like a `JsonIgnoreNullValuesAttribute`.  \r\n\r\nYou could use the `JsonIgnoreNullValuesAttribute` on the whole class or single properties. Furthermore it would be nice to have something like a `Recursive: bool`-property on the `JsonIgnoreNullValuesAttribute` which would allow you to also ignore null-properties of a property in this class without adding the attribute to that class as well.  \r\n\r\nSee the below example:\r\n```\r\n[JsonIgnoreNullValues(Recursive = true)]\r\nclass TopLevelClass\r\n{\r\n    public OtherClass NestedProperty {get; set;}\r\n}\r\n\r\nclass OtherClass\r\n{\r\n    public string Name {get; set;}\r\n    public int Level {get; set;}\r\n}\r\n\r\nvoid Serialize()\r\n{\r\n    var obj = new TopLevelClass \r\n    {\r\n        NestedProperty = new OtherClass\r\n        {\r\n            Level = 2,\r\n            Name = null\r\n        }\r\n    }\r\n\r\n    // Serializing obj (without any options) would result in this json:\r\n    /*\r\n    {\r\n        \"NestedProperty\": {\r\n            \"Level\": 2\r\n        }\r\n    }\r\n    */\r\n}\r\n```\r\n\r\nIt would probably be much better and simpler to add a new (optional) parameter to `IJSRuntime.InvokeAsync` of type `JsonSerializerOptions` but this sadly seems to not be possible.  \r\n\r\nAs far as I know this serializer is still worked on so there will be many features added, right? In [the roadmap](https://github.com/dotnet/corefx/blob/master/src/System.Text.Json/roadmap/README.md) there aren't many features listed that are currently being worked on. Am I looking in the wrong place or are these not publicly available?","Url":"https://github.com/dotnet/corefx/issues/39735","RelatedDescription":"Open issue \"Globally ignore null values for all properties and subclasses (without JsonSerializerOptions)\" (#39735)"},{"Id":"472360019","IsPullRequest":true,"CreatedAt":"2019-07-24T17:14:02","Actor":"stephentoub","Number":"39731","RawContent":null,"Title":"Re-enable CA1507 (use nameof)","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/39731","RelatedDescription":"Closed or merged PR \"Re-enable CA1507 (use nameof)\" (#39731)"},{"Id":"472396512","IsPullRequest":true,"CreatedAt":"2019-07-24T17:04:04","Actor":"ViktorHofer","Number":"39734","RawContent":null,"Title":"Upgrade Windows Nano Server to 1809","State":"open","Body":"cc @ericstj @safern checking if failures are still happening with the new image and on an updated server.","Url":"https://github.com/dotnet/corefx/pull/39734","RelatedDescription":"Open PR \"Upgrade Windows Nano Server to 1809\" (#39734)"},{"Id":"472388037","IsPullRequest":false,"CreatedAt":"2019-07-24T16:45:10","Actor":"DavidKiff","Number":"39733","RawContent":null,"Title":"Inconsistent summation of nullable doubles.","State":"open","Body":"Why does the following not output the same value?\r\n\r\nvar x = null + 10d; // Correctly returns null.\r\n\r\nvar y = new[] { (double?)null, 10d }.Sum(); // Incorrectly returns 10\r\n\r\nIf I wanted 10, then I could have null coalesced the nullable double to 0 in a select or filtered out nulls.  This way around, I cant \"fix\" it, without writing my own Sum.  This perhaps should be named SumWithoutNulls!","Url":"https://github.com/dotnet/corefx/issues/39733","RelatedDescription":"Open issue \"Inconsistent summation of nullable doubles.\" (#39733)"},{"Id":"472332460","IsPullRequest":true,"CreatedAt":"2019-07-24T16:20:58","Actor":"ViktorHofer","Number":"39730","RawContent":null,"Title":"Enable xunit2012 analyzer","State":"closed","Body":"Contributes towards https://github.com/dotnet/corefx/issues/39697","Url":"https://github.com/dotnet/corefx/pull/39730","RelatedDescription":"Closed or merged PR \"Enable xunit2012 analyzer\" (#39730)"},{"Id":"472373229","IsPullRequest":false,"CreatedAt":"2019-07-24T16:08:10","Actor":"abelykh0","Number":"39732","RawContent":null,"Title":"SmtpClient.Send crashes with Segmentation fault","State":"open","Body":"The example below crashes with Segmentation fault on Linux. The same code works fine (i.e. throws `System.Net.Mail.SmtpException`) in 2.2 or preview 6.\r\n\r\n```csharp\r\nusing System.Net.Mail;\r\nnamespace ConsoleApp31\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            MailMessage message = new MailMessage(new MailAddress(\"a@example.com\"), new MailAddress(\"a@example.com\"));\r\n            SmtpClient client = new SmtpClient(\"smtp.example.com\");\r\n            client.Send(message);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012821\r\n Commit:    6348f1068a\r\n\r\nRuntime Environment:\r\n OS Name:     opensuse-leap\r\n OS Version:  15.1\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview7-012821/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27912-14\r\n  Commit:  4da6ee6450\r\n\r\n.NET Core SDKs installed:\r\n  2.2.301 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview7-012821 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [/usr/share/dotnet/shared/Microsoft.NETCore.App]```\r\n","Url":"https://github.com/dotnet/corefx/issues/39732","RelatedDescription":"Open issue \"SmtpClient.Send crashes with Segmentation fault\" (#39732)"},{"Id":"472326672","IsPullRequest":true,"CreatedAt":"2019-07-24T14:54:53","Actor":"ViktorHofer","Number":"39728","RawContent":null,"Title":"Update coverlet version","State":"closed","Body":"Fixes a NullReferenceException when instrumenting properties without a getter: https://github.com/tonerdo/coverlet/commit/e3d1a6c9df64b3ff95c7faeb5b7b90c7eebe30dd","Url":"https://github.com/dotnet/corefx/pull/39728","RelatedDescription":"Closed or merged PR \"Update coverlet version\" (#39728)"},{"Id":"472280723","IsPullRequest":true,"CreatedAt":"2019-07-24T14:50:32","Actor":"stephentoub","Number":"39725","RawContent":null,"Title":"Add comment descriptions to remaining xunit analyzer suppressions","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/39725","RelatedDescription":"Closed or merged PR \"Add comment descriptions to remaining xunit analyzer suppressions\" (#39725)"},{"Id":"472328092","IsPullRequest":false,"CreatedAt":"2019-07-24T14:49:28","Actor":"stephentoub","Number":"39729","RawContent":null,"Title":"PostAsyncDuplex_RequestContentExceptionAfterResponseEndReceivedButBeforeConsumed_ResetsStreamAndThrowsOnResponseStreamRead failed in CI","State":"open","Body":"``` System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2/PostAsyncDuplex_RequestContentExceptionAfterResponseEndReceivedButBeforeConsumed_ResetsStreamAndThrowsOnResponseStreamRead\r\n\r\nWindows.7.Amd64.Open-x86-Release\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.ThrowsException\r\nMessage :\r\nAssert.Throws() Failure\r\nExpected: typeof(System.IO.IOException)\r\nActual:   (No exception was thrown)\r\nStack Trace :\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.PostAsyncDuplex_RequestContentExceptionAfterResponseEndReceivedButBeforeConsumed_ResetsStreamAndThrowsOnResponseStreamRead() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 2252\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/corefx/issues/39729","RelatedDescription":"Open issue \"PostAsyncDuplex_RequestContentExceptionAfterResponseEndReceivedButBeforeConsumed_ResetsStreamAndThrowsOnResponseStreamRead failed in CI\" (#39729)"},{"Id":"472312403","IsPullRequest":true,"CreatedAt":"2019-07-24T14:21:23","Actor":"hughbe","Number":"39727","RawContent":null,"Title":"Cleanup GDI interop in System.Drawing.Common","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/39727","RelatedDescription":"Open PR \"Cleanup GDI interop in System.Drawing.Common\" (#39727)"},{"Id":"472306493","IsPullRequest":true,"CreatedAt":"2019-07-24T14:10:44","Actor":"hughbe","Number":"39726","RawContent":null,"Title":"Add IPEndPoint tests and fix some bugs","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/39713","Url":"https://github.com/dotnet/corefx/pull/39726","RelatedDescription":"Open PR \"Add IPEndPoint tests and fix some bugs\" (#39726)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"472665895","IsPullRequest":true,"CreatedAt":"2019-07-25T05:03:58","Actor":"sharwell","Number":"37466","RawContent":null,"Title":"Use AnalyzerConfigOptionsProvider when available","State":"open","Body":"This pull request updates the NuGet formatting analyzer to use `AnalyzerConfigOptionsProvider` instead of Microsoft.VisualStudio.CodingConventions whenever the analyzers are used with Roslyn 3.3+. The new options provider overwhelmingly outperforms the .editorconfig implementation in Visual Studio, so we are expecting performance gains of nearly 50% across the build for solutions using this analyzer.","Url":"https://github.com/dotnet/roslyn/pull/37466","RelatedDescription":"Open PR \"Use AnalyzerConfigOptionsProvider when available\" (#37466)"},{"Id":"472660827","IsPullRequest":false,"CreatedAt":"2019-07-25T04:41:18","Actor":"sharwell","Number":"37465","RawContent":null,"Title":"Verify that _modelToDetector does not hold objects forever","State":"open","Body":"https://github.com/dotnet/roslyn/blob/4c171beb0ea8e18e020c1a75bac8e0229e1b4fd5/src/Workspaces/Core/Portable/EmbeddedLanguages/RegularExpressions/LanguageServices/RegexPatternDetector.cs#L74\r\n\r\n`_modelToDetector` is a conditional weak table, where the values in the table have a strong reference to the key. @stephentoub will this pattern prevent the values in the table from ever getting collected?","Url":"https://github.com/dotnet/roslyn/issues/37465","RelatedDescription":"Open issue \"Verify that _modelToDetector does not hold objects forever\" (#37465)"},{"Id":"472603842","IsPullRequest":true,"CreatedAt":"2019-07-25T01:30:19","Actor":"dotnet-bot","Number":"37462","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37462","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#37462)"},{"Id":"472603988","IsPullRequest":true,"CreatedAt":"2019-07-25T01:30:07","Actor":"dotnet-bot","Number":"37463","RawContent":null,"Title":"Merge master to features/compilerNext","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/compilerNext.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/compilerNext\ngit reset --hard upstream/features/compilerNext\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/compilerNext --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37463","RelatedDescription":"Closed or merged PR \"Merge master to features/compilerNext\" (#37463)"},{"Id":"472619286","IsPullRequest":false,"CreatedAt":"2019-07-25T01:18:19","Actor":"tmat","Number":"37464","RawContent":null,"Title":"TestTypeImportCompletion failed in CI","State":"open","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=278273&view=ms.vss-test-web.build-test-results-tab&runId=7686360&resultId=100429&paneView=debug\r\n\r\n```\r\nCurrent completion is not hard-selected.\\r\\nExpected: True\\r\\nActual: False\r\n```\r\n\r\n```\r\n  at Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.LegacyTestState.VB$StateMachine_32_AssertSelectedCompletionItem.MoveNext() in /_/src/EditorFeatures/TestUtilities2/Intellisense/LegacyTestState.vb:line 205\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.Editor.UnitTests.IntelliSense.CSharpCompletionCommandHandlerTests.VB$StateMachine_206_TestTypeImportCompletion.MoveNext() in /_/src/EditorFeatures/Test2/IntelliSense/CSharpCompletionCommandHandlerTests.vb:line 5212\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37464","RelatedDescription":"Open issue \"TestTypeImportCompletion failed in CI\" (#37464)"},{"Id":"472278142","IsPullRequest":true,"CreatedAt":"2019-07-24T23:20:32","Actor":"AArnott","Number":"37449","RawContent":null,"Title":"Update TPL Dataflow to 4.9.0","State":"closed","Body":"Note that this leaves the old ID Microsoft.TPL.Dataflow at 4.5.24 (the only one that shipped) and updates the newer ID System.Threading.Tasks.Dataflow.\r\n\r\nWhy is the old one still here? Should we remove it now, particularly since the two versions no longer match?","Url":"https://github.com/dotnet/roslyn/pull/37449","RelatedDescription":"Closed or merged PR \"Update TPL Dataflow to 4.9.0\" (#37449)"},{"Id":"472590594","IsPullRequest":false,"CreatedAt":"2019-07-24T23:04:10","Actor":"tmat","Number":"37461","RawContent":null,"Title":"Incorrect spilling of stackalloc in async method","State":"open","Body":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/61834392-a3b73e00-ae2c-11e9-8899-a6cfec62e2b4.png)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```C#\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\npublic class P\r\n{\r\n    static object F1() => 1;\r\n    static object F2() => 1;\r\n    static int G(object obj, Span<int> span) => span.Length;\r\n\r\n    static async Task Async1(Object obj, int i) { await Task.Delay(1); }\r\n\r\n    static async Task Main()\r\n    {\r\n        await Async1(F1(), G(F2(), stackalloc int[] { 1, 2, 3 }));\r\n    }\r\n}\r\n```\r\n\r\n**Actual**\r\n\r\nThe program compiles and throws \r\n\r\n> System.TypeLoadException: 'A ByRef-like type cannot be used as the type for an instance field in a non-ByRef-like type.'\r\n\r\nat runtime since the lowering of stackalloc in await expression spills `Span<T>` to a state machine field.\r\n\r\n**Expected**\r\n\r\nCompiler error.","Url":"https://github.com/dotnet/roslyn/issues/37461","RelatedDescription":"Open issue \"Incorrect spilling of stackalloc in async method\" (#37461)"},{"Id":"472577880","IsPullRequest":false,"CreatedAt":"2019-07-24T22:34:04","Actor":"tmat","Number":"37460","RawContent":null,"Title":"EnC: Consider locals declared within expressions (out var, patterns) when weighting blocks","State":"open","Body":"When comparing blocks we currently positively bias the weight function for blocks with matching local variable declarations vs. non-matching. We only consider variables declared via local variable declaration statement though, not in out vars or patters that occur in the block. \r\n\r\nSince the goal is to match locals to existing ones defined in the previous generation as much as possible it seems odd that we would not consider all local declarations.","Url":"https://github.com/dotnet/roslyn/issues/37460","RelatedDescription":"Open issue \"EnC: Consider locals declared within expressions (out var, patterns) when weighting blocks\" (#37460)"},{"Id":"472567049","IsPullRequest":true,"CreatedAt":"2019-07-24T22:12:59","Actor":"agocke","Number":"37459","RawContent":null,"Title":"Support local constants being captured in static local functions","State":"open","Body":"Fixes #36091","Url":"https://github.com/dotnet/roslyn/pull/37459","RelatedDescription":"Open PR \"Support local constants being captured in static local functions\" (#37459)"},{"Id":"472554098","IsPullRequest":false,"CreatedAt":"2019-07-24T22:06:19","Actor":"joshlang","Number":"37457","RawContent":null,"Title":"CS8614 (Nullability doesn't match) false warning","State":"closed","Body":"Create two class libraries (with `<Nullable>enable</Nullable>` and `<LangVersion>8.0</LangVersion>` in the project files).\r\n\r\nIn one, add this interface:\r\n```\r\npublic interface IMEOW\r\n{\r\n    void Something(string? a, string? b, bool c);\r\n}\r\n```\r\n\r\nIn the other, add a reference to the first project and add this class:\r\n```\r\nclass MEOW : IMEOW\r\n{\r\n    public void Something(string? a, string? b, bool c) { }\r\n}\r\n```\r\n\r\nNow build.  This warning is printed in Build output (but not in Warnings list):\r\n`2>Meow.cs(9,17,9,26): warning CS8614: Nullability of reference types in type of parameter 'c' of 'void MEOW.Something(string? a, string? b, bool c)' doesn't match implicitly implemented member 'void IMEOW.Something(string? a, string? b, bool c)'.`\r\n\r\nThe signatures are identical, so the warning should not exist.\r\n\r\nThe problem doesn't occur if the interface and class are in the same class library, or if one of those parameters is removed.","Url":"https://github.com/dotnet/roslyn/issues/37457","RelatedDescription":"Closed issue \"CS8614 (Nullability doesn't match) false warning\" (#37457)"},{"Id":"472555305","IsPullRequest":false,"CreatedAt":"2019-07-24T21:51:55","Actor":"portal-chan","Number":"37458","RawContent":null,"Title":"\"csc.exe\" exited with code -2146232797.","State":"open","Body":"**Version Used**: \r\nVisual Studio 16.3.0 Preview 1\r\n\r\nVisual Studio 16.3.0 Preview 1 updated .Net Core 3.0 from Preview 6 to 7 and now a project no longer builds with the error `\"csc.exe\" exited with code -2146232797.`\r\nThe same had started happening with earlier Visual Studio versions but before building from the command line with `dotnet build` still worked.\r\n\r\nAfter the update trying to build it with `dotnet build` gives the following:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : Process terminated. \r\nSystem.NotImplementedException: The method or operation is not implemented. [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReadOnlySpanFromArray(BoundReadOnlySpanFromArray node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCoreWithStackGuard(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitReturnStatement(BoundReturnStatement node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(BoundSequencePoint node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePoint.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(BoundBlock node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(BoundStatementList node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Analyze(BoundNode node, Dictionary`2 locals, Boolean debugFriendly) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.Optimizer.Optimize(BoundStatement src, Boolean debugFriendly, HashSet`1& stackLocals) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator..ctor(MethodSymbol method, BoundStatement boundBody, ILBuilder builder, PEModuleBuilder moduleBuilder, DiagnosticBag diagnostics, OptimizationLevel optimizations, Boolean emittingPdb) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(PEModuleBuilder moduleBuilder, MethodSymbol method, Int32 methodOrdinal, BoundStatement block, ImmutableArray`1 lambdaDebugInfo, ImmutableArray`1 closureDebugInfo, StateMachineTypeSymbol stateMachineTypeOpt, VariableSlotAllocator variableSlotAllocatorOpt, DiagnosticBag diagnostics, DebugDocumentProvider debugDocumentProvider, ImportChain importChainOpt, Boolean emittingPdb, Boolean emitTestCoverageData, ImmutableArray`1 dynamicAnalysisSpans, AsyncForwardEntryPoint entryPointOpt) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Environment.FailFast(System.String, System.Exception) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.FatalError.Report(System.Exception, System.Action`1<System.Exception>) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReadOnlySpanFromArray(Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCoreWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePoint.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(Microsoft.CodeAnalysis.CSharp.BoundStatementList) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Analyze(Microsoft.CodeAnalysis.CSharp.BoundNode, System.Collections.Generic.Dictionary`2<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol,Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseInfo>, Boolean) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.Optimizer.Optimize(Microsoft.CodeAnalysis.CSharp.BoundStatement, Boolean, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol> ByRef) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator..ctor(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CodeGen.ILBuilder, Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.OptimizationLevel, Boolean) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.CSharp.ImportChain, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan>, AsyncForwardEntryPoint) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task.InnerInvoke() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(System.Threading.Thread, System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.Tasks.Task.ExecuteFromThreadPool(System.Threading.Thread) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading.ThreadPoolWorkQueue.Dispatch() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error : System.NotImplementedException: The method or operation is not implemented. [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundNode.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReadOnlySpanFromArray(BoundReadOnlySpanFromArray node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReadOnlySpanFromArray.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCoreWithStackGuard(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(BoundExpression node, ExprContext context) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitReturnStatement(BoundReturnStatement node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundReturnStatement.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(BoundSequencePoint node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundSequencePoint.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(BoundBlock node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(BoundStatementList node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(BoundTreeVisitor visitor) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Analyze(BoundNode node, Dictionary`2 locals, Boolean debugFriendly) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.Optimizer.Optimize(BoundStatement src, Boolean debugFriendly, HashSet`1& stackLocals) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator..ctor(MethodSymbol method, BoundStatement boundBody, ILBuilder builder, PEModuleBuilder moduleBuilder, DiagnosticBag diagnostics, OptimizationLevel optimizations, Boolean emittingPdb) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(PEModuleBuilder moduleBuilder, MethodSymbol method, Int32 methodOrdinal, BoundStatement block, ImmutableArray`1 lambdaDebugInfo, ImmutableArray`1 closureDebugInfo, StateMachineTypeSymbol stateMachineTypeOpt, VariableSlotAllocator variableSlotAllocatorOpt, DiagnosticBag diagnostics, DebugDocumentProvider debugDocumentProvider, ImportChain importChainOpt, Boolean emittingPdb, Boolean emitTestCoverageData, ImmutableArray`1 dynamicAnalysisSpans, AsyncForwardEntryPoint entryPointOpt) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) [C:\\ProjectPath\\ProjectName.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\Microsoft.CSharp.Core.targets(59,5): error :    at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() [C:\\ProjectPath\\ProjectName.csproj]\r\n```\r\n\r\nOther smaller projects still run fine so I have no idea where to even begin looking for a reproducible example.\r\n","Url":"https://github.com/dotnet/roslyn/issues/37458","RelatedDescription":"Open issue \"\"csc.exe\" exited with code -2146232797.\" (#37458)"},{"Id":"472512254","IsPullRequest":false,"CreatedAt":"2019-07-24T20:40:24","Actor":"fitdev","Number":"37456","RawContent":null,"Title":"VBCSCompiler.exe hangs when building .Net Core 3 Preview 7 app from Visual Studio 16.3 Preview 1","State":"open","Body":"**Versions Used**:\r\nRoslyn 3.3.0-beta1-19360-03\r\nVS 2019 16.3.0 Preview 1\r\n.Net Core 3.0.100-preview7-012821\r\nOS: Windows 10 x64 1803\r\n\r\nActually, this issue started happening with VS 2019 16.2.0 Preview 1 at the end of May, back then I restored older version of Roslyn that came with VS 2019 16.1.0 (Net Core 3 Preview 5) to \"fix\" it, thinking newer previews will fix the issue. However, now it was announced that .Net Core 3 previews are aligned with VS, and the exact issue remains I decided to report it, as I can no longer continue using older Roslyn.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. I initiate build of my project with Visual Studio, which ultimately runs: `\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Roslyn\\VBCSCompiler.exe\" \"-pipename:IVamwVzaBdrypv9GgVkRsjt1ff4WYeqbiBsnRMXwDlE\"`\r\n2. The process `VBCSCompiler.exe` ends up utilizing 100% CPU (1 thread) with the following stack trace:\r\n\r\n```\r\n0, ntoskrnl.exe!KeWaitForMutexObject+0x30c1\r\n1, ntoskrnl.exe!KeWaitForMutexObject+0x1521\r\n2, ntoskrnl.exe!KeWaitForMutexObject+0xadb\r\n3, ntoskrnl.exe!KeWaitForMutexObject+0x1ff\r\n4, ntoskrnl.exe!ExWaitForRundownProtectionRelease+0x9fa\r\n5, ntoskrnl.exe!KeWaitForMutexObject+0x31cb\r\n6, ntoskrnl.exe!KeSynchronizeExecution+0x2dec\r\n7, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.EqualsComplicatedCases(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.TypeCompareKind, System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol,Boolean>) + 0x12e <-- 0x7ffb65ee7bce\r\n8, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations+NonLazyType.TypeSymbolEquals(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations, Microsoft.CodeAnalysis.TypeCompareKind, System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol,Boolean>) + 0x67 <-- 0x7ffb65f13497\r\n9, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations.Equals(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations, Microsoft.CodeAnalysis.TypeCompareKind, System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol,Boolean>) + 0xbb <-- 0x7ffb65ee91db\r\n10, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.EqualsComplicatedCases(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.TypeCompareKind, System.Collections.Generic.IReadOnlyDictionary`2<Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol,Boolean>) + 0x190 <-- 0x7ffb65ee7c30\r\n11, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations.SubstituteTypeCore(Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap, Boolean) + 0x145 <-- 0x7ffb65ee5b65\r\n12, Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations+NonLazyType.SubstituteType(Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations, Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap, Boolean) + 0x22 <-- 0x7ffb65ee5722\r\n13, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.SubstituteTypeArguments(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.Symbols.TypeWithAnnotations>) + 0x122 <-- 0x7ffb669ffb02\r\n14, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.RemapLocalFunction(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.CSharp.BoundExpression ByRef, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol ByRef, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundExpression> ByRef, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.RefKind> ByRef) + 0x575 <-- 0x7ffb669ff6c5\r\n15, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) + 0xbc <-- 0x7ffb6696929c\r\n16, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x26 <-- 0x7ffb6652c0f6\r\n17, Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x44 <-- 0x7ffb65fdf614\r\n18, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement) + 0x16 <-- 0x7ffb6652bf76\r\n19, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) + 0x57 <-- 0x7ffb66924937\r\n20, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint) + 0x16 <-- 0x7ffb66532aa6\r\n21, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.RewriteBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>) + 0x14b <-- 0x7ffb669673bb\r\n22, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) + 0xeb <-- 0x7ffb6696675b\r\n23, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.RewriteLambdaOrLocalFunction(Microsoft.CodeAnalysis.CSharp.IBoundLambdaOrFunction, Microsoft.CodeAnalysis.CSharp.ClosureKind ByRef, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedClosureEnvironment ByRef, Microsoft.CodeAnalysis.CSharp.BoundNode ByRef, Microsoft.CodeAnalysis.CodeGen.DebugId ByRef, Microsoft.CodeAnalysis.CodeGen.DebugId ByRef) + 0x3d4 <-- 0x7ffb6696c014\r\n24, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.RewriteLambdaConversion(Microsoft.CodeAnalysis.CSharp.BoundLambda) + 0x19a <-- 0x7ffb6696acfa\r\n25, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitConversion(Microsoft.CodeAnalysis.CSharp.BoundConversion) + 0x57 <-- 0x7ffb66969eb7\r\n26, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x26 <-- 0x7ffb6652c0f6\r\n27, Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x44 <-- 0x7ffb65fdf614\r\n28, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) + 0x40 <-- 0x7ffb665221c0\r\n29, Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) + 0x7e <-- 0x7ffb66956f0e\r\n30, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) + 0x13d <-- 0x7ffb6696931d\r\n31, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x26 <-- 0x7ffb6652c0f6\r\n32, Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x44 <-- 0x7ffb65fdf614\r\n33, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>) + 0x40 <-- 0x7ffb665221c0\r\n34, Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) + 0x7e <-- 0x7ffb66956f0e\r\n35, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitCall(Microsoft.CodeAnalysis.CSharp.BoundCall) + 0x13d <-- 0x7ffb6696931d\r\n36, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x26 <-- 0x7ffb6652c0f6\r\n37, Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x22 <-- 0x7ffb66514462\r\n38, Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression) + 0x51 <-- 0x7ffb65fdf621\r\n39, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.BoundReturnStatement) + 0x16 <-- 0x7ffb6652bf76\r\n40, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) + 0x57 <-- 0x7ffb66924937\r\n41, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(Microsoft.CodeAnalysis.CSharp.BoundSequencePoint) + 0x16 <-- 0x7ffb66532aa6\r\n42, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.RewriteBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>) + 0x14b <-- 0x7ffb669673bb\r\n43, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.IntroduceFrame(Microsoft.CodeAnalysis.CSharp.BoundNode, ClosureEnvironment, System.Func`3<Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>,Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>,Microsoft.CodeAnalysis.CSharp.BoundNode>) + 0x855 <-- 0x7ffb669689c5\r\n44, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock) + 0x9f <-- 0x7ffb6696670f\r\n45, Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.Visit(Microsoft.CodeAnalysis.CSharp.BoundNode) + 0x57 <-- 0x7ffb66924937\r\n46, Microsoft.CodeAnalysis.CSharp.LambdaRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.DiagnosticBag, System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol>) + 0xf2 <-- 0x7ffb66934b82\r\n47, Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef) + 0x1ec <-- 0x7ffb6652a95c\r\n48, Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState) + 0x9f8 <-- 0x7ffb665118f8\r\n49, Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol) + 0x585 <-- 0x7ffb6650d995\r\n50, Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass22_0.<CompileNamedTypeAsTask>b__0() + 0x23 <-- 0x7ffb6650ce43\r\n51, Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0() + 0x6e <-- 0x7ffb664a293e\r\n52, System.Threading.Tasks.Task.Execute() + 0x47 <-- mscorlib.ni.dll+0x5f9d47\r\n53, System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean) + 0x172 <-- mscorlib.ni.dll+0x58cef2\r\n54, System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean) + 0x15 <-- mscorlib.ni.dll+0x58cd75\r\n55, System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef) + 0x231 <-- mscorlib.ni.dll+0x5fa001\r\n56, System.Threading.Tasks.Task.ExecuteEntry(Boolean) + 0xa1 <-- mscorlib.ni.dll+0x5f96e1\r\n57, System.Threading.ThreadPoolWorkQueue.Dispatch() + 0x156 <-- mscorlib.ni.dll+0x557e46\r\n58, clr.dll!LogHelp_LogAssert+0x1f13\r\n59, clr.dll!LogHelp_LogAssert+0x1df9\r\n60, clr.dll!LogHelp_LogAssert+0x2690\r\n61, clr.dll!LogHelp_LogAssert+0x740a\r\n62, clr.dll!LogHelp_LogAssert+0x3540\r\n63, clr.dll!LogHelp_LogAssert+0x34b3\r\n64, clr.dll!LogHelp_LogAssert+0x33f2\r\n65, clr.dll!LogHelp_LogAssert+0x35cf\r\n66, clr.dll!LogHelp_LogAssert+0x7357\r\n67, clr.dll!LogHelp_LogAssert+0x3107\r\n68, clr.dll!LogHelp_LogAssert+0x2fdf\r\n69, clr.dll!LogHelp_LogAssert+0x68c5\r\n70, kernel32.dll!BaseThreadInitThunk+0x14\r\n71, ntdll.dll!RtlUserThreadStart+0x21\r\n```\r\n3. The compilation never finishes. I don;t know exactly what code causes it to hang and why. Simple Hello World console app compiles without problems.\r\n\r\nI also notice that Roslyn files in `C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Roslyn` and `C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012821\\Roslyn\\bincore` are very different size-wise despite having almost identical versions.\r\n\r\n**Expected Behavior**:\r\n\r\nProjects compile without compiler hanging.\r\n\r\n**Actual Behavior**:\r\n\r\nCompiler hangs, compilation never finishes.","Url":"https://github.com/dotnet/roslyn/issues/37456","RelatedDescription":"Open issue \"VBCSCompiler.exe hangs when building .Net Core 3 Preview 7 app from Visual Studio 16.3 Preview 1\" (#37456)"},{"Id":"472048407","IsPullRequest":false,"CreatedAt":"2019-07-24T20:33:26","Actor":"meziantou","Number":"37444","RawContent":null,"Title":"Assert failure in Binder.BindDeconstruction","State":"closed","Body":"A [fix in the convert switch statement to switch expression rewriter](https://github.com/dotnet/roslyn/pull/37016#discussion_r300811422) fails on an assert in `Binder.BindDeconstruction` for 2 tests:\r\n- Microsoft.CodeAnalysis.Editor.CSharp.UnitTests.ConvertSwitchStatementToExpression.ConvertSwitchStatementToExpressionTests.TestAssignment\r\n- Microsoft.CodeAnalysis.Editor.CSharp.UnitTests.ConvertSwitchStatementToExpression.ConvertSwitchStatementToExpressionTests.TestNested_01\r\n\r\nIt fails when the rewritten expression looks like\r\n\r\n````\r\nvar j = (i) switch { ... }\r\n````\r\n\r\nRoslyn tries to bind a deconstruction and fails on an assert:\r\n\r\n````\r\nDeconstructionVariable locals = BindDeconstructionVariables(left, diagnostics, ref declaration, ref expression);\r\nDebug.Assert(locals.HasNestedVariables);\r\n````\r\n\r\n````\r\n    System.InvalidOperationException : \r\n    \r\n  Stack Trace: \r\n    at ThrowingTraceListener.Fail(String message, String detailMessage) in ThrowingTraceListener.cs line: 24\r\n    at TraceListener.Fail(String message)\r\n    at TraceInternal.Fail(String message)\r\n    at Debug.Assert(Boolean condition)\r\n    at Binder.BindDeconstruction(CSharpSyntaxNode deconstruction, ExpressionSyntax left, ExpressionSyntax right, DiagnosticBag diagnostics, DeclarationExpressionSyntax& declaration, ExpressionSyntax& expression, Boolean resultIsUsedOverride, BoundDeconstructValuePlaceholder rightPlaceholder) in Binder_Deconstruct.cs line: 95\r\n    at Binder.BindDeconstruction(AssignmentExpressionSyntax node, DiagnosticBag diagnostics, Boolean resultIsUsedOverride) in Binder_Deconstruct.cs line: 33\r\n    at Binder.BindAssignment(AssignmentExpressionSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 1333\r\n    at Binder.BindExpressionInternal(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed) in Binder_Expressions.cs line: 404\r\n    at Binder.BindExpression(ExpressionSyntax node, DiagnosticBag diagnostics, Boolean invoked, Boolean indexed) in Binder_Expressions.cs line: 329\r\n    at Binder.BindValue(ExpressionSyntax node, DiagnosticBag diagnostics, BindValueKind valueKind) in Binder_Expressions.cs line: 228\r\n    at Binder.BindExpressionStatement(CSharpSyntaxNode node, ExpressionSyntax syntax, Boolean allowsAnyExpression, DiagnosticBag diagnostics) in Binder_Statements.cs line: 588\r\n    at Binder.BindExpressionStatement(ExpressionStatementSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 581\r\n    at Binder.BindStatement(StatementSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 52\r\n    at Binder.BindBlockParts(BlockSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 1662\r\n    at Binder.BindBlock(BlockSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 1650\r\n    at Binder.BindStatement(StatementSyntax node, DiagnosticBag diagnostics) in Binder_Statements.cs line: 43\r\n    at Binder.BindMethodBody(CSharpSyntaxNode declaration, BlockSyntax blockBody, ArrowExpressionClauseSyntax expressionBody, DiagnosticBag diagnostics) in Binder_Statements.cs line: 3170\r\n    at Binder.BindMethodBody(CSharpSyntaxNode syntax, DiagnosticBag diagnostics) in Binder_Statements.cs line: 3118\r\n    at MethodCompiler.BindMethodBody(MethodSymbol method, TypeCompilationState compilationState, DiagnosticBag diagnostics, ImportChain& importChain, Boolean& originalBodyNested, ValueTuple`4& forSemanticModel) in MethodCompiler.cs line: 1653\r\n    at MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) in MethodCompiler.cs line: 958\r\n    at MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) in MethodCompiler.cs line: 507\r\n    at MethodCompiler.VisitNamedType(NamedTypeSymbol symbol, TypeCompilationState arg) in MethodCompiler.cs line: 385\r\n    at NamedTypeSymbol.Accept[TArgument,TResult](CSharpSymbolVisitor`2 visitor, TArgument argument) in NamedTypeSymbol.cs line: 576\r\n    at MethodCompiler.CompileNamespace(NamespaceSymbol symbol) in MethodCompiler.cs line: 364\r\n    at MethodCompiler.CompileMethodBodies(CSharpCompilation compilation, PEModuleBuilder moduleBeingBuiltOpt, Boolean emittingPdb, Boolean emitTestCoverageData, Boolean hasDeclarationErrors, DiagnosticBag diagnostics, Predicate`1 filterOpt, CancellationToken cancellationToken) in MethodCompiler.cs line: 152\r\n    at CSharpCompilation.GetDiagnosticsForMethodBodiesInTree(SyntaxTree tree, Nullable`1 span, CancellationToken cancellationToken) in CSharpCompilation.cs line: 2412\r\n    at CSharpCompilation.GetDiagnosticsForSyntaxTree(CompilationStage stage, SyntaxTree syntaxTree, Nullable`1 filterSpanWithinTree, Boolean includeEarlierStages, CancellationToken cancellationToken) in CSharpCompilation.cs line: 2544\r\n    at SyntaxTreeSemanticModel.GetDiagnostics(Nullable`1 span, CancellationToken cancellationToken) in SyntaxTreeSemanticModel.cs line: 134\r\n    at <GetErrorsAsync>d__7.MoveNext() in DocumentExtensions.cs line: 120\r\n...\r\n````\r\n","Url":"https://github.com/dotnet/roslyn/issues/37444","RelatedDescription":"Closed issue \"Assert failure in Binder.BindDeconstruction\" (#37444)"},{"Id":"472473008","IsPullRequest":false,"CreatedAt":"2019-07-24T19:36:52","Actor":"meziantou","Number":"37455","RawContent":null,"Title":"IDE0066 Convert switch statement to switch expression generates invalid code","State":"open","Body":"**Version Used**: \r\n\r\nVS 16.3.0 Preview 1.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nThe following code:\r\n\r\n````\r\nprivate static object RemoveValue(object o)\r\n{\r\n    switch (o)\r\n    {\r\n        case byte x:\r\n            return (byte)1;\r\n\r\n        case sbyte x:\r\n            return (sbyte)2;\r\n\r\n        default:\r\n            throw null;\r\n    }\r\n}\r\n````\r\nis rewritten as\r\n\r\n````\r\nprivate static object RemoveValue(object o)\r\n{\r\n    return o switch\r\n    {\r\n        byte x => (byte)1,\r\n        sbyte x => (sbyte)2,\r\n        _ => throw null,\r\n    };\r\n}\r\n````\r\n\r\nThe new code doesn't compile: CS8506 No best type was found for the switch expression.","Url":"https://github.com/dotnet/roslyn/issues/37455","RelatedDescription":"Open issue \"IDE0066 Convert switch statement to switch expression generates invalid code\" (#37455)"},{"Id":"472287903","IsPullRequest":false,"CreatedAt":"2019-07-24T19:18:10","Actor":"matthid","Number":"37451","RawContent":null,"Title":"C# Tuple is zeroed when accessed via collection","State":"closed","Body":"**Version Used**: Visual Studio 15.9.04012.0. File -> New -> Project -> Console (DotNet Core)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Paste the following code:\r\n    ```csharp\r\n   using System;\r\n   using System.Collections.Generic;\r\n   \r\n   namespace CompilerBugZero\r\n   {\r\n       class Program\r\n       {\r\n           static void Main(string[] args)\r\n           {\r\n               var hdl = FindHandle();\r\n               if (IntPtr.Zero == hdl)\r\n               {\r\n                   throw new InvalidOperationException();\r\n               }\r\n           }\r\n   \r\n           static IntPtr FindHandle()\r\n           {\r\n               var candidates = new List<(IntPtr hwnd, string title, string className)>();\r\n               candidates.Add((new IntPtr(123), \"title\", \"className\"));\r\n   \r\n               if (candidates.Count == 1)\r\n               {\r\n                   // Breakpoint here\r\n                   return candidates[0].hwnd;\r\n               }\r\n   \r\n               throw new InvalidOperationException();\r\n           }\r\n       }\r\n   }\r\n\r\n   ```\r\n\r\n2. Set a breakpoint the line below `// Breakpoint here`\r\n3. See how everything is Zero when it shouldn't: \r\n![image](https://user-images.githubusercontent.com/1866463/61797637-14a82700-ae28-11e9-9b1d-a764993d13f1.png)\r\n\r\n\r\n   Note how the list still has the correct value but accessing `[0]` returns a zeroed tuple apparently.\r\n\r\n**Expected Behavior**:\r\nDebugger shows the correct values. Code works at runtime.\r\n\r\n**Actual Behavior**:\r\nDebugger doesn't show correct value. In fact in our real application I feel like we had the wrong behavior (ie `IntPtr.Zero`) at runtime. In the real application this happened in a PInvoke scenario. However, I couldn't reproduce this here. This might be a wrong positive, but worth considering when investigating this.\r\n\r\n**Workaround**:\r\n\r\nChange the code to\r\n\r\n```diff\r\n            if (candidates.Count == 1)\r\n            {\r\n                // Breakpoint here\r\n-               return candidates[0].hwnd;\r\n+               var t = candidates[0];\r\n+               return t.hwnd;\r\n            }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37451","RelatedDescription":"Closed issue \"C# Tuple is zeroed when accessed via collection\" (#37451)"},{"Id":"472457826","IsPullRequest":false,"CreatedAt":"2019-07-24T19:12:29","Actor":"Zenexer","Number":"37454","RawContent":null,"Title":"Renaming a variable when range syntax is in use results in crash","State":"open","Body":"I'm not positive that this is an issue with Roslyn rather than Visual Studio, but I'm reporting it here just in case.  I initially reported it on the [Feedback Hub](https://developercommunity.visualstudio.com/content/problem/645303/multiple-c-8-issues-intellisense-breaks-gathering.html), but it was marked as low priority (\"Under Consideration\").\r\n\r\n* Visual Studio 2019.3.0 Preview 1.0 (prior preview versions also exhibit the issue)\r\n* .NET Core 3.0.0-preview7 (prior preview versions also exhibit the issue)\r\n* C# 8.0 preview\r\n\r\nIf I attempt to rename `bar` to `foobar` in the following code by putting my cursor within it, pressing F2, and typing `foobar`, Visual Studio will immediately crash without showing an error dialog as soon as I've typed `foo`. Any unsaved changes will be lost. Normally, Visual Studio would report that there's a conflict when I reach `foo`, then allow me to continue typing the rest of the variable name; however, in this context, it crashes. If I change `data[..2]` to `data.Slice(0, 2)`, Visual Studio doesn't crash, and the rename is successful.\r\n\r\n``` csharp\r\nusing System;\r\n\r\nnamespace BugReport\r\n{\r\n    public static class Example\r\n    {\r\n        public static void Test(ReadOnlySpan<byte> data)\r\n        {\r\n            if (true)\r\n            {\r\n                var bar = 1;\r\n                var foo = data[..2];\r\n                DoSomething(foo);\r\n            }\r\n        }\r\n\r\n        private static void DoSomething(ReadOnlySpan<byte> _) { }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37454","RelatedDescription":"Open issue \"Renaming a variable when range syntax is in use results in crash\" (#37454)"},{"Id":"472243345","IsPullRequest":true,"CreatedAt":"2019-07-24T19:00:18","Actor":"dotnet-bot","Number":"37447","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37447","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#37447)"},{"Id":"472243388","IsPullRequest":true,"CreatedAt":"2019-07-24T19:00:06","Actor":"dotnet-bot","Number":"37448","RawContent":null,"Title":"Merge master to features/compilerNext","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/compilerNext.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/compilerNext\ngit reset --hard upstream/features/compilerNext\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/compilerNext --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37448","RelatedDescription":"Closed or merged PR \"Merge master to features/compilerNext\" (#37448)"},{"Id":"472412838","IsPullRequest":false,"CreatedAt":"2019-07-24T17:44:28","Actor":"dagood","Number":"37453","RawContent":null,"Title":"Add \"fix namespaces\" action that applies to all files in a Solution Explorer node","State":"open","Body":"This was mentioned in https://github.com/dotnet/roslyn/issues/14341#issuecomment-489984793, and I'm filing a new issue to raise it as its own request. It was initially not implemented due to performance issues, however it comes up often for me. I use ReSharper to get it done.\r\n\r\nScenarios where I commonly use this feature:\r\n\r\n1. I have ten or so C# files I need to copy from one GitHub repository to another. I copy and paste the files into the file system where I want them. Now I want to fix the namespaces to fit the target.\r\n   * Not covered by https://github.com/dotnet/roslyn/issues/37243 because I'm not moving the files within one Visual Studio context.\r\n\r\n2. I have a bunch of files Iâ€™ve inherited where some classes are in proper namespaces, some are in the wrong namespace, and some lack namespaces completely.\r\n   * Not covered by https://github.com/dotnet/roslyn/issues/37243 because there's no clear way to trigger the action when no files are being moved. (https://github.com/dotnet/roslyn/issues/37243 focuses on *keeping* namespaces correct rather than *correcting* namespaces.)\r\n\r\nNote that in the scenarios I personally encounter, I don't need Visual Studio to tell me when the namespace doesn't match--I know when I need/want to apply this action.\r\n\r\nExpected behavior:\r\n\r\n1. I right-click on a solution explorer node and select the \"fix namespaces\" (\"adjust namespaces\") action.\r\n2. (Optional) I get prompted to provide any clarifying info, and see a list of files that will be changed.\r\n    1. I click OK.\r\n4. The namespaces within that node are adjusted and known references to them are changed to match.\r\n\r\n/cc @mikadumont","Url":"https://github.com/dotnet/roslyn/issues/37453","RelatedDescription":"Open issue \"Add \"fix namespaces\" action that applies to all files in a Solution Explorer node\" (#37453)"},{"Id":"472360040","IsPullRequest":true,"CreatedAt":"2019-07-24T15:49:16","Actor":"tmat","Number":"37452","RawContent":null,"Title":"Remove Microsoft.Tpl.Dataflow references","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37452","RelatedDescription":"Open PR \"Remove Microsoft.Tpl.Dataflow references\" (#37452)"},{"Id":"472287885","IsPullRequest":true,"CreatedAt":"2019-07-24T13:35:48","Actor":"gafter","Number":"37450","RawContent":null,"Title":"Fix region tracking for regions with local functions","State":"open","Body":"Fixes #37427\r\n\r\n/cc @agocke\r\n@CyrusNajmabadi I suspect this will address the anomaly you are seeing in your PR.","Url":"https://github.com/dotnet/roslyn/pull/37450","RelatedDescription":"Open PR \"Fix region tracking for regions with local functions\" (#37450)"},{"Id":"472185168","IsPullRequest":false,"CreatedAt":"2019-07-24T10:35:40","Actor":"louthy","Number":"37446","RawContent":null,"Title":"[Bug] C#8.0 - Struct member causes a cycle in the struct layout ","State":"closed","Body":"I started converting [language-ext](https://github.com/louthy/language-ext) over to C# 8.0 (to use non-nullable references) and immediately ran into a regression.  \r\n\r\nStatic members of generic structs (where the type is the struct itself) now throw an error where they didn't before.\r\n```\r\nerror CS0523: Struct member 'Test<A>.Value' of type 'Test<A>' causes a cycle in the struct layout\r\n```\r\nThis is a simple test-case:\r\n```c#\r\n    public struct Test<A>\r\n    {\r\n        public readonly static Test<A> Value = new Test<A>();\r\n    }\r\n```\r\nHere's my test project file:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n    <PropertyGroup>\r\n        <OutputType>Exe</OutputType>\r\n        <TargetFramework>netcoreapp2.2</TargetFramework>\r\n\r\n        <LangVersion>8.0</LangVersion>\r\n        <Nullable>enable</Nullable>\r\n        <!-- NullableContextOptions will be replaced by Nullable in dotnet core 3.0 -->\r\n        <NullableContextOptions>enable</NullableContextOptions>\r\n    </PropertyGroup>\r\n    \r\n    <ItemGroup>\r\n        <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.6.0-preview7.19362.9\" />\r\n    </ItemGroup>\r\n    \r\n</Project>\r\n```\r\nI use this heavily for the ad-hoc polymorphism feature of lang-ext; although I could drop it, it does seem rather arbitrary.\r\n\r\n```c#\r\n    public struct EqSeq<A> : Eq<Seq<A>>\r\n    {\r\n        public static readonly EqSeq<A> Inst = default(EqSeq<A>);\r\n\r\n        /// <summary>\r\n        /// Equality check\r\n        /// </summary>\r\n        [Pure]\r\n        public bool Equals(Seq<A> x, Seq<A> y) =>\r\n            default(EqSeq<EqDefault<A>, A>).Equals(x, y);\r\n\r\n        /// <summary>\r\n        /// Get hash code of the value\r\n        /// </summary>\r\n        /// <param name=\"x\">Value to get the hash code of</param>\r\n        /// <returns>The hash code of x</returns>\r\n        [Pure]\r\n        public int GetHashCode(Seq<A> x) =>\r\n            default(EqSeq<EqDefault<A>, A>).GetHashCode(x);\r\n    }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37446","RelatedDescription":"Closed issue \"[Bug] C#8.0 - Struct member causes a cycle in the struct layout \" (#37446)"},{"Id":"472066389","IsPullRequest":true,"CreatedAt":"2019-07-24T03:54:26","Actor":"cston","Number":"37445","RawContent":null,"Title":"Add IMethodSymbol.Construct overload with nullable annotations","State":"open","Body":"Fixes #37310\r\nFixes #37279","Url":"https://github.com/dotnet/roslyn/pull/37445","RelatedDescription":"Open PR \"Add IMethodSymbol.Construct overload with nullable annotations\" (#37445)"},{"Id":"472018491","IsPullRequest":true,"CreatedAt":"2019-07-24T01:30:23","Actor":"dotnet-bot","Number":"37438","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37438","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#37438)"},{"Id":"472018519","IsPullRequest":true,"CreatedAt":"2019-07-24T01:30:12","Actor":"dotnet-bot","Number":"37439","RawContent":null,"Title":"Merge master to features/compilerNext","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/compilerNext.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/compilerNext\ngit reset --hard upstream/features/compilerNext\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/compilerNext --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37439","RelatedDescription":"Closed or merged PR \"Merge master to features/compilerNext\" (#37439)"},{"Id":"472032258","IsPullRequest":false,"CreatedAt":"2019-07-24T01:08:36","Actor":"gafter","Number":"37443","RawContent":null,"Title":"PublicAPI.Unshipped.txt API files should be moved to PublicAPI.Shipped.txt","State":"open","Body":"Now that we're past the C# 8 preview period and have shipped some new APIs, we should move the \"Unshipped\" API file to the \"Shipped\" file so we have a record of what APIs we shipped.\r\n\r\n/cc @jcouv @agocke ","Url":"https://github.com/dotnet/roslyn/issues/37443","RelatedDescription":"Open issue \"PublicAPI.Unshipped.txt API files should be moved to PublicAPI.Shipped.txt\" (#37443)"},{"Id":"472027789","IsPullRequest":true,"CreatedAt":"2019-07-24T00:44:27","Actor":"333fred","Number":"37442","RawContent":null,"Title":"Merge NullableAnnotation.NotApplicable and Disabled to None, and rename NullableFlowState.NotApplicable to None for consistency","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/37441. @dotnet/roslyn-compiler for review. /cc @jasonmalinowski @ryzngard ","Url":"https://github.com/dotnet/roslyn/pull/37442","RelatedDescription":"Open PR \"Merge NullableAnnotation.NotApplicable and Disabled to None, and rename NullableFlowState.NotApplicable to None for consistency\" (#37442)"},{"Id":"472025270","IsPullRequest":false,"CreatedAt":"2019-07-24T00:31:46","Actor":"333fred","Number":"37441","RawContent":null,"Title":"Condense NullableAnnotationState.NotApplicable and Disabled into None","State":"open","Body":"As title. Also rename NullableFlowState.NotApplicable to None for consistency.","Url":"https://github.com/dotnet/roslyn/issues/37441","RelatedDescription":"Open issue \"Condense NullableAnnotationState.NotApplicable and Disabled into None\" (#37441)"},{"Id":"472018859","IsPullRequest":true,"CreatedAt":"2019-07-24T00:02:29","Actor":"dotnet-bot","Number":"37440","RawContent":null,"Title":"Merge master to features/ide-cleanup","State":"open","Body":"\nThis is an automatically generated pull request from master into features/ide-cleanup.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/ide-cleanup\ngit reset --hard upstream/features/ide-cleanup\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/ide-cleanup --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37440","RelatedDescription":"Open PR \"Merge master to features/ide-cleanup\" (#37440)"},{"Id":"472012141","IsPullRequest":true,"CreatedAt":"2019-07-23T23:32:25","Actor":"dibarbet","Number":"37437","RawContent":null,"Title":"Split liveshare handlers","State":"open","Body":"Export liveshare handlers on a per language basis and update the client to import the per language server.\r\n\r\nRelated PR - https://devdiv.visualstudio.com/DevDiv/_git/Cascade/pullrequest/193071\r\n\r\nMight be easier to review the commits in order, the first changes the server side handler exports, the second changes the client implementation to retrieve them.","Url":"https://github.com/dotnet/roslyn/pull/37437","RelatedDescription":"Open PR \"Split liveshare handlers\" (#37437)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"472326257","IsPullRequest":true,"CreatedAt":"2019-07-24T14:46:07","Actor":"Dotnet-GitSync-Bot","Number":"7649","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7649","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx\" (#7649)"},{"Id":"472235106","IsPullRequest":false,"CreatedAt":"2019-07-24T11:40:58","Actor":"FrancoisM","Number":"7648","RawContent":null,"Title":"Build error: nutc_driver.exe returned exit code 1 with VS2019. No others errors. Ok on VS2017","State":"open","Body":"My project has built on Azure Pipelines hosted agent for months.\r\nI switched from VS2017 to VS2019. Now it fails with \"nutc_driver.exe returned exit code 1\".\r\n\r\nI read about similar issue saying to use `<Use64BitCompiler>true</Use64BitCompiler>`. I did yet the problem remains. Other issues mention \"Out of memory\" or other errors. In my case, the log doesn't have any other errors but the one I report.\r\n\r\nI tried to uncheck \"native compilation\" but then the build took 2min (instead of over an hour), the app was about 30mb (vs 100mb usually) and would'nt install.\r\n","Url":"https://github.com/dotnet/corert/issues/7648","RelatedDescription":"Open issue \"Build error: nutc_driver.exe returned exit code 1 with VS2019. No others errors. Ok on VS2017\" (#7648)"},{"Id":"472004492","IsPullRequest":true,"CreatedAt":"2019-07-24T02:07:47","Actor":"Dotnet-GitSync-Bot","Number":"7647","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7647","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7647)"},{"Id":"471969859","IsPullRequest":true,"CreatedAt":"2019-07-24T02:00:21","Actor":"nattress","Number":"7646","RawContent":null,"Title":"Add Linux / Mac ReadyToRun CI testing","State":"closed","Body":"* Remove Windows_NT only condition on CI R2R test leg\r\n* Use Top200 suite of CoreCLR tests since they reliably pass in R2R mode","Url":"https://github.com/dotnet/corert/pull/7646","RelatedDescription":"Closed or merged PR \"Add Linux / Mac ReadyToRun CI testing\" (#7646)"},{"Id":"471965978","IsPullRequest":true,"CreatedAt":"2019-07-23T21:35:43","Actor":"trylek","Number":"7645","RawContent":null,"Title":"CoreCLR Pri#1 fixes for the IsManagedSequential method","State":"open","Body":"This change fixes all remaining differences between CPAOT\r\nand Crossgen for the CoreCLR Pri#1 tests w.r.t. my recently\r\nimplemented IsManagedSequential instrumentation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7645","RelatedDescription":"Open PR \"CoreCLR Pri#1 fixes for the IsManagedSequential method\" (#7645)"},{"Id":"471750238","IsPullRequest":true,"CreatedAt":"2019-07-23T21:09:18","Actor":"trylek","Number":"7644","RawContent":null,"Title":"Mechanical move of IsManagedSequentialType to R2R field algorithm","State":"closed","Body":"Based on JanK's suggestion I'm moving IsManagedSequentialType\r\nto ReadyToRunMetadataFieldLayoutAlgorithm. In this change I'm not\r\nmaking any semantic changes to the method; I'll send out a subsequent\r\nPR for an additional delta fixing discrepancies in the method\r\nas discovered by the instrumentation I recently implemented.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7644","RelatedDescription":"Closed or merged PR \"Mechanical move of IsManagedSequentialType to R2R field algorithm\" (#7644)"},{"Id":"470009694","IsPullRequest":true,"CreatedAt":"2019-07-23T17:32:43","Actor":"trylek","Number":"7633","RawContent":null,"Title":"Initial support for IsManagedSequential diffing in SuperIlc","State":"closed","Body":"This change searches compiler logs for specially formatted sections\r\nproduced by my private CPAOT and Crossgen instrumentation changes\r\nand outputs their lists and diffs between CPAOT and Crossgen.\r\n\r\nI have finally reached almost 100% parity between CPAOT and Crossgen\r\nqueries for the IsManagedSequential type characteristics and I have\r\nalready identified a type with mismatching results. Based on JanK's\r\nsuggestion I assume we should run this through anything we can find\r\nto maximize our confidence in the R2R compiler.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I'm going to send out separate not-for-checkin PR's for the\r\nappropriate CPAOT and Crossgen instrumentations. For SuperIlc,\r\nI believe there's no harm in actually merging the change in.","Url":"https://github.com/dotnet/corert/pull/7633","RelatedDescription":"Closed or merged PR \"Initial support for IsManagedSequential diffing in SuperIlc\" (#7633)"},{"Id":"471340295","IsPullRequest":false,"CreatedAt":"2019-07-22T21:15:59","Actor":"nattress","Number":"7643","RawContent":null,"Title":"Compile static constructors for R2R","State":"open","Body":"CPAOT doesn't compile static constructors which has a runtime JIT cost. We should measure with them enabled (rooting them all for compilation) to assess if they give a startup benefit worth the cost of carrying them in the binary.","Url":"https://github.com/dotnet/corert/issues/7643","RelatedDescription":"Open issue \"Compile static constructors for R2R\" (#7643)"},{"Id":"471311302","IsPullRequest":false,"CreatedAt":"2019-07-22T20:29:12","Actor":"nattress","Number":"7642","RawContent":null,"Title":"Access checks in JIT interface methods","State":"open","Body":"The final section of `CEEInfo::getCallInfo` (https://github.com/dotnet/coreclr/blob/5f93d3b1c48ba6916d5f31d79cb7c17d564eecef/src/vm/jitinterface.cpp#L5597) deals with access checks validating the declarative authority of a given caller to call the callee. This is currently missing in the CPAOT compiler. Similar checks needed in `CEEInfo::getFieldInfo`.","Url":"https://github.com/dotnet/corert/issues/7642","RelatedDescription":"Open issue \"Access checks in JIT interface methods\" (#7642)"},{"Id":"471307755","IsPullRequest":false,"CreatedAt":"2019-07-22T20:23:51","Actor":"nattress","Number":"7641","RawContent":null,"Title":"Type Layout Checks","State":"open","Body":"To protect system resiliency, Crossgen emits method pre-codes (code that is guaranteed to run once before a given method is executed for the first time) that checks various properties of dependent types outside the version bubble that affect codegen of that particular method. This functionality is currently missing and needs porting into CPAOT.","Url":"https://github.com/dotnet/corert/issues/7641","RelatedDescription":"Open issue \"Type Layout Checks\" (#7641)"},{"Id":"469527045","IsPullRequest":false,"CreatedAt":"2019-07-22T14:31:50","Actor":"forestbat","Number":"7631","RawContent":null,"Title":"Future of AOT","State":"closed","Body":"#https://github.com/dotnet/coreclr/commit/0cc81b60eb184c92b8526348d4bb056ed563e9d6\r\n#https://github.com/dotnet/corefx/commit/1acaa2017cfc64ef1aabcf3b19d0e097af692616\r\nAs we all knowï¼Œdevelopment for .NET5 has started and this project is like a forgotten cornerï¼Œso in the next yearï¼ˆuntil November 2020ï¼‰will MS invest more to thisï¼Ÿ\r\nAnd will AOT of C#ï¼ˆeither corert or mono aotï¼‰support more processor structure such as MIPS or RISCVï¼Ÿ\r\nHope your reply.","Url":"https://github.com/dotnet/corert/issues/7631","RelatedDescription":"Closed issue \"Future of AOT\" (#7631)"},{"Id":"470729291","IsPullRequest":false,"CreatedAt":"2019-07-21T18:17:23","Actor":"Suchiman","Number":"7639","RawContent":null,"Title":"CoreRT instructions no longer work","State":"closed","Body":"I'm not sure what has changed but it affects both of my machines:\r\n```\r\nMicrosoft.NETCore.Native.Publish.targets(78,5): error :\r\nThe PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative\r\n```\r\nbut only when using the nuget package and not when using my own CoreRT build","Url":"https://github.com/dotnet/corert/issues/7639","RelatedDescription":"Closed issue \"CoreRT instructions no longer work\" (#7639)"},{"Id":"470798920","IsPullRequest":false,"CreatedAt":"2019-07-21T16:21:50","Actor":"davidfowl","Number":"7640","RawContent":null,"Title":"Latest WebAPI broken","State":"open","Body":"I haven't looked into it as yet but we made some changes that seem to result in failures after compiling with the IL compiler.\r\n\r\n```\r\nUnhandled Exception: System.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Reflection.Runtime.Assemblies.RuntimeAssembly.get_CodeBase() + 0x24\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute.GetRelatedAssemblies(Assembly, Boolean, Func`2, Func`2) + 0x50\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.<GetAsemblyClosure>d__9.MoveNext() + 0x8d\r\n   at System.Linq.Enumerable.ConcatIterator`1.MoveNext() + 0x62\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateDefaultParts(String) + 0x16f\r\n   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.GetApplicationPartManager(IServiceCollection) + 0x81\r\n   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(IServiceCollection) + 0x17\r\n   at Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersCore(IServiceCollection) + 0xa\r\n   at Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(IServiceCollection) + 0x11\r\n   at WebApplication2.Startup.ConfigureServices(IServiceCollection) + 0xc\r\n   at WebApplication2!<BaseAddress>+0xcd7ccd\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x218\r\n   at Internal.Reflection.Execution.MethodInvokers.InstanceMethodInvoker.Invoke(Object, Object[], BinderBundle, Boolean) + 0x7f\r\n   at Internal.Reflection.Core.Execution.MethodInvoker.Invoke(Object, Object[], Binder, BindingFlags, CultureInfo) + 0x46\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo) + 0x58\r\n   at Microsoft.AspNetCore.Hosting.ConfigureServicesBuilder.InvokeCore(Object, IServiceCollection) + 0xf6\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(Type, HostBuilderContext, IServiceCollection) + 0x198\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass12_0.<UseStartup>b__0(HostBuilderContext, IServiceCollection) + 0xa1\r\n   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider() + 0x19e\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build() + 0x3a\r\n   at WebApplication2.Program.Main(String[]) + 0x1b\r\n   at WebApplication2!<BaseAddress>+0xc04c30\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7640","RelatedDescription":"Open issue \"Latest WebAPI broken\" (#7640)"},{"Id":"470726858","IsPullRequest":false,"CreatedAt":"2019-07-21T03:46:42","Actor":"Shadow4walker","Number":"7638","RawContent":null,"Title":"System.Reflection.MissingRuntimeArtifactException","State":"closed","Body":"I'm trying to use a [NoesisGUI](https://github.com/Shadow4walker/NoesisSample) with corert\r\nalso i have tried all of rd.xml possible solutions with no luck!! idk what am i missing here! \"actually I don't know what's the correct way to use rd.xml with this\"\r\n[NoesisGUI Managed SDK](https://github.com/Noesis/Managed)\r\n\r\n here's the log after starting the sample\r\n\r\n> Unhandled Exception: EETypeRva:0x009F1C88(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'Noesis.Extend.CreateGetterHelper<NoesisApp.Display,System.Int32>(System.Reflection.MethodInfo)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x148\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x50\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0xa8\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x104\r\n   at Noesis.Extend.CreateGetter[ReturnT](Type, MethodInfo) + 0x6b\r\n   at Noesis.Extend.PropertyAccessorRO`1..ctor(PropertyInfo) + 0x3e\r\n   at Noesis.Extend.<>c__DisplayClass407_0`1.<AddPropertyAccessor>b__1() + 0x24\r\n   at Noesis.Extend.AddPropertyAccessor(Extend.NativeTypePropsInfo, PropertyInfo, Func`1, Func`1) + 0xa4\r\n   at Noesis.Extend.AddPropertyAccessor[PropertyT](Extend.NativeTypePropsInfo, PropertyInfo, Boolean) + 0x88\r\n   at Noesis.Extend.<>c.<AddPropertyFunctions>b__405_4(Extend.NativeTypePropsInfo, PropertyInfo, Boolean) + 0x39\r\n   at Noesis.Extend.AddProperty(Extend.NativeTypePropsInfo, PropertyInfo, Boolean) + 0xae\r\n   at Noesis.Extend.CreateNativePropsData(Type, PropertyInfo[], Extend.NativeTypeInfo, Int32&) + 0x1b4\r\n   at Noesis.Extend.RegisterNativeType(Type, Boolean) + 0x278\r\n   at Noesis.Extend.EnsureNativeType(Type, Boolean) + 0x31\r\n   at Noesis.Extend.AddProperty(Extend.NativeTypePropsInfo, PropertyInfo, Boolean) + 0x108\r\n   at Noesis.Extend.CreateNativePropsData(Type, PropertyInfo[], Extend.NativeTypeInfo, Int32&) + 0x1b4\r\n   at Noesis.Extend.RegisterNativeType(Type, Boolean) + 0x278\r\n   at Noesis.Extend.EnsureNativeType(Type, Boolean) + 0x31\r\n   at Noesis.Extend.CreateNativeTypeData(Type, IntPtr) + 0x4e\r\n   at Noesis.Extend.RegisterNativeType(Type, Boolean) + 0x266\r\n   at Noesis.Extend.EnsureNativeType(Type, Boolean) + 0x31\r\n   at Noesis.Extend.NewCPtr(Type, Object) + 0x21\r\n   at Noesis.Extend.GetInstanceHandle(Object) + 0x6c\r\n   at NoesisApp.Application.Start() + 0x28f\r\n   at NoesisApp.Application.Run() + 0x30\r\n   at ConsoleApp1.Program.Main(String[]) + 0x5c\r\n   at ConsoleApp1!<BaseAddress>+0x52d480<","Url":"https://github.com/dotnet/corert/issues/7638","RelatedDescription":"Closed issue \"System.Reflection.MissingRuntimeArtifactException\" (#7638)"},{"Id":"470254205","IsPullRequest":true,"CreatedAt":"2019-07-19T16:29:37","Actor":"MichalStrehovsky","Number":"7636","RawContent":null,"Title":"Adjust getMethodSig for generic inlining","State":"closed","Body":"We were not using the `memberParent` parameter, but it's critical to use it when generic inlining happens.\r\n\r\nFixes #7625.","Url":"https://github.com/dotnet/corert/pull/7636","RelatedDescription":"Closed or merged PR \"Adjust getMethodSig for generic inlining\" (#7636)"},{"Id":"469096443","IsPullRequest":false,"CreatedAt":"2019-07-19T16:29:37","Actor":"Berrysoft","Number":"7625","RawContent":null,"Title":"CodeGenerationFailedException after July 13th","State":"closed","Body":"```\r\nILCompiler.CodeGenerationFailedException: Code generation failed ---> System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\n  Parameter name: index\r\n     at Internal.JitInterface.CorInfoImpl.HandleToObject(IntPtr handle)\r\n     at Internal.JitInterface.CorInfoImpl.HandleToObject(CORINFO_CLASS_STRUCT_* type)\r\n     at Internal.JitInterface.CorInfoImpl.isMoreSpecificType(CORINFO_CLASS_STRUCT_* cls1, CORINFO_CLASS_STRUCT_* cls2)\r\n     at Internal.JitInterface.CorInfoImpl._isMoreSpecificType(IntPtr thisHandle, IntPtr* ppException, CORINFO_CLASS_STRUCT_* cls1, CORINFO_CLASS_STRUCT_* cls2)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\nThe same code built successfully in July 12th, but failed after July 13th. I suspect it is because of #7612, but I don't know the reason exactly.\r\nAddition: I tried to reproduce the bug by a \"Hello world\" program, but it is built successfully, so I even don't know how to reproduce it.","Url":"https://github.com/dotnet/corert/issues/7625","RelatedDescription":"Closed issue \"CodeGenerationFailedException after July 13th\" (#7625)"},{"Id":"470345239","IsPullRequest":true,"CreatedAt":"2019-07-19T16:18:01","Actor":"jkotas","Number":"7637","RawContent":null,"Title":"Port GC change from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7637","RelatedDescription":"Closed or merged PR \"Port GC change from CoreCLR\" (#7637)"},{"Id":"470057749","IsPullRequest":true,"CreatedAt":"2019-07-19T02:17:13","Actor":"cshung","Number":"7635","RawContent":null,"Title":"Fix string import for CppCodeGen","State":"closed","Body":"The capital `X` is not a standard [escape sequence](https://en.cppreference.com/w/cpp/language/escape), we should use lower case `x`.","Url":"https://github.com/dotnet/corert/pull/7635","RelatedDescription":"Closed or merged PR \"Fix string import for CppCodeGen\" (#7635)"},{"Id":"470006900","IsPullRequest":true,"CreatedAt":"2019-07-18T23:57:40","Actor":"jkotas","Number":"7632","RawContent":null,"Title":"Port GC changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7632","RelatedDescription":"Closed or merged PR \"Port GC changes from CoreCLR\" (#7632)"},{"Id":"470014921","IsPullRequest":true,"CreatedAt":"2019-07-18T22:12:09","Actor":"trylek","Number":"7634","RawContent":null,"Title":"WIP [no-merge] IsManagedSequential CPAOT instrumentation","State":"open","Body":"This instrumentation change (I don't intend to merge in) adds logging\r\nof IsManagedSequential results. I have sent out a separate PR\r\nfor the corresponding SuperIlc change (I believe the SuperIlc change\r\nis worth merging in) and I'll send out another instrumentation change\r\nfor Crossgen.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. Once I figure out how to fix the remaining inconsistencies in\r\nIsManagedSequential, I'm going to merge in a smaller change just\r\nmoving the [fixed] IsManagedSequentialMethod to the R2R field\r\nlayout algorithm source file per JanK's suggestion.","Url":"https://github.com/dotnet/corert/pull/7634","RelatedDescription":"Open PR \"WIP [no-merge] IsManagedSequential CPAOT instrumentation\" (#7634)"},{"Id":"468923074","IsPullRequest":true,"CreatedAt":"2019-07-18T18:19:28","Actor":"cshung","Number":"7622","RawContent":null,"Title":"[CppCodeGen] Avoid generating typedef redefinition for delegates with vtable","State":"closed","Body":"This change fixes the compilation error for issue #6415, this does not fix the issue itself yet.\r\nIn case the vtable of the delegate type is generated, [`GetCodeForVirtualMethod()`](https://github.com/dotnet/corert/blob/c3751121a3e96e750933c159d732f52a70c09857/src/ILCompiler.CppCodeGen/src/CppCodeGen/CppWriter.cs#L974) will generate a typedef for the Invoke function, and we will generate another in `GetCodeForDelegate()` as the code change shows, leading to redefinition error.\r\n\r\nThis fix detects that case and avoids generating the redefinition.","Url":"https://github.com/dotnet/corert/pull/7622","RelatedDescription":"Closed or merged PR \"[CppCodeGen] Avoid generating typedef redefinition for delegates with vtable\" (#7622)"},{"Id":"469455160","IsPullRequest":true,"CreatedAt":"2019-07-18T18:19:11","Actor":"jkotas","Number":"7630","RawContent":null,"Title":"Delete stale cache size detection code on Windows","State":"closed","Body":"Fill cache size detection on Unix with CoreCLR PAL implementation","Url":"https://github.com/dotnet/corert/pull/7630","RelatedDescription":"Closed or merged PR \"Delete stale cache size detection code on Windows\" (#7630)"},{"Id":"469435131","IsPullRequest":true,"CreatedAt":"2019-07-17T21:53:43","Actor":"Dotnet-GitSync-Bot","Number":"7629","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7629","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7629)"},{"Id":"469339836","IsPullRequest":true,"CreatedAt":"2019-07-17T19:26:18","Actor":"Dotnet-GitSync-Bot","Number":"7628","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7628","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7628)"},{"Id":"469207771","IsPullRequest":true,"CreatedAt":"2019-07-17T16:47:01","Actor":"Dotnet-GitSync-Bot","Number":"7627","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7627","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7627)"},{"Id":"469035654","IsPullRequest":true,"CreatedAt":"2019-07-17T13:33:30","Actor":"MichalStrehovsky","Number":"7623","RawContent":null,"Title":"Include Natvis in the ILCompiler package","State":"closed","Body":"This makes strings and arrays for CoreRT-compiled programs look nicer in debuggers that support Natvis.","Url":"https://github.com/dotnet/corert/pull/7623","RelatedDescription":"Closed or merged PR \"Include Natvis in the ILCompiler package\" (#7623)"},{"Id":"469068373","IsPullRequest":true,"CreatedAt":"2019-07-17T13:32:09","Actor":"Dotnet-GitSync-Bot","Number":"7624","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7624","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7624)"},{"Id":"469103662","IsPullRequest":true,"CreatedAt":"2019-07-17T13:29:14","Actor":"MichalStrehovsky","Number":"7626","RawContent":null,"Title":"Capture name of failing method in CodeGenerationFailedException","State":"closed","Body":"Useful for troubleshooting.","Url":"https://github.com/dotnet/corert/pull/7626","RelatedDescription":"Closed or merged PR \"Capture name of failing method in CodeGenerationFailedException\" (#7626)"},{"Id":"468826889","IsPullRequest":true,"CreatedAt":"2019-07-17T08:49:41","Actor":"Dotnet-GitSync-Bot","Number":"7621","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7621","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7621)"},{"Id":"468740796","IsPullRequest":true,"CreatedAt":"2019-07-17T00:24:08","Actor":"cshung","Number":"7620","RawContent":null,"Title":"Make sure we use a 64 bit number to represent memory limit (even in 32 bit architectures)","State":"closed","Body":"Fixes #7619 \r\n\r\nAccording to @am11 in the referenced issue, Linux could tell us the memory limit is `0x7FFFFFFFFFFFFFFF` in a 32-bit architecture docker image, therefore we need to make sure when we read the number, we need to use a 64-bit number.","Url":"https://github.com/dotnet/corert/pull/7620","RelatedDescription":"Closed or merged PR \"Make sure we use a 64 bit number to represent memory limit (even in 32 bit architectures)\" (#7620)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"469975559","IsPullRequest":true,"CreatedAt":"2019-07-25T04:08:49","Actor":"nugetlurker","Number":"3436","RawContent":null,"Title":"Insert NuGet Build 5.3.0-preview.2.6103 into sdk","State":"closed","Body":"Insert NuGet Build 5.3.0-preview.2.6103 into sdk master branch","Url":"https://github.com/dotnet/sdk/pull/3436","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.3.0-preview.2.6103 into sdk\" (#3436)"},{"Id":"472623182","IsPullRequest":true,"CreatedAt":"2019-07-25T01:38:16","Actor":"dsplaisted","Number":"3460","RawContent":null,"Title":"Don't fail design-time build if runtime pack isn't downloaded","State":"open","Body":"- Fixes #3409\r\n- Fixes test flakiness which prevented #3409 from being caught before checkin\r\n- Adds better error message if runtime pack hasn't been downloaded\r\n- Doesn't also report error finding runtime list if the runtime pack hasn't been downloaded","Url":"https://github.com/dotnet/sdk/pull/3460","RelatedDescription":"Open PR \"Don't fail design-time build if runtime pack isn't downloaded\" (#3460)"},{"Id":"472302265","IsPullRequest":true,"CreatedAt":"2019-07-25T00:31:01","Actor":"dsplaisted","Number":"3455","RawContent":null,"Title":"Don't reference assemblies from targeting pack with ReferencedByDefault=\"false\"","State":"closed","Body":"FYI @dagood @vatsan-madhavan ","Url":"https://github.com/dotnet/sdk/pull/3455","RelatedDescription":"Closed or merged PR \"Don't reference assemblies from targeting pack with ReferencedByDefault=\"false\"\" (#3455)"},{"Id":"472599492","IsPullRequest":true,"CreatedAt":"2019-07-24T23:42:44","Actor":"dsplaisted","Number":"3459","RawContent":null,"Title":"Calculate PackageConflictPreferredPackages from KnownFrameworkReference items","State":"open","Body":"Use `KnownFrameworkReference` metadata to calculate `PackageConflictPreferredPackages` instead of hardcoding.  The hardcoded values were incorrect after the runtime packs had been renamed.\r\n\r\nI haven't figured out a good way to test this, as the behavior would only be observable when you reference a package with an asset that matches the assembly and file versions of the same asset in a runtime pack.  But there's not a good way to determine which package version you would need to reference to line these up.\r\n\r\nFix #3362","Url":"https://github.com/dotnet/sdk/pull/3459","RelatedDescription":"Open PR \"Calculate PackageConflictPreferredPackages from KnownFrameworkReference items\" (#3459)"},{"Id":"472501364","IsPullRequest":true,"CreatedAt":"2019-07-24T22:32:27","Actor":"livarcocc","Number":"3457","RawContent":null,"Title":"Update .NET Core SDK stage0 to 3.0.100-preview8-013422","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3457","RelatedDescription":"Closed or merged PR \"Update .NET Core SDK stage0 to 3.0.100-preview8-013422\" (#3457)"},{"Id":"472551999","IsPullRequest":false,"CreatedAt":"2019-07-24T21:46:02","Actor":"wli3","Number":"3458","RawContent":null,"Title":"Need to port changes after Microsoft.NET.HostModel.AppHost is created","State":"open","Body":"https://github.com/dotnet/sdk/pull/3427\r\nhttps://github.com/dotnet/sdk/pull/3310\r\n\r\n@peterhuene @swaroop-sridhar\r\n\r\nI will send PR to core-setup. https://github.com/dotnet/sdk/pull/3447 is blocked by this","Url":"https://github.com/dotnet/sdk/issues/3458","RelatedDescription":"Open issue \"Need to port changes after Microsoft.NET.HostModel.AppHost is created\" (#3458)"},{"Id":"468791081","IsPullRequest":true,"CreatedAt":"2019-07-24T20:23:26","Actor":"sbomer","Number":"3430","RawContent":null,"Title":"Update stage0 SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3430","RelatedDescription":"Closed or merged PR \"Update stage0 SDK\" (#3430)"},{"Id":"472419750","IsPullRequest":true,"CreatedAt":"2019-07-24T18:01:04","Actor":"nguerrera","Number":"3456","RawContent":null,"Title":"Fix building VB WPF project","State":"open","Body":"The target to select the VB runtime DLL from ReferencePath was not being run when compiling the temporary project for a XAML build.\r\n\r\nFix #3450","Url":"https://github.com/dotnet/sdk/pull/3456","RelatedDescription":"Open PR \"Fix building VB WPF project\" (#3456)"},{"Id":"472200728","IsPullRequest":false,"CreatedAt":"2019-07-24T16:19:29","Actor":"KexyBiscuit","Number":"3452","RawContent":null,"Title":"Error MSB4044 occurs while building UWP app with the latest SDK","State":"closed","Body":"```powershell\r\n> dotnet --version\r\n3.0.100-preview8-013410\r\n```\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.uwpcoreruntimesdk\\2.2.8\\tools\\CoreRuntime\\Microsoft.Net.CoreRuntime.targets(238,5): error MSB4044: The \"WireUpCoreRuntime\" task was not given a value for the required parameter \"CoreRuntimeSDKLocation\".\r\n```","Url":"https://github.com/dotnet/sdk/issues/3452","RelatedDescription":"Closed issue \"Error MSB4044 occurs while building UWP app with the latest SDK\" (#3452)"},{"Id":"472275221","IsPullRequest":true,"CreatedAt":"2019-07-24T14:57:30","Actor":"dotnet-maestro[bot]","Number":"3454","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.17\r\n- **Date Produced**: 7/24/2019 3:40 AM\r\n- **Commit**: 5d8d5e866113c9f144136a04222f191456dfff1d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28373-17\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3454","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3454)"},{"Id":"472245199","IsPullRequest":true,"CreatedAt":"2019-07-24T12:05:27","Actor":"dotnet-maestro[bot]","Number":"3453","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190723.6\r\n- **Date Produced**: 7/23/2019 10:01 PM\r\n- **Commit**: 56b5e5a9debc87b98c5dd394e8a72c916099d9d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19373.6\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19373.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3453","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3453)"},{"Id":"472109265","IsPullRequest":false,"CreatedAt":"2019-07-24T06:49:03","Actor":"YohDeadfall","Number":"3451","RawContent":null,"Title":"Incorrect link to SDK in the repo description","State":"open","Body":"Probably it was changed some time ago, since it leads to an example now. The right URL is https://dotnet.microsoft.com/download.","Url":"https://github.com/dotnet/sdk/issues/3451","RelatedDescription":"Open issue \"Incorrect link to SDK in the repo description\" (#3451)"},{"Id":"471996304","IsPullRequest":true,"CreatedAt":"2019-07-24T01:26:30","Actor":"nguerrera","Number":"3448","RawContent":null,"Title":"Do not use apphost when resolving assets for dotnet store","State":"closed","Body":"Some changes in the way apphost is handled broke the case where you\r\nuse an exe project as the dotnet store \"manifest\" project.\r\n\r\nThe fix is to set UseAppHost=false when doing the store resolution.\r\n\r\nFix #3168","Url":"https://github.com/dotnet/sdk/pull/3448","RelatedDescription":"Closed or merged PR \"Do not use apphost when resolving assets for dotnet store\" (#3448)"},{"Id":"472021527","IsPullRequest":false,"CreatedAt":"2019-07-24T00:14:16","Actor":"vatsan-madhavan","Number":"3450","RawContent":null,"Title":"WPF for VB build failed with error BC2017: could not find library 'Microsoft.VisualBasic.dll'","State":"open","Body":"@YunWeiaa commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1346)\n\n* .NET Core Version: 3.0.100-preview8-013392\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview8-013392\r\n Commit:    37875bfd17\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview8-013392\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-27919-09\r\n  Commit:  3fcf1dac55\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview8-013377 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013392 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19371.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19372.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27919-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-27919-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27919-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-27919-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n* Windows version: windows 10 1809 17763.437\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n Create a WPF app via CLI. Build \r\n```\r\ndotnet new wpf -o vbwpf -lang vb\r\ncd vbwpf\r\ndotnet build \r\n```\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n Dotnet build failed with error BC2017: could not find library 'Microsoft.VisualBasic.dll'\r\n![image](https://user-images.githubusercontent.com/33921754/61700175-dac71a00-ad6e-11e9-8055-a7d4872940ce.png)\r\n\r\n **Expected behavior:**\r\n Build succeeded.\r\n\r\n \r\n\n\n---\n\n@YunWeiaa commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1346#issuecomment-514141226)\n\nNote: WPF for c# build and run successfully.\n\n---\n\n@grubioe commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1346#issuecomment-514330319)\n\nThis will succeed with build 3.0.100-preview7-012821.  Can you try with this build?  Thanks\n\n---\n\n@vatsan-madhavan commented on [Tue Jul 23 2019](https://github.com/dotnet/wpf/issues/1346#issuecomment-514428977)\n\nCreate a `global.json` for your app using `dotnet new globaljson --sdk-version 3.0.100-preview7-012821` and build against that. \r\n\r\nIf you don't have that SDK, you can install it using the scripts at https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script. \n\n","Url":"https://github.com/dotnet/sdk/issues/3450","RelatedDescription":"Open issue \"WPF for VB build failed with error BC2017: could not find library 'Microsoft.VisualBasic.dll'\" (#3450)"},{"Id":"471856447","IsPullRequest":true,"CreatedAt":"2019-07-23T18:29:58","Actor":"wli3","Number":"3447","RawContent":null,"Title":"Use host model for apphost","State":"open","Body":"part of #11300","Url":"https://github.com/dotnet/sdk/pull/3447","RelatedDescription":"Open PR \"Use host model for apphost\" (#3447)"},{"Id":"469673628","IsPullRequest":false,"CreatedAt":"2019-07-23T17:54:56","Actor":"mavasani","Number":"3433","RawContent":null,"Title":"Breaking change due to default setting of certain properties","State":"closed","Body":"PR https://github.com/dotnet/sdk/pull/511/ added default values for certain build related properties to fix https://github.com/dotnet/roslyn-project-system/issues/437 - indeterminate setting of corresponding check boxes in properties page.\r\n\r\nHowever, this causes breaking issues when moving from old project system to new project system. The C# targets do not set any default for these properties, which means that if my repo on old project system had the following conditional property after importing the common targets, then this condition will evaluate to true for old targets imports, but false for the new SDK imports:\r\n\r\n`<SignAssembly Condition=\"'$(SignAssembly)' == ''\">true</SignAssembly>`\r\n\r\nFor example see [here](https://github.com/dotnet/roslyn-analyzers/blob/master/build/Targets/Analyzers.Settings.targets#L18). This led me to spend half a day investigating IVT failures after porting the analyzers repo to new project system due to the fact that this breaking change silently turned off `/keyfile` command line argument.\r\n\r\nGiven that the above SDK change was only done to satisfy the property pages, we should find a different workaround.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3433","RelatedDescription":"Closed issue \"Breaking change due to default setting of certain properties\" (#3433)"},{"Id":"471690262","IsPullRequest":true,"CreatedAt":"2019-07-23T14:45:35","Actor":"dotnet-maestro[bot]","Number":"3446","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190723.02\r\n- **Date Produced**: 7/23/2019 10:06 AM\r\n- **Commit**: 1ff3588d49079733e228a7d34bc06ebc33796bc1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-19373-02\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3446","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3446)"},{"Id":"471658045","IsPullRequest":true,"CreatedAt":"2019-07-23T13:41:35","Actor":"dotnet-maestro[bot]","Number":"3445","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190722.10\r\n- **Date Produced**: 7/23/2019 2:43 AM\r\n- **Commit**: 0793e2df782efc9ccae387bc779b2549208fa4a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19372.10\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19372.10\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3445","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3445)"},{"Id":"470619220","IsPullRequest":true,"CreatedAt":"2019-07-20T20:53:44","Actor":"peterhuene","Number":"3441","RawContent":null,"Title":"Fix regeneration of files when asset cache changes.","State":"closed","Body":"Both the deps.json and runtimeconfig.json files remain unchanged when an\r\nincremental build takes place that changes a property that would invalidate the\r\nassets cache.\r\n\r\nFor a property like `SelfContained`, this might mean the files are no longer\r\nvalid for the incremental build's output.\r\n\r\nFixes dotnet/cli#11956.","Url":"https://github.com/dotnet/sdk/pull/3441","RelatedDescription":"Closed or merged PR \"Fix regeneration of files when asset cache changes.\" (#3441)"},{"Id":"470672478","IsPullRequest":true,"CreatedAt":"2019-07-20T14:58:25","Actor":"dotnet-maestro[bot]","Number":"3443","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190719.09\r\n- **Date Produced**: 7/19/2019 9:12 PM\r\n- **Commit**: 3fcf1dac5531a0a92ce53af4eae4fc42316a0ccf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27919-09\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3443","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3443)"},{"Id":"470667749","IsPullRequest":true,"CreatedAt":"2019-07-20T14:06:45","Actor":"dotnet-maestro[bot]","Number":"3442","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190719.2\r\n- **Date Produced**: 7/19/2019 5:55 PM\r\n- **Commit**: a190d4865fe3c86a168ec49c4fc61c90c96ae051\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19369.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19369.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3442","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3442)"},{"Id":"469756109","IsPullRequest":true,"CreatedAt":"2019-07-20T07:06:16","Actor":"dotnet-maestro[bot]","Number":"3435","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190719.01\r\n- **Date Produced**: 7/19/2019 10:39 AM\r\n- **Commit**: 4b74b80d087e7143949a7eae7dc6035d9db3f6f7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27919-01\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3435","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3435)"},{"Id":"471996722","IsPullRequest":false,"CreatedAt":"2019-07-19T23:50:18","Actor":"mdjaniga","Number":"3449","RawContent":null,"Title":"NetCore App 2.1.12 produces Case-insensitive *.deps.json file for case sensitive operating systems","State":"open","Body":"I maintain my production build environment within a docker container.  This env uses 2.1.12.\r\n\r\nApplication is named Jobe.  Builds from this environment produce a deps.json file with an application target application dll in all lower case, \"jobe.dll\".  The actual DLL is \"Jobe.dll\".  I encounter a runtime error when jobe.dll is not found.\r\n\r\nMy local environment is env uses 2.1.4.  In this env using the same build script produces deps.json file with a properly named target.  Subsequently no runtime errors.\r\n\r\n2.1.12 jobe.deps.json\r\n\r\n```\r\n{\r\n  \"runtimeTarget\": {\r\n    \"name\": \".NETCoreApp,Version=v2.1/linux-x64\",\r\n    \"signature\": \"969bce325de8fec99cfd3c7d0c2302841251901c\"\r\n  },\r\n  \"compilationOptions\": {},\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v2.1\": {},\r\n    \".NETCoreApp,Version=v2.1/linux-x64\": {\r\n      \"jobe/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"ApexRest\": \"1.0.0\",\r\n          \"CommandLineParser\": \"2.5.0\",\r\n          \"Microsoft.NETCore.App\": \"2.1.12\",\r\n          \"log4net\": \"2.0.8\"\r\n        },\r\n        \"runtime\": {\r\n          \"jobe.dll\": {}\r\n        }\r\n      },\r\n\r\n```\r\n\r\n2.1.4 Jobe.deps.json\r\n\r\n```\r\n{\r\n  \"runtimeTarget\": {\r\n    \"name\": \".NETCoreApp,Version=v2.1/linux-x64\",\r\n    \"signature\": \"b3039513c0756a28a84f26a7dc4af69f86efbaa9\"\r\n  },\r\n  \"compilationOptions\": {},\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v2.1\": {},\r\n    \".NETCoreApp,Version=v2.1/linux-x64\": {\r\n      \"Jobe/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"ApexRest\": \"1.0.0\",\r\n          \"CommandLineParser\": \"2.5.0\",\r\n          \"Microsoft.NETCore.App\": \"2.1.4\",\r\n          \"log4net\": \"2.0.8\"\r\n        },\r\n        \"runtime\": {\r\n          \"Jobe.dll\": {}\r\n        }\r\n      },\r\n```","Url":"https://github.com/dotnet/sdk/issues/3449","RelatedDescription":"Open issue \"NetCore App 2.1.12 produces Case-insensitive *.deps.json file for case sensitive operating systems\" (#3449)"},{"Id":"470405396","IsPullRequest":true,"CreatedAt":"2019-07-19T16:03:04","Actor":"kzu","Number":"3440","RawContent":null,"Title":"Add support for @(AssemblyMetadata) items that turn into assembly attributes","State":"open","Body":"Given that `AssemblyMetadataAttribute` is such a common assembly-level attribute, this adds support\r\nfor specifying it directly via simple items, such as:\r\n\r\n```\r\n    <AssemblyMetadata Include=\"Foo\" Value=\"Bar\" />\r\n    <AssemblyMetadata Include=\"Bar\" Value=\"Baz\" />\r\n```\r\n\r\nThis also avoids having to learn the `_Parameter1` and `_Parameter2` syntax in `AssemblyAttribute` elements, \r\nand is more similar to the way other higher-level properties like `AssemblyTitle` or `Product` are also\r\nturned into assembly attributes.\r\n\r\nPartially fixes #3166","Url":"https://github.com/dotnet/sdk/pull/3440","RelatedDescription":"Open PR \"Add support for @(AssemblyMetadata) items that turn into assembly attributes\" (#3440)"},{"Id":"470401901","IsPullRequest":true,"CreatedAt":"2019-07-19T15:57:33","Actor":"kzu","Number":"3439","RawContent":null,"Title":"Add support for @(InternalsVisibleTo) items that turn into assembly attributes","State":"open","Body":"Given that `InternalsVisibleTo` is such a common assembly-level attribute, this adds support \r\nfor specifying it directly via simple items, such as:\r\n\r\n```\r\n  <ItemGroup>\r\n    <InternalsVisibleTo Include=\"MyLibrary.Tests\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThis also avoids having to learn the `_Parameter1` syntax in `AssemblyAttribute` elements, and is \r\nmore similar to the way other higher-level properties like `AssemblyTitle` or `Product` are also \r\nturned into assembly attributes.\r\n\r\nPartially fixes #3166","Url":"https://github.com/dotnet/sdk/pull/3439","RelatedDescription":"Open PR \"Add support for @(InternalsVisibleTo) items that turn into assembly attributes\" (#3439)"},{"Id":"469731724","IsPullRequest":true,"CreatedAt":"2019-07-19T14:16:13","Actor":"dotnet-maestro[bot]","Number":"3434","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190718.7\r\n- **Date Produced**: 7/18/2019 11:09 PM\r\n- **Commit**: eecde8a8751dbe7fdb17ba4dfbd032e26f4cae7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19368.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19368.7\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3434","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3434)"},{"Id":"470016049","IsPullRequest":false,"CreatedAt":"2019-07-18T22:15:57","Actor":"etbyrd","Number":"3438","RawContent":null,"Title":"Remove .NETCore <3.0 as SupportedTargetFrameworks for WinForms and WPF","State":"open","Body":"The Project System needs a way to know the correct SupportedTargetFrameworks for WinForms and WPF projects so we can display the correct TFM's in the property pages. \r\n\r\nIs it possible that this can be done on the SDK side?\r\n\r\nhttps://github.com/dotnet/project-system/issues/5010\r\n\r\ncc @nguerrera \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3438","RelatedDescription":"Open issue \"Remove .NETCore <3.0 as SupportedTargetFrameworks for WinForms and WPF\" (#3438)"},{"Id":"470010193","IsPullRequest":false,"CreatedAt":"2019-07-18T21:58:31","Actor":"ericstj","Number":"3437","RawContent":null,"Title":"ResolveTargetingPackAssets crashes when presented a targeting pack with no matching assets","State":"open","Body":"Build a project as follows:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeFrameworkVersion>5.0.0-alpha1.27918.1</RuntimeFrameworkVersion>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <FrameworkReference Update=\"Microsoft.NETCore.App\"\r\n                        TargetingPackVersion=\"5.0.0-alpha1.27918.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018: The \"ResolveTargetingPackAssets\" task failed unexpectedly. [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018: System.InvalidOperationException: Sequence contains no matching element [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at System.Linq.ThrowHelper.ThrowNoMatchException() [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at System.Linq.Enumerable.First[TSource](IEnumerable`1 source, Func`2 predicate) [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolveTargetingPackAssets.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolveTargetingPackAssets.cs:line 96 [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [D:\\scratch\\nca5\\nca5.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012512\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(161,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [D:\\scratch\\nca5\\nca5.csproj]\r\n```\r\n\r\nThis is happening because the refpack uses `netcoreapp5.0` instead of of `netcoreapp3.0`.  Failure is legitimate but it should be better than a stack trace.","Url":"https://github.com/dotnet/sdk/issues/3437","RelatedDescription":"Open issue \"ResolveTargetingPackAssets crashes when presented a targeting pack with no matching assets\" (#3437)"},{"Id":"469588834","IsPullRequest":false,"CreatedAt":"2019-07-18T06:18:08","Actor":"Nirmal4G","Number":"3432","RawContent":null,"Title":"Append TargetFramework to *OutputPaths only when MultiTargeting","State":"open","Body":"Rleated issues: #844 #550 #1376 (those github found out)\r\n\r\nFor single targeting projects, we don't need to appened the `*OutputPath`s properties with `TargetFramework` since, we are only targeting single framework. This is also the behavior of the old projects before sdks were introduced.\r\n\r\n1. All the large winforms and wpf projects have custom targets that rely on hard coded paths based on the defaults set by the old project files. It'll be easy to migrate those projects if those paths were the same. ðŸ˜Œ\r\n\r\n2. It'll reduce a directory overhead in the directory tree. One less dir to navigate! ðŸ˜Œ\r\n\r\nWe can update the targets to preserve the old behavior that only appends the `TargetFramework` property only when it's multi-targeting.\r\n\r\nI can do a PR if you guys are ok with this!","Url":"https://github.com/dotnet/sdk/issues/3432","RelatedDescription":"Open issue \"Append TargetFramework to *OutputPaths only when MultiTargeting\" (#3432)"},{"Id":"469180602","IsPullRequest":true,"CreatedAt":"2019-07-17T14:48:52","Actor":"dotnet-maestro[bot]","Number":"3431","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190717.01\r\n- **Date Produced**: 7/17/2019 8:46 AM\r\n- **Commit**: 7cf49f78deaae14948ce59fc6d9266365888f7b6\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-27917-01\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3431","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#3431)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies ðŸ˜Š\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2â€¦ Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA â€œmulti-arch tagsâ€œ), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA â€œmulti-arch tagsâ€œ), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customerâ€™s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>TheÂ </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span>Â was released earlier this week. We have received multiple customer reports ofÂ issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studioâ€™s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your projectâ€™s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studioâ€™s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your projectâ€™s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1154105630220640257","CreatedAt":"2019-07-24T19:06:39+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 7\n\nhttps://t.co/gNfmpbO5bA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":109,"FavoriteCount":58,"RawContent":null},{"Id":"1154104343131410432","CreatedAt":"2019-07-24T19:01:32+00:00","UserScreenname":"dotnet","Text":"Visual Studio 2019 version 16.2 Generally Available and 16.3 Preview 1\n\nhttps://t.co/Dd5t9pJ8nn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":143,"FavoriteCount":82,"RawContent":null},{"Id":"1153711768151052289","CreatedAt":"2019-07-23T17:01:35+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core and Blazor updates in .NET Core 3.0 Preview 7 https://t.co/2gzRbk6aoK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":128,"FavoriteCount":73,"RawContent":null},{"Id":"1153711590702632961","CreatedAt":"2019-07-23T17:00:52+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 7 https://t.co/gNfmpbO5bA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":277,"FavoriteCount":165,"RawContent":null},{"Id":"1153705997988323329","CreatedAt":"2019-07-23T16:38:39+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":0,"RawContent":null},{"Id":"1153304666932961280","CreatedAt":"2019-07-22T14:03:54+00:00","UserScreenname":"dotnet","Text":"Interested in game development but not sure where to start? Check out our new free learning course on getting startâ€¦ https://t.co/qZIuFYLIDZ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":91,"FavoriteCount":32,"RawContent":null},{"Id":"1151899037030764545","CreatedAt":"2019-07-18T16:58:26+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":8,"RawContent":null},{"Id":"1151259798244974592","CreatedAt":"2019-07-16T22:38:19+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-07-25T05:30:42.7689644Z","RunDurationInMilliseconds":17104}