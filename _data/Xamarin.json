{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8845559270","Type":"PullRequestEvent","CreatedAt":"2019-01-07T18:37:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Merged pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844286553","Type":"IssuesEvent","CreatedAt":"2019-01-07T15:01:08","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2489","RelatedDescription":"Closed issue \"Deployment is failing intermittently during InstallPackageAssemblies\" (#2489) at xamarin/xamarin-android","RelatedBody":"I'm seeing deployment fail pretty consistently on a first deployment attempt, and I'm seemingly only able to work around it by cleaning and re-deploying. This appears to be a regression in relatively recent d16.0  builds.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android project and try to deploy it to device.\r\n2. You may need to clean and redeploy, or otherwise work from an \"incremental\" state in order to reproduce, however as mentioned I am seeing this pretty consistently on \"Clean\" deployment attempts.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nDeployment attempts succeed every time.\r\n\r\n### Actual Behavior\r\nDeployment intermittently fails with\r\n```MSB4018: The \"InstallPackageAssemblies\" task failed unexpectedly.\r\nSystem.MissingMethodException: Method not found: 'Void Xamarin.AndroidTools.AndroidDeploySession.set_FastDevTypemapsProvider(System.Func`1<System.Collections.Generic.IEnumerable`1<System.String>>)'.\r\n   at Xamarin.Android.Tasks.InstallPackageAssemblies.RunTask()\r\n   at Xamarin.Android.Tasks.InstallPackageAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n### Version Information\r\nXamarin.Android SDK   9.1.199.38 (HEAD/00f9c37c) installed on top of VS2017 15.9\r\nMono: mono/mono/2018-08@23f2024af80\r\n    Java.Interop: xamarin/java.interop/master@6dd6f16\r\n    LibZipSharp: grendello/LibZipSharp/master@d695149\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.25.2@4ea4c69\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0-p2@9e78d6e\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.githubusercontent.com/pjcollins/9a0737e48f1ccbee5a898583860ab839/raw/ec98364a9f77b8bdcca88891d057016e234aeb93/gistfile1.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8844272368","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:58:52","Actor":"jonathanpeppers","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Opened pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844272368","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:58:52","Actor":"jonathanpeppers","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Opened pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844014534","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:15:29","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2592","RelatedDescription":"Opened pull request \"Build with Android NDK r18\" (#2592) at xamarin/xamarin-android","RelatedBody":"  * Update gradle to version 5.1 (the latest version)\r\n  * Update gradle android addin to 3.2.1 (required for r18 as it removes\r\n    dependency on the MIPS toolchain which no longer exists in r18)\r\n  * Bump mono to the tip of the `2018-08` branch, to bring NDK r18 build fixes\r\n    for BTLS and Mono runtime."},{"Id":"8843958471","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:05:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2591","RelatedDescription":"Merged pull request \"[C++] Cosmetic changes to the code: NULL -> nullptr\" (#2591) at xamarin/xamarin-android","RelatedBody":"In effort to morph our current code to modern C++, this commit replaces all the\r\n`NULL` macro instances with the C++ standard `nullptr` type. No functional\r\nchanges are present in this commit.\r\n\r\nThe only exception here is the `xamarin_getifaddrs.cc` file in which the reverse\r\noperation is done - replacement of `nullptr` with `NULL`. The reason for this is\r\nthat the file is destined to be moved to the Mono codebase at some point and so,\r\nat least for now, it should remain standard C99"},{"Id":"8843270589","Type":"PullRequestEvent","CreatedAt":"2019-01-07T11:45:08","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2591","RelatedDescription":"Opened pull request \"[C++] Cosmetic changes to the code: NULL -> nullptr\" (#2591) at xamarin/xamarin-android","RelatedBody":"In effort to morph our current code to modern C++, this commit replaces all the\r\n`NULL` macro instances with the C++ standard `nullptr` type. No functional\r\nchanges are present in this commit.\r\n\r\nThe only exception here is the `xamarin_getifaddrs.cc` file in which the reverse\r\noperation is done - replacement of `nullptr` with `NULL`. The reason for this is\r\nthat the file is destined to be moved to the Mono codebase at some point and so,\r\nat least for now, it should remain standard C99"},{"Id":"8842478385","Type":"PullRequestEvent","CreatedAt":"2019-01-07T09:07:18","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2589","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] remove more %temp% file usage\" (#2589) at xamarin/xamarin-android","RelatedBody":"In various places throughout our build, we are still using a pattern\r\nsuch as:\r\n\r\n    try {\r\n        var temp = Path.GetTempFileName ();\r\n        //Write to the file\r\n        MonoAndroidHelper.CopyIfChanged (temp, dest);\r\n    } finally {\r\n        File.Delete (temp);\r\n    }\r\n\r\nOr sometimes variations that aren't even as nice as this...\r\n\r\nWe can instead use the new `MonoAndroidHelper.CopyIfStreamChanged`\r\nmethod and not use any temp files.\r\n\r\n## CopyResource ##\r\n\r\nThis MSBuild task had its own `CopyIfStreamChanged` behavior, and it\r\nhas been around a while. I was able to remove a lot of code from this\r\nMSBuild task; it is much simpler now.\r\n\r\nOther changes:\r\n\r\n- We don't really need an extra `Run` method here.\r\n- If we are putting `Assembly.GetExecutingAssembly ()` in a static\r\n  variable, let's put the jcwgen assembly in one as well.\r\n- Use string interpolation: `$`\r\n\r\n## GeneratePackageManagerJava, MonoAndroidHelper, and XDocumentExtensions ##\r\n\r\nEach had a simple example of using a temp file that could be changed\r\nto use `CopyIfStreamChanged` instead.\r\n\r\n## Results ##\r\n\r\nI couldn't really see a build performance improvement, but it should\r\nbe slightly better. Most of these changes result in cleaner code, and\r\nless temp files!"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8848010733","Type":"IssuesEvent","CreatedAt":"2019-01-08T04:46:25","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4885","RelatedDescription":"Reopened issue \"Gesture not firing for custom renderer on iOS\" (#4885) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nGiven a gesture recognizer on a `View` _with_ custom renderer, the gesture is not firing events on iOS.\r\n\r\nThis code\r\n\r\n```\r\n<ContentPage.Content>\r\n        <AbsoluteLayout HorizontalOptions=\"FillAndExpand\" VerticalOptions=\"FillAndExpand\">\r\n            <vlc:VideoView x:Name=\"videoView\" MediaPlayer=\"{Binding MediaPlayer}\" AbsoluteLayout.LayoutBounds=\"0,0,1,1\" AbsoluteLayout.LayoutFlags=\"All\">\r\n                <vlc:VideoView.GestureRecognizers>\r\n                    <PanGestureRecognizer PanUpdated=\"PanGestureRecognizer_PanUpdated\"/>\r\n                </vlc:VideoView.GestureRecognizers>\r\n            </vlc:VideoView>\r\n            <Label Text=\"{Binding Message}\" AbsoluteLayout.LayoutBounds=\".5,1,1,.1\" AbsoluteLayout.LayoutFlags=\"All\" FontSize=\"20\" LineBreakMode=\"WordWrap\" TextColor=\"White\" />\r\n        </AbsoluteLayout>\r\n    </ContentPage.Content>\r\n```\r\n\r\nWorks fine on Android, while `PanGestureRecognizer_PanUpdated` is never raised on iOS.\r\n\r\nUsing an `Image` instead of the `VideoView` (custom renderer) works as expected on iOS.\r\nI don't think a custom renderered View needs any particular setup to make gesture recognizers work. So I'm confused as to why it works on Android and not on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. git clone https://github.com/mfkl/libvlcsharp-samples/\r\n2. git checkout gestures\r\n3. run Gestures.iOS and touch the screen\r\n\r\n### Expected Behavior\r\n\r\nPan events fire.\r\n\r\n### Actual Behavior\r\n\r\nPan events don't fire.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0967583\r\n- IDE: VS4Mac 7.7.2\r\n- Platform Target Framework:\r\n  - iOS:  12.2.1.12\r\n\r\n\r\nThanks for looking into it. \r\n"},{"Id":"8847346931","Type":"PullRequestEvent","CreatedAt":"2019-01-08T01:17:29","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4757","RelatedDescription":"Merged pull request \"Added case in GTK listviewrender for change of SelectedItem property\" (#4757) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded case in GTK listviewrender for change of SelectedItem property.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4748\r\n\r\n\r\n### API Changes ###\r\nnone\r\n\r\n### Platforms Affected ### \r\n- GTK\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nI've added Issue4748.cs with basic example. Without fix, clicking button does not update selected item highlight in list. With fix, last item in list become highlighted, as it should.\r\nI didn't understand, how to run UI tests locally, so I didn't made one.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8847346921","Type":"IssuesEvent","CreatedAt":"2019-01-08T01:17:29","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4748","RelatedDescription":"Closed issue \"Setting SelectedItem property of GTK ListView does not reflected in UI\" (#4748) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting SelectedItem for GTK ListView programmaticaly does not work. \r\n\r\n### Expected Behavior\r\nWhen you programmaticaly set SelectedItem to actual item from list, it should become highlighted, like it does when you click item.\r\n### Actual Behavior\r\nIt does not highlighted.\r\n### Basic Information\r\nLooks like OnElementPropertyChanged of is missing a case for change of SelectedItem property https://github.com/xamarin/Xamarin.Forms/blob/f2948f1f0cf9829fe6ddafc60df2ac06a6a59ed0/Xamarin.Forms.Platform.GTK/Renderers/ListViewRenderer.cs#L76-L98 .\r\n\r\n- Version with issue:\r\nBuilded this commit (latest master commit at this time) https://github.com/xamarin/Xamarin.Forms/commit/f2948f1f0cf9829fe6ddafc60df2ac06a6a59ed0\r\n- Last known good version:\r\n- IDE: Visual Studio\r\n- Platform Target Frameworks: GTK\r\n- Affected Devices:\r\n"},{"Id":"8847145871","Type":"PullRequestEvent","CreatedAt":"2019-01-08T00:14:35","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4916","RelatedDescription":"Opened pull request \"[Android] Allow the page background to be reset\" (#4916) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOnce a background is set on the page, it can never be unset.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nSetting a page background to an image, and then setting it to null will now actually set the page to no image. Previously, the image stayed.\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n - Create a page\r\n - Set the background to a valid image\r\n - _observe the image_\r\n - Set the background to null\r\n - _observe the blank page_\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8847123002","Type":"PullRequestEvent","CreatedAt":"2019-01-08T00:07:51","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4733","RelatedDescription":"Merged pull request \"Material Design Renderers for the Material Visual\" (#4733) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe PR to show the changes for the Material controls.\r\n\r\n### API Changes ###\r\n \r\n - `ActivityIndicator`\r\n - `Button`\r\n - `Entry`\r\n - `Frame`\r\n - `ProgressBar`\r\n - `Slider` _iOS only_\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n - New Material renderers\r\n    - Most of the renderers are new, but the entry renderers have been tweaked to reuse code. Instead of `EntryRenderer : ViewRenderer<...>`, and then having to duplicate all that code, the base has been extracted out so that `EntryRenderer : EntryRendererBase<FormsEditText>` and the new `MaterialEntryRenderer : EntryRendererBase<MaterialFormsTextInputLayout>`.\r\n - Refactored the repeated use of `Internals.Registrar.Registered.GetHandlerForObject<IImageSourceHandler>(source)` and the related logic to load images into an extension method `source.GetNativeImageAsync()`  https://github.com/xamarin/Xamarin.Forms/pull/4733/files#diff-5b0ee3b57729867cde314a6ba13fa2ab\r\n- Generalized Entry https://github.com/xamarin/Xamarin.Forms/pull/4733/files#diff-6d85740c77efaa837d7bb69a42102ef5\r\n\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n- Test Entry control to ensure non material control works\r\n- Ensure changes to Image Loading  on iOS wasn't broken\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4733/files#diff-5b0ee3b57729867cde314a6ba13fa2ab \r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4733/files#diff-e7e02ce38379deb0c027bd4e04e17265\r\n- Ensure nuspec updates to support v28 are good\r\n- Test changes to iOS Entry Renderer https://github.com/xamarin/Xamarin.Forms/pull/4733/files#diff-b8c74a29a641c60daba89e6908f411ff\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8846770060","Type":"IssuesEvent","CreatedAt":"2019-01-07T22:35:45","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1356","RelatedDescription":"Reopened issue \"[UWP] The SelectedItem in a ListView is not highlighted when set while constructing a page\" (#1356) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nSetting a SelectedItem on a ListView when constructing a page doesn't select the item in the list on UWP.\r\n\r\n### Steps to Reproduce\r\n\r\nThis should simply require unzipping and running the reproduction -- the MainPage has a ListView which already does the work of setting the SelcetedItem.\r\n\r\n### Expected Behavior\r\n\r\nThe selected item is visually highlighted in the list.\r\n\r\n### Actual Behavior\r\n\r\nThe selected item is not visually highlighted on UWP. It is on Android and iOS.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.191934\r\n- Last known good version: Uncertain. This may have worked at some point, or maybe not.\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n  - Android: 8.0\r\n  - UWP:  16299\r\n- Android Support Library Version: (Not applicable)\r\n- Nuget Packages: (Not Applicable -- baseline Forms project/updated packages)\r\n- Affected Devices: Devices/machines running Windows 10\r\n\r\n### Screenshots\r\n\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/1543316/App1.zip)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8845029626","Type":"IssuesEvent","CreatedAt":"2019-01-07T16:58:12","Actor":"taori","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5352","RelatedDescription":"Opened issue \"Fresh, blank Xamarin.Forms project does not start debugging.\" (#5352) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. create new xamarin forms project\r\n2. start debugging\r\n\r\n### Expected Behavior\r\n- debugging should start\r\n### Actual Behavior\r\n- build fails\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstallierte Version: Enterprise\r\n\r\nAllgemeine Azure-Tools   1.10\r\nBietet allgemeine Dienste für die Verwendung durch Azure Mobile Services und Microsoft Azure-Tools.\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions und Webauftragstools   15.9.02046.0\r\nAzure Functions und Webauftragstools\r\n\r\nC#-Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC#-Komponenten, die in der IDE verwendet werden. Je nach Projekttyp und Einstellungen kann eine andere Compilerversion verwendet werden.\r\n\r\nErweiterung zum Debuggen von Momentaufnahmen   1.0\r\nDetaillierte Informationen zur Visual Studio-Erweiterung zum Debuggen von Momentaufnahmen\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript-Sprachdienst   2.0\r\nJavaScript-Sprachdienst\r\n\r\nJetBrains ReSharper Ultimate 2018.2.3   Build 182.0.20180912.70621\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2019 JetBrains, Inc.\r\n\r\nMicrosoft Azure-Tools   2.9\r\nMicrosoft Azure-Tools für Microsoft Visual Studio 2017 – v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools für Visual Studio   0.4\r\nDie Konfiguration von Azure DevOps-Pipelines von der Visual Studio-IDE aus wird vereinfacht.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio-Tools für Container   1.1\r\nJetzt können Sie Ihre ASP.NET Core-Anwendung in der Zielumgebung entwickeln, ausführen und überprüfen. Drücken Sie F5, um die Anwendung direkt in einem Container mit Debugfunktionen auszuführen, oder STRG+F5 zum Bearbeiten und Aktualisieren Ihrer Anwendung, ohne den Container erneut erstellen zu müssen.\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet-Paket-Manager   4.6.0\r\nNuGet-Paket-Manager in Visual Studio. Weitere Informationen zu NuGet finden Sie unter \"http://docs.nuget.org/\".\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage-Erweiterung   1.0\r\nDetaillierte Informationen zur ResourcePackage-Erweiterung von Visual Studio\r\n\r\nResourcePackage-Erweiterung   1.0\r\nDetaillierte Informationen zur ResourcePackage-Erweiterung von Visual Studio\r\n\r\nResXManager   1.33.1745.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript-Tools   15.9.20918.2001\r\nTypeScript-Tools für Microsoft Visual Studio\r\n\r\nVisual Basic-Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic-Komponenten, die in der IDE verwendet werden. Je nach Projekttyp und Einstellungen kann eine andere Version des Compilers verwendet werden.\r\n\r\nVisual F# Tools 10.2 für F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 für F# 4.5\r\n\r\nVisual Studio-Tools für Container   1.0\r\nVisual Studio-Tools für Container\r\n\r\nVisual Studio Code-Debugadapter-Hostpaket   1.0\r\nInteropebene zum Hosten der Visual Studio Code-Adapter in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSColorOutput   2.6.3\r\nColor output for build and debug windows - http://mike-ward.net/vscoloroutput\r\n\r\nXamarin   4.12.3.77 (d15-9@e3f40b477)\r\nVisual Studio-Erweiterung, um Entwicklung für Xamarin.iOS und Xamarin.Android zu ermöglichen.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.4.2 (HEAD/8255f42fc)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n\r\n\r\n\r\n\r\n## output window\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n```\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : An unexpected error occurred with the current SSH Session\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : Eine vorhandene Verbindung wurde vom Remotehost geschlossen\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : \r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : The client build6928admin has been disconnected while waiting a post response to topic xvs/Build/4.12.3.77/compare-items\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : An error occurred on the underlying client while executing an operation. Details: The client  has been disconnected while trying to perform the unsubscribe to topics: xma/last-will\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : An error occurred on the underlying client while executing an operation. Details: Eine vorhandene Verbindung wurde vom Remotehost geschlossen\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : System.Net.Mqtt.MqttClientException: The client  has been disconnected while trying to perform the unsubscribe to topics: xma/last-will\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning :    bei System.Net.Mqtt.Sdk.MqttClientImpl.<UnsubscribeAsync>d__31.MoveNext()\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : --- Ende der Stapelüberwachung vom vorhergehenden Ort, an dem die Ausnahme ausgelöst wurde ---\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning :    bei System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning :    bei System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning :    bei Xamarin.Messaging.Client.TopicObservable`1.<<Subscribe>b__5_0>d.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Client\\TopicObservable.cs:Zeile 29.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : The client build6928admin has been disconnected while waiting a post response to topic xvs/Build/4.12.3.77/compare-items\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning :    bei Xamarin.Messaging.Client.MessagingClient.<PostAsync>d__23`2.MoveNext() in E:\\A\\_work\\293\\s\\External\\messaging\\src\\Xamarin.Messaging.Client\\MessagingClient.cs:Zeile 168.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): warning : Mindestens ein Fehler ist aufgetreten.\r\n2>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(613,3): error : Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt.\r\n```\r\n\r\n## log files\r\n[empty_solution_logs.zip](https://github.com/xamarin/xamarin-macios/files/2733534/empty_solution_logs.zip)\r\n"},{"Id":"8844631664","Type":"IssuesEvent","CreatedAt":"2019-01-07T15:55:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5351","RelatedDescription":"Opened issue \"Missing 10.13 in Deployment Target of macOS applications\" (#5351) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Create a XM application on High Sierra (10.13) or get a project created on 10.14 (what I had)\r\n2. Open Info.plist\r\n\r\n<img width=\"511\" alt=\"screen shot 2019-01-07 at 10 40 11 am\" src=\"https://user-images.githubusercontent.com/260465/50777661-2bab7100-126a-11e9-8d35-8c214bbbfdc8.png\">\r\n\r\n### Expected Behavior\r\n\r\nList should include 10.13.\r\n\r\n### Actual Behavior\r\n\r\nList is missing 10.13\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.8 Preview (7.8 build 1487)\r\nInstallation UUID: a8ba93d0-79b6-41af-a590-4edb9c2095b4\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.1 (d16-0 / 2e9867a4)\r\n\r\n\tPackage version: 518000225\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.0.225 (2018-08/bac9fc1f889) (64-bit)\r\n\tPackage version: 518000225\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.7.0.26 (Visual Studio Enterprise)\r\nHash: aa77c673\r\nBranch: master\r\nBuild date: 2019-01-07 09:38:27-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.7.0.26 (Visual Studio Enterprise)\r\nHash: aa77c673\r\nBranch: master\r\nBuild date: 2019-01-07 09:38:27-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.38 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/poupou/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 24.0.2\r\nSDK Platform Tools Version: 21.0.0\r\nSDK Build Tools Version: 21.1.2\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/poupou/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n1.8.0-9\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708001487\r\nGit revision: 0311f28ad5352750c02c4854a36587e47f4806be\r\nBuild date: 2018-12-19 18:37:11+00\r\nBuild branch: release-7.8\r\nXamarin extensions: 1de2700808f1ef0e06199d64e043bc2ae523d700\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Fri Nov  2 20:43:16 PDT 2018\r\n    root:xnu-4570.71.17~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n"},{"Id":"8844510486","Type":"IssuesEvent","CreatedAt":"2019-01-07T15:36:24","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5350","RelatedDescription":"Opened issue \"Note NSApplication.SharedApplication.Windows evil nature and remove in XAMCORE_4_0\" (#5350) at xamarin/xamarin-macios","RelatedBody":"NSApplication.SharedApplication.Windows has caused many developers pain and suffering. \r\n\r\nhttps://forums.xamarin.com/discussion/comment/296033#Comment_296033\r\n\r\nNSApplication.SharedApplication.Windows is EVIL. It hooks into the alloc/dealloc of windows, and when you reference it in C# will make bridged objects to everything in the list. Which means if you have windows that are going to dealloc, and then look at the list, you now poked them again to stay alive a bit longer.\r\n\r\nWe should [Advice] it now and remove from XAMCORE_4_0."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":269,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":178,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":114,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2019-01-08T05:31:09.3867161Z","RunDurationInMilliseconds":2920}