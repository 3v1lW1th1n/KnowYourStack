{"Data":{"Blog":{"FeedItems":[{"Title":"Customer Showcase: BBVA – Augmented Reality House Hunting","PublishedOn":"2019-05-31T16:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently launched a case study series with invited customers to explore their applications using various Microsoft technologies that address business needs. In this post, we look at Valora View, a...","Href":"https://devblogs.microsoft.com/xamarin/bbva-xamarin-customer-showcase/","RawContent":null},{"Title":"Preparing Android Apps for Google Play’s 64-bit Requirements","PublishedOn":"2019-05-29T18:34:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The introduction of Android 5.0 back in 2014 brought official support for 64-bit CPUs. This is a great advancement in Android as 64-bit CPUs deliver great performance improvements for all users...","Href":"https://devblogs.microsoft.com/xamarin/64-bit-requirements-xamarin-android-apps/","RawContent":null},{"Title":"Xamarin.Forms 4.0: Getting Started with Shell","PublishedOn":"2019-05-28T19:16:30+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Xamarin.Forms 4.0 introduced amazing new features to help streamline development when building beautiful mobile apps with C#. The main highlight was the new Xamarin.Forms Shell, which seeks to reduce...","Href":"https://devblogs.microsoft.com/xamarin/shell-xamarin-forms-4-0-getting-started/","RawContent":null},{"Title":"Welcome to the Shell Era: Xamarin.Forms 4.0 Released","PublishedOn":"2019-05-21T16:10:44+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"For the past year, Xamarin has been on a focused journey to improve your productivity by reducing your complexity when building cross-platform mobile applications. Notice the reference to...","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-forms-4-0-the-era-of-shell/","RawContent":null},{"Title":"Managing HTTP & Cleartext Traffic on Android with Network Security Configuration","PublishedOn":"2019-05-17T18:40:55+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Did you know that starting with Android 9 (API level 28) cleartext(non-HTTPS) support is disabled by default? It is always recommended to make connections over HTTPS to ensure that any web...","Href":"https://devblogs.microsoft.com/xamarin/cleartext-http-android-network-security/","RawContent":null},{"Title":"Xamarin Podcast: Microsoft Build 2019 Recap","PublishedOn":"2019-05-14T18:29:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development. This edition also covering a recap of Microsoft Build 2019!\nBuild...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-build-2019-recap/","RawContent":null},{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9738646812","Type":"PullRequestEvent","CreatedAt":"2019-06-01T03:09:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3153","RelatedDescription":"Merged pull request \"Bump to mono/mono/2019-02@e113ce92\" (#3153) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/13231"},{"Id":"9738645035","Type":"PullRequestEvent","CreatedAt":"2019-06-01T03:08:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3151","RelatedDescription":"Merged pull request \"[docs] Move images for messages docs alongside the docs\" (#3151) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/3087\r\n\r\nAs an additional step toward preparing the message docs to be synced to\r\ndocs.microsoft.com, place the images for the docs within their own\r\n`images` subdirectory alongside the Markdown files.  That way, the\r\nautomation to synchronize the pages won't need to look through the\r\nMarkdown files to find linked images.  It can instead just copy the\r\nwhole `images` subdirectory to the same relative location in the\r\nnon-public xamarin-engineering-docs-pr mirror."},{"Id":"9738643595","Type":"PullRequestEvent","CreatedAt":"2019-06-01T03:07:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3154","RelatedDescription":"Merged pull request \"[docs] Remove links for message codes that don't yet have pages\" (#3154) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/3087\r\n\r\nAs an additional step toward preparing the message docs to be synced to\r\ndocs.microsoft.com, remove the two dead links in the README page for the\r\nmessage codes.  These links can be added back if dedicated pages are\r\nwritten for these message codes in the future."},{"Id":"9738640462","Type":"PullRequestEvent","CreatedAt":"2019-06-01T03:05:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3157","RelatedDescription":"Merged pull request \"[build] Override default yaml checkout behavior\" (#3157) at xamarin/xamarin-android","RelatedBody":"We're hitting a couple of git related issues on certain machines, most\r\ncommonly around submodule updating on Windows. Rather than relying on an\r\nmsbuild setup task to do this, we should override the default pipeline\r\nsource checkout behavior. We'll now fetch a clean tree and recursively\r\nclone all relevant submodules for each build stage."},{"Id":"9738636223","Type":"PullRequestEvent","CreatedAt":"2019-06-01T03:03:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3158","RelatedDescription":"Merged pull request \"[mono-runtimes] include Mono.CompilerServices.SymbolWriter\" (#3158) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/055dabe34e1897305be178a260faee3815e3e908\r\nContext: http://build.devdiv.io/2725037\r\n\r\nWindows builds seem to be failing with:\r\n\r\n    \"tests\\Runtime-MultiDex\\Mono.Android-TestsMultiDex.csproj\" (default target) (38) ->\r\n    (_ConvertPdbFiles target) ->\r\n      Xamarin.Android.Common.targets(2060,2): warning : Could not load file or assembly 'Mono.CompilerServices.SymbolWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756' or one of its dependencies. The system cannot find the file specified. [E:\\A\\_work\\2218\\s\\tests\\Runtime-MultiDex\\Mono.Android-TestsMultiDex.csproj]\r\n      Xamarin.Android.Common.targets(2060,2): warning :    at Pdb2Mdb.Converter.Convert(String filename) [E:\\A\\_work\\2218\\s\\tests\\Runtime-MultiDex\\Mono.Android-TestsMultiDex.csproj]\r\n      Xamarin.Android.Common.targets(2060,2): warning :    at Xamarin.Android.Tasks.ConvertDebuggingFiles.Execute() [E:\\A\\_work\\2218\\s\\tests\\Runtime-MultiDex\\Mono.Android-TestsMultiDex.csproj]\r\n\r\nI see this file in the mono archive, so it looks like we missed this\r\nassembly in 055dabe."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9740806572","Type":"PullRequestEvent","CreatedAt":"2019-06-02T00:49:14","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6383","RelatedDescription":"Opened pull request \"various shell fixes\" (#6383) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9740778261","Type":"PullRequestEvent","CreatedAt":"2019-06-02T00:25:13","Actor":"Sebastian1989101","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6382","RelatedDescription":"Opened pull request \"Added option to display icons instead of text in context actions for iOS\" (#6382) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n/!\\ This is the same PR as https://github.com/xamarin/Xamarin.Forms/pull/6363 just implemented a different (maybe much cleaner?) way /!\\\r\n \r\nI've added a enum to choose if ContextActions within a ListView should be displayed as Icon or Text. \r\n\r\n### Issues Resolved ### \r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - Added On().SetContextActionDisplay(ContextActionDisplay.Icon) for Cell\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone with default settings. When ContextActionDisplay.Icon is set for parent Cell, all ContextActions for this Cell will appear as Icon instead of text in iOS.\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAdded \"Context Action Display Icon/Text\" to Control Gallery which includes ContextActions Image or Text based.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n\r\n### Additional noted ###\r\n\r\nThis currently uses a hacky way to obtain the system more icon which may creates issues - I was not sure where I should add such icons if I recreate them myself. \r\n\r\n/!\\ This is the same PR as https://github.com/xamarin/Xamarin.Forms/pull/6363 just implemented a different (maybe much cleaner?) way /!\\\r\n"},{"Id":"9740476196","Type":"IssuesEvent","CreatedAt":"2019-06-01T20:53:11","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6331","RelatedDescription":"Closed issue \"[Bug] Custom renderers are disposed but not finalized, resulting in managed memory leaks\" (#6331) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCustom renderers are disposed but not finalized, resulting in managed memory leaks\r\n\r\n### Steps to Reproduce\r\n\r\n1. Take any existing custom renderer.\r\n2. Add a finalizer.\r\n3. Add a breakpoint to the finalizer.\r\n4. Run the app in the debugger and see if the breakpoint is ever hit.\r\n\r\n(have asked in forums for somebody else to confirm before logging this issue, but to no avail)\r\n\r\n### Expected Behavior\r\nThe breakpoint should be hit at some point after the View being rendered is deleted or goes out of scope.\r\n\r\n### Actual Behavior\r\nThe breakpoint is never hit.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1008975\r\n- Last known good version: N/A\r\n- IDE: Vs2017\r\n- Platform Target Frameworks:\r\n  - iOS:  12.0\r\n  - Android: 9.0\r\n  - UWP:  16299\r\n\r\n"},{"Id":"9740299752","Type":"IssuesEvent","CreatedAt":"2019-06-01T19:05:55","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6221","RelatedDescription":"Closed issue \"[Bug] Memory leak in Xamarin forms if Android Activity is killed but process is not\" (#6221) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nThere is an issue that I believe is related to [this](https://forums.xamarin.com/discussion/90940/improve-how-forms-handles-activity-restarts-on-android) which causes leaking memory. But I have found another scenario where this seems to be pretty bad. It is related to objects not being destroyed when a main activity is stopped but the owning process is not.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin forms app\r\n2. Create a foreground service for android\r\n3. Deploy the app as debug and make sure the service starts\r\n4. Open recent apps and swipe the app to kill it. The Visual Studio debugger remains connected and the process doesn't die, but the Main Activity seems to be killed as well as the service (it's no longer in developer options -> running services)\r\n5. Reopen the app. Upon reopening the app, the Main Activity goes through its full creation (OnCreate() is called), recreating a new instances of the Forms App class. Therefore it creates the main form again. Any objects created in that form are now duplicates, but the first were never destroyed. This can be shown by adding an object to the form with a static field that is an integer counter that is incremented in the class' constructor.\r\n\r\nSee attached project for repro.\r\n\r\nThe service is merely an easy way I've found to reproduce this issue consistently. We started throwing an exception any time we saw an object created twice, and logging those reports to HockeyApp. There are times an app, even without a service, seems to have its activity go out of memory but the process not be killed off. Upon reopening, the exception is thrown.\r\n\r\n### Expected Behavior\r\nLifetime of the forms should be coupled to the lifetime of the main activity, or have some way to get a reference to forms still in memory when the main activity is recreated if they exist.\r\n### Actual Behavior\r\nForms seem to hang around in memory when the main activity is killed but the process is not\r\n### Basic Information\r\n\r\n- Version with issue: \r\n\r\n\r\n\r\n- Last known good version: N/A\r\n- IDE: Visual Studio 15.9.11\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0 Pie\r\n\r\n- Nuget Packages:\r\n- Affected Devices: S8, probably others\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n[Bug.zip](https://github.com/xamarin/Xamarin.Forms/files/3194495/Bug.zip)\r\n\r\n"},{"Id":"9740273321","Type":"IssuesEvent","CreatedAt":"2019-06-01T18:50:42","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6316","RelatedDescription":"Closed issue \"Flyout item can not be hidden\" (#6316) at xamarin/Xamarin.Forms","RelatedBody":"![image](https://user-images.githubusercontent.com/11793001/58400831-692c6180-8086-11e9-8c95-e0f2ba096c80.png)\r\n![image](https://user-images.githubusercontent.com/11793001/58400846-70ec0600-8086-11e9-99ce-1678b11b4bf9.png)\r\nI don't want to show \"Home\" item in Flyout. Can I do this?"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9740942486","Type":"PullRequestEvent","CreatedAt":"2019-06-02T02:38:33","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6199","RelatedDescription":"Merged pull request \"[xcode11] Bump product versions\" (#6199) at xamarin/xamarin-macios","RelatedBody":"to avoid duplicated numbers across branches\nand accept any (up to .99) version of VS4M 8.x"},{"Id":"9740778089","Type":"PullRequestEvent","CreatedAt":"2019-06-02T00:25:05","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6199","RelatedDescription":"Opened pull request \"[xcode11] Bump product versions\" (#6199) at xamarin/xamarin-macios","RelatedBody":"to avoid duplicated numbers across branches\nand accept any (up to .99) version of VS4M 8.x"},{"Id":"9740732648","Type":"PullRequestEvent","CreatedAt":"2019-06-01T23:50:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6191","RelatedDescription":"Merged pull request \"[xtro] 'raw' files might not exist.\" (#6191) at xamarin/xamarin-macios","RelatedBody":"If we just fixed all the entries in the corresponding '*.ignore' file, there\nwon't be a '*.raw' file."},{"Id":"9740026918","Type":"IssuesEvent","CreatedAt":"2019-06-01T16:37:07","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6162","RelatedDescription":"Reopened issue \"[Tests] Bcl test applications should be generated in their own test dir.\" (#6162) at xamarin/xamarin-macios","RelatedBody":"The bcl tests generator is not creating a dir per testing application, this is an issue if we use tests (like the mtouch tests do) that use the project for testing. \r\n\r\nThe generator has to create a dir per test application, that will allow to run the mtouch tests in parallel and not have issues like https://github.com/xamarin/xamarin-macios/issues/6157\r\n\r\nFixing the issue requires two different steps:\r\n\r\n1. Remove the BCLTests directory. The directory is not longer needed since all the old style (compile from source) tests are not longer present.\r\n2. The bcl tests generator use a directory per test app using the test project name as the name of the directory."},{"Id":"9740022994","Type":"PullRequestEvent","CreatedAt":"2019-06-01T16:35:04","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6198","RelatedDescription":"Opened pull request \"[XHarness] Bcl projects should use their own project directory\" (#6198) at xamarin/xamarin-macios","RelatedBody":"BCL projects were sharing all the same directory, this means that there was a number of possible side effects when building more than one project without doing a /t:Clean,Build. The changes make sure that:\r\n\r\n1. All bcl projects have their own dir.\r\n2. Moved all the paths logic to its own class. Means it will later be easier to change the paths if needed.\r\n3. Simplified the project generation methods.\r\n4. Updated the mtouch tests to take into account the new location.\r\n\r\nThis is huge change, mtouch and bcl tests should be ran."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1134529085961621504","CreatedAt":"2019-05-31T18:36:27+00:00","UserScreenname":"xamarinhq","Text":"We're starting a new case study series. Today, we look at Valora View, a mobile app created by BBVA to help custome… https://t.co/Q0HeoB3chG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":20,"RawContent":null},{"Id":"1134188986229035010","CreatedAt":"2019-05-30T20:05:01+00:00","UserScreenname":"xamarinhq","Text":"What's better than sharing 80% of code across #iOS &amp; #Android apps w/ #Xamarin? ...building a backend powered by… https://t.co/EZc7s5adqh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":122,"FavoriteCount":36,"RawContent":null},{"Id":"1134136640929193985","CreatedAt":"2019-05-30T16:37:01+00:00","UserScreenname":"xamarinhq","Text":"August 1 2019, Android apps that ship native libraries must provide a 64-bit v of their app.… https://t.co/JSElMqVSyB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1133821797059780608","CreatedAt":"2019-05-29T19:45:56+00:00","UserScreenname":"xamarinhq","Text":"Today on @TheXamarinShow,, @JamesMontemagno &amp; #MSMVP @NicoVermeir shows off a tool that will change the life of eve… https://t.co/lYUf1XXB4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":19,"RawContent":null},{"Id":"1133455659851243520","CreatedAt":"2019-05-28T19:31:02+00:00","UserScreenname":"xamarinhq","Text":"There are some amazing new features to help streamline C# dev when building beautiful mobile apps w/ Xamarin.Forms… https://t.co/MRwO5G62uW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":152,"FavoriteCount":73,"RawContent":null},{"Id":"1131261167085580289","CreatedAt":"2019-05-22T18:10:54+00:00","UserScreenname":"xamarinhq","Text":"Join us right now for the #XamarinForms 4.0 Launch Event Live Stream! https://t.co/YE7Usel1Sb","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"1131230744267972608","CreatedAt":"2019-05-22T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin.Forms team for the Xamarin.Forms 4.0 launch event extravaganza where they will discuss the latest… https://t.co/WJK5Lp4eRK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":24,"RawContent":null},{"Id":"1130900878830002177","CreatedAt":"2019-05-21T18:19:15+00:00","UserScreenname":"xamarinhq","Text":"We've been obsessing over your feedback. Thanks to your commitment to helping us deliver great dev tools, we're ann… https://t.co/uioErOmWr2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":215,"FavoriteCount":88,"RawContent":null},{"Id":"1129486865831272449","CreatedAt":"2019-05-17T20:40:28+00:00","UserScreenname":"xamarinhq","Text":"Did you know that starting with Android 9, cleartext(non-HTTPS) support is disabled by default? In our latest post,… https://t.co/hRUvSFu9c8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null},{"Id":"1129423057725083649","CreatedAt":"2019-05-17T16:26:55+00:00","UserScreenname":"xamarinhq","Text":"In the latest @XamarinShow, @JamesMontemagno &amp; @dotMorten intro us to the world of advanced mapping with ArcGIS for… https://t.co/nVZWVivZdG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":27,"RawContent":null},{"Id":"1129055786808877057","CreatedAt":"2019-05-16T16:07:31+00:00","UserScreenname":"xamarinhq","Text":"In today's #MSBuild session replay, we look at how you can craft stunning mobile apps with the Xamarin Visual Desig… https://t.co/W9U6GrPYf1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":64,"FavoriteCount":36,"RawContent":null},{"Id":"1129054446191751168","CreatedAt":"2019-05-16T16:02:11+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"1128376789510819840","CreatedAt":"2019-05-14T19:09:25+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. In today's episode, we learn the difference between the Preferences API part… https://t.co/z7Yrhk0jNn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":28,"RawContent":null},{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":79,"FavoriteCount":45,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":137,"FavoriteCount":65,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":69,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":13,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2019-06-02T05:30:52.0499184Z","RunDurationInMilliseconds":2023}