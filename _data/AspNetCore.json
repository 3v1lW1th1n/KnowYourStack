{"Data":{"Blog":{"FeedItems":[{"Title":"Azure Hybrid Benefit for SQL Server","PublishedOn":"2019-02-23T00:15:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In my previous blog post I talked about how to migrate data from existing on-prem SQL Server instances to Azure SQL Database. If you haven’t heard SQL Server 2008 end of support is coming this...","Href":"https://devblogs.microsoft.com/aspnet/azure-hybrid-benefit-for-sql-server/","RawContent":null},{"Title":"Migrating your existing on-prem SQL Server database to Azure SQL DB","PublishedOn":"2019-02-15T20:28:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you are in the process of moving an existing .NET application to Azure, it’s likely you’ll have to migrate an existing, on-prem SQL database as well. There are a few different ways you can go about...","Href":"https://devblogs.microsoft.com/aspnet/migrating-your-existing-on-prem-sql-server-database-to-azure-sql-db/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T16:37:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://devblogs.microsoft.com/aspnet/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Announcing an easier way to use latest certificates from Key Vault","PublishedOn":"2019-02-07T19:00:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Posting on behalf of Prashanth Yerramilli\nWhen we launched Azure Key Vault a few years ago, it solved a major problem users had which was that storing sensitive and/or secret information in code or...","Href":"https://devblogs.microsoft.com/aspnet/announcing-an-easier-way-to-use-latest-certificates-from-key-vault/","RawContent":null},{"Title":"Changes to the web and JSON editor APIs in Visual Studio 2019","PublishedOn":"2019-02-06T17:00:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Visual Studio 2019 Preview 2, The Web Tools team made some changes to improve extensibility features for extension developers. To standardize interfaces, the CSS, HTML, JSON and CSHTML editors...","Href":"https://devblogs.microsoft.com/aspnet/changes-to-the-web-and-json-editor-apis-in-visual-studio-2019/","RawContent":null},{"Title":"Blazor 0.8.0 experimental release now available","PublishedOn":"2019-02-05T19:30:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Blazor 0.8.0 is now available! This release updates Blazor to use Razor Components in .NET Core 3.0 and adds some critical bug fixes.\nGet Blazor 0.8.0\nTo get started with Blazor 0.8.0 install the...","Href":"https://devblogs.microsoft.com/aspnet/blazor-0-8-0-experimental-release-now-available/","RawContent":null},{"Title":"Make the most of your monthly Azure Credits","PublishedOn":"2019-02-01T23:07:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you weren’t aware, Visual Studio subscribers have free monthly Azure credits, that are ideal for experimenting with and learning about Azure services. When you activate this benefit, it creates a...","Href":"https://devblogs.microsoft.com/aspnet/make-the-most-of-your-monthly-azure-credits/","RawContent":null},{"Title":"ASP.NET Core updates in .NET Core 3.0 Preview 2","PublishedOn":"2019-01-29T18:00:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 2 is now available and it includes a bunch of new updates to ASP.NET Core.\nHere&#039;s the list of what&#039;s new in this preview:\n\nRazor Components\nSignalR client-to-server...","Href":"https://devblogs.microsoft.com/aspnet/aspnet-core-3-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.2, available today!","PublishedOn":"2018-12-04T16:30:16+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"I&#8217;m happy to announce that ASP.NET Core 2.2 is available as part of .NET Core 2.2 today!\nHow to get it\nYou can download the new .NET Core SDK (2.2.100) for your dev machine and build servers...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-2-2-available-today/","RawContent":null},{"Title":"Razor support in Visual Studio Code now in Preview","PublishedOn":"2018-11-16T18:00:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this week we released a preview of support for working with Razor files (.cshtml) in the C# extension for Visual Studio Code (1.17.1). This initial release introduces C# completions, directive...","Href":"https://devblogs.microsoft.com/aspnet/razor-support-in-visual-studio-code-now-in-preview/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"413921979","IsPullRequest":false,"CreatedAt":"2019-02-25T03:55:06","Actor":"markdchurchill","Number":"7908","RawContent":null,"Title":"[Blazor] SimpleJson serializes Dictionary as if collection of KeyValuePair","State":"open","Body":"### Describe the bug\r\nIn a *web assembly Blazor* client, when posting a model containing a simply keyed dictionary (eg: string, T) to the server using PostJsonAsync(...),  the member is serialized as a collection of KeyValuePair.\r\n\r\n> {\"myDictionaryMember\":[{\"key\":\"1\",\"value\":{...}},{\"key\":\"2\",\"value\":{...\r\n\r\nThis prevents round-tripping of a shared model.\r\n\r\n### To Reproduce\r\nWith a type such as:\r\n\r\n````\r\nclass Bar { public string Title { get; set; } }\r\n\r\nclass Foo \r\n{\r\n   public Dictionary<string, Bar> Bars { get; set; }\r\n}\r\n````\r\n\r\nPost this type from a Blazor client, and examine the F12 network stuffs.\r\n\r\n### Additional context\r\nThis looks like a known issue with SimpleJSON.\r\n\r\nThere are several workarounds, but this is something that probably should 'just work'.\r\n\r\n1. Separate models for posting.\r\n2. Custom converters for JSON.Net to handle this server side - gets complex as you can't put attributes on a shared model.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7908","RelatedDescription":"Open issue \"[Blazor] SimpleJson serializes Dictionary as if collection of KeyValuePair\" (#7908)"},{"Id":"413902351","IsPullRequest":true,"CreatedAt":"2019-02-25T02:02:20","Actor":"natery2000","Number":"7907","RawContent":null,"Title":"Adding comments","State":"open","Body":"Adding comments for SameSiteMode enum values\r\n\r\nAddresses #7486 \r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7907","RelatedDescription":"Open PR \"Adding comments\" (#7907)"},{"Id":"413649320","IsPullRequest":true,"CreatedAt":"2019-02-25T00:43:07","Actor":"dotnet-maestro-bot","Number":"7888","RawContent":null,"Title":"[automated] Merge branch 'release/3.0-preview3' => 'master'","State":"closed","Body":"I detected changes in the release/3.0-preview3 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0-preview3 by the following committers:\n\n* @natemcmaster\n* @JunTaoLuo\n* @BrennanConroy\n* @pranavkm\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0-preview3\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0-preview3\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore HEAD:merge/release/3.0-preview3-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore HEAD:merge/release/3.0-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-preview3-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-preview3-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/AspNetCore merge/release/3.0-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/AspNetCore merge/release/3.0-preview3-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-preview3-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/AspNetCore merge/release/3.0-preview3-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/AspNetCore merge/release/3.0-preview3-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7888","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0-preview3' => 'master'\" (#7888)"},{"Id":"413878273","IsPullRequest":true,"CreatedAt":"2019-02-24T22:45:13","Actor":"dougbu","Number":"7906","RawContent":null,"Title":"Bump versions using new (coherent) `darc` tool","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/7906","RelatedDescription":"Open PR \"Bump versions using new (coherent) `darc` tool\" (#7906)"},{"Id":"413865979","IsPullRequest":true,"CreatedAt":"2019-02-24T20:46:07","Actor":"dougbu","Number":"7905","RawContent":null,"Title":"Move to latest Xunit packages","State":"open","Body":"- now consistent with AspNetCore-Tooling and only slightly ahead of Extensibility\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7905","RelatedDescription":"Open PR \"Move to latest Xunit packages\" (#7905)"},{"Id":"413851970","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:12","Actor":"livarcocc","Number":"7904","RawContent":null,"Title":"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'","State":"open","Body":"_From @YankdaCode on February 23, 2019 1:35_\n\nSo, I am designing a very customized solution from scratch wherein I have asp.net mvc core app as the main web app. Then I create separate class libraries and update the SDK to Microsoft.NET.Sdk.Razor and use:\r\n    `<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />`\r\nThis allows me to create MVC type class library, lets say \"projectCLB\" and then at startup I scan the folder that is located outside of the project main directory and load the assemblies for my project:\r\nprojectCLB.dll\r\nprojectCLB.Views.dll\r\n\r\nThis was working fine by the following code:\r\n`\r\n```\r\nAssembly assembly;\r\n                try\r\n                {\r\n                    assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(file.FullName);\r\n                }\r\n                catch (FileLoadException ex)\r\n                {\r\n                    // If assembly is already loaded, we'll just catch it and continue to the next one, plugins can have same dependencies:\r\n                    if (ex.Message == \"Assembly with same name is already loaded\")\r\n                    {\r\n                        continue;\r\n                    }\r\n                    throw;\r\n                }\r\n\r\n// Check if the assembly has already been loaded:\r\n                if (!(mvcBuilder.PartManager.ApplicationParts.Any(x => x.Name == assembly.GetName().Name)))\r\n                {\r\n                    //Load the pre-compiled Views:\r\n                    if (assembly.ManifestModule.Name.Contains(\".Views.dll\"))\r\n                    {\r\n                        mvcBuilder.ConfigureApplicationPartManager(mgr =>\r\n                        {\r\n                            foreach (var b in CompiledRazorAssemblyApplicationPartFactory.GetDefaultApplicationParts(assembly))\r\n                            {\r\n                                mvcBuilder.ConfigureApplicationPartManager(apm => apm.ApplicationParts.Add(b));\r\n                            }\r\n\r\n                        });\r\n\r\n                    }\r\n                    // Load the plug in assemblies:\r\n                    else\r\n                    {\r\n                        \r\n                        mvcBuilder.AddApplicationPart(assembly);\r\n                     \r\n                       \r\n\r\n                    }\r\n\r\n                }\r\n```\r\n`\r\n\r\n\r\nThis is how my class library project file looks:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n\r\n  <PropertyGroup Label=\"Globals\">\r\n    <SccProjectName>SAK</SccProjectName>\r\n    <SccProvider>SAK</SccProvider>\r\n    <SccAuxPath>SAK</SccAuxPath>\r\n    <SccLocalPath>SAK</SccLocalPath>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    \r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    \r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Content\\\" />\r\n    <Folder Include=\"Infrastructure\\Data\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <ProjectReference Include=\"..\\..\\<baseapp project>.Common\\baseapp project.Common.csproj\" />\r\n\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Data\\baseapp project.Data.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Repositories\\baseapp project.Repositories.csproj\" />\r\n  </ItemGroup>\r\n  <Target Name=\"UpdateTargetPath\" BeforeTargets=\"AssignRazorGenerateTargetPaths\">\r\n    <ItemGroup>\r\n      <RazorGenerate Include=\"@(RazorGenerate)\" Link=\"$(TargetName)\\plugin\\%(RazorGenerate.RelativeDir)%(RazorGenerate.FileName)%(RazorGenerate.Extension)\" />\r\n\r\n    </ItemGroup>\r\n  </Target>\r\n \r\n\r\n</Project>\r\n\r\n```\r\n\r\nIt was working all fine until I implemented a File Provider so that we can use cshtml files at development time instead of precompiled views since I was having to copy the dlls/ rebuild after a cshtml change. \r\nReason being that PhysicalFileProvider doesn't look outside of the webroot. Now I get this error and there are other posts that I saw but none of the workarounds actually work for me.\r\n\r\n\r\n`System.InvalidOperationException: Cannot find compilation library location for package 'projectCLB'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Process(RazorProjectItem projectItem)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)`\n\n_Copied from original issue: dotnet/sdk#2981_","Url":"https://github.com/aspnet/AspNetCore/issues/7904","RelatedDescription":"Open issue \"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'\" (#7904)"},{"Id":"413849269","IsPullRequest":true,"CreatedAt":"2019-02-24T18:03:46","Actor":"dotnet-maestro[bot]","Number":"7903","RawContent":null,"Title":"[release/3.0-preview3] Update dependencies from  2 repositories","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/aspnet/AspNetCore-Tooling\r\n\r\n- Microsoft.AspNetCore.Mvc.Razor.Extensions - 3.0.0-preview3.19124.2\r\n- Microsoft.NET.Sdk.Razor - 3.0.0-preview3.19124.2\r\n- Microsoft.CodeAnalysis.Razor - 3.0.0-preview3.19124.2\r\n- Microsoft.AspNetCore.Razor.Language - 3.0.0-preview3.19124.2\r\n\r\nUpdates from https://github.com/aspnet/EntityFrameworkCore\r\n\r\n- dotnet-ef - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore.Tools - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore.InMemory - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore.Relational - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore.Sqlite - 3.0.0-preview3.19124.3\r\n- Microsoft.EntityFrameworkCore.SqlServer - 3.0.0-preview3.19124.3\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7903","RelatedDescription":"Open PR \"[release/3.0-preview3] Update dependencies from  2 repositories\" (#7903)"},{"Id":"413847672","IsPullRequest":false,"CreatedAt":"2019-02-24T17:48:33","Actor":"ErikApption","Number":"7902","RawContent":null,"Title":"Blazor doesn't seem to follow default namespace","State":"open","Body":"### Describe the bug\r\nBlazor generates cs files with a namespace using the project name instead of the default namespace\r\nMy csproj has\r\n```xml\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>7.3</LangVersion>\r\n\r\n    <!-- The linker is not beneficial for server-side execution. Re-enable this if you switch to WebAssembly execution. -->\r\n    <BlazorLinkOnBuild>false</BlazorLinkOnBuild>\r\n    <Configurations>Debug;Release</Configurations>\r\n    <RootNamespace>WebAppBootStrap.App</RootNamespace>\r\n  </PropertyGroup>\r\n```\r\n\r\nbut the generated WebAppBootStrap.App-core3\\_ViewImports.cshtml has\r\n\r\nnamespace WebAppBootStrap.App_core3 instead of WebAppBootStrap.App\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a project WebAppBootStrap.App-core3 \r\n2. Set WebAppBootStrap.App as default namespace\r\n3. Write startup.cs\r\n as \r\n```cs\r\nnamespace WebAppBootStrap.App\r\n{\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddSingleton<AppState>();\r\n        }\r\n\r\n        public void Configure(IComponentsApplicationBuilder app)\r\n        {\r\n            app.AddComponent<App>(\"app\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7902","RelatedDescription":"Open issue \"Blazor doesn't seem to follow default namespace\" (#7902)"},{"Id":"413634940","IsPullRequest":false,"CreatedAt":"2019-02-24T10:52:01","Actor":"TerryFogg","Number":"7884","RawContent":null,"Title":"Server closes connection for files > ~23K, when trying to upload via JsRuntime.InvokeAsync<string>(","State":"closed","Body":"### Describe the bug\r\nWhile implementing a test program to upload files using server side Razor Components, any file that is greater than about 23K closes the server connection. The connection does not restart and requires restart of the program.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using \r\n    ASP.NET Core Blazor Language Services   0.8.0-preview-19104-04\r\n   Visual Studio 2019 Preview 2\r\n\r\n Razor Component source\r\nUploadFileTest.cshtml\r\n```\r\n@page \"/UploadFileTest\"\r\n\r\n@using Microsoft.JSInterop;\r\n@inject IJSRuntime JsRuntime;\r\n\r\n<h1>@Filename</h1>\r\n<h2>Data length = @dataLength</h2>\r\n<p>@data</p>\r\n\r\n<input type=\"file\" onchange=\"@FileSelected\" id=\"fileUpload\" />\r\n\r\n@if (fileIsSelected)\r\n{\r\n    <button class=\"btn btn-primary\" onclick=\"@UploadFile\">Upload File</button>\r\n}\r\n\r\n@functions\r\n{\r\n    bool fileIsSelected = false;\r\n    int dataLength = 0;\r\n    string Filename = \"Blank\";\r\n    string data;\r\n\r\n    async Task FileSelected()\r\n    {\r\n        string text = await JsRuntime.InvokeAsync<string>(\"GetFileName\");\r\n        Filename = text;\r\n        fileIsSelected = true;\r\n        StateHasChanged();\r\n    }\r\n    async Task UploadFile()\r\n    {\r\n        data = await JsRuntime.InvokeAsync<string>(\"readFileToUpload\");\r\n        if (data != null)\r\n        {\r\n            dataLength = data.Length;\r\n            StateHasChanged();\r\n        }\r\n    }\r\n```\r\n\r\n\r\nIndex.html\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Standards</title>\r\n    <base href=\"/\" />\r\n    <link href=\"css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\" />\r\n    <link href=\"css/site.css\" rel=\"stylesheet\" />\r\n\r\n    <script>\r\n        window.GetFileName = () => {\r\n            return document.querySelector('input[type=file]').files[0].name;\r\n        }\r\n        async function readFileToUpload() {\r\n            var file = document.querySelector('input[type=file]').files[0];\r\n            const fileContents = await readFileAsText(file);\r\n            console.log(fileContents);  \r\n            return fileContents;\r\n        }\r\n        window.readFileAsText = (inputFile) => {\r\n            const temporaryFileReader = new FileReader();\r\n            return new Promise((resolve, reject) => {\r\n                temporaryFileReader.onerror = () => {\r\n                    temporaryFileReader.abort();\r\n                    reject(new DOMException(\"Problem parsing input file.\"));\r\n                };\r\n                temporaryFileReader.onload = () => {\r\n                    resolve(temporaryFileReader.result);\r\n                };\r\n                temporaryFileReader.readAsDataURL(inputFile);\r\n                // temporaryFileReader.readAsBinaryString(inputFile);\r\n                // temporaryFileReader.readAsText(inputFile);\r\n            });\r\n        };\r\n    </script>\r\n\r\n</head>\r\n<body>\r\n    <app>Loading...</app>\r\n\r\n    <script src=\"_framework/components.server.js\"></script>\r\n    <script src=\"/UploadFile.js\"></script>\r\n    <!--<script src=\"/ConvertArray.js\"></script>-->\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\n### Expected behavior\r\n===================\r\nBase 64 encoded data is created by the browser and can be seen in the console via the\r\nconsole.log(fileContents);  \r\n\r\nThe file contents are successfully transferred for files that are smaller than about 23K bytes as sized on the disk.\r\n\r\n\r\nError\r\n\r\nSystem.InvalidOperationException: Advancing examined to the end would cause pipe to deadlock because FlushAsync is waiting.\r\n   at System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_BackpressureDeadlock()\r\n   at System.IO.Pipelines.Pipe.AdvanceReader(BufferSegment consumedSegment, Int32 consumedIndex, BufferSegment examinedSegment, Int32 examinedIndex)\r\n   at System.IO.Pipelines.Pipe.AdvanceReader(SequencePosition& consumed, SequencePosition& examined)\r\n   at System.IO.Pipelines.Pipe.DefaultPipeReader.AdvanceTo(SequencePosition consumed, SequencePosition examined)\r\n   at Microsoft.AspNetCore.SignalR.HubConnectionHandler`1.DispatchMessagesAsync(HubConnectionContext connection)\r\n   at Microsoft.AspNetCore.SignalR.HubConnectionHandler`1.RunHubAsync(HubConnectionContext connection)\r\nInformation: Close message received from server.\r\nMicrosoft.AspNetCore.Hosting.Internal.GenericWebHostService: Information: Request finished in 58219.6816ms 101 \r\nError: Connection disconnected with error 'Error: Server returned an error on close: Connection closed with an error.'.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7884","RelatedDescription":"Closed issue \"Server closes connection for files > ~23K, when trying to upload via JsRuntime.InvokeAsync<string>(\" (#7884)"},{"Id":"413808105","IsPullRequest":false,"CreatedAt":"2019-02-24T10:45:08","Actor":"wutever0","Number":"7901","RawContent":null,"Title":"[Question] Where to find source code of Microsoft.AspNetCore.Authentication.AuthenticationOptions?","State":"open","Body":"Sorry if this is a very basic question but I am still learning how to browse the source code on github and I spent few hours trying to look for the source of the **AuthenticationOptions** class.\r\n\r\nCannot find it in AspNetCore/src/Security/Authentication/Core/src/ where I was expecting it to be.\r\n\r\nThanks in advance!","Url":"https://github.com/aspnet/AspNetCore/issues/7901","RelatedDescription":"Open issue \"[Question] Where to find source code of Microsoft.AspNetCore.Authentication.AuthenticationOptions?\" (#7901)"},{"Id":"413795460","IsPullRequest":false,"CreatedAt":"2019-02-24T08:19:48","Actor":"FilipVanBouwel","Number":"7900","RawContent":null,"Title":"Make IUrlHelper injectable.","State":"open","Body":"The IUrlHelper interface is currently not injectable through the build-in DI system. This makes it so we have to revert to solutions like [this](https://codeopinion.com/generating-links-with-urlhelper-outside-of-asp-net-core/) or [this](https://benfoster.io/blog/injecting-urlhelper-in-aspnet-core-mvc). It would be extremely handy to just be able to inject a IUrlHelper into your own classes that always works (like in an email sender that needs links to views/pages).","Url":"https://github.com/aspnet/AspNetCore/issues/7900","RelatedDescription":"Open issue \"Make IUrlHelper injectable.\" (#7900)"},{"Id":"413790096","IsPullRequest":true,"CreatedAt":"2019-02-24T07:05:38","Actor":"Tratcher","Number":"7899","RawContent":null,"Title":"Replace EnvironmentName with Environments","State":"open","Body":"The second half of #7733. \r\n\r\nInterestingly `using EnvironmentName = Microsoft.Extensions.Hosting.EnvironmentName;` was not generating an obsolete warning. Seems like a roslyn bug.","Url":"https://github.com/aspnet/AspNetCore/pull/7899","RelatedDescription":"Open PR \"Replace EnvironmentName with Environments\" (#7899)"},{"Id":"413741230","IsPullRequest":false,"CreatedAt":"2019-02-23T21:14:25","Actor":"stsrki","Number":"7898","RawContent":null,"Title":"[Blazor] StateHasChanged with initial values","State":"open","Body":"### Describe the bug\r\nI cannot decide is this a bug or is it meant to work like this. I have a problem when I use StateHasChanged on `Validation` component.\r\n\r\nMy `Validation` component is doing a **StateHasChanged** when the input inside of it pass or fail the validation rule. The problem is if I give the input a default value by just writing it to the component parameter it will not work as expected. The initial value will **always** reset for the Text parameter, in this case value \"a\". So, every time validation fail, it will do a **StateHasChanged**, TextEdit will again be set to initial value(\"a\") and validation will succeed because now it is again \"not empty\".\r\n\r\n### Not working\r\n```\r\n<Validation Validator=\"@ValidationRule.IsNotEmpty\">\r\n    <TextEdit Text=\"a\">\r\n        <Feedback>\r\n            <ValidationError>error</ValidationError>\r\n        </Feedback>\r\n    </TextEdit>\r\n</Validation>\r\n```\r\n\r\n### Working\r\n```\r\n<Validation Validator=\"@ValidationRule.IsNotEmpty\">\r\n    <TextEdit bind-Text=\"@textValue\">\r\n        <Feedback>\r\n            <ValidationError>error</ValidationError>\r\n        </Feedback>\r\n    </TextEdit>\r\n</Validation>\r\n@functions{\r\n    string textValue = \"a\";\r\n}\r\n```\r\n\r\nValidation is working as expected only if I use **variable** for the component parameters.\r\n\r\n### Expected behavior\r\nInitial value should be just that, an initial value that I have defined as the component value. It should not be used later no mater how many times I hit refresh(StateHasChanged).","Url":"https://github.com/aspnet/AspNetCore/issues/7898","RelatedDescription":"Open issue \"[Blazor] StateHasChanged with initial values\" (#7898)"},{"Id":"413739347","IsPullRequest":false,"CreatedAt":"2019-02-23T20:57:12","Actor":"legistek","Number":"7897","RawContent":null,"Title":"[Blazor] Markup Extensions","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\nBuilding a robust and reusable UI framework on top of Razor Components requires a more extensible system for processing CSHTML markup.\r\n\r\nFor example, I would like to build a component framework that utilizes the equivalent of UWP `DependencyProperty`'s and data binding to support an MVVM pattern. I can get quite far (and already have) without modifying the core code and I'm NOT asking the team to implement this as part of Components.\r\n\r\nHowever, I am stuck at a point where to support an elegant syntax, I would need to change the way parameter attributes are assigned to actual component instances. \r\n\r\nFor example, in CSHTML I would like to say something like:\r\n\r\n`<MyComponent MyProperty=@Binding.Create(\"MyViewModelProperty\")/>`\r\n\r\nThis really cannot be done with the current framework without sacrificing the type safety of `MyProperty` as discussed below.\r\n\r\n### Describe the solution you'd like\r\n\r\nI propose a new interface that would let us create custom mechanisms for assigning parameter values to component instances. You basically already have this with the `IPropertySetter` interface. I would expose this idea and make it more extensible, as such:\r\n\r\n```\r\npublic interface IComponentMarkupExtension\r\n{\r\n     void AssignValue(object target, string parameterName);\r\n}\r\n```\r\n\r\nIn the `foreach` loop in `ParameterCollectionExtensions.SetParameterProperties`, what I would do is:\r\n\r\n```\r\nif (parameter.Value is IComponentMarkupExtension markupExt)\r\n     markupExt.AssignValue(target, parameterName);\r\nelse \r\n     writerWithIndex.SetValue(target, parameter.Value);\r\n```\r\n\r\nUnless I'm missing something that would be the extent of the changes necessary to the core code. The rest would be handled at the application or component library level. For example, I would define my own `Binding` class as something like this (most implementation omitted):\r\n\r\n```\r\npublic class Binding : IComponentMarkupExtension\r\n{\r\n     public static Binding Create(string path, object source = null)\r\n     {\r\n          return new Binding(path: path, source: source);\r\n     }\r\n     \r\n     public void AssignValue(object target, string parameterName)\r\n     {\r\n          BindingOperations.Bind(target, parameterName, this);\r\n     }\r\n}\r\n```\r\n\r\nAccordingly, when I write \r\n`<MyComponent MyProperty=@Binding.Create(\"MyViewModelProperty\")/>`\r\nin markup, rather than try to assign a `Binding` instance to `MyProperty`, which would cause a type violation, my custom `IMarkupExtension` will invoke my own `BindingOperations.Bind` method instead.\r\n\r\nI'm sure there are other potential uses for this that I haven't thought of, though robust data binding with an elegant syntax and without sacrificing type safety is really my most important objective here. \r\n\r\n### Describe alternatives you've considered\r\nUntil now I've been declaring property parameter types as `dynamic`. In each setter, a `SetValue` method is called that checks for whether the value is a markup extension. I do not like this approach however because it sacrifices type safety and can easily lead to runtime errors. This also doesn't work when the property type needs to be a `RenderFragment` because `dynamic` cannot be used for delegate types.","Url":"https://github.com/aspnet/AspNetCore/issues/7897","RelatedDescription":"Open issue \"[Blazor] Markup Extensions\" (#7897)"},{"Id":"413673142","IsPullRequest":true,"CreatedAt":"2019-02-23T20:50:54","Actor":"dotnet-maestro[bot]","Number":"7890","RawContent":null,"Title":"[release/3.0-preview3] Update dependencies from  2 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/aspnet/AspNetCore-Tooling\r\n\r\n- Microsoft.AspNetCore.Mvc.Razor.Extensions - 3.0.0-preview3.19122.8\r\n- Microsoft.NET.Sdk.Razor - 3.0.0-preview3.19122.8\r\n- Microsoft.CodeAnalysis.Razor - 3.0.0-preview3.19122.8\r\n- Microsoft.AspNetCore.Razor.Language - 3.0.0-preview3.19122.8\r\n\r\nUpdates from https://github.com/aspnet/EntityFrameworkCore\r\n\r\n- dotnet-ef - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore.Tools - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore.InMemory - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore.Relational - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore.Sqlite - 3.0.0-preview3.19123.1\r\n- Microsoft.EntityFrameworkCore.SqlServer - 3.0.0-preview3.19123.1\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7890","RelatedDescription":"Closed or merged PR \"[release/3.0-preview3] Update dependencies from  2 repositories\" (#7890)"},{"Id":"413731603","IsPullRequest":false,"CreatedAt":"2019-02-23T20:09:05","Actor":"TechnikEmpire","Number":"7896","RawContent":null,"Title":"IP Endpoint information for a new connection in custom middleware is incorrect","State":"closed","Body":"### Describe the bug\r\nWhen injecting your own middleware into Kestrel, using `IConnectionBuilder.Use(middleWare<...>, next)`, it doesn't seem possible to accurately get some connection properties, such as the remote connection port. The IP's do seem to come out correct, but the remote port is always wrong. Related to https://github.com/aspnet/AspNetCore/issues/3448.\r\n\r\nThis isn't an issue with not enabling forwarding headers and such. Direct connection clients cause this issue.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.1.3\r\n2. Run this code:\r\n```C#\r\nvar ipWebhostBuilder = new WebHostBuilder();\r\n\r\nipWebhostBuilder.UseSockets(opts =>\r\n{\r\n    opts.IOQueueCount = ushort.MaxValue;                \r\n});\r\n\r\nipWebhostBuilder.UseKestrel(opts =>\r\n{\r\n    opts.... whatever.\r\n\r\n    var isV6 = false; // true, false, who cares\r\n    opts.Listen(isV6 ? IPAddress.IPv6Any : IPAddress.Any, 0, listenOpts =>\r\n    {   \r\n\t\tlistenOpts.Use(async (newConnectionContext, middlewareNextDelegate) =>\r\n\t\t{   \r\n\t\t\r\n\t\t\tvar connectionFeature = newConnectionContext.Features.Get<IHttpConnectionFeature>();\r\n\r\n\t\t\tvar upstreamEndpoint = new IPEndPoint(connectionFeature.RemoteIpAddress, connectionFeature.RemotePort);\r\n\t\t\tvar downstreamEndpoint = new IPEndPoint(connectionFeature.LocalIpAddress, connectionFeature.LocalPort);\r\n\t\t\t\r\n\t\t\t// Ports are wrong ONLY on the remote upstream remote port. Aka I have no way of identifying which port\r\n\t\t\t// the client connected to.\r\n\t\t});\r\n\t\t\r\n    });          \r\n}\r\n```\r\n4. See error\r\n\r\n### Expected behavior\r\nWe should be able to tell what port the client is connected on.\r\n\r\nI'll work on a complete, independent example because I can't just paste my whole source here.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7896","RelatedDescription":"Closed issue \"IP Endpoint information for a new connection in custom middleware is incorrect\" (#7896)"},{"Id":"413710849","IsPullRequest":false,"CreatedAt":"2019-02-23T16:18:21","Actor":"benaadams","Number":"7895","RawContent":null,"Title":"[CI] SignalR LongPollingTransport HubConnectionTests.CanStartConnectionFromClose","State":"open","Body":"AspNetCore-ci (Test: Ubuntu 16.04 x64)\r\n\r\nMicrosoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CanStartConnectionFromClose\r\n```\r\nSystem.Exception : 3 error(s) logged.\r\nMicrosoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport - LongPollingTerminated - UFGNbt8Lv_wrJYlcpw_fmg - Long Polling transport was terminated due to an error on connection.\r\n===================\r\nSystem.InvalidOperationException: Reading is not allowed after reader was completed.\r\nat System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_NoReadingAllowed()\r\nat System.IO.Pipelines.Pipe.ReadAsync(CancellationToken token)\r\nat System.IO.Pipelines.Pipe.DefaultPipeReader.ReadAsync(CancellationToken cancellationToken)\r\nat Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport.ProcessRequestAsync(HttpContext context, CancellationToken token) in /_/src/SignalR/common/Http.Connections/src/Internal/Transports/LongPollingTransport.cs:line 97\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.WaitOnTasks(Task applicationTask, Task transportTask, Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionContext.cs:line 310\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.DisposeAsync(Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionContext.cs:line 223\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager.DisposeAndRemoveAsync(HttpConnectionContext connection, Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionManager.cs:line 225\r\n===================\r\nMicrosoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager - FailedDispose - Failed disposing connection UFGNbt8Lv_wrJYlcpw_fmg.\r\n===================\r\nSystem.InvalidOperationException: Reading is not allowed after reader was completed.\r\nat System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_NoReadingAllowed()\r\nat System.IO.Pipelines.Pipe.ReadAsync(CancellationToken token)\r\nat System.IO.Pipelines.Pipe.DefaultPipeReader.ReadAsync(CancellationToken cancellationToken)\r\nat Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport.ProcessRequestAsync(HttpContext context, CancellationToken token) in /_/src/SignalR/common/Http.Connections/src/Internal/Transports/LongPollingTransport.cs:line 97\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.WaitOnTasks(Task applicationTask, Task transportTask, Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionContext.cs:line 310\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.DisposeAsync(Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionContext.cs:line 223\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager.DisposeAndRemoveAsync(HttpConnectionContext connection, Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionManager.cs:line 225\r\n===================\r\nMicrosoft.AspNetCore.Server.Kestrel - ApplicationError - Connection id \"0HLKPIQJ29LV8\", Request id \"0HLKPIQJ29LV8:00000005\": An unhandled exception was thrown by the application.\r\n===================\r\nSystem.InvalidOperationException: Reading is not allowed after reader was completed.\r\nat System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_NoReadingAllowed()\r\nat System.IO.Pipelines.Pipe.ReadAsync(CancellationToken token)\r\nat System.IO.Pipelines.Pipe.DefaultPipeReader.ReadAsync(CancellationToken cancellationToken)\r\nat Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport.ProcessRequestAsync(HttpContext context, CancellationToken token) in /_/src/SignalR/common/Http.Connections/src/Internal/Transports/LongPollingTransport.cs:line 97\r\nat Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionContext.WaitOnTasks(Task applicationTask, Task transportTask, Boolean closeGracefully) in /_/src/SignalR/common/Http.Connections/src/Internal/Http\r\n\r\nStack trace\r\n   at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose() in /home/vsts/work/1/s/src/SignalR/common/testassets/Tests.Utils/VerifyNoErrorsScope.cs:line 61\r\n   at Microsoft.AspNetCore.SignalR.Tests.FunctionalTestBase.MultiDisposable.Dispose() in /home/vsts/work/1/s/src/SignalR/common/testassets/Tests.Utils/FunctionalTestBase.cs:line 59\r\n   at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CanStartConnectionFromClosedEvent(String protocolName, HttpTransportType transportType, String path) in /_/src/SignalR/clients/csharp/Client/test/FunctionalTests/HubConnectionTests.cs:line 219\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nSeen in https://github.com/aspnet/AspNetCore/pull/7894\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7895","RelatedDescription":"Open issue \"[CI] SignalR LongPollingTransport HubConnectionTests.CanStartConnectionFromClose\" (#7895)"},{"Id":"413694894","IsPullRequest":true,"CreatedAt":"2019-02-23T13:16:38","Actor":"dotnet-maestro[bot]","Number":"7894","RawContent":null,"Title":"[master] Update dependencies from  5 repositories","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/aspnet/AspNetCore-Tooling\r\n\r\n- Microsoft.AspNetCore.Mvc.Razor.Extensions - 3.0.0-preview4.19123.1\r\n- Microsoft.NET.Sdk.Razor - 3.0.0-preview4.19123.1\r\n- Microsoft.CodeAnalysis.Razor - 3.0.0-preview4.19123.1\r\n- Microsoft.AspNetCore.Razor.Language - 3.0.0-preview4.19123.1\r\n\r\nUpdates from https://github.com/aspnet/AspNetCore-Tooling\r\n\r\n- Microsoft.AspNetCore.Mvc.Razor.Extensions - 3.0.0-preview4.19123.2\r\n- Microsoft.NET.Sdk.Razor - 3.0.0-preview4.19123.2\r\n- Microsoft.CodeAnalysis.Razor - 3.0.0-preview4.19123.2\r\n- Microsoft.AspNetCore.Razor.Language - 3.0.0-preview4.19123.2\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.ComponentModel.Annotations - 4.6.0-preview4.19123.2\r\n- Microsoft.Bcl.Json.Sources - 4.6.0-preview4.19123.2\r\n- Microsoft.CSharp - 4.6.0-preview4.19123.2\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19123.2\r\n- Microsoft.Win32.Registry - 4.6.0-preview4.19123.2\r\n- System.Reflection.Metadata - 1.7.0-preview4.19123.2\r\n- System.Runtime.CompilerServices.Unsafe - 4.6.0-preview4.19123.2\r\n- System.Security.Cryptography.Cng - 4.6.0-preview4.19123.2\r\n- System.Security.Cryptography.Pkcs - 4.6.0-preview4.19123.2\r\n- System.Security.Cryptography.Xml - 4.6.0-preview4.19123.2\r\n- System.Security.Permissions - 4.6.0-preview4.19123.2\r\n- System.Security.Principal.Windows - 4.6.0-preview4.19123.2\r\n- System.ServiceProcess.ServiceController - 4.6.0-preview4.19123.2\r\n- System.Text.Encodings.Web - 4.6.0-preview4.19123.2\r\n- System.Threading.Channels - 4.6.0-preview4.19123.2\r\n- System.Data.SqlClient - 4.7.0-preview4.19123.2\r\n- System.Diagnostics.EventLog - 4.6.0-preview4.19123.2\r\n- System.IO.Pipelines - 4.6.0-preview4.19123.2\r\n- System.Net.Http.WinHttpHandler - 4.6.0-preview4.19123.2\r\n- System.Net.WebSockets.WebSocketProtocol - 4.6.0-preview4.19123.2\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.DotNet.PlatformAbstractions - 3.0.0-preview4-27423-3\r\n- Microsoft.Extensions.DependencyModel - 3.0.0-preview4-27423-3\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27423-3\r\n\r\nUpdates from https://github.com/aspnet/EntityFrameworkCore\r\n\r\n- dotnet-ef - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore.Tools - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore.InMemory - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore.Relational - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore.Sqlite - 3.0.0-preview4.19123.5\r\n- Microsoft.EntityFrameworkCore.SqlServer - 3.0.0-preview4.19123.5\r\n\r\nUpdates from https://github.com/aspnet/Extensions\r\n\r\n- Internal.AspNetCore.Analyzers - 3.0.0-preview4.19122.13\r\n- Microsoft.JSInterop - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.FileProviders.Composite - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.FileProviders.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Diagnostics.HealthChecks - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.DiagnosticAdapter - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.DependencyInjection.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.DependencyInjection - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.Xml - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.UserSecrets - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.KeyPerFile - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.Json - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.Ini - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.FileExtensions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.FileProviders.Embedded - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.EnvironmentVariables - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.Binder - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.AzureKeyVault - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.CommandLineUtils.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Caching.StackExchangeRedis - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Caching.SqlServer - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Caching.Memory - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Caching.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.ActivatorUtilities.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.AspNetCore.Testing - 3.0.0-preview4.19122.13\r\n- Microsoft.AspNetCore.BenchmarkRunner.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.AspNetCore.Analyzer.Testing - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Configuration.CommandLine - 3.0.0-preview4.19122.13\r\n- Mono.WebAssembly.Interop - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.FileProviders.Physical - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.HashCodeCombiner.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.WebEncoders - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.ValueStopwatch.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.TypeNameHelper.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Primitives - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.ParameterDefaultValue.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Options.DataAnnotations - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Options.ConfigurationExtensions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Options - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.ObjectPool - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.TraceSource - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.Testing - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.EventSource - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.FileSystemGlobbing - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.Console - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.Configuration - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.AzureAppServices - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Localization.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Localization - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Http - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Hosting.Abstractions - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Hosting - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.HostFactoryResolver.Sources - 3.0.0-preview4.19122.13\r\n- Microsoft.Extensions.Logging.Debug - 3.0.0-preview4.19122.13\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7894","RelatedDescription":"Open PR \"[master] Update dependencies from  5 repositories\" (#7894)"},{"Id":"413684113","IsPullRequest":false,"CreatedAt":"2019-02-23T10:58:58","Actor":"BBGONE","Number":"7893","RawContent":null,"Title":"The MVC URL generation with nonexisting controller or action is not working","State":"open","Body":"### Describe the bug\r\nThe MVC URL generation with nonexisting controller or action stopped working in ASP.NET Core 2.2\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.2\r\n2. Run this code\r\n\r\nIn any HTML page with the Razor try to get the URLs for these routes\r\n\r\n ```\r\n var existing_action_url = '@Url.Action(\"ExistingAction\", \"ExistingController\")';\r\n var nonexisting_action_url = '@Url.Action(\"NonExistingAction\", \"NonExistingController\")';\r\n```\r\n4. See error\r\n\r\nThe existing_action_url  will be normally formed as expected\r\nbut the nonexisting_action_url  will be empty.\r\n\r\n### Expected behavior\r\n\r\nExpected to create the URL for  the nonexisting_action_url\r\n\r\n### Additional context\r\nIn previous version ASP.NET core 2.1 the mapping worked, but after upgrading to ASP.NET Core 2.2.0\r\nthe mapping stopped working.\r\nI used it to get the URL to a SignalR hub, which is without controller","Url":"https://github.com/aspnet/AspNetCore/issues/7893","RelatedDescription":"Open issue \"The MVC URL generation with nonexisting controller or action is not working\" (#7893)"},{"Id":"413683137","IsPullRequest":false,"CreatedAt":"2019-02-23T10:47:42","Actor":"Slupov","Number":"7892","RawContent":null,"Title":"ASP .NET MVC Core 2.2 - ViewComponent's Invoke() oddly genarates an InvalidOperationException after upgrading from Core 2.0","State":"open","Body":"### Describe the bug\r\nI am develeping an online store where I've got a ViewComponent that is used to render a shopping cart html in the website's navigation bar.\r\n\r\nI render the view component in the shared _Layout.cshtml by doing this:\r\n\r\n`@await Component.InvokeAsync(\"NavbarShoppingCart\")`\r\n\r\nIt used to work fine under MVC Core 2.0 but since I upgraded to 2.2 the same code throws an InvalidOperationException:\r\n\r\n> InvalidOperationException: Method 'Invoke' of view component 'ProjectName.Web.Views.Shared.NavbarShoppingCartViewComponent ' cannot return a Task.\r\n\r\nHere is the ViewComponent class:\r\n\r\n```\r\npublic class NavbarShoppingCartViewComponent : ViewComponent\r\n    {\r\n        private readonly IShoppingCartManager shoppingCartManager;\r\n\r\n        public NavbarShoppingCartViewComponent(IShoppingCartManager shoppingCartManager)\r\n        {\r\n            this.shoppingCartManager = shoppingCartManager;\r\n        }\r\n\r\n        public IViewComponentResult Invoke()\r\n        {\r\n            var shoppingCartId = this.HttpContext.Session.GetShoppingCartId();\r\n            var items = this.shoppingCartManager.GetCartItems(shoppingCartId);\r\n\r\n            return View(\"NavbarShoppingCart\", items.Count());\r\n        }\r\n    }\r\n```\r\nThe Invoke() method clearly returns a View, not a Task. I don't get it why this throws an error now.\r\nI have not changed any code, only upgraded the .net core version from 2.0 to 2.2. Any ideas for the source of the problem?\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Upgrade from Core 2.0 to 2.2\r\n\r\n### Additional context\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n![68c7b419ec7a3d19b319f58febcc9c81](https://user-images.githubusercontent.com/15180413/53285446-2c8c5980-3769-11e9-8322-c305414be648.png)\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7892","RelatedDescription":"Open issue \"ASP .NET MVC Core 2.2 - ViewComponent's Invoke() oddly genarates an InvalidOperationException after upgrading from Core 2.0\" (#7892)"},{"Id":"413682763","IsPullRequest":false,"CreatedAt":"2019-02-23T10:42:43","Actor":"hzicong","Number":"7891","RawContent":null,"Title":"in 2.2.1 OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.","State":"open","Body":"```\r\nSystem.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions.GetTypeRefWithAttributes(TypeSymbol type, CSharpCompilation declaringCompilation, ITypeReference typeRef)\r\n   at Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol.Microsoft.Cci.ITypeDefinition.Interfaces(EmitContext context)+MoveNext()\r\n   at Microsoft.Cci.ReferenceIndexerBase.VisitTypeReferencesThatNeedTokens(IEnumerable`1 refsWithAttributes)\r\n   at Microsoft.Cci.ReferenceIndexerBase.VisitTypeDefinitionNoMembers(ITypeDefinition typeDefinition)\r\n   at Microsoft.Cci.ReferenceIndexerBase.Visit(ITypeDefinition typeDefinition)\r\n   at Microsoft.Cci.MetadataVisitor.VisitNestedTypes(IEnumerable`1 nestedTypes)\r\n   at Microsoft.Cci.ReferenceIndexerBase.Visit(ITypeDefinition typeDefinition)\r\n   at Microsoft.Cci.MetadataVisitor.Visit(IEnumerable`1 types)\r\n   at Microsoft.Cci.ReferenceIndexer.Visit(CommonPEModuleBuilder module)\r\n   at Microsoft.Cci.MetadataWriter.CreateIndices()\r\n   at Microsoft.Cci.MetadataWriter.BuildMetadataAndIL(PdbWriter nativePdbWriterOpt, BlobBuilder ilBuilder, BlobBuilder mappedFieldDataBuilder, BlobBuilder managedResourceDataBuilder, Blob& mvidFixup, Blob& mvidStringFixup)\r\n   at Microsoft.Cci.PeWriter.WritePeToStream(EmitContext context, CommonMessageProvider messageProvider, Func`1 getPeStream, Func`1 getPortablePdbStreamOpt, PdbWriter nativePdbWriterOpt, String pdbPathOpt, Boolean metadataOnly, Boolean isDeterministic, Boolean emitTestCoverageData, Nullable`1 privateKeyOpt, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Compilation.SerializePeToStream(CommonPEModuleBuilder moduleBeingBuilt, DiagnosticBag metadataDiagnostics, CommonMessageProvider messageProvider, Func`1 getPeStream, Func`1 getMetadataPeStreamOpt, Func`1 getPortablePdbStreamOpt, PdbWriter nativePdbWriterOpt, String pdbPathOpt, Boolean metadataOnly, Boolean includePrivateMembers, Boolean isDeterministic, Boolean emitTestCoverageData, Nullable`1 privateKeyOpt, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Compilation.SerializeToPeStream(CommonPEModuleBuilder moduleBeingBuilt, EmitStreamProvider peStreamProvider, EmitStreamProvider metadataPEStreamProvider, EmitStreamProvider pdbStreamProvider, Func`2 testSymWriterFactory, DiagnosticBag diagnostics, Boolean metadataOnly, Boolean includePrivateMembers, Boolean emitTestCoverageData, String pePdbFilePath, Nullable`1 privateKeyOpt, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Compilation.Emit(Stream peStream, Stream metadataPEStream, Stream pdbStream, Stream xmlDocumentationStream, Stream win32Resources, IEnumerable`1 manifestResources, EmitOptions options, IMethodSymbol debugEntryPoint, Stream sourceLinkStream, IEnumerable`1 embeddedTexts, CompilationTestData testData, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Compilation.Emit(Stream peStream, Stream pdbStream, Stream xmlDocumentationStream, Stream win32Resources, IEnumerable`1 manifestResources, EmitOptions options, IMethodSymbol debugEntryPoint, Stream sourceLinkStream, IEnumerable`1 embeddedTexts, Stream metadataPEStream, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String generatedCode)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/7891","RelatedDescription":"Open issue \"in 2.2.1 OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\" (#7891)"},{"Id":"413663879","IsPullRequest":false,"CreatedAt":"2019-02-23T06:28:39","Actor":"HaniehRezayi","Number":"7889","RawContent":null,"Title":"ًWhat if i used both Authorized[policy] and Authorized[role] above my controller?","State":"open","Body":"I used  both Authorized[policy] and Authorized[role] above my controller, i want to know AND statement is happens (between Authorized[policy] and Authorized[Role]) or OR statement.\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7889","RelatedDescription":"Open issue \"ًWhat if i used both Authorized[policy] and Authorized[role] above my controller?\" (#7889)"},{"Id":"413646633","IsPullRequest":true,"CreatedAt":"2019-02-23T02:45:47","Actor":"benaadams","Number":"7887","RawContent":null,"Title":"Elide bounds check for MethodToString","State":"open","Body":"Use array length for check\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/7887","RelatedDescription":"Open PR \"Elide bounds check for MethodToString\" (#7887)"},{"Id":"413633623","IsPullRequest":true,"CreatedAt":"2019-02-23T02:15:13","Actor":"pakrym","Number":"7883","RawContent":null,"Title":"Fix generated code","State":"closed","Body":"Make Code check happy","Url":"https://github.com/aspnet/AspNetCore/pull/7883","RelatedDescription":"Closed or merged PR \"Fix generated code\" (#7883)"},{"Id":"413642700","IsPullRequest":false,"CreatedAt":"2019-02-23T02:08:38","Actor":"sebastienros","Number":"7886","RawContent":null,"Title":"Micro benchmarks don't run anymore","State":"open","Body":"Tested in Mvc:\r\n\r\n`dotnet run -c Release`\r\n\r\nOutput \r\n\r\n```\r\n// Benchmark: NullHtmlEncoderBenchmark.HtmlEncoder: Job-AZLCFO(Runtime=Core, Server=True, Toolchain=.NET Core 3.0, RunStrategy=Throughput)\r\n// *** Execute ***\r\n// Launch: 1 / 1\r\nDid not find f2a5f6e2-9cd2-443e-88ab-37933ea00601.dll in C:\\Users\\sebros\\Documents\\Projects\\aspnet\\AspNetCore\\src\\mvc\\benchmarks\\Microsoft.AspNetCore.Mvc.Performance\\n\\Release\\netcoreapp3.0, but the folder contained:\r\nf2a5f6e2-9cd2-443e-88ab-37933ea00601.exe.config\r\nExecutable C:\\Users\\sebros\\Documents\\Projects\\aspnet\\AspNetCore\\src\\mvc\\benchmarks\\Microsoft.AspNetCore.Mvc.Performance\\bin\\release\\netcoreapp3.0\\f2a5f6e2-9cd2-443e-8b-37933ea00601.exe not found\r\nExitCode != 0\r\nNo more Benchmark runs will be launched as NO measurements were obtained from the previous run!\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/7886","RelatedDescription":"Open issue \"Micro benchmarks don't run anymore\" (#7886)"},{"Id":"413635663","IsPullRequest":false,"CreatedAt":"2019-02-23T01:07:31","Actor":"XzaR90","Number":"7885","RawContent":null,"Title":"LoginWith2faModel to LoginWith2FaModel","State":"open","Body":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nWarning\tS101\tRename class 'LoginWith2faModel' to match camel case naming rules, consider using 'LoginWith2FaModel'.\t...Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml.cs\t16\tActive\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/7885","RelatedDescription":"Open issue \"LoginWith2faModel to LoginWith2FaModel\" (#7885)"},{"Id":"413612111","IsPullRequest":false,"CreatedAt":"2019-02-23T00:49:09","Actor":"stil","Number":"7880","RawContent":null,"Title":"TagHelper not recognized until recompilation","State":"closed","Body":"### Describe the bug\r\nTag helper is not processed unless I edit cshtml and make a page refresh.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core v2.2.0, VS 2019 Preview 3\r\n2. Create empty ASP.NET Core solution.\r\n3. Add tag helper\r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.Razor.TagHelpers;\r\n\r\nnamespace WebApplication1.TagHelpers\r\n{\r\n    public class ExampleTagHelper : TagHelper\r\n    {\r\n        public override void Process(TagHelperContext context, TagHelperOutput output)\r\n        {\r\n            output.TagName = \"input\";\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAdd to ViewImports\r\n\r\n```cshtml\r\n@using WebApplication1\r\n@using WebApplication1.Models\r\n@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers\r\n@addTagHelper *, WebApplication1\r\n```\r\n\r\nAdd to `Home/Index.cshtml`\r\n\r\n```cshtml\r\n@{\r\n    ViewData[\"Title\"] = \"Home Page\";\r\n}\r\n\r\n<div class=\"text-center\">\r\n    <h1 class=\"display-4\">Welcome</h1>\r\n    <p>Learn about <a href=\"https://docs.microsoft.com/aspnet/core\">building Web apps with ASP.NET Core</a>.</p>\r\n</div>\r\n\r\n<example></example> \r\n```\r\n\r\n### Expected behavior\r\nTag helper should become an input tag. Instead it is unchanged unless I edit cshtml code, for example adding a space, save it and do a page refresh.\r\n\r\n### Screenshots\r\n![taghelpers](https://user-images.githubusercontent.com/714004/53275932-560f9b80-36fd-11e9-857c-1b5969a36a05.gif)","Url":"https://github.com/aspnet/AspNetCore/issues/7880","RelatedDescription":"Closed issue \"TagHelper not recognized until recompilation\" (#7880)"},{"Id":"413600468","IsPullRequest":true,"CreatedAt":"2019-02-23T00:04:43","Actor":"BrennanConroy","Number":"7879","RawContent":null,"Title":"Skip RunsWithIterationEnvVariable","State":"closed","Body":"@muratg ","Url":"https://github.com/aspnet/AspNetCore/pull/7879","RelatedDescription":"Closed or merged PR \"Skip RunsWithIterationEnvVariable\" (#7879)"},{"Id":"413622584","IsPullRequest":false,"CreatedAt":"2019-02-22T23:48:39","Actor":"natemcmaster","Number":"7882","RawContent":null,"Title":"Branch-merge bot does not work on aspnetcore-tooling due to files that exceed MAX_PATH ","State":"open","Body":"The bot that merges release/* branches back to master does not work on https://github.com/aspnet/AspNetCore-Tooling because this repo contains files which exceed MAX_PATH.\r\n```\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_EventCallback_SpecifiesValueAndExpression_Generic/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_EventCallback_SpecifiesValue_WithMatchingProperties/TestComponent.codegen.cs: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_EventCallback_SpecifiesValue_WithMatchingProperties/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithMatchingProperties/TestComponent.codegen.cs: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithMatchingProperties/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithoutMatchingProperties/TestComponent.codegen.cs: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithoutMatchingProperties/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/ChildComponent_WithGenericChildContent_SetsParameterNameOnComponent/TestComponent.codegen.cs: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/ChildComponent_WithGenericChildContent_SetsParameterNameOnComponent/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentDesignTimeCodeGenerationTest/EventHandler_OnElement_ArbitraryEventName_WithEventArgsMethodGroup/TestComponent.mappings.txt: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentRuntimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithoutMatchingProperties/TestComponent.codegen.cs: Filename too long\r\nerror: unable to create file src/Razor/test/Microsoft.AspNetCore.Razor.Language.Test/TestFiles/IntegrationTests/ComponentRuntimeCodeGenerationTest/BindToComponent_SpecifiesValueAndChangeEvent_WithoutMatchingProperties/TestComponent.mappings.txt: Filename too long\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=104473\r\n\r\ncc @dougbu @rynowak ","Url":"https://github.com/aspnet/AspNetCore/issues/7882","RelatedDescription":"Open issue \"Branch-merge bot does not work on aspnetcore-tooling due to files that exceed MAX_PATH \" (#7882)"},{"Id":"413614694","IsPullRequest":true,"CreatedAt":"2019-02-22T23:10:18","Actor":"ryanbrandenburg","Number":"7881","RawContent":null,"Title":"Add retries to CDN downloads","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/7881","RelatedDescription":"Open PR \"Add retries to CDN downloads\" (#7881)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"Rightio-Limited","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"Andrew-MSFT","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"},{"Id":"249781859","IsPullRequest":true,"CreatedAt":"2017-08-14T15:57:44","Actor":"balachir","Number":"1055","RawContent":null,"Title":"Update known-issues-vs2017.md for VS 15.3 RTW","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1055","RelatedDescription":"Closed or merged PR \"Update known-issues-vs2017.md for VS 15.3 RTW\" (#1055)"},{"Id":"247941709","IsPullRequest":false,"CreatedAt":"2017-08-05T03:07:41","Actor":"snebjorn","Number":"1054","RawContent":null,"Title":"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime","State":"closed","Body":"Hi, I'm curious about how you made Browser Link inject a custom script into the page body at runtime.\r\nI have to do something similar (ritterim/stuntman#158) so wondering if you've willing to share the implementation :)\r\n\r\nI also made a [stackoverflow post](https://stackoverflow.com/questions/45501245/programmatically-inject-custom-script-into-page-body-at-runtime-like-browser-l)\r\n\r\nThanks","Url":"https://github.com/aspnet/Tooling/issues/1054","RelatedDescription":"Closed issue \"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime\" (#1054)"},{"Id":"247229183","IsPullRequest":false,"CreatedAt":"2017-08-02T06:18:35","Actor":"halter73","Number":"1053","RawContent":null,"Title":"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly","State":"closed","Body":"Given the launchSettings.json and Program.cs below, it seems that the ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly when launching both the \"IIS Express\" or \"WebApplication1\" profiles from VS 2017 26730.0.d15rel and dotnet sdk 2.0.0-preview3-006889.\r\n\r\n\r\n#### Expected output for \"IIS Express\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"IIS Express\" profile launched from VS (App Insights is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration'\r\n```\r\n\r\n#### Expected output for \"WebApplication1\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched from VS (HostingStartup1 is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched using \"dotnet run\" (Behaves as expected)\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1'\r\n```\r\n\r\n#### launchSettings.json\r\n```json\r\n{\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:61008/\",\r\n      \"sslPort\": 0\r\n    }\r\n  },\r\n  \"profiles\": {\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      }\r\n    },\r\n    \"WebApplication1\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      },\r\n      \"applicationUrl\": \"http://localhost:61010/\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Program.cs\r\n```C#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing System;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args)\r\n        {\r\n            Console.WriteLine(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: '{0}'\", Environment.GetEnvironmentVariable(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\"));\r\n\r\n            return WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1053","RelatedDescription":"Closed issue \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly\" (#1053)"},{"Id":"245422589","IsPullRequest":false,"CreatedAt":"2017-07-28T17:44:59","Actor":"varora1406","Number":"1052","RawContent":null,"Title":"Add-Migration command not working.","State":"closed","Body":"IDE : visual studio 15.3 preview 5.0\r\n.net core 2.0\r\nProject : .Net core web application (Angular template) including (Angular v4)\r\n\r\nSteps to reproduce:\r\n* Create a new project and all required nuget packages.\r\n![image](https://user-images.githubusercontent.com/24986539/28577409-559354a8-7174-11e7-9dfb-26cc7efc1228.png)\r\n\r\n* Try to use Add-Migration command. (Don't worry, context classes and rest have been done)\r\n- Result : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\n![image](https://user-images.githubusercontent.com/24986539/28577463-81e914c0-7174-11e7-97eb-5cd2a5fb3e28.png)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1052","RelatedDescription":"Closed issue \"Add-Migration command not working.\" (#1052)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"412597806","IsPullRequest":false,"CreatedAt":"2019-02-20T19:47:08","Actor":"ryanbrandenburg","Number":"346","RawContent":null,"Title":"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed","State":"open","Body":"The [ResourceManagerWithCultureStringLocalizer](https://github.com/aspnet/Localization/blob/43b974482c7b703c92085c6f68b3b23d8fe32720/src/Microsoft.Extensions.Localization/ResourceManagerWithCultureStringLocalizer.cs#L18) class and [WithCulture](https://github.com/aspnet/Localization/blob/master/src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizer.cs#L154-L170) interface member are often sources of confusion for users of Localization, especially if they want to create their own `IStringLocalizer` implementation. These items give the user the impression that we expect an `IStringLocalizer` instance to be \"per-language, per-resource\", when actually they should only be \"per-resource\", with the language searched for determined by the `CultureInfo.CurrentUICulture` at execution time. To remove this source of confusion and to avoid APIs which we don't want users to use we will be obsoleting these in 3.0.0-preview3, and they will be removed in a future release (4.0 or above). \r\n\r\nFor context, see [here](https://github.com/aspnet/AspNetCore/issues/3324).\r\n\r\nSee aspnet/AspNetCore#7756 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/346","RelatedDescription":"Open issue \"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed\" (#346)"},{"Id":"412572457","IsPullRequest":false,"CreatedAt":"2019-02-20T18:43:44","Actor":"natemcmaster","Number":"345","RawContent":null,"Title":"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019","State":"open","Body":"We are updating the master branch of the following repos to require Visual Studio 2019. \r\n\r\n* aspnet/AspNetCore\r\n* aspnet/AspNetCore-Tooling\r\n* aspnet/EntityFrameworkCore\r\n* aspnet/Extensions\r\n\r\nThe .NET Core 3.0 SDK requires MSBuild 16, which is currently only supported by Visual Studio 2019. VS 2019 will be [released on April 2](https://devblogs.microsoft.com/visualstudio/join-us-april-2nd-for-the-launch-of-visual-studio-2019/).  In the meantime, you can get VS 2019 Preview 3 here: https://visualstudio.microsoft.com/vs/preview/. \r\n\r\nIf you are working on the aspnet/AspNetCore repo, you can run [this script](https://github.com/aspnet/AspNetCore/blob/master/eng/scripts/InstallVisualStudio.ps1) to install or modify your current VS2019 installation to add features required by this repo.\r\n\r\n-------\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/7752 for discussion on this announcement.","Url":"https://github.com/aspnet/Announcements/issues/345","RelatedDescription":"Open issue \"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019\" (#345)"},{"Id":"412530214","IsPullRequest":false,"CreatedAt":"2019-02-20T16:58:53","Actor":"Tratcher","Number":"344","RawContent":null,"Title":"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced","State":"open","Body":"When Microsoft.Extensions.Hosting was introduced in 2.1 some types like IHostingEnvironment and IApplicationLifetime were copied from Microsoft.AspNetCore.Hosting. Some 3.0 changes cause apps to include both the Microsoft.Extensions.Hosting and Microsoft.AspNetCore.Hosting namespaces. Any use of those duplicate types causes an \"ambiguous reference\" compiler error when both namespaces are referenced.\r\n\r\nThis error has been addressed in 3.0.0-preview3 by marking the following types obsolete and replacing them with new types. There have not been any behavioral changes made for the new types, only naming.\r\n\r\nObsolete types (warning):\r\nMicrosoft.Extensions.Hosting.IHostingEnvironment\r\nMicrosoft.AspNetCore.Hosting.IHostingEnvironment\r\nMicrosoft.Extensions.Hosting.IApplicationLifetime\r\nMicrosoft.AspNetCore.Hosting.IApplicationLifetime\r\n\r\nNew types:\r\nMicrosoft.Extensions.Hosting.IHostEnvironment\r\nMicrosoft.AspNetCore.Hosting.IWebHostEnvironment : IHostEnvironment\r\nMicrosoft.Extensions.Hosting.IHostApplicationLifetime\r\n\r\nNote the new IHostEnvironment IsDevelopment, IsProduction, etc. extension methods are in the Microsoft.Extensions.Hosting namespace which may need to be added to your app.\r\n\r\nFor 3.0 both the old and new types will be available from HostBulder's and WebHostBuilder's dependency injection containers. The old types will be removed in 4.0.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7749 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/344","RelatedDescription":"Open issue \"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced\" (#344)"},{"Id":"411004828","IsPullRequest":false,"CreatedAt":"2019-02-16T00:53:18","Actor":"pranavkm","Number":"343","RawContent":null,"Title":"Breaking changes to runtime compilation for Razor views and Razor Pages","State":"open","Body":"As a consequence of cleaning up the ASP.NET Core shared framework to not depend on Roslyn, support for runtime compilation of Razor views and Razor Pages is being moved to a separate package.\r\nApplications that require runtime compilation or re-compilation of Razor files should \r\n    \r\n* Add a reference to the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package\r\n* Update the application's `ConfigureServices` to include a call to `AddMvcRazorRuntimeCompilation`:\r\n\r\n```C#\r\nservices.AddMvc()\r\n    .AddMvcRazorRuntimeCompilation();\r\n```\r\n\r\nThe following APIs previously available on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions` to support runtime compilation would now be available via \r\n `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.MvcRazorRuntimeCompilationOptions`:\r\n\r\n* `RazorViewEngineOptions.FileProviders` -> `MvcRazorRuntimeCompilationOptions.FileProviders`\r\n* `RazorViewEngineOptions.AdditionalCompilationReferences` -> `MvcRazorRuntimeCompilationOptions.AdditionalReferencePaths`\r\n\r\nIn addition, `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AllowRecompilingViewsOnFileChange` has been removed. Recompilation on file changes is enabled by default by referencing the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package.\r\n\r\nRelated issues: https://github.com/aspnet/Announcements/issues/312, https://github.com/aspnet/Announcements/issues/325\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/7647 for further discussions or questions.\r\n","Url":"https://github.com/aspnet/Announcements/issues/343","RelatedDescription":"Open issue \"Breaking changes to runtime compilation for Razor views and Razor Pages\" (#343)"},{"Id":"411000034","IsPullRequest":false,"CreatedAt":"2019-02-16T00:23:50","Actor":"Tratcher","Number":"342","RawContent":null,"Title":"AllowSynchronousIO disabled in all servers","State":"open","Body":"AllowSynchronousIO is a option in each server that enables or disables sync IO APIs like HttpReqeuest.Body.Read, HttpResponse.Body.Write, Stream.Flush, etc.. These APIs have long been a source of thread starvation and application hangs. Starting in 3.0.0-preview3 these are disabled by default.\r\n\r\nAffected servers:\r\n- Kestrel\r\n- HttpSys\r\n- IIS in-process\r\n- TestServer\r\n\r\nExpect errors similar to:\r\n- `Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call FlushAsync or set AllowSynchronousIO to true instead.`\r\n\r\nEach server has a AllowSynchronousIO option that controls this behavior and the default for all of them is now false.\r\n\r\nThe behavior can also be overridden on a per request basis as a temporary mitigation. \r\n```c#\r\nvar syncIOFeature = HttpContext.Features.Get<IHttpBodyControlFeature>();\r\nif (syncIOFeature != null)\r\n{\r\n    syncIOFeature.AllowSynchronousIO = true;\r\n}\r\n```\r\n\r\nIf you have trouble with TextWriters or other streams calling sync APIs in Dispose, call the new DisposeAsync API instead.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7644 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/342","RelatedDescription":"Open issue \"AllowSynchronousIO disabled in all servers\" (#342)"},{"Id":"407002748","IsPullRequest":false,"CreatedAt":"2019-02-05T22:28:19","Actor":"Tratcher","Number":"341","RawContent":null,"Title":"Newtonsoft.Json types replaced in Microsoft.AspNetCore.Authentication APIs","State":"open","Body":"As part of the ongoing effort to [remove](https://github.com/aspnet/AspNetCore/issues/4260) Newtonsoft.Json from the shared framework these types have now been replaced on the Authentication APIs.\r\n\r\n**Basic usage of these Authentication packages should be unaffected.** Only users who have derived from the OAuth package or that had implemented advanced claim manipulation should be affected. A detailed list of affected APIs is given below.\r\n\r\nAffected packages:\r\n* Microsoft.AspNetCore.Authentication.OAuth\r\n* Microsoft.AspNetCore.Authentication.OpenIdConnect\r\n* Microsoft.AspNetCore.Authentication.Facebook\r\n* Microsoft.AspNetCore.Authentication.Google\r\n* Microsoft.AspNetCore.Authentication.Twitter\r\n* Microsoft.AspNetCore.Authentication.MicrosoftAccount\r\n\r\nAlso, all derived implementations of OAuth such as those from [aspnet-contrib](https://github.com/aspnet-contrib/AspNet.Security.OAuth.Providers).\r\n\r\nFor derived OAuth implementations the most common change is to replace JObject.Parse with JsonDocument.Parse in the CreateTicketAsync override as shown [here](https://github.com/aspnet/AspNetCore/pull/7105/files?utf8=%E2%9C%93&diff=unified&w=1#diff-e1c9f9740a6fe8021020a6f249c589b0L40). Note JsonDocument is IDisposable.\r\n\r\nAffected APIs:\r\n* `ClaimAction.Run(JObject userData, ClaimsIdentity identity, string issuer)` becomes `ClaimAction.Run(JsonElement userData, ClaimsIdentity identity, string issuer)`. All derived implementations of ClaimAction are similarly affected.\r\n* `MapCustomJson(this ClaimActionCollection collection, string claimType, Func<JObject, string> resolver)` becomes `MapCustomJson(this ClaimActionCollection collection, string claimType, Func<JsonElement, string> resolver)`\r\n* `MapCustomJson(this ClaimActionCollection collection, string claimType, string valueType, Func<JObject, string> resolver)` becomes `MapCustomJson(this ClaimActionCollection collection, string claimType, string valueType, Func<JsonElement, string> resolver)`\r\n* OAuthCreatingTicketContext has had one old constructor removed and the other replaced JObject with JsonElement. The User property and RunClaimActions method have been updated to match.\r\n* OAuthTokenResponse.Success now takes a JsonDocument instead of JObject. The Response property has been updated to match. OAuthTokenResponse is now disposable and will be disposed by OAuthHandler. Derived OAuth implementations overriding ExchangeCodeAsync do not need to dispose of the JsonDocument or OAuthTokenResponse.\r\n* UserInformationReceivedContext.User changed from JObject to JsonDocument.\r\n* TwitterCreatingTicketContext.User changed from JObject to JsonElement.\r\n* TwitterHandler.CreateTicketAsync changed from taking JObject to JsonElement.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7289 for discussion. See https://github.com/aspnet/AspNetCore/pull/7105 for details of the change.","Url":"https://github.com/aspnet/Announcements/issues/341","RelatedDescription":"Open issue \"Newtonsoft.Json types replaced in Microsoft.AspNetCore.Authentication APIs\" (#341)"},{"Id":"406489587","IsPullRequest":false,"CreatedAt":"2019-02-04T19:47:13","Actor":"JunTaoLuo","Number":"340","RawContent":null,"Title":"MemoryCache: obsolete API removed in 3.0","State":"open","Body":"This is a follow up to https://github.com/aspnet/Caching/issues/221. The 3.0 release will remove the [obsolete `MemoryCacheOptions` APIs](https://github.com/aspnet/Extensions/blob/dc5c593da7b72c82e6fe85abb91d03818f9b700c/src/Caching/Memory/src/MemoryCacheOptions.cs#L17-L18). \r\n\r\nDiscussion: https://github.com/aspnet/Extensions/issues/1062. ","Url":"https://github.com/aspnet/Announcements/issues/340","RelatedDescription":"Open issue \"MemoryCache: obsolete API removed in 3.0\" (#340)"},{"Id":"404438078","IsPullRequest":false,"CreatedAt":"2019-01-29T18:57:12","Actor":"pakrym","Number":"339","RawContent":null,"Title":"AspNetCoreModule V1 removed from Windows Hosting Bundle","State":"open","Body":"Windows Hosting Bundle wouldn't contain AspNetCoreModule V1 in 3.0 release.\r\n\r\nAspNetCoreModuleV2 is backwards compatible with AspNetCoreModule OutOfProcess and is recommended for use with ASP.NET Core 3.0 applications.\r\n\r\nIf AspNetCoreModule V1 is required it can be installed using 2.1/2.2 Windows Hosting Bundle.\r\n\r\nThis would break 3.0 applications that explicitly opted into using AspNetCoreModule V1 using `<AspNetCoreModuleName>AspNetCoreModule</AspNetCoreModuleName>` or ones having custom `web.config` with `<add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />`\r\n\r\nPlease discuss this on  https://github.com/aspnet/AspNetCore/issues/7095","Url":"https://github.com/aspnet/Announcements/issues/339","RelatedDescription":"Open issue \"AspNetCoreModule V1 removed from Windows Hosting Bundle\" (#339)"},{"Id":"397535401","IsPullRequest":false,"CreatedAt":"2019-01-09T19:57:15","Actor":"davidfowl","Number":"338","RawContent":null,"Title":"Removed extensibility for DefaultHttpContext","State":"open","Body":"As part of performance improvements made to ASP.NET Core 3.0 (aspnet/AspNetCore#6504), we've removed the extensibility of DefaultHttpContext (it is now sealed). This extensibility was provided initially to allow pooling of the HttpContext but it introduced more complexity than necessary and precluded other optimizations. As a result, we decided to remove this extensibility.\r\n\r\nIf you're using `Mock<DefaultHttpContext>` in your unit tests, we recommend using `Mock<HttpContext>` instead. \r\n\r\nPlease discuss this on https://github.com/aspnet/AspNetCore/issues/6534\r\n\r\n","Url":"https://github.com/aspnet/Announcements/issues/338","RelatedDescription":"Open issue \"Removed extensibility for DefaultHttpContext\" (#338)"},{"Id":"397531381","IsPullRequest":false,"CreatedAt":"2019-01-09T19:50:45","Actor":"davidfowl","Number":"337","RawContent":null,"Title":"Removed deprecated Authentication property from HttpContext (including all of 1.x auth stack)","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/6504 we've removed the deprecated Authentication property. The Authentication property has been deprecated since 2.0 and a [migration guide](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/identity-2x?view=aspnetcore-2.2#use-httpcontext-authentication-extensions) was published to migrate code using this deprecated property to the new replacement APIs.\r\n\r\nPlease discussion this on https://github.com/aspnet/AspNetCore/issues/6533\r\n","Url":"https://github.com/aspnet/Announcements/issues/337","RelatedDescription":"Open issue \"Removed deprecated Authentication property from HttpContext (including all of 1.x auth stack)\" (#337)"},{"Id":"397483895","IsPullRequest":false,"CreatedAt":"2019-01-09T17:49:37","Actor":"davidfowl","Number":"336","RawContent":null,"Title":"ObjectPoolProvider removed from the default set of dependencies added in the WebHostBuilder","State":"open","Body":"As part of making ASP.NET Core more pay for play, we moved the `ObjectPoolProvider` out of the main set of dependencies to the specific components that were using them.\r\n\r\nIf you were relying on the `ObjectPoolProvider` being available by default, you should add them to your dependencies via the `IServiceCollection`.\r\n\r\nFor discussion, please use https://github.com/aspnet/AspNetCore/issues/5944","Url":"https://github.com/aspnet/Announcements/issues/336","RelatedDescription":"Open issue \"ObjectPoolProvider removed from the default set of dependencies added in the WebHostBuilder\" (#336)"},{"Id":"378007197","IsPullRequest":false,"CreatedAt":"2019-01-09T16:59:43","Actor":"blowdart","Number":"327","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF\r\n","Url":"https://github.com/aspnet/Announcements/issues/327","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#327)"},{"Id":"397022608","IsPullRequest":false,"CreatedAt":"2019-01-08T18:07:24","Actor":"blowdart","Number":"335","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.1. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted on Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/6488\r\n\r\n### Mitigation Factors\r\n\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected.\r\n\r\n## Affected Software\r\n\r\nThe vulnerability affects any Microsoft ASP.NET 1.0/1.1/2.1 Core applications if it is hosted on an IIS server running AspNetCoreModule (ANCM) prior to 12.1.18340.7 or,\r\nThe vulnerability affects any Microsoft ASP.NET 2.2 Core applications if it is hosted on an IIS server running AspNetCoreModule (ANCM) prior to 12.2.18346.0\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nASP.NET Core 1.0/1.1/2.1 applications are affected if the file version is less than 12.1.18340.7.\r\nASP.NET Core 2.2 applications are affected if the file version is less than 12.2.18346.0.\r\n\r\n### How do I fix the issue?\r\n\r\nInstall the latest version of the ASP.NET Core Runtime & Hosting Bundle appropriate to the highest version of .NET Core running on your servers.\r\n\r\n* [Hosting Bundle for ASP.NET Core applications up to v2.2](https://dotnet.microsoft.com/download/dotnet-core/2.2)\r\n* [Hosting Bundle for ASP.NET Core applications up to v2.1](https://dotnet.microsoft.com/download/dotnet-core/2.1)\r\n* [Hosting Bundle for ASP.NET Core applications up to v1.1](https://dotnet.microsoft.com/download/dotnet-core/1.1) \r\n  * Note: The ASP.NET Core Runtime & Hosting Bundle v1.1 had an incorrect download link before 1/10/2019. Please re-download Hosting Bundle if downloaded before this date.\r\n\r\nThen restart IIS by running\r\n\r\n```DOS\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0548](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0548)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 8 2018): Advisory published.\r\nV1.1 (Jan 9 2018): Update ANCM version for AspNetCore 2.1 and 1.1.\r\nV1.2 (Jan 10 2018): Mention 2.2 is affected and that the 1.1 Hosting Bundle download link was incorrect.\r\n\r\n_Version 1.2_\r\n_Last Updated 2019-01-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/335","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0548: ASP.NET Core Denial Of Service Vulnerability\" (#335)"},{"Id":"397021739","IsPullRequest":false,"CreatedAt":"2019-01-08T18:04:59","Actor":"blowdart","Number":"334","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/6487\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.WebSockets | 2.2.0<br/>2.1.0, 2.1.1 | 2.2.1<br/>2.1.7\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.7\r\nSystem.Net.WebSockets.WebSocketProtocol  | 4.5.0, 4.5.1, 4.5.2 | 4.5.3\r\nMicrosoft.NETCore.App | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\nMicrosoft.AspNetCore.App | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\nMicrosoft.AspNetCore.All  | 2.2.0<br/>2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.2.1 <br/> 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nThe [vulnerable packages](#affected-software) are distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.AspNetCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.AspNetCore.App` runtime version is less than 2.1.7, or the highest 2.2.x `Microsoft.AspNetCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nSome of the affected assemblies are also available separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.All\r\n\r\nIf your host version is a 2.1.x host, you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x, you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0564](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0564)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n","Url":"https://github.com/aspnet/Announcements/issues/334","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0564: ASP.NET Core Denial of Service Vulnerability\" (#334)"},{"Id":"397021251","IsPullRequest":false,"CreatedAt":"2019-01-08T18:03:31","Actor":"Tratcher","Number":"333","RawContent":null,"Title":"Google+ based auth deprecation and replacement","State":"open","Body":"Google is starting to [shut down](https://developers.google.com/+/api-shutdown) Google+ Signin for applications as early as January 28th 2019. ASP.NET and ASP.NET Core have been using the Google+ Signin APIs to authenticate Google account users in web applications. The affected NuGet packages are [Microsoft.AspNetCore.Authentication.Google](https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.Google/) for ASP.NET Core and [Microsoft.Owin.Security.Google](https://www.nuget.org/packages/Microsoft.Owin.Security.Google/) for Microsoft.Owin with ASP.NET Web Forms and MVC. Mitigations and solutions will vary depending on which package and which version of that package you use. \r\n\r\nNote that the replacement APIs Google has provided use a different data source and format. The mitigations and solutions given below account for the structural changes but applications will need to verify the data itself still satisfies their requirements. E.g. names, e-mail addresses, profile links, profile photos, etc. may provide subtly different values than before.\r\n\r\n### Microsoft.Owin with ASP.NET Web Forms and MVC\r\nFor Microsoft.Owin 3.1.0 and later a temporary mitigation is outlined [here](https://github.com/aspnet/AspNetKatana/issues/251#issuecomment-449587635). Applications should do immediate testing with the mitigation to check for changes in the data format. We'll plan to release Microsoft.Owin 4.0.1 with a fix for this as soon as possible. Applications using any prior version will need to update to 4.0.1.\r\n\r\n### ASP.NET Core 1.x\r\nThe mitigation given above for [Microsoft.Owin](https://github.com/aspnet/AspNetKatana/issues/251#issuecomment-449587635) can also be adapted for ASP.NET Core 1.x. As 1.x is nearing [end of life](https://dotnet.microsoft.com/platform/support-policy) and has low usage there are no plans to patch the NuGet packages for this issue.\r\n\r\n### ASP.NET Core 2.x\r\nFor Microsoft.AspNetCore.Authentication.Google 2.x the mitigation is to replace your existing call to `AddGoogle` in `Startup` with:\r\n```c#\r\n            .AddGoogle(o =>\r\n            {\r\n                o.ClientId = Configuration[\"Authentication:Google:ClientId\"];\r\n                o.ClientSecret = Configuration[\"Authentication:Google:ClientSecret\"];\r\n                o.UserInformationEndpoint = \"https://www.googleapis.com/oauth2/v2/userinfo\";\r\n                o.ClaimActions.Clear();\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.NameIdentifier, \"id\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Name, \"name\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.GivenName, \"given_name\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Surname, \"family_name\");\r\n                o.ClaimActions.MapJsonKey(\"urn:google:profile\", \"link\");\r\n                o.ClaimActions.MapJsonKey(ClaimTypes.Email, \"email\");\r\n            });\r\n```\r\nApplications should do immediate testing with the mitigation to check for changes in the data format. Expect a fix for this to be included in the February 2.1 and 2.2 patches that incorperates the above reconfiguration as the new defaults. No patch is planned for 2.0 since it has reached [end of life](https://dotnet.microsoft.com/platform/support-policy).\r\n\r\n### ASP.NET Core 3.0 Preview\r\nThe mitigation given for 2.x can also be used for the current 3.0 preview. In future 3.0 previews we're considering removing the Microsoft.AspNetCore.Authentication.Google package and directing users to Microsoft.AspNetCore.Authentication.OpenIdConnect instead. We'll follow up with the final plan. Here's how to replace `AddGoogle` with `AddOpenIdConnect` in `Startup`. This replacement can be used with ASP.NET Core 2.0 and later and can be adapted for 1.x as needed.\r\n```c#\r\n            .AddOpenIdConnect(\"Google\", o =>\r\n            {\r\n                o.ClientId = Configuration[\"Authentication:Google:ClientId\"];\r\n                o.ClientSecret = Configuration[\"Authentication:Google:ClientSecret\"];\r\n                o.Authority = \"https://accounts.google.com\";\r\n                o.ResponseType = OpenIdConnectResponseType.Code;\r\n                o.CallbackPath = \"/signin-google\"; // Or register the default \"/sigin-oidc\"\r\n                o.Scope.Add(\"email\");\r\n            });\r\n            JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Clear();\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/6486 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/333","RelatedDescription":"Open issue \"Google+ based auth deprecation and replacement\" (#333)"},{"Id":"390815611","IsPullRequest":false,"CreatedAt":"2018-12-13T19:01:52","Actor":"JunTaoLuo","Number":"331","RawContent":null,"Title":"Session: obsolete APIs removed in 3.0","State":"open","Body":"This is a follow up to https://github.com/aspnet/Announcements/issues/257.  The 3.0 release will remove the [obsolete Cookie APIs](https://github.com/aspnet/AspNetCore/blob/9e76bec6e1d150044e1fa0f77a98e9206180903d/src/Middleware/Session/src/SessionOptions.cs#L46-L104) in Session.\r\n\r\nThe recommended changes are:\r\n```c#\r\npublic void ConfigureServices(ServiceCollection services)\r\n{\r\n    services.AddSession(options =>\r\n    {\r\n        // Removed obsolete APIs\r\n        options.CookieName = \"SessionCookie\";\r\n        options.CookieDomain = \"contoso.com\";\r\n        options.CookiePath = \"/\";\r\n        options.CookieHttpOnly = true;\r\n        options.CookieSecure = CookieSecurePolicy.Always;\r\n        // new API\r\n        options.Cookie.Name = \"SessionCookie\";\r\n        options.Cookie.Domain = \"contoso.com\";\r\n        options.Cookie.Path = \"/\";\r\n        options.Cookie.HttpOnly = true;\r\n        options.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n    });\r\n}\r\n```\r\n\r\nSee the linked issue for more details and discussion.","Url":"https://github.com/aspnet/Announcements/issues/331","RelatedDescription":"Open issue \"Session: obsolete APIs removed in 3.0\" (#331)"},{"Id":"390461153","IsPullRequest":false,"CreatedAt":"2018-12-13T00:01:36","Actor":"Eilon","Number":"330","RawContent":null,"Title":"Bulk moving issues to the AspNetCore, Extensions, and EntityFrameworkCore repos","State":"open","Body":"As a follow-up to https://github.com/aspnet/Announcements/issues/320, we will start bulk moving issues from the many 'smaller' repos into the few, new 'mondo' repos. We will continue to use labels to signify various product areas and sub-features to make it reasonably easy to locate issues of interest.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/3598 for discussions.\r\n","Url":"https://github.com/aspnet/Announcements/issues/330","RelatedDescription":"Open issue \"Bulk moving issues to the AspNetCore, Extensions, and EntityFrameworkCore repos\" (#330)"},{"Id":"383620660","IsPullRequest":false,"CreatedAt":"2018-11-22T17:35:15","Actor":"Tratcher","Number":"329","RawContent":null,"Title":"Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed","State":"open","Body":"In ASP.NET Core 2.1 the contents of Microsoft.AspNetCore.Server.Kestrel.Https.dll were moved to Microsoft.AspNetCore.Server.Kestrel.Core.dll. This was done in a non-breaking way using TypeForwardedTo attributes. In the next major release (3.0) this empty assembly will be removed. Note that the nuget package was already being removed as part of https://github.com/aspnet/Announcements/issues/325.\r\n\r\nAction required:\r\n- Libraries referencing Microsoft.AspNetCore.Server.Kestrel.Https 2.0 should update all AspNetCore dependencies to 2.1 or later. Otherwise they may break when loaded into a 3.0 application.\r\n- Applications and libraries targeting AspNetCore 2.1 and later should remove any direct references to the Microsoft.AspNetCore.Server.Kestrel.Https nuget package. \r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/4228 for discussion about this issue.","Url":"https://github.com/aspnet/Announcements/issues/329","RelatedDescription":"Open issue \"Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed\" (#329)"},{"Id":"380355496","IsPullRequest":false,"CreatedAt":"2018-11-13T18:07:03","Actor":"pakrym","Number":"328","RawContent":null,"Title":"Microsoft.AspNetCore.SpaServices and NodeServices no longer fallback to console logger by default","State":"open","Body":"`Microsoft.AspNetCore.SpaServices` and `Microsoft.AspNetCore.NodeServices` used to automatically create a console logger when logging is not configured. To align them with how other AspNetCore packages implement logging we are removing this automatic fallback.\r\n\r\nFrom now on `Microsoft.AspNetCore.SpaServices` and `Microsoft.AspNetCore.NodeServices` would not display any console log when logging is not configured.\r\n\r\nTo configure console logging please add `services.AddLogging(builder => builder.AddConsole())` to your `Setup.ConfigureServices` method.","Url":"https://github.com/aspnet/Announcements/issues/328","RelatedDescription":"Open issue \"Microsoft.AspNetCore.SpaServices and NodeServices no longer fallback to console logger by default\" (#328)"},{"Id":"377580069","IsPullRequest":false,"CreatedAt":"2018-11-05T20:59:34","Actor":"pranavkm","Number":"326","RawContent":null,"Title":"Making \"pubinternal\" types in MVC internal","State":"open","Body":"In ASP.NET Core, `pubinternal` types are types that are declared as `public` but put in an `.Internal` namespace. While these types are public they have no support policy and are subject to breaking changes. Unfortunately accidental use of these types has been common, resulting in breaking changes to these projects and limiting our ability to maintain the framework.\r\n\r\nIn ASP.NET Core 3.0, we are updating all `pubinternal` types in MVC to either be `public` in a supported namespace, or `internal` as appropriate. This includes types in the following namespaces:\r\n\r\n* Microsoft.AspNetCore.Mvc.Formatters.Xml.Internal\r\n* Microsoft.AspNetCore.Mvc.Cors.Internal\r\n* Microsoft.AspNetCore.Mvc.ViewFeatures.Internal\r\n* Microsoft.AspNetCore.Mvc.Formatters.Json.Internal\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal\r\n* Microsoft.AspNetCore.Mvc.DataAnnotations.Internal\r\n* Microsoft.AspNetCore.Mvc.TagHelpers.Internal\r\n* Microsoft.AspNetCore.Mvc.Internal\r\n* Microsoft.AspNetCore.Mvc.Razor.Internal\r\n* Microsoft.AspNetCore.Mvc.Formatters.Internal\r\n* Microsoft.AspNetCore.Mvc.Core.Internal\r\n* Microsoft.AspNetCore.Mvc.ModelBinding.Internal\r\n\r\nIf there are specific types in these namespaces that are critical to your applications, please file an issue in https://github.com/aspnet/Mvc and we will consider making the requested types public.","Url":"https://github.com/aspnet/Announcements/issues/326","RelatedDescription":"Open issue \"Making \"pubinternal\" types in MVC internal\" (#326)"},{"Id":"375243400","IsPullRequest":false,"CreatedAt":"2018-10-29T22:28:29","Actor":"natemcmaster","Number":"325","RawContent":null,"Title":"Breaking changes to Microsoft.AspNetCore.App in 3.0","State":"open","Body":"_This change is one of several which were [announced earlier today on the ASP.NET blog.][aspnet-blog]_\r\n\r\nStarting in 3.0, the ASP.NET Core shared framework (`Microsoft.AspNetCore.App`) will only contain first-party assemblies that are fully developed, supported, and serviceable by Microsoft. You can think of this as constituting the ASP.NET Core “platform.” It will be fully [source buildable by anybody via GitHub](https://github.com/dotnet/source-build) and will continue to bring all the existing benefits of .NET Core shared frameworks to your applications moving forward (smaller deployment size, centralized patching, faster startup time, etc.). \r\n\r\nAs part of this change, some notable breaking changes will be made in Microsoft.AspNetCore.App 3.0.\r\n\r\n## Removal of some sub-components\r\n\r\nAs part of this change, some notable sub-components will be removed from the ASP.NET Core shared framework in 3.0: \r\n\r\n* Json.NET (Newtonsoft.Json)\r\n* Entity Framework Core (Microsoft.EntityFrameworkCore.\\*) \r\n* Microsoft.CodeAnalysis (Roslyn)\r\n\r\nEntity Framework Core will ship as “pure” NuGet packages in 3.0. This makes its shipping model the same as all other data access libraries on .NET, and allows it the simplest path to continue innovation while providing support for all the various .NET platforms customers enjoy it on today. Note, Entity Framework Core moving out of the shared framework has no impact on its status as a Microsoft developed, supported, and serviceable library, and it will continue to be covered by the [.NET Core support policy.](https://www.microsoft.com/net/platform/support-policy)\r\n\r\nJson.NET or Entity Framework Core will continue to work with ASP.NET Core, but they will not be \"in the box\" with the shared framework.\r\n\r\nSee [\"The future of JSON in .NET Core 3.0\"](https://github.com/dotnet/announcements/issues/90) for details on our plans to remove the dependency from ASP.NET Core to Json.NET and replace it with high-performance JSON APIs.\r\n\r\nWe have separately posted [a complete list of exact binaries][items-removed-from-fx] that are being removed. This list may fluctuate as we continue to work on ASP.NET Core 3.0.\r\n\r\n## Removal of the PackageReference to Microsoft.AspNetCore.App\r\n\r\nStarting in ASP.NET Core 3.0, references to Microsoft.AspNetCore.App will no longer be a `<PackageReference>` element in the project file. The .NET Core SDK will support a new item called\r\n`<FrameworkReference>` which will replace the use of PackageReference. Changes to support this new item type are already under way. \r\n\r\nSee [aspnet/AspNetCore#3612](https://github.com/aspnet/AspNetCore/issues/3612) for more details.\r\n\r\n## Reducing the duplication between NuGet packages and shared frameworks\r\n\r\nAs result these changes, it will not be necessary for projects to consume assemblies in Microsoft.AspNetCore.App as NuGet packages. To simplify the way in which consumers target and use the ASP.NET Core shared framework, we will stop producing many of the NuGet packages that we have been shipping since ASP.NET Core 1.0. The API those packages provide are still available to apps by using a `<FrameworkReference>` to Microsoft.AspNetCore.App. This includes commonly referenced API, such as Kestrel, Mvc, Razor, and others.\r\n\r\nThis will not apply to all binaries that are pulled in via Microsoft.AspNetCore.App in 2.x. Notable exceptions include:\r\n\r\n* Microsoft.Extensions libraries which continue to target .NET Standard will be available as NuGet packages (see https://github.com/aspnet/Extensions)\r\n* API produced by the ASP.NET Core team which is not part of Microsoft.AspNetCore.App. For example, Entity Framework Core, API which provides 3rd party integration, experimental features, or API which has dependencies that could not [satisy the requirements to be in the shared framework][shared-fx-guidance] will ship as NuGet packages and not in the shared framework.\r\n* Extensions to MVC that maintain support for Json.NET. We intend to provide API as a NuGet package to support using Json.NET and MVC.\r\n* The SignalR .NET client will continue to support .NET Standard and ship as NuGet package because it is intended for use on many .NET runtimes, like Xamarin and UWP.\r\n\r\nFor more details, see the [complete list of packages that will only be obsolete in favor of `<FrameworkReference>`.][packages-removed-from-fx] This list may fluctuate as we continue to work on ASP.NET Core 3.0.\r\n\r\nSee [the blog post from earlier today][aspnet-blog] for more details on the motivation for this change.\r\n\r\nYou can use [aspnet/AspNetCore#3757][discussion] for discussion.\r\n\r\n[2.1-lts]: https://www.microsoft.com/net/download/dotnet-core/2.1\r\n[aspnet-blog]: https://blogs.msdn.microsoft.com/webdev/2018/10/29/a-first-look-at-changes-coming-in-asp-net-core-3-0\r\n[discussion]: https://github.com/aspnet/AspNetCore/issues/3757\r\n[items-removed-from-fx]: https://github.com/aspnet/AspNetCore/issues/3755\r\n[packages-removed-from-fx]: https://github.com/aspnet/AspNetCore/issues/3756\r\n[shared-fx-guidance]: https://github.com/aspnet/AspNetCore/blob/4e44e5bcbedd961cc0d4f6b846699c7c494f5597/docs/SharedFramework.md\r\n","Url":"https://github.com/aspnet/Announcements/issues/325","RelatedDescription":"Open issue \"Breaking changes to Microsoft.AspNetCore.App in 3.0\" (#325)"},{"Id":"375240026","IsPullRequest":false,"CreatedAt":"2018-10-29T22:16:36","Actor":"natemcmaster","Number":"324","RawContent":null,"Title":"ASP.NET Core 3.0 will only run on .NET Core","State":"open","Body":"_This change is one of several which were [announced earlier today on the ASP.NET blog.][aspnet-blog]_\r\n\r\nAs announced on the [.NET Blog earlier this month][dotnet-blog], .NET Framework will get fewer of the newer platform and language features that come to .NET Core moving forward, due to the in-place update nature of .NET Framework and the desire to limit changes there that might break existing applications. To ensure ASP.NET Core can fully leverage the improvements coming to .NET Core moving forward, ASP.NET Core will only run on .NET Core starting from 3.0. Moving forward, you can simply think of ASP.NET Core as being part of .NET Core.\r\n\r\nCustomers utilizing ASP.NET Core on .NET Framework today can continue to do so in a fully supported fashion using the [2.1 LTS release][2.1-lts]. Support and servicing for 2.1 will continue until at least August 21, 2021 (3 years after its declaration as an LTS release) in accordance with the [.NET Support Policy](https://www.microsoft.com/net/platform/support-policy). \r\n\r\nFor more information about porting from .NET Framework to .NET Core, see our documentation on [Porting to .NET Core.](https://docs.microsoft.com/en-us/dotnet/core/porting/)\r\n\r\n**Please note** that this does not affect the following:\r\n \r\n * **Microsoft.Extensions** packages (such as logging, dependency injection, and config) will continue to support .NET Standard\r\n * **Entity Framework Core** will continue to support .NET Standard\r\n\r\nPlease see [the blog post from earlier today][aspnet-blog] for more details on the motivation for this change.\r\nPlease use [aspnet/AspNetCore#3753][discussion] for discussion.\r\n\r\n[2.1-lts]: https://www.microsoft.com/net/download/dotnet-core/2.1\r\n[dotnet-blog]: https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/\r\n[aspnet-blog]: https://blogs.msdn.microsoft.com/webdev/2018/10/29/a-first-look-at-changes-coming-in-asp-net-core-3-0\r\n[discussion]: https://github.com/aspnet/AspNetCore/issues/3753","Url":"https://github.com/aspnet/Announcements/issues/324","RelatedDescription":"Open issue \"ASP.NET Core 3.0 will only run on .NET Core\" (#324)"},{"Id":"371164570","IsPullRequest":false,"CreatedAt":"2018-10-17T16:31:22","Actor":"Eilon","Number":"323","RawContent":null,"Title":"ASP.NET Core 2.2.0 Preview 3 known issues","State":"open","Body":"Known issues in ASP.NET / Entity Framework Core 2.2 Preview 3\r\n========\r\n\r\nTo see all issues closed in the 2.2.0 Preview 3 milestone, see the results of [this query](https://github.com/search?q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.2.0-preview3).\r\n\r\nOfficial announcement blog post: https://blogs.msdn.microsoft.com/webdev/2018/10/17/asp-net-core-2-2-0-preview3-now-available/\r\n\r\nPlease see below for a list of known issues in the 2.2.0 Preview 3 release.\r\n\r\n---\r\n\r\n## Some external CSS styles are failing to load for new Razor and MVC projects:\r\n\r\nWhen running a newly created MVC or Razor Pages project, some styles do not render.\r\n\r\nThis is caused by an integrity check failure for some of the referenced stylesheets. To fix the issue add a `crossorigin=\"anonymous\"` attribute to the `bootstrap.min.css` referencing `<link ...>` tag in the `_Layout.cshtml` file, as follows:\r\n\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css\" \r\n\tasp-fallback-href=\"~/lib/bootstrap/dist/css/bootstrap.min.css\" \r\n\tasp-fallback-test-class=\"sr-only\" asp-fallback-test-property=\"position\" asp-fallback-test-value=\"absolute\" \r\n\tcrossorigin=\"anonymous\" \r\n\tintegrity=\"sha256-eSi1q2PG6J7g7ib17yAaWMcrr5GrtohYChqibrV7PBE=\"/>\r\n```\r\n\r\n---\r\n\r\n## URL generation for conventional routes with default values is invalid\r\n\r\nIn an MVC project using Endpoint Routing, URL generation using `IUrlHelper` can generate a URL incorrectly when the route template includes default values.\r\n\r\nExample:\r\n```\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\"default\", \"{controller=Home}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\n```\r\nUrl.Action(\"Index\", \"Home\", new { id = 17 });\r\n```\r\n\r\nThis can result in the following URL being generated `/?id=17` - this will work with most uses of MVC but the result of `/Home/Index/17` is intended.\r\n\r\n---\r\n\r\n## NullReferenceException thrown when using IHttpClientFactory\r\n\r\nCrashes can occur due to a bug in how cleanup timers are incorrectly started when using `IHttpClientFactory`. This can be worked around by setting `HttpClientFactoryOptions.HandlerLifetime` to an extremely long value or `Timeout.InfiniteTimespan`. \r\n\r\nhttps://github.com/aspnet/HttpClientFactory/issues/194\r\n\r\n---\r\n\r\nFor discussions, please go to https://github.com/aspnet/AspNetCore/issues/3642","Url":"https://github.com/aspnet/Announcements/issues/323","RelatedDescription":"Open issue \"ASP.NET Core 2.2.0 Preview 3 known issues\" (#323)"},{"Id":"368897417","IsPullRequest":false,"CreatedAt":"2018-10-10T23:45:50","Actor":"BrennanConroy","Number":"322","RawContent":null,"Title":"React to StackExchange.Redis v2.0","State":"open","Body":"We are introducing two new packages to use [StackExchange.Redis](https://www.nuget.org/packages/StackExchange.Redis/) 2.0 with ASP.NET Core Caching and SignalR. We are also introducing support for using Redis to store DataProtection key material using StackExchange.Redis 2.0.\r\n\r\nFor ASP.NET Core 2.2 we will continue to ship our existing packages which use StackExchange.Redis 1.0, to preserve compatibility for existing users. However, we suggest you update to the new package as soon as possible. These packages are now considered deprecated and will be removed in ASP.NET Core 3.0.\r\n\r\n### Caching ###\r\nWe are releasing a new package \"Microsoft.Extensions.Caching.StackExchangeRedis\" which will depend on StackExchange.Redis 2.0. \"Microsoft.Extensions.Caching.Redis\" will continue to ship in ASP.NET Core 2.2 with the StackExchange.Redis 1.0 dependency and will be removed in 3.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.Extensions.Caching.Redis](https://www.nuget.org/packages/Microsoft.Extensions.Caching.Redis) (if present), and add a dependency to \"Microsoft.Extensions.Caching.StackExchangeRedis\". Next, change your `AddDistributedRedisCache` invocation in `ConfigureServices` to `AddStackExchangeRedisCache`. No further changes should be necessary.\r\n\r\n### DataProtection ###\r\nThe \"Microsoft.AspNetCore.DataProtection.Redis\" package is new in ASP.NET Core 2.2 and depends on StackExchange.Redis 1.0 in Preview 2. In Preview 3, this package has been renamed to \"Microsoft.AspNetCore.DataProtection.StackExchangeRedis\" and has been updated to use StackExchange.Redis 2.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.AspNetCore.DataProtection.Redis](https://www.nuget.org/packages/Microsoft.AspNetCore.DataProtection.Redis) (if present), and add a dependency to \"Microsoft.AspNetCore.DataProtection.StackExchangeRedis\". Next, change your `PersistKeysToRedis` invocation in `ConfigureServices` to `PersistKeysToStackExchangeRedis`. No further changes should be necessary.\r\n\r\n### SignalR ###\r\nWe are releasing a new package \"Microsoft.AspNetCore.SignalR.StackExchangeRedis\" which will depend on StackExchange.Redis 2.0. \"Microsoft.AspNetCore.SignalR.Redis\" will continue to ship in ASP.NET Core 2.2 with the StackExchange.Redis 1.0 dependency and will be removed in 3.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.AspNetCore.SignalR.Redis](https://www.nuget.org/packages/Microsoft.AspNetCore.SignalR.Redis) (if present), and add a dependency to \"Microsoft.AspNetCore.SignalR.StackExchangeRedis\". Next, change your `AddRedis` invocation in `ConfigureServices` to `AddStackExchangeRedis`. No further changes should be necessary.\r\n\r\n---\r\nFor questions or further discussions about the changes, please use https://github.com/aspnet/AspNetCore/issues/3606.","Url":"https://github.com/aspnet/Announcements/issues/322","RelatedDescription":"Open issue \"React to StackExchange.Redis v2.0\" (#322)"},{"Id":"368431099","IsPullRequest":false,"CreatedAt":"2018-10-09T23:00:09","Actor":"mikaelm12","Number":"321","RawContent":null,"Title":"SignalR Java Client Package Name Change","State":"open","Body":"_Please use [this issue](https://github.com/aspnet/SignalR/issues/3105) for discussion._\r\n\r\nThe SignalR java client which is currently in preview, was previously under the package name `com.microsoft.aspnet.signalr`. This was the case for the first and second previews of the Java client. Starting in preview 3 the package name will change to `com.microsoft.signalr`. This means that our groupid through maven central will change and that consuming the package through maven or gradle will be slightly different. \r\n\r\nHere's what bringing in the Java client after preview 3 releases without the actual build numbers should look similar to\r\n```xml\r\n<dependency>\r\n  <groupId>com.microsoft.signalr</groupId>\r\n  <artifactId>signalr</artifactId>\r\n  <version>PREVIEW 3 VERSION NUMBER</version>\r\n</dependency>\r\n```\r\n\r\n```gradle\r\nimplementation 'com.microsoft.signalr:signalr:PREVIEW 3 VERSION NUMBER'\r\n```","Url":"https://github.com/aspnet/Announcements/issues/321","RelatedDescription":"Open issue \"SignalR Java Client Package Name Change\" (#321)"},{"Id":"367932540","IsPullRequest":false,"CreatedAt":"2018-10-08T20:00:47","Actor":"natemcmaster","Number":"320","RawContent":null,"Title":"For contributors: unifying to fewer GitHub repos","State":"open","Body":"_Please use [this issue](https://github.com/aspnet/Home/issues/3598) for discussion._\r\n\r\nOver the next few months, we will reduce the number of repos in active development in the @aspnet organization by merging them together. We plan to condense about 53 repos into 5. Repos which merge with another will be archived on GitHub, which makes them read-only. We will also rename a few repositories. GitHub will automatically redirect URLs to issues and commits on renamed repositories. We will update the README and repo descriptions to help you navigate from archived repos to the new repo.\r\n\r\nAfter the merging is complete, the final set of repos will be as follows:\r\n\r\nRepo                            | Primary purpose\r\n--------------------------------|-----------------------------------------------\r\naspnet/AspNetCore               | ASP.NET Core runtime\r\naspnet/AspNetCore-Tooling       | Tools for ASP.NET Core (MSBuild, Visual Studio, command line tools, etc.)\r\naspnet/Extensions               | Microsoft.Extensions.* APIs\r\naspnet/EntityFrameworkCore      | Entity Framework Core\r\naspnet/AspLabs                  | Experiments not ready for production releases\r\n\r\nTo preserve as much history as possible, we will rename aspnet/Home to aspnet/AspNetCore, and aspnet/Common to aspnet/Extensions instead of creating new repos. We will preserve commit history by merging unrelated histories into the unified repos. We will also review open issues and move them when necessary to keep them aligned with the relevant code.\r\n\r\n### Motivation\r\n\r\nOur primary motivation is simplifying both our engineering systems and our GitHub interactions with all of you. We know there are some drawbacks to working in larger repos, but we find the benefits compelling enough to move forward with this change. The new set of repos more closely aligns with the layering of the products they ship.\r\n\r\n### Timeframe\r\n\r\nWe'll be starting the first round of changes soon. We expect the entire unification effort will take us several weeks. We'll migrate repositories in phases and adjust the plan along the way, as necessary.\r\n\r\n### Archived repos\r\n\r\nThe following repos will be merged into the main repos above. They will not be used any more for active development on 2.1 LTS and new releases. The source code for the projects will move to the new project with any issues we intend to keep working on. Remaining issues and pull requests will be closed. We do not plan to delete the repos or remove tagged commits, but the projects will become read-only.\r\n\r\n* AADIntegration           \r\n* Antiforgery              \r\n* AuthSamples              \r\n* AzureIntegration         \r\n* BasicMiddleware          \r\n* BrowserLink              \r\n* Caching                  \r\n* Common                   \r\n* Configuration            \r\n* CORS                     \r\n* DataProtection           \r\n* DependencyInjection      \r\n* Diagnostics              \r\n* DotNetTools              \r\n* EventNotification        \r\n* FileSystem               \r\n* Hosting                  \r\n* HtmlAbstractions         \r\n* HttpAbstractions         \r\n* HttpClientFactory        \r\n* HttpSysServer            \r\n* Identity                 \r\n* IISIntegration           \r\n* JavaScriptServices       \r\n* JsonPatch                \r\n* KestrelHttpServer        \r\n* Localization             \r\n* Logging                  \r\n* MetaPackages             \r\n* Microsoft.Data.Sqlite    \r\n* MusicStore               \r\n* Mvc                      \r\n* MvcPrecompilation        \r\n* Options                  \r\n* Proxy                    \r\n* Razor                    \r\n* ResponseCaching          \r\n* Routing                  \r\n* Scaffolding              \r\n* Security                 \r\n* ServerTests              \r\n* Session                  \r\n* SignalR                  \r\n* StaticFiles              \r\n* Templating               \r\n* Testing                  \r\n* Universe                 \r\n* WebHooks                 \r\n* WebSockets\r\n\r\n\r\n_Please use https://github.com/aspnet/Home/issues/3598 for discussion._  ","Url":"https://github.com/aspnet/Announcements/issues/320","RelatedDescription":"Open issue \"For contributors: unifying to fewer GitHub repos\" (#320)"},{"Id":"367922912","IsPullRequest":false,"CreatedAt":"2018-10-08T19:29:02","Actor":"pranavkm","Number":"319","RawContent":null,"Title":"3.0 - Removing Microsoft.AspNetCore.Mvc.WebApiCompatShim","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim (WebApiCompatShim) package provides partial compatibility in ASP.NET Core with ASP.NET Web API 2 to simplify migrating existing Web API implementations to ASP.NET Core. However, apps using the WebApiCompatShim do not benefit from the API related features shipping in recent ASP.NET Core releases, such as improved Open API Spec genertaion, standardized error handling, and client code generation. To better focus our API efforts in 3.0, we plan to remove WebApiCompatShim. We recommend that existing applications using the WebApiCompatShim migrate to the newer `[ApiController]` model.\r\n\r\nFor questions or further discussions, please use https://github.com/aspnet/Mvc/issues/8570.","Url":"https://github.com/aspnet/Announcements/issues/319","RelatedDescription":"Open issue \"3.0 - Removing Microsoft.AspNetCore.Mvc.WebApiCompatShim\" (#319)"},{"Id":"365011293","IsPullRequest":false,"CreatedAt":"2018-09-28T19:23:51","Actor":"blowdart","Number":"318","RawContent":null,"Title":"Microsoft Security Advisory: iOS12 breaks social, WSFed and OIDC logins","State":"open","Body":"# Microsoft Security Advisory:  iOS12 breaks social, WSFed and OIDC logins\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about an incompatibly between iOS12 and some types of authentication. This advisory also provides guidance on what developers can do to remove current security restrictions added by ASP.NET to their applications to become compatible with iOS12.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1984 for ASP.NET Core Identity\r\nDiscussion for this issue can be found at https://github.com/aspnet/Security/issues/1864 for ASP.NET Core Cookie Authentication\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>What has changed\r\n\r\nThe recent iOS12 update has changed Safari's handling of [SameSite](https://tools.ietf.org/html/rfc6265) cookies. The SameSite attribute allows a developer to control when cookies are sent to a web site, enabling the flow to only occur when requests are from the same site. This standard was introduced to reduce exposure to Cross Site Request Forgery (CSRF) attacks. By default ASP.NET Core 2.0 and later protects its authentication cookies using the SameSite property. The change on Apple's part is not limited to ASP.NET Core applications, it is affecting multiple frameworks and authentication software which relay on HTTP forms in a browser, for example authenticating to a third party via Facebook, Twitter or browser based Open ID Connect (OIDC) mechanism.\r\n\r\nApple have stated they believe [their change is correct behavior](https://bugs.webkit.org/show_bug.cgi?id=188165), and that the fault lies in every other browser's implementation.\r\n\r\nWhile we take no stance on the correctness of browser behavior we feel that removing the SameSite protections would expose our customers, and their customers to a wider risk, as it would remove the protection provided everywhere, for all users, in any browser.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf your users can no longer login to your web application on iOS12 using Safari then you are affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix this?\r\n\r\nDevelopers can allow iOS12 Safari users to log into their applications by turn off SameSite protection in `ConfigureServices()`.\r\n\r\nIf you are using ASP.NET Core Identity you disable the protection by configuring cookies with the following code\r\n\r\n```c#\r\nservices.ConfigureExternalCookie(options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = SameSiteMode.None;\r\n});\r\nservices.ConfigureApplicationCookie(options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = SameSiteMode.None;\r\n});\r\n```\r\n\r\nIf you are using cookie authentication without ASP.NET Core identity you can turn off the protection with the following code\r\n\r\n```c#\r\nservices.AddCookie(CookieAuthenticationDefaults.AuthenticationScheme, options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = Microsoft.AspNetCore.Http.SameSiteMode.None;\r\n})\r\n```\r\n\r\nIf you are using external OIDC providers you may be able to avoid the issue by changing the response mode your provider uses from a POST to a GET request, using the following code. Not all providers may support this.\r\n\r\n```c#\r\n.AddOpenIdConnect(\"myOIDProvider\", options => {\r\n    // Other options\r\n    options.ResponseType = \"code\";\r\n    options.ResponseMode = \"query\";\r\n};\r\n```\r\n\r\n_Note that in making these changes protection is removed for all users and all browsers. You should ensure that all your actions that make state changes are protected with [CSRF anti-forgery mechanisms](https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery) built into ASP.NET Core.\r\n\r\n#### Rebuilding your application\r\n\r\nAfter making these configuration changes you rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[Bug 188165 - iOS 12 Safari breaks ASP.NET Core 2.1 OIDC authentication](https://bugs.webkit.org/show_bug.cgi?id=188165)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 28, 2018): Advisory published.\r\n","Url":"https://github.com/aspnet/Announcements/issues/318","RelatedDescription":"Open issue \"Microsoft Security Advisory: iOS12 breaks social, WSFed and OIDC logins\" (#318)"},{"Id":"361087870","IsPullRequest":false,"CreatedAt":"2018-09-18T00:05:36","Actor":"halter73","Number":"317","RawContent":null,"Title":"Kestrel Connection Adapter Logging Namespace Changes","State":"open","Body":"The logging namespaces for Kestrel's HttpsConnectionAdapter and LoggingConnectionAdapter are changing in 2.2.0.\r\n\r\n1. The `HttpsConnectionAdapter` logging namespace is now `Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter`.\r\n2. The `LoggingConnectionAdapter` logging namespace is now `Microsoft.AspNetCore.Server.Kestrel.Core.Adapter.Internal.LoggingConnectionAdapter`.\r\n\r\nHere's an example HttpsConnectionAdapter log prior to the change:\r\n\r\n```\r\ndbug: HttpsConnectionAdapter[2]\r\n      Authentication of the HTTPS connection timed out.\r\n```\r\n\r\nAnd after:\r\n\r\n```\r\ndbug: Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter[2]\r\n      Authentication of the HTTPS connection timed out.\r\n```","Url":"https://github.com/aspnet/Announcements/issues/317","RelatedDescription":"Open issue \"Kestrel Connection Adapter Logging Namespace Changes\" (#317)"},{"Id":"359136062","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:10","Actor":"blowdart","Number":"316","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing a specially crafted web requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles parsing web requests.\r\n\r\nThe underlying problem exists in the `System.IO.Pipelines` package. If you have other software which uses this package please follow the instructions in the [.NET Core bulletin](https://github.com/dotnet/announcements/issues/83).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2914\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses either of the packages with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.All | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.4\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.4\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nASP.NET Core 2.1 is distributed as part of the .NET Core runtime. To check the current installed runtimes open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed you will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf the highest .NET Core SDK version is less that 2.1.402 or the highest `Microsoft.AspNetCore.App` runtime version is less that 2.1.4 you are vulnerable to this issue. You may not see any SDK versions if you have only installed the runtime.\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.402 on your development machines and build servers, and the .NET Core Runtime 2.1.4 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n#### Applications not using Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/aspnet/Announcements/issues/316","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability\" (#316)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1098568276815142912","CreatedAt":"2019-02-21T13:01:02+00:00","UserScreenname":"aspnet","Text":"The #ASPNET blog just got a makeover!\n\nDiscover and share great content while enjoying the modern, clean design of… https://t.co/2lyL6jV3AC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":78,"FavoriteCount":34,"RawContent":null},{"Id":"1098252186503598080","CreatedAt":"2019-02-20T16:05:00+00:00","UserScreenname":"aspnet","Text":"Coming to you February 28 10AM PT - Register for this webinar to learn how to modernize your… https://t.co/kdd1kExD9O","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":15,"RawContent":null},{"Id":"1097711174789951488","CreatedAt":"2019-02-19T04:15:13+00:00","UserScreenname":"aspnet","Text":"Sorry, we have to push out the #ASPNET Community Standup one more week. It'll be worth the wait!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":7,"RawContent":null},{"Id":"1095783340291043330","CreatedAt":"2019-02-13T20:34:41+00:00","UserScreenname":"aspnet","Text":"The #ASPNET blog is getting an update! Learn more and get a sneak peek of our new and improved design:… https://t.co/39kro2G7dE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":88,"FavoriteCount":32,"RawContent":null},{"Id":"1095184941120278528","CreatedAt":"2019-02-12T04:56:52+00:00","UserScreenname":"aspnet","Text":"It looks like we're going to need to push this out a week due to snow and power outages. \n\nPlanning on Feb 19 / 10… https://t.co/FSuLhf8vqR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":16,"RawContent":null},{"Id":"1095104449264013312","CreatedAt":"2019-02-11T23:37:01+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #ASPNET Community Standup, this Tuesday - 3:45 PM Pacific - 22:45 UTC\n\n🚀Performance,… https://t.co/LkiBI1h9tD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1092869180938805249","CreatedAt":"2019-02-05T19:34:51+00:00","UserScreenname":"aspnet","Text":"Blazor 0.8.0 experimental release now available\n\nhttps://t.co/lSkbc08lcV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":173,"FavoriteCount":103,"RawContent":null},{"Id":"1092864687727734784","CreatedAt":"2019-02-05T19:17:00+00:00","UserScreenname":"aspnet","Text":"Lots of fun getting the latest #Blazor news from @danroth27 on today's #ASPNET Community Standup!\n\nVideo:… https://t.co/C2qkMIoy6K","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"1092843730296426497","CreatedAt":"2019-02-05T17:53:44+00:00","UserScreenname":"aspnet","Text":"Starting soon! Join @danroth27 and me for some Blazor excitement!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/FiYmQYsctH","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"1092565323570569216","CreatedAt":"2019-02-04T23:27:26+00:00","UserScreenname":"aspnet","Text":"Prepare yourself for this week's #ASPNET Community Standup, this Tuesday - 10 AM Pacific - 18 UTC\n\n🔥Blazor Update🔥… https://t.co/r7Z3qvLqlG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"1090330466027229184","CreatedAt":"2019-01-29T19:26:55+00:00","UserScreenname":"aspnet","Text":"Announcing #ASP.NET Core updates in .NET Core 3.0 Preview 2 https://t.co/x7TqzVXaor","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":79,"FavoriteCount":53,"RawContent":null},{"Id":"1085957424585064453","CreatedAt":"2019-01-17T17:50:00+00:00","UserScreenname":"aspnet","Text":"Reusable Blazor components are being built by @Telerik - check out this announcement from @EdCharbeneau https://t.co/tixjx8D11S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":44,"RawContent":null},{"Id":"1085956233863938048","CreatedAt":"2019-01-17T17:45:16+00:00","UserScreenname":"aspnet","Text":"Community standup links: https://t.co/NsGUYu0qve\n\nVideo is here: https://t.co/9ULoHClol6 https://t.co/vpXKoIvUol","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"1085321961255784448","CreatedAt":"2019-01-15T23:44:54+00:00","UserScreenname":"aspnet","Text":"Starting now! Join us at https://t.co/4Ioo9jNSN2 https://t.co/vpXKoIvUol","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1084940631326126080","CreatedAt":"2019-01-14T22:29:38+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup will have some exciting new API Previews from @condrong \n\n3:45 PM Pacific / 2… https://t.co/iQd9H8bKkM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2019-02-25T05:30:25.6151323Z","RunDurationInMilliseconds":4181}