{"Data":{"Vue-Issues":{"Issues":[{"Id":"573473032","IsPullRequest":true,"CreatedAt":"2020-03-01T04:12:55","Actor":"Brooooooklyn","Number":"11169","RawContent":null,"Title":"fix(types): `this` type in lifecycles","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11169","RelatedDescription":"Closed or merged PR \"fix(types): `this` type in lifecycles\" (#11169)"},{"Id":"573466871","IsPullRequest":false,"CreatedAt":"2020-03-01T02:52:18","Actor":"marcosvidolin","Number":"11168","RawContent":null,"Title":"e2e \"modal\" test fail","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/test/e2e/specs/modal.js](https://github.com/vuejs/vue/blob/dev/test/e2e/specs/modal.js)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm run test:e2e -- --env phantomjs\r\n\r\n### What is expected?\r\nassert.cssClassPresent('.modal-mask', 'modal-enter-active')\r\n\r\n### What is actually happening?\r\nThere is no \"modal-enter-active\" class at this moment.\r\n\r\n---\r\nMaybe the \"waitFor\" time it's wrong\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11168","RelatedDescription":"Open issue \"e2e \"modal\" test fail\" (#11168)"},{"Id":"573448993","IsPullRequest":false,"CreatedAt":"2020-03-01T01:09:55","Actor":"marcosvidolin","Number":"11167","RawContent":null,"Title":"e2e \"modal\" test fail","State":"closed","Body":".modal-mask> has css class: \"modal-enter-active\".  - expected \"has modal-enter-active\" but got: \"modal-mask\"","Url":"https://github.com/vuejs/vue/issues/11167","RelatedDescription":"Closed issue \"e2e \"modal\" test fail\" (#11167)"},{"Id":"573435425","IsPullRequest":true,"CreatedAt":"2020-03-01T00:03:15","Actor":"marcosvidolin","Number":"11166","RawContent":null,"Title":"docs(grid component example): Removed autocomplete to avoid boring history","State":"open","Body":"Removed autocomplete to avoid boring history from the browser.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Documentation\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11166","RelatedDescription":"Open PR \"docs(grid component example): Removed autocomplete to avoid boring history\" (#11166)"},{"Id":"573385180","IsPullRequest":false,"CreatedAt":"2020-02-29T18:51:55","Actor":"mvgn","Number":"11165","RawContent":null,"Title":"Incorrect form field value in Chrome using the back button","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jc26tewa/](https://jsfiddle.net/jc26tewa/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Type \"Hello\" in the message input field.\r\n2. Click on the link \"Another page\". \r\n3. Click on the browser back button.\r\n4. Click on the \"Submit\" button. \r\n\r\n### What is expected?\r\nIt is expected that the input field be blank or that Vue recognises its current value and shows \"Submitted message: Hello\" after clicking on the Submit button.\r\n\r\n### What is actually happening?\r\nIn Chrome, the input field contains the value it had before leaving the page, but Vue thinks the field is empty, so nothing happens when you click on the Submit button. In other browsers, the input field is blank after clicking on the back button.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11165","RelatedDescription":"Open issue \"Incorrect form field value in Chrome using the back button\" (#11165)"},{"Id":"573284325","IsPullRequest":false,"CreatedAt":"2020-02-29T14:13:31","Actor":"Garanaw","Number":"11164","RawContent":null,"Title":"[Enhancement] Allow events to be emitted to children","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently I'm working on a RPG Character Creator for an editorial. The character counts with several properties, among which there are a Social Position, a Monthly Incoming (based upon the Social Position) and, at last, the Character Traits. \r\nOne of these relates on the mentioned Social Position, downgrading it by 1. This afects the Incomings, which will have to be recalculated based on the new Social Position. In order to achieve this, I emit an event from my CharacterTraits component to the App, then change a property binded into my Incomings component from false to true, and this fires a watcher that sends a request to the backend with the new situation, receives the new monthly incomings and recalculates them. Once this is done, I need to emit another event to make sure that the binded property goes back to false in case the same Character Trait is rolled, so it can be recalculated again (initially that was a bug I discovered).\r\nIn the meantime, the user is still allowed to keep rolling his character's traits, and in some cases (a very unlucky guy), it can happen that the same trait is rolled before the first one has finished, therefore, the \"recalculate\" property didn't have the time to be reset to false, leading to a bug in which the new Incomings value cannot be calculated due to the property being still false, as it relies on an async call.\r\nWith a parent-to-children event emitter, this can be avoided by just firing the event without the need of properties being changed so they can communicate freely. In this specific case, the async request can be just cancelled and re-sent with the new (third) situation.\r\nThis can potentially change the way that components communicate, I'm aware of that, but for some specific use cases (such as this one), it can avoid bugs and improve the user experience.\r\nI have seen some ways to deal with this, relying on the child component having a $ref, and calling the child component's method from the parent though this $ref property, but it doesn't seem very clean to me, and also it's a bit confusing.\r\n\r\n### What does the proposed API look like?\r\n```\r\n// Parent component\r\nthis.$emitToChildren('event', properties)\r\n\r\n// Children\r\nexport default {\r\n    on: {\r\n        event: (properties) => {\r\n            this.handleEvent(properties);\r\n        }\r\n    }\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11164","RelatedDescription":"Closed issue \"[Enhancement] Allow events to be emitted to children\" (#11164)"},{"Id":"572785704","IsPullRequest":false,"CreatedAt":"2020-02-28T14:41:35","Actor":"devgar","Number":"11162","RawContent":null,"Title":"Allow lifecycle creation hook functions to return callbacks that will be called when the component will be destroyed.","State":"closed","Body":"### What problem does this feature solve?\r\nThis allows to simplify code and makes unnecessary to move some variables out of lifecycle hooks scope.\r\n\r\nI suppose that the callback returned by mounted hook may be called at beforeDestroy step, the callback returned by beforeMounted at destroyed.\r\n\r\nI don't know if this could be used in creation and beforeCreate.\r\n\r\nIt's need to be discussed the way to combinate if both, the creation hooks return callback and the matching destruction hook are used.\r\n\r\n### What does the proposed API look like?\r\n```\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tinterval: null \r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tthis.interval = setInterval(() => /* … */, 500)\r\n\t},\r\n\r\n\tbeforeDestroy() {\r\n\t\tclearInterval(this.interval)\r\n\t},\r\n\r\n  /*** PROPOSED FEATURE ***/\r\n\tmounted() {\r\n\t\tconst interval = setInterval(() => /* … */, 500)\r\n\t\t\r\n\t\t// to be called at beforeDestroy\r\n\t\treturn () => clearInterval(interval)\r\n\t}\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11162","RelatedDescription":"Closed issue \"Allow lifecycle creation hook functions to return callbacks that will be called when the component will be destroyed.\" (#11162)"},{"Id":"572713303","IsPullRequest":false,"CreatedAt":"2020-02-28T12:32:30","Actor":"nowdothat","Number":"11161","RawContent":null,"Title":"function render cause component keep-alive","State":"closed","Body":"Version\r\n2.5.17\r\n\r\nReproduction link\r\nhttps://codesandbox.io/s/stupefied-wind-hwnle?fontsize=14&hidenavigation=1&theme=dark\r\n\r\nSteps to reproduce\r\n1.switch other radio\r\n2. Vue function render different components\r\n3. select Data not reset\r\n\r\nWhat is expected?\r\nI want to each Render , give me a new Component . but now give me a old component When he did execute render methods\r\n\r\nWhat is actually happening?\r\nonly render another one components . old component will reset show","Url":"https://github.com/vuejs/vue/issues/11161","RelatedDescription":"Closed issue \"function render cause component keep-alive\" (#11161)"},{"Id":"572571895","IsPullRequest":true,"CreatedAt":"2020-02-28T07:14:15","Actor":"LoveofRedMoon","Number":"11160","RawContent":null,"Title":"bug: fix the param 'file' might be undefined","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nWhen using ssr, some error might happen => 'Cannot read property 'replace' of undefined'\r\nThe reason is the vue-ssr-client-manifest.json -> modules[i] might contains -1\r\nthis cause the file mapper have undefined in an array.\r\n","Url":"https://github.com/vuejs/vue/pull/11160","RelatedDescription":"Open PR \"bug: fix the param 'file' might be undefined\" (#11160)"},{"Id":"572509843","IsPullRequest":true,"CreatedAt":"2020-02-28T04:20:01","Actor":"luoway","Number":"11159","RawContent":null,"Title":"fix(vdom): check old handlers are defined before remove (fix #11151)","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11159","RelatedDescription":"Open PR \"fix(vdom): check old handlers are defined before remove (fix #11151)\" (#11159)"},{"Id":"572481849","IsPullRequest":true,"CreatedAt":"2020-02-28T04:17:03","Actor":"luoway","Number":"11158","RawContent":null,"Title":"fix(vdom): check old handlers are defined before remove (fix #11151)","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11158","RelatedDescription":"Closed or merged PR \"fix(vdom): check old handlers are defined before remove (fix #11151)\" (#11158)"},{"Id":"572205363","IsPullRequest":true,"CreatedAt":"2020-02-27T16:41:29","Actor":"vue-bot","Number":"11157","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11157","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11157)"},{"Id":"572106634","IsPullRequest":false,"CreatedAt":"2020-02-27T14:06:10","Actor":"freddyys","Number":"11155","RawContent":null,"Title":"Changing an object/list also changes other objects/lists if those got their initial value from the same variable.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/bf0qo19m/](https://jsfiddle.net/bf0qo19m/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI've added buttons in the jsfiddle to add a value to the first list and change the message of the first object.\r\n\r\n### What is expected?\r\nThe value of the second list/object doesn't change when the first list/object changes.\r\n\r\n### What is actually happening?\r\nWhen changing the first list or object the second one changes as well.\r\n\r\n---\r\nThe provided jsfiddle is a simplified version of a problem I've ran into quite a few times now. It functions the same so it should demonstrate the problem.\r\n\r\nI ran into the problem when i tried to save the same info from axios request in two different objects. One to keep track of the state in the database and another for user to alter. This way the two can be compared if needed. However changing one of the two objects also changed the other. So there is no way to now what the original state was.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11155","RelatedDescription":"Closed issue \"Changing an object/list also changes other objects/lists if those got their initial value from the same variable.\" (#11155)"},{"Id":"572107180","IsPullRequest":false,"CreatedAt":"2020-02-27T14:04:35","Actor":"microsoftlibrary","Number":"11156","RawContent":null,"Title":"习亡岐山乂","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/11156","RelatedDescription":"Closed issue \"习亡岐山乂\" (#11156)"},{"Id":"572045402","IsPullRequest":false,"CreatedAt":"2020-02-27T14:00:30","Actor":"tonai","Number":"11154","RawContent":null,"Title":"Computed property not recomputed","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-computed-properties-hnwo9](https://codesandbox.io/s/vue-computed-properties-hnwo9)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the Next/Prev buttons of the first component\r\n\r\n### What is expected?\r\nThe offset value should update like for the second component\r\n\r\n### What is actually happening?\r\nNothing, the computed value is not recomputed automaticaly when the data is updated.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11154","RelatedDescription":"Closed issue \"Computed property not recomputed\" (#11154)"},{"Id":"572014134","IsPullRequest":true,"CreatedAt":"2020-02-27T11:34:59","Actor":"luoway","Number":"11153","RawContent":null,"Title":"fix(events): check 'handler' before used as function (close #11151)","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11153","RelatedDescription":"Closed or merged PR \"fix(events): check 'handler' before used as function (close #11151)\" (#11153)"},{"Id":"571946316","IsPullRequest":true,"CreatedAt":"2020-02-27T09:44:54","Actor":"shadowings-zy","Number":"11152","RawContent":null,"Title":"feat(compiler): Allow BigInt usage in templates (issue #11126)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ x ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ x ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ x ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ x ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ x ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ x ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ x ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nHello!\r\nThis pull request is related to issue #11126 . Now we can use BigInt in \"Mustache\" syntax.\r\nI had already added test for this feature in \"test/unit/features/filter/filter.spec.js\".\r\nAnd all tests are passing.\r\n","Url":"https://github.com/vuejs/vue/pull/11152","RelatedDescription":"Open PR \"feat(compiler): Allow BigInt usage in templates (issue #11126)\" (#11152)"},{"Id":"571892403","IsPullRequest":false,"CreatedAt":"2020-02-27T09:19:22","Actor":"luoway","Number":"11151","RawContent":null,"Title":"vue throw unhandled error when update template","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://luoway.github.io/vue-bug-report/index.html](https://luoway.github.io/vue-bug-report/index.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n0. **import vue from CDN**\r\n1. set `@click=undefined` on any element in the template\r\n2. update any data to fire render\r\n3. see unhandled error in console\r\n\r\n### What is expected?\r\nThe template is updated successfully.\r\n\r\n### What is actually happening?\r\nVue throws unhandled error, and stops running.\r\n\r\n---\r\nView demo code: https://github.com/luoway/vue-bug-report/blob/master/index.html\r\n\r\nWhen I updated the version of vue from 2.4.x to 2.6.x，this unhandled error happened, and the code stopped running.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11151","RelatedDescription":"Closed issue \"vue throw unhandled error when update template\" (#11151)"},{"Id":"571502152","IsPullRequest":false,"CreatedAt":"2020-02-26T16:25:59","Actor":"SilverRampart","Number":"11150","RawContent":null,"Title":"Passing `this` to an event handler causes undefined behaviour","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/7hf0eL4p/1/](https://jsfiddle.net/7hf0eL4p/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the check button repeatedly\r\n\r\n### What is expected?\r\nThe text toggles back and forth between `true` and `false`\r\n\r\n### What is actually happening?\r\nThe text toggles to `false`, then stays there.\r\n\r\n---\r\nIt seems that passing `this` to an event handler disrupts all subsequent Vue event handling. Please clarify what, if any, is the correct behaviour here, and maybe update the docs.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11150","RelatedDescription":"Closed issue \"Passing `this` to an event handler causes undefined behaviour\" (#11150)"},{"Id":"571472167","IsPullRequest":false,"CreatedAt":"2020-02-26T15:35:36","Actor":"SilverRampart","Number":"11149","RawContent":null,"Title":"`this` in event argument causes undefined behaviour","State":"closed","Body":"```\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <script src=\"vue.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <input type=\"checkbox\" :checked=\"bool\" @change=\"checked('Hi!', this)\" id=\"check\">\r\n    </div>\r\n    <script>\r\n        var app = new Vue({\r\n            el: \"#app\",\r\n            data() {\r\n                return { \"bool\": true }\r\n            },\r\n            methods: {\r\n                checked(arg, elem) {\r\n                    console.log(arg);\r\n                    this.bool = elem.checked;\r\n                }\r\n            }\r\n        })\r\n    </script>\r\n</body>\r\n```\r\nThe code above behaves strangely. it works the first time the event is fired, but not subsequently. Taking `this` as an argument also messes up other event handling further downstream.\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <script src=\"vue.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <input type=\"checkbox\" :checked=\"bool\" @change=\"checked('Hi!', $event)\" id=\"check\">\r\n    </div>\r\n    <script>\r\n        var app = new Vue({\r\n            el: \"#app\",\r\n            data() {\r\n                return { \"bool\": true }\r\n            },\r\n            methods: {\r\n                checked(arg, event) {\r\n                    console.log(arg);\r\n                    this.bool = !!event.target.checked;\r\n                }\r\n            }\r\n        })\r\n    </script>\r\n</body>\r\n```\r\nworks without problems. Please clarify the intented behaviour, if any, of passing `this` to an event, and updte the docs accordingly.","Url":"https://github.com/vuejs/vue/issues/11149","RelatedDescription":"Closed issue \"`this` in event argument causes undefined behaviour\" (#11149)"},{"Id":"571295354","IsPullRequest":false,"CreatedAt":"2020-02-26T13:21:23","Actor":"daniel-EG","Number":"11148","RawContent":null,"Title":"The Vue.js does not execute the command despite the correct encoding","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://danieleg.000webhostapp.com/vue/vue/slug.html](https://danieleg.000webhostapp.com/vue/vue/slug.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvar app = new Vue({\r\n\r\nel: '#daniel-app',\r\n\r\ndata: {\r\n\r\ninPut: '',\r\n\r\noutPut: '',\r\n\r\nbuttonText: 'fab fa-telegram-plane',\r\n\r\nclarification: 'Convert the title to Slug'\r\n\r\n},\r\n\r\nmethods: {\r\n\r\nconvertToSlug () {\r\n\r\nvar theSlug = this.inPut;\r\n\r\n// [1] Convert the post title to lowercase\r\n\r\ntheSlug = theSlug.toLowerCase();\r\n\r\n// [2] Replace spaces with a dash\r\n\r\ntheSlug = theSlug.replace(/\\s /g, '-');\r\n\r\n// [3] Replace ampersand with a dash\r\n\r\ntheSlug = theSlug.replace(/&/g, '-');\r\n\r\n// [4] Replace 2 dashs with nothing\r\n\r\ntheSlug = theSlug.replace(/--/g, '');\r\n\r\n// [5] Delete a dash in end and first post title\r\n\r\nvar firstDash = theSlug.charAt(0);\r\n\r\nvar endDash = theSlug.charAt(theSlug.length - 1);\r\n\r\nif (firstDash === '-' && endDash === '-') {\r\n\r\ntheSlug = theSlug.replace(firstDash, '');\r\n\r\ntheSlug = theSlug.replace(endDash, '');\r\n\r\n} else if (firstDash === '-') {\r\n\r\ntheSlug = theSlug.replace(firstDash, '');\r\n\r\n} else if (endDash === '-') {\r\n\r\ntheSlug = theSlug.replace(endDash, '');\r\n\r\n}\r\n\r\n// Add result post title to output\r\n\r\nif (this.outPut === theSlug) {\r\n\r\nthis.outPut = '';\r\n\r\nthis.buttonText = 'fab fa-telegram-plane';\r\n\r\nthis.clarification = 'Convert the title to Slug';\r\n\r\n} else if (this.buttonText === 'fas fa-times') {\r\n\r\nthis.outPut = '';\r\n\r\nthis.buttonText = 'fab fa-telegram-plane';\r\n\r\nthis.clarification = 'Convert the title to Slug';\r\n\r\n} else {\r\n\r\nthis.outPut = theSlug;\r\n\r\nthis.buttonText = 'fas fa-times';\r\n\r\nthis.clarification = 'Delete this slug';\r\n\r\nconsole.log(endDash);\r\n\r\n}\r\n\r\n}\r\n\r\n}\r\n\r\n});\r\n\r\nPreview: https://danieleg.000webhostapp.com/vue/vue/slug.html\r\n\r\n### What is expected?\r\nConvert a dash at the beginning of the title to nothing\r\nAnd turn a dash at the end of the title to nothing\r\n\r\n### What is actually happening?\r\nWhen trying to replace a dash at the beginning of the title to nothing, this happens\r\nBut when converting a dash at the end of the address to nothing, this does not happen\r\n\r\n---\r\nThe exact error here:\r\n\r\n// [5] Delete a dash in end and first post title\r\n\r\nvar firstDash = theSlug.charAt(0);\r\n\r\nvar endDash = theSlug.charAt(theSlug.length - 1);\r\n\r\nif (firstDash === '-' && endDash === '-') {\r\n\r\ntheSlug = theSlug.replace(firstDash, '');\r\n\r\ntheSlug = theSlug.replace(endDash, '');\r\n\r\n} else if (firstDash === '-') {\r\n\r\ntheSlug = theSlug.replace(firstDash, '');\r\n\r\n} else if (endDash === '-') {\r\n\r\ntheSlug = theSlug.replace(endDash, '');\r\n\r\n}\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11148","RelatedDescription":"Closed issue \"The Vue.js does not execute the command despite the correct encoding\" (#11148)"},{"Id":"571281145","IsPullRequest":false,"CreatedAt":"2020-02-26T11:49:02","Actor":"daniel-EG","Number":"11147","RawContent":null,"Title":"The Vue.js does not execute the command despite the correct encoding","State":"closed","Body":"I do not really understand what is wrong with this code\r\nI think it is a good code and there are no errors, but despite that it does not execute orders as required\r\nPlease find a solution to this matter\r\nvar app = new Vue({\r\n            el: '#daniel-app',\r\n            data: {\r\n               inPut: '',\r\n               outPut: '',\r\n               buttonText: 'fab fa-telegram-plane',\r\n               clarification: 'Convert the title to Slug'\r\n            },\r\n            methods: {\r\n               convertToSlug () {\r\n                  var theSlug = this.inPut;\r\n                  // [1] Convert the post title to lowercase\r\n                  theSlug = theSlug.toLowerCase();\r\n                  // [2] Replace spaces with a dash\r\n                  theSlug = theSlug.replace(/\\s+/g, '-');\r\n                  // [3] Replace ampersand with a dash\r\n                  theSlug = theSlug.replace(/&/g, '-');\r\n                  // [4] Replace 2 dashs with nothing\r\n                  theSlug = theSlug.replace(/--/g, '');\r\n                  // [5] Delete a dash in end and first post title\r\n                  var firstDash = theSlug.charAt(0);\r\n                  var endDash = theSlug.charAt(theSlug.length - 1);\r\n                  if (firstDash === '-' && endDash === '-') {\r\n                     theSlug = theSlug.replace(firstDash, '');\r\n                     theSlug = theSlug.replace(endDash, '');\r\n                  } else if (firstDash === '-') {\r\n                     theSlug = theSlug.replace(firstDash, '');\r\n                  } else if (endDash === '-') {\r\n                     theSlug = theSlug.replace(endDash, '');\r\n                  }\r\n                  // Add result post title to output\r\n                  if (this.outPut === theSlug) {\r\n                     this.outPut = '';\r\n                     this.buttonText = 'fab fa-telegram-plane';\r\n                     this.clarification = 'Convert the title to Slug';\r\n                  } else if (this.buttonText === 'fas fa-times') {\r\n                     this.outPut = '';\r\n                     this.buttonText = 'fab fa-telegram-plane';\r\n                     this.clarification = 'Convert the title to Slug';\r\n                  } else {\r\n                     this.outPut = theSlug;\r\n                     this.buttonText = 'fas fa-times';\r\n                     this.clarification = 'Delete this slug';\r\n                     console.log(endDash);\r\n                  }\r\n               }\r\n            }\r\n         });\r\n\r\nPreview: https://danieleg.000webhostapp.com/vue/vue/slug.html","Url":"https://github.com/vuejs/vue/issues/11147","RelatedDescription":"Closed issue \"The Vue.js does not execute the command despite the correct encoding\" (#11147)"},{"Id":"571240174","IsPullRequest":false,"CreatedAt":"2020-02-26T10:53:37","Actor":"Usamaliaquat123","Number":"11146","RawContent":null,"Title":"rollup-plugin-alias is currently archived and it's not currently in dev","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue](https://github.com/vuejs/vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm currently started learning Vue, I found that documentation its really helpful, I clone this repo and trying to start learning each in-depth modules that vue-team has created. I tested each module's like compiler , core , platform and server and i'm trying learn more about each of your modules..\r\n\r\nI found this rollup-plugin-alias looks like this is archived and moved to @rollup/plugin-alias and its uses the same func that config.js is using in /scripts\r\n\r\ncan i fix this .... ;) Thanks 🎉\r\n\r\n### What is expected?\r\nchange dep\r\n\r\n### What is actually happening?\r\nchange dep\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11146","RelatedDescription":"Closed issue \"rollup-plugin-alias is currently archived and it's not currently in dev\" (#11146)"},{"Id":"571237926","IsPullRequest":false,"CreatedAt":"2020-02-26T10:42:30","Actor":"Usamaliaquat123","Number":"11145","RawContent":null,"Title":"rollup-plugin-alias is currently archived and it's not currently in dev","State":"closed","Body":"I'm currently started learning Vue, I found that documentation its really helpful, I clone this repo and trying to start learning each in-depth modules that vue-team has created. I tested each module's like compiler , core , platform and server and i'm trying learn more about each of your modules..\r\n\r\nI found this [rollup-plugin-alias](https://github.com/rollup/rollup-plugin-alias) looks like this is archived and moved to [@rollup/plugin-alias](https://github.com/rollup/plugins) and its uses the same func that `config.js` is using in `/scripts` \r\n\r\ncan i fix this .... ;) Thanks 🎉 ","Url":"https://github.com/vuejs/vue/issues/11145","RelatedDescription":"Closed issue \"rollup-plugin-alias is currently archived and it's not currently in dev\" (#11145)"},{"Id":"570845245","IsPullRequest":false,"CreatedAt":"2020-02-25T22:22:03","Actor":"hognevevle","Number":"11144","RawContent":null,"Title":"List Move Transitions sometimes never \"finish\"","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/hognevevle/pen/PoqbZrv](https://codepen.io/hognevevle/pen/PoqbZrv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe issue manifests itself in conjunction with QIntersection component of Quasar. Said component is used to only load elements into the DOM that are actually visible in the viewport. \r\n\r\nWhen using List Move Transitions, when elements are rearranged and moved into the viewport, there are odd cases where the element is however _not_ inserted into the DOM.  According to the Quasar team, this is happening because v-move never finishes with the transition.\r\n\r\nSee https://github.com/quasarframework/quasar/issues/6463 for repro details\r\n\r\n### What is expected?\r\nThe transition should always finish\r\n\r\n### What is actually happening?\r\nThe transition doesn't finish under certain unknown conditions \r\n\r\n---\r\nIssue described more in detail in https://github.com/quasarframework/quasar/issues/6463\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11144","RelatedDescription":"Closed issue \"List Move Transitions sometimes never \"finish\"\" (#11144)"},{"Id":"570724852","IsPullRequest":true,"CreatedAt":"2020-02-25T17:28:46","Actor":"tyschroed","Number":"11143","RawContent":null,"Title":"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)","State":"open","Body":"Update error-detector to look for . prefix\r\n\r\nfix #11090\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [X ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11143","RelatedDescription":"Open PR \"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)\" (#11143)"},{"Id":"570711314","IsPullRequest":true,"CreatedAt":"2020-02-25T17:12:27","Actor":"tyschroed","Number":"11142","RawContent":null,"Title":"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)","State":"closed","Body":"Update error-detector to look for `.` prefix, indicating function is associated with an object\r\n\r\nfix #11090\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ X] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ X] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11142","RelatedDescription":"Closed or merged PR \"$http.delete shows warning \"avoid using JavaScript unary operator as property name\" (fix #11090)\" (#11142)"},{"Id":"570401127","IsPullRequest":false,"CreatedAt":"2020-02-25T08:40:47","Actor":"969253189","Number":"11141","RawContent":null,"Title":"Garbled characters sometimes appear when using v-html such as: www.365station.com","State":"closed","Body":"www.365station.com content, generated by vue configuration","Url":"https://github.com/vuejs/vue/issues/11141","RelatedDescription":"Closed issue \"Garbled characters sometimes appear when using v-html such as: www.365station.com\" (#11141)"},{"Id":"570398638","IsPullRequest":false,"CreatedAt":"2020-02-25T08:35:53","Actor":"969253189","Number":"11140","RawContent":null,"Title":"w使用 v-html 加载会出现乱码","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/11140","RelatedDescription":"Closed issue \"w使用 v-html 加载会出现乱码\" (#11140)"},{"Id":"569994399","IsPullRequest":true,"CreatedAt":"2020-02-24T17:06:42","Actor":"aKzenT","Number":"11139","RawContent":null,"Title":"$mount can be called on comment node","State":"open","Body":"The typescript definition currently specifies that you can only mount on an Element (or a selector string evaluating to an element), however the result of a server-rendered component can be an empty comment node (e.g. if the component has a v-if on the root node). $mount actually supports this, but the type definition does not reflect this currently.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Type Definition\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11139","RelatedDescription":"Open PR \"$mount can be called on comment node\" (#11139)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"573201562","IsPullRequest":true,"CreatedAt":"2020-02-29T06:07:22","Actor":"iliyaZelenko","Number":"3135","RawContent":null,"Title":"fix(types): interface Route, the query property","State":"open","Body":"Maybe it can also be null (see the `query` property in the `Location`)\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/3135","RelatedDescription":"Open PR \"fix(types): interface Route, the query property\" (#3135)"},{"Id":"572931434","IsPullRequest":false,"CreatedAt":"2020-02-28T18:35:07","Actor":"jsamayoap","Number":"3134","RawContent":null,"Title":"Change router params to a generic/any type instead of Dictionary<string>","State":"closed","Body":"Expected behavior, to push params of any type, like:\r\n\r\nthis.$router.push({\r\n                name: 'piloto',\r\n                params: {\r\n                    id: item.id.toString(),\r\n                    isThisTrue: (this.opN === 1),\r\n                    isThisFalse: (this.opN === 2)\r\n                }\r\n            })\r\n\r\nCurrently this code on typescript would produce the following error:\r\nNo overload matches this call\r\n\r\nhttps://github.com/vuejs/vue-router/blob/39d46b254bd8130464626539e7b73b4cc760241b/types/router.d.ts#L140\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3134","RelatedDescription":"Closed issue \"Change router params to a generic/any type instead of Dictionary<string>\" (#3134)"},{"Id":"570336117","IsPullRequest":false,"CreatedAt":"2020-02-25T06:10:00","Actor":"luxaritas","Number":"3133","RawContent":null,"Title":"Redirection away from and back to route fails to cancel navigation","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/luxaritas/pen/WNvRagw?editors=1010](https://codepen.io/luxaritas/pen/WNvRagw?editors=1010)\r\n\r\n### Steps to reproduce\r\n* Run a long async function within a route guard\r\n* Start at route A, navigate to route B, and then back to A again before the guard for B resolves\r\n\r\n### What is expected?\r\nNavigation to route B is cancelled, or at least completed and re-routed to route A\r\n\r\n### What is actually happening?\r\nNavigationDuplicated is thrown, and the page navigates to and stays on route B\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3133","RelatedDescription":"Open issue \"Redirection away from and back to route fails to cancel navigation\" (#3133)"},{"Id":"569698372","IsPullRequest":false,"CreatedAt":"2020-02-24T08:17:54","Actor":"namoosalishah","Number":"3132","RawContent":null,"Title":"Nested named route with parameter is redirected to the route name on refresh","State":"closed","Body":"Hi,\r\n\r\nI am having this issue with the nested routes having parameter, when I refresh the page, the route loses the parameter and redirects to the route name instead. Please check the following code.\r\nBefore refreshing the page\r\nhttp://localhost:8080/pos/tickets/1\r\nand after refreshing\r\nhttp://localhost:8080/pos/ticketDetail\r\n<pre>\r\n{\r\n   path: \"/pos\",\r\n   name: \"pos\",\r\n   component: Pos,\r\n   meta: {\r\n      requiresAuth: true\r\n   },\r\n   children: [\r\n      ...... other child routes,\r\n     {\r\n       path: \"tickets/:ticket_id\",\r\n       name: \"ticketDetail\",\r\n       component: TicketDetail\r\n      }\r\n   ]\r\n}\r\n</pre>\r\n\"vue\": \"^2.6.8\",\r\n\"vue-router\": \"^3.0.1\"\r\n\r\nPlease advise?","Url":"https://github.com/vuejs/vue-router/issues/3132","RelatedDescription":"Closed issue \"Nested named route with parameter is redirected to the route name on refresh\" (#3132)"},{"Id":"568791080","IsPullRequest":true,"CreatedAt":"2020-02-23T21:52:36","Actor":"NoelDeMartin","Number":"3129","RawContent":null,"Title":"Documentation: Update guard example to avoid stack overflow","State":"closed","Body":"I am surprised that this hasn't been brought up before, so maybe I am doing something wrong. But I am getting a \"too much recursion\" error with the sample code in the documentation.\r\n\r\nLooking at the code, it seems to me like getting a stack overflow *is* the expected behaviour. May this be a [schrödinbug](http://www.catb.org/jargon/html/S/schroedinbug.html)?","Url":"https://github.com/vuejs/vue-router/pull/3129","RelatedDescription":"Closed or merged PR \"Documentation: Update guard example to avoid stack overflow\" (#3129)"},{"Id":"569344783","IsPullRequest":false,"CreatedAt":"2020-02-23T21:24:42","Actor":"zhouyanggodking","Number":"3130","RawContent":null,"Title":"router.go() will not free previous page data causing memory leak issue","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  first land on /home page, then navigate to /about page.    (at this page, it produces a large array)\r\n2. on about page, click back button (calling router.go(-1))\r\n3. at the memory panel of chrome devtool,  click \"garbage collect\" button to force garbage collection.\r\n4. take a snapshot\r\n\r\nyou can see the created array is not freed.\r\n\r\n### What is expected?\r\nArray created on about page should be freed.\r\n\r\n\r\n### What is actually happening?\r\nArray created on about page stays in memory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![image](https://user-images.githubusercontent.com/6425541/75094433-fd9c0400-55c5-11ea-9a7b-9ac17321bdd9.png)\r\n\r\nNote:  if I click the back button of chrome browser, no issue at all. Weird\r\nYou can also monitor the memory usage of each page. (Please remember to force garbage collection before you look at the stats)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3130","RelatedDescription":"Closed issue \"router.go() will not free previous page data causing memory leak issue\" (#3130)"},{"Id":"569352079","IsPullRequest":true,"CreatedAt":"2020-02-22T20:50:43","Actor":"rongzedong","Number":"3131","RawContent":null,"Title":"增加个 methods 中 redirect 的方法","State":"closed","Body":"不知道这么写对不对，哪里不对，请修正并实现这个方法，因为比如登录 或者其他某些时候是需要这样做的。而比如我就需要这样的教程（例子）。\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3131","RelatedDescription":"Closed or merged PR \"增加个 methods 中 redirect 的方法\" (#3131)"},{"Id":"568732576","IsPullRequest":false,"CreatedAt":"2020-02-22T14:35:01","Actor":"alphatr","Number":"3128","RawContent":null,"Title":"beforeRouteLeave don't prevent router.back()","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/alphatr/eawpdvb6/](https://jsfiddle.net/AlphaTr/eawpdvb6/)\r\n\r\n### Steps to reproduce\r\nopen https://jsfiddle.net/alphatr/eawpdvb6/ and click `Go to Page` then click `back`;\r\n\r\n### What is expected?\r\nNeither `location.hash` nor `$route` change\r\n\r\n### What is actually happening?\r\nlocation.hash is changed\r\n\r\n---\r\nif beforeRouteLeave used next in synchronize, the location.hash is not change;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3128","RelatedDescription":"Closed issue \"beforeRouteLeave don't prevent router.back()\" (#3128)"},{"Id":"568413801","IsPullRequest":false,"CreatedAt":"2020-02-20T16:18:46","Actor":"991567775","Number":"3127","RawContent":null,"Title":"History mode input URL and refresh will not enter the route guard or Axios global interception","State":"closed","Body":"History mode input URL and refresh will not enter the route guard or Axios global interception\r\n\r\n\r\nWhat's the solution","Url":"https://github.com/vuejs/vue-router/issues/3127","RelatedDescription":"Closed issue \"History mode input URL and refresh will not enter the route guard or Axios global interception\" (#3127)"},{"Id":"567068016","IsPullRequest":false,"CreatedAt":"2020-02-18T19:34:48","Actor":"tafelnl","Number":"3126","RawContent":null,"Title":"$route incorrect for view when inactive (in combination with keep-alive)","State":"closed","Body":"### Version\r\n3.1.3\r\n(and up to 3.1.5 as well)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mdvL4276/29](https://jsfiddle.net/mdvL4276/29)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the JsFiddle\r\n2. Click 'navigate to random'\r\n\r\n### What is expected?\r\nThe list that shows all children of the App.vue should all have their own correct id. The id is a computed property that is computed the following:\r\n`return this.$route.params.id`\r\n\r\nIn the JsFiddle I also implemented a workaround myself. This is done as follows:\r\n```\r\n  data() {\r\n    return {\r\n      'routeFixed': this.$route\r\n    }\r\n  },\r\n```\r\nThis way the `routeFixed` property will always have the correct `$route` info available.\r\n\r\n### What is actually happening?\r\nThe $route param changes when the view becomes inactive. In my opinion it should remained fixed as it is linked to that specific view. \r\n\r\n---\r\nThis can cause all sorts of problems and issues. For example, I have a computed property based on one of the $route.params variables. If I then make a watcher on that computed property, it will actually execute the code within that watcher's handler (because it changed from some value to undefined). Of course this can be worked around by adding a check to see if the variable is undefined, but I don't think that should be necessary. Besides that it can cause problems when you use that computed property in a Vue plugin that does not check for undefined for example.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3126","RelatedDescription":"Closed issue \"$route incorrect for view when inactive (in combination with keep-alive)\" (#3126)"},{"Id":"565800604","IsPullRequest":true,"CreatedAt":"2020-02-15T19:54:45","Actor":"Alexeykhr","Number":"3125","RawContent":null,"Title":"WIP: Fix/find init location","State":"open","Body":"I will try to fix this :). Issue: https://github.com/vuejs/vue-router/issues/3103\r\n\r\nThe problem is url generation. We have 2 routes:\r\n\r\n```\r\n<router-link to=\"/special/tést1\">/special/tést1</router-link>\r\n<router-link :to=\"{ name: 'special', params: {word: 'tést2'} }\">/special/tést2</router-link>\r\n```\r\n\r\nIn the first case, the route is transmitted as it is. In the second - it is decoded through the library: `path-to-regexp` (in new versions this can be changed by parameter)\r\n\r\nBefore:\r\n![1](https://user-images.githubusercontent.com/14747569/74594204-1e031600-503c-11ea-9810-593e744afbb4.png)\r\n\r\nAfter:\r\n![2](https://user-images.githubusercontent.com/14747569/74594203-1ba0bc00-503c-11ea-8b8e-632e466b577a.png)\r\n\r\nBut, if it works in **History Mode**. Then for **Hash Mode** you need to edit separately, because there the same problem exists.\r\n\r\n[Somewhere here](https://github.com/vuejs/vue-router/blob/dev/src/history/hash.js#L128)","Url":"https://github.com/vuejs/vue-router/pull/3125","RelatedDescription":"Open PR \"WIP: Fix/find init location\" (#3125)"},{"Id":"564682459","IsPullRequest":false,"CreatedAt":"2020-02-13T15:58:59","Actor":"jods4","Number":"3124","RawContent":null,"Title":"Design for Vue 3","State":"closed","Body":"### What problem does this feature solve?\r\nThe roadmap for Vue 3 says it will release Q1 2020 and the core lib is already very usable.\r\nI think now is the right time to port vue-router, which is a must-have for many apps. \r\nThe exercise may provide interesting feedback on Vue3 public APIs.\r\n\r\nI could help porting the code but I'm unsure of some design decisions.\r\n\r\n### What does the proposed API look like?\r\n#### 1. Setup\r\n`install` could be an instance function on `VueRouter` so that one could register it like that:\r\n```js\r\nlet router = new VueRouter(/* routes, options */);  // <- actual, usable router\r\ncreateApp(MyApp)\r\n  .use(router)\r\n  .mount('#app');\r\n```\r\n\r\nWhat `install` does is:\r\n- Register global components `router-link` and `router-view`;\r\n- Provide value `Router` at the root of application.\r\n- :question: Do we want to provide a `Route` ref as well? It's available through the router object.\r\n\r\nI'll talk more about injecting value next.\r\nIf someone wants more control (e.g. use different name for components or not register them globally), those tasks can easily be made manually instead of using `.use(router)`.\r\n\r\n#### 2. Accessing the router\r\nThere is no global mixins `$router`, `$route` anymore.\r\n\r\nIf a component (userland, or internally in `router-view` and `router-link`) needs to access the router, e.g. to navigate, it injects the router in setup: `let router = inject('Router')`.\r\n\r\nThe route can be found on the router, or could be provided as `Route` (ref).\r\nNesting routers can be done be re-providing those keys.\r\n\r\n#### 3. Guards\r\nThis is what I'm having most trouble with. \r\nCurrently `vue-router` does some ugly hacks to get hold of component instances that are navigated to/from, in order to call `beforeRouteEnter`, `beforeRouteUpdate` and `beforeRouteLeave`.\r\n\r\nI'm hoping the new API could look something like:\r\n```js\r\nimport { beforeRouteLeave } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    beforeRouteLeave(() => ...);\r\n  }\r\n}\r\n```\r\nbut I'm not clear about how fine details would work. Such as: \r\n- where/how is the component defined in routing actually created? \r\n- is `setup` always called, even when using `keep-alive`?\r\n\r\nWith some feedback on the design and a few pointers for the last point, I can have a try at porting this component.\r\n\r\nBTW: 300Mo of dependencies to build a 20Ko lib is crazy :(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3124","RelatedDescription":"Closed issue \"Design for Vue 3\" (#3124)"},{"Id":"564383940","IsPullRequest":false,"CreatedAt":"2020-02-13T08:47:10","Actor":"diachedelic","Number":"3122","RawContent":null,"Title":"Aborting navigation throws `undefined`","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0ukqxgho/1/](https://jsfiddle.net/0ukqxgho/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the `/foo` button, check the browser console for errors\r\n\r\n### What is expected?\r\nAn `Error` be thrown.\r\n\r\n### What is actually happening?\r\n`undefined` is thrown.\r\n\r\n---\r\nThe [docs](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort) specify that if a navigation is aborted, then the promise returned by `$router.push` is rejected. This was causing me grief because I was trying to track down where an `Uncaught (in promise) undefined` error was being thrown - would have been helpful to have been able to narrow down the error faster.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3122","RelatedDescription":"Closed issue \"Aborting navigation throws `undefined`\" (#3122)"},{"Id":"564318061","IsPullRequest":false,"CreatedAt":"2020-02-13T08:46:34","Actor":"719media","Number":"3121","RawContent":null,"Title":"Having store accessible from router on initialization depends on order of use statements","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-jf31j](https://codesandbox.io/s/vue-routing-example-jf31j)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe codesandbox works fine as is. However, if you change the order of the imports to\r\n\r\n```\r\nimport router from \"./router\";\r\nimport store from \"./store\";\r\n```\r\n as described in the code, the router.beforeEach will be unable to access the $store.\r\n\r\n### What is expected?\r\nthe store would work in the router, regardless of the order of Vue.use statements\r\n\r\n### What is actually happening?\r\nThe store is only initially accessible in router.beforeEach if Vue.use(Vuex) is called before Vue.use(Router);.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3121","RelatedDescription":"Closed issue \"Having store accessible from router on initialization depends on order of use statements\" (#3121)"},{"Id":"564410268","IsPullRequest":false,"CreatedAt":"2020-02-13T03:09:13","Actor":"drmmyx","Number":"3123","RawContent":null,"Title":"Vue router version 3.1.5 hash mode redirect to 1 page before","State":"closed","Body":"solution : rollback to version 3.1.3 solve the issue ...","Url":"https://github.com/vuejs/vue-router/issues/3123","RelatedDescription":"Closed issue \"Vue router version 3.1.5 hash mode redirect to 1 page before\" (#3123)"},{"Id":"564087604","IsPullRequest":false,"CreatedAt":"2020-02-12T15:45:01","Actor":"AlexandreBonaventure","Number":"3120","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vue-router export types like here: https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3120","RelatedDescription":"Open issue \"Yarn v2 compat: add vue to peerDependencies\" (#3120)"},{"Id":"562462075","IsPullRequest":false,"CreatedAt":"2020-02-10T20:34:38","Actor":"Knogobert","Number":"3119","RawContent":null,"Title":"Transpile/expose utils for importing into project","State":"closed","Body":"### What problem does this feature solve?\r\nThis let's devs rely on one source of truth for using the same utilities as vue-router when building similar functionality into our own projects.\r\n\r\nMainly, this came up when looking for a way to import the `stringifyQuery` function from `vue-router/src/util/query.js`. Then realizing that it would need to be transpiled from TS etc. for it to be able to be imported.\r\nThis was so that I could build a URL with parameters to be sent to an API.\r\n\r\nI have not researched further than this, but maybe there are more functions that could benefit devs by exposing them more easily?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nimport { stringifyQuery } from 'vue-router';\r\n...\r\nconst encodedQueries = stringifyQuery(query);\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3119","RelatedDescription":"Closed issue \"Transpile/expose utils for importing into project\" (#3119)"},{"Id":"561313040","IsPullRequest":true,"CreatedAt":"2020-02-07T15:31:53","Actor":"rijkvanzanten","Number":"3117","RawContent":null,"Title":"fix(TS): update type of Route.name","State":"closed","Body":"On very first load, `name` is `null`, not `string` or `undefined`. This means that either the passed route is wrong, or the type is incorrect.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3117","RelatedDescription":"Closed or merged PR \"fix(TS): update type of Route.name\" (#3117)"},{"Id":"561660216","IsPullRequest":false,"CreatedAt":"2020-02-07T15:31:03","Actor":"geekox86","Number":"3118","RawContent":null,"Title":"Passing Params as Props does not Work Well with Composition API","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://github.com/geekox86/OeMis](https://github.com/geekox86/OeMis)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1- `yarn serve`.\r\n\r\n2- A type error is thrown in the terminal.\r\n\r\n3- The types of `beforeRouteEnter` parameters (in `src/Base/Organization/Structure.vue` line 88) are not recognized by TypeScript.\r\n\r\n### What is expected?\r\nThe program should execute correctly without having to define routing component `props` using the old syntax of Vue options API.\r\n\r\n### What is actually happening?\r\nThe program does not work unless the old syntax of Vue options API is used to define routing component `props`.\r\n\r\n---\r\nSee line 92 in `src/Base/Organization/Structure.vue`, if this line is uncommented everything works perfectly, but I do not want to use this old syntax. I just want to relay on Typescript type definitions in the `setup` function for `props`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3118","RelatedDescription":"Closed issue \"Passing Params as Props does not Work Well with Composition API\" (#3118)"},{"Id":"561156523","IsPullRequest":false,"CreatedAt":"2020-02-06T17:21:04","Actor":"service-paradis","Number":"3116","RawContent":null,"Title":"Accepting named target for router-link","State":"open","Body":"### What problem does this feature solve?\r\nRight now, if we want to open a link in a new tab (or page), we can use target=\"_blank\".\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like target=\"my_report\" would be great. Right now, the target attribute is added to the a tag, but the link is not opened on another tab.\r\n\r\n### What does the proposed API look like?\r\nAccepting named target and opening them in new tabs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3116","RelatedDescription":"Open issue \"Accepting named target for router-link\" (#3116)"},{"Id":"561155778","IsPullRequest":false,"CreatedAt":"2020-02-06T17:19:38","Actor":"service-paradis","Number":"3115","RawContent":null,"Title":"Using named target using router-link","State":"closed","Body":"Right now, if we want to open a link in a new tab (or page), we can use `target=\"_blank\"`.\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like `target=\"my_report\"` would be great. Right now, the target attribute is added to the `a` tag, but the link is not opened on another tab.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3115","RelatedDescription":"Closed issue \"Using named target using router-link\" (#3115)"},{"Id":"559259641","IsPullRequest":true,"CreatedAt":"2020-02-04T09:16:33","Actor":"kelunik","Number":"3114","RawContent":null,"Title":"feat(core): add 'on-complete' and 'on-abort' props to router-link","State":"closed","Body":"This allows implementing a wrapper component handling aborted navigations, e.g. due to navigating to the exact same path (see #974), and other custom behavior such as a loading state showing on a button-like link.\r\n\r\n**Sample Implementation**\r\n\r\nNote: This doesn't trigger the scroll behavior hook, so that needs some separate PR / implementation automatically work, but that's fine, as we're not doing any navigation with this implementation.\r\n\r\n```vue\r\n<template>\r\n  <div id=\"app\">\r\n    <router-link to=\"/\" :on-abort=\"handleAbort\">Home</router-link>\r\n    <router-link to=\"/about\" :on-abort=\"handleAbort\">About</router-link>\r\n    <router-view :key=\"$route.fullPath + ' @ ' + sameRouteCounter\"/>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HelloWorld from './components/HelloWorld.vue'\r\n\r\n@Component({\r\n  components: {\r\n    HelloWorld\r\n  }\r\n})\r\nexport default class App extends Vue {\r\n  sameRouteCounter: number = 0\r\n\r\n  mounted () {\r\n    this.$router.afterEach((to, from) => {\r\n      if (to.fullPath !== from.fullPath) {\r\n        this.sameRouteCounter = 0\r\n      }\r\n    })\r\n  }\r\n\r\n  handleAbort (err: any) {\r\n    if (err.name === 'NavigationDuplicated') {\r\n      this.sameRouteCounter++\r\n      this.$nextTick().then(() => {\r\n        window.scroll(0, 0)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nImplements #3027.","Url":"https://github.com/vuejs/vue-router/pull/3114","RelatedDescription":"Closed or merged PR \"feat(core): add 'on-complete' and 'on-abort' props to router-link\" (#3114)"},{"Id":"558276976","IsPullRequest":false,"CreatedAt":"2020-01-31T18:09:15","Actor":"protium-dev","Number":"3113","RawContent":null,"Title":"Throw proper error when aborting navigation","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-router-undefined-error-7ltnr](https://codesandbox.io/s/vue-router-undefined-error-7ltnr)\r\n\r\n### Steps to reproduce\r\n* Create route \"/\" and \"/B\"\r\n* Redirect to \"/\" inside \"beforeEnter\" in /\"B\" using `next('/')`\r\n* Push \"/B\" from \"/\"\r\n\r\n### What is expected?\r\nTo have a proper error object thrown\r\n\r\n### What is actually happening?\r\nUndefined object thrown `Uncaught (in promise) undefined`\r\n\r\n---\r\nThis only happens when using `this.$router.push`. The behaviour is not present using `router-link`.\r\nEven though, I'd be great to always have proper errors. I suspect this is the line of code involved https://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L163\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3113","RelatedDescription":"Closed issue \"Throw proper error when aborting navigation\" (#3113)"},{"Id":"557964317","IsPullRequest":true,"CreatedAt":"2020-01-31T07:34:36","Actor":"anselal","Number":"3112","RawContent":null,"Title":":pencil: docs(router): Update history mode apache config, fix SPA","State":"open","Body":"Make Single Page Applications load the correct endpoint on refresh and not just fallback to index.html\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3112","RelatedDescription":"Open PR \":pencil: docs(router): Update history mode apache config, fix SPA\" (#3112)"},{"Id":"551959995","IsPullRequest":false,"CreatedAt":"2020-01-29T17:17:57","Actor":"adi-zz","Number":"3106","RawContent":null,"Title":"push to named star route with empty pathMatch fails","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-7k3sv](https://codesandbox.io/s/vue-template-7k3sv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codesandbox.io/s/vue-template-7k3sv\r\n1. Click [button 1]. Note you get to `https://7k3sv.csb.app/anything/123` - which is ok.\r\n1. Click [button 2].\r\n\r\n### What is expected?\r\nYou should get to `https://7k3sv.csb.app/anything/`.\r\n\r\n### What is actually happening?\r\nYou get to `https://7k3sv.csb.app/`.\r\n\r\n---\r\nI checked a couple of vue-router issues in the past, and I noticed posva has his own particular way of assessing bugs, so I know he will say this is not a bug. But is there anyone in vue-router team willing to acknowledge this is a bug? (cc @yyx990803, @kazupon)\r\n\r\nI used the latest vue-router available on npm (3.1.5). My current issue report says I used 3.1.3 because new-issue.vuejs.org does not let me choose 3.1.5. Guys, if you force me using new-issue.vuejs.org when reporting an issue, it would be nice to keep it up-to-date.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3106","RelatedDescription":"Closed issue \"push to named star route with empty pathMatch fails\" (#3106)"},{"Id":"556813703","IsPullRequest":true,"CreatedAt":"2020-01-29T17:17:51","Actor":"adi-zz","Number":"3111","RawContent":null,"Title":"fix: correctly calculate `path` when `pathMatch` is empty string (fix #3106)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->","Url":"https://github.com/vuejs/vue-router/pull/3111","RelatedDescription":"Closed or merged PR \"fix: correctly calculate `path` when `pathMatch` is empty string (fix #3106)\" (#3111)"},{"Id":"554715940","IsPullRequest":false,"CreatedAt":"2020-01-24T12:44:11","Actor":"ejez","Number":"3110","RawContent":null,"Title":"Routes with non-ascii characters are not matched in SSR","State":"open","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://github.com/ejez/vue-router-ssr-issue](https://github.com/ejez/vue-router-ssr-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a basic vue project with ssr and router:\r\n```sh\r\ngit clone https://github.com/ejez/vue-router-ssr-issue\r\ncd vue-router-ssr-issue && yarn\r\n```\r\n2. start project:\r\n```sh\r\nyarn start\r\n```\r\n3. open following link in browser:\r\nhttp://localhost:8080/à-propos\r\n\r\n\r\n### What is expected?\r\nRoute should match and browser should show page contents\r\n\r\n### What is actually happening?\r\n404 error in terminal\r\n\r\n---\r\nWhen on client, the previous route is matched and works normally, this can be checked by initially visiting http://localhost:8080 , and then clicking on the link \"Go To à-propos\".\r\n\r\nAnother route without \"non-ascii characters\" is provided to show that it works normally both in ssr and client:\r\nhttp://localhost:8080/about\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3110","RelatedDescription":"Open issue \"Routes with non-ascii characters are not matched in SSR\" (#3110)"},{"Id":"554520249","IsPullRequest":false,"CreatedAt":"2020-01-24T03:00:39","Actor":"Davilink","Number":"3109","RawContent":null,"Title":"Add Router.options in type definition","State":"closed","Body":"I don't know if it 'as design' or only a oversight, but the property 'options' is missing the Router type definition\r\nhttps://github.com/vuejs/vue-router/blob/256cf3edfc126411febe4573d427949d273a38b8/types/router.d.ts#L16-L59\r\n \r\nhere the property in the js\r\nhttps://github.com/vuejs/vue-router/blob/256cf3edfc126411febe4573d427949d273a38b8/src/index.js#L38","Url":"https://github.com/vuejs/vue-router/issues/3109","RelatedDescription":"Closed issue \"Add Router.options in type definition\" (#3109)"},{"Id":"553081845","IsPullRequest":false,"CreatedAt":"2020-01-22T08:33:06","Actor":"pavinthan","Number":"3108","RawContent":null,"Title":"Set $route meta data dynamically.","State":"closed","Body":"### What problem does this feature solve?\r\nFor SEO / Layout purpose good to have ```$route.setMeta``` method to update current route's meta information because if we view an artical, I'll fetch artical title using route param first, then We can set the page title.\r\n\r\nplease advice me.\r\n\r\n### What does the proposed API look like?\r\nTo update current route meta data\r\n```\r\nthis.$route.setMeta({\r\n    title: \"Example title from service.\"\r\n})\r\n```\r\n\r\nThen we can have separete hook for route modifed like\r\n```\r\nrouter.onUpdate((route) => {\r\n    // do something here\r\n    document.title = route.meta.title;\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3108","RelatedDescription":"Closed issue \"Set $route meta data dynamically.\" (#3108)"},{"Id":"553077559","IsPullRequest":false,"CreatedAt":"2020-01-21T19:22:17","Actor":"pavinthan","Number":"3107","RawContent":null,"Title":"Set $route meta data dynamically.","State":"closed","Body":"This is not a bug report, just a featue request.\r\n\r\nFor SEO / Layout purpose good to have `$route.setMeta` method to update current route's meta information because if we view an artical, I'll fetch artical title using route param first, then We can set the page title.\r\n\r\nplease advice me.","Url":"https://github.com/vuejs/vue-router/issues/3107","RelatedDescription":"Closed issue \"Set $route meta data dynamically.\" (#3107)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"573354462","IsPullRequest":false,"CreatedAt":"2020-02-29T17:41:17","Actor":"zl7261","Number":"1686","RawContent":null,"Title":"How to typescript vuex getter function?","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[ https://github.com/zl7261/vuex_study]( https://github.com/zl7261/vuex_study)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe vuex getters functions can return an anonymous function that can operate state of vuex .\r\nbut how to typescript annotation function param type\r\nif I call vuex getters like this code style \r\n\r\n``` javascript\r\nconst getters = {\r\n    getStateValue(state) {\r\n        return (value) => {\r\n            console.log(value)\r\n            return state[value]\r\n        }\r\n    }\r\n}\r\n```\r\n```javascript \r\nthis.$store.getters.getStateValue('testMsg')\r\n```\r\nActually, 'textMsg' is type of the Inner anonymous function param,\r\nbut if I call the getters method like this, the IDE think state is String type.\r\n\r\n\r\n\r\n### What is expected?\r\nCan be typescript\r\n\r\n### What is actually happening?\r\nI don't know how to use type annotation in this case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1686","RelatedDescription":"Open issue \"How to typescript vuex getter function?\" (#1686)"},{"Id":"562379417","IsPullRequest":true,"CreatedAt":"2020-02-27T14:07:35","Actor":"PeterChen1997","Number":"1679","RawContent":null,"Title":"fix docs description","State":"closed","Body":"I think this 'action' maybe is not the action in Vuex? Maybe using 'mutation' in docs is more specific\r\nI check the englinsh docs, and it's the same word 'action'...\r\nMaybe I misunderstand the mean","Url":"https://github.com/vuejs/vuex/pull/1679","RelatedDescription":"Closed or merged PR \"fix docs description\" (#1679)"},{"Id":"569116559","IsPullRequest":false,"CreatedAt":"2020-02-26T00:53:31","Actor":"davidmeirlevy","Number":"1684","RawContent":null,"Title":"`createNamespacedHelpers` return mappers that need `this`","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/davidmeirlevy/9hbqjmg2/34/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nget a mapper:\r\n`const { mapActions } = createNamespacedHelpers(MODULE_NAME)`\r\n\r\nmap some action:\r\n`const {action} = mapActions(['action'])`\r\n\r\nrun this action directly, without adding it to a component methods:\r\n`action()`\r\n\r\n### What is expected?\r\nthe action should be dispacthed\r\n\r\n### What is actually happening?\r\nThis line breaks because we didn't ran this function from a vue component context:\r\n`var dispatch = this.$store.dispatch;`\r\n\r\n---\r\nwhen we want to use the mappers from the `setup()` function of the composition-api, the component's `this` shouldn't be relevant, so you should probably find another way to map actions without expecting being executed as a vue component's method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1684","RelatedDescription":"Closed issue \"`createNamespacedHelpers` return mappers that need `this`\" (#1684)"},{"Id":"569448568","IsPullRequest":true,"CreatedAt":"2020-02-25T16:56:03","Actor":"davidmeirlevy","Number":"1685","RawContent":null,"Title":"#1684 - wrap namespaced helpers with store ahead","State":"closed","Body":"related to #1684 ","Url":"https://github.com/vuejs/vuex/pull/1685","RelatedDescription":"Closed or merged PR \"#1684 - wrap namespaced helpers with store ahead\" (#1685)"},{"Id":"562476929","IsPullRequest":false,"CreatedAt":"2020-02-21T12:47:59","Actor":"davidpelayo","Number":"1680","RawContent":null,"Title":"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n\r\n- Non-working version, due not binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw](https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw).\r\n- Working version, due binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7](https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7).\r\n\r\n### Steps to reproduce\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `updated` or `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` doesn't get triggered.\r\n\r\nHowever: If you use the getter directly into the component template, it gets correctly reevaluated and the `beforeUpdate` gets triggered.\r\n\r\n### What is expected?\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` gets triggered.\r\n\r\n### What is actually happening?\r\nThe `beforeUpdate` lifecycle method does not get triggered due the reactivity doesn't seem to work correctly, unless you bind the getter directly to the component `<template />`.\r\n\r\n---\r\n#### Context\r\nDue a project's needs, I needed to monitor when the getter value got updated to update a component `data` property, accordingly, and then update the view.\r\n\r\nHowever, a restriction was set in place that the getter couldn't be directly used at the view, because the complexity of the component, the data should have been used instead.\r\n\r\nIt might be that this is actually a feature instead of a bug, requiring binding a getter to the vue to enjoy 100% reactivity from state down to the actual DOM out of the box; but, mentally, the documentation tells you reactivity works so that components can inject getters and get updated values magically; **but not explicitly saying those needs to be declared at the view** (template) - that's why I consider this a bug.\r\n\r\n#### The workaround\r\nWorkaround 1: A simple workaround would consist on setting a dynamic class name or DOM attribute bound to the getter; so that provokes the `updated` to get invoked, and works nicely.\r\n\r\nWorkaround 2: Watch the computed value incoming from the getter, and update your local component state based on the new value.\r\n\r\nHowever, it took me around an hour to debug the whole thing and figure out this topic. **It might be worth to update the documentation if this is actually intended.**\r\n\r\n#### What led me to confusion\r\nThe `beforeUpdate` and `updated` hooks are meant to be triggered only when the virtual DOM needs updates and patching, but not necessarily as a result of the single store being updated. That probably led me to a misleading conception.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1680","RelatedDescription":"Closed issue \"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)\" (#1680)"},{"Id":"567707440","IsPullRequest":false,"CreatedAt":"2020-02-19T17:11:26","Actor":"blacksonic","Number":"1683","RawContent":null,"Title":"Vuex breaks with Vue 3.x upgrade","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todoapp-vue/tree/vue3](https://github.com/blacksonic/todoapp-vue/tree/vue3)\r\n\r\n### Steps to reproduce\r\nvue add vue-next\r\ntry to use the Vuex plugin on the instance returned from createApp\r\n\r\n### What is expected?\r\nVuex plugin added to the app instance\r\n\r\n### What is actually happening?\r\nThe app breaks with console error:\r\n\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n\r\n---\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\nvar version = Number(Vue.version.split('.')[0]);\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1683","RelatedDescription":"Open issue \"Vuex breaks with Vue 3.x upgrade\" (#1683)"},{"Id":"567702944","IsPullRequest":false,"CreatedAt":"2020-02-19T17:04:20","Actor":"blacksonic","Number":"1682","RawContent":null,"Title":"Vuex breaks with Vue 3.x","State":"closed","Body":"I've tried to run a Vue 3 application with Vuex, but when using it as a plugin I get the following error:\r\n\r\n```\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n```\r\n\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\n```javascript\r\nvar version = Number(Vue.version.split('.')[0]);\r\n```\r\n\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.","Url":"https://github.com/vuejs/vuex/issues/1682","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x\" (#1682)"},{"Id":"562244423","IsPullRequest":true,"CreatedAt":"2020-02-14T00:15:32","Actor":"cjihrig","Number":"1678","RawContent":null,"Title":"refactor: remove extra loops in dispatch()","State":"closed","Body":"This commit replaces two chained `filter()`-`forEach()` sequences in `dispatch()` with single `forEach()`s.","Url":"https://github.com/vuejs/vuex/pull/1678","RelatedDescription":"Closed or merged PR \"refactor: remove extra loops in dispatch()\" (#1678)"},{"Id":"564092739","IsPullRequest":false,"CreatedAt":"2020-02-12T15:52:47","Actor":"AlexandreBonaventure","Number":"1681","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vuex export types like here: https://github.com/vuejs/vuex/blob/dev/types/index.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1681","RelatedDescription":"Open issue \"Yarn v2 compat: add vue to peerDependencies\" (#1681)"},{"Id":"561614729","IsPullRequest":false,"CreatedAt":"2020-02-07T12:41:22","Actor":"XemaA","Number":"1677","RawContent":null,"Title":"Dispatching large data cause app craches","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/XemaA/pen/jOPEOqm?editors=0010](https://codepen.io/XemaA/pen/jOPEOqm?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am trying to mutate  a file content's in the state so I can use them in different modules of the app.\r\n```javascript\r\n// In the action : I read file content\r\nreadFile(context, payload) {\r\n    const readStream = fs.createReadStream(payload.filePath);\r\n    Papa.parse(readStream, { header: true }, complete(results) { // here I use papaparse (Papa) to parse file content\r\n        context.commit('testA', results.data); // in case of large file, when I comment this line the app doesn't stop\r\n    });\r\n}\r\n// mutation\r\ntestA(state, payload) {\r\n    state.structData = payload;\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nfile content mutated to state\r\n\r\n### What is actually happening?\r\non case of 23MB size file the app craches without returning any errors or warning\r\n\r\n---\r\nWhen working with small files the process works as expected, the issue appears only with large files ( I am testing 23MB size file)\r\nI am working on electron/vue app\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1677","RelatedDescription":"Open issue \"Dispatching large data cause app craches\" (#1677)"},{"Id":"560738552","IsPullRequest":true,"CreatedAt":"2020-02-06T02:21:56","Actor":"miguelrincon","Number":"1676","RawContent":null,"Title":"fix(#1571): remove undefined payload from dispatch","State":"open","Body":"Fix for #1571\r\n\r\nRemoves unused payloads from the dispatch calls.\r\n\r\n- Original PR at https://github.com/vuejs/vuex/pull/1573.\r\n- Solution was proposed at https://github.com/vuejs/vuex/issues/1571#issuecomment-505838341","Url":"https://github.com/vuejs/vuex/pull/1676","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from dispatch\" (#1676)"},{"Id":"558957076","IsPullRequest":false,"CreatedAt":"2020-02-05T08:55:46","Actor":"HuberTRoy","Number":"1673","RawContent":null,"Title":"Default mutations for set state.","State":"closed","Body":"### What problem does this feature solve?\r\nIf I just want to set a value for one state, I must code: \r\n\r\n```js\r\nconst state = {\r\n     test : 1\r\n}\r\n\r\nconst mutations = {\r\n      setTest(state, value) {\r\n            state.test = value\r\n      }\r\n}\r\n```\r\n\r\nI wrote or read most of the mutations are this kind of. So If `vuex` set default mutations for all states we will reduce most of the mutations set.\r\n\r\n### What does the proposed API look like?\r\n\r\n```js\r\nconst state = {\r\n    test: 1\r\n}\r\n\r\nconst actions = {\r\n      async setTestWhenRequest(context) {\r\n            let res = await axios.get('http://www.new-issue.vuejs.org')\r\n            if ( res.code === 200) {\r\n                  context.commit('$setTest', 2)\r\n            }\r\n      }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1673","RelatedDescription":"Closed issue \"Default mutations for set state.\" (#1673)"},{"Id":"559587635","IsPullRequest":true,"CreatedAt":"2020-02-05T08:52:36","Actor":"kiaking","Number":"1674","RawContent":null,"Title":"ci: fix failing e2e test","State":"closed","Body":"This PR Tries to fix randomly failing e2e test.","Url":"https://github.com/vuejs/vuex/pull/1674","RelatedDescription":"Closed or merged PR \"ci: fix failing e2e test\" (#1674)"},{"Id":"560016091","IsPullRequest":false,"CreatedAt":"2020-02-04T22:25:41","Actor":"ashahbazFV","Number":"1675","RawContent":null,"Title":"Dynamic module state not created with hot loading (preserveState set to true)","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/compassionate-hermann-msyze](https://codesandbox.io/s/compassionate-hermann-msyze)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a module with _vuex-module-decorators_\r\n2. Set the `dynamic` and `preserveState` flags to `true`\r\n    ```ts\r\n    @Module({ dynamic: true, name: 'SomeModule', store, preserveState: true })\r\n    ```\r\n3.  Attempt to access a property of the module, retrieved with `getModule` function to initialise the module from vuex-module-decorators\r\n     ```js\r\n    const someModule = getModule(SomeModule);\r\n    someModule.someProperty;\r\n    ```\r\n4.  Note `someProperty` will be `undefined`\r\n\r\n### What is expected?\r\nWhen installing a dynamic module and there is no state present, a default state should be created\r\n\r\n### What is actually happening?\r\nWhen installing a dynamic module and there is no state present, the module is not registered causing reads to the state for that module to fail.\r\n\r\n---\r\nNOTE: Was unable to reproduce the issue cleanly in CodeSandbox so the reproduction is not working, but the key aspects are still there.\r\n\r\nUpon investigation, it was discovered the [_vuex-module-decorators_](https://github.com/championswimmer/vuex-module-decorators) lib [passes their `preserveState` flag down](https://github.com/championswimmer/vuex-module-decorators/pull/102) to the vuex layer.  When the dynamic module is installed with the `installModule` function and the `hot` option is enabled, the current implementation skips creating any state for the new module.  This introduces side effects, where the module is registered in the vuex store but the state can't be retrieved if there was no state previously present.\r\n\r\nThe [_vuex-persist_](https://github.com/championswimmer/vuex-persist) lib is in use, but it is used to hydrate any past state down to _vuex_.  The store, while using the _vuex-persist_ lib, has the data initialised in the following order.\r\n\r\n1. The store is created by _vuex_ and any known modules are initialised with their default values.\r\n2. If there are data in the local storage within the browser, it is loaded into the store state replacing the default state data.\r\n3. Dynamic modules are added as they are needed.\r\n\r\nUpon modifying the `installModule` function, to check if the state of the new dynamic module exists, the problem is resolved.  Essentially, if the state of the module doesn't currently exist in the `parentState` within the store, then the default module state is created and registered.\r\n\r\nOne set of changes that fix this case are as follows.\r\n\r\nIn [`src/store.js`](https://github.com/vuejs/vuex/blob/dev/src/store.js) the following code seems to be the offending code.\r\n\r\n```js\r\n// set state\r\nif (!isRoot && !hot) {\r\n  const parentState = getNestedState(rootState, path.slice(0, -1))\r\n  const moduleName = path[path.length - 1]\r\n  store._withCommit(() => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (moduleName in parentState) {\r\n        console.warn(\r\n          `[vuex] state field \"${moduleName}\" was overridden by a module with the same name at \"${path.join('.')}\"`\r\n        )\r\n      }\r\n    }\r\n    Vue.set(parentState, moduleName, module.state)\r\n  })\r\n}\r\n```\r\n\r\nWhen modified, the default state is created when the `moduleName` isn't found in the `parentState`.\r\n\r\n```js\r\n// set state\r\nvar parentState = getNestedState(rootState, path.slice(0, -1));\r\nvar moduleName = path[path.length - 1];\r\nvar moduleStateExists = moduleName in parentState\r\nif (!isRoot && (!hot || !moduleStateExists )) {\r\n store._withCommit(function () {\r\n   {\r\n     if (moduleStateExists) {\r\n       console.warn(\r\n         (\"[vuex] state field \\\"\"   moduleName   \"\\\" was overridden by a module with the same name at \\\"\"   (path.join('.'))   \"\\\"\")\r\n       );\r\n     }\r\n   }\r\n   Vue.set(parentState, moduleName, module.state);\r\n });\r\n}\r\n```\r\n\r\nThere may be other ways to fix this issue, this is one potential solution that was discovered after some investigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1675","RelatedDescription":"Open issue \"Dynamic module state not created with hot loading (preserveState set to true)\" (#1675)"},{"Id":"548374675","IsPullRequest":true,"CreatedAt":"2020-02-02T06:41:42","Actor":"huybuidac","Number":"1665","RawContent":null,"Title":"Apply mixins to module","State":"closed","Body":"Support inject common mutations/getters/actions to each Module","Url":"https://github.com/vuejs/vuex/pull/1665","RelatedDescription":"Closed or merged PR \"Apply mixins to module\" (#1665)"},{"Id":"556895643","IsPullRequest":false,"CreatedAt":"2020-01-29T14:23:53","Actor":"Candane","Number":"1672","RawContent":null,"Title":"为什么不推荐使用常量替代 action事件类型?","State":"closed","Body":"为什么不是使用常量代替 Action 类型，通常 Mutation 的类型只在一个 store 使用，如果修改 y 一个类型也在一个 store 里面修改，但是 action 的话可能在很多组件中会使用到，修改的面积会比 Mutation 大得多，为什么官方只推荐使用常量替代 Mutation 事件类型？","Url":"https://github.com/vuejs/vuex/issues/1672","RelatedDescription":"Closed issue \"为什么不推荐使用常量替代 action事件类型?\" (#1672)"},{"Id":"555645733","IsPullRequest":true,"CreatedAt":"2020-01-27T16:09:47","Actor":"kiaking","Number":"1670","RawContent":null,"Title":"#1591 refactor: do not mutate mutation payload in the todo app example","State":"closed","Body":"Issue #1591\r\n\r\nThis PR refactors the mutation logic in todo example to not mutate mutation payload directly in the simplest form.\r\n\r\nIt's still using the reference to todo (at `indexOf`) but I think it's more clearer than before that Vuex recommends to not mutate payload directly.","Url":"https://github.com/vuejs/vuex/pull/1670","RelatedDescription":"Closed or merged PR \"#1591 refactor: do not mutate mutation payload in the todo app example\" (#1670)"},{"Id":"555668976","IsPullRequest":false,"CreatedAt":"2020-01-27T15:57:21","Actor":"steveworkman","Number":"1671","RawContent":null,"Title":" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/dylanbanks96/storybook-demo](https://github.com/dylanbanks96/storybook-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a basic component using Vuex, and add storybook documentation. The component attempts to commit data to vuex state via an action and mutator\r\n\r\nEssentially, I'm trying to commit input field data to my store\r\n\r\n### What is expected?\r\nI'm able to access and modify state\r\n\r\n### What is actually happening?\r\nCannot set reactive property on undefined, null, or primitive value: undefined\" and a TypeError: \"index.js:47 TypeError: Cannot use 'in' operator to search for 'foo' in undefined\".\r\n\r\n---\r\nThis may be a storybook issue, but it may be a Vuex issue as well. I've also raised this on S/O https://stackoverflow.com/questions/59919325/vuex-storybook-cannot-set-reactive-property-on-undefined-null-or-primitive\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1671","RelatedDescription":"Open issue \" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3\" (#1671)"},{"Id":"555507435","IsPullRequest":false,"CreatedAt":"2020-01-27T14:16:39","Actor":"tbetous","Number":"1669","RawContent":null,"Title":"Slow performance using getter references other getter","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tbetous/y4m0keav/53/](https://jsfiddle.net/tbetous/y4m0keav/53/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1 - Write a getter `myGetter` that use another getter `otherGetter` by using `getters` argument\r\n\r\n```js\r\nmyGetter: (state, getters) => {\r\n      console.time('myGetter')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = getters.otherGetter\r\n      }\r\n      console.timeEnd('myGetter')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n2 - Write a getter `myGetterOptimized` that use another getter `otherGetter` by destructuring `getters`\r\n\r\n```js\r\nmyGetterOptimized: (state, {otherGetter}) => {\r\n      console.time('myGetterOptimized')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = otherGetter\r\n      }\r\n      console.timeEnd('myGetterOptimized')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n3 - Compare time execution\r\n\r\n### What is expected?\r\nTime execution should be the same.\r\n\r\n### What is actually happening?\r\nTime execution is different :\r\n- getterOptimized : 0.21999999989930075\r\n- getterNotOptimized : 494.8850000000675\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1669","RelatedDescription":"Closed issue \"Slow performance using getter references other getter\" (#1669)"},{"Id":"554690831","IsPullRequest":false,"CreatedAt":"2020-01-27T01:19:55","Actor":"vicglarson","Number":"1668","RawContent":null,"Title":"dispatch interface returns pending promise instead of resolved","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jtzqmxk3/](https://jsfiddle.net/jtzqmxk3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin this request insterface of dispatch changed\r\nLook at this https://github.com/vuejs/vuex/pull/1115/files#diff-3bf35cd41da51153dcca3003656f7c67R139\r\n\r\nit returns now pending promise for returned true from action instead of resolved. You can see it at jsfiddle console.\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nuntouched Promise.resolve(true) returned by action wrapper\r\nwhen no any action subscribers added\r\n\r\n\r\n### What is actually happening?\r\nreturned pending promise\r\n\r\n---\r\nalso you can look at \r\nhttps://github.com/vuejs/vuex/issues/1572\r\nwhich targets the same pull request\r\n\r\nPerhaps I have bad assumptions. But behavior for trivial action response is not specified here https://vuex.vuejs.org/ru/guide/actions.html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1668","RelatedDescription":"Closed issue \"dispatch interface returns pending promise instead of resolved\" (#1668)"},{"Id":"552158159","IsPullRequest":true,"CreatedAt":"2020-01-20T08:56:42","Actor":"Zhwt","Number":"1667","RawContent":null,"Title":"docs: Add clarity of module definition","State":"open","Body":"Add documentation clarity of module definition","Url":"https://github.com/vuejs/vuex/pull/1667","RelatedDescription":"Open PR \"docs: Add clarity of module definition\" (#1667)"},{"Id":"548553432","IsPullRequest":true,"CreatedAt":"2020-01-12T23:55:24","Actor":"huybuidac","Number":"1666","RawContent":null,"Title":"Store adds reset function that helps reset to initial state","State":"closed","Body":"Currently, there is no true way to reset to initial state.\r\n\r\nAdding Reset function to do that.\r\n\r\nFixes: https://github.com/vuejs/vuex/issues/1118","Url":"https://github.com/vuejs/vuex/pull/1666","RelatedDescription":"Closed or merged PR \"Store adds reset function that helps reset to initial state\" (#1666)"},{"Id":"547194166","IsPullRequest":false,"CreatedAt":"2020-01-09T01:22:33","Actor":"wangqiang66","Number":"1664","RawContent":null,"Title":"Typescript下webpack热更新 actions多次执行","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[http://localhost:9529/login](http://localhost:9529/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. typescript 正常书写modules 例如添加\r\n@Action\r\npublic login() {}\r\n2. webpack 采用热更新方式\r\n3.修改modules代码 例如public login() { console.log(test)} 保存\r\n\r\n### What is expected?\r\n执行login的时候的用更新的代码\r\n\r\n### What is actually happening?\r\n以前的方法和新的方法都执行\r\n\r\n\r\n---\r\n热更新才会出现，需要动态的修改源码， 无法提供重现链接\r\n\r\n正常打包不会出现这个问题，热更新的时候才会出现\r\n\r\n查看store._actions 发现login对象是一个数组，有两条数据\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1664","RelatedDescription":"Open issue \"Typescript下webpack热更新 actions多次执行\" (#1664)"},{"Id":"546753496","IsPullRequest":false,"CreatedAt":"2020-01-08T09:51:42","Actor":"wangqiang66","Number":"1663","RawContent":null,"Title":"Typescript webpack 热加载开发模式下修改store/modules的内容。store._actions下面会多加一个事件","State":"closed","Body":"如图\r\n\r\n![image](https://user-images.githubusercontent.com/9331467/71968195-62caae80-323f-11ea-92fb-c4abaa90a3bf.png)\r\n\r\n旧的事件没有删除，导致会触发以前的方法","Url":"https://github.com/vuejs/vuex/issues/1663","RelatedDescription":"Closed issue \"Typescript webpack 热加载开发模式下修改store/modules的内容。store._actions下面会多加一个事件\" (#1663)"},{"Id":"546444301","IsPullRequest":false,"CreatedAt":"2020-01-07T18:41:53","Actor":"BonBonSlick","Number":"1662","RawContent":null,"Title":"Error in v-on handler: \"TypeError: Cannot destructure property 'data' of 'undefined' as it is undefined.\"","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1662","RelatedDescription":"Closed issue \"Error in v-on handler: \"TypeError: Cannot destructure property 'data' of 'undefined' as it is undefined.\"\" (#1662)"},{"Id":"545746876","IsPullRequest":false,"CreatedAt":"2020-01-06T14:11:39","Actor":"wangzhiyao66","Number":"1661","RawContent":null,"Title":"Vue项目报错：Uncaught SyntaxError: Unexpected token <","State":"closed","Body":"1. Vue  and  Typescript Projects built\r\n2.I want to use webworker to count user data,\r\n3. The code snippet is as follows\r\n// webworker.js\r\n`\r\nonmessage = function (event) {\r\n  // postmessage的参数\r\n  const eventData = {\r\n    token: event.data.token,\r\n    requestData: event.data,\r\n    url: event.data.url,\r\n  }\r\n\r\n  // 请求地址 在 worker.service.ts 里面\r\n\r\n  const sleep = function (time) {\r\n    /**\r\n     *\r\n     * @param {*} data 请求参数\r\n     * @param {*} callback 请求成功回掉函数\r\n     */\r\n    var xhr = function (data, callback) {\r\n      // console.log('worker 参数', data);\r\n      const workerdata = JSON.parse(JSON.stringify(data));\r\n      if (workerdata) {\r\n        delete workerdata.token;\r\n        delete workerdata.url;\r\n      }\r\n      // fetch 请求方式\r\n      fetch(eventData.url, {\r\n        body: JSON.stringify(workerdata), // must match 'Content-Type' header\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + eventData.token,\r\n          \"Content-Type\": \"application/json;charset=UTF-8\"\r\n        },\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      })\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          throw new Error('Network response was not ok.');\r\n        })\r\n        .then(function (data) {\r\n          // console.log(JSON.stringify(data));\r\n          // console.table(data);\r\n          console.log('%c webworker请求成功 fetch方式 开始收集数据', 'color:orange');\r\n          callback();\r\n        }, function (err) {\r\n          console.error(err);\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      const obj = {\r\n        data: 'ok',\r\n        type: 'worker'\r\n      };\r\n\r\n      xhr(eventData.requestData, function () {\r\n        resolve(obj);\r\n      });\r\n    });\r\n  };\r\n\r\n  // 立即执行的 async 函数\r\n  (async () => {\r\n    const result = await sleep(event.data);\r\n    postMessage(result);\r\n    // console.log('在使用importScripts()的文件中调用：' + kk());\r\n    close();\r\n  })();\r\n};\r\n`\r\n// An error occurred during a method call\r\n\r\n`\r\n        if (typeof Worker !== 'undefined') {\r\n            this.worker = new Worker('../../../../../static/js/webworker.js'); // 需要每次都调用打开一个woker\r\n            console.log( 'msg =========', msg);\r\n      \r\n            // 可以序列化为JSON结构的任何值都可以作为参数传递给 postMessage();\r\n            this.worker.postMessage(msg);\r\n            this.worker.onmessage = (event: any) => {\r\n              this.worker_data = event.data;\r\n            };\r\n            console.log('start Web Workers...');\r\n          } else {\r\n            console.log('Sorry, your browser does not support Web Workers...');\r\n          }\r\n`\r\n\r\n\r\nI need your help to solve this problem. Thank you very much","Url":"https://github.com/vuejs/vuex/issues/1661","RelatedDescription":"Closed issue \"Vue项目报错：Uncaught SyntaxError: Unexpected token <\" (#1661)"},{"Id":"543671710","IsPullRequest":false,"CreatedAt":"2019-12-30T01:52:06","Actor":"phymo","Number":"1660","RawContent":null,"Title":"Vuex 3.1.2 shows TSlint Error","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/phymo/pen/bGNrJVQ](https://codepen.io/phymo/pen/bGNrJVQ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvuex 3.1.2 shows tslint error: \r\n/node_modules/vuex/types/helpers.d.ts(8,85):\r\nTS2370: A rest parameter must be of an array type.\r\n/node_modules/vuex/types/helpers.d.ts(8,120):\r\nTS2370: A rest parameter must be of an array type.\r\n\r\n\r\n### What is expected?\r\nno error\r\n\r\n### What is actually happening?\r\nupdated to 3.1.2 then error occurs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1660","RelatedDescription":"Open issue \"Vuex 3.1.2 shows TSlint Error\" (#1660)"},{"Id":"542311819","IsPullRequest":false,"CreatedAt":"2019-12-25T11:22:55","Actor":"SunGuoQiang123","Number":"1659","RawContent":null,"Title":"mapMutations and mapActions not usable in mixin","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/sungunguoqiang/pen/vYEZmpN?editors=1112](https://codepen.io/sungunguoqiang/pen/vYEZmpN?editors=1112)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nApp component created hook executed, the error emit  `this.TEST is not a function`\r\n\r\n### What is expected?\r\nno error happen\r\n\r\n### What is actually happening?\r\nan error emitted when called in created hook, and also mapActions also has the same problem.\r\nif call by the `this.$store.commit('TEST')`, it's right\r\n\r\n---\r\n`mapState ` and `mapGetters` are right, but `mapMutations` and `mapActions` are not right\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1659","RelatedDescription":"Closed issue \"mapMutations and mapActions not usable in mixin\" (#1659)"},{"Id":"542247801","IsPullRequest":false,"CreatedAt":"2019-12-25T08:23:54","Actor":"galenyuan","Number":"1658","RawContent":null,"Title":"Change of state not dispatch to component","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/sx9e7fav/](http://jsfiddle.net/sx9e7fav/)\r\n\r\n### Steps to reproduce\r\nOpen the reproduce link.\r\n\r\n### What is expected?\r\nshould display email list\r\n\r\n### What is actually happening?\r\nThe placeholder value 「-」 displayed\r\n\r\n---\r\njsfiddle can not use Vue  devtool, so you can copy this code in a html file and run a HTTP Server.\r\n```html\r\n<html>\r\n  <head>\r\n    <title>demo</title>\r\n    <script src=\"https://unpkg.com/vue@2.6.11/dist/vue.min.js\"></script>\r\n    <script src=\"https://unpkg.com/vuex@3.1.2/dist/vuex.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <ul id=\"demo\">\r\n      <li v-for=\"item in list\">{{ users[item.userid] ? users[item.userid].email : '-' }}</li>\r\n    </ul>\r\n    <script>\r\n      Vue.config.devtools = true\r\n      const getUserById = (id) => {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve({\r\n              id,\r\n              email: `${id}@email.com`\r\n            })\r\n          }, 1000)\r\n        })\r\n      }\r\n      const store = new Vuex.Store({\r\n        state: {\r\n          users: {}\r\n        },\r\n        mutations: {\r\n          addUser(state, user) {\r\n            state.users[user.id] = user\r\n          }\r\n        },\r\n        actions: {\r\n          async getUser(ctx, id) {\r\n            if (id in ctx.state.users) return\r\n            ctx.commit('addUser', { id, email: '-' })\r\n            const user = await getUserById(id)\r\n            ctx.commit('addUser', user)\r\n          }\r\n        }\r\n      })\r\n      const app = new Vue({\r\n        store,\r\n        el: '#demo',\r\n        data: {\r\n          list: [\r\n            { userid: 1 },\r\n            { userid: 2 },\r\n            { userid: 3 },\r\n            { userid: 4 },\r\n            { userid: 5 },\r\n          ]\r\n        },\r\n        computed: {\r\n          ...Vuex.mapState(['users'])\r\n        },\r\n        methods: {\r\n          ...Vuex.mapActions(['getUser'])\r\n        },\r\n        created() {\r\n          this.list.forEach(item => {\r\n            this.getUser(item.userid)\r\n          })\r\n        }\r\n      });\r\n    </script>\r\n  </body>\r\n</html>\r\n```\r\nLet's check in Vue devtool, we can find mutaion has triggered and state changed:\r\n![image](https://user-images.githubusercontent.com/10335062/71431526-4aba4180-270d-11ea-88c6-3e1c4f28e265.png)\r\n\r\nThen lets try a Time Travel:\r\n![image](https://user-images.githubusercontent.com/10335062/71431539-64f41f80-270d-11ea-9f7c-5334108adc57.png)\r\n\r\nThen the page gose to what I want:\r\n![image](https://user-images.githubusercontent.com/10335062/71431555-7d643a00-270d-11ea-9a23-d38a68878bc6.png)\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1658","RelatedDescription":"Closed issue \"Change of state not dispatch to component\" (#1658)"},{"Id":"538511187","IsPullRequest":false,"CreatedAt":"2019-12-16T16:16:11","Actor":"andywuzh","Number":"1657","RawContent":null,"Title":"mapGetter dosen't work with namespaced module","State":"closed","Body":"**Version**\r\n3.1.2\r\n\r\n**Steps to reproduce**\r\n\r\n```javascript\r\n// store/modules/todo.js\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    todos: [\r\n      { id: 1, title: 'something todo' }\r\n    ]\r\n  },\r\n  getters: {\r\n    getTodo: state => id => state.todos.filter(todo => todo.id === id)[0]\r\n  }\r\n}\r\n\r\n\r\n// a component.vue\r\nmethods: {\r\n  ...mapGetters('todo', ['getTodo']),\r\n  someMethod: {\r\n    console.log(this.getTodo(1))\r\n\r\n    // this work!\r\n    console.log(this.getTodo()(1))\r\n  }\r\n}\r\n\r\n```\r\n\r\n**What is expected?**\r\n\r\n```this.getTodo(1)``` should return ``` {id: 1, title: 'something todo'}```\r\n\r\n**What is actually happening?**\r\n\r\nit return a callable function same as ```getTodo```: \r\n```javascript\r\nƒ (id) {\r\n  return state.filter(function (s) {\r\n    return s.id == id;\r\n  })[0];\r\n}\r\n```\r\n\r\n-----\r\nThere is no more details about how to use ```mapGetters``` with **namespaced** module in the [doc](https://vuex.vuejs.org/api/#mapgetters).\r\nAm I miss something or it should not be used in this way?\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1657","RelatedDescription":"Closed issue \"mapGetter dosen't work with namespaced module\" (#1657)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-01T05:30:51.6015353Z","RunDurationInMilliseconds":2124}