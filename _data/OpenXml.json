{"Data":{"Sdk":{"Events":[{"Id":"6868048208","Type":"IssuesEvent","CreatedAt":"2017-11-17T04:16:54","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/246","RelatedDescription":"Closed issue \"Docx into SQL Server table\" (#246) at OfficeDev/Open-XML-SDK","RelatedBody":"Would it be possible with this tool to parse an existing Docx document and grab its data to send to a SQL Server database? "},{"Id":"6868043390","Type":"IssuesEvent","CreatedAt":"2017-11-17T04:14:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/237","RelatedDescription":"Closed issue \"It convert math formulas, SmartArt, or DrawingML drawings to image.Is it feasible?\" (#237) at OfficeDev/Open-XML-SDK","RelatedBody":"hi , I want It convert math formulas, SmartArt, or DrawingML drawings to image . Is it feasible?\r\nWhen using it to convert to HTML"},{"Id":"6868038999","Type":"IssuesEvent","CreatedAt":"2017-11-17T04:12:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/77","RelatedDescription":"Closed issue \"Validator reports error for valid \"0\" values in pageSetup attributes\" (#77) at OfficeDev/Open-XML-SDK","RelatedBody":"I identified the following attributes in pageSetup that trigger a \"Sem_AttributeValueDataTypeDetailed\" error when they have value 0:\n\n\"copies\",\n\"firstPageNumber\",\n\"fitToHeight\",\n\"fitToWidth\",\n\"paperSize\",\n\"scale\",\n\"verticalDpi\",\n\"horizontalDpi\"\n\nThe value 0 is acceptable in the specification: [https://msdn.microsoft.com/en-us/library/documentformat.openxml.spreadsheet.pagesetup(v=office.14).aspx](https://msdn.microsoft.com/en-us/library/documentformat.openxml.spreadsheet.pagesetup%28v=office.14%29.aspx).\n\nThere might be more unsigned attribute values in this tag or others which cause such false validation errors.\n"},{"Id":"6868036244","Type":"IssuesEvent","CreatedAt":"2017-11-17T04:11:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/129","RelatedDescription":"Closed issue \"How I can detect \"filled markers\" list item ?\" (#129) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,  \r\nI need detect TextBody/Paragraphs with markers. All markers type has a mark \"CharacterBullet\" or \"NoBullet\", but one of these hasn't any mark.\r\n\r\nHere is a slide with TextBody which contains undetected markers:\r\n![1](https://cloud.githubusercontent.com/assets/23737443/20787636/886ba5b4-b7df-11e6-9270-334fbf61399f.png)\r\n\r\nHow I can detect theirs ?"},{"Id":"6868029241","Type":"IssuesEvent","CreatedAt":"2017-11-17T04:08:04","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/70","RelatedDescription":"Closed issue \"Receive exception when accessing SharedStringTablePart from multiple threads simultaneously\" (#70) at OfficeDev/Open-XML-SDK","RelatedBody":"I get this exception even when I open the file using read only attributes.  So why couldn't multiple threads that have a read only view of the file open be able to read the SharedStringTable Part?\n\n```\n// Open System.IO.Packaging.Package.\n            Package spreadsheetPackage = Package.Open(in_ss, FileMode.Open, FileAccess.Read);\n\n            // Open a SpreadsheetDocument based on a package.\n            SpreadsheetDocument document = SpreadsheetDocument.Open(spreadsheetPackage);\n            workbookPart = document.WorkbookPart;\n\n            SharedStringTablePart shareStringPart = null;\n            if (workbookPart.GetPartsCountOfType<SharedStringTablePart>() > 0)\n            {\n                shareStringPart = workbookPart.GetPartsOfType<SharedStringTablePart>().FirstOrDefault();\n            }\n\ntext = shareStringPart.SharedStringTable.ElementAt(\n                            Convert.ToInt32(cell.CellValue.Text)).InnerText;\n```\n\nSystem.IO.InvalidDataException was unhandled by user code\n  HResult=-2146233087\n  Message=A local file header is corrupt.\n  Source=System.IO.Compression\n  StackTrace:\n       at System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable(Boolean needToUncompress, Boolean needToLoadIntoMemory)\n       at System.IO.Compression.ZipArchiveEntry.OpenInReadMode(Boolean checkOpenable)\n       at System.IO.Compression.ZipArchiveEntry.Open()\n       at System.IO.Packaging.ZipStreamManager.Open(ZipArchiveEntry zipArchiveEntry, FileMode streamFileMode, FileAccess streamFileAccess)\n       at System.IO.Packaging.ZipPackagePart.GetStreamCore(FileMode streamFileMode, FileAccess streamFileAccess)\n       at System.IO.Packaging.PackagePart.GetStream(FileMode mode, FileAccess access)\n       at DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream(FileMode mode, FileAccess access)\n       at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\n       at DocumentFormat.OpenXml.Packaging.SharedStringTablePart.get_SharedStringTable()\n       at SRPPEVL.Program.ReadExcelCell(Cell cell, SharedStringTablePart shareStringPart) in c:\\users\\ramiller\\documents\\visual studio 2015\\Projects\\SRPPEVL\\SRPPEVL\\Program.cs:line 117\n"},{"Id":"6868004819","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:57:19","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/186","RelatedDescription":"Closed issue \"Unit tests take too long to run\" (#186) at OfficeDev/Open-XML-SDK","RelatedBody":"I've seen the following statement in the release notes for Version 2.6.1:\r\n\r\n> Added hundreds of XUnit tests. There are now a total of 1333 tests. They take about 20 minutes to run, so be patient.\r\n\r\n20 minutes for running \"unit tests\" is clearly too long and defeats the purpose. Who will make a code change and then run those unit tests, possibly even multiple times?\r\n\r\nMind you I have also written a few of those unit tests. Those tests, like many others, access the file system. Like any other persistence operation, we should avoid this in \"real\" unit tests.\r\n\r\nFor example, in recent unit tests that I've written for a file service client library, which provides an abstraction of the local file system, OneDrive for Business, and SharePoint Online at the moment, I've used the [Moq](https://github.com/moq/moq4) and [System.IO.Abstractions.TestingHelpers](https://www.nuget.org/packages/System.IO.Abstractions.TestingHelpers/) libraries for mocking to avoid file and network I/O. Many of those unit tests run in the order of milliseconds (and a good number in just 1 millisecond) or tens of milliseconds.\r\n\r\nI've also produced \"integration tests\" which access OneDrive for Business and SharePoint Online. These take a couple of hundred milliseconds (e.g., up to 700-900 milliseconds) to run. So, just because those \"integration tests\" perform actual I/O, they are two orders of magnitude -- or up to a factor of 900 in my example -- slower than the \"real\" unit tests.\r\n\r\n20 minutes for 1.333 tests means 900 milliseconds on average per test. Based on my example above, we might be able to reduce this by a factor of 10 to 100. One approach might be to:\r\n\r\n- classify tests, identifying those that really require file I/O (the \"**Integration Tests**\") vs. those that don't, even if they currently access the file system unnecessarily (the \"**Unit Tests**\");\r\n- have two test projects, one for Integration Tests and one for Unit Tests;\r\n- move the tests to their respective projects; and\r\n- fix the Unit Tests to improve their performance.\r\n\r\nCheck out the [System.IO.Abstractions](https://github.com/tathamoddie/System.IO.Abstractions) for a library that provides an injectable and testable API that otherwise provides the same functionality as the System.IO namespace. I've used this library to implement my local file service client, because that turns it into a library which, through injection by way of an IoC container (e.g., [Autofac)](https://github.com/autofac/Autofac), can be unit tested without actually accessing the local file system."},{"Id":"6868002785","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:56:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/167","RelatedDescription":"Closed issue \"Opening generated Xlsx in numbers (iOS) doesn't work.\" (#167) at OfficeDev/Open-XML-SDK","RelatedBody":"Using the following code, i generate an xlsx document. which i can open in Excel 2016 but when i open it in Numbers (iOS) i see the worksheet name, but i don't see any data in the sheet. (its just blank, I don't even see cells).\r\n\r\nWhen i open in excell => save => open in Numbers (iOS) it does open.\r\n\r\nBiggest changes that happen after saving in Excel:\r\n\r\n* Styles.xml is filled with default styling (it was empty)\r\n* xl/theme/theme1.xml is added\r\n* docProps/app.xml is added\r\n* docProps/core.xml is added\r\n* xl/workhseet/sheet.xml is renamed to => xl/worksheet/sheet1.xml\r\n* some rels are added for docprops.\r\n\r\nCode: \r\n```\r\n///Stream is mem stream written into output stream.\r\nusing (var ssd = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook))\r\n{ \r\n    ssd.AddWorkbookPart();\r\n    ssd.WorkbookPart.Workbook = new Workbook();\r\n    ssd.WorkbookPart.Workbook.Save();\r\n    var sharedStringTablePart = ssd.WorkbookPart.AddNewPart<SharedStringTablePart>();\r\n    sharedStringTablePart.SharedStringTable = new SharedStringTable();\r\n    sharedStringTablePart.SharedStringTable.Save();\r\n    ssd.WorkbookPart.Workbook.Sheets = new Sheets();\r\n    ssd.WorkbookPart.Workbook.Save();\r\n    var workbookStylesPart = ssd.WorkbookPart.AddNewPart<WorkbookStylesPart>();\r\n    workbookStylesPart.Stylesheet = new Stylesheet();\r\n    workbookStylesPart.Stylesheet.Save();\r\n    var worksheetPart = ssd.WorkbookPart.AddNewPart<WorksheetPart>();\r\n    worksheetPart.Worksheet = new Worksheet(new SheetData()) {};\r\n    worksheetPart.Worksheet.Save();\r\n    var sheets = ssd.WorkbookPart.Workbook.GetFirstChild<Sheets>();\r\n    var sheet = new Sheet\r\n    {\r\n        Id = ssd.WorkbookPart.GetIdOfPart(worksheetPart),\r\n        SheetId = (uint) (ssd.WorkbookPart.Workbook.Sheets.Count() + 1),\r\n        Name = \"translations\"\r\n    };\r\n    sheets.Append(sheet);\r\n    ssd.WorkbookPart.Workbook.Save();\r\n    var wbPart = ssd.WorkbookPart;\r\n    worksheetPart = wbPart.WorksheetParts.First();\r\n    var sheetdata = worksheetPart.Worksheet.GetFirstChild<SheetData>();\r\n    var headerColumns = new[] {\"ResourceKey\", \"Value\", \"LocaleId\", \"GroupName\"};\r\n    var r = new Row();\r\n    Cell cell;\r\n    uint rowIndexer = 1;\r\n    var columnIndexer = 1;\r\n    r.RowIndex = rowIndexer;\r\n    foreach (string t in headerColumns)\r\n    {\r\n        var i  = InsertSharedStringItem(t, sharedStringTablePart);\r\n        cell = new Cell\r\n        {\r\n            CellReference = ColumnName(columnIndexer) + rowIndexer,\r\n            DataType = CellValues.SharedString,\r\n            CellValue = new CellValue(i.ToString())\r\n        };\r\n        r.AppendChild(cell);\r\n\r\n        columnIndexer++;\r\n    }\r\n    sheetdata.Append(r);\r\n    worksheetPart.Worksheet.Save();\r\n    wbPart.Workbook.Save();\r\n\r\n    ssd.Close();\r\n}\r\n```"},{"Id":"6867997738","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:54:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/221","RelatedDescription":"Reopened issue \"Can't read the xlsx file.\" (#221) at OfficeDev/Open-XML-SDK","RelatedBody":"When I use the following code：\r\n[https://msdn.microsoft.com/en-us/library/office/gg575571.aspx](https://msdn.microsoft.com/en-us/library/office/gg575571.aspx)\r\n```\r\nstatic void ReadExcelFileDOM(string fileName)\r\n{\r\n    using (SpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.Open(fileName, false))\r\n    {\r\n        WorkbookPart workbookPart = spreadsheetDocument.WorkbookPart;\r\n        WorksheetPart worksheetPart = workbookPart.WorksheetParts.First();\r\n        SheetData sheetData = worksheetPart.Worksheet.Elements<SheetData>().First();\r\n        string text;\r\n        foreach (Row r in sheetData.Elements<Row>())\r\n        {\r\n            foreach (Cell c in r.Elements<Cell>())\r\n            {\r\n                text = c.CellValue.Text;\r\n                Console.Write(text + \" \");\r\n            }\r\n        }\r\n        Console.WriteLine();\r\n        Console.ReadKey();\r\n    }\r\n}\r\n```\r\n\r\n\r\n SpreadsheetDocument.Open() will report error\r\n**PackageRelationship target must be relative URI if TargetMode is Internal.\r\nParameter name: targetUri**\r\n![ece33856-977e-4ca2-a4ed-130577397063](https://user-images.githubusercontent.com/13383393/28519921-0782dae2-70a0-11e7-8870-af5043796c80.png)\r\n\r\n\r\nIDE: Visual Studio for Mac\r\n.NET Runtime: Mono 5.0.1.1\r\nOpenXML: 2.7.2.0\r\nOS: macOS 10.12.5 "},{"Id":"6867995841","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:53:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/59","RelatedDescription":"Closed issue \"Request to change .xlsx file content to match standard Excel\" (#59) at OfficeDev/Open-XML-SDK","RelatedBody":"This is a request to change the Microsoft Open XML SDK to product .xlsx files that match Excel for Android, the OneDrive version of Excel, and Excel for Windows (Excel 2010 is the version that I tested).\n\nMicrosoft Excel for Android, the OneDrive version of Excel, and Excel for Windows (Excel 2010) all produce .xlsx files that contain a docProps folder and a _rels/.rels file whose xml content does not include a leading slash before the xl/workbook.xml reference.\n\nThe SDK, however, produces .xlsx files that do not contain the docProps folder and the _rels/.rels file includes a leading slash before the xl/workbook.xml reference (i.e., \"/xl/workbook.xml\").\n\nThis discrepancy with the SDK results appears to cause other utilities, such as Google Sheets, to view files produced using the SDK as outdated.\n"},{"Id":"6867994436","Type":"PullRequestEvent","CreatedAt":"2017-11-17T03:52:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/267","RelatedDescription":"Merged pull request \"Use a UriKind.RelativeOrAbsolute wrapper for Mono support\" (#267) at OfficeDev/Open-XML-SDK","RelatedBody":"In .NET new Uri (\"/foo\", UriKind.RelativeOrAbsolute) returns a relative\r\nUri whereas Mono assumes it is an absolute file path.\r\nMono diverges from .NET because UNIX file paths starting with\r\n'/' are absolute file paths.\r\n\r\nThis change introduces a UriHelper class that provides a workaround by\r\nredefining RelativeOrAbsolute to a Mono specific value when on that\r\nplatform.\r\n\r\nFor more information, see:\r\nwww.mono-project.com/docs/faq/known-issues/urikind-relativeorabsolute/\r\n\r\nFixes #249, #221, #59"},{"Id":"6867994432","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:52:48","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/249","RelatedDescription":"Closed issue \"Issue with creating docx file on Mac using .net core 2.0 (corrupted docx file) \" (#249) at OfficeDev/Open-XML-SDK","RelatedBody":"I am trying to use DocumentFormat.OpenXml on Mac (& .NETcore 2.0.0) to create docx file. \r\nSimple code like this ends up with unusable(corrupted) document:\r\n\r\n```\r\n public void CreateDocx(String path)\r\n        {\r\n\r\n            using (WordprocessingDocument wordDocument =\r\n                   WordprocessingDocument.Create(path, WordprocessingDocumentType.Document))\r\n            {\r\n                MainDocumentPart mainPart = wordDocument.AddMainDocumentPart();\r\n                mainPart.Document = new DocumentFormat.OpenXml.Wordprocessing.Document();\r\n                Body body = mainPart.Document.AppendChild(new Body());\r\n                Paragraph para = body.AppendChild(new Paragraph());\r\n                Run run = para.AppendChild(new Run());\r\n                run.AppendChild(new Text(\"Create text in body - CreateWordprocessingDocument\"));\r\n            }\r\n        }\r\n```\r\n\r\nI can load existing file and append some text in it, no problem there. But, creating new docx results with corrupted file. \r\nWhen I unzip docx and compare it with the unzipped docx file I can read with standard editors, I see that there are many files missing in my created docx (even though I am not sure if all of those are needed). \r\n\r\nI have tried version 2.7.2 and 2.8 with the same results. \r\nI am using OSX 10.12.6 (Sierra), Visual Studio 2017 for Mac, .NETcore 2.0.0\r\n"},{"Id":"6867993361","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:52:21","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/87","RelatedDescription":"Closed issue \"Productivity Tool validation vs OpenXmlValidator\" (#87) at OfficeDev/Open-XML-SDK","RelatedBody":"I'm seeing the OpenXmlValidator v2.6.0 report some errors not being reported by the 2.5 SDK Productivity Tool.  Is this to be expected?\n"},{"Id":"6867991110","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:51:25","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/74","RelatedDescription":"Closed issue \"[OSX/MONO] 'The entry is already currently open for writing' errors when running tests\" (#74) at OfficeDev/Open-XML-SDK","RelatedBody":"When trying to run the unit test of OSX/Mono 4.3.3, I get some test failures along the lines of\n\n```\nDocumentFormat.OpenXml.Tests.OpenXmlPackageTest.PackageValidateTest [FAIL]\n      System.IO.IOException : The entry is already currently open for writing.\n      Stack Trace:\n           at System.IO.Compression.ZipArchiveEntry.Open () <0x11475a8f0 + 0x00155> in <filename unknown>:0 \n           at System.IO.Packaging.ZipStreamManager.Open (System.IO.Compression.ZipArchiveEntry zipArchiveEntry, FileMode streamFileMode, FileAccess streamFileAccess) <0x11475a660 + 0x00113> in <filename unknown>:0 \n           at System.IO.Packaging.ZipPackagePart.GetStreamCore (FileMode streamFileMode, FileAccess streamFileAccess) <0x11475a430 + 0x00057> in <filename unknown>:0\n```\n\nWhich look to be down to calling zipStreamManager.Open twice in ZipPackagePart.GetStreamCore() (https://github.com/OfficeDev/Open-XML-SDK/blob/vNext/System.IO.Packaging/ZipPackagePart.cs#L50).\n\nNot sure if there is a Mono issue here with something not being closed, but besides that, is it actually necessary to open the stream twice here?\n"},{"Id":"6867986780","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:49:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/73","RelatedDescription":"Closed issue \"[OSX] test failures due to hard coded path separators?\" (#73) at OfficeDev/Open-XML-SDK","RelatedBody":"I just tried to run some document handling code that i'm trying to port from Windows to OS X/Mono using the latest SDK/system.io.packaging, and some some errors that seem to be down to zip handling.\nI thought i'd give the units test a go to see what those do, and got rather a lot of failures.\n\nHowever, looking at the output, a load of those look as though they could be down to hard coded path separators in the tests.\n\ne,g,\n\n   DocumentFormat.OpenXml.Tests.DocumentTraverseTest.TraverseWordDocument [FAIL]\n      System.IO.DirectoryNotFoundException : Directory '/Users/rwebb/Documents/gitrepos/Open-XML-SDK/TestDataStorage/v2FxTestFiles/wordprocessing\\paragraph' not found.\n\nI'm guessing that the paths in /DocumentFormat.OpenXml.Tests/OpenXmlDomTest/OpenXmlCompositeElementTestClass.cs should be using the system path separator char instead of hardcoding things like @\"presentation\\smallset\" ?\n"},{"Id":"6867984731","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:48:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/64","RelatedDescription":"Closed issue \"Operation is not supported.\" (#64) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\n\nBelow is the inner exception, seems Mono's DeflateStream not support something.\n\n```\n  at System.IO.Compression.DeflateStream.get_Length () [0x00000] in /private/tmp/source-mono-mac-4.0.0-branch-c5sr5/bockbuild-mono-4.0.0-branch/profiles/mono-mac-xamarin/build-root/mono-4.0.5/mcs/class/System/System.IO.Compression/DeflateStream.cs:297 \n  at System.IO.Packaging.ZipWrappingStream.get_Length () [0x0004e] in <filename unknown>:0 \n  at OpenXmlPowerTools.PtOpenXmlExtensions.GetXDocument (DocumentFormat.OpenXml.Packaging.OpenXmlPart part) [0x0001f] in /Users/Edison/Developer/Source/dotnet/open-xml-powertools/OpenXmlPowerTools/PtOpenXmlUtil.cs:54 \n```\n\nCheers,\n## \n\nEdison\n"},{"Id":"6867965185","Type":"IssuesEvent","CreatedAt":"2017-11-17T03:40:34","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/107","RelatedDescription":"Closed issue \"Invalid IL Code. Xamarin console exe on OSX\" (#107) at OfficeDev/Open-XML-SDK","RelatedBody":"Stack trace.....\n\nUnhandled Exception:\nSystem.InvalidProgramException: Invalid IL code in System.IO.Packaging.Package:Open (string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare): method body is empty.\n\n  at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore (System.String path, System.Boolean readWriteMode) [0x00021] in <a7316bf1edfd42b484fda64cef0dcf01>:0 \n  at DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open (System.String path, System.Boolean isEditable, DocumentFormat.OpenXml.Packaging.OpenSettings openSettings) [0x000a6] in <a7316bf1edfd42b484fda64cef0dcf01>:0 \n  at DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open (System.String path, System.Boolean isEditable) [0x00007] in <a7316bf1edfd42b484fda64cef0dcf01>:0 \n\nCode Fragment....\n       public static void MakeMig(string documentDir, string templateFile, Model model, WordMig documentBuilder)\n        {\n            var targetFile = Path.Combine(documentDir, model.ModelName + \".docx\");\n\n```\n        File.Copy( templateFile, targetFile,true);\n        using (var migDoc = WordprocessingDocument.Open(targetFile,true)) //error here\n```\n\nFile that is being opened attached....\n[Distributor Model.docx](https://github.com/OfficeDev/Open-XML-SDK/files/502399/Distributor.Model.docx)\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6854049048","Type":"IssuesEvent","CreatedAt":"2017-11-14T17:34:45","Actor":"MalcolmJohnston","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/191","RelatedDescription":"Opened issue \"Document Assembler: Ability to merge in whole Word Documents or other Document Assembler templates\" (#191) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello, \r\n\r\nI wanted to check whether the above functionality would be useful to the project.  I have not contributed to  an Open Source project before so though I would ask first before spending the time created a Pull Request etc.\r\n\r\nMy implementation is as follows;\r\n\r\n* Added two new elements Document and DocumentTemplate\r\n* These two elements share common attributes Path and Data\r\n* The Path attribute can be either a file path or XPath that retrieves a file path from the input XML\r\n* The Data attribute is intended to hold a base64 encoded string containing the Word document contents\r\n* The DocumentTemplate element also has a Select attribute so that XML data can be passed to the template\r\n\r\nWith the above in place what I do is take a two pass approach.\r\n\r\nFirstly I process the Document and DocumentTemplate elements converting all to a Document element which contains a Data attribute with the base64 encoded content of the Document or assembled DocumentTemplate.\r\n\r\nThen I have introduced a second step and as such a dependency on DocumentBuilder in DocumentAssembler.  I am not sure if this will be frowned upon or not :)\r\n\r\nThis second step is largely based on this post from Eric White;\r\n\r\nhttps://blogs.msdn.microsoft.com/ericwhite/2009/04/21/using-documentbuilder-with-content-controls-for-document-assembly/\r\n\r\nThere are some limitations in my implementation, namely that all sections need to have the same page layout.  I will also (at some point) improve it slightly so that the the Document and DocumentTemplate elements will allow the addition of Page Breaks via an attribute.  This will make the template composition in word a lot neater.\r\n\r\nAnyway, is anyone interested in this?  Or is my solution horrible!\r\n\r\nI do think that this adds a LOT of power to DocumentAssembler and has the potential to make creating complex templates files more manageable by hiding away parts of templates into sub-templates.\r\n\r\nIf there is interest from the maintainers then I will put up a Pull Request.\r\n\r\nCheers. \r\n\r\n"},{"Id":"6805442973","Type":"PullRequestEvent","CreatedAt":"2017-11-03T12:58:14","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/190","RelatedDescription":"Opened pull request \"Keep WebExtensions parts\" (#190) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"A simple solution to #189 which keeps the WebExtensions parts of the first document that has any.\r\n\r\nIt could be extended to merge the WebExtensions parts of all documents. Doing so would require copying over all the WebExtension parts and merging the content of the Taskpanes part, adjusting the reference IDs."},{"Id":"6805263245","Type":"IssuesEvent","CreatedAt":"2017-11-03T12:12:00","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/189","RelatedDescription":"Opened issue \"WebExtensions parts are not copied over by DocumentBuilder\" (#189) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"From Office 2013, documents can contain WebExtensions parts (also known as [Office Web Extensibility Extensions](https://msdn.microsoft.com/en-us/library/hh695336.aspx)) which can link to Office Add-ins and specify taskpanes that are to be opened.\r\n\r\nThese WebExtensions parts are currently ignored by DocumentBuilder, but could be copied over instead."},{"Id":"6780865425","Type":"IssuesEvent","CreatedAt":"2017-10-29T18:41:22","Actor":"prog-mahmoud","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/188","RelatedDescription":"Opened issue \"page-break-before not applied\" (#188) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"The tool of converting HTML to Docx supports page-break-before: always"},{"Id":"6775462736","Type":"IssuesEvent","CreatedAt":"2017-10-27T14:22:19","Actor":"vicpara","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/187","RelatedDescription":"Opened issue \"DOCX to PDF\" (#187) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\nI want to convert a DOCX file to PDF on any linux distribution you support. I just don't have a windows OS available. How can I do it. I've looked into the documentation and there is no trace of it.\r\n\r\nAlternatively, is there a way to say which page contains a text fragment. For example, a text fragment has been identified on page number xx from the document yy,docx?\r\n\r\nThanks"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-17T05:30:31.0702898Z","RunDurationInMilliseconds":1622}