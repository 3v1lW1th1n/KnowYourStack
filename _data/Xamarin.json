{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7998804291","Type":"PullRequestEvent","CreatedAt":"2018-07-21T15:50:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1987","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] build.props can cause ConvertResourceCa…\" (#1987) at xamarin/xamarin-android","RelatedBody":"…ses to skip (#1943)\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1933\r\n\r\nThere have been various reports of a scenario such as:\r\n- Open a project in VS 2017, that uses uppercase letters when\r\n  referencing a resource, such as `@drawable/IMALLCAPS`\r\n- A Design-Time Build occurs\r\n- Some future build later, a *regular* build fails with an `APT0000`\r\n  error\r\n\r\n    Resources\\layout\\test.axml(3,0): error APT0000: No resource found that matches the given name (at 'src' with value '@drawable/IMALLCAPS')\r\n\r\nOnce you are in this state, you are basically hosed until you\r\n`Rebuild` or delete `obj`...\r\n\r\nAfter a lot of digging, I was able to reproduce the issue by\r\ninvalidating `build.props`. This happens in a lot of common\r\nsituations:\r\n- `$(DesignTimeBuild)` changes, such as a DTB or a regular build\r\n- `$(AdbTarget)` changes, such as when you change the device or\r\n  emulator you are deploying to\r\n\r\nI created a `BuildPropsBreaksConvertResourcesCases` test that\r\nreproduces this issue by modifying the timestamp on `build.props`.\r\n\r\nIf `build.props` was invalidated, this was happening:\r\n\r\n    Target Name=_UpdateAndroidResgen Project=UnnamedProject.csproj\r\n    ...\r\n        Target Name=_GenerateAndroidResourceDir Project=UnnamedProject.csproj\r\n            Building target \"_GenerateAndroidResourceDir\" completely.\r\n            Input file \"obj\\Debug\\build.props\" is newer than output file \"obj\\Debug\\res.flag\".\r\n            ...\r\n                CopyIfChanged Task\r\n                  ...\r\n                  ModifiedFiles:\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\main.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\layout\\test.xml\r\n                    C:\\Users\\myuser\\Desktop\\Git\\xamarin-android\\bin\\TestDebug\\temp\\BuildPropsBreaksConvertResourcesCases\\obj\\Debug\\res\\values\\strings.xml\r\n\r\nThe `CopyIfChanged` task is overwriting my `test.xml` layout file with\r\nthe original file contents--which has `IMALLCAPS` in uppercase.\r\n\r\nThis would normally be OK, except `ConvertResourcesCases` skipped\r\nprocessing this file!\r\n\r\n    ConvertResourcesCases\r\n        Parameters\r\n            ResourceDirectories = obj\\Debug\\res\\\r\n            AcwMapFile = obj\\Debug\\acw-map.txt\r\n            AndroidConversionFlagFile = obj\\Debug\\R.cs.flag\r\n        ConvertResourcesCases Task\r\n          ResourceDirectories: obj\\Debug\\res\\\r\n          AcwMapFile: obj\\Debug\\acw-map.txt\r\n          AndroidConversionFlagFile: obj\\Debug\\R.cs.flag\r\n          AndroidConversionFlagFile modified: 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\main.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\layout\\test.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n          Skipping: obj\\Debug\\res\\values\\strings.xml  7/9/2018 7:57:53 PM <= 7/9/2018 7:57:56 PM\r\n\r\nSince `obj\\Debug\\R.cs.flag` is newer than these files, `IMALLCAPS` is\r\nnot converted to lower case!\r\n\r\nIt appears that the `CopyIfChanged` MSBuild task was not setting the\r\ntimestamps of files it copies...\r\n\r\nAfter fixing this, `CopyIfChanged` does not ovewrite `test.xml` in the\r\nfirst place:\r\n\r\n    CopyIfChanged Task\r\n      ...\r\n      Skipping Resources\\drawable-hdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-mdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable-xxxhdpi\\Icon.png its up to date\r\n      Skipping Resources\\drawable\\IMALLCAPS.png its up to date\r\n      Skipping Resources\\layout\\Main.axml its up to date\r\n      Skipping Resources\\layout\\test.axml its up to date\r\n      Skipping Resources\\values\\Strings.xml its up to date\r\n    ModifiedFiles:\r\n\r\nNote that `ModifiedFiles` is blank, and my unit test now passes."},{"Id":"7997404878","Type":"PullRequestEvent","CreatedAt":"2018-07-20T22:05:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1986","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] proguard warning code\" (#1986) at xamarin/xamarin-android","RelatedBody":"Added a warning code for the `Proguard` MSBuild task along with\r\ndocumentation. There was only one warning to fix here.\r\n\r\nAdditionally, I removed the extraneous log messages from the\r\n`Proguard` task, since diagnostic MSBuild output will include all the\r\ninformation we need."},{"Id":"7996822190","Type":"IssuesEvent","CreatedAt":"2018-07-20T19:34:23","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1770","RelatedDescription":"Reopened issue \"[Aapt2] Unable to build project with a TargetFrameworkVersion less than Android 5.0 on Windows with Aapt2 enabled\" (#1770) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. `msbuild /t:SignAndroidPackage /p:AndroidUseAapt2=true monodroid-samples\\Button\\DroidButton.csproj /v:diag`\r\n\r\nhttps://github.com/xamarin/monodroid-samples/tree/master/Button \r\n\r\nI can reproduce this with the default TargetFrameworkVersion of the project (v2.3), as well as v4.0.4, and v4.4. However, if I target v5.0 or greater then my build succeeds.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProject builds successfully with Aapt2 enabled.\r\n\r\n### Actual Behavior\r\n```\r\nExecuting link --manifest C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\manifest\\AndroidManifest.xml --java C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03 --custom-package mono.samples.button -R obj\\\\Debug\\\\compiled.flata --auto-add-overlay -I \"C:\\Program Files (x86)\\Android\\android-sdk\\platforms\\android-10\\android.jar\" --output-text-symbols obj\\\\Debug\\R.txt -o C:\\Users\\peter\\AppData\\Local\\Temp\\wtsbowgt.p03\\resources.apk (TaskId:97)\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053d, entry index(1341) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053e, entry index(1342) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053b, entry index(1339) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nW/ResourceType(23681): error APT0000: For resource 0x0101053c, entry index(1340) is beyond type entryCount(733) [C:\\Users\\peter\\source\\monodroid-samples\\Button\\DroidButton.csproj]\r\nDone executing task \"Aapt2Link\" -- FAILED. (TaskId:97)\r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/220d551af40c4ccc18db3e7df0c1b72f\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/57dec1bd340d9212129c1d8a0a779433\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#624789](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/624789)"},{"Id":"7996819592","Type":"IssuesEvent","CreatedAt":"2018-07-20T19:33:43","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1985","RelatedDescription":"Opened issue \"[AAPT2] Aapt2 does not handle values passed to `AndroidResgenExtraArgs`\" (#1985) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build app-acquaint with aapt2 enabled. This app sets the following property: `<AndroidResgenExtraArgs>--no-crunch </AndroidResgenExtraArgs>`\r\n\r\n\r\nhttps://github.com/xamarinhq/app-acquaint\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nI am not entirely sure if this _should_ be supported or not, however if this is an option only supported by `aapt` then perhaps we can try to improve the error message a bit (currently it prints the _entire_ usage messaging for aapt2.\r\n\r\n### Actual Behavior\r\n\r\n```\r\nerror APT0000: unknown option '--no-crunch'. \"unknown option '--no-crunch'.\". [/Users/xamarinqa/agent/_work/r1/a/app-acquaint/App/Acquaint.XForms/Acquaint.XForms.Droid/Acquaint.XForms.Droid.csproj]\r\n```\r\n\r\n\r\n### Version Information\r\nXA version: 9.0.0.17 (HEAD/dfb09269d)\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-4ecc7c0748a842568aacb6df43bb7cab.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7996498720","Type":"PullRequestEvent","CreatedAt":"2018-07-20T18:20:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1984","RelatedDescription":"Opened pull request \"[monodroid] recreate shared runtime symlink if it points to an invalid location\" (#1984) at xamarin/xamarin-android","RelatedBody":"The following scenario using `Fast Deployment` causes an issue:\r\n- Build and run a `Debug` mode Xamarin.Android app\r\n- Update Xamarin.Android\r\n- Build and run again\r\n\r\nOn the second deployment, a *new* shared Mono runtime will be\r\ninstalled on the device.\r\n\r\nAnd so, the symlink pointing to the shared Mono runtime was pointing\r\nto a location that does not exist:\r\n\r\n    $ run-as com.xamarin.myapp ls -la /data/user/0/com.xamarin.myapp/files/.__override__/links\r\n    lrwxrwxrwx 1 u0_a132 u0_a132   93 2018-07-19 16:57 libmonosgen-2.0.so -> /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/libmonosgen-32bit-2.0.so\r\n\r\n    $ ls /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/\r\n    ls: /data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/lib/x86/: No such file or directory\r\n\r\nThis caused the app to crash on startup:\r\n\r\n    [monodroid] Creating public update directory: `/data/user/0/com.xamarin.myapp/files/.__override__`\r\n    [monodroid] Using override path: /data/user/0/com.xamarin.myapp/files/.__override__\r\n    [monodroid] Trying to load sgen from: /data/user/0/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /storage/emulated/0/Android/data/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /storage/emulated/0/../legacy/Android/data/com.xamarin.myapp/files/.__override__/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /data/app/com.xamarin.myapp-5PqDQ9Z3Et8G7_1D2EtGIg==/lib/x86/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /data/user/0/com.xamarin.myapp/files/.__override__/links/libmonosgen-2.0.so\r\n    [monodroid] Trying to load sgen from: /system/lib/libmonosgen-2.0.so\r\n    [monodroid] cannot find libmonosgen-2.0.so in override_dir: /data/user/0/com.xamarin.myapp/files/.__override__, app_libdir: /data/app/com.xamarin.myapp-5PqDQ9Z3Et8G7_1D2EtGIg==/lib/x86 nor in previously printed locations.\r\n    [monodroid] Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion < 10 while running on a 64-bit Android 5.0 target? This combination is not supported.\r\n    [monodroid] Please either set android:minSdkVersion >= 10 or use a build without the shared runtime (like default Release configuration).\r\n\r\nAfter looking into it further, it appears you can just uninstall the\r\nshared runtime to cause the issue. It appears that the path to\r\n`/data/app/Mono.Android.DebugRuntime-Y2eHYda6s0hMKJmiCfcYlA==/`\r\nchanges each time the Mono Shared Runtime is installed.\r\n\r\nHere is an example test that can reproduce the issue:\r\n\r\n    [Test]\r\n    public void ReinstallSharedRuntime ()\r\n    {\r\n        if (!HasDevices) {\r\n            Assert.Ignore (\"Test Skipped no devices or emulators found.\");\r\n        }\r\n\r\n        const string noSuchFile = \"No such file or directory\";\r\n        const string libmonosgen = \"libmonosgen-2.0.so\";\r\n        const string monoRuntime = \"Mono.Android.DebugRuntime\";\r\n\r\n        var proj = new XamarinAndroidApplicationProject ();\r\n        proj.SetProperty (proj.DebugProperties, \"AndroidUseSharedRuntime\", true);\r\n        proj.SetProperty (proj.DebugProperties, \"EmbedAssembliesIntoApk\", false);\r\n\r\n        using (var b = CreateApkBuilder (Path.Combine (\"temp\", TestName))) {\r\n            //Make sure we are at a clean state\r\n            RunAdbCommand ($\"shell pm uninstall {proj.PackageName}\");\r\n            RunAdbCommand ($\"shell pm uninstall {monoRuntime}\");\r\n\r\n            b.Target = \"Install,_Run\";\r\n            Assert.IsTrue (b.Build (proj), \"first `Install` and `_Run` should have succeeded.\");\r\n            Assert.IsTrue (StringAssertEx.ContainsText (b.LastBuildOutput, \"Installing shared runtime\"), \"Shared runtime should have been installed!\");\r\n\r\n            var link = $\"/data/user/0/{proj.PackageName}/files/.__override__/links/{libmonosgen}\";\r\n            var listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls -la {link}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{link} should exist!\");\r\n            var symlink = listing.Split (' ').Last ().Trim ();\r\n            Assert.IsFalse (string.IsNullOrEmpty (symlink), $\"Should find {libmonosgen} from listing: {listing}\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls {symlink}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{symlink} should exist after the first run\");\r\n\r\n            var result = RunAdbCommand ($\"shell pm uninstall {monoRuntime}\").Trim ();\r\n            Assert.AreEqual (\"Success\", result, \"Uninstalling the shared runtime should succeed.\");\r\n\r\n            //HACK: this is temporary, but is currently required\r\n            var upload_flag = b.Output.GetIntermediaryPath (\"upload.flag\");\r\n            File.Delete (upload_flag);\r\n\r\n            Assert.IsTrue (b.Build (proj), \"second `Install` and `_Run` should have succeeded.\");\r\n            Assert.IsTrue (StringAssertEx.ContainsText (b.LastBuildOutput, \"Installing shared runtime\"), \"Shared runtime should have been installed!\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls -la {link}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{link} should exist!\");\r\n            symlink = listing.Split (' ').Last ().Trim ();\r\n            Assert.IsFalse (string.IsNullOrEmpty (symlink), $\"Should find {libmonosgen} from listing: {listing}\");\r\n            listing = RunAdbCommand ($\"shell run-as {proj.PackageName} ls {symlink}\");\r\n            Assert.IsFalse (listing.Contains (noSuchFile), $\"{symlink} should exist after the second run\");\r\n        }\r\n    }\r\n\r\nSo (I think) the fix here is:\r\n- Check the result of `symlink`\r\n- If it failed with `EEXIST`, delete the file and try again\r\n- Add additional logging so we can see if `symlink` fails\r\n\r\nAfter this fixed is merged, I think we should also add the above test\r\nto the proprietary `monodroid` repo. (Assuming it isn't too fragile,\r\nof course)"},{"Id":"7996492984","Type":"PullRequestEvent","CreatedAt":"2018-07-20T18:18:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1982","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] only update typemap timestamps if changes occur\" (#1982) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1930\r\n\r\nSince 3d999d3, `Fast Deployment` has been rebuilding the APK when it\r\nshouldn't. Apparently the `typemap.mj` and `typemap.jm` files'\r\ntimestamps are used when deciding to repack/deploy the APK or not.\r\n\r\nAfter looking at my `CheckTimestamps` test, I don't think it was quite\r\nright. It should modify `MainActivity`'s type name so that these files\r\nwill be updated. Just modifying code won't invalidate these files.\r\nThen the `GenerateJavaStubs` task should only update the timestamps if\r\nthe file was actually changed, which should fix `Fast Deployment`."},{"Id":"7996487245","Type":"IssuesEvent","CreatedAt":"2018-07-20T18:17:35","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1983","RelatedDescription":"Opened issue \"[AAPT2] Encountering new error  CS0117: 'Resource' does not contain a definition for 'Foo' when enabling aapt2\" (#1983) at xamarin/xamarin-android","RelatedBody":"I'm encountering a new class of error that occur when enabling aapt2 that doesn't appear to be a direct result of an aapt2 invocation.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build the following project(s) with aapt2 enabled:\r\n* https://github.com/xamarin/monodroid-samples/tree/master/ApplicationFundamentals/FingerPaint\r\n* https://github.com/xamarin/monodroid-samples/tree/master/SearchableDictionary\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nProjects compile with Aapt2 enabled.\r\n\r\n### Actual Behavior\r\n```\r\nMainActivity.cs(29,74): error CS0117: 'Resource' does not contain a definition for 'Array' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/ApplicationFundamentals/FingerPaint/FingerPaint/FingerPaint.csproj]\r\nMainActivity.cs(37,80): error CS0117: 'Resource' does not contain a definition for 'Array' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/ApplicationFundamentals/FingerPaint/FingerPaint/FingerPaint.csproj]\r\n```\r\n```\r\nDictionaryDatabase.cs(138,59): error CS0117: 'Resource' does not contain a definition for 'Raw' [/Users/xamarinqa/agent/_work/r1/a/monodroid-samples/SearchableDictionary/SearchableDictionary.csproj]\r\n```\r\n\r\n### Version Information\r\nXA version: 9.0.0.17 (HEAD/dfb09269d) \r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-7b4e8e9639004445816d5920c549229b.txt\r\nhttp://xqa.blob.core.windows.net/gist/log-fb8b38fbbb894b4ba26c074dc86df622.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7995229948","Type":"PullRequestEvent","CreatedAt":"2018-07-20T14:07:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1982","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] only update typemap timestamps if changes occur\" (#1982) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1930\r\n\r\nSince 3d999d3, `Fast Deployment` has been rebuilding the APK when it\r\nshouldn't. Apparently the `typemap.mj` and `typemap.jm` files'\r\ntimestamps are used when deciding to repack/deploy the APK or not.\r\n\r\nAfter looking at my `CheckTimestamps` test, I don't think it was quite\r\nright. It should modify `MainActivity`'s type name so that these files\r\nwill be updated. Just modifying code won't invalidate these files.\r\nThen the `GenerateJavaStubs` task should only update the timestamps if\r\nthe file was actually changed, which should fix `Fast Deployment`."},{"Id":"7992527655","Type":"PullRequestEvent","CreatedAt":"2018-07-20T02:03:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1944","RelatedDescription":"Merged pull request \"Make platform-tools setup customizible and tell it to mono/sdks setup.\" (#1944) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/pull/9473#issue-200303674"},{"Id":"7991770891","Type":"PullRequestEvent","CreatedAt":"2018-07-19T21:39:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1981","RelatedDescription":"Merged pull request \"Bump to mono/mono:2018-02@f795aa5d\" (#1981) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/8430\r\nFixes: https://github.com/mono/mono/issues/9318\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1951\r\n\r\nContext: https://github.com/mono/mono/issues/9298\r\n\r\nInstalls `cmake` as part of Android SDK provisioning.\r\n\r\nFix building of Windows cross-compilers on Ubuntu Linux.\r\n\r\nInterp fixes.\r\n\r\nMake mono-state dumper abandon stuck threads\r\n\r\nmerp-related changes.\r\n\r\nDebugger fixes."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7999202176","Type":"IssuesEvent","CreatedAt":"2018-07-21T21:09:49","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3370","RelatedDescription":"Opened issue \"EntryCell not filling width\" (#3370) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIn the attached image you can see that the EntryCell is not filling the entire width although I set the HorizontalOptions of the TableView to FillAndExpand which cause for example the number not show all digits (there is a missing 4 for example)./\r\n\r\nI think the EntryCell should fill the width of the screen - the width of the Label\r\n\r\n<img width=\"392\" alt=\"screen shot 2018-07-22 at 01 09 02\" src=\"https://user-images.githubusercontent.com/6236241/43040077-e4a8d3b8-8d4b-11e8-801b-29472ae0d506.png\">\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"7999184799","Type":"IssuesEvent","CreatedAt":"2018-07-21T20:54:31","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3369","RelatedDescription":"Opened issue \"Editor does not show a border unlike Entry\" (#3369) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nWhy the Editor control does not show a border or at least provide option property for border as the Editor will just show a white area on iOS without any border.\r\n\r\nThanks,\r\nJassim"},{"Id":"7999183183","Type":"IssuesEvent","CreatedAt":"2018-07-21T20:53:03","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3368","RelatedDescription":"Opened issue \"TableView FlowDirection not working with EntryCell\" (#3368) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nI am doing this to show EntryCell for first name and last name with FlowDirection is RightToLeft but as you can see in the attached image it works for the Label of the EntryCell but not for the Entry cell itself.\r\n\r\n<TableView Intent=\"Settings\" FlowDirection=\"RightToLeft\">\r\n    <TableRoot>\r\n        <TableSection Title=\"الاسم\">\r\n            <EntryCell x:Name=\"MyProfileMyNameFirstName\" Label=\"الاسم الأول :\" />\r\n            <EntryCell x:Name=\"MyProfileMyNameLastName\" Label=\"اسم العائلة:\" />\r\n        </TableSection>\r\n    </TableRoot>\r\n</TableView>\r\n\r\n<img width=\"391\" alt=\"screen shot 2018-07-22 at 00 52 05\" src=\"https://user-images.githubusercontent.com/6236241/43039966-8394a1da-8d49-11e8-884a-c817d2b1c903.png\">\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"7998659532","Type":"IssuesEvent","CreatedAt":"2018-07-21T14:05:59","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3366","RelatedDescription":"Closed issue \"Re-visit Xamarin.Forms.CarouselView\" (#3366) at xamarin/Xamarin.Forms","RelatedBody":"The current release of Xamarin.Forms.CarouselView is outdated/no longer maintained.\r\nIt would be nice to get this component up to date and release a new version."},{"Id":"7998457268","Type":"IssuesEvent","CreatedAt":"2018-07-21T11:19:47","Actor":"bhaveshsoft1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3367","RelatedDescription":"Opened issue \"[UWP] ScrollTo method is not working in Xamarin.Forms for UWP platform\" (#3367) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWe are developing chat application using Xamarin.Forms (2.5.0.91635) for UWP. We are trying to implement very basic functionality which is scroll to bottom when user open any chat window or send/receive messages. It working fine where no scroll in chat window but when messages are more then we show vertical scroll bar in chat widow. we are using below line to goes to last item of list view.\r\n\r\nlstMessages.ScrollTo(objlastmessage, ScrollToPosition.Start, false);\r\n\r\nWe are use ObservableCollection to store message and bind it with listview.\r\n\r\nNow problem is that when messenger app get any message from other user then system add it in observation collection and then move to last message in chat window, in between if if user typing message in Xamarin text editor then it freeze the UI until listivew update. so how to fix this issue. please some need hep. So user is legging in typing.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make a simple chat window using list view.\r\n2. put the text editor below the chat window\r\n3.  fill the list view from 100 message\r\n4. Now when you try to add more message in list view then it freeze the UI for few second\r\n\r\n### Expected Behavior\r\nIt should not be freeze.\r\n\r\n### Actual Behavior\r\nIt should not be freeze.\r\n\r\n### Basic Information\r\n\r\nVersion with issue: Xamarin.Forms 2.5.0.91635 (even I checked in 3.1.0.637273 version too)\r\nLast known good version: Don't know\r\nIDE: Visual Studio 7.4.2 (build 12)\r\nPlatform Target Frameworks:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7998230744","Type":"IssuesEvent","CreatedAt":"2018-07-21T07:55:39","Actor":"Heshanp","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3366","RelatedDescription":"Opened issue \"Re-visit Xamarin.Forms.CarouselView\" (#3366) at xamarin/Xamarin.Forms","RelatedBody":"The current release of Xamarin.Forms.CarouselView is outdated/no longer maintained.\r\nIt would be nice to get this component up to date and release a new version."},{"Id":"7997673984","Type":"PullRequestEvent","CreatedAt":"2018-07-20T23:57:12","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2221","RelatedDescription":"Merged pull request \"[Enhancement] Allow underline and strikethrough text decorations on labels and spans\" (#2221) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes #1632.\r\n\r\nAdds the ability to apply underline and strikethrough text decorations to Labels and Spans via a new BP, `TextDecorations`. Includes support for the CSS `text-decoration` property.\r\n\r\nNote that this implementation is a bit different than what is laid out in #1632, I spoke with @jassmith on this a little bit ago and we agreed on this new approach but I'm happy to answer any questions you might have.\r\n\r\nPlatform support:\r\n- [X] Android\r\n- [X] iOS\r\n- [X] macOS\r\n- [X] UWP\r\n- [X] WPF\r\n- [X] Tizen\r\n- [ ] GTK\r\n\r\n### API Changes ###\r\n\r\nenum TextDecorations `None, Underline, Strikethrough`\r\ninterface IDecorableText\r\nTextDecorations IDecorableText.TextDecorations //Bindable Property\r\n\r\nLabel and Span now implement IDecorableText.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7997673968","Type":"IssuesEvent","CreatedAt":"2018-07-20T23:57:12","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1632","RelatedDescription":"Closed issue \"[Enhancement] Label underline/strikethrough support\" (#1632) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nThe label currently has no easy mechanism of being underlined. Sometimes applications need the ability to underline text without using an Effect.\r\n\r\n## Implementation\r\n\r\nModify the FontAttributes enum to be as follows:\r\n\r\n```csharp\r\npublic enum FontAttributes\r\n{\r\n\tNone = 0,\r\n\tBold = 1 << 0,\r\n\tItalic = 1 << 1,\r\n\tUnderline = 1 << 2,\r\n        Strike = 1 << 3\r\n}\r\n```\r\n\r\nRenderers and Span parsers will need to understand how to use the new underline and strikethrough flags appropriately.\r\n\r\n## Expected Result\r\n\r\nOn all the platforms the label/span has underline and/or strikethrough applied as expected.\r\n\r\n## Implications for CSS\r\n\r\nCSS will need to be updated to support the `text-decoration: underline` and `text-decoration:line-through` tags for full compatibility.\r\n\r\n## Backward Compatibility\r\n\r\nThis change is as backwards compatible with existing code as possible. It is possible someone has found some obscure way of depending on there not being any more flags to the FontAttributes enum, but that is unlikely.\r\n\r\nThird party renderers will need to be updated to ensure that this functionality is supported through the new official mechanism. Further we will need to be careful to code the changes to the renderers in a careful manner to ensure that if someone is already using an effect to set an underline state on a label that this effect is as best as possible not broken by our changes.\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first time contributor. The hardest part will be ensuring the Span can properly parse the new `FontAttributes.Underline` enum values. Some basic defensive coding will be needed to ensure existing code is not broken, ideally the code path when the flags are not set AND have never been set is identical to when they have been. Once a user changes their code to use the flag, the code path can then change for everything.\r\n\r\nEven more ideally this would be done without an additional flag for tracking that status; possible using [GetIsDefault](https://github.com/xamarin/Xamarin.Forms/issues/1652)."},{"Id":"7997639867","Type":"PullRequestEvent","CreatedAt":"2018-07-20T23:39:28","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3365","RelatedDescription":"Opened pull request \"[Android] Simplify subscription to context action closure messages\" (#3365) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAndroid platform is doing a type check to see which version of `CloseContextActionsSignalName` to send, but both versions do the same thing. This just consolidates to a single version of the message. \r\n\r\n### Issues Resolved ###\r\n\r\nNone, just avoiding a _very_ minor performance hit.\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"7997629881","Type":"PullRequestEvent","CreatedAt":"2018-07-20T23:34:29","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3364","RelatedDescription":"Opened pull request \"[Android] Make native Android Platforms accessible via Context\" (#3364) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMakes the native `Platform` class accessible to the renderers which need it without having to cast `Element.IPlatfrom`. \r\n\r\n### Issues Resolved ###\r\n\r\nNone; this is prep work for further cleanup.\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"7997436597","Type":"PullRequestEvent","CreatedAt":"2018-07-20T22:16:14","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3363","RelatedDescription":"Opened pull request \"[UWP] Add missing IToolBarForegroundBinder interface on TabbedPageRenderer\" (#3363) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTabbedPageRenderer is missing the IToolBarForegroundBinder interface on UWP, so changes to BarTextColor and BarBackgroundColor are not applied. This change implements the interface.\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7998392054","Type":"IssuesEvent","CreatedAt":"2018-07-21T10:18:59","Actor":"softlion","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4490","RelatedDescription":"Opened issue \"deleting a \"Native Reference\" does not delete the file on disk\" (#4490) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n1. Add a \"Native reference\" to any ios project.\r\n2. Delete this native reference.\r\n\r\n### Expected Behavior\r\nThe reference is deleted from the project and from the disk.\r\n\r\n### Actual Behavior\r\nThe reference is deleted from the project but stays on the disk.\r\n\r\n### Environment\r\nVS 15.7.5PC and VS 7.5.3MAC (same behavior)\r\n"},{"Id":"7998389359","Type":"IssuesEvent","CreatedAt":"2018-07-21T10:16:26","Actor":"softlion","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4489","RelatedDescription":"Opened issue \"\"Native References\" not working in ios library projects\" (#4489) at xamarin/xamarin-macios","RelatedBody":"When adding a Native Reference in an ios library project, and including this project in an ios app project, the Native Reference is ignored.\r\n\r\nA workaround is to add the Native Reference into the ios app project's Native Reference.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an ios app project and an ios library project\r\n2. In the library project, add as \"Native reference\" a libwritteninc.a library, which is a fat library written in c, compiled with xcode tools, containing all architectures, and not using any ios frameworks.\r\n3. Add a method with a DllImport attribute to import a c method defined in libwritteninc, using \"__Internal\" as the library name.\r\n4. Reference the library into the ios app project, and call the method with the DllImport attribute\r\n5. Build\r\n\r\n### Expected Behavior\r\nbuilds fine on both mac and pc\r\n\r\n### Actual Behavior\r\nBuild errors: undefined symbols.\r\n\r\n### Environment\r\nTryed in both VS windows and VS mac.\r\n\r\nnote: a workaround is to add the Native Reference into the ios app project's Native Reference.\r\n"},{"Id":"7997303025","Type":"PullRequestEvent","CreatedAt":"2018-07-20T21:34:57","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4482","RelatedDescription":"Merged pull request \"[Intents] Update bindings to Xcode 10 Beta 4\" (#4482) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996871791","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:46:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4484","RelatedDescription":"Merged pull request \"[Photos] Update bindings to Xcode 10 Beta 4\" (#4484) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996862759","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:44:10","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4481","RelatedDescription":"Merged pull request \"[UserNotifications] Update to Xcode 10 Beta 4\" (#4481) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996860218","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:43:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4480","RelatedDescription":"Merged pull request \"[HealthKit] Update bindings to Xcode 10 Beta 4\" (#4480) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996857727","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:43:02","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4479","RelatedDescription":"Merged pull request \"[FinderSync] Update to Xcode 10 Beta 4\" (#4479) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7996855427","Type":"PullRequestEvent","CreatedAt":"2018-07-20T19:42:30","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4478","RelatedDescription":"Merged pull request \"[CoreMotion] Update to Xcode 10 Beta 4\" (#4478) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":246,"FavoriteCount":157,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":25,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":33,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2018-07-22T05:31:17.8345426Z","RunDurationInMilliseconds":25008}