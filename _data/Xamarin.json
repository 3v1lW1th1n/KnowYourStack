{"Data":{"Blog":{"FeedItems":[{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null},{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null},{"Title":"Schedule Meetings with Xamarin.Forms and the Microsoft Graph API","PublishedOn":"2017-11-28T18:07:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Meetings can be productive, provided they&#8217;re planned and scheduled properly. There are numerous tools available to schedule meetings, with Calendar for Outlook being one of the best tools in...","Href":"https://blog.xamarin.com/lets-schedule-meeting/","RawContent":null},{"Title":"Replacing Services With Jobs in Android Oreo 8.0","PublishedOn":"2017-11-27T21:04:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Before Android 8.0, Android apps would start a service that ran almost indefinitely, even when the app was in the background. This service can be handy for the app, and easy for the developer to...","Href":"https://blog.xamarin.com/replacing-services-jobs-android-oreo-8-0/","RawContent":null},{"Title":"Microsoft Connect 2017(); Xamarin Video Round-Up","PublishedOn":"2017-11-21T21:06:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Connect(); is always an exciting day for developers, with three days of exciting announcements, demos, and technical sessions. From the announcement of the General Availability of Visual...","Href":"https://blog.xamarin.com/microsoft-connect-2017-xamarin-video-round/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6953960324","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:55:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1079","RelatedDescription":"Opened pull request \"[build] fix Novell/*.MonoDroid.*.targets copy during build\" (#1079) at xamarin/xamarin-android","RelatedBody":"For a little while, our build has been copying three files to the root\r\nof our build tree:\r\n- Novell/MonoDroid.FSharp.targets\r\n- Novell/Novell.MonoDroid.Common.targets\r\n- Novell/Novell.MonoDroid.CSharp.targets\r\n\r\nThese files are copied to build output in the\r\nXamarin.Android.Build.Tasks project, but they should go in\r\n`bin/$(Configuration)` not the root of the build tree.\r\n\r\nWhile looking at binary log output, I noticed the\r\nXamarin.Android.Build.Tests project was doing the copy due to having a\r\n`<ProjectReference />` to Xamarin.Android.Build.Tasks.\r\n\r\nAdding `<Private>False</Private>` to the `<ProjectReference />` fixes\r\nthese files from being copied, and doesn't appear to have any other ill\r\neffects."},{"Id":"6953855445","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:30:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1076","RelatedDescription":"Merged pull request \"[lint] JAVA_HOME must be set on Windows\" (#1076) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1196396&_a=summary&tab=ms.vss-test-web.test-result-details\r\n\r\nI am not sure how I missed this, but the `<Lint />` task was always\r\nfailing on Windows unless `JAVA_HOME` is set.\r\n\r\nThe error is:\r\n```\r\nLINT JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n```\r\n\r\nTo fix this:\r\n- Pass `$(JavaSdkDirectory)` to the `<Lint />` task\r\n- Set `JAVA_HOME` for `ToolTask`'s `EnvironmentVariables` property\r\n- Set `JAVA_HOME` when running `lint.bat --version`, I had to add an\r\noptional parameter for environment variables to\r\n`MonoAndroidHelper.RunProcess`"},{"Id":"6953829918","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:25:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1078","RelatedDescription":"Opened pull request \"[Mono.Android] Remove Transformation.TypeAlpha\" (#1078) at xamarin/xamarin-android","RelatedBody":"Bumps to xamarin-android-api-compatibility/master/9cfa6cc9\r\n\r\nWhen attempting to bump monodroid to use a recent xamarin-android, the\r\nAPI consistency checks failed:\r\n\r\n\t<h1>### API BREAK BETWEEN v4.3 and v4.4</h1>\r\n\t...\r\n\t<h3>Type Changed: Android.Views.Animations.Transformation</h3>\r\n\t<p>Removed properties:</p>\r\n\r\n\t<pre>\r\n\t\t<span class='removed removed-property breaking' data-is-breaking>public static int TypeAlpha { get; set; }</span>\r\n\t\t<span class='removed removed-property breaking' data-is-breaking>public static int TypeBoth { get; set; }</span>\r\n\t\t<span class='removed removed-property breaking' data-is-breaking>public static int TypeIdentity { get; set; }</span>\r\n\t\t<span class='removed removed-property breaking' data-is-breaking>public static int TypeMatrix { get; set; }</span>\r\n\t</pre>\r\n\r\nThis breakage was introduced by commit 9a73c4c1/PR #1045, which\r\nunfortunately wasn't caught at the time.\r\n\r\nSpecifically, commit a301764a:\r\n\r\n\tdiff --git a/src/Mono.Android/map.csv b/src/Mono.Android/map.csv\r\n\tindex 74319bc..dc707d0 100644\r\n\t--- a/src/Mono.Android/map.csv\r\n\t+++ b/src/Mono.Android/map.csv\r\n\t...\r\n\t-1,Android.Views.Animations.TransformationTypes,Alpha,android/view/animation/Transformation.TYPE_ALPHA,1\r\n\t...\r\n\t+19,Android.Views.Animations.TransformationTypes,Alpha,android/view/animation/Transformation.TYPE_ALPHA,1\r\n\r\nUpdate `src/Mono.Android/map.csv` so that `Transformation.TYPE_ALPHA` and\r\nrelated enum values are changed in API-18+, not API-19+. This fixes the\r\ninter-API-level compatibility issue."},{"Id":"6953745104","Type":"PullRequestEvent","CreatedAt":"2017-12-06T22:09:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1077","RelatedDescription":"Opened pull request \"[tests] fixed FrameworkLibDirectory on Windows\" (#1077) at xamarin/xamarin-android","RelatedBody":"When I originally setup `FrameworkLibDirectory` on Windows,\r\n`setup-windows.exe` was the method for running these tests. Now that\r\n`xabuild.exe` is used instead, we need this directory to also possibly\r\nbe used from within the build tree as when `IsUnix` is true.\r\n\r\nChanges:\r\n- `FrameworkLibDirectory` will return locations within the build tree on\r\nwindows\r\n- A few places that used to have an `IsUnix` check such as\r\n`AndroidMSBuildDirectory`, it made more sense to do a `Directory.Exists`,\r\nand then fallback to using `FrameworkLibDirectory`\r\n- Fixed the `CrossCompilerAvailable` method on Windows\r\n- The `BuildAotApplication` test has a `Regex` that won't work on\r\nWindows due to shortened paths. It looked best to skip this assertion.\r\n\r\nThis short fix a variety of tests on Windows, and hopefully un-ignore\r\nmany tests as well."},{"Id":"6953304919","Type":"PullRequestEvent","CreatedAt":"2017-12-06T20:31:52","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1076","RelatedDescription":"Opened pull request \"[lint] JAVA_HOME must be set on Windows\" (#1076) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1196396&_a=summary&tab=ms.vss-test-web.test-result-details\r\n\r\nI am not sure how I missed this, but the `<Lint />` task was always\r\nfailing on Windows unless `JAVA_HOME` is set.\r\n\r\nThe error is:\r\n```\r\nLINT JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n```\r\n\r\nTo fix this:\r\n- Pass `$(JavaSdkDirectory)` to the `<Lint />` task\r\n- Set `JAVA_HOME` for `ToolTask`'s `EnvironmentVariables` property\r\n- Set `JAVA_HOME` when running `lint.bat --version`, I had to add an\r\noptional parameter for environment variables to\r\n`MonoAndroidHelper.RunProcess`"},{"Id":"6952790566","Type":"PullRequestEvent","CreatedAt":"2017-12-06T18:41:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1074","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Dont clean the designtime folder\" (#1074) at xamarin/xamarin-android","RelatedBody":"Context https://bugzilla.xamarin.com/show_bug.cgi?id=60880\r\n\r\nTurns out the design time build in Visual Studio does not\r\nclean up after itself.. ever. So we really should not be\r\ndeleting the directory on a `Clean`.\r\n\r\nThis commit move that code into is own internal target\r\nand updates the tests to reflect the changes."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6954725422","Type":"PullRequestEvent","CreatedAt":"2017-12-07T03:07:35","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/917","RelatedDescription":"Closed pull request \"[Android] Add ability to skip setting SoftInputMode during initialization\" (#917) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nI have a _debug_ setup where setting soft input mode at startup takes 14 ms for `AdjustPan` and 52 ms for `AdjustResize`. For most apps, the landing page should not contain any input views, hence, the input mode should not be needed to be set immediately.\r\n\r\nA platform-specific property was added to skip calling `SetSoftInputMode()`. According to Android [documentation](https://developer.android.com/guide/topics/manifest/activity-element.html#wsoft), the default setting for soft input mode is unspecified.\r\n\r\nI haven't made documentation changes (yet) since I'm not sure if this PR is okay.\r\n\r\nPlease make sure to document this [here](https://developer.xamarin.com/guides/xamarin-forms/deployment-testing/performance/). :)\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - platform-specific `ShouldSetWindowSoftInputModeAtStartup`\r\n- `Unspecified` enum value for soft input mode\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6954718095","Type":"PullRequestEvent","CreatedAt":"2017-12-07T03:05:01","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1339","RelatedDescription":"Opened pull request \"[Android] Unspecified can be the default window soft input mode\" (#1339) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRe-doing #917 without the platform specific\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\nAdded:\r\n - `Unspecified` is an option for `WindowSoftInputModeAdjustProperty`\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6954492213","Type":"IssuesEvent","CreatedAt":"2017-12-07T01:44:47","Actor":"MichelMatthey","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1338","RelatedDescription":"Opened issue \"Keep on getting this \"System.ObjectDisposedException: Cannot access a disposed object\"... GC related...\" (#1338) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThe problem is that the App crashes on the Android emaulator with the following exception, it is related to a Mono8 issue I was lead to believe, how do I fix it  please ?\r\n\r\nSee stack trace below...\r\n\r\nPeople are talking about this solution, can you please explain exactly what I need to do with the latest Garbage Collector from Mono, where do I set it up so it uses the old/new GC so the problems goes away until they fix it: \r\nMONO_GC_PARAMS=bridge-implementation=new\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Just run the app for long enough and eventually it crashes, nothing to do with our code we don't believe...\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the Android SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\r\nSTACK TRACE:\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Plat\r\nform.Android\\Renderers\\LabelRenderer.cs:126 \r\n  at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\n12-07 01:35:36.946 I/mono-stdout( 5033): System.ObjectDisposedException: Cannot access a disposed object.\r\n12-07 01:35:36.952 I/mono-stdout( 5033): Object name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n12-07 01:35:36.953 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:36.953 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:36.954 I/mono-stdout( 5033):   at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:36.957 I/mono-stdout( 5033):   at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:36.958 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n12-07 01:35:36.958 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:126 \r\n12-07 01:35:36.958 I/mono-stdout( 5033):   at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\n12-07 01:35:36.996 I/mono-stdout( 5033): System.ObjectDisposedException: Cannot access a disposed object.\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChang\r\nedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:126 \r\n  at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\n12-07 01:35:36.996 I/mono-stdout( 5033): Object name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n12-07 01:35:36.997 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:36.997 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:36.997 I/mono-stdout( 5033):   at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:36.998 I/mono-stdout( 5033):   at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:36.998 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n12-07 01:35:36.998 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:126 \r\n12-07 01:35:37.000 I/mono-stdout( 5033):   at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n  at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n  at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n  at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChang\r\nedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:126 \r\n  at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\n12-07 01:35:37.038 I/mono-stdout( 5033): System.ObjectDisposedException: Cannot access a disposed object.\r\n12-07 01:35:37.047 I/mono-stdout( 5033): Object name: 'Xamarin.Forms.Platform.Android.FormsTextView'.\r\n12-07 01:35:37.047 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers.AssertSelf (Java.Interop.IJavaPeerable self) [0x00029] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:37.047 I/mono-stdout( 5033):   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeNonvirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00000] in <7cfbebb561c54efc9010b018c0846c7e>:0 \r\n12-07 01:35:37.048 I/mono-stdout( 5033):   at Android.Widget.TextView.set_TextFormatted (Java.Lang.ICharSequence value) [0x00029] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:37.048 I/mono-stdout( 5033):   at Android.Widget.TextView.set_Text (System.String value) [0x0000d] in <e975227ac8644a30bb0866117325de0d>:0 \r\n12-07 01:35:37.048 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.UpdateText () [0x00087] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:195 \r\n12-07 01:35:37.048 I/mono-stdout( 5033):   at Xamarin.Forms.Platform.Android.LabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x000c5] in D:\\agent\\_work\\2\\s\\Xamarin.Forms.Platform.Android\\Renderers\\LabelRenderer.cs:126 \r\n12-07 01:35:37.049 I/mono-stdout( 5033):   at CrowdBlendingMe.Droid.CustomFontLabelRenderer.OnElementPropertyChanged (System.Object sender, System.ComponentModel.PropertyChangedEventArgs e) [0x00002] in C:\\GIT\\CrowdBlending.me Projects\\Grial\\starter\\CrowdBlendingMe.Droid\\Renderers\\CustomFontLabelRenderer.cs:84 \r\n"},{"Id":"6954287991","Type":"PullRequestEvent","CreatedAt":"2017-12-07T00:34:39","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1337","RelatedDescription":"Merged pull request \"[WPF] Control Gallery project for WPF backend\" (#1337) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for Control Gallery project on WPF backend.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.ControlGallery.WPF project. Other PRs will include  nuspec...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nNo changes in Xamarin Forms Core\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can test the WPF Backend with Control Gallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6954167018","Type":"PullRequestEvent","CreatedAt":"2017-12-06T23:54:42","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1337","RelatedDescription":"Opened pull request \"[WPF] Control Gallery project for WPF backend\" (#1337) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for Control Gallery project on WPF backend.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.ControlGallery.WPF project. Other PRs will include  nuspec...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nNo changes in Xamarin Forms Core\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can test the WPF Backend with Control Gallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6954104723","Type":"PullRequestEvent","CreatedAt":"2017-12-06T23:35:00","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1335","RelatedDescription":"Merged pull request \"[WPF] Maps project for WPF backend\" (#1335) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for Maps on WPF backend.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.Maps.WPF project. Other PRs will include  nuspec, ControlGallery...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nNo changes in Xamarin Forms Core\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can create maps for WPF Backend\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6953886333","Type":"IssuesEvent","CreatedAt":"2017-12-06T22:36:38","Actor":"brianlagunas","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1336","RelatedDescription":"Opened issue \"TabbedPage.CurrentPage is null for \"More\" group tabs on iOS\" (#1336) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen switching tabs within the \"more\" group of a TabbedPage on iOS, the CurrentPageChanged event does not fire and the CurrentPage property is not properly set and will return null.\r\n\r\nThat means there is no way to get the current selected tab if it exists in the “more” group.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a TabbedPage with 7+ tabs (see repo link)\r\n2. Handle the CurrentPageChanged event and set a break point\r\n3. Run the app on iOS\r\n4. Selected various tabs in the \"more\" group and observe the event never fires and the CurrentPage property is consistently null until you switch to a tab that is not located in the \"more\" group.  Click on the \"CurrentPage\" button on any of the tabs within the \"more\" group and notice that no Alert is displayed as the CurrentPage is null.  However, select a tab not in the \"more\" group and click the \"CurrentPage\" button and the Alert is displayed with the CurrentPage value.\r\n\r\n### Expected Behavior\r\nThe CurrentPageChange event should fire and the CurrentPage property should be set on each tab change regardless of if it exists in the \"more\" group or not.\r\n\r\n### Actual Behavior\r\nThe CurrentPageChange event does not fire and the CurrentPage is null when selecting tabs in the \"more\" group on iOS.\r\n\r\n### Basic Information\r\n- Version with issue: 2.5.0.77107\r\n- Last known good version: none\r\n- IDE: VS2017 15.5\r\n- Platform Target Frameworks:\r\n  - iOS:  11.1 \r\n\r\n### Reproduction Link\r\nhttps://github.com/brianlagunas/TabbedPageCurrentPageIssue\r\n"},{"Id":"6953671786","Type":"PullRequestEvent","CreatedAt":"2017-12-06T21:53:08","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1335","RelatedDescription":"Opened pull request \"[WPF] Maps project for WPF backend\" (#1335) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for Maps on WPF backend.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.Maps.WPF project. Other PRs will include  nuspec, ControlGallery...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nNo changes in Xamarin Forms Core\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can create maps for WPF Backend\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6953497431","Type":"PullRequestEvent","CreatedAt":"2017-12-06T21:15:14","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1334","RelatedDescription":"Merged pull request \"[WPF] Xamarin Forms WPF Backend - Platform Project\" (#1334) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for WPF backend on Xamarin.Forms.\r\n\r\nNOTE: This PR only includes the Xamarin.Forms.Platform.WPF project. Other PRs will include maps, nuspec, ControlGallery...\r\n\r\n### API Changes (Xamarin.Forms.Core) ###\r\n\r\nAdded:\r\n\r\npublic const string Device.WPF = \"WPF\";\r\n\r\n### Behavioral Changes ###\r\n\r\nYou can create applications for **Windows 7/8/10** with Xamarin.Forms using the WPF backend.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6953176352","Type":"PullRequestEvent","CreatedAt":"2017-12-06T20:03:13","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3080","RelatedDescription":"Merged pull request \"Add initial github issue template\" (#3080) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6953127858","Type":"IssuesEvent","CreatedAt":"2017-12-06T19:53:04","Actor":"pooran","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3087","RelatedDescription":"Opened issue \"Call Directory Extension\" (#3087) at xamarin/xamarin-macios","RelatedBody":"We followed steps provided https://developer.xamarin.com/guides/ios/platform_features/callkit/#Implementing-a-Call-Directory-Extension to create a call directory extension. We have shared a file group, that has less than 1000 phone numbers written from parent iOS app, which the app will read and load it to its directory.\r\n\r\nIt deploys along with iOS project. But when we try enabling the extension from Settings > Phone > Call Blocking and Identification, we get error 'An error occurred while attempting to enable app.\r\n\r\nIn device log, we found this error.\r\n\r\nError (188) / suggestd: Received a connection without suggestions entitlement, rejecting; pid: 801, name: com.apple.Preferences, entitlementKey: com.apple.private.suggestions.contacts, protocol: SGDSuggestManagerContactsProtocol\r\n\r\nAny idea where to put this entitlement? What we have been doing wrong."},{"Id":"6953087269","Type":"PullRequestEvent","CreatedAt":"2017-12-06T19:44:27","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3086","RelatedDescription":"Opened pull request \"Xcode 9.2 merge\" (#3086) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6951475856","Type":"PullRequestEvent","CreatedAt":"2017-12-06T14:36:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3083","RelatedDescription":"Merged pull request \"[Make.config] Add TODO for PACKAGE_VERSION_REV\" (#3083) at xamarin/xamarin-macios","RelatedBody":"In my bump to Xcode 9.2 final: https://github.com/xamarin/xamarin-macios/pull/3081 I updated the `IOS_PACKAGE_VERSION`'s minor # (for the release) but forgot to update `PACKAGE_VERSION_REV` (genuinely didn't know about it).\r\n\r\nIn retrospect, I should have read the bloc of text a couple lines above that says: \"A release branch requires updating\". Therefore in a desperate attempt to avoid that future me missing this I added a `/!\\ README /!\\`. I also updated the comment above `PACKAGE_VERSION_REV` to better highlight the importance of resetting to 0 and a TODO to, again, help future me see this (:"},{"Id":"6947798869","Type":"PullRequestEvent","CreatedAt":"2017-12-05T21:35:30","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Merged pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."},{"Id":"6947632432","Type":"PullRequestEvent","CreatedAt":"2017-12-05T20:59:23","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3085","RelatedDescription":"Opened pull request \"[msbuild] Add support for optionally explaining why inapplicable certificates are not applicable\" (#3085) at xamarin/xamarin-macios","RelatedBody":"Help fix #58251: When looking for valid signing certificates, print out each invalid certificate and state why it's not valid\n(https://bugzilla.xamarin.com/show_bug.cgi?id=58251)"},{"Id":"6946708809","Type":"PullRequestEvent","CreatedAt":"2017-12-05T17:44:01","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3084","RelatedDescription":"Opened pull request \"[msbuild] Don't run Xamarin.Analysis on library projects\" (#3084) at xamarin/xamarin-macios","RelatedBody":"Avoid bug #59697: iOS Library projects fail CompileEntitlements when Analysis is enabled\n(https://bugzilla.xamarin.com/show_bug.cgi?id=59697)\n\nNote: bug #59697 happens because XIA0002_TestCloudAgentReleaseRule depends on `_CompileToNative` which\ndepends on `CompileEntitlements` which then requires the `AppBundleDir` parameter that isn't provided\nfor library project.\n\nIf we ever decide to enable Xamarin.Analysis on library projects we'll have to run a subset of the rules that\ndoesn't include rules like XIA0002 using the same condition this fix is using."},{"Id":"6946024296","Type":"PullRequestEvent","CreatedAt":"2017-12-05T15:42:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3083","RelatedDescription":"Opened pull request \"[Make.config] Add TODO for PACKAGE_VERSION_REV\" (#3083) at xamarin/xamarin-macios","RelatedBody":"In my bump to Xcode 9.2 final: https://github.com/xamarin/xamarin-macios/pull/3081 I updated the `IOS_PACKAGE_VERSION`'s minor # (for the release) but forgot to update `PACKAGE_VERSION_REV` (genuinely didn't know about it).\r\n\r\nIn retrospect, I should have read the bloc of text a couple lines above that says: \"A release branch requires updating\". Therefore in a desperate attempt to avoid that future me missing this I added a `/!\\ README /!\\`. I also updated the comment above `PACKAGE_VERSION_REV` to better highlight the importance of resetting to 0 and a TODO to, again, help future me see this (:"},{"Id":"6945611436","Type":"PullRequestEvent","CreatedAt":"2017-12-05T14:32:21","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3082","RelatedDescription":"Opened pull request \"bump mono 2017-10 branch\" (#3082) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@e65bf00e22b Merge pull request #6122 from lewurm/2017-10-interp-aot-mode-fixes\r\n* mono/mono@8f0589ae817 [mini] Add missing try holes\r\n* mono/mono@ab20369d5f0 [mini] Align stack when resuming to catch handler\r\n* mono/mono@3a134a2d8c3 [mini] Add missing try holes\r\n* mono/mono@2e775c7e390 [mini] Fix clause try hole checking\r\n* mono/mono@a9a4166431e [loader] Don't assert on abstract methods in get_method_constrained\r\n* mono/mono@feba66a6ceb [interp] small improvment for error reporting in interp compile method callback\r\n* mono/mono@6fc6ca1e189 [aot] encode interp_in wrappers with proper signature\r\n* mono/mono@73326908260 [interp] fix copy/paste-typo in n2m macro magic\r\n* mono/mono@b64faae88c3 [aot] add more signatures for interp_in wrapper needed for iOS\r\n* mono/mono@b3b0613ad38 Bump msbuild to bring in fix for #60770 (#6107)\r\n* mono/mono@ddeba6e1bab [interp] fix using conv.u with string\r\n* mono/mono@0360f420fe3 Bump API snapshot submodule\r\n* mono/mono@2f18e7dd23c Bump cecil & linker to match master.\r\n* mono/mono@0f53cb275c4 [interp] allow unsigned i8 in pinvoke signature\r\n\r\nDiff: https://github.com/mono/mono/compare/c5cd0f1e7fb494cec523757b8d7f29cc95b707c9...e65bf00e22b6b410951f62234f50b12d76238e7f\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60770"},{"Id":"6945208911","Type":"PullRequestEvent","CreatedAt":"2017-12-05T13:14:01","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/1663","RelatedDescription":"Merged pull request \"[Debugger] Allow to step into Xamarin code.\" (#1663) at xamarin/xamarin-macios","RelatedBody":"Adds the Xamarin.iOS and Xamarin.Mac sources, stops checkins in the install sources the path to $(TOP)/src in our tree and does a rebase to the locations for the sources (/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/src/[Xamarin.iOS|Xamarin.Mac])"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"938480168515055617","CreatedAt":"2017-12-06T18:48:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing the #Azure Mobile Badge from @XamarinU! Get started today: https://t.co/iirsQ3UrwL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":17,"RawContent":null},{"Id":"938450714149445637","CreatedAt":"2017-12-06T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"Don't forget to register for next week's webinars on updating your #Xamarin apps to get the most out of Android 8 O… https://t.co/1dK9RFJUEq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":18,"RawContent":null},{"Id":"938141429167198208","CreatedAt":"2017-12-05T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"See how ￼Fidelity Mobile is uniting Brazilian citizens and their elected officials using real-time chat apps built… https://t.co/z6zRiQICHR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"938089332048564224","CreatedAt":"2017-12-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":10,"RawContent":null},{"Id":"937774983811616774","CreatedAt":"2017-12-04T20:05:53+00:00","UserScreenname":"xamarinhq","Text":"See what’s new in #VisualStudio 2017 version 15.5: https://t.co/wdtvE6HR1g https://t.co/ASOjIPtCt6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":169,"FavoriteCount":136,"RawContent":null},{"Id":"937729008883699712","CreatedAt":"2017-12-04T17:03:12+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/XFAEcWNh5K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"937507246317203457","CreatedAt":"2017-12-04T02:22:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":27,"RawContent":null},{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":172,"FavoriteCount":78,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":19,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"936280915675959296","CreatedAt":"2017-11-30T17:09:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to set up and configure an #Azure Notification Hub for your #Xamarin.iOS app: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":24,"RawContent":null},{"Id":"935969076786204672","CreatedAt":"2017-11-29T20:29:52+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinars on updating your #Xamarin apps to get the most out of iOS 11 and Android 8 O… https://t.co/RLOHI0RlUX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"935917018624217089","CreatedAt":"2017-11-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":23,"RawContent":null},{"Id":"935600034816634880","CreatedAt":"2017-11-28T20:03:25+00:00","UserScreenname":"xamarinhq","Text":"Build a meeting scheduling mobile app using #XamarinForms and the Microsoft Graph API: https://t.co/LsMgiFD20d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":23,"RawContent":null},{"Id":"935552365058560001","CreatedAt":"2017-11-28T16:54:00+00:00","UserScreenname":"xamarinhq","Text":"5 ways to boost a #XamarinForms app's start up time: https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":37,"RawContent":null},{"Id":"935255661050585088","CreatedAt":"2017-11-27T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/TA7SMA9DLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":27,"RawContent":null},{"Id":"935193758232178688","CreatedAt":"2017-11-27T17:09:01+00:00","UserScreenname":"xamarinhq","Text":"Explore Augmented Reality for #XamarinAndroid with #ARCore, featuring motion tracking, plane detection, and more:… https://t.co/VW73seGwWt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":26,"RawContent":null},{"Id":"935006266874847232","CreatedAt":"2017-11-27T04:44:00+00:00","UserScreenname":"xamarinhq","Text":"Add local notifications to your Xamarin.Mac applications: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2017-12-07T05:30:37.9309782Z","RunDurationInMilliseconds":4071}