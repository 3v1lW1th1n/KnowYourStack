{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6634213133","Type":"IssuesEvent","CreatedAt":"2017-09-25T17:40:22","Actor":"TomPallister","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2214","RelatedDescription":"Closed issue \"Question about setting up authentication middleware\" (#2214) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nSorry this is probably going to be an annoying question!\r\n\r\nIn asp.net core 1.1 I was able to pass IApplicationBuilder into a middleware through DI and then use that builder to add any kind of authentication I wanted during a request e.g..\r\n\r\n```csharp\r\n builder.UseJwtBearerAuthentication(\r\n                    new JwtBearerOptions()\r\n                        {\r\n                            Authority = \"foo\",\r\n                            Audience = \"bar\"\r\n                        });\r\n```\r\nor\r\n\r\n```csharp\r\n     builder.UseIdentityServerAuthentication(new IdentityServerAuthenticationOptions\r\n                {\r\n                    Authority = \"foo\",\r\n                    ApiName = \"foo\",\r\n                    ApiSecret = \"bar\"\r\n                });\r\n```\r\n\r\nNow that we set up the Authentication middleware in ConfigureServices I can't do this anymore. Is there any way to replicate this functionality in asp.net core 2.0?\r\n\r\nThis is probably something that is considered hacky but I use it in my open source project to allow different URLs to have different authentication providers which is quite a good feature."},{"Id":"6633447950","Type":"IssuesEvent","CreatedAt":"2017-09-25T15:03:34","Actor":"TomPallister","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2214","RelatedDescription":"Opened issue \"Question about setting up authentication middleware\" (#2214) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nSorry this is probably going to be an annoying question!\r\n\r\nIn asp.net core 1.1 I was able to pass IApplicationBuilder into a middleware through DI and then use that builder to add any kind of authentication I wanted during a request e.g..\r\n\r\n```csharp\r\n builder.UseJwtBearerAuthentication(\r\n                    new JwtBearerOptions()\r\n                        {\r\n                            Authority = \"foo\",\r\n                            Audience = \"bar\"\r\n                        });\r\n```\r\nor\r\n\r\n```csharp\r\n     builder.UseIdentityServerAuthentication(new IdentityServerAuthenticationOptions\r\n                {\r\n                    Authority = \"foo\",\r\n                    ApiName = \"foo\",\r\n                    ApiSecret = \"bar\"\r\n                });\r\n```\r\n\r\nNow that we set up the Authentication middleware in ConfigureServices I can't do this anymore. Is there any way to replicate this functionality in asp.net core 2.0?\r\n\r\nThis is probably something that is considered hacky but I use it in my open source project to allow different URLs to have different authentication providers which is quite a good feature."},{"Id":"6631832401","Type":"IssuesEvent","CreatedAt":"2017-09-25T09:05:46","Actor":"SteveSandersonMS","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2207","RelatedDescription":"Closed issue \"Why react and all dependencies are added inside devDependencies section ?\" (#2207) at aspnet/Home","RelatedBody":"How npm works , `react` or `redux` these kinda stuffs should go to `dependencies` section inside `package.json` file . But I see those inside `devDependencies` section.\r\nCan anyone share the reason ?\r\nhttps://github.com/aspnet/templating/blob/95f2b8d375256ca7057cbe88dcbfff644697f183/src/Microsoft.DotNet.Web.Spa.ProjectTemplates/content/ReactRedux-CSharp/package.json#L29\r\n\r\nPackages like `webpack` or `webpack-hot-middleware` should be available inside `devDependencies` section.\r\n\r\nI would also like to contribute wherever possible...\r\n\r\nThanks!"},{"Id":"6631287451","Type":"IssuesEvent","CreatedAt":"2017-09-25T06:34:05","Actor":"pavlospap","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2209","RelatedDescription":"Closed issue \"Unable to resolve service when adding services dynamically through reflection\" (#2209) at aspnet/Home","RelatedBody":"Hello everybody...\r\n\r\nI'm using version 2.0 and I'm stuck with a strange issue with DI in one of my projects. Long story short I'm trying to dynamically add services (such as repository services) in my app through reflection using a base generic class so I won't have to create all those repository classes (one for every entity) and add all those implementations in my ConfigureServices method.\r\n\r\nThe entities live in many assemblies so I'm collecting entities from any assembly in current folder (all the types that inherit the base entity class), creating generic interface and implementation types on the fly and adding them to my services.\r\n\r\nYou can download a small test project which reproduces the issue : [TestDI.zip](https://github.com/aspnet/Home/files/1320144/TestDI.zip)\r\n\r\nThere are four assemblies in the test project:\r\n\r\nLib.Data with the base entity class:\r\n\r\n```\r\n// EntityBase.cs\r\nnamespace Lib.Data\r\n{\r\n    public abstract class EntityBase\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nApp.Data with the only entity class:\r\n\r\n```\r\n// School.cs\r\nusing Lib.Data;\r\n\r\nnamespace App.Data\r\n{\r\n    public class School : EntityBase\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nLib witch is where entities are collected and the repository generic classes live:\r\n\r\n```\r\n// IServiceCollectionExtensions.cs\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Reflection;\r\nusing Lib.Data;\r\nusing Lib.Services;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace Lib\r\n{\r\n    public static class IServiceCollectionExtensions\r\n    {\r\n        public static IServiceCollection AddRepositories(this IServiceCollection services)\r\n        {\r\n            var location = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);\r\n            var types = new List<Type>();\r\n            foreach (string file in Directory.GetFiles(location, \"*.dll\"))\r\n            {\r\n                types.AddRange(Assembly.LoadFile(file).GetTypes());\r\n            }\r\n\r\n            var entityTypes = from entityType in types\r\n                              where entityType.IsSubclassOf(typeof(EntityBase)) &&\r\n                                    !entityType.GetTypeInfo().IsAbstract\r\n                              select entityType;\r\n\r\n            foreach (var entityType in entityTypes)\r\n            {\r\n                var interfaceType = typeof(IRepository<>).MakeGenericType(entityType);\r\n                var implementationType = typeof(Repository<>).MakeGenericType(entityType);\r\n                services.AddScoped(interfaceType, implementationType);\r\n            }\r\n\r\n            return services;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n// Servcices/IRepository.cs\r\nnamespace Lib.Services\r\n{\r\n    public interface IRepository<T>\r\n    {\r\n    }\r\n}\r\n```\r\n\r\n```\r\n// Servcices/Repository.cs\r\nnamespace Lib.Services\r\n{\r\n    public class Repository<T> : IRepository<T>\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nAnd, finally, the App assembly with the Startup class and the Seeder service which uses the one and only repository:\r\n\r\n```\r\n// Startup.cs\r\nusing App.Services;\r\nusing Lib;\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\nnamespace App\r\n{\r\n    public class Startup\r\n    {\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddRepositories();\r\n            services.AddScoped<IDataSeeder, DataSeeder>();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env, IDataSeeder seeder)\r\n        {\r\n            seeder.Seed();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.Run(async (context) =>\r\n            {\r\n                await context.Response.WriteAsync(\"Hello World!\");\r\n            });\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n// IDataSeeder.cs\r\nnamespace App.Services\r\n{\r\n    public interface IDataSeeder\r\n    {\r\n        void Seed();\r\n    }\r\n}\r\n```\r\n\r\n```\r\n// DataSeeder.cs\r\nusing App.Data;\r\nusing Lib.Services;\r\n\r\nnamespace App.Services\r\n{\r\n    public class DataSeeder : IDataSeeder\r\n    {\r\n        public DataSeeder(IRepository<School> rep)\r\n        {\r\n        }\r\n\r\n        public void Seed()\r\n        {\r\n            // seed db\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIf I add the service like this\r\n```\r\n//services.AddRepositories();\r\nservices.AddScoped<IRepository<School>, Repository<School>>();\r\nservices.AddScoped<IDataSeeder, DataSeeder>();\r\n```\r\neverything works fine. But when I'm trying to dynamically add them like in the test project I can see (at the end of the ConfigureServices) that the service is there \r\n\r\n![testdi](https://user-images.githubusercontent.com/13450530/30681942-47c8e18a-9eb0-11e7-85e0-90d53e425bf2.png)\r\n\r\nbut when the Configure method is executed I get the following exception:\r\n> InvalidOperationException: Unable to resolve service for type 'Lib.Services.IRepository`1[App.Data.School]' while attempting to activate 'App.Services.DataSeeder'.\r\n\r\nAny ideas?"},{"Id":"6631064717","Type":"IssuesEvent","CreatedAt":"2017-09-25T04:51:11","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2179","RelatedDescription":"Closed issue \"Metapackage AspNetCore.All doesn't work when targeting Net4X\" (#2179) at aspnet/Home","RelatedBody":"What is the reason for this? I'm only interested in building for windows anyway. Shouldn't this be possible?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6636415042","Type":"PullRequestEvent","CreatedAt":"2017-09-26T05:18:28","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/949","RelatedDescription":"Opened pull request \"Added overloads from 0-n arguments\" (#949) at aspnet/SignalR","RelatedBody":"- Added 0 arg overload for InvokeAsync"},{"Id":"6636336133","Type":"PullRequestEvent","CreatedAt":"2017-09-26T04:40:52","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/948","RelatedDescription":"Opened pull request \"Replacing 8-byte-long length prefix with varint\" (#948) at aspnet/SignalR","RelatedBody":""},{"Id":"6636255925","Type":"PullRequestEvent","CreatedAt":"2017-09-26T04:01:53","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/946","RelatedDescription":"Merged pull request \"Remove the params argument from IClientProxy\" (#946) at aspnet/SignalR","RelatedBody":"- This allows passing arrays without having to explicitly ToArray() or AsEnumerable()\r\n- Added overloads up to 10 arguments\r\n- Added tests"},{"Id":"6636048984","Type":"IssuesEvent","CreatedAt":"2017-09-26T02:33:17","Actor":"wallid","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/947","RelatedDescription":"Opened issue \"Does SignalR Core still work with Silverlight?\" (#947) at aspnet/SignalR","RelatedBody":"Just wanted to know if it still works, currently working on a project."},{"Id":"6635877247","Type":"PullRequestEvent","CreatedAt":"2017-09-26T01:23:56","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/946","RelatedDescription":"Opened pull request \"Remove the params argument from IClientProxy\" (#946) at aspnet/SignalR","RelatedBody":"- This allows passing arrays without having to explicitly ToArray() or AsEnumerable()\r\n- Added overloads up to 10 arguments\r\n- Added tests"},{"Id":"6635392952","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:17:58","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/402","RelatedDescription":"Closed issue \"Should the Sockets and SignalR protocol be subprotocols in WebSockets\" (#402) at aspnet/SignalR","RelatedBody":"Should we set the subprotocol when talking over websockets?\r\n\r\n/cc @anurse "},{"Id":"6635392218","Type":"PullRequestEvent","CreatedAt":"2017-09-25T22:17:46","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/933","RelatedDescription":"Merged pull request \"Initial support for websocket subprotocols\" (#933) at aspnet/SignalR","RelatedBody":"- Exposes a SubProtocol property on WebSocketOptions that picks the\r\nprotocol for all connections on the end point.\r\n- This is required for things like mqtt over websockets (the SubProtocol in\r\nthis case is something like mqtt or mqttv3.1)\r\n- Added test\r\n\r\n#402 \r\n\r\nPS: We could look at making this a Func that selects the subprotocol based on the requested protocols but this seems like it could be a start."},{"Id":"6634830903","Type":"IssuesEvent","CreatedAt":"2017-09-25T20:00:19","Actor":"AndriySvyryd","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/945","RelatedDescription":"Opened issue \"Msgpack: byte[] decoded as string\" (#945) at aspnet/SignalR","RelatedBody":"Hub:\r\n```C#\r\npublic Task<byte[]> GetPayload()\r\n    => Task.FromResult(new byte[] {0, 1, 2});\r\n```\r\n\r\nClient:\r\n```TS\r\nconnection.invoke('GetPayload')\r\n            .then((p: number[]) => console.log(typeof(p)))\r\n```\r\n\r\nPrints `string`, expected `object`\r\n\r\nVersion: alpha1"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6636149227","Type":"PullRequestEvent","CreatedAt":"2017-09-26T03:14:36","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6836","RelatedDescription":"Closed pull request \"Updated formatters to wrap exceptions in InputFormatException for inv…\" (#6836) at aspnet/Mvc","RelatedBody":"…alid input\r\n\r\nThere are more tests that I need to add (example: derived from inbuilt formatters, etc.) but wanted to get an early review to see if the direction is good."},{"Id":"6635526835","Type":"IssuesEvent","CreatedAt":"2017-09-25T23:01:50","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6887","RelatedDescription":"Closed issue \"Port fix to 2.0.1: Zero Content-Length for static file 304 #6875\" (#6887) at aspnet/Mvc","RelatedBody":"Porting fix to only set Content-Length when serving body and not for 304 or 412 responses\r\n\r\nSee #6875 \r\n\r\ncc @Eilon @Tratcher "},{"Id":"6635525031","Type":"PullRequestEvent","CreatedAt":"2017-09-25T23:01:17","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6888","RelatedDescription":"Merged pull request \"Port fix for #6875: Only set Content-Length when serving body\" (#6888) at aspnet/Mvc","RelatedBody":"Addresses #6887 \r\n\r\ncc @Tratcher "},{"Id":"6635448473","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:35:18","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6875","RelatedDescription":"Closed issue \"Zero Content-Length for static file 304\" (#6875) at aspnet/Mvc","RelatedBody":"_From @rustamkulenov on September 22, 2017 8:29_\n\nI've developed SPA application (ASP core,MVC,Angular) on Windows but can not host it on Linux. When I reload webpage in browser by F5 Kestrel prints out error and webbrowser receives HTTP code 500. This happens every second reload.\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HL81HU49MSPA\", Request id \"0HL81HU49MSPA:00000002\": An unhandled exception was thrown by the application.\r\n> System.InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 42).\r\n \r\n**Environment:**\r\n\r\n`#dotnet --info`\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  16.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.16.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n**Steps to reproduce:**\r\n1) Create new MVC application:\r\n`#dotnet new mvc`\r\n2) Place file named 1.txt with any content into wwwroot\r\n3) Change Home/Index controller method to:\r\n\r\n> public IActionResult Index()\r\n>{\r\n>  return  File(\"~/1.txt\", \"text/plain\");\r\n>}\r\n\r\n4) `#dotnet run`\r\n\r\nNow, If you try to open localhost:5000 browser will show content of the 1.txt, if you press F5 it'll show error 500. Press F5 again and it'll display content of 1.txt again, etc...\r\n\r\nI tried to change Startup.cs to (as stated in #1289  ):\r\n\r\n> app.UseStaticFiles(new StaticFileOptions(){\r\n>   OnPrepareResponse=context=>{\r\n>     context.Context.Response.Headers.Remove(\"Content-Length\");\r\n>   }\r\n> });\r\n\r\n, but this does not help.\r\n\r\nIf I set breakpoint in Home/Index controller method it is hit every time (i.e. on every reload). But it returns content-length=0 on every even reload. On every odd reload it returns correct value.\n\n_Copied from original issue: aspnet/KestrelHttpServer#2082_"},{"Id":"6635445100","Type":"PullRequestEvent","CreatedAt":"2017-09-25T22:34:14","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6888","RelatedDescription":"Opened pull request \"Port fix for #6875: Only set Content-Length when serving body\" (#6888) at aspnet/Mvc","RelatedBody":"Addresses #6887 \r\n\r\ncc @Tratcher "},{"Id":"6635386584","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:16:03","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6887","RelatedDescription":"Opened issue \"Port fix to 2.0.1: Zero Content-Length for static file 304 #6875\" (#6887) at aspnet/Mvc","RelatedBody":"Porting fix to only set Content-Length when serving body and not for 304 or 412 responses\r\n\r\nSee #6875 \r\n\r\ncc @Eilon @Tratcher "},{"Id":"6635357384","Type":"PullRequestEvent","CreatedAt":"2017-09-25T22:07:14","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6886","RelatedDescription":"Merged pull request \"Only set Content-Length when serving body\" (#6886) at aspnet/Mvc","RelatedBody":"Addresses #6875 \r\n\r\n@Tratcher @rynowak "},{"Id":"6635311197","Type":"PullRequestEvent","CreatedAt":"2017-09-25T21:54:30","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6886","RelatedDescription":"Opened pull request \"Only set Content-Length when serving body\" (#6886) at aspnet/Mvc","RelatedBody":"Addresses #6875 \r\n\r\n@Tratcher @rynowak "},{"Id":"6635084855","Type":"PullRequestEvent","CreatedAt":"2017-09-25T20:58:31","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6876","RelatedDescription":"Closed pull request \"Add MVC 2.0 baselines\" (#6876) at aspnet/Mvc","RelatedBody":""}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6629057168","Type":"IssuesEvent","CreatedAt":"2017-09-24T03:34:25","Actor":"dfederm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1441","RelatedDescription":"Opened issue \"UserManager.Logger is virtual and set in the constructor\" (#1441) at aspnet/Identity","RelatedBody":"Pretty much as the title says.\r\n\r\nThis is considered bad practice, as ctor order is the most base class to the most derived class, so if the property is overridden in a subclass it may not be properly initialized.\r\n\r\nStatic Analysis even has a rule against this: https://docs.microsoft.com/en-us/visualstudio/code-quality/ca2214-do-not-call-overridable-methods-in-constructors (note that properties are effectively just a pair of methods, so the rule does in fact apply).\r\n\r\nHere's a hypothetical example of something that could go wrong:\r\n\r\n```\r\npublic class ApplicationUserManager : UserManager<ApplicationUser>\r\n{\r\n    private IObserver observer;\r\n\r\n    public ApplicationUserManager(IObserver observer)\r\n        : base(/* ... omitted for brevity ... */)\r\n    {\r\n        this.observer = observer;\r\n    }\r\n\r\n    public override ILogger Logger\r\n    {\r\n        get\r\n        {\r\n            this.observer.RecordPropertyGet(nameof(Logger));\r\n            return base.Logger;\r\n        }\r\n        set\r\n        {\r\n            this.observer.RecordPropertySet(nameof(Logger), value);\r\n            base.Logger = value;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIn that example, the base class will set the `Logger` property, which will be the derived classes's impl, which uses `this.observer`, but oops it's null at that point in time since `ApplicationUserManager`'s ctor hasn't actually executed yet.\r\n\r\nI am curious btw why this prop is virtual to begin with. It's a bit odd to see a virtual autoprop."},{"Id":"6626183691","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:27:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401","RelatedDescription":"Closed issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"There's a bug because we added DefaultScheme but didn't update identity to set the default, instead it sets the individual schemes which ends up making setting the default less useful than it could be:\r\n\r\nWe should update AddIdentity to set the DefaultScheme + DefaultChallengeScheme instead"},{"Id":"6626170014","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:24:19","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1395","RelatedDescription":"Closed issue \"Port ChangePhoneNumber fix to 2.0.1\" (#1395) at aspnet/Identity","RelatedBody":"Port https://github.com/aspnet/Identity/issues/1388\r\n\r\nChange: b7d5a461d4234f0522a01e5de3c14b7a05dc019a"},{"Id":"6626169289","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:24:10","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1396","RelatedDescription":"Closed issue \"Port AddEntityFrameworkStores fix to 2.0.1\" (#1396) at aspnet/Identity","RelatedBody":"Port fix for https://github.com/aspnet/Identity/issues/1373\r\n\r\nb865d5878623077eeb715e600d75fa9c24dbb5a1"},{"Id":"6620469682","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:38:34","Actor":"NinoFloris","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1440","RelatedDescription":"Opened issue \"Why isn't the normalized name used when adding roles to the claimsidentity?\" (#1440) at aspnet/Identity","RelatedBody":"https://github.com/aspnet/Identity/blob/eb3ff7fc32dbfff65a1ba6dfdca16487e0f6fc41/src/Microsoft.Extensions.Identity.Core/UserClaimsPrincipalFactory.cs#L143\r\n\r\nAs `ClaimsPrincipal.IsInRole()` calls down to `ClaimsIdentity.HasClaim()` which uses an Ordinal comparison on the value it seems logical to save the normalized name for the role. Or if it's important to be able to display the original name to return a version of ClaimsIdentity that has an overridden `HasClaim` method with an OrdinalIgnoreCase comparison, perhaps just for the default role type."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6629746053","Type":"IssuesEvent","CreatedAt":"2017-09-24T14:20:43","Actor":"HongyanShen","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2083","RelatedDescription":"Opened issue \"Where to get the kestrel log on ubuntu14.04?\" (#2083) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6627182759","Type":"PullRequestEvent","CreatedAt":"2017-09-22T23:35:13","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2077","RelatedDescription":"Merged pull request \"HTTP/2: close connection with PROTOCOL_ERROR when a stream depends on itself\" (#2077) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.5.3.1\r\n\r\n> A stream cannot depend on itself. An endpoint MUST treat this as a stream error (Section 5.4.2) of type PROTOCOL_ERROR."},{"Id":"6626115762","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:10:37","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2082","RelatedDescription":"Closed issue \"Zero Content-Length for static file on Ubuntu\" (#2082) at aspnet/KestrelHttpServer","RelatedBody":"I've developed SPA application (ASP core,MVC,Angular) on Windows but can not host it on Linux. When I reload webpage in browser by F5 Kestrel prints out error and webbrowser receives HTTP code 500. This happens every second reload.\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HL81HU49MSPA\", Request id \"0HL81HU49MSPA:00000002\": An unhandled exception was thrown by the application.\r\n> System.InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 42).\r\n \r\n**Environment:**\r\n\r\n`#dotnet --info`\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  16.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.16.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n**Steps to reproduce:**\r\n1) Create new MVC application:\r\n`#dotnet new mvc`\r\n2) Place file named 1.txt with any content into wwwroot\r\n3) Change Home/Index controller method to:\r\n\r\n> public IActionResult Index()\r\n>{\r\n>  return  File(\"~/1.txt\", \"text/plain\");\r\n>}\r\n\r\n4) `#dotnet run`\r\n\r\nNow, If you try to open localhost:5000 browser will show content of the 1.txt, if you press F5 it'll show error 500. Press F5 again and it'll display content of 1.txt again, etc...\r\n\r\nI tried to change Startup.cs to (as stated in #1289  ):\r\n\r\n> app.UseStaticFiles(new StaticFileOptions(){\r\n>   OnPrepareResponse=context=>{\r\n>     context.Context.Response.Headers.Remove(\"Content-Length\");\r\n>   }\r\n> });\r\n\r\n, but this does not help.\r\n\r\nIf I set breakpoint in Home/Index controller method it is hit every time (i.e. on every reload). But it returns content-length=0 on every even reload. On every odd reload it returns correct value."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6627288579","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:37:12","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1695","RelatedDescription":"Closed pull request \"Added support for minimized boolean bound tag helper attributes\" (#1695) at aspnet/Razor","RelatedBody":"#431 \r\n\r\nAdded support for both `bool` and `Dictionary<*, bool>` types.\r\nHave not added support for `bool?`."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6503882095","Type":"IssuesEvent","CreatedAt":"2017-08-23T18:36:38","Actor":"pejta2207","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Opened issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865) at aspnet/Templates","RelatedBody":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor exception is thrown while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect code, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException."}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"},{"Id":"6598999142","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:09:01","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"},{"Id":"6598993466","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:04:41","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Opened issue \"How do I make file nesting for js broken again. File nesting is really lame. I want my files structured the way I want them. If some lame ass wants nesting let it be an opt-in.\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"},{"Id":"6588109038","Type":"IssuesEvent","CreatedAt":"2017-09-14T00:50:29","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058) at aspnet/Tooling","RelatedBody":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views."},{"Id":"6584205887","Type":"IssuesEvent","CreatedAt":"2017-09-13T09:20:26","Actor":"svallis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Opened issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058) at aspnet/Tooling","RelatedBody":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":26,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":193,"FavoriteCount":158,"RawContent":null}]}},"RunOn":"2017-09-26T05:30:10.1895445Z","RunDurationInMilliseconds":8416}