{"Data":{"Angular-Issues":{"Issues":[{"Id":"533057658","IsPullRequest":true,"CreatedAt":"2019-12-05T01:01:58","Actor":"AndrewKushnir","Number":"34242","RawContent":null,"Title":"test(ivy): `class_binding` benchmark fixes","State":"open","Body":"This commit fixes a couple issues that prevent `class_binding` benchmark from running: moving constants requires by the `benchmark` function before function declaration and referencing correct consts in template instructions.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/34242","RelatedDescription":"Open PR \"test(ivy): `class_binding` benchmark fixes\" (#34242)"},{"Id":"533039799","IsPullRequest":true,"CreatedAt":"2019-12-05T00:30:33","Actor":"AndrewKushnir","Number":"34241","RawContent":null,"Title":"fix(ivy): do not invoke change detection for destroyed views","State":"open","Body":"Prior to this commit, calling change detection for destroyed views resulted in errors being thrown in some cases. This commit adds a check to make sure change detection is skipped in case a given view is marked as destroyed.\r\n\r\nNote: I also ran micro benchmarks and the main observation is that `noop_change_detection` one is 2-3% slower, which is a bit surprising since the operation that this PR adds should be cheap. Other benchmarks have no perf changes.\r\n\r\nThis PR resolves FW-1636.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/34241","RelatedDescription":"Open PR \"fix(ivy): do not invoke change detection for destroyed views\" (#34241)"},{"Id":"532978042","IsPullRequest":true,"CreatedAt":"2019-12-04T23:04:29","Actor":"josephperrott","Number":"34240","RawContent":null,"Title":"fix(common): update closure locales to include directionality data","State":"closed","Body":"When directionality data was added to @angular/common locales, only\r\nthe externally used locales were updated.  We need to additionally\r\nupdate the closure locales which are synced into google3.\r\n","Url":"https://github.com/angular/angular/pull/34240","RelatedDescription":"Closed or merged PR \"fix(common): update closure locales to include directionality data\" (#34240)"},{"Id":"532954625","IsPullRequest":true,"CreatedAt":"2019-12-04T21:48:52","Actor":"atscott","Number":"34239","RawContent":null,"Title":"fix(ivy): destroy componentRef unconditionally","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/34239","RelatedDescription":"Open PR \"fix(ivy): destroy componentRef unconditionally\" (#34239)"},{"Id":"532950913","IsPullRequest":true,"CreatedAt":"2019-12-04T21:41:04","Actor":"kyliau","Number":"34238","RawContent":null,"Title":"feat(bazel): Enable ivy if ng_module attr is True","State":"open","Body":"This commit creates a way for `ng_module` rule to compile with Ivy based\r\non the `ivy` attribute. This enables google3 targets to pick the\r\ncompiler without using `define` flags.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/34238","RelatedDescription":"Open PR \"feat(bazel): Enable ivy if ng_module attr is True\" (#34238)"},{"Id":"532939969","IsPullRequest":true,"CreatedAt":"2019-12-04T21:18:31","Actor":"crisbeto","Number":"34237","RawContent":null,"Title":"feat(docs-infra): add the ability to expose global functions","State":"open","Body":"Adds the ability to expose global functions in the API docs via the `@globalApi` tag. Also supports optionally setting a namespace which will be added to the name automatically (e.g. `foo` will be renamed to `ng.foo`). Relevant APIs should also be exported through the `global.ts` file which will show up under `core/global`.\r\n\r\nFor reference, here's what it'll look like once we have some docs to expose.\r\n![api](https://user-images.githubusercontent.com/4450522/70182349-f6aad700-16e3-11ea-8b08-10247b5866ae.png)\r\n![api2](https://user-images.githubusercontent.com/4450522/70182359-fa3e5e00-16e3-11ea-8ee1-1f732b030db6.png)\r\n","Url":"https://github.com/angular/angular/pull/34237","RelatedDescription":"Open PR \"feat(docs-infra): add the ability to expose global functions\" (#34237)"},{"Id":"532934682","IsPullRequest":true,"CreatedAt":"2019-12-04T21:06:53","Actor":"josephperrott","Number":"34236","RawContent":null,"Title":"build: set upper version limit for yarn to <2","State":"open","Body":"Rather than bumping up the allowed version of yarn on each release\r\nwe should instead just allow for anything within the major version\r\n1 range.\r\n","Url":"https://github.com/angular/angular/pull/34236","RelatedDescription":"Open PR \"build: set upper version limit for yarn to <2\" (#34236)"},{"Id":"532928859","IsPullRequest":true,"CreatedAt":"2019-12-04T20:54:06","Actor":"JoostK","Number":"34235","RawContent":null,"Title":"include generic type for `ModuleWithProviders` in .d.ts files","State":"open","Body":"The `ModuleWithProviders` type has an optional type parameter that\r\nshould be specified to indicate what NgModule class will be provided.\r\nThis enables the Ivy compiler to statically determine the NgModule type\r\nfrom the declaration files. This type parameter will become required in\r\nthe future, however to aid in the migration the compiler will detect\r\ncode patterns where using `ModuleWithProviders` as return type is\r\nappropriate, in which case it transforms the emitted .d.ts files to\r\ninclude the generic type argument.\r\n\r\nThis should reduce the number of occurrences where `ModuleWithProviders`\r\nis referenced without its generic type argument.\r\n\r\nResolves FW-389","Url":"https://github.com/angular/angular/pull/34235","RelatedDescription":"Open PR \"include generic type for `ModuleWithProviders` in .d.ts files\" (#34235)"},{"Id":"532874584","IsPullRequest":true,"CreatedAt":"2019-12-04T19:02:22","Actor":"alxhub","Number":"34234","RawContent":null,"Title":"fix(compiler): switch to modern diagnostic formatting","State":"open","Body":"The compiler exports a `formatDiagnostics` function which consumers can use\r\nto print both ts and ng diagnostics. However, this function was previously\r\nusing the \"old\" style TypeScript diagnostics, as opposed to the modern\r\ndiagnostic printer which uses terminal colors and prints additional context\r\ninformation.\r\n\r\nThis commit updates `formatDiagnostics` to use the modern formatter, plus to\r\nupdate Ivy's negative error codes to Angular 'NG' errors.\r\n\r\nThe Angular CLI needs a little more work to use this function for printing\r\nTS diagnostics, but this commit alone should fix Bazel builds as ngc-wrapped\r\ngoes through `formatDiagnostics`.\r\n","Url":"https://github.com/angular/angular/pull/34234","RelatedDescription":"Open PR \"fix(compiler): switch to modern diagnostic formatting\" (#34234)"},{"Id":"532808245","IsPullRequest":true,"CreatedAt":"2019-12-04T16:49:40","Actor":"josephperrott","Number":"34233","RawContent":null,"Title":"ci: update saucelabs to use angular-framework account","State":"open","Body":"Currently all saucelabs usage in our repos is done using the same\r\naccount, `angular-ci`.  By migrating to use individual accounts\r\nfor each repo, we can better track the usage for each repo as well\r\nas providing concurrency limiting on a per repo basis.\r\n\r\nAdditionally, we no longer use two separate accounts based on being\r\non master or a PR branch, so this logic can be removed.\r\n","Url":"https://github.com/angular/angular/pull/34233","RelatedDescription":"Open PR \"ci: update saucelabs to use angular-framework account\" (#34233)"},{"Id":"532779236","IsPullRequest":true,"CreatedAt":"2019-12-04T16:01:11","Actor":"mprobst","Number":"34232","RawContent":null,"Title":"refactor(upgrade): avoid mutable exports.","State":"open","Body":"Previously, create_angular_testing_module would export a mutable `let`\r\nbinding. The binding is already exporting using an accessor function\r\nthough, so the export on the let variable seems like an accidental\r\noversight.\r\n\r\nThis is functionally equivalent, but makes it easier for module\r\noptimizers such as Closure Compiler to track down side effects and prune\r\nmodules.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n\r\n## PR Type\r\n\r\n- [x] Refactoring (no functional changes, no api changes)\r\n","Url":"https://github.com/angular/angular/pull/34232","RelatedDescription":"Open PR \"refactor(upgrade): avoid mutable exports.\" (#34232)"},{"Id":"532669457","IsPullRequest":false,"CreatedAt":"2019-12-04T13:01:40","Actor":"mattiLeBlanc","Number":"34231","RawContent":null,"Title":"URL Matcher to allow service injection, to allow two routes with same path to be selected based on criteria.","State":"open","Body":"# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/router\r\n\r\n\r\n### Description\r\nCurrently we have 2 levels of authorisation in our app: Super admin and Organisation Admin.\r\nWhen those users login via `/auth/login` the are authenticated and then the logic redirects to the root `/`.\r\nOn the route path (''), I have 2 child routes, both using an UrlMatcher instead of a path.\r\n```\r\n{\r\n  path: '',\r\n  children: [\r\n    {\r\n       matcher: SuperAdminMatcher\r\n       loadChildren: <super admin module>\r\n    },\r\n    {\r\n       matcher: OrgAdminMatcher\r\n       loadChildren: <Org admin module>\r\n    }\r\n  ]\r\n```\r\n\r\nThose matcher functions require to know what user was logged in via the AuthService. However, other then looking in my LocalStorage and get my JWT, there is no way for me to access the AuthService because I can't inject that service in the Matchers.\r\nSo my matcher can never reject based on AuthState.\r\n\r\nI ideally want to offer to paths:\r\nSuperadmin:\r\n`/organisation/list`\r\n`/organisation/ORG NAME/post/list`  <- super admin opening an Organisation\r\n\r\nOrg admin:\r\n`/post/list`\r\n`/post/edit/<guid>`\r\n\r\nSo unfortunately I have to use to different path names to make this work, and that makes the path unnecessary long, like `http://localhost:4200/superadmin/organisation/Bramble-Cay-College/post/list\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\nAllow for Injection of Providers in the Matcher. This way we can create a more advanced matcher. It is kinda like Resolve, however Resolve is currently happening after the Path or Url has been matched.\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\nThe only real workaround I can find is using different path names, or using a wrapper component.\r\nHowever, I want each child to lazy load a Module, and I create a RootComponent, and load either the SuperAdminComponent or the OrgAdminComponent via *ngIf, it wouldn't be lazy loaded.","Url":"https://github.com/angular/angular/issues/34231","RelatedDescription":"Open issue \"URL Matcher to allow service injection, to allow two routes with same path to be selected based on criteria.\" (#34231)"},{"Id":"532663626","IsPullRequest":false,"CreatedAt":"2019-12-04T12:50:07","Actor":"GiorgosPap","Number":"34230","RawContent":null,"Title":"CanActivateOr interface","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/router\r\n\r\n\r\n### Description\r\nThe current implementation of **CanActivate** interface is:  \r\n\r\n> If all guards return true, navigation will continue. \r\n\r\n\r\n### Describe the solution you'd like\r\nIt would be useful to exist a **CanActivateOr** interface that will evaluate the following:\r\n\r\n>  If some guards return true, navigation will continue. \r\n\r\nExample\r\n```\r\nconst routes: Routes = [\r\n  {\r\n    path: 'pathA',\r\n    component: ComponentA,\r\n    resolve: {\r\n      data: ResolverA\r\n    },\r\n    CanActivateOr: [Guard1, Guard2] // If Guard1 OR Guard2 returns true then continue\r\n  }\r\n];\r\n```\r\n\r\n","Url":"https://github.com/angular/angular/issues/34230","RelatedDescription":"Open issue \"CanActivateOr interface\" (#34230)"},{"Id":"532644308","IsPullRequest":false,"CreatedAt":"2019-12-04T12:28:38","Actor":"neofuture","Number":"34229","RawContent":null,"Title":"Cant perform ng build --prod with service workers, compiling saying it cant find the file ngsw-config.json","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nRC4\r\n\r\n\r\n### Is this a regression?\r\n\r\nYes (well i think so)\r\n\r\n\r\n### Description\r\n\r\nCompiler things that ngsw-config.json is missing but its current and valid\r\n\r\n```\r\nmacos:api carlfearby$ ng build --prod\r\nGenerating ES5 bundles for differential loading...\r\nES5 bundle generation complete.\r\n\r\nchunk {15} polyfills-es2015.e36cdc60790d45df5654.js (polyfills) 35.9 kB [initial] [rendered]\r\nchunk {16} polyfills-es5.7546a62f1d16f97d6209.js (polyfills-es5) 125 kB [initial] [rendered]\r\nchunk {0} runtime-es2015.ab78985ffb7d8d43dd82.js (runtime) 2.53 kB [entry] [rendered]\r\nchunk {0} runtime-es5.ab78985ffb7d8d43dd82.js (runtime) 2.53 kB [entry] [rendered]\r\nchunk {1} 1-es2015.81334fc3ecae6a479384.js () 1.28 kB  [rendered]\r\nchunk {1} 1-es5.81334fc3ecae6a479384.js () 1.28 kB  [rendered]\r\nchunk {2} 2-es2015.c95adc4be43c1d058024.js () 1.42 kB  [rendered]\r\nchunk {2} 2-es5.c95adc4be43c1d058024.js () 1.42 kB  [rendered]\r\nchunk {3} 3-es2015.9bac6a17612988d60954.js () 1.27 kB  [rendered]\r\nchunk {3} 3-es5.9bac6a17612988d60954.js () 1.27 kB  [rendered]\r\nchunk {4} 4-es2015.065a029c8818ada788e8.js () 1.43 kB  [rendered]\r\nchunk {4} 4-es5.065a029c8818ada788e8.js () 1.43 kB  [rendered]\r\nchunk {5} 5-es2015.ef3f3e895e132488c5b1.js () 1.45 kB  [rendered]\r\nchunk {5} 5-es5.ef3f3e895e132488c5b1.js () 1.44 kB  [rendered]\r\nchunk {6} 6-es2015.2c873137a5b44100ce80.js () 1.47 kB  [rendered]\r\nchunk {6} 6-es5.2c873137a5b44100ce80.js () 1.46 kB  [rendered]\r\nchunk {7} 7-es2015.b5ae8601644fe456d6f0.js () 1.42 kB  [rendered]\r\nchunk {7} 7-es5.b5ae8601644fe456d6f0.js () 1.42 kB  [rendered]\r\nchunk {8} 8-es2015.bfd43f2a89a3f19078c9.js () 1.29 kB  [rendered]\r\nchunk {8} 8-es5.bfd43f2a89a3f19078c9.js () 1.29 kB  [rendered]\r\nchunk {9} 9-es2015.458f1ed4ed0eae471911.js () 1.29 kB  [rendered]\r\nchunk {9} 9-es5.458f1ed4ed0eae471911.js () 1.28 kB  [rendered]\r\nchunk {10} 10-es2015.af4288487cd00a7ece3e.js () 1.43 kB  [rendered]\r\nchunk {10} 10-es5.af4288487cd00a7ece3e.js () 1.43 kB  [rendered]\r\nchunk {11} 11-es2015.02eba41db3dee8a71930.js () 4.19 kB  [rendered]\r\nchunk {11} 11-es5.02eba41db3dee8a71930.js () 4.19 kB  [rendered]\r\nchunk {12} 12-es2015.9f0989b48eb7e7d2960a.js () 1.34 kB  [rendered]\r\nchunk {12} 12-es5.9f0989b48eb7e7d2960a.js () 1.34 kB  [rendered]\r\nchunk {13} 13-es2015.1a9f3f2e9377c1aba680.js () 1.67 kB  [rendered]\r\nchunk {13} 13-es5.1a9f3f2e9377c1aba680.js () 1.67 kB  [rendered]\r\nchunk {14} main-es2015.cd2c53cb096e2a6f13e6.js (main) 484 kB [initial] [rendered]\r\nchunk {14} main-es5.cd2c53cb096e2a6f13e6.js (main) 555 kB [initial] [rendered]\r\nchunk {17} styles.f7e0e5b2307e0703267a.css (styles) 11.2 kB [initial] [rendered]\r\nchunk {scripts} scripts.14dd29b7ed0b1c01f172.js (scripts) 131 bytes [entry] [rendered]\r\nDate: 2019-12-04T12:02:25.122Z - Hash: 40c18544d4d08469ff79 - Time: 24904ms\r\nError: Expected to find an ngsw-config.json configuration file in the /Users/carlfearby/Dropbox (Personal)/Angular Projects/Framework folder. Either provide one or disable Service Worker in your angular.json configuration file.\r\nmacos:api carlfearby$ cat /Users/carlfearby/Dropbox\\ \\(Personal\\)/Angular\\ Projects/Framework/ngsw-config.json \r\n{\r\n  \"$schema\": \"./node_modules/@angular/service-worker/config/schema.json\",\r\n  \"index\": \"/index.html\",\r\n  \"assetGroups\": [\r\n    {\r\n      \"name\": \"app\",\r\n      \"installMode\": \"prefetch\",\r\n      \"resources\": {\r\n        \"files\": [\r\n          \"/favicon.ico\",\r\n          \"/index.html\",\r\n          \"/manifest.webmanifest\",\r\n          \"/*.css\",\r\n          \"/*.js\"\r\n        ]\r\n      }\r\n    }, {\r\n      \"name\": \"assets\",\r\n      \"installMode\": \"lazy\",\r\n      \"updateMode\": \"prefetch\",\r\n      \"resources\": {\r\n        \"files\": [\r\n          \"/assets/**\",\r\n          \"/*.(eot|svg|cur|jpg|png|webp|gif|otf|ttf|woff|woff2|ani)\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>Error: Expected to find an ngsw-config.json configuration file in the /Users/carlfearby/Dropbox (Personal)/Angular Projects/Framework folder. Either provide one or disable Service Worker in your angular.json configuration file.</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.2.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@angular/cdk                      8.2.3\r\n@angular/pwa                      0.803.19\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nBuilds were working fine before update to RC4\r\n","Url":"https://github.com/angular/angular/issues/34229","RelatedDescription":"Closed issue \"Cant perform ng build --prod with service workers, compiling saying it cant find the file ngsw-config.json\" (#34229)"},{"Id":"532588063","IsPullRequest":false,"CreatedAt":"2019-12-04T12:22:21","Actor":"kumaresan-subramani","Number":"34226","RawContent":null,"Title":"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked","State":"closed","Body":"# 🐞 bug report\r\n\r\nI have created an angular application with our multiselect control, refer below:\r\n\r\nhttps://stackblitz.com/edit/angular-5hwaty?file=src/app/app.component.ts\r\n\r\nI am facing below error when i choose dropdown value and click button which has been placed inside dropdown value usig `ng-template`,  facing below error\r\n\r\n```\r\nERROR\r\nError: ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: 'ng-untouched: true'. Current value: 'ng-untouched: false'.\r\n```\r\n\r\n\r\n### Description\r\n\r\nI have tried so many solutions which are listed below:\r\n\r\n1. https://stackoverflow.com/questions/39787038/how-to-manage-angular2-expression-has-changed-after-it-was-checked-exception-w\r\n\r\n2.https://github.com/angular/angular/issues/14748#issuecomment-313190829\r\n\r\n3.https://github.com/angular/angular/issues/14748#issuecomment-312148877\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n1. open sample - https://stackblitz.com/edit/angular-5hwaty?file=src/app/app.component.ts\r\n2. choose drop-down value in sample\r\n3.click button in choosed value \r\n4. you will see an error\r\n\r\n> Note : Error occurs only in first time clicking button\r\n\r\n## 🔥 Exception or Error\r\nIssue occurs only in chrome browser:\r\n\r\nhttps://github.com/angular/angular/issues/22426#issuecomment-368306896\r\n\r\n## 🌍  Your Environment\r\n\r\nLatest angular packages:\r\n\r\n`Angular-cli : 8.3.20`\r\n\r\n\r\n**Anything else relevant?**\r\n\r\nWhen i use `changeDetection: ChangeDetectionStrategy.OnPush` it works fine \r\n","Url":"https://github.com/angular/angular/issues/34226","RelatedDescription":"Closed issue \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked\" (#34226)"},{"Id":"532616932","IsPullRequest":true,"CreatedAt":"2019-12-04T11:14:22","Actor":"MrJithil","Number":"34228","RawContent":null,"Title":"docs(core): add new example for HostListener","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\nThis PR will add new example for the HostListner usage.\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #34165\r\n\r\n\r\n## What is the new behavior?\r\nnew example for how listen to global events\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/34228","RelatedDescription":"Open PR \"docs(core): add new example for HostListener\" (#34228)"},{"Id":"532612880","IsPullRequest":false,"CreatedAt":"2019-12-04T11:06:28","Actor":"Phil147","Number":"34227","RawContent":null,"Title":"[ivy rc4] new unbound (static) input handling breaks existing code and makes component lifecycle inconsistent","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n-\r\n\r\n### Is this a regression?\r\n\r\nNo.\r\n\r\n\r\n### Description\r\n\r\nIn the ivy compatibility docs you can find this important sentence about a change coming with v9/ivy:\r\n\r\n> Unbound inputs for directives (e.g. name in `<my-comp name=\"\">`) are now set upon creation of the view, before change detection runs (previously, all inputs were set during change detection).\r\n\r\nWe ran into a lot of issues with this, e.g. when you use a `ViewChild` query in an input setter.\r\nI created a really simple example showing the problem and that the same code works for v8 but not in v9 (couldn't reproduce it in stackblitz)\r\nhttps://github.com/Phil147/unbound-input-problem-v8\r\nhttps://github.com/Phil147/unbound-input-problem-v9\r\n\r\nThe example is very simplified and not best practice but imagine you want to call a function of another custom component you query here.\r\nIn the v9 repo you will get an error once you start the app with `ng serve` because the ViewChild query is not yet resolved and thus undefined.\r\n\r\nWith v8 this works fine because the inputs are set during first change detection and the ViewChild query was resolved (with static: true). With v9 this code breaks but only in the particular situation when the input is not used with a binding but with a static value. We only found this issue by accident because in our unit tests we typically used bindings, but one specific example in our documentation (of our component library) failed during runtime.\r\nThis is a very confusing behavior now that the timing changes depending on how the inputs are used in templates. For me it would make more sense to keep this consistent.\r\n\r\nFrom what I found this change was made to get better performance because static inputs don't change and you can leave them out during change detection, which makes total sense.\r\nI wonder if it might be possible to still use the information you gather about static attributes but run them together with all other inputs during the first change detection run and then ignore them instead of moving their calls before the change detection happens.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nworks fine:\r\nhttps://github.com/Phil147/unbound-input-problem-v8\r\nsame code breaks in v9:\r\nhttps://github.com/Phil147/unbound-input-problem-v9\r\n\r\n\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre>9.0.0-rc.4<code>\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.13.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/34227","RelatedDescription":"Open issue \"[ivy rc4] new unbound (static) input handling breaks existing code and makes component lifecycle inconsistent\" (#34227)"},{"Id":"532491302","IsPullRequest":true,"CreatedAt":"2019-12-04T07:04:45","Actor":"alan-agius4","Number":"34225","RawContent":null,"Title":"docs: add documentation for server and Ivy without bundleDependencies","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/34225","RelatedDescription":"Open PR \"docs: add documentation for server and Ivy without bundleDependencies\" (#34225)"},{"Id":"532374766","IsPullRequest":true,"CreatedAt":"2019-12-04T07:03:40","Actor":"AndrewKushnir","Number":"34224","RawContent":null,"Title":"test(ivy): update `ngI18nClosureMode` flag usage in tests","State":"closed","Body":"Commit that updated i18n message ids rendering (https://github.com/angular/angular/commit/e524322c43ce31c5c6d45bcdc320338b9bd66249) also introduced a couple tests that relied on a previous version of `ngI18nClosureMode` flag format. The `ngI18nClosureMode` usage format was changed in the followup commit (https://github.com/angular/angular/commit/c4ce24647bb45b54db9ad37a21c36e65658fea68) and triggered a problem with the mentioned tests. This commit updates the tests to a new `ngI18nClosureMode` flag usage format.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/34224","RelatedDescription":"Closed or merged PR \"test(ivy): update `ngI18nClosureMode` flag usage in tests\" (#34224)"},{"Id":"532359405","IsPullRequest":false,"CreatedAt":"2019-12-04T00:27:35","Actor":"vitaliypva","Number":"34223","RawContent":null,"Title":"ERROR on build: unexpected value null exported by the module","State":"open","Body":"I'm getting this error during the Angular Build (ng build --prod):\r\n`ERROR in: Unexpected value 'null' exported by the module 'SharedModule'`\r\nIt builds fine for dev (ng build)\r\n\r\nI  have this error when I have:\r\n`export default class SomeComponent {...}` \r\n    \r\nChanging it to: \r\n    `export class SomeComponent {...}` \r\nfixes the problem ","Url":"https://github.com/angular/angular/issues/34223","RelatedDescription":"Open issue \"ERROR on build: unexpected value null exported by the module\" (#34223)"},{"Id":"532309545","IsPullRequest":true,"CreatedAt":"2019-12-04T00:19:14","Actor":"josephperrott","Number":"34220","RawContent":null,"Title":"build: add karma-sauce-launcher dependency for karma_web_test macro","State":"closed","Body":"Currently our bazel saucelabs tests silently fail as it does not have\r\nkarma-sauce-launcher available from npm.  By providing it as expected\r\nwe will properly run the bazel saucelabs tests once more\r\n","Url":"https://github.com/angular/angular/pull/34220","RelatedDescription":"Closed or merged PR \"build: add karma-sauce-launcher dependency for karma_web_test macro\" (#34220)"},{"Id":"532351370","IsPullRequest":true,"CreatedAt":"2019-12-04T00:06:06","Actor":"aikidave","Number":"34222","RawContent":null,"Title":"docs: add David Shevitz to about page","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nJust adding Dave Shevitz to the about page\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nYou'll now see Dave Shevitz in the about page\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/34222","RelatedDescription":"Open PR \"docs: add David Shevitz to about page\" (#34222)"},{"Id":"532351186","IsPullRequest":true,"CreatedAt":"2019-12-04T00:05:41","Actor":"alxhub","Number":"34221","RawContent":null,"Title":"fix(ivy): properly parenthesize ternary expressions when emitted","State":"open","Body":"Previously, ternary expressions were emitted as:\r\n\r\ncondExpr ? trueCase : falseCase\r\n\r\nHowever, this causes problems when ternary operations are nested. In\r\nparticular, a template expression of the form:\r\n\r\na?.b ? c : d\r\n\r\nwould have compiled to:\r\n\r\na == null ? null : a.b ? c : d\r\n\r\nThe precedence here is incorrect:\r\n\r\na == null ? null : (a.b ? c : d)\r\n\r\nwhen in reality the desired association is:\r\n\r\n(a == null ? null : a.b) ? c : d\r\n\r\nThis commit adds parentheses when emitting ternary operations to preserve\r\nthe desired precedence.\r\n","Url":"https://github.com/angular/angular/pull/34221","RelatedDescription":"Open PR \"fix(ivy): properly parenthesize ternary expressions when emitted\" (#34221)"},{"Id":"532101713","IsPullRequest":false,"CreatedAt":"2019-12-03T23:38:57","Actor":"antAirbus","Number":"34214","RawContent":null,"Title":"US Export Control (ECCN)","State":"closed","Body":"We are conducting export control checks on software that uses this library and have identified it as potentially containing cryptography.\r\n\r\nAs the download links for this library are hosted by github can the developers confirm whether the required notification under the EAR related to open source encryption source code has been made to US Government or advise the grounds why the developers deem such notification isn’t required. \r\n\r\nThe requirement comes from US EAR legislation and github T&Cs relating to submissions.\r\n\r\n\"You may not use GitHub in violation of export control or sanctions laws of the United States or any other applicable jurisdiction. You may not use GitHub if you are or are working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions administered by a U.S. government agency. GitHub may allow persons in certain sanctioned countries or territories to access certain GitHub services pursuant to U.S. government authorizations. For more information, please see our Export Controls policy.\"\r\n\r\nhttps://help.github.com/en/github/site-policy/github-terms-of-service\r\nhttps://help.github.com/en/github/site-policy/github-and-trade-controls\r\n\r\nFor background information and some FAQ’s please see\r\nhttp://www.apache.org/dev/crypto.html\r\nhttps://www.ecfr.gov/cgi-bin/text-idx?SID=00a8f54989eaf101a84eff3db59ac6e9&mc=true&node=se15.2.742_115&rgn=div88\r\n","Url":"https://github.com/angular/angular/issues/34214","RelatedDescription":"Closed issue \"US Export Control (ECCN)\" (#34214)"},{"Id":"532270902","IsPullRequest":false,"CreatedAt":"2019-12-03T21:33:13","Actor":"frankadrian","Number":"34219","RawContent":null,"Title":"RC 4 no longer guarantees your order of css classes to an element","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> \r\n\r\nThe issue is caused by package @angular/compiler\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 8.2.8\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> \r\nWhen defining an element, in an html file, with multiple css classes the order of theses classes is no longer guranteed.\r\nFor example:\r\n\r\n    <div class=\"center aligned\">\r\n        ...\r\n    </div>\r\n\r\nthe element gets rendered in the dom like so:\r\n\r\n    <div _ngcontent-ikg-c67=\"\" class=\"aligned center ng-tns-c67-1\">\r\n        ...\r\n    </div>\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\nno error\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.11.1\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, platform-browser, platform-browser-dynamic, router\r\n... service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@angular/http                     7.2.15\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\nThis happens for both `ng serve` and `ng serve --prod`","Url":"https://github.com/angular/angular/issues/34219","RelatedDescription":"Closed issue \"RC 4 no longer guarantees your order of css classes to an element\" (#34219)"},{"Id":"532257243","IsPullRequest":true,"CreatedAt":"2019-12-03T20:50:11","Actor":"jbogarthyde","Number":"34218","RawContent":null,"Title":"Expand API doc for injectors and providers","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n https://next.angular.io/api/core/Injectable#options is not entirely clear, and does not mention other options.\r\n\r\nIssue Number:  https://github.com/angular/angular/issues/34107\r\n\r\n## What is the new behavior?\r\nEdit existing text, add other options.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n ","Url":"https://github.com/angular/angular/pull/34218","RelatedDescription":"Open PR \"Expand API doc for injectors and providers\" (#34218)"},{"Id":"532227030","IsPullRequest":true,"CreatedAt":"2019-12-03T19:55:09","Actor":"jbogarthyde","Number":"34217","RawContent":null,"Title":"Add asset info to library guide","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nNo mention in docs of possible ways to add assets to a library\r\n\r\nIssue Number: https://github.com/angular/angular/issues/33141\r\n\r\n\r\n## What is the new behavior?\r\nAdds a section on assets to https://angular.io/guide/creating-libraries\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/34217","RelatedDescription":"Open PR \"Add asset info to library guide\" (#34217)"},{"Id":"532189568","IsPullRequest":true,"CreatedAt":"2019-12-03T18:48:10","Actor":"josephperrott","Number":"34216","RawContent":null,"Title":"ci: run saucelabs via bazel","State":"open","Body":"","Url":"https://github.com/angular/angular/pull/34216","RelatedDescription":"Open PR \"ci: run saucelabs via bazel\" (#34216)"},{"Id":"532124790","IsPullRequest":true,"CreatedAt":"2019-12-03T18:42:15","Actor":"gkalpak","Number":"34215","RawContent":null,"Title":"docs(service-worker): fix paths for `ngsw-config` command to match latest CLI","State":"closed","Body":"☝️ ","Url":"https://github.com/angular/angular/pull/34215","RelatedDescription":"Closed or merged PR \"docs(service-worker): fix paths for `ngsw-config` command to match latest CLI\" (#34215)"},{"Id":"532034553","IsPullRequest":true,"CreatedAt":"2019-12-03T18:40:27","Actor":"gkalpak","Number":"34213","RawContent":null,"Title":"fix(docs-infra): avoid version mismatch error when using local Angular packages","State":"closed","Body":"The local Angular packages used to build `aio/` when running `yarn setup-local`/`yarn build-local` (and related commands), are built by bazel. Bazel, determines the version to use for these locally built packages based on the latest tag for a commit on the current branch. (This works as expected during the release, because the packages are built on the correct branch with up-to-date tags.)\r\n\r\nDuring local development, however, this often leads to generating older versions than what the current `@angular/cli` version is compatible with, if the user has not fetched the latest tags from `angular/angular` or the branch has not been rebased recently.\r\n\r\nPreviously, the above (common) situation would result in a build error by the CLI. (Note that this would be a false error, because in this case the version set by bazel would not reflect the actual version of the local packages.) The solution would be for the user to fetch the latest tags from `angular/angular`, rebase their branch and run a bazel build again (ensuring that it would actually build anew and not emit cached artifacts). This was cumbersome and most people didn't even know about it.\r\n\r\nThis commit avoids this error and the associated pain-points by overwriting the versions of the installed local packages with fake versions based on the ones in the lockfile, which are guaranteed to be compatible with the currently used CLI version.\r\n\r\nFixes #34208.\r\n","Url":"https://github.com/angular/angular/pull/34213","RelatedDescription":"Closed or merged PR \"fix(docs-infra): avoid version mismatch error when using local Angular packages\" (#34213)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"533067130","IsPullRequest":false,"CreatedAt":"2019-12-05T01:25:05","Actor":"tomanovy","Number":"16354","RawContent":null,"Title":"Sass Modules - ng build&lint error when @use and @include mixins with namespaces","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [x] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNot sure, probably no.\r\n\r\n\r\n### Description\r\n\r\nAngular lint and build is impossible when using SASS namespaces.\r\n\r\n1. (ng lint) how to allow \"@use\" if \"at-rule-no-unknown\" is not supported\r\n2. (ng build) how to allow SASS Modules namespaces?\r\n\r\n## 🔬 Minimal Reproduction\r\n1. ng new app --style=scss\r\n2. modify tslint.json\r\n```json\r\n    {\r\n      \"extends\": \"tslint:recommended\",\r\n      \"rulesDirectory\": [\r\n        \"codelyzer\"\r\n      ],\r\n  \"rules\": {\r\n    \"at-rule-no-unknown\": [true, {\r\n      \"ignoreAtRules\": [\"mixin\"]\r\n    }],\r\n  // ...\r\n```\r\n3. run ng lint - result:\r\n```\r\nCould not find implementations for the following rules specified in the configuration:\r\n    at-rule-no-unknown\r\nTry upgrading TSLint and/or ensuring that you have all necessary custom rules installed.\r\nIf TSLint was recently upgraded, you may have old rules configured which need to be cleaned up.\r\n```\r\n4. create new file /src/app/styles/mix.scss\r\n```scss\r\n@mixin size($fontsize) {\r\n  font-size: $fontsize;\r\n}  \r\n```\r\n5. modify app.component.scss and add (with new line)\r\n```scss\r\n@use \"styles/mix\" as mi; \r\nbutton {\r\n    @include mi.size('10px');\r\n}\r\n```\r\n6. run ng build\r\n```\r\nERROR: Invalid CSS after \"...clude normalize\": expected \"}\", was \".button-reset; // 1\"\r\nAn unhandled exception occurred: Invalid CSS after \"...clude normalize\": expected \"}\", was     \".button-reset; // 1\"\r\nSee \"/tmp/ng-OkZ01p/angular-errors.log\" for further details.\r\n```\r\n## 🔥 Exception or Error\r\nIssue 1:\r\n<pre><code>\r\nCould not find implementations for the following rules specified in the configuration:\r\n    at-rule-no-unknown\r\nTry upgrading TSLint and/or ensuring that you have all necessary custom rules installed.\r\nIf TSLint was recently upgraded, you may have old rules configured which need to be cleaned up.\r\n</code></pre>\r\nIssue 2:\r\n<pre><code>\r\nERROR: Invalid CSS after \"...clude normalize\": expected \"}\", was \".button-reset; // 1\"\r\nAn unhandled exception occurred: Invalid CSS after \"...clude normalize\": expected \"}\", was     \".button-reset; // 1\"\r\nSee \"/tmp/ng-OkZ01p/angular-errors.log\" for further details.\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.0-rc.3\r\nNode: 10.15.2\r\nOS: linux x64\r\nAngular: 9.0.0-rc.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.0-rc.3\r\n@angular-devkit/build-angular      0.900.0-rc.3\r\n@angular-devkit/build-ng-packagr   0.900.0-rc.3\r\n@angular-devkit/build-optimizer    0.900.0-rc.3\r\n@angular-devkit/build-webpack      0.900.0-rc.3\r\n@angular-devkit/core               9.0.0-rc.3\r\n@angular-devkit/schematics         9.0.0-rc.3\r\n@ngtools/webpack                   9.0.0-rc.3\r\n@schematics/angular                9.0.0-rc.3\r\n@schematics/update                 0.900.0-rc.3\r\nng-packagr                         9.0.0-rc.2\r\nrxjs                               6.5.3\r\ntypescript                         3.6.4\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nng serve is working correctly - Shold not be reported as problem, as it follows specs:\r\nhttps://sass-lang.com/documentation/at-rules/use \r\n","Url":"https://github.com/angular/angular-cli/issues/16354","RelatedDescription":"Open issue \"Sass Modules - ng build&lint error when @use and @include mixins with namespaces\" (#16354)"},{"Id":"532980069","IsPullRequest":false,"CreatedAt":"2019-12-04T22:41:44","Actor":"wagnermaciel","Number":"16353","RawContent":null,"Title":"Remove legacy guessing logic from app-shell","State":"open","Body":"Currently `_getServerModuleBundlePath` of `app-shell/index.ts` uses a regular expression to try to find the main bundle file.\r\n\r\nhttps://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/app-shell/index.ts#L111\r\n\r\nThis is unnecessary since the main bundle will always be named main.js\r\n\r\n@alan-agius4 I noticed this issue as a result of your comment that revealed this guessing logic is no longer needed\r\n\r\nhttps://github.com/angular/universal/pull/1357#discussion_r353970284","Url":"https://github.com/angular/angular-cli/issues/16353","RelatedDescription":"Open issue \"Remove legacy guessing logic from app-shell\" (#16353)"},{"Id":"532823836","IsPullRequest":true,"CreatedAt":"2019-12-04T20:20:27","Actor":"josephperrott","Number":"16350","RawContent":null,"Title":"ci: update saucelabs to use angular-tooling account","State":"closed","Body":"Currently all saucelabs usage in our repos is done using the same\r\naccount angular-ci.  By migrating to use individual accounts\r\nfor each repo, we can better track the usage for each repo as well\r\nas providing concurrency limiting on a per repo basis.","Url":"https://github.com/angular/angular-cli/pull/16350","RelatedDescription":"Closed or merged PR \"ci: update saucelabs to use angular-tooling account\" (#16350)"},{"Id":"530733545","IsPullRequest":false,"CreatedAt":"2019-12-04T20:02:58","Actor":"Karasuni","Number":"16327","RawContent":null,"Title":"Angular Update to v9 does not include the changes in i18n","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nN/A\r\n\r\n\r\n### Description\r\nThe upgrade function and [guide](https://update.angular.io/#8.0:9.0) does not include the breaking changes in localization. I expect this to be mentioned in the guide ('checkbox I use i18n') and/or to be automatically configured along with the other breaking changes from 8 to 9.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n1. Create an angular 8 workspace: `ng new`\r\n2. Add ngx-translate: `npm install @ngx-translate/core --save`\r\n3. Follow the steps to upgrade from angular 8 to angular 9: https://update.angular.io/#8.0:9.0\r\n4. Run the project and observe the error below\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>core.js:31686 Uncaught Error: It looks like your application or one of its dependencies is using i18n.\r\nAngular 9 introduced a global `$localize()` function that needs to be loaded.\r\nPlease run `ng add @angular/localize` from the Angular CLI.\r\n(For non-CLI projects, add `import '@angular/localize/init';` to your `polyfills.ts` file.\r\nFor server-side rendering applications add the import to your `main.server.ts` file.)\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>Angular CLI: 9.0.0-rc.4\r\nNode: 13.0.1\r\nOS: linux x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@angular/fire                     5.2.3\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16327","RelatedDescription":"Closed issue \"Angular Update to v9 does not include the changes in i18n\" (#16327)"},{"Id":"532894917","IsPullRequest":true,"CreatedAt":"2019-12-04T19:45:09","Actor":"vikerman","Number":"16352","RawContent":null,"Title":"fix(@ngtools/webpack): format Ivy diagnostics properly","State":"open","Body":"By passing all diagnostics through formatDiagnostics from compiler-cli.\r\n\r\nWithout this we were printing negative TS error codes which was\r\ncompiler-cli way of marking Angular errors.","Url":"https://github.com/angular/angular-cli/pull/16352","RelatedDescription":"Open PR \"fix(@ngtools/webpack): format Ivy diagnostics properly\" (#16352)"},{"Id":"532865960","IsPullRequest":true,"CreatedAt":"2019-12-04T18:43:32","Actor":"clydin","Number":"16351","RawContent":null,"Title":"fix(@angular-devkit/build-angular): localize service worker base href","State":"open","Body":"Originally intended to be part of #16332","Url":"https://github.com/angular/angular-cli/pull/16351","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): localize service worker base href\" (#16351)"},{"Id":"532480215","IsPullRequest":true,"CreatedAt":"2019-12-04T17:36:08","Actor":"alan-agius4","Number":"16343","RawContent":null,"Title":"Library imports patch","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/16340/","Url":"https://github.com/angular/angular-cli/pull/16343","RelatedDescription":"Closed or merged PR \"Library imports patch\" (#16343)"},{"Id":"532820529","IsPullRequest":true,"CreatedAt":"2019-12-04T17:11:30","Actor":"dgp1130","Number":"16349","RawContent":null,"Title":"fix(@angular-devkit/build-angular): suppress duplicate 3rdpartylicenses.txt warning","State":"open","Body":"Refs #16193\r\n\r\nThis detects and filters out error messages about duplicate `3rdpartylicenses.txt`. This is a short-term fix intended to get us to 9.0.x release while a follow up effort will work to properly fix this bug. Left a `TODO` to remove this filter once a real fix is ready.","Url":"https://github.com/angular/angular-cli/pull/16349","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): suppress duplicate 3rdpartylicenses.txt warning\" (#16349)"},{"Id":"532473252","IsPullRequest":true,"CreatedAt":"2019-12-04T16:23:34","Actor":"renovate[bot]","Number":"16342","RawContent":null,"Title":"build: update @angular/animations to version","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`1b0215b` -> `e483f62`](https://renovatebot.com/diffs/npm/angular%2fanimations-builds//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`67a87aa` -> `1ba94a3`](https://renovatebot.com/diffs/npm/angular%2fcommon-builds//) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`7080905` -> `4989898`](https://renovatebot.com/diffs/npm/angular%2fcompiler-builds//) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`200ce71` -> `a4e0306`](https://renovatebot.com/diffs/npm/angular%2fcompiler-cli-builds//) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`702739a` -> `91817d8`](https://renovatebot.com/diffs/npm/angular%2fcore-builds//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`1c76a9d` -> `ee7b175`](https://renovatebot.com/diffs/npm/angular%2fforms-builds//) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`acb9a2f` -> `b8e9a88`](https://renovatebot.com/diffs/npm/angular%2flanguage-service-builds//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`301a96e` -> `b48b8f1`](https://renovatebot.com/diffs/npm/angular%2flocalize-builds//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`b6f9a58` -> `bece96d`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-builds//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`07f7166` -> `556196d`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-dynamic-builds//) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`0e9e9a0` -> `208fc2e`](https://renovatebot.com/diffs/npm/angular%2fplatform-server-builds//) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`bccc190` -> `f08a3c0`](https://renovatebot.com/diffs/npm/angular%2frouter-builds//) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nNewsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.","Url":"https://github.com/angular/angular-cli/pull/16342","RelatedDescription":"Closed or merged PR \"build: update @angular/animations to version\" (#16342)"},{"Id":"532506032","IsPullRequest":true,"CreatedAt":"2019-12-04T16:23:27","Actor":"renovate[bot]","Number":"16345","RawContent":null,"Title":"build: update caniuse-lite to version 1.0.30001015","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [caniuse-lite](https://togithub.com/ben-eb/caniuse-lite) | dependencies | patch | [`1.0.30001013` -> `1.0.30001015`](https://renovatebot.com/diffs/npm/caniuse-lite/1.0.30001013/1.0.30001015) |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nNewsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.","Url":"https://github.com/angular/angular-cli/pull/16345","RelatedDescription":"Closed or merged PR \"build: update caniuse-lite to version 1.0.30001015\" (#16345)"},{"Id":"532600840","IsPullRequest":true,"CreatedAt":"2019-12-04T16:22:55","Actor":"alan-agius4","Number":"16346","RawContent":null,"Title":"Fix patch ci","State":"closed","Body":"Some commits to the patch branch have been missed by the caretaker.\r\n\r\n","Url":"https://github.com/angular/angular-cli/pull/16346","RelatedDescription":"Closed or merged PR \"Fix patch ci\" (#16346)"},{"Id":"530830681","IsPullRequest":true,"CreatedAt":"2019-12-04T16:14:18","Actor":"clydin","Number":"16332","RawContent":null,"Title":"fix(@angular-devkit/build-angular): augment base HREF when localizing","State":"closed","Body":"All locale i18n options now support an object form which allows a base HREF to be defined for the locale.  This allows each locale to optionally define a custom base HREF that will be combined with the base HREF defined for the build configuration.\r\n\r\nBy default if the shorthand form for the locale is used or the field is not present in the longhand form, the locale code will be used as the base HREF.  To disable automatic augmentation, a base HREF value of an empty string (`\"\"`) can be used.  This will prevent anything from being added to the existing base HREF.\r\n\r\nFor common scenarios, the shorthand form will result in the preferred and recommended outcome of each built locale variant of the application having a defined base HREF containing the locale code.\r\n\r\nCloses #16301","Url":"https://github.com/angular/angular-cli/pull/16332","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): augment base HREF when localizing\" (#16332)"},{"Id":"532616466","IsPullRequest":false,"CreatedAt":"2019-12-04T11:13:34","Actor":"mbeckenbach","Number":"16347","RawContent":null,"Title":"Pass-though of build parameters to ng serve","State":"open","Body":"# 🚀 Feature request\r\nCommand line parameters for ng serve to pass in build configuration settings without a configuration in angular.json\r\n\r\n### Command\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Description\r\nWhen building a multilingual application we need a build configuration for each language.\r\nFor the actual build we can avoid having multiple configurations in angular.json by simply using the parameters of ng build.\r\n\r\nBy doing so I have a custom build script that reads out a json file and automatically builds all languages configured in that file. (xliffmerge.json for ngx-i18nsupport) My script (below if someone wants it) is maybe not optimal, but it works fine and I need only 1 production config for all languages.\r\n\r\nBut when it comes to ng serve, I still need a build configuration for every language in order to set the locale and xlf file.\r\n\r\n```json\r\n    \"en\": {\r\n              \"aot\": true,\r\n              \"i18nLocale\": \"en\"\r\n            },\r\n            \"de\": {\r\n              \"aot\": true,\r\n              \"i18nFile\": \"locale/messages.de.xlf\",\r\n              \"i18nFormat\": \"xlf\",\r\n              \"i18nLocale\": \"de\",\r\n              \"i18nMissingTranslation\": \"warning\"\r\n            }\r\n```\r\n\r\nIn my case I also need to pass port, baseHref and publicHost to ng serve as I run ng serve behind an asp.net spa proxy that serves all the languages at once. This parameters can be passed in using the ng serve parameters or by angular.json.\r\n\r\nMy build script:\r\n\r\n```js\r\n'use strict';\r\n\r\nconst fs = require('fs');\r\nconst {execSync} = require('child_process');\r\n\r\nvar execOptions = {\r\n  encoding: 'utf8'\r\n};\r\n\r\n// Get languages from xliffmergeOptions\r\nlet rawdata = fs.readFileSync('../appsettings.json');\r\nlet xliffmergeOptions = JSON.parse(rawdata).xliffmergeOptions;\r\nlet defaultLanguage = xliffmergeOptions.defaultLanguage;\r\nlet additionalLanguages = xliffmergeOptions.languages;\r\nlet languages = [defaultLanguage, ...xliffmergeOptions.languages];\r\n\r\n// Some console info\r\nconsole.info('Build started for: ', languages);\r\n\r\n// Run i18n-extract & merge xliff files\r\nconsole.log(execSync('npm run i18n', execOptions));\r\n\r\n// Build default language\r\nconsole.log(execSync(`npm run ng build -- -c production --outputPath=dist/${defaultLanguage} --baseHref=/${defaultLanguage}/app/ --i18nLocale=${defaultLanguage}`, execOptions));\r\n\r\n// Build additional languagses\r\nfor (const language of additionalLanguages) {\r\n  console.log(execSync(`npm run ng build -- -c production --outputPath=dist/${language} --baseHref=/${language}/app/ --i18nLocale=${language} --i18nFile=locale/messages.${language}.xlf --i18nFormat=xlf --i18nMissingTranslation=warning`, execOptions));\r\n}\r\n\r\n// Some console info\r\nconsole.info('Build finished for: ', languages);\r\n```\r\n\r\n\r\n### Describe the solution you'd like\r\nI would like to have parameters for ng-serve, that i can use to change the build configuration options that are related to i18n. Maybe something like:\r\n\r\nng serve --build:i18nlocale=de --build:i18nFile=....\r\n\r\nBy that one could simply create a script that can serve any language configured in some config file similar to my bild script. So when adding a new language you would simply add that language to your config file.\r\n\r\n### Describe alternatives you've considered\r\nFor the moment I have a build and serve config for each language and one npm script per language. I also thought about using ng config in a script to change the prod configuration before launching ng serve and then change it back, but that feels somehow bad.\r\n","Url":"https://github.com/angular/angular-cli/issues/16347","RelatedDescription":"Open issue \"Pass-though of build parameters to ng serve\" (#16347)"},{"Id":"532505688","IsPullRequest":true,"CreatedAt":"2019-12-04T07:43:45","Actor":"alan-agius4","Number":"16344","RawContent":null,"Title":"fix(@angular-devkit/build-angular): add notice when using bundleDepen…","State":"open","Body":"…dencies: none with Ivy\r\n\r\nRelated to: https://github.com/angular/universal/issues/1354","Url":"https://github.com/angular/angular-cli/pull/16344","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): add notice when using bundleDepen…\" (#16344)"},{"Id":"532027486","IsPullRequest":true,"CreatedAt":"2019-12-03T20:37:08","Actor":"alan-agius4","Number":"16340","RawContent":null,"Title":"Library imports","State":"closed","Body":"\r\n- Currently the library schematic doesn't support adding a secondary entry-point and having deep imports is not recommanded.\r\n\r\nIt's best if paths are more stricter when having a secondary entry-point instead of a wildcard.\r\n\r\nInstead of :\r\n```\r\n\"lib/*\": [\r\n  \"dist/lib/*\"\r\n]\r\n```\r\n\r\nUsers should configure:\r\n```\r\n\"lib/secondary\": [\r\n  \"dist/lib/secondary\"\r\n]\r\n```\r\n\r\nThis would allow a better DX experience when using auto imports in IDE's.\r\n\r\nCloses: #15952","Url":"https://github.com/angular/angular-cli/pull/16340","RelatedDescription":"Closed or merged PR \"Library imports\" (#16340)"},{"Id":"531751097","IsPullRequest":true,"CreatedAt":"2019-12-03T20:35:47","Actor":"renovate[bot]","Number":"16339","RawContent":null,"Title":"build: update @angular/animations to version","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`7ce8862` -> `1b0215b`](https://renovatebot.com/diffs/npm/angular%2fanimations-builds//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`a496f03` -> `67a87aa`](https://renovatebot.com/diffs/npm/angular%2fcommon-builds//) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`7d1fa06` -> `7080905`](https://renovatebot.com/diffs/npm/angular%2fcompiler-builds//) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`5deeb65` -> `200ce71`](https://renovatebot.com/diffs/npm/angular%2fcompiler-cli-builds//) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`73862d1` -> `702739a`](https://renovatebot.com/diffs/npm/angular%2fcore-builds//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`b968621` -> `1c76a9d`](https://renovatebot.com/diffs/npm/angular%2fforms-builds//) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`6ceaf12` -> `acb9a2f`](https://renovatebot.com/diffs/npm/angular%2flanguage-service-builds//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`4f89fe3` -> `301a96e`](https://renovatebot.com/diffs/npm/angular%2flocalize-builds//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`4cb24ec` -> `b6f9a58`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-builds//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`cf22426` -> `07f7166`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-dynamic-builds//) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`85088bd` -> `0e9e9a0`](https://renovatebot.com/diffs/npm/angular%2fplatform-server-builds//) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`2f3b09d` -> `bccc190`](https://renovatebot.com/diffs/npm/angular%2frouter-builds//) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nNewsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.","Url":"https://github.com/angular/angular-cli/pull/16339","RelatedDescription":"Closed or merged PR \"build: update @angular/animations to version\" (#16339)"},{"Id":"532704525","IsPullRequest":false,"CreatedAt":"2019-12-03T16:04:05","Actor":"kamilmysliwiec","Number":"16348","RawContent":null,"Title":"SSR builder and externals dependencies (Angular 9)","State":"open","Body":"# Bug Report\r\n\r\nIn relation to the conversation with @manfredsteyer.\r\n\r\n#### What is the expected behavior?\r\n\r\nIn some specific scenarios, I would like to bundle dependencies and minify the code of my Angular application, but at the same time leave my server-side code untouched (no dependencies bundled, no minification/obfuscation). This is important because:\r\n- sometimes you may not want to bundle all server dependencies (especially when you're building a full-stack app). For instance, you won’t be able to bundle `pg` (if you use postgres) as well as internal deps of `mongoose` (or `bcrypt`)  because they use a native node.js binaries (C++ code)\r\n- sometimes you may not want to obfuscate class names, properties names, function names etc because there are important for libraries such as Typeorm (to automatically create columns with proper names in a database) or e.g. NestJS. Having full control over what can be optimized for server-side is quite important here\r\n\r\n#### What is the current behavior?\r\n\r\nWhen I try to set `bundleDependencies` to `none` under `server` configuration in `angular.json`, the application will stop working:\r\n\r\n![image](https://user-images.githubusercontent.com/23244943/70067354-6b9be500-15ee-11ea-9ff0-35de65eef423.png)\r\n\r\nBoth `serve:ssr` and `serve:ssr:dev` won't work.\r\n\r\nAlso, I'm not entirely sure how I can determine the behavior of webpack for the server part now. Previously, we had `webpack.server.config` in which we could simply use plugins like `nodeExternals` or set `optimization` to false (to avoid code minification). This is worth adding to the docs (how to accomplish this now with a new setup).\r\n\r\n#### What modules are related to this issue?\r\n```\r\n- [ ] aspnetcore-engine\r\n- [ ] common\r\n- [ ] express-engine\r\n- [ ] hapi-engine\r\n- [ ] module-map-ngfactory-loader\r\n```\r\n\r\n#### Minimal reproduction with instructions:\r\n\r\nNo reproduction needed - new Angular app with `ng add @nguniversal/express-engine@next` (or any other engine)\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\nMainly full-stack applications, compatibility with other Node.js platforms\r\n\r\n#### Environment:\r\n**@nguniversal versions**\r\n  - aspnetcore-engine: \r\n  - common:\r\n  - express-engine: 9.0.0-next.7\r\n  - hapi-engine:\r\n  - module-map-ngfactory-loader:\r\n```\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.13.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0-rc.4\r\n```\r\n\r\n\r\n#### Is there anything else we should know?","Url":"https://github.com/angular/angular-cli/issues/16348","RelatedDescription":"Open issue \"SSR builder and externals dependencies (Angular 9)\" (#16348)"},{"Id":"532054476","IsPullRequest":false,"CreatedAt":"2019-12-03T15:11:40","Actor":"cexbrayat","Number":"16341","RawContent":null,"Title":"ng serve should watch messages files","State":"open","Body":"# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Description\r\n\r\nWhen using the new i18n support with CLI v9 (rc.4 at the time of writing), it is possible to run:\r\n    \r\n    ng serve --configuration=fr\r\n\r\nwith `fr`:\r\n```json\r\n\"i18n\": {\r\n  \"locales\": {\r\n    \"fr\": \"src/locale/messages.fr.xlf\"\r\n  }\r\n},\r\n\"fr\": {\r\n  \"localize\": [\"fr\"]\r\n}\r\n```\r\n\r\nThis works great, but does not pick up translation changes in `messages.fr.xlf`, requiring a stop and restart of `ng serve`.\r\n\r\n### Describe the solution you'd like\r\n\r\nIt would be nice to have `ng serve` watch the files defined in the `locales` configuration.\r\n\r\n### Describe alternatives you've considered\r\n\r\nIt is possible to stop and restart the server to have the up-to-date translations.\r\n","Url":"https://github.com/angular/angular-cli/issues/16341","RelatedDescription":"Open issue \"ng serve should watch messages files\" (#16341)"},{"Id":"531590775","IsPullRequest":false,"CreatedAt":"2019-12-03T00:11:28","Actor":"mlc-mlapis","Number":"16338","RawContent":null,"Title":"Support the latest RxJS 6.5.3 in the latest Angular CLI 8.3.20","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Description\r\nUpdate to the latest RxJS package in Angular CLI 8 line.\r\n\r\n### Describe the solution you'd like\r\nIf there are no breaking changes (not aware of any), update RxJS to the latest 6.5.3 version in the Angular CLI 8 line, actually in 8.3.20.","Url":"https://github.com/angular/angular-cli/issues/16338","RelatedDescription":"Closed issue \"Support the latest RxJS 6.5.3 in the latest Angular CLI 8.3.20\" (#16338)"},{"Id":"531435261","IsPullRequest":true,"CreatedAt":"2019-12-02T20:51:31","Actor":"alan-agius4","Number":"16337","RawContent":null,"Title":"fix(@angular-devkit/build-angular): pass webpack factor to runWebpack","State":"closed","Body":"Patch version of https://github.com/angular/angular-cli/pull/16317","Url":"https://github.com/angular/angular-cli/pull/16337","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): pass webpack factor to runWebpack\" (#16337)"},{"Id":"530923262","IsPullRequest":true,"CreatedAt":"2019-12-02T18:11:14","Actor":"renovate[bot]","Number":"16333","RawContent":null,"Title":"build: update caniuse-lite to version 1.0.30001013","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [caniuse-lite](https://togithub.com/ben-eb/caniuse-lite) | dependencies | patch | [`1.0.30001012` -> `1.0.30001013`](https://renovatebot.com/diffs/npm/caniuse-lite/1.0.30001012/1.0.30001013) |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nNewsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.","Url":"https://github.com/angular/angular-cli/pull/16333","RelatedDescription":"Closed or merged PR \"build: update caniuse-lite to version 1.0.30001013\" (#16333)"},{"Id":"530931190","IsPullRequest":true,"CreatedAt":"2019-12-02T18:10:35","Actor":"alan-agius4","Number":"16334","RawContent":null,"Title":"refactor: strip leading slash to prevent confusion","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/16334","RelatedDescription":"Closed or merged PR \"refactor: strip leading slash to prevent confusion\" (#16334)"},{"Id":"530736161","IsPullRequest":true,"CreatedAt":"2019-12-02T17:39:19","Actor":"renovate[bot]","Number":"16328","RawContent":null,"Title":"build: update terser to version 4.4.2","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`4.4.0` -> `4.4.2`](https://renovatebot.com/diffs/npm/terser/4.4.0/4.4.2) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v4.4.2`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v442)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v4.4.1...v4.4.2)\n\n-   Fixed a problem with inlining identity functions\n\n### [`v4.4.1`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v441)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v4.4.0...v4.4.1)\n\n_note:_ This introduced a feature, therefore it should have been a minor release.\n\n-   Fixed a crash when `unsafe` was enabled.\n-   An issue has been fixed where `let` statements might be collapsed out of their scope.\n-   Some error messages have been improved by adding quotes around variable names.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nNewsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.","Url":"https://github.com/angular/angular-cli/pull/16328","RelatedDescription":"Closed or merged PR \"build: update terser to version 4.4.2\" (#16328)"},{"Id":"531261301","IsPullRequest":false,"CreatedAt":"2019-12-02T17:30:47","Actor":"kirbychan","Number":"16336","RawContent":null,"Title":"IE polyfills should not bloat polyfill file for newer browsers","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Description\r\n\r\nWith Angular 8 the es5BrowserSupport flag provided in angular.json with Angular 7 became deprecated.\r\nSince then old browser support is handled via browserslist. \r\n\r\nAs soon as es2015 is selected as target in the compilerOptions, angular will use differential loading and create two bundles - one for old browsers and one for newer ones. \r\nThis will also include two polyfill bundles (polyfill-es5.js and polyfill-es2015.js). \r\n\r\nThe idea is to move all polyfills needed by newer browser to the polyfill-es-2015 file and all for older browsers to the polyfill-es5 file.\r\n\r\nIt will provide all bundles in the index.html file. Browsers know which module to load by the 'nomodule' and 'type=module' attributes.\r\n\r\nHowever this won't work for IE (Internet Explorer 10/11). \r\nIn order to enable IE support we need to add the essential polyfills in the polyfill.ts file and enable IE support in the browserslist configuration. \r\n\r\nThe issue here is, that after doing so, the polyfill-es2015 file will now be bloated with the polyfills imported only for IE.\r\n\r\nA simple reproduction can be achieved by creating a fresh project with the angular-cli and turn IE support on and off and look at the created polyfill files.\r\n\r\nThe results would be similar to this:\r\nno IE support:\r\npolyfill-ie5 - 638kB\r\npolyfill-ie2015 - 141kB\r\n\r\nwith IE support:\r\npolyfill-ie5 - 698kB\r\npolyfill-ie2015 - 532kB\r\n\r\nThis values will of course shrink when minified but the polyfil-es-2015 file will still be significantly larger with IE11 support active than without.\r\n\r\n\r\n### Describe the solution you'd like\r\nIt would be nice if the IE polyfills would only be loaded by IE or at least only by older browsers and not pollute the polyfill file which is meant for newer browsers. \r\n\r\nMaybe a Switch to determine if a polyfill is supposed to be provided for older or newer browsers (i.E an annotation if it is module or nomodule relevant).\r\n\r\n### Describe alternatives you've considered\r\n\r\nI've considered to create an IE-only polyfill file manually and load it by the index.html. simillar to the solution mentioned in Fabrizio Fortunatos blog post: https://izifortune.com/angular-polyfill-strategies/\r\n","Url":"https://github.com/angular/angular-cli/issues/16336","RelatedDescription":"Closed issue \"IE polyfills should not bloat polyfill file for newer browsers\" (#16336)"},{"Id":"531123792","IsPullRequest":false,"CreatedAt":"2019-12-02T14:33:21","Actor":"juristr","Number":"16335","RawContent":null,"Title":"CLI does not set aot:true in angular.json for the dev server","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nNo, it's not a regression since this is something new that is supposed to change with Ivy.\r\n\r\n### Description\r\n\r\nAfter the `ng update` command I expect that my projects in the `angular.json` have the `aot` flag set to `true`, not just for the production configuration, but also for the dev server.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nUsing node `v12.4.0` and using yarn as my package manager (it's configured globally s.t. also the `ng update` command picks it up properly).\r\n\r\nCommands run:\r\n\r\n```\r\n$ git clone git@github.com:juristr/superforms-talk.git\r\n$ cd superforms-talk\r\n$ ng update @angular/core@next @angular/cli@next --force\r\n```\r\n\r\nThe only change to the `angular.json` is the addition of the budgets section\r\n\r\n![image](https://user-images.githubusercontent.com/542458/69962721-e1c91a80-150e-11ea-8cfb-b0eac900ddec.png)\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.4.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@angular/cdk                      8.2.3\r\n@angular/material                 8.2.3\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/16335","RelatedDescription":"Closed issue \"CLI does not set aot:true in angular.json for the dev server\" (#16335)"},{"Id":"530750110","IsPullRequest":true,"CreatedAt":"2019-12-02T09:03:03","Actor":"OMGerCoder","Number":"16331","RawContent":null,"Title":"fix(@angular/cli): grammar","State":"closed","Body":"you need to fix the grammar","Url":"https://github.com/angular/angular-cli/pull/16331","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): grammar\" (#16331)"},{"Id":"530749045","IsPullRequest":false,"CreatedAt":"2019-12-02T05:08:53","Actor":"nadavsinai","Number":"16329","RawContent":null,"Title":"Web-workers are not downleveled to es5 when using differential loading","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nSort of,  as far as I understand your code it exists since [bundle downleveling was introduced](https://github.com/angular/angular-cli/pull/15246/files)\r\n\r\n\r\n### Description\r\n\r\nI'm trying to convert our applications to Angular/CLI. I am responsible for the current custom webpack build of 20+ internal Philips-Algotec Angular applications.\r\nWe use web-workers extensively. My custom setup supported differential loading too but did it with two builds. I see this option exists in Angular 8.x but not in 9.x using the process.env.NG_BUILD_DIFFERENTIAL_FULL=1 flag so I'm reluctant to use it.\r\nin the current mode - bundle downleveling the worker's chunks are:\r\n1) not downleveled at all.\r\n2) there is no change in the es5 main chunk new Worker construct which should change to use the es5 version of the worker (which unfortunately does not exist )\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nSimple steps to reproduce this bug.\r\n\r\n - generate a new angular application\r\n - add IE11 to browserlist to allow for differential loading\r\n - use `ng generate web-worker 'somename'` schematic to create a worker\r\n - use polyfills (in both the app & worker code)\r\n - but make sure the code in the worker uses new ES2015 language features that need transpilation rather than polyfilling - such as Array spread, string literals etc.\r\n - try to load site in IE11\r\n\r\nI've created a repo with the above steps [here](https://github.com/Algotec/ie11-worker-repro)\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nSyntax error\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 8.3.19\r\nNode: 10.15.0\r\nOS: win32 x64\r\nAngular: 8.2.14\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.803.14\r\n@angular-devkit/build-angular      0.803.19\r\n@angular-devkit/build-ng-packagr   0.803.19\r\n@angular-devkit/build-optimizer    0.803.19\r\n@angular-devkit/build-webpack      0.803.19\r\n@angular-devkit/core               8.3.14\r\n@angular-devkit/schematics         8.3.14\r\n@angular/cdk                       8.2.3\r\n@angular/cli                       8.3.19\r\n@angular/elements                  8.1.2\r\n@angular/flex-layout               8.0.0-beta.27\r\n@ngtools/webpack                   8.3.19\r\n@schematics/angular                8.3.14\r\n@schematics/update                 0.803.19\r\nng-packagr                         5.7.1\r\nrxjs                               6.5.3\r\ntypescript                         3.5.3\r\nwebpack                            4.39.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nBrowser specific to IE11 or any other non-ever green browser\r\n","Url":"https://github.com/angular/angular-cli/issues/16329","RelatedDescription":"Closed issue \"Web-workers are not downleveled to es5 when using differential loading\" (#16329)"},{"Id":"530749988","IsPullRequest":true,"CreatedAt":"2019-12-01T15:36:27","Actor":"OMGerCoder","Number":"16330","RawContent":null,"Title":"fix(@angular/cli): fix grammar","State":"closed","Body":"fix something","Url":"https://github.com/angular/angular-cli/pull/16330","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): fix grammar\" (#16330)"},{"Id":"530718120","IsPullRequest":false,"CreatedAt":"2019-12-01T11:43:36","Actor":"igorroman777","Number":"16326","RawContent":null,"Title":"9.0.0-rc.4 build - ng serve - freeze","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nng serve\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### \r\nng  serve\r\n\r\n\r\n\r\n### Description\r\n92% additional asset processing scripts-webpack-plugin\r\n\r\n###\r\nAngular CLI: 9.0.0-rc.4\r\nNode: 12.13.1\r\nOS: linux x64\r\n\r\nAngular: 9.0.0-rc.4\r\n... animations, cdk, cli, common, compiler, compiler-cli, core\r\n... forms, language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.0-rc.4\r\n@angular-devkit/build-angular     0.900.0-rc.4\r\n@angular-devkit/build-optimizer   0.900.0-rc.4\r\n@angular-devkit/build-webpack     0.900.0-rc.4\r\n@angular-devkit/core              9.0.0-rc.4\r\n@angular-devkit/schematics        9.0.0-rc.4\r\n@ngtools/webpack                  9.0.0-rc.4\r\n@schematics/angular               9.0.0-rc.4\r\n@schematics/update                0.900.0-rc.4\r\nrxjs                              6.5.3\r\ntypescript                        3.6.4\r\nwebpack                           4.41.2\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16326","RelatedDescription":"Open issue \"9.0.0-rc.4 build - ng serve - freeze\" (#16326)"},{"Id":"530670710","IsPullRequest":false,"CreatedAt":"2019-12-01T04:44:55","Actor":"ikedam","Number":"16325","RawContent":null,"Title":"Allow `ng e2e` accept `--base-url` with `--dev-server-target`","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [x] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Description\r\n\r\nI want to use `--base-url` with `--dev-server-target` in `ng e2e`, but it results a following error:\r\n\r\n```\r\nThe 'baseUrl' option cannot be used with 'devServerTarget'.\r\n```\r\n\r\nI want to use them together in the following case:\r\n\r\n* Let `ng e2e`  launch the server (`--serve`) and then run protractor.\r\n    * `--serve` feature is really useful as protractor starts after the server gets ready.\r\n* protractor controls a browser in another host with webdriver protocol.\r\n\r\nIn that case, the browser have to access the server not with http://localhost:4200/ which is automatically configured with `ng e2e --dev-app-server`, but with http://(appropriate host name):4200/. \r\n\r\nI created a demonstration project to explain what I want: https://github.com/ikedam/angular-e2e-base-url-demo\r\n\r\n### Describe the solution you'd like\r\n\r\nI want to use `--base-url` to specify that host name.\r\n\r\nRelates: #13611, #13614\r\n\r\n### Describe alternatives you've considered\r\n\r\nAccepting `--public-host` in `ng e2e` can resolve this issue.\r\n(It results `Unknown option: '--public-host'` for now)\r\n\r\nRelates: #9242\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16325","RelatedDescription":"Open issue \"Allow `ng e2e` accept `--base-url` with `--dev-server-target`\" (#16325)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"532939576","IsPullRequest":false,"CreatedAt":"2019-12-04T21:17:36","Actor":"mattharr","Number":"17876","RawContent":null,"Title":"Focus issue for radio group as first element in dialog","State":"open","Body":"#### Reproduction\r\n\r\nI've recreated the issue here: https://stackblitz.com/edit/angular-2nkqr3-znajkf\r\n\r\nSteps to reproduce:\r\n1. For the dialog opened by button 2, then select a radio option (say 'Badger')\r\n2. Tab through the elements to get to the Ok button.\r\n3. Press Tab\r\n \r\n \r\n#### Expected Behavior\r\n\r\nThe focus in the radio group should be on the selected option.\r\n\r\n#### Actual Behavior\r\n\r\nThe focus in the radio group is on the first option (whether it is selected or not)\r\n\r\n\r\n#### Environment\r\n\r\nHave tried this in both Firefox and Chrome\r\n\r\n#### Notes\r\n\r\nFor the dialog by button 3 I have put an input control before the radio group in the tab order in the dialog, and this behaves as would be expected (tab takes you to the selected option).\r\n\r\nI did ask about this in stackoverflow: https://stackoverflow.com/questions/59024581/radio-button-focus-in-angular-material-dialog (although I've only just put the correct tag on it), but I think its not something to be worked around with tab order.\r\n\r\nThanks,\r\n\r\nMatt\r\n","Url":"https://github.com/angular/components/issues/17876","RelatedDescription":"Open issue \"Focus issue for radio group as first element in dialog\" (#17876)"},{"Id":"532898423","IsPullRequest":false,"CreatedAt":"2019-12-04T19:52:40","Actor":"castor-dev3","Number":"17875","RawContent":null,"Title":"[Sort] Sort disabled using directive *ngIf in mat-table","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: [https://stackblitz.com/edit/angular-tqmkv7](https://stackblitz.com/edit/angular-tqmkv7)\r\n\r\nSteps to reproduce:\r\n1. Add a directive `*ngIf`to the material table.\r\n2. Click to sort the table.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nSorted table\r\n\r\n\r\n#### Actual Behavior\r\n\r\nSort not working\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.0.0\r\n- CDK/Material: 8.2.3\r\n- Browser(s): Opera, Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n\r\nPD: To workaround this issue i've used the property `[hidden]` instead of `*ngIf`\r\n","Url":"https://github.com/angular/components/issues/17875","RelatedDescription":"Open issue \"[Sort] Sort disabled using directive *ngIf in mat-table\" (#17875)"},{"Id":"532829479","IsPullRequest":true,"CreatedAt":"2019-12-04T17:27:20","Actor":"crisbeto","Number":"17874","RawContent":null,"Title":"feat(select,input,form-field): move test harnesses out of experimental","State":"open","Body":"Moves the test harnesses for the `select`, `input` and `form-field` packages out of `material-experimental`.","Url":"https://github.com/angular/components/pull/17874","RelatedDescription":"Open PR \"feat(select,input,form-field): move test harnesses out of experimental\" (#17874)"},{"Id":"532811001","IsPullRequest":true,"CreatedAt":"2019-12-04T16:54:18","Actor":"josephperrott","Number":"17873","RawContent":null,"Title":"ci: update saucelabs to use angular-components account","State":"open","Body":"Currently all saucelabs usage in our repos is done using the same\r\naccount `angular-ci`.  By migrating to use individual accounts\r\nfor each repo, we can better track the usage for each repo as well\r\nas providing concurrency limiting on a per repo basis.","Url":"https://github.com/angular/components/pull/17873","RelatedDescription":"Open PR \"ci: update saucelabs to use angular-components account\" (#17873)"},{"Id":"532658732","IsPullRequest":true,"CreatedAt":"2019-12-04T12:40:00","Actor":"crisbeto","Number":"17872","RawContent":null,"Title":"fix(select): disabled state out of sync when swapping form group with a disabled one","State":"open","Body":"Fixes the disabled state of a `mat-select` falling out of sync with its form control if the control's group is swapped out with one that is disabled on init.\r\n\r\nFixes #17860.","Url":"https://github.com/angular/components/pull/17872","RelatedDescription":"Open PR \"fix(select): disabled state out of sync when swapping form group with a disabled one\" (#17872)"},{"Id":"532588546","IsPullRequest":true,"CreatedAt":"2019-12-04T10:25:58","Actor":"crisbeto","Number":"17871","RawContent":null,"Title":"fix(chips): clear user agent styles when set on button","State":"open","Body":"Chips can be attached to an element using an attribute which means that they're allowed to be an a `button`. These changes reset the user agent styling for `button`.","Url":"https://github.com/angular/components/pull/17871","RelatedDescription":"Open PR \"fix(chips): clear user agent styles when set on button\" (#17871)"},{"Id":"532550159","IsPullRequest":false,"CreatedAt":"2019-12-04T09:19:41","Actor":"guojianglin","Number":"17870","RawContent":null,"Title":"Mat-icon Doc Should Add HttpClient Dependency Notice","State":"open","Body":"#### Mat-icon Doc  Should Add  HttpClient Dependency Notice\r\n\r\nThere's a Dependency Missing Error when I tried to use Custom SVG icon in the mat-icon component. \r\n\r\n![image](https://user-images.githubusercontent.com/48773605/70126458-09a5b300-16b4-11ea-86f3-73909793f41c.png)\r\n\r\nIt's really not a big deal that, given the fact that I have played around with Angular for a while now, but I don't think this is beginner friendly, and honestly, it's quite confusing. \r\n\r\nSo, a further explanation or warning or simply a notice to user that this component have other dependencies, the HttpClientModule, would be brilliant, I think. such as \"Before using your custom SVG icons, please make sure that you have include a HttpClientModule in your pertinent module\"\r\n\r\n**Affected documentation page:** [Icon Overview](https://material.angular.io/components/icon/overview)\r\n","Url":"https://github.com/angular/components/issues/17870","RelatedDescription":"Open issue \"Mat-icon Doc Should Add HttpClient Dependency Notice\" (#17870)"},{"Id":"532487628","IsPullRequest":false,"CreatedAt":"2019-12-04T06:55:06","Actor":"ank-y","Number":"17869","RawContent":null,"Title":"No data view in mat-table","State":"open","Body":"#### Feature Description\r\n\r\ni think mat-table should give a template interface to let developer implement the no data view.\r\n\r\n#### Use Case\r\n\r\ni am unable to get a table no data view using matsort property in  mat-table,\r\nif in use use *ngIf in mat-table outside mat-table using a div or any coustom element.\r\nit throws an error in matsort beacuse i am using it into my ts file as @Viewchild...\r\n\r\nthats why i just want a new feature or team you should develop a new cool feature for no data view in mat table or something like that...\r\n\r\nThank you,\r\n\r\n","Url":"https://github.com/angular/components/issues/17869","RelatedDescription":"Open issue \"No data view in mat-table\" (#17869)"},{"Id":"531597353","IsPullRequest":true,"CreatedAt":"2019-12-04T03:56:37","Actor":"mmalerba","Number":"17859","RawContent":null,"Title":"feat(material/list): add test harnesses for list components.","State":"closed","Body":"","Url":"https://github.com/angular/components/pull/17859","RelatedDescription":"Closed or merged PR \"feat(material/list): add test harnesses for list components.\" (#17859)"},{"Id":"532171314","IsPullRequest":true,"CreatedAt":"2019-12-04T03:54:30","Actor":"ajitsinghkaler","Number":"17866","RawContent":null,"Title":"fix(material/datepicker): remove fixed width as not working on mobile","State":"closed","Body":"In date picker the events example is not responsive on mobile because it has fixed width now changed it to max-width\r\n\r\n![Datepicker   Angular Material (1)](https://user-images.githubusercontent.com/39260684/70077457-e5e85b80-1626-11ea-9723-aa37a7851485.png)\r\n","Url":"https://github.com/angular/components/pull/17866","RelatedDescription":"Closed or merged PR \"fix(material/datepicker): remove fixed width as not working on mobile\" (#17866)"},{"Id":"531555786","IsPullRequest":true,"CreatedAt":"2019-12-04T00:00:22","Actor":"vanessanschmitt","Number":"17858","RawContent":null,"Title":"chore(dev-app) Add demo page for FocusTrap","State":"closed","Body":"Note that much of this demo page is known to not be working with the\r\ncurrent focus trap implementation (ex. elements in the focus trap with\r\ntabindex > 0 send focus out of the trap, elements in iframes/shadow DOM\r\nget skipped when focus wraps, all focus traps can be escaped by clicking\r\non the URL and then pressing tab). The demo page will be helpful for\r\nresearch into FocusTrap improvements (see\r\nhttps://github.com/angular/components/issues/13054).\r\n\r\n![Screenshot1](https://user-images.githubusercontent.com/16886662/69996734-7d568d00-1507-11ea-9294-d907c3a77f40.png)\r\n![Screenshot2](https://user-images.githubusercontent.com/16886662/69996834-b989ed80-1507-11ea-89f3-ef3efdeb3a5d.png)","Url":"https://github.com/angular/components/pull/17858","RelatedDescription":"Closed or merged PR \"chore(dev-app) Add demo page for FocusTrap\" (#17858)"},{"Id":"532281781","IsPullRequest":false,"CreatedAt":"2019-12-03T21:35:35","Actor":"PedroRamirezTOR","Number":"17868","RawContent":null,"Title":"Drag And Drop Angular Material Table on first drop","State":"open","Body":"Bug:\r\n\r\nI have a mat-table in a div container that is only created when table datasource is not empty with an ngIf. So when datasource is not empty and I try to drag and drop a row, first time I receive currentposition with -1 value on drop event. So first time no drag and drop is made. The following time the behavior is normal. Moreover, I realised that If table is shown and I click on a button with no functionality the drag and drop is made right on first time.\r\n\r\nYou could find more details on:\r\nhttps://stackoverflow.com/questions/59127462/angular-material-mattable-drag-and-drop\r\n\r\nAny idea? Thanks!\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\"@angular/animations\": \"^7.0.4\",\r\n        \"@angular/cdk\": \"^7.1.0\",\r\n        \"@angular/common\": \"~7.0.0\",\r\n        \"@angular/compiler\": \"~7.0.0\",\r\n        \"@angular/core\": \"~7.0.0\",\r\n        \"@angular/forms\": \"~7.0.0\",\r\n        \"@angular/http\": \"~7.0.0\",\r\n        \"@angular/material\": \"^7.1.0\",\r\n        \"@angular/platform-browser\": \"~7.0.0\",\r\n        \"@angular/platform-browser-dynamic\": \"~7.0.0\",\r\n        \"@angular/router\": \"~7.0.0\",\r\n        \"@ngx-translate/core\": \"^11.0.1\",\r\n        \"@ngx-translate/http-loader\": \"^4.0.0\",\r\n        \"angular-datatables\": \"^7.0.0\",\r\n        \"angular-mocks\": \"^1.7.5\",\r\n        \"angularjasper2\": \"0.0.3\",\r\n        \"bootstrap\": \"^4.1.3\",\r\n        \"canvas2image\": \"^1.0.5\",\r\n        \"core-js\": \"^2.5.4\",\r\n        \"datatables.net\": \"^1.10.19\",\r\n        \"datatables.net-dt\": \"^1.10.19\",\r\n        \"hammerjs\": \"^2.0.8\",\r\n        \"html2canvas\": \"^1.0.0-alpha.12\",\r\n        \"html2pdf.js\": \"^0.9.1\",\r\n        \"jquery\": \"^3.3.1\",\r\n        \"jspdf\": \"^1.5.3\",\r\n        \"jspdf-autotable\": \"^3.2.10\",\r\n        \"ng-mocks\": \"^7.1.3\",\r\n        \"ngx-mat-select-search\": \"^2.0.0\",\r\n        \"rxjs\": \"~6.3.3\",\r\n        \"rxjs-compat\": \"^6.3.3\",\r\n        \"tslib\": \"^1.10.0\",\r\n        \"tslint-sonarts\": \"^1.8.0\",\r\n        \"typescript-compiler\": \"^1.4.1-2\",\r\n        \"zone.js\": \"~0.8.26\"\r\n\r\n\r\n","Url":"https://github.com/angular/components/issues/17868","RelatedDescription":"Open issue \"Drag And Drop Angular Material Table on first drop\" (#17868)"},{"Id":"532193914","IsPullRequest":true,"CreatedAt":"2019-12-03T19:11:48","Actor":"crisbeto","Number":"17867","RawContent":null,"Title":"build: fix CI failures","State":"closed","Body":"Fixes a couple of API goldens failing and the autocomplete demo throwing a strict null compilation error.","Url":"https://github.com/angular/components/pull/17867","RelatedDescription":"Closed or merged PR \"build: fix CI failures\" (#17867)"},{"Id":"531790598","IsPullRequest":false,"CreatedAt":"2019-12-03T18:58:24","Actor":"petersberg","Number":"17862","RawContent":null,"Title":"Mat-Select outline rendered incorrectly when dir=\"rtl\"","State":"closed","Body":"#### Bug, feature request, or proposal:\r\n\r\nBug\r\n\r\n#### What is the expected behavior?\r\n\r\nWhen displaying a MatFormField in RTL (right-to-left) mode, by setting dir=\"rtl\" on a parent element, the outline \"gap\" for the label should be move right together with the label itself.\r\n\r\n#### What is the current behavior?\r\n\r\nThe label is correctly moved right, but the gap in the outline is left aligned just as in LTR mode.\r\n\r\n#### What are the steps to reproduce?\r\n\r\nIn the basic select example on https://material.angular.io, set dir=\"rtl\"in the outermost div tag in index.html and add appearance=\"outline\" to the mat-form-field in select-overview-example.html.\r\n\r\nOr see https://stackblitz.com/edit/angular-b66kfk\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\nAngular Material should support RTL for all relevant components in order to support Arabic languages.\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\r\nAngular: ^8.2.9\r\nMaterial: ~8.2.2\r\nTypeScript: ~3.5.3\r\nChome:  78.0.3904.108\r\n\r\n#### Is there anything else we should know?\r\n\r\n![material bug](https://user-images.githubusercontent.com/58460896/70030093-c4488f00-15a8-11ea-814c-cc3b5bb7f489.JPG)\r\n","Url":"https://github.com/angular/components/issues/17862","RelatedDescription":"Closed issue \"Mat-Select outline rendered incorrectly when dir=\"rtl\"\" (#17862)"},{"Id":"530733098","IsPullRequest":true,"CreatedAt":"2019-12-03T15:40:57","Actor":"crisbeto","Number":"17849","RawContent":null,"Title":"fix(slider): stop dragging if page loses focus","State":"closed","Body":"If the page loses focus (e.g. from an `alert` or the window being minimized) while the user is dragging a slider, it'll be stuck as dragging until the user comes back and clicks somewhere which might look weird and change the value. These changes stop the dragging sequence once the page is blurred.","Url":"https://github.com/angular/components/pull/17849","RelatedDescription":"Closed or merged PR \"fix(slider): stop dragging if page loses focus\" (#17849)"},{"Id":"530757156","IsPullRequest":true,"CreatedAt":"2019-12-03T15:40:29","Actor":"crisbeto","Number":"17851","RawContent":null,"Title":"fix(portal): better handling when dom portal content can't be restored","State":"closed","Body":"Avoids a cryptic error being thrown if we're unable to restore the content of a DOM portal. Also adds a better error when trying to attach an element without a parent to a DOM portal.","Url":"https://github.com/angular/components/pull/17851","RelatedDescription":"Closed or merged PR \"fix(portal): better handling when dom portal content can't be restored\" (#17851)"},{"Id":"532030018","IsPullRequest":false,"CreatedAt":"2019-12-03T14:36:22","Actor":"Gurran","Number":"17865","RawContent":null,"Title":"Angular apps removing eachothers overlay","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Have two angular applications on same page (Let's call them A and B)\r\n2. Open Overlay on the app highest up the HTML (A)\r\n3. Close Overlay\r\n4. Open Overlay in the other app (B)\r\n5. Open Overlay in the first app (A)\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\n\r\nOverlay for app A should be visible\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\n\r\nOverlay never opens. Overlays for app A is broken. \r\n\r\n\r\n#### Why I think this is happening\r\n\r\nWhat happens is that when the second apps overlay is opened? OverlayContainer.prototype._createContainer() is called. Where all divs with the class 'cdk-overlay-container' is removed and overwritten. This breaks all future overlays for app A. \r\n\r\nI've tried to remake the original div which app A used. But I does not seem to work.\r\n\r\nFunction in question: https://github.com/angular/components/blob/036729dc1a7b41236fcda9b23c578f9ef65b484c/src/cdk/overlay/overlay-container.ts#L50-L68\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.0-rc.4\r\n- CDK/Material:\r\n- Browser(s): Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): \r\nWindows\r\n","Url":"https://github.com/angular/components/issues/17865","RelatedDescription":"Open issue \"Angular apps removing eachothers overlay\" (#17865)"},{"Id":"531859171","IsPullRequest":false,"CreatedAt":"2019-12-03T11:16:46","Actor":"veluvj","Number":"17864","RawContent":null,"Title":"Uncaught Error: Can't resolve all parameters for MatDialogRef: (?, ?, ?).","State":"closed","Body":" I'm trying to create a new error dialog component that use as a service  when the others components had error.\r\n\r\n**error-showing.component.ts**\r\n\r\n```\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material\";\r\nimport { LoginComponent } from '../admin/login/login.component';\r\n@Component({\r\n  selector: 'app-error-showing',\r\n  templateUrl: './error-showing.component.html',\r\n  styleUrls: ['./error-showing.component.css']\r\n})\r\nexport class ErrorShowingComponent implements OnInit {\r\n  \r\n  \r\n  private dialogRef: any;\r\n\r\n  constructor (private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  openDialog() {\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.position = {\r\n      'top': '0',\r\n      left: '0'\r\n  };\r\n  dialogConfig.data = {\r\n    id: 1,\r\n    title: 'Angular For Beginners'\r\n};\r\n    this.dialog.open(LoginComponent, dialogConfig);\r\n\r\n\r\n\r\n    const dialogRef = this.dialog.open(LoginComponent, dialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(\r\n        data => console.log(\"Dialog output:\", data)\r\n    );    \r\n    }\r\n\r\n\r\n}\r\n\r\n```\r\n**login.component.ts**\r\n\r\n```\r\nimport { Component, OnInit,Inject, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../../services/authSerivce/authentication.service';\r\nimport { Login } from '../../../models/login';\r\nimport { LoaderService } from '../../../services/loaderService/loader.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  error: boolean;\r\n  loading: boolean;\r\n  login: Login = new Login();\r\n  description:string;\r\n\r\n\r\n  constructor(\r\n       private router: Router,\r\n       private loginService: AuthenticationService,\r\n       private loaderService: LoaderService,\r\n       private dialogRef: MatDialogRef<LoginComponent>,\r\n       @Inject(MAT_DIALOG_DATA)private data:any) { \r\n         this.description = data.description;\r\n       }\r\n  \r\n  \r\n  \r\n\r\n  ngOnInit() {\r\n    this.loading= false;\r\n    this.error = false;\r\n  }\r\n\r\n  signin(){\r\n  this.loaderService.show();\r\n  this.loginService.authenticate(this.login)\r\n  .subscribe(\r\n    (res)=>{\r\n        \r\n      console.log(res);\r\n      this.login = new Login();\r\n      this.goToUser();\r\n      this.loaderService.hide();\r\n\r\n        \r\n    },\r\n    (error)=>{\r\n      console.log(error.error.message);\r\n\r\n    })\r\n\r\n}\r\ngoToUser() {\r\n  this.router.navigate(['user']);\r\n}\r\n\r\nforgot() {\r\n  this.router.navigate(['forgot-password']);\r\n}\r\n\r\n}\r\n```\r\n**app.module.ts**\r\n\r\n```import { BrowserModule } from '@angular/platform-browser';\r\nimport {  NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SinglePostComponent } from './components/single-post/single-post.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { LoginComponent } from './components/admin/login/login.component';\r\nimport { RegisterComponent } from './components/admin/register/register.component';\r\nimport {\r\n    MatButtonModule, MatSidenavModule, MatListModule, MatCardModule, MatInputModule, MatTableModule,\r\n    MatToolbarModule, MatMenuModule, MatIconModule, MatProgressSpinnerModule\r\n} from '@angular/material';\r\n\r\nimport {MatDialogModule,MAT_DIALOG_DEFAULT_OPTIONS, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ForgotComponent } from './components/admin/forgot/forgot.component';\r\nimport { PasswordCreateComponent } from './components/admin/password-create/password-create.component';\r\nimport { UserComponent } from './components/admin//user/user.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { LoaderComponent } from './components/loader/loader.component';\r\nimport { TooltipModule } from 'ng2-tooltip-directive';\r\nimport { FilterPipe } from './pipes/filterPipe/filter.pipe';\r\nimport { MdePopoverModule } from '@material-extended/mde';\r\n// import {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\r\n// import {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { ErrorShowingComponent } from './components/error-showing/error-showing.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavbarComponent,\r\n        HomeComponent,\r\n        SinglePostComponent,\r\n        AboutComponent,\r\n        ContactComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ForgotComponent,\r\n        PasswordCreateComponent,\r\n        UserComponent,\r\n        FooterComponent,\r\n        LoaderComponent,\r\n        FilterPipe,\r\n        ErrorShowingComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        \r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatProgressSpinnerModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TooltipModule,\r\n        MdePopoverModule,\r\n        MatDatepickerModule\r\n    ],\r\n    entryComponents: [\r\n        LoginComponent \r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n    providers:  [MatDialogRef],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\n\r\nthanks in advance","Url":"https://github.com/angular/components/issues/17864","RelatedDescription":"Closed issue \"Uncaught Error: Can't resolve all parameters for MatDialogRef: (?, ?, ?).\" (#17864)"},{"Id":"531855339","IsPullRequest":false,"CreatedAt":"2019-12-03T09:46:29","Actor":"joerideg","Number":"17863","RawContent":null,"Title":"Application shifts when pressing 'Page Down' in a textarea inside mat-sidenav-content when mat-sidenav[position] is set to \"end\"","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/edit/angular-material-breaking-sidenav\r\n\r\nSteps to reproduce:\r\n1. focus on the textarea\r\n2. press PgDn button\r\n \r\n#### Expected Behavior\r\n\r\nUser scrolls a page down inside the text area\r\n\r\n#### Actual Behavior\r\n\r\nApplication shifts left\r\n\r\n#### Environment\r\n- Angular: 8.2.14\r\n- CDK/Material: 8.2.3\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10, Linux (Ubuntu/Linux Mint)\r\n\r\nWhen pressing 'Page Down' in a textarea inside mat-sidenav-content when mat-sidenav[position] is set to \"end\" will shift the application left visually. Using mat-sidenav[position=\"start\"] the behavior is fine. I've also noticed the amount of shift seems to be related to the number of characters on the line the cursor ends up on. Also pressing left afterwards will shift the application back to the right a bit.\r\nOpening and closing the sidenav resets the application position.","Url":"https://github.com/angular/components/issues/17863","RelatedDescription":"Open issue \"Application shifts when pressing 'Page Down' in a textarea inside mat-sidenav-content when mat-sidenav[position] is set to \"end\"\" (#17863)"},{"Id":"530745391","IsPullRequest":true,"CreatedAt":"2019-12-03T01:04:25","Actor":"crisbeto","Number":"17850","RawContent":null,"Title":"fix(youtube-player): avoid clobbering api loaded callback","State":"closed","Body":"The YouTube player component adds a global callback for when the API is loaded, however if one existed already it'll be overwritten. These changes ensure that the previous callback is preserved.","Url":"https://github.com/angular/components/pull/17850","RelatedDescription":"Closed or merged PR \"fix(youtube-player): avoid clobbering api loaded callback\" (#17850)"},{"Id":"531623970","IsPullRequest":true,"CreatedAt":"2019-12-03T00:18:17","Actor":"mertdeg2","Number":"17861","RawContent":null,"Title":"cdkConnectedOverlay should let us change positioning strategy","State":"closed","Body":"The problem is that this directive is not flexible enough to pass in arbitrary positioning strategy.\r\n\r\nI tried to ammend this PR: github.com/angular/components/pull/16374\r\n\r\nBut couldn't get it working :/ So i created a new PR","Url":"https://github.com/angular/components/pull/17861","RelatedDescription":"Closed or merged PR \"cdkConnectedOverlay should let us change positioning strategy\" (#17861)"},{"Id":"531616434","IsPullRequest":false,"CreatedAt":"2019-12-02T23:55:15","Actor":"kyletanders","Number":"17860","RawContent":null,"Title":"Recreating FormGroup with disabled attribute has different effect on matSelect vs matInput","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: \r\nhttps://stackblitz.com/edit/components-issue-qr6rcq\r\n\r\nSteps to reproduce:\r\n1. Click Recreate Form button\r\n2. Notice that the input is disabled but the mat-select is not\r\n\r\nAlso just for comparison see that calling formControl.disable() does work as expected:\r\n3. Reload the page\r\n4. Click 'Disable Function' button\r\n5. Notice both input and select are disabled as expected \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nExpected matSelect and matInput to both be disabled when creating a new FormGroup where the disabled value was set to true for both of them.\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nOnly the matInput was disabled\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.0.0\r\n- CDK/Material: 8.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/17860","RelatedDescription":"Open issue \"Recreating FormGroup with disabled attribute has different effect on matSelect vs matInput\" (#17860)"},{"Id":"531509497","IsPullRequest":false,"CreatedAt":"2019-12-02T20:09:10","Actor":"AleksandarMiha","Number":"17857","RawContent":null,"Title":"How to format date from date picker angular material in format ('Y-MM-DD')? Reactive form","State":"open","Body":"#### Documentation Feedback\r\n\r\nProvide a brief summary of what you would like to see changed in our \r\ndocumentation at material.angular.io.\r\n\r\nFeel free to provide any suggestions of content or examples you’d like us to include.\r\n\r\n**Affected documentation page:** Insert a link to the affected page on material.angular.io\r\n\r\nCheck my stack question https://stackoverflow.com/questions/59145378/how-to-format-date-from-date-picker-angular-material-in-format-y-mm-dd-reac\r\n","Url":"https://github.com/angular/components/issues/17857","RelatedDescription":"Open issue \"How to format date from date picker angular material in format ('Y-MM-DD')? Reactive form\" (#17857)"},{"Id":"531212668","IsPullRequest":false,"CreatedAt":"2019-12-02T15:44:38","Actor":"Alina177","Number":"17856","RawContent":null,"Title":"In Mat Table with mat-sort-header bug on scroll ","State":"open","Body":"#### Reproduction\r\nhttps://stackblitz.com/edit/angular-1vg9gn-trp98z?file=app%2Ftable-basic-example.html\r\n\r\nIt's a first bug in your components, respect for your staff. But today I find an interesting bug\r\nSteps to reproduce:\r\n1. Just create a basic table from  https://material.angular.io/components/table/overview with sort and test in Chrome Browser\r\n2. And try to scroll...ooops(((( \r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nCorrect work with scrolling\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nDidn't work scroll\r\n\r\n#### Environment\r\n\r\n- Angular: \r\n- CDK/Material: ^8.1.4\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/17856","RelatedDescription":"Open issue \"In Mat Table with mat-sort-header bug on scroll \" (#17856)"},{"Id":"531157023","IsPullRequest":true,"CreatedAt":"2019-12-02T14:17:35","Actor":"dirkluijk","Number":"17855","RawContent":null,"Title":"fix(overlay): restore previous host element before attaching","State":"open","Body":"The first time when `PositionStrategy.attach()` is called, the overlay is already added to the DOM. However, after detaching and attaching again, it is not yet added to the DOM.\r\n\r\nThis PR changes the order and first restores the host element back, and then invokes the `attach()` method.","Url":"https://github.com/angular/components/pull/17855","RelatedDescription":"Open PR \"fix(overlay): restore previous host element before attaching\" (#17855)"},{"Id":"531140964","IsPullRequest":false,"CreatedAt":"2019-12-02T13:50:20","Actor":"tomatenspaten","Number":"17854","RawContent":null,"Title":"Dialog opened on page with scrollbars leads to invisiblity of the page in the background ","State":"open","Body":"#### What are you trying to do?\r\n\r\nI want to open a dialog from a page. If the page has no scrollbars you can see the opened dialog and in the background you can still see the page.\r\nIf there are scrollbars on the page (for example when more data is displayed) and i open the dialog then the dialog is shown and the page is not visible in the background.\r\n\r\n#### What troubleshooting steps have you tried?\r\n\r\nI have already tried to find some hints in the DOM if something is different when the page is not showing but without success.\r\nI also tried a dirty way and deactivating the scrollbars right before opening the dialog. But that didn't help either.\r\nAlso i tried to switch to CDK/Material: 8.2.3 but that had too many dependencies (including going to Angular 8) which led to nearly the whole applications appearance being broken.\r\n\r\n#### Environment\r\n\r\n- Angular: 7.2.15\r\n- CDK/Material: 7.3.7\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOs\r\n","Url":"https://github.com/angular/components/issues/17854","RelatedDescription":"Open issue \"Dialog opened on page with scrollbars leads to invisiblity of the page in the background \" (#17854)"},{"Id":"531088263","IsPullRequest":false,"CreatedAt":"2019-12-02T12:12:25","Actor":"rvv-bouvet","Number":"17853","RawContent":null,"Title":"MatPaginatedTabHeader doesn't scroll last tab fully into view","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/edit/components-issue-wsbxpk\r\n\r\nSteps to reproduce:\r\n1. Set selectedIndex to last tab\r\n2. Render\r\n \r\n#### Expected Behavior\r\n![image](https://user-images.githubusercontent.com/44192365/69958526-4c755880-1505-11ea-9f3f-94b33d5e5541.png)\r\n\r\nSelected tab is scrolled fully into view and righthand pagination button disabled just as if the user manually clicked on the last tab\r\n\r\n#### Actual Behavior\r\n![image](https://user-images.githubusercontent.com/44192365/69957955-0ff52d00-1504-11ea-8ddb-c6338163bbea.png)\r\n\r\nTab is only partially visible and pagination button remains enabled. When tab titles vary in size only a few pixels of the last tab are visible. Clicking on the last tab manually scrolls it fully into view.\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.2.14\r\n- CDK/Material: 8.2.3\r\n- Browser(s): Chrome, Firefox, Internet Explorer 11, Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): All\r\n","Url":"https://github.com/angular/components/issues/17853","RelatedDescription":"Open issue \"MatPaginatedTabHeader doesn't scroll last tab fully into view\" (#17853)"},{"Id":"531037921","IsPullRequest":false,"CreatedAt":"2019-12-02T10:36:29","Actor":"yurii-shylov","Number":"17852","RawContent":null,"Title":"Queue messages sent to LiveAnnouncer","State":"open","Body":"#### Feature Description\r\n\r\nLiveAnnouncer should be able to queue multiple messages and announce them one by one instead of announcing only the lates message. \r\n\r\n#### Use Case\r\n\r\nSee https://stackblitz.com/edit/angular-b4jomd, it has a button which announces two messages \"Table Foo was updated\" and \"Table Bar was updated\" on click. It illustrates two use cases:\r\n\r\n1) Simultaneous announcements. Current implementation of LiveAnnouncer uses a single DOM element for the announcement, so second message overrides the first one and screen reader users hear only the second message.\r\n\r\n2) Consequent announcement of the same message. Current implementation will announce only distinct messages, i.e. clicking the button multiple times will produce only one message for the screen reader. That's not always convenient. For example, if you have a table on the page and you do some polling which updates the table 5 times, we need to be able to announce every of those updates so that screen reader users know what's happening on the page.\r\n\r\n#### Implementation\r\n\r\nWe already have an implementation of a queued LiveAnnouncer which was used in GCP for the last 5 months, it alowed to fix a lot of accessibility problems on pages with heavy UIs. I will convert it to a PR here, but I'd like to have some discussion first. At the very least I'd like to know whether it should replace the existing LiveAnnouncer implementation or we should allow users to switch between two implementations","Url":"https://github.com/angular/components/issues/17852","RelatedDescription":"Open issue \"Queue messages sent to LiveAnnouncer\" (#17852)"},{"Id":"530721431","IsPullRequest":true,"CreatedAt":"2019-12-01T12:11:02","Actor":"crisbeto","Number":"17848","RawContent":null,"Title":"fix(drag-drop): not stopping drag if page is blurred","State":"open","Body":"Currently the only way to stop a drag sequence is via a `mouseup`/`touchend` event or by destroying the instance, however if the page loses focus while dragging the events won't be dispatched anymore and user will have to click again to stop dragging. These changes add some extra code that listens for `blur` events on the `window` and stops dragging.\r\n\r\nFixes #17537.","Url":"https://github.com/angular/components/pull/17848","RelatedDescription":"Open PR \"fix(drag-drop): not stopping drag if page is blurred\" (#17848)"},{"Id":"530712908","IsPullRequest":false,"CreatedAt":"2019-12-01T11:00:31","Actor":"waterplea","Number":"17847","RawContent":null,"Title":"CdkVirtualScrollViewport smooth scroll not working in Safari","State":"open","Body":"#### Reproduction\r\n\r\nHere's a fork of virtual scroll demo with a button to reproduce the issue:\r\nhttps://stackblitz.com/edit/angular-virtual-scroll-smooth-ios\r\n\r\nSteps to reproduce:\r\n1. Call scrollToOffset/scrollToIndex with `'smooth'` behavior on Safari\r\n \r\n \r\n#### Expected Behavior\r\n\r\nViewport scrolls smoothly\r\n\r\n\r\n#### Actual Behavior\r\n\r\nViewport scrolls immediately in Safari and smoothly in good browsers\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.2.3\r\n- CDK/Material: 8.2.3\r\n- Browser(s): Safari\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS/iOS\r\n\r\n#### Other details\r\n\r\nThis is probably because it uses native scrollIntoView with behavior and it is not supported in Safari. If Angular team will not include the fallback with its CDK, it is probably good to mention this limitation on the Scrolling demo page of the CDK.\r\n","Url":"https://github.com/angular/components/issues/17847","RelatedDescription":"Open issue \"CdkVirtualScrollViewport smooth scroll not working in Safari\" (#17847)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-05T05:30:05.1591944Z","RunDurationInMilliseconds":3092}