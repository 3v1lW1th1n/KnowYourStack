{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7025606547","Type":"IssuesEvent","CreatedAt":"2017-12-23T13:22:02","Actor":"haouatmohamed","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2315","RelatedDescription":"Opened issue \"Reference to type 'Task' claims it is defined in 'System.Runtime', but it could not be found\" (#2315) at aspnet/Home","RelatedBody":"Hello, I am using Visual Studio 2017 and I get this error whenever I try to debug my app:\r\n\r\nReference to type 'Task' claims it is defined in 'System.Runtime', but it could not be found\r\n\r\n\r\nAny idea please ?\r\nThanks "}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7024654700","Type":"PullRequestEvent","CreatedAt":"2017-12-22T22:31:55","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1251","RelatedDescription":"Merged pull request \"Use new common benchmark config\" (#1251) at aspnet/SignalR","RelatedBody":""},{"Id":"7024193264","Type":"PullRequestEvent","CreatedAt":"2017-12-22T19:25:06","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1251","RelatedDescription":"Opened pull request \"Use new common benchmark config\" (#1251) at aspnet/SignalR","RelatedBody":""},{"Id":"7024132103","Type":"PullRequestEvent","CreatedAt":"2017-12-22T19:06:27","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1250","RelatedDescription":"Opened pull request \"React to pipeline changes\" (#1250) at aspnet/SignalR","RelatedBody":""},{"Id":"7023197204","Type":"IssuesEvent","CreatedAt":"2017-12-22T14:24:56","Actor":"mattchidley","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1241","RelatedDescription":"Closed issue \"Client 1.0.0 Alpha2 Supported Browsers\" (#1241) at aspnet/SignalR","RelatedBody":"We are currently trying to build an app that uses SignalR on aspnet core. In a perfect world, our app would work all the way back to IE7. We have the app working on IE9 and above with the ES5 client.\r\n\r\nIs the current 1.0.0 alpha2 client supposed to be able to run on IE8 or IE7? I have been having issues getting it to run on these versions.\r\n\r\nOn the aspnet signalr docs in the Supported Platforms article, it states that SignalR will work using the Long Polling transport on IE 8+.\r\n\r\nWe are curious if any other developers have been trying to come up with a solution for this problem. We have tried ES5 shim with no success. We would like to avoid writing any custom client code if possible.\r\n\r\nWhich browsers & versions should the provided 1.0.0 Alpha2 client support?"},{"Id":"7023011139","Type":"IssuesEvent","CreatedAt":"2017-12-22T13:31:20","Actor":"kamikyo","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1249","RelatedDescription":"Closed issue \"400 bad request with nginx proxy \" (#1249) at aspnet/SignalR","RelatedBody":"This problem only occurs in IE browsers.(eg. IE11,IE10)\r\nchrome, firefox, edge the same configuration and environment are no problem.\r\n![startup](https://user-images.githubusercontent.com/7645337/34295901-bdac082c-e74a-11e7-8e3b-3d586ef0dcc4.png)\r\n![cshtml](https://user-images.githubusercontent.com/7645337/34295920-d833455c-e74a-11e7-990e-e71cb21ed7f1.png)\r\n![nginx](https://user-images.githubusercontent.com/7645337/34295978-21d24abe-e74b-11e7-946a-75e5cf3f6772.png)\r\n![error](https://user-images.githubusercontent.com/7645337/34295927-e1457296-e74a-11e7-80d9-bfb145f635ac.png)\r\n![header](https://user-images.githubusercontent.com/7645337/34295960-086c6faa-e74b-11e7-8329-8c4a9d4544db.png)\r\n\r\n\r\n\r\n"},{"Id":"7022558455","Type":"IssuesEvent","CreatedAt":"2017-12-22T11:09:03","Actor":"kamikyo","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1249","RelatedDescription":"Opened issue \"400 bad request with nginx proxy \" (#1249) at aspnet/SignalR","RelatedBody":"This problem only occurs in IE browsers.(eg. IE11,IE10)\r\nchrome, firefox, edge the same configuration and environment are no problem.\r\n![startup](https://user-images.githubusercontent.com/7645337/34295901-bdac082c-e74a-11e7-8e3b-3d586ef0dcc4.png)\r\n![cshtml](https://user-images.githubusercontent.com/7645337/34295920-d833455c-e74a-11e7-990e-e71cb21ed7f1.png)\r\n![nginx](https://user-images.githubusercontent.com/7645337/34295978-21d24abe-e74b-11e7-946a-75e5cf3f6772.png)\r\n![error](https://user-images.githubusercontent.com/7645337/34295927-e1457296-e74a-11e7-80d9-bfb145f635ac.png)\r\n![header](https://user-images.githubusercontent.com/7645337/34295960-086c6faa-e74b-11e7-8329-8c4a9d4544db.png)\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7024596642","Type":"PullRequestEvent","CreatedAt":"2017-12-22T22:03:29","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7158","RelatedDescription":"Opened pull request \"Improving logging - model binding\" (#7158) at aspnet/Mvc","RelatedBody":"Related to issue #6498: When enabling \"Trace\" logging for MVC loggers, I should be buried in log messages"},{"Id":"7024260337","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:47:20","Actor":"rue-vmom","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7154","RelatedDescription":"Closed issue \"IFormFile.CopyToAsync() causes an exception on 2nd+ execution\" (#7154) at aspnet/Mvc","RelatedBody":"I get the following exception after calling my controller on the 2nd and subsequence calls:\r\n```\r\n[HttpPut(\"{id}\")]\r\npublic async void Put(string id, [FromForm]string data, [FromForm]List<IFormFile> media) {\r\n     using (var memoryStream = new MemoryStream()) {\r\n          await media[0].CopyToAsync(memoryStream);\r\n     }\r\n}\r\n```\r\n\r\nThe first call to this controller action works, but the 2nd time will produce this exception until a restart:\r\n```\r\nSystem.ObjectDisposedException: Safe handle has been closed\r\n   at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success)\r\n   at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success)\r\n   at Interop.Kernel32.SetFilePointerEx(SafeFileHandle hFile, Int64 liDistanceToMove, Int64& lpNewFilePointer, UInt32 dwMoveMethod)\r\n   at System.IO.FileStream.SeekCore(Int64 offset, SeekOrigin origin)\r\n   at System.IO.FileStream.ReadNativeAsync(Byte[] bytes, Int32 offset, Int32 numBytes, Int32 numBufferedBytesRead, CancellationToken cancellationToken)\r\n   at System.IO.FileStream.ReadAsyncInternal(Byte[] array, Int32 offset, Int32 numBytes, CancellationToken cancellationToken)\r\n   at System.IO.FileStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream.<ReadAsync>d__35.MoveNext()\r\n```\r\n\r\nSwitching to use IFormFile.CopyTo() gets rid of the error, but it's no longer async.  Thanks!"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7026094929","Type":"PullRequestEvent","CreatedAt":"2017-12-23T20:51:27","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1491","RelatedDescription":"Closed pull request \"Redeclared shema names as constants instead of static readonly fields\" (#1491) at aspnet/Identity","RelatedBody":"Related to #1490"},{"Id":"7021045151","Type":"IssuesEvent","CreatedAt":"2017-12-22T01:16:19","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1538","RelatedDescription":"Opened issue \"Add xmldocs for Microsoft.AspNetCore.Identity.UI\" (#1538) at aspnet/Identity","RelatedBody":"A fit-n-finish item TODO before RTM.\r\n\r\ncc @javiercn "},{"Id":"7021006591","Type":"PullRequestEvent","CreatedAt":"2017-12-22T00:59:00","Actor":"pakrym","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1537","RelatedDescription":"Merged pull request \"Revert Move identity into an Area in a library (using Razor Pages)\" (#1537) at aspnet/Identity","RelatedBody":"Revert https://github.com/aspnet/Identity/commit/2964515d8556e90fb88bcb6dcacc9f762965bba1 as it broke Univese-Coherence"},{"Id":"7021000742","Type":"PullRequestEvent","CreatedAt":"2017-12-22T00:56:22","Actor":"pakrym","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1537","RelatedDescription":"Opened pull request \"Revert Move identity into an Area in a library (using Razor Pages)\" (#1537) at aspnet/Identity","RelatedBody":"Revert https://github.com/aspnet/Identity/commit/2964515d8556e90fb88bcb6dcacc9f762965bba1 as it broke Univese-Coherence"},{"Id":"7020596820","Type":"IssuesEvent","CreatedAt":"2017-12-21T22:23:59","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1473","RelatedDescription":"Closed issue \"Move template code into a library and plug-in the code through a gesture\" (#1473) at aspnet/Identity","RelatedBody":""},{"Id":"7020594716","Type":"PullRequestEvent","CreatedAt":"2017-12-21T22:23:19","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1536","RelatedDescription":"Merged pull request \"Move identity into an Area in a library (using Razor Pages)\" (#1536) at aspnet/Identity","RelatedBody":"Adds support for a default UI for identity.\r\n* The default UI uses its own Area (Identity).\r\n* The default UI requires MVC and StaticFiles to be present on the request processing pipeline.\r\n* The default UI requires the user to provide a '_LoginPartial ' partial view in their application in a location that the view engine will find it. This is tipically /Pages/Shared or /Views/Shared\r\nCurrent limitations:\r\n* The UI is self-contained and non-customizable (outside of things possible with Razor pages).\r\n* Customizing the User, role, etc. is not supported at this time."},{"Id":"7019979470","Type":"IssuesEvent","CreatedAt":"2017-12-21T19:32:23","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1526","RelatedDescription":"Closed issue \"Specified key was too long; max key length is 767 bytes\" (#1526) at aspnet/Identity","RelatedBody":"Microsoft.EntityFrameworkCore.Database.Command:Error: Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nCREATE UNIQUE INDEX `UserNameIndex` ON `AspNetUsers` (`NormalizedUserName`);\r\n\r\nMySql.Data.MySqlClient.MySqlException (0x80004005): Specified key was too long; max key length is 767 bytes ---> MySql.Data.MySqlClient.MySqlException (0x80004005): Specified key was too long; max key length is 767 bytes\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult()\r\n   at MySqlConnector.Core.ResultSet.<ReadResultSetHeaderAsync>d__1.MoveNext() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\Core\\ResultSet.cs:line 43\r\n   at MySql.Data.MySqlClient.MySqlDataReader.ActivateResultSet(ResultSet resultSet) in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\MySql.Data.MySqlClient\\MySqlDataReader.cs:line 92\r\n   at MySql.Data.MySqlClient.MySqlDataReader.<ReadFirstResultSetAsync>d__65.MoveNext() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\MySql.Data.MySqlClient\\MySqlDataReader.cs:line 297\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MySql.Data.MySqlClient.MySqlDataReader.<CreateAsync>d__64.MoveNext() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\MySql.Data.MySqlClient\\MySqlDataReader.cs:line 287\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MySqlConnector.Core.TextCommandExecutor.<ExecuteReaderAsync>d__3.MoveNext() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\Core\\TextCommandExecutor.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MySqlConnector.Core.TextCommandExecutor.<ExecuteNonQueryAsync>d__1.MoveNext() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\Core\\TextCommandExecutor.cs:line 25\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MySql.Data.MySqlClient.MySqlCommand.ExecuteNonQuery() in C:\\projects\\mysqlconnector\\src\\MySqlConnector\\MySql.Data.MySqlClient\\MySqlCommand.cs:line 60\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.MySqlRelationalCommand.<ExecuteAsync>d__3.MoveNext()\r\n引发的异常:“MySql.Data.MySqlClient.MySqlException”(位于 System.Private.CoreLib.dll 中)\r\n“MySql.Data.MySqlClient.MySqlException”类型的异常在 System.Private.CoreLib.dll 中发生，但未在用户代码中进行处理\r\nSpecified key was too long; max key length is 767 bytes"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7023911367","Type":"PullRequestEvent","CreatedAt":"2017-12-22T17:51:27","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2233","RelatedDescription":"Merged pull request \"Use common BDN config\" (#2233) at aspnet/KestrelHttpServer","RelatedBody":"That doesn't fail in debug."},{"Id":"7023875712","Type":"PullRequestEvent","CreatedAt":"2017-12-22T17:39:48","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2234","RelatedDescription":"Opened pull request \"[WIP] React to pipeline changes\" (#2234) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7021033448","Type":"PullRequestEvent","CreatedAt":"2017-12-22T01:11:01","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2233","RelatedDescription":"Opened pull request \"Use common BDN config\" (#2233) at aspnet/KestrelHttpServer","RelatedBody":"That doesn't fail in debug."},{"Id":"7019619485","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:58:38","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1290","RelatedDescription":"Closed issue \"Make it easier to configure Kestrel endpoints from config\" (#1290) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/pull/1280 added new KestrelServerOptions.Listen APIs for directly configuring kestrel to listen on IPs and ports. However, it's non-trivial to parse these values from config so they can be passed to the new methods. @shirhatti @DamianEdwards \r\n\r\nBasic scenarios:\r\n1. http://localhost:port/ (IPv4 and IPv6 loopback, ANCM)\r\n2. http://*:port/ (IPv6Any)\r\n3. http://IP:port/\r\n4. https://*:port/ with given SSL cert & password\r\n5. https://IP:port/ with given SSL cert & password\r\n6. 2 and 4 at the same time.\r\n7. A list of IPs and ports\r\n\r\nUpdate the samples to use values passed in via config rather than hardcoded values.\r\n\r\nCurrent API/Sample:\r\n```\r\noptions.Listen(IPAddress.Loopback, 5000);\r\noptions.Listen(IPAddress.Loopback, 5001, listenOptions =>\r\n{\r\n       listenOptions.UseHttps(\"testCert.pfx\", \"testPassword\");\r\n});\r\n```\r\n\r\nProposals:\r\n- It's easy enough for the user to infer the scheme from the presence of cert information.\r\n  - `if (!string.IsNullOrEmpty(config[\"certPath\"])) { listenOptions.UseHttps(config[\"certPath\"], config[\"certPassword\"]); }`\r\n- If the app only expects to be loopback or *, they only need to pass in a port. Adding Loopback and Any versions with string overloads that parse the port would help.\r\n  - `options.ListenLoopback(int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.ListenLoopback(config[\"port\"]);`\r\n  - `options.ListenAny(int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.ListenAny(config[\"port\"]);`\r\n- For an IP and port, IPEndpoint does not have a Parse method. If we don't provide one then the config needs to store the parameters separately.\r\n  - `options.Listen(IPAddress.Parse(config[\"IP\"]), int.Parse(config[\"port\"], CultureInfo.InvariantCulture));` vs `options.Listen(config[\"IPandPort\"]);`\r\n- Most of the above do not scale well if you need to pass in multiple values, especially if the count varies.\r\n  - `options.Listen(config[\"IPandPort1\"]); options.Listen(config[\"IPandPort2\"]); options.Listen(config[\"IPandPort3\"]);`\r\n  - The user may be able to do a string split on semicolon and call Listen in a loop.\r\n  - `config[\"IPsAndPorts\"].Split(';').ForEach(endpoint => options.Listen(endpoint));`\r\n"},{"Id":"7019533727","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:37:03","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1879","RelatedDescription":"Closed issue \"Kestrel config binder should understand * and localhost\" (#1879) at aspnet/KestrelHttpServer","RelatedBody":"_From @Tratcher on April 27, 2017 17:0_\n\nThe templates are going to enable SSL via config in dev and production. They need to set up the rest of the endpoints when they do this. https://github.com/aspnet/MetaPackages/pull/44 added the ability to bind to IPs and ports, but that makes for a poor user experience. In dev the templates want localhost, but will have to specify 127.0.0.1 (and ::1) if they want IPv6 support. In production they'll need to specify a public IP (0.0.0.0 and ::0).\r\n\r\nConfig should allow `localhost` that binds to 127.0.0.1 and ::1, and * that binds to 0.0.0.0 and ::0, using the same logic that kestrel applies to UseUrls values. Even better, implement this in Kestrel with a Listen that takes the string ip/host so you don't have to duplicate all of the logic.\n\n_Copied from original issue: aspnet/MetaPackages#73_"},{"Id":"7019532919","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:36:50","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2016","RelatedDescription":"Closed issue \"HTTPS binding configuration for Kestrel\" (#2016) at aspnet/KestrelHttpServer","RelatedBody":"We need to figure out how config for HTTPS will work for Kestrel in development. (Config format for setting up an HTTPS binding and how will tooling setup the bindings during development). \r\n\r\nThis is part of our plan for HTTPS in 2.1"},{"Id":"7019532050","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:36:39","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2166","RelatedDescription":"Closed issue \"Add a UseHttps overload to allow using the default certificate\" (#2166) at aspnet/KestrelHttpServer","RelatedBody":"Today the default dev certificate is only accessible via the UseUrls configuration path. It would be helpful if the Listen APIs could also request the default certificate.\r\n\r\nWe may also want to provide a first class way of replacing the default certificate in code. This would allow the app to use the dev default in development and specify a different default in production."},{"Id":"7019531340","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:36:28","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2167","RelatedDescription":"Closed issue \"No way to configure the endpoint options when using PreferServerUrls\" (#2167) at aspnet/KestrelHttpServer","RelatedBody":"I wanted to turn on `listenOptions.UseConnectionLogging();` behind ANCM but there's no way to do this, PreferServerUrls overrides all Kestrel ListenOptions."},{"Id":"7019530629","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:36:17","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2188","RelatedDescription":"Closed issue \"Listen on https://localhost:5001 by default when a default HTTPS certificate is available\" (#2188) at aspnet/KestrelHttpServer","RelatedBody":"Absent any configuration, by default Kestrel listens on http://localhost:5000. Kestrel by default should also listen on https://localhost:5001 *if* a default HTTPS certificate is available (i.e. on a dev machine with the .NET Core SDK and the ASP.NET Core HTTPS development certificate installed)."},{"Id":"7019513042","Type":"PullRequestEvent","CreatedAt":"2017-12-21T17:31:51","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2186","RelatedDescription":"Merged pull request \"Implement configuration support\" (#2186) at aspnet/KestrelHttpServer","RelatedBody":"This includes the updated design. If you like it then I'll start working on the tests.\r\n\r\nRelated issues:\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/2016 - Config support\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/2167 - Default settings\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/2166 - UseHttps()\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/1290 - Config and code parity\r\nhttps://github.com/aspnet/KestrelHttpServer/issues/2188 - Listen on https by default\r\n\r\nMajor features:\r\n- KestrelServerOptions.ConfigureEndpointDefaults sets a callback that will be called for every new endpoint no matter what source.\r\n- KestrelServerOptions.ConfigureHttpsDefaults sets a callback that will be called to configured every new Https adapter. This is primarily useful for endpoints config.\r\n- KestrelServerOptions.Configure(IConfiguration) creates a builder that reads config and registers endpoints. This includes the .Endpoint method to configure additional settings for individually named endpoints from config.\r\n- New ListenOptions.UseHttps extensions to provide code and config functional symmetry, and overloads with configureOptions so you don't have to re-invent cert loading when you want to configure other settings.\r\n\r\nSupported configurations:\r\n\r\n- No config: Listens on http://localhost:5000 and https://localhost:5001 (if a default cert is available)\r\n- Configure Urls: Urls can be specified by ASNETCORE_URLS environment variable, Urls command line variable, or Urls top level key in hosting's configuration, or via the `UseUrls` IWebHostBuilder extension. These can be http or https (if a default cert is available). This may be a semicolon separated list. E.g. `\"Urls\": \"http://localhost:5000;http://localhost:5001\"`.\r\n- Default cert from config: The default certificate can be replaced from configuration. Call `serverOptions.Configure(context.Configuration.GetSection(\"Kestrel\"))` to specify the configuration section (this will be added to the metapackage). Then add the following config:\r\n```\r\n{\r\n  \"Kestrel\": {\r\n    \"Certificates\": {\r\n       \"Default\": {\r\n          \"Path\": \"...\",\r\n          \"Password\": \"\"\r\n       }\r\n    }\r\n  }\r\n}\r\n```\r\nCertificates can also be loaded from the machine store by specifying the following parameters instead of Path and Password:\r\n```\r\n  \"Subject\": \"Test Subject\", // Required\r\n  \"Store\": \"My\", // StoreName defaults to My\r\n  \"Location\": \"CurrentUser/LocalMachine\", // StoreLocation defaults to CurrentUser\r\n  \"AllowInvalid\": true // defaults to false. Setting this to true allows for self-signed or other non-trusted certificates.\r\n```\r\n- Change defaults in code: ConfigureEndpointDefaults and ConfigureHttpsDefaults can be used to change default settings for ListenOptions and HttpsConnectionAdapterOptions, including overriding the default certificate specified in the prior scenario.\r\n```\r\noptions.ConfigureEndpointDefaults(opt =>\r\n{\r\n    opt.Protocols = HttpProtocols.Http1;\r\n});\r\n\r\noptions.ConfigureHttpsDefaults(httpsOptions =>\r\n{\r\n    httpsOptions.SslProtocols = SslProtocols.Tls12;\r\n});\r\n```\r\n- Configure endpoints: Named endpoints can be added via configuration with the following format:\r\n```\r\n  \"Kestrel\": {\r\n\t\"Endpoints\": {\r\n\t   \"HTTP\": { \"Url\": \"http://*:5000\" },\r\n           \"HTTPS\": {\r\n              \"Url\": \"https://*:5463\",\r\n              \"Certificate\": {\r\n                  \"Path\": \"testCert.pfx\",\r\n                  \"Password\": \"testPassword\"\r\n              }\r\n          }\r\n    }\r\n```\r\nSchema details:\r\n1. The endpoints above are named HTTP and HTTPS. These names are arbitrary but will become useful in the next example. These names are case-insensitive.\r\n2. The Url parameter is required for each endpoint. The format for this parameter is the same as the top level Urls configuration parameter except that it's limited to a single value.\r\n3. These endpoints replace those defined in the top level Urls configuration rather than adding to them. Endpoints defined in code via Listen are cumulative with the endpoints defined in this configuration section.\r\n4. The Certificate section is optional, if not specified then the defaults defined in earlier scenarios will be used. If no defaults are available then the server will throw and fail to start.\r\n5. The Certificate section supports both the Path&Password and the Subject&Store type of certificates.\r\n6. Any number of endpoints may be defined in this way so long as they don't cause port conflicts.\r\n- `serverOptions.Configure(context.Configuration.GetSection(\"Kestrel\"))` returns a KestrelConfigurationLoader with an `.Endpoint(string name, options => { })` method that can be used to supplement configured endpoint's settings.\r\n```\r\n  serverOptions.Configure(context.Configuration.GetSection(\"Kestrel\"))\r\n    .Endpoint(\"HTTPS\", opt =>\r\n    {\r\n         opt.ListenOptions.Protocols = HttpProtocols.Http1;\r\n         opt.HttpsOptions.SslProtocols = SslProtocols.Tls12;\r\n    });\r\n```\r\n- The configuration section for each endpoint is a available on the options in the Endpoint method so that custom settings may be read.\r\n- Multiple configurations may be loaded by calling `serverOptions.Configure(context.Configuration.GetSection(\"Kestrel\"))` again with another section. Only the last configuration will be used unless Load is explicitly called on prior instances. The metapackage will not call Load so that it's default configuration section may be replaced.\r\n- KestrelConfigurationLoader mirrors the Listen family of APIs from KestrelServerOptions as Endpoint overloads so code and config endpoints may be configured in the same place. These overloads do not use names and only consume default settings from configuration."},{"Id":"7019506702","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:30:22","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2232","RelatedDescription":"Opened issue \"Build.cmd fails due to new BenchmarkDotNet RELEASE error\" (#2232) at aspnet/KestrelHttpServer","RelatedBody":"build.cmd now fails by default on dev machines because BenchmarkDotNet started issuing a fatal error if the project is not compiled as RELEASE.\r\n\r\nworkaround: `build /p:configuration=Release`\r\n\r\nProposals:\r\n- Disable BenchmarkDotNet for DEBUG?\r\n- Suppress the error?\r\n"},{"Id":"7019488696","Type":"IssuesEvent","CreatedAt":"2017-12-21T17:26:05","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2226","RelatedDescription":"Closed issue \"issue solved\" (#2226) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7015592838","Type":"IssuesEvent","CreatedAt":"2017-12-20T22:27:41","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2231","RelatedDescription":"Opened issue \"Allow Unix Sockets on Windows\" (#2231) at aspnet/KestrelHttpServer","RelatedBody":"😮 https://blogs.msdn.microsoft.com/commandline/2017/12/19/af_unix-comes-to-windows/"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7024840808","Type":"PullRequestEvent","CreatedAt":"2017-12-23T00:23:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1882","RelatedDescription":"Opened pull request \"Make AspNetCoreSettings actually work\" (#1882) at aspnet/Razor","RelatedBody":""},{"Id":"7024808339","Type":"PullRequestEvent","CreatedAt":"2017-12-23T00:00:58","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1881","RelatedDescription":"Opened pull request \"Prevent type name collisions when file hierarchy + namespace is identical\" (#1881) at aspnet/Razor","RelatedBody":"Fixes #1811 "},{"Id":"7024793728","Type":"PullRequestEvent","CreatedAt":"2017-12-22T23:51:22","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1880","RelatedDescription":"Opened pull request \"Removed LegacyResources.resx\" (#1880) at aspnet/Razor","RelatedBody":"#1827 \r\n\r\n- Moved a lot of stuff from `LegacyResources` and `Resources`\r\n- Removed `LegacyResources` along with a **lot of unused strings**\r\n- Updated usages"},{"Id":"7024658073","Type":"IssuesEvent","CreatedAt":"2017-12-22T22:33:37","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1698","RelatedDescription":"Closed issue \"Add unit tests for DefaultRazorIndentationFactsService\" (#1698) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/pull/1697 adds some unit tests but we need a lot more coverage."},{"Id":"7024653436","Type":"PullRequestEvent","CreatedAt":"2017-12-22T22:31:15","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1878","RelatedDescription":"Merged pull request \"Added DefaultRazorIndentationFactsService unit tests.\" (#1878) at aspnet/Razor","RelatedBody":"- Already had a good variety of integration tests so refactored the service to properly unit test each piece.\r\n- Found several pieces of unneeded code (wasn't being used) so removed it.\r\n- Removed the `LocateOwner` logic that was embedded in the service. We already have an equivalent locate owner on our `SyntaxTreeNode` items.\r\n\r\n#1698"},{"Id":"7024509483","Type":"PullRequestEvent","CreatedAt":"2017-12-22T21:25:37","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1879","RelatedDescription":"Opened pull request \"Fix #1874\" (#1879) at aspnet/Razor","RelatedBody":"The tools and tasks were missing from the package.\r\n\r\nAlso added some hardening to the targets so we can detect regressions."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-12-24T05:30:10.9442244Z","RunDurationInMilliseconds":9436}