{"Data":{"GitHub":{"Issues":[{"Id":"517545712","IsPullRequest":true,"CreatedAt":"2019-11-05T04:46:02","Actor":"JuditRose","Number":"2287","RawContent":null,"Title":"Port FormatString Editor WIP","State":"open","Body":"Fixes #2281\r\nContributes to #1115 \r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2287)","Url":"https://github.com/dotnet/winforms/pull/2287","RelatedDescription":"Open PR \"Port FormatString Editor WIP\" (#2287)"},{"Id":"517544395","IsPullRequest":false,"CreatedAt":"2019-11-05T04:39:59","Actor":"JuditRose","Number":"2286","RawContent":null,"Title":"Port MaskedTextBoxTextEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2286","RelatedDescription":"Open issue \"Port MaskedTextBoxTextEditor\" (#2286)"},{"Id":"517544295","IsPullRequest":false,"CreatedAt":"2019-11-05T04:39:33","Actor":"JuditRose","Number":"2285","RawContent":null,"Title":"Port MaskPropertyEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2285","RelatedDescription":"Open issue \"Port MaskPropertyEditor\" (#2285)"},{"Id":"517544159","IsPullRequest":false,"CreatedAt":"2019-11-05T04:38:51","Actor":"JuditRose","Number":"2284","RawContent":null,"Title":"Port LinkAreaEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115","Url":"https://github.com/dotnet/winforms/issues/2284","RelatedDescription":"Open issue \"Port LinkAreaEditor\" (#2284)"},{"Id":"517543930","IsPullRequest":false,"CreatedAt":"2019-11-05T04:37:46","Actor":"JuditRose","Number":"2283","RawContent":null,"Title":"Port HelpNamespaceEditor","State":"open","Body":"Porting the missing UITypeEditors\r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2283","RelatedDescription":"Open issue \"Port HelpNamespaceEditor\" (#2283)"},{"Id":"517543633","IsPullRequest":false,"CreatedAt":"2019-11-05T04:36:25","Actor":"JuditRose","Number":"2282","RawContent":null,"Title":"Port  SelectedPathEditor","State":"open","Body":"Porting the missing UITypeEditors  \r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2282","RelatedDescription":"Open issue \"Port  SelectedPathEditor\" (#2282)"},{"Id":"517543458","IsPullRequest":false,"CreatedAt":"2019-11-05T04:35:34","Actor":"JuditRose","Number":"2281","RawContent":null,"Title":"Port FormatStringEditor","State":"open","Body":"Porting the missing UITypeEditors  \r\nRelated to #1115 \r\n","Url":"https://github.com/dotnet/winforms/issues/2281","RelatedDescription":"Open issue \"Port FormatStringEditor\" (#2281)"},{"Id":"517508097","IsPullRequest":true,"CreatedAt":"2019-11-05T02:11:52","Actor":"Zheng-Li01","Number":"2280","RawContent":null,"Title":"Adding the Core RT cases","State":"open","Body":"Hi @AdamYoblick , @RussKie. Winforms CTI Team try to add some Core RT cases to the dotnet/winfoms repro, please have a review and give some guidance if there have something wrong.\r\n\r\nThanks\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2280)","Url":"https://github.com/dotnet/winforms/pull/2280","RelatedDescription":"Open PR \"Adding the Core RT cases\" (#2280)"},{"Id":"517161298","IsPullRequest":false,"CreatedAt":"2019-11-04T13:43:57","Actor":"chenxinyanc","Number":"2279","RawContent":null,"Title":"Control.CreateHandle should specify dpiAwarenessContext (of current thread) in Application.ParkHandle","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) 5.0-alpha1\r\n* Have you experienced this same bug with .NET Framework?: N/A\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nI came across the problem when trying to add a UT for `System.Windows.Forms` that involves controls of different DPI-awareness. The code is like this\r\n```c#\r\n[WinFormsFact]\r\npublic void Control_Parent_DifferentDpi_ThrowsWin32Exception()\r\n{\r\n    Control childControl = null, parentControl = null;\r\n    IntPtr? originalAwareness = null;\r\n    try\r\n    {\r\n        try\r\n        {\r\n            // DpiHelper.EnterDpiAwarenessScope will do nothing if current process is SYSTEM_UNAWARE or SYSTEM_AWARE\r\n            //\r\n            // We cannot use DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE,\r\n            // Somehow GetDpiAwarenessContextForWindow will return DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 for such window.\r\n            originalAwareness = CommonUnsafeNativeMethods.SetThreadDpiAwarenessContext(new IntPtr((int)DpiAwarenessContext.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2));\r\n            Assert.Equal(0, Marshal.GetLastWin32Error());\r\n            childControl = new Control();\r\n            childControl.CreateControl();\r\n            Assert.Equal(DpiAwarenessContext.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2,\r\n                CommonUnsafeNativeMethods.GetDpiAwarenessContextForWindow(childControl.Handle));\r\n            CommonUnsafeNativeMethods.SetThreadDpiAwarenessContext(new IntPtr((int)DpiAwarenessContext.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE));\r\n            Assert.Equal(0, Marshal.GetLastWin32Error());\r\n            parentControl = new Control();\r\n            parentControl.CreateControl();\r\n           // [Below]  Assertion failure: Expected: DPI_AWARENESS_CONTEXT_SYSTEM_AWARE; Actual:   DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2\r\n            Assert.Equal(DpiAwarenessContext.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE,\r\n                CommonUnsafeNativeMethods.GetDpiAwarenessContextForWindow(parentControl.Handle));\r\n        }\r\n        finally\r\n        {\r\n            if (originalAwareness != null)\r\n            {\r\n                CommonUnsafeNativeMethods.SetThreadDpiAwarenessContext(originalAwareness.Value);\r\n            }\r\n        }\r\n        Assert.Throws<Win32Exception>(() => childControl.Parent = parentControl);\r\n        Assert.Null(childControl.Parent);\r\n    }\r\n    finally\r\n    {\r\n        childControl?.Dispose();\r\n        parentControl?.Dispose();\r\n    }\r\n}\r\n```\r\n\r\nThere are actually three problems I have came across during writing this unit test.\r\n\r\n* `DpiHelper.EnterDpiAwarenessScope` will do nothing if the DPI-awareness of current process is SYSTEM_UNAWARE or SYSTEM_AWARE. I'm not sure if that's by design.\r\n* `CommonUnsafeNativeMethods.GetDpiAwarenessContextForWindow` is returning `PER_MONITOR_AWARE_V2` for windows that is actually `PER_MONITOR_AWARE`. It seems that you will need to use [`AreDpiAwarenessContextsEqual`](https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-aredpiawarenesscontextsequal) and compare the target windows' DPI awareness context with `IntPtr(-3)` or `IntPtr(-4)` to determine whether it's `V2` or not.\r\n* That's the blocking issue for adding UT for #2262 : `Control.CreateHandle` is calling `Application.ParkHandle` without specifying the second parameter, leaving its `dpiAwarenessContext` set to `DPI_AWARENESS_CONTEXT_UNSPECIFIED`.\r\nhttps://github.com/dotnet/winforms/blob/2392f418ed9a87e121e92688cd77cba3f5e19e03/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L5022-L5027\r\nThis will cause the parked control having the same DPI awareness as the parking window for `DPI_AWARENESS_CONTEXT_UNSPECIFIED`, that is, actually the thread DPI awareness when creating the parking window.\r\nhttps://github.com/dotnet/winforms/blob/2392f418ed9a87e121e92688cd77cba3f5e19e03/src/System.Windows.Forms/src/System/Windows/Forms/Application.ThreadContext.cs#L285-L288\r\nIn this case, I think we should retrieve the DPI awareness context for the current thread, then pass it as the `dpiAwarenessContext` argument when calling `Application.ParkHandle`, so the created control will have the same DPI awareness context as the current thread.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/2279","RelatedDescription":"Open issue \"Control.CreateHandle should specify dpiAwarenessContext (of current thread) in Application.ParkHandle\" (#2279)"},{"Id":"517143498","IsPullRequest":true,"CreatedAt":"2019-11-04T13:13:24","Actor":"dotnet-maestro[bot]","Number":"2278","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191104.1\r\n- **Date Produced**: 11/4/2019 10:49 AM\r\n- **Commit**: 59b0c432ab3622cde2d2e1fe35150b7ff64e5f96\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19554.1\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.19553.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19553.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19553.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2278)","Url":"https://github.com/dotnet/winforms/pull/2278","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#2278)"},{"Id":"516987834","IsPullRequest":true,"CreatedAt":"2019-11-04T07:13:54","Actor":"gpetrou","Number":"2277","RawContent":null,"Title":"Move GetThemeSysBool and GetThemeSysInt to Interop UxTheme and add TM…","State":"open","Body":"…T enum\r\n## Proposed changes\r\n\r\n- Move GetThemeSysBool and GetThemeSysInt to Interop UxTheme.\r\n- Add TMT enum to UxTheme.\r\n- Remove VisualStyleSystemProperty class.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2277)","Url":"https://github.com/dotnet/winforms/pull/2277","RelatedDescription":"Open PR \"Move GetThemeSysBool and GetThemeSysInt to Interop UxTheme and add TM…\" (#2277)"},{"Id":"516982930","IsPullRequest":true,"CreatedAt":"2019-11-04T06:54:38","Actor":"gpetrou","Number":"2276","RawContent":null,"Title":"Move KillTimer and SetTimer methods to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Move KillTimer and SetTimer methods to Interop User32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2276)","Url":"https://github.com/dotnet/winforms/pull/2276","RelatedDescription":"Open PR \"Move KillTimer and SetTimer methods to Interop User32\" (#2276)"},{"Id":"516257569","IsPullRequest":true,"CreatedAt":"2019-11-03T23:22:42","Actor":"gpetrou","Number":"2267","RawContent":null,"Title":"Add GW enum and GetWindow methods to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add GW enum in User32.\r\n- Add GetWindow methods in User32.\r\n- Remove obsolete constants and methods from NativeMethods.cs and UnsafeNativeMethods.cs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2267)","Url":"https://github.com/dotnet/winforms/pull/2267","RelatedDescription":"Closed or merged PR \"Add GW enum and GetWindow methods to Interop User32\" (#2267)"},{"Id":"516557148","IsPullRequest":true,"CreatedAt":"2019-11-03T23:17:29","Actor":"gpetrou","Number":"2269","RawContent":null,"Title":"Remove unused DeviceContextLayout enum and LAYOUT constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused DeviceContextLayout enum.\r\n- Remove unused LAYOUT constants.\r\n- Looking at the codebase there are no native methods that use these constants such as SetProcessDefaultLayout or SetLayout.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2269)","Url":"https://github.com/dotnet/winforms/pull/2269","RelatedDescription":"Closed or merged PR \"Remove unused DeviceContextLayout enum and LAYOUT constants\" (#2269)"},{"Id":"516566738","IsPullRequest":true,"CreatedAt":"2019-11-03T23:16:29","Actor":"hughbe","Number":"2270","RawContent":null,"Title":"Don't recreate the handle twice in TabControl.Alignment setter","State":"closed","Body":"## Proposed Changes\r\n- The setter for `Multiline` calls `RecreateHandle`\r\n\r\n```cs\r\npublic bool Multiline\r\n{\r\n    get => GetState(State.Multiline);\r\n    set\r\n    {\r\n        if (Multiline != value)\r\n        {\r\n            SetState(State.Multiline, value);\r\n            if (Multiline == false && (_alignment == TabAlignment.Left || _alignment == TabAlignment.Right))\r\n            {\r\n                _alignment = TabAlignment.Top;\r\n            }\r\n\r\n            RecreateHandle();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut the setter for `Alignment` does this too\r\n```cs\r\n[\r\nSRCategory(nameof(SR.CatBehavior)),\r\nLocalizable(true),\r\nDefaultValue(TabAlignment.Top),\r\nRefreshProperties(RefreshProperties.All),\r\nSRDescription(nameof(SR.TabBaseAlignmentDescr))\r\n]\r\npublic TabAlignment Alignment\r\n{\r\n    get\r\n    {\r\n        return _alignment;\r\n    }\r\n\r\n    set\r\n    {\r\n        if (_alignment != value)\r\n        {\r\n            //valid values are 0x0 to 0x3\r\n            if (!ClientUtils.IsEnumValid(value, (int)value, (int)TabAlignment.Top, (int)TabAlignment.Right))\r\n            {\r\n                throw new InvalidEnumArgumentException(nameof(value), (int)value, typeof(TabAlignment));\r\n            }\r\n\r\n            _alignment = value;\r\n            if (_alignment == TabAlignment.Left || _alignment == TabAlignment.Right)\r\n            {\r\n                SetState(State.Multiline, true);\r\n            }\r\n\r\n            RecreateHandle();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAvoid recreating the handle twice\r\n\r\nFixes #2047\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2270)","Url":"https://github.com/dotnet/winforms/pull/2270","RelatedDescription":"Closed or merged PR \"Don't recreate the handle twice in TabControl.Alignment setter\" (#2270)"},{"Id":"516080318","IsPullRequest":true,"CreatedAt":"2019-11-03T21:45:15","Actor":"dotnet-maestro[bot]","Number":"2264","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191102.7\r\n- **Date Produced**: 11/3/2019 5:13 AM\r\n- **Commit**: c44971014fde97523f6511b4fadb8c1f2c105a44\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19552.7\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.19552.5 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19552.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19552.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2264)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2264","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#2264)"},{"Id":"516867801","IsPullRequest":false,"CreatedAt":"2019-11-03T18:18:16","Actor":"hughbe","Number":"2275","RawContent":null,"Title":"TabPageCollection.Clear forces Handle creation","State":"open","Body":"```cs\r\n        protected void RemoveAll()\r\n        {\r\n            Controls.Clear();\r\n\r\n            SendMessage(NativeMethods.TCM_DELETEALLITEMS, 0, 0);\r\n            _tabPages = null;\r\n            _tabPageCount = 0;\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/2275","RelatedDescription":"Open issue \"TabPageCollection.Clear forces Handle creation\" (#2275)"},{"Id":"516595041","IsPullRequest":true,"CreatedAt":"2019-11-03T13:58:27","Actor":"hughbe","Number":"2271","RawContent":null,"Title":"Remove dead code from Control.PerformLayout","State":"closed","Body":"## Proposed Changes\r\n- Remove `args != null` check\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2271)","Url":"https://github.com/dotnet/winforms/pull/2271","RelatedDescription":"Closed or merged PR \"Remove dead code from Control.PerformLayout\" (#2271)"},{"Id":"516071837","IsPullRequest":true,"CreatedAt":"2019-11-03T13:51:51","Actor":"dotnet-maestro[bot]","Number":"2263","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 12:43 PM\r\n- **Commit**: bfa46e9e624cc148bd5c6b7af63f52f6e1d48c8d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19552.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2263)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2263)"},{"Id":"516764329","IsPullRequest":true,"CreatedAt":"2019-11-03T06:17:53","Actor":"dotnet-maestro[bot]","Number":"2274","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.1.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.1.0-preview3.19531.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.1.0-preview3.19531.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2274)","Url":"https://github.com/dotnet/winforms/pull/2274","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#2274)"},{"Id":"516652867","IsPullRequest":true,"CreatedAt":"2019-11-02T16:46:57","Actor":"hughbe","Number":"2273","RawContent":null,"Title":"Add ControlCollection tests","State":"open","Body":"## Proposed Changes\r\n- Add `ControlCollection` tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2273)","Url":"https://github.com/dotnet/winforms/pull/2273","RelatedDescription":"Open PR \"Add ControlCollection tests\" (#2273)"},{"Id":"516631064","IsPullRequest":true,"CreatedAt":"2019-11-02T15:34:13","Actor":"hughbe","Number":"2272","RawContent":null,"Title":"Cleanup GetParent interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup GetParent interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2272)","Url":"https://github.com/dotnet/winforms/pull/2272","RelatedDescription":"Open PR \"Cleanup GetParent interop\" (#2272)"},{"Id":"516329021","IsPullRequest":true,"CreatedAt":"2019-11-01T20:26:01","Actor":"gpetrou","Number":"2268","RawContent":null,"Title":"Add TVHT enum in Interop ComCtl32 and remove corresponding constants …","State":"open","Body":"…from NativeMethods.cs\r\n\r\n## Proposed changes\r\n\r\n- Add TVHT enum.\r\n- Remove TVHT constants and replaces their usages with the above enum.\r\n- Update TV_HITTESTINFO definition.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2268)","Url":"https://github.com/dotnet/winforms/pull/2268","RelatedDescription":"Open PR \"Add TVHT enum in Interop ComCtl32 and remove corresponding constants …\" (#2268)"},{"Id":"516236000","IsPullRequest":true,"CreatedAt":"2019-11-01T17:04:47","Actor":"gpetrou","Number":"2266","RawContent":null,"Title":"Move KeyboardLayout methods to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Move KeyboardLayout methods to Interop User32 and update their usages.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2266)","Url":"https://github.com/dotnet/winforms/pull/2266","RelatedDescription":"Open PR \"Move KeyboardLayout methods to Interop User32\" (#2266)"},{"Id":"516135399","IsPullRequest":true,"CreatedAt":"2019-11-01T14:09:35","Actor":"M-Lipin","Number":"2265","RawContent":null,"Title":"Porting ToolStripCollectionEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1282 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Ported ToolStripCollectionEditor.\r\n- Moved majority of collection editors from Design.Editors to Design project due to referencing internal classes.\r\n- Moving resources Design.Editors to Design project.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users will be able to edit ToolStripItem collection via ToolStripCollectionEditor in .NET Core WinForms.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nUser can see only object collection editor when editing the list of ToolStripItems.\r\n\r\n### After\r\n\r\nUser can see ToolStripCollectionEditor when editing the list of ToolStripItems.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing (to be implemented);\r\n- UI Automation tests (to be implemented, run).\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\nNet Core version: 3.1.0-preview1.19458.7\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2265)","Url":"https://github.com/dotnet/winforms/pull/2265","RelatedDescription":"Open PR \"Porting ToolStripCollectionEditor\" (#2265)"},{"Id":"516066234","IsPullRequest":true,"CreatedAt":"2019-11-01T11:48:41","Actor":"chenxinyanc","Number":"2262","RawContent":null,"Title":"Check for the return value of native SetParent calls in Control class","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2163\r\n\r\n\r\n## Proposed changes\r\n* Check for the return value and GetLastError in `RecreateHandleCore` and `SetParentHandle` methods.\r\n* Did not add the UT for this yet, because when `Control.CreateHandle` calls `Application.ParkHandle`, it does not specify the DPI awareness (`DPI_AWARENESS_CONTEXT_UNSPECIFIED`), so `ParkHandle` will choose a parking window for `UNSPECIFIED` awareness context. When constructing the parking window for `UNSPECIFIED` context, the DPI awareness of current thread will be used (e.g. PerMonitorV2). This will causes the subsequently **parked** window uses the very same DPI awareness setting, regardless of their owning thread's current DPI awareness at the point of control instance / handle construction.\r\n    * I'm not sure whether it's by design or not, but perhaps we need to specify the DPI awareness explicitly when calling `ParkHandle` in `CreateHandle` method.\r\n    * Nevertheless, I've tested the behavior with https://github.com/chenxinyanc/WinFormSetParentTest and it throws `Win32Exception` accordingly.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2262)","Url":"https://github.com/dotnet/winforms/pull/2262","RelatedDescription":"Open PR \"Check for the return value of native SetParent calls in Control class\" (#2262)"},{"Id":"515539841","IsPullRequest":true,"CreatedAt":"2019-11-01T10:17:33","Actor":"hughbe","Number":"2259","RawContent":null,"Title":"Structify LOGPALETTE","State":"closed","Body":"## Proposed Changes\r\n- Structify LOGPALETTE\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2259)","Url":"https://github.com/dotnet/winforms/pull/2259","RelatedDescription":"Closed or merged PR \"Structify LOGPALETTE\" (#2259)"},{"Id":"515996710","IsPullRequest":true,"CreatedAt":"2019-11-01T09:15:04","Actor":"gpetrou","Number":"2261","RawContent":null,"Title":"[RFC] Consolidate PARAM methods","State":"open","Body":"##  Proposed changes\r\n\r\n- Consolidate PARAM methods\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2261)","Url":"https://github.com/dotnet/winforms/pull/2261","RelatedDescription":"Open PR \"[RFC] Consolidate PARAM methods\" (#2261)"},{"Id":"515840225","IsPullRequest":true,"CreatedAt":"2019-11-01T00:40:58","Actor":"chcosta","Number":"2260","RawContent":null,"Title":"Validate disable bootstrap changes","State":"closed","Body":"Validating https://github.com/dotnet/arcade/pull/4265, is non breaking for this repo, no intention of merging.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2260)","Url":"https://github.com/dotnet/winforms/pull/2260","RelatedDescription":"Closed or merged PR \"Validate disable bootstrap changes\" (#2260)"},{"Id":"515504999","IsPullRequest":true,"CreatedAt":"2019-10-31T15:03:59","Actor":"hughbe","Number":"2258","RawContent":null,"Title":"Structify TCITEM","State":"open","Body":"## Proposed Changes\r\n- Make blittable\r\n- Structify\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2258)","Url":"https://github.com/dotnet/winforms/pull/2258","RelatedDescription":"Open PR \"Structify TCITEM\" (#2258)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-05T05:30:57.8000969Z","RunDurationInMilliseconds":884}