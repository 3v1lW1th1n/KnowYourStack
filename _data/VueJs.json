{"Data":{"Vue-Issues":{"Issues":[{"Id":"370835759","IsPullRequest":false,"CreatedAt":"2018-10-16T23:10:47","Actor":"manniL","Number":"8961","RawContent":null,"Title":"vue-server-renderer: Allow camelCased SSR directives","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, SSR directives can be only passed in with 'kebab-case' keys. This isn't denoted anywhere (except in the tests, luckily!) and not \"intuitive\" as they can be provided as camelCased ones on the client as well.\r\n\r\nCan we introduce camelCased SSR directives?\r\nI'd be available to work on the impl.\r\n\r\n### What does the proposed API look like?\r\n```js\r\ndirectives: {\r\n  classPrefixer: (node, dir) => {/*...*/}\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8961","RelatedDescription":"Open issue \"vue-server-renderer: Allow camelCased SSR directives\" (#8961)"},{"Id":"370803546","IsPullRequest":true,"CreatedAt":"2018-10-16T21:17:22","Actor":"denisx","Number":"8960","RawContent":null,"Title":"Regexp: optimize & sort","State":"open","Body":"","Url":"https://github.com/vuejs/vue/pull/8960","RelatedDescription":"Open PR \"Regexp: optimize & sort\" (#8960)"},{"Id":"370687488","IsPullRequest":false,"CreatedAt":"2018-10-16T17:12:16","Actor":"destructive-dragon","Number":"8959","RawContent":null,"Title":"Remove element during preTransformNode","State":"closed","Body":"### What problem does this feature solve?\r\nWe have a Mobile build and a Web build, and we want to add a directive `mobile` or `web` to components/elements so that they only get included into the bundle if they are built with the respective flags / env.\r\n\r\nCurrently we are doing this via a vue-cli plugin which executes `preprocess` on the template (using a custom loader). We tried using `directives` and `modules` in `compilerOptions` instead, as this seemed safer and more idiomatic, however we were unable to remove elements using any of the callbacks.\r\n\r\n### What does the proposed API look like?\r\nWe tried returning `null` and `{}` and even `{ type: 3, text: \"\", isComment: true }` from `preTransformNode` (and `transformNode`), but it just resulted in various errors. We also tried changing `el.parent.children` which didn't yield any results.\r\n\r\nI think having the element just be removed when returning `null` from `preTransformNode` would be great, if that is possible.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8959","RelatedDescription":"Closed issue \"Remove element during preTransformNode\" (#8959)"},{"Id":"370664507","IsPullRequest":false,"CreatedAt":"2018-10-16T15:54:45","Actor":"JJJYY","Number":"8958","RawContent":null,"Title":"click() won't trigger that call in watch","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jesse_y/L9gjbcz7/39/](https://jsfiddle.net/jesse_y/L9gjbcz7/39/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. click `checkbox` won't show file window\r\n2. exec script `MessageChannel = {}` before import `vue` script, ***click `Run`***\r\n3. click `checkbox` show file window\r\n\r\n### What is expected?\r\nclick `checkbox` show file window\r\n\r\n### What is actually happening?\r\nclick `checkbox` won't show file window\r\n\r\n---\r\nI test in `Chrome v69` and `Safari v12`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8958","RelatedDescription":"Closed issue \"click() won't trigger that call in watch\" (#8958)"},{"Id":"370493056","IsPullRequest":false,"CreatedAt":"2018-10-16T08:21:29","Actor":"rainbowMorelhahahah","Number":"8957","RawContent":null,"Title":"报错信息 能否更新一下。。","State":"closed","Body":"使用React 和 ng 发现两句的 错误提示 都做的比较好\r\n但是 vue 的的 我完全不知道错在哪里。\r\n\r\n[Vue warn]: Property or method \"formInline\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\nfound in\r\n\r\n---> <HelloWorld> at src/components/HelloWorld.vue\r\n       <Home> at src/views/Home.vue\r\n         <ElMain>\r\n           <ElContainer>... (1 recursive calls)\r\n             <App> at src/App.vue\r\n               <Root>\r\nwarn @ vue.runtime.esm.js?2b0e:587\r\nwarnNonPresent @ vue.runtime.esm.js?2b0e:1872\r\nget @ vue.runtime.esm.js?2b0e:1914\r\nrender @ HelloWorld.vue?0c8a:440\r\nVue._render @ vue.runtime.esm.js?2b0e:4540\r\nupdateComponent @ vue.runtime.esm.js?2b0e:2784\r\nget @ vue.runtime.esm.js?2b0e:3138\r\nrun @ vue.runtime.esm.js?2b0e:3215\r\nflushSchedulerQueue @ vue.runtime.esm.js?2b0e:2977\r\n(anonymous) @ vue.runtime.esm.js?2b0e:1833\r\nflushCallbacks @ vue.runtime.esm.js?2b0e:1754\r\n\r\n\r\n\r\n如上所示 ","Url":"https://github.com/vuejs/vue/issues/8957","RelatedDescription":"Closed issue \"报错信息 能否更新一下。。\" (#8957)"},{"Id":"370285179","IsPullRequest":false,"CreatedAt":"2018-10-15T18:20:27","Actor":"maarteNNNN","Number":"8956","RawContent":null,"Title":"Uncaught TypeError: Object.entries is not a function on OSX","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://beautysalonfiore.be](https://beautysalonfiore.be)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI'm having this problem on OSX. On Windows, Android and Linux I don't encounter this problem. I have tried to rebuild it. Google it, found alot of non Vue related issues. It doesn't work on an iPad aswell. However on an iPhone it does. What's most likely this problem?\r\n\r\nThis project is build with vue-cli 3.0.5.\r\n\r\n### What is expected?\r\nThat the bundle to work on OSX\r\n\r\n### What is actually happening?\r\nI gives a TypeError: Object.entries is not a function on OSX\r\n\r\n---\r\nIt used to work fine. Until one build started to show errors on just Apple related products except the iPhone. I haven't found any issue related to this. I'm willing to share source code if necessary.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8956","RelatedDescription":"Closed issue \"Uncaught TypeError: Object.entries is not a function on OSX\" (#8956)"},{"Id":"370283503","IsPullRequest":false,"CreatedAt":"2018-10-15T18:15:01","Actor":"maarteNNNN","Number":"8955","RawContent":null,"Title":"Uncaught TypeError: Object.entries is not a function on OSX","State":"closed","Body":"[link](https://beautysalonfiore.be)\r\n\r\nI'm having this problem on OSX. On Windows, Android and Linux I don't encounter this problem. I have tried to rebuild it. Google it, found alot of non Vue related issues. It doesn't work on an iPad aswell. However on an iPhone it does. What's most likely this problem?\r\n\r\nThis project is build with vue-cli 3.0.5.\r\n","Url":"https://github.com/vuejs/vue/issues/8955","RelatedDescription":"Closed issue \"Uncaught TypeError: Object.entries is not a function on OSX\" (#8955)"},{"Id":"370068769","IsPullRequest":false,"CreatedAt":"2018-10-15T17:59:28","Actor":"kiwionly","Number":"8952","RawContent":null,"Title":"Show warning/error message when listen $on event, but not unregister/$off (native or vue) event  in beforeDestroy()","State":"closed","Body":"### What problem does this feature solve?\r\nDo checking if the component register (vue or native ) event in components, show warning if it is not unregister in beforeDestroy().\r\n\r\nThis will make components implements correctly.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n\tmounted() {\r\n\t\t\r\n\t\tthis.$root.$on('refresh', function() {\r\n\t\t\tthis.someMethod()\r\n\t\t});\r\n    }\r\n```\r\n// show in console\r\n\r\n warning: refresh event is not unregister in beforeDestroy()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8952","RelatedDescription":"Closed issue \"Show warning/error message when listen $on event, but not unregister/$off (native or vue) event  in beforeDestroy()\" (#8952)"},{"Id":"370245517","IsPullRequest":false,"CreatedAt":"2018-10-15T17:57:29","Actor":"MichaelJGW","Number":"8953","RawContent":null,"Title":"Knowing what a component emits at a glance","State":"closed","Body":"### What problem does this feature solve?\r\nWhen managing components it is important to have all the information you can interact with at a glance.\r\nIn general, a component has two primary interactions props it takes and events it emits.\r\n\r\nWe have the ability to know at a glance for Props as you can go to the props section of the component and you know with 100% certainty which props are available, the types of the props if they are required, and so on.\r\nWe do not have this same ease when it comes to what events a component can emit.\r\nWe have $emit for a component but this can be anywhere in the component and it is not a streamlined process. With this being the nature of $emits we lose the ability to know at a glance.\r\n\r\nIt would be nice to extend the component structure to include an emits section that if included Vue throws an error if an $emit event happens that has not been listed. This can also we extended to include types.\r\n \r\n\r\n### What does the proposed API look like?\r\n```\r\nVue.component('addOne',{\r\n  template: `<button v-on:click=\"add()\">Add One</button>`,\r\n  props: {\r\n    num: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  emits: {\r\n    result: {\r\n      type: Number\r\n    }\r\n  },\r\n  methods: {\r\n    add () {\r\n      this.$emit('result', this.num + 1)\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8953","RelatedDescription":"Closed issue \"Knowing what a component emits at a glance\" (#8953)"},{"Id":"370247391","IsPullRequest":false,"CreatedAt":"2018-10-15T17:55:07","Actor":"fjc0k","Number":"8954","RawContent":null,"Title":"Typescript: Property 'foo' does not exist on type 'Vue'.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://stackblitz.com/edit/typescript-bc9ywj](https://stackblitz.com/edit/typescript-bc9ywj)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open `index.ts`, you will see:\r\n\r\n![image](https://user-images.githubusercontent.com/13151189/46964731-6d010a00-d0db-11e8-92a3-4a0703ffa1a1.png)\r\n\r\n2. change `x: [String, Number, Array]` to `x: [String, Number]`, then errors disappear:\r\n\r\n![image](https://user-images.githubusercontent.com/13151189/46964828-b94c4a00-d0db-11e8-820a-85ff22ad39b3.png)\r\n\r\n\r\n### What is expected?\r\nno typing errors.\r\n\r\n### What is actually happening?\r\ntyping errors exist.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8954","RelatedDescription":"Closed issue \"Typescript: Property 'foo' does not exist on type 'Vue'.\" (#8954)"},{"Id":"370027203","IsPullRequest":true,"CreatedAt":"2018-10-15T09:09:47","Actor":"chiaweilee","Number":"8949","RawContent":null,"Title":"ignore: .idea","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\ngit ignore\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8949","RelatedDescription":"Closed or merged PR \"ignore: .idea\" (#8949)"},{"Id":"370064845","IsPullRequest":false,"CreatedAt":"2018-10-15T09:02:44","Actor":"kiwionly","Number":"8951","RawContent":null,"Title":"show warning when listen $on event, but not $off event (so and native event) on beforeDestroy()","State":"closed","Body":"Hi, \r\n\r\nJust wondering do vuejs had this checking or plan to implement checking for when register (vue or native ) event in components, show warning if not unregister in beforeDestroy().\r\n\r\nThis will make developer aware that something is not done right.\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8951","RelatedDescription":"Closed issue \"show warning when listen $on event, but not $off event (so and native event) on beforeDestroy()\" (#8951)"},{"Id":"370063225","IsPullRequest":false,"CreatedAt":"2018-10-15T08:58:34","Actor":"kissge","Number":"8950","RawContent":null,"Title":"Vue template removes whitespace immediately after <input>inside of a pre","State":"open","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://gist.github.com/kissge/b02de2b2aacb33c9645da2c5a89cb1ac](https://gist.github.com/kissge/b02de2b2aacb33c9645da2c5a89cb1ac)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Run a unit test\r\n\r\n### What is expected?\r\nnewline after &lt;input> is preserved\r\n\r\n### What is actually happening?\r\nnewline after &lt;input> is removed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8950","RelatedDescription":"Open issue \"Vue template removes whitespace immediately after <input>inside of a pre\" (#8950)"},{"Id":"370002480","IsPullRequest":true,"CreatedAt":"2018-10-15T05:18:58","Actor":"vikr01","Number":"8948","RawContent":null,"Title":"Upgraded to babel 7","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Feature\r\n- [x] Build-related changes\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n\r\n**Other information:**\r\n\r\n- Upgrades all `babel` dependencies to work with `babel` v7. [`babel-preset-flow-vue`](/yyx990803/babel-preset-flow-vue) is not compatible, so I've recreated it in the `.babelrc.js` directly.\r\n\r\n- Also changed the `jasmine.json` files to `jasmine.js` so that `require.resolve` can be used instead of assuming where `node_modules` are. With things like `plug'n'play` coming to yarn, this is a necessary change.","Url":"https://github.com/vuejs/vue/pull/8948","RelatedDescription":"Open PR \"Upgraded to babel 7\" (#8948)"},{"Id":"369966583","IsPullRequest":false,"CreatedAt":"2018-10-15T01:46:22","Actor":"sombra2eternity","Number":"8947","RawContent":null,"Title":"Animation in childs is broken on latest Chrome","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Sjeiti/sqyoxs8d/](https://jsfiddle.net/Sjeiti/sqyoxs8d/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe first browser is Chromium (69.0.3497.81 running on Ubuntu 16.04) but behave the same on Chrome (69.0.3497.100).\r\nThe latest browser where this works is Firefox (62.0.3)\r\n\r\nhttps://youtu.be/cWU5JFXhF8A\r\n\r\n### What is expected?\r\nThe 'world' word should turn red progressively\r\n\r\n### What is actually happening?\r\nThe 'world' word turns red without progression\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8947","RelatedDescription":"Closed issue \"Animation in childs is broken on latest Chrome\" (#8947)"},{"Id":"369932195","IsPullRequest":true,"CreatedAt":"2018-10-14T18:56:23","Actor":"thenickname","Number":"8946","RawContent":null,"Title":"Typings: Improve $scopedSlots type to prevent unchecked access to undefined","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nWhen working directly with render functions in TypeScript / tsx, currently the following code is unsafe and unchecked by the ts compiler:\r\n\r\n```ts\r\nthis.$sopedSlots.default() // default can be undefined\r\n```\r\n\r\nThe change in this PR makes TypeScript complain about the unsafe access accordingly and the code has to be expressed in a way that prevents calling an undefined function, e.g.:\r\n\r\n```ts\r\n( this.$scopedSlots.default || ( () => 'default value' ) )( props )\r\n```","Url":"https://github.com/vuejs/vue/pull/8946","RelatedDescription":"Open PR \"Typings: Improve $scopedSlots type to prevent unchecked access to undefined\" (#8946)"},{"Id":"369822232","IsPullRequest":true,"CreatedAt":"2018-10-14T10:26:10","Actor":"ktsn","Number":"8944","RawContent":null,"Title":"perf(deps): improve the order to teardown watcher from O(n*m) to O(n) (fix vuex#1383)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: performance improvement\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThis PR fixes vuejs/vuex#1383.\r\n\r\nSimplified reproduction / benchmark: https://github.com/ktsn/vue-deps-perf-demo\r\nThe demo will destroy 1000 components that has a computed property depends on an array with 1000 length. Then print its time.\r\n\r\nOn my machine, the result is like the following:\r\ncurrent: 3434ms\r\npatched: 224ms\r\n\r\nOn the current reactive system implementation, when a computed property depends on an array, its children object will also be registered to computed property's watcher as dependency.\r\n\r\nWhen the watcher is torndown, the watcher iterates its dependencies (size `n`). The dependencies remove the watcher from their watcher list (size `m`). So it will cost O(n*m).\r\n\r\nSo it would become slow if there are many computed properties and a large array.\r\n\r\nThis PR change the watcher list in `Dep` object to object map to make the order linear. The entire order of the watcher teardown will be O(n).\r\n\r\nThere may be more overhead on `delete` operator. I'm not sure how it affects actual application though.","Url":"https://github.com/vuejs/vue/pull/8944","RelatedDescription":"Closed or merged PR \"perf(deps): improve the order to teardown watcher from O(n*m) to O(n) (fix vuex#1383)\" (#8944)"},{"Id":"369869424","IsPullRequest":false,"CreatedAt":"2018-10-14T10:12:13","Actor":"yakovyarmo","Number":"8945","RawContent":null,"Title":"v-model doesn't work as expected with hebrew on mobile phone","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yakovyarmo/kw64ynt8/3/](https://jsfiddle.net/yakovyarmo/kw64ynt8/3/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nStart typing in the input using hebrew language on mobile device.\r\n\r\n\r\n### What is expected?\r\nThe data should be update on every input.\r\n\r\n### What is actually happening?\r\nThe data is updated some of the time and cause inconsistency.\r\n\r\n---\r\nI suspect that the issue occur becuse for some reason the browser treat hebrew with IME.\r\nThere has to be a way around it. maybe by a modifier that will trigger the update for native input.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8945","RelatedDescription":"Closed issue \"v-model doesn't work as expected with hebrew on mobile phone\" (#8945)"},{"Id":"369779425","IsPullRequest":false,"CreatedAt":"2018-10-13T08:06:53","Actor":"drdevelop","Number":"8943","RawContent":null,"Title":"If I want to modify the data value of a page in a console, what should I do?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8943","RelatedDescription":"Closed issue \"If I want to modify the data value of a page in a console, what should I do?\" (#8943)"},{"Id":"369779404","IsPullRequest":false,"CreatedAt":"2018-10-13T08:06:31","Actor":"drdevelop","Number":"8942","RawContent":null,"Title":"modify the data value of a page in a console","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8942","RelatedDescription":"Closed issue \"modify the data value of a page in a console\" (#8942)"},{"Id":"369750309","IsPullRequest":false,"CreatedAt":"2018-10-13T00:42:59","Actor":"justinhelmer","Number":"8941","RawContent":null,"Title":"Bind vm instance to local async component registration","State":"open","Body":"### What problem does this feature solve?\r\nI work for a large firm with many developers, and we are defining a strategy for reusability while still providing the capability to provide conditional behavior. In other words, the design needs the ability to:\r\n\r\n1. provide behavioral differences for (grand)children\r\n2. code-split these differences for the purpose of scaling\r\n\r\n**EDIT:** See [this comment](https://github.com/vuejs/vue/issues/8941#issuecomment-429497722) for a valid use-case.\r\n\r\nThis can easily be solved with vue `mixins` (or `extends`) and `props` (or `inject`) for a single level hierarchy, but things get complicated when trying to create multiple levels of nesting with configuration injected from a grand ancestor, when accounting for the need to code-split.\r\n\r\n`v-if` is a nice pattern, but it requires the child component to still be loaded even if the condition will always be false. This is a non-option for us, because of the performance implications at-scale loading code that is never used. Therefore we have a need to conditionally split child components into separate bundles based on instance properties.\r\n\r\nVue provides the ability to allow behavioral differences with `mixins`/`extends`/`props`/`inject`, and also the ability to provide promises (and therefore create split points) for local component registration definitions. We have tried coming at this many different angles, but there is no apparent way to do **both** (without losing server-side rendering). More information can be found by reading the section on [async components](https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components). \r\n\r\n**EDIT:** It's also worth mentioning that SEO is a factor. Our application is fully universal (isomorphic) for the purpose of SEO and TTI. We do selective client lazy-loading where SEO is not important, but the typical use-case for code splitting the javascript is for the purpose of performance at-scale.\r\n\r\n**EDIT:** There _is_ a way to do both. Thanks to the [solution](https://github.com/vuejs/vue/issues/8941#issuecomment-429670524) provided by @sirlancelot.\r\n\r\nThe pattern that we came up with to solve this business need looks like this:\r\n\r\n```html\r\n<!-- @file feature.vue, n-th level from parent -->\r\n<template>\r\n  <div id=\"feature\">\r\n    <child/>\r\n    <div>some other feature html</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  inject: ['flavorOfChild'],\r\n  components: {\r\n    child() {\r\n      if (this.flavorOfChild === 'flavor 2') {\r\n        return import('./flavor-2');\r\n      }\r\n\r\n      return import('./flavor-1');\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nThe issue is, the vm is not actually bound to the component function, and therefore `this` is undefined. We can, however, take advantage of the component instance lifecycle to create a reference to the instance:\r\n\r\n```js\r\nlet _this;\r\nexport default {\r\n  inject: ['flavorOfChild'],\r\n  created() {\r\n    _this = this;\r\n  },\r\n  components: {\r\n    child() {\r\n      if (_this.flavorOfChild === 'flavor 2') {\r\n        return import('./flavor-2');\r\n      }\r\n\r\n      return import('./flavor-1');\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAlthough the above solution “works”, it has the following limitations:\r\n\r\n- It’s a bit messy to manually manage `_this`\r\n- `created()` would otherwise not be needed.\r\n- this opens up the opportunity for possible unexpected behavior for components that may be instantiated multiple times if the instances are created in parallel with different values.\r\n- async component registration is not documented as part of the lifecycle, so there is no confidence that this lifecycle will remain consistent between versions (and thus `_this` may not be defined if Vue changes source such that `created()` happens after async components are resolved)\r\n\r\nThis is the solution we will be going with despite the limitations. There is also perhaps another way to conditionally lazy load child components that we have not considered. We did, however, try to come up with every possible design to accomplish our overall goal and could not.\r\n\r\n**EDIT:** There _is_ another way. Thanks to the [solution](https://github.com/vuejs/vue/issues/8941#issuecomment-429670524) provided by @sirlancelot.\r\n\r\n**EDIT:** I have created a post to the [vue forum](https://forum.vuejs.org/t/code-split-components-based-on-instance-properties/45822) to explore different design options (the need for this github issue assumes there is no other possible design that will solve our business need).\r\n\r\n### What does the proposed API look like?\r\n```js\r\nexport default {\r\n  components: {\r\n    child() {\r\n      if (this.someCondition) {\r\n        return import('./a');\r\n      }\r\n\r\n      return import('./b');\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**EDIT:** [Here](https://jsfiddle.net/justinhelmer/wc1gd4L9/) you can see it demonstrated in a simplified form.\r\n\r\n**EDIT:** [Here](https://jsfiddle.net/k1v7cLbj/7/) you can see it demonstrated with vanilla js, agnostic of vue.\r\n\r\nThis seems like a simple change given the fact that the instance exists when these component functions are executed, and it is already possible to manage the binding manually like in the earlier examples.\r\n\r\nI'd happily submit a PR but I could not find the right spot in the code to make the change.\r\n\r\n----\r\n\r\n**EDIT:** Now that a [solution](https://github.com/vuejs/vue/issues/8941#issuecomment-429670524)  to my [use-case](https://github.com/vuejs/vue/issues/8941#issuecomment-429497722) has been provided (by @sirlancelot), this issue remains open for two reasons:\r\n\r\n1) As @sirlancelot articulates [here](https://github.com/vuejs/vue/issues/8941#issuecomment-429670524), the apparent difference between `<component :is>` and local `component` registration is the caching. `computed` properties are expected to change, where the component definitions will be cached forever. There _may_ be some benefit since in this [use-case](https://github.com/vuejs/vue/issues/8941#issuecomment-429497722), the values are \"configuration\" and will never change\r\n\r\n2) There may be some other use-case that could benefit from design opportunities opened up by the vm being bound to the local async component registration promise function \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8941","RelatedDescription":"Open issue \"Bind vm instance to local async component registration\" (#8941)"},{"Id":"369454333","IsPullRequest":false,"CreatedAt":"2018-10-12T11:15:40","Actor":"dharmatv","Number":"8940","RawContent":null,"Title":"Scoped CSS not applied for programmatically append styles in head tag","State":"closed","Body":"### Version\r\n2.2.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/vb18hcnd/](https://jsfiddle.net/vb18hcnd/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<script>\r\nexport default{\r\ncreated(){\r\n var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        \r\n        style.id = name;\r\n        style.setAttribute(\"scoped\", \"\");\r\n        style.innerHTML = content;   //add styles for dynamically\r\n        document.getElementsByTagName('head')[0].appendChild(style);\r\n}\r\n</script>\r\n\r\n### What is expected?\r\nsolution for scoped is applied for styles\r\n\r\n### What is actually happening?\r\nscoped is not working for inner styles\r\n\r\n---\r\nI am trying to add /deep/ in my dynamically adding styles but it's not updated\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8940","RelatedDescription":"Closed issue \"Scoped CSS not applied for programmatically append styles in head tag\" (#8940)"},{"Id":"369448969","IsPullRequest":false,"CreatedAt":"2018-10-12T11:13:53","Actor":"zengyufang","Number":"8938","RawContent":null,"Title":"Vue is not compatible with ios8.x","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[http://www.ji-cn.com/longshan/t/index.html](http://www.ji-cn.com/longshan/t/index.html)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOur project use vue in this way: <script src=\"/js/vue.min.js\"></script>,but our project not open in ios version with 8.x,\r\nthen I have a try to use babel in this way: <script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>,\r\nand declare that the type of script is text/babel,But the problem has not been solved\r\n\r\n### What is expected?\r\ncan you help me?thanks!\r\n\r\n### What is actually happening?\r\nthe problem has not been solved\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8938","RelatedDescription":"Closed issue \"Vue is not compatible with ios8.x\" (#8938)"},{"Id":"369450946","IsPullRequest":false,"CreatedAt":"2018-10-12T08:32:10","Actor":"dharmatv","Number":"8939","RawContent":null,"Title":"Scoped CSS not applied for programmatically append styles in head tag","State":"closed","Body":"<script>\r\nexport default{\r\ncreated(){\r\n var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        \r\n        style.id = name;\r\n        style.setAttribute(\"scoped\", \"\");\r\n        style.innerHTML = content;   //add styles for dynamically\r\n        document.getElementsByTagName('head')[0].appendChild(style);\r\n}\r\n</script>\r\n\r\n\r\nI am trying to add /deep/ in my dynamically adding styles but it's not updated with inner styles in a page, can please help me, if any solution is possible\r\n\r\nThanks & Regards   ","Url":"https://github.com/vuejs/vue/issues/8939","RelatedDescription":"Closed issue \"Scoped CSS not applied for programmatically append styles in head tag\" (#8939)"},{"Id":"369081569","IsPullRequest":false,"CreatedAt":"2018-10-11T16:44:38","Actor":"chanwit","Number":"8935","RawContent":null,"Title":"Proposal - Vuego: a WASM-based Vue.js wrapper written in Go","State":"closed","Body":"### What problem does this feature solve?\r\nThis is a very unusual feature request for Vue.js.\r\n\r\nI propose a sub-project for Vue.js, called Vuego. Vuego is a WASM-based Vue.js wrapper written in Go.\r\nIt uses the Go 1.11  Web Assembly compiler to compile the wrapper.\r\n\r\nThe immediate benefit of Vuego is that it allows Vue.js users to deliver their Web applications in binary (Web Assembly) forms. So your companies would have a better way to protect IPs for Vue.js applications.\r\n\r\nThe project is just started and I would love to see if Vue.js maintainers and users want to have a look. In eventually, if you're OK with the concept, the Vuego project will be donated as a subproject of Vue.js.\r\n\r\nhttps://github.com/chanwit/vuego\r\n\r\n### What does the proposed API look like?\r\nSomething like this:\r\n```\r\n\tNew(&Vue{\r\n\t\tEl: \"#app\",\r\n\t\tData: &Data{\r\n\t\t\tItems: []*Item {\r\n\t\t\t\t{Text: \"Bananas\", Checked: true},\r\n\t\t\t\t{Text: \"Apples\", Checked: false},\r\n\t\t\t},\r\n\t\t\tTitle: \"Vuego Framework 0.1\",\r\n\t\t\tNewItem: \"\",\r\n\t\t},\r\n\t\tMethods: &Methods{\r\n\t\t\t\"addItem\": func(this interface{}) {\r\n\t\t\t\tthis.(*Data).AddItem()\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8935","RelatedDescription":"Closed issue \"Proposal - Vuego: a WASM-based Vue.js wrapper written in Go\" (#8935)"},{"Id":"369172188","IsPullRequest":false,"CreatedAt":"2018-10-11T16:02:00","Actor":"jonaslm","Number":"8937","RawContent":null,"Title":"Ability to pass event listeners when creating components with the \"new\" keyword, like propsData does for props","State":"closed","Body":"### What problem does this feature solve?\r\nVue already has the ability to pass props to components when creating them with the `new` keyword, using `propsData`. As far as I can tell it's not possible to do this with events, however.\r\n\r\nEvents *can* be added to the component, but only after creation. This means that any events that are emitted in the component `created` hook or on immediate watchers cannot be caught when creating components with the `new` keyword.\r\n\r\n### What does the proposed API look like?\r\nSomething akin to `propsData` for props, but instead for event listeners:\r\n```\r\nnew MyComponent({\r\n  propsData: {\r\n    myProp: this.myProp,\r\n  },\r\n  listeners: {\r\n    myEvent: this.onMyEvent,\r\n  }\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8937","RelatedDescription":"Closed issue \"Ability to pass event listeners when creating components with the \"new\" keyword, like propsData does for props\" (#8937)"},{"Id":"369096470","IsPullRequest":false,"CreatedAt":"2018-10-11T12:55:24","Actor":"MaximilianFranke","Number":"8936","RawContent":null,"Title":"Scoped Slot delegate to child component. Slot is in child component always set, also if it not set","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/j1451yzrm5](https://codesandbox.io/s/j1451yzrm5)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen sample\r\n\r\n### What is expected?\r\nThe output of the second sample should be:\r\n....\r\nChild component...has scopedslot: false\r\n....\r\n\r\n### What is actually happening?\r\nThe output of the second sample is:\r\n....\r\nChild component...has scopedslot: true \r\n....\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8936","RelatedDescription":"Closed issue \"Scoped Slot delegate to child component. Slot is in child component always set, also if it not set\" (#8936)"},{"Id":"368869550","IsPullRequest":false,"CreatedAt":"2018-10-10T21:49:14","Actor":"BryceBarbara","Number":"8926","RawContent":null,"Title":"Child transitions are triggered when the parent element is hidden","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/BryceBarbara/kv7espnq/](https://jsfiddle.net/BryceBarbara/kv7espnq/)\r\n\r\n### Steps to reproduce\r\n1. Click the \"Toggle Screen\" button.\r\n2. See that the first screen's content is faded out while the second screen's content is already visible.\r\n\r\n### What is expected?\r\nI would expect the transition to not trigger due to the fact that the parent has been hidden and does not have a transition on it.\r\n\r\n### What is actually happening?\r\nThe child element on the first screen is faded out after the second screen's content is already visible.\r\n\r\n---\r\nI assume this is some sort of element re-use situation because adding a key to either the first or second screen elements fixes it. I'm reporting this mainly to call attention to something that doesn't _seem_ intentional and that has very little information on it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8926","RelatedDescription":"Open issue \"Child transitions are triggered when the parent element is hidden\" (#8926)"},{"Id":"368839791","IsPullRequest":true,"CreatedAt":"2018-10-10T20:30:15","Actor":"derek-li","Number":"8925","RawContent":null,"Title":"fix #8862: cannot watch unicode properties like 'a.中文'","State":"open","Body":"Hi all at Vue!\r\n\r\nThis pull request resolves the issue regarding watchers not watching unicode properties like 'a.中文'.\r\n\r\nMy method for resolving this case is to throw a warning when non-alphanumeric, $, or _ characters are detected. My reasoning behind throwing a warning instead of supporting special characters is that I think  supporting special characters would promote poor naming habits that could only make code more difficult to read and understand.\r\n\r\nI'm pretty new to open source so any feedback would be awesome and please let me know if you'd like to see any changes or improvements!\r\n\r\nLink to issue: https://github.com/vuejs/vue/issues/8862\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)","Url":"https://github.com/vuejs/vue/pull/8925","RelatedDescription":"Open PR \"fix #8862: cannot watch unicode properties like 'a.中文'\" (#8925)"},{"Id":"368801247","IsPullRequest":false,"CreatedAt":"2018-10-10T19:07:16","Actor":"OrbanMia","Number":"8924","RawContent":null,"Title":"setting object1 from another object (object2,)  object1 overwrites the original one (object2) when object1 is modified","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/761079/](https://jsfiddle.net/50wL7mdz/761079/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake two variables with the same keys, call them obejct1 and object2.\r\nIf I write object1 = object2 anywhere in my code, after modifying object1's any values, objec2's value will be overwritten.\r\nBut if I write object1.key1 = objec2.key1 and object1.key2 = object2.key2 then I can modify anything in object1, object2 will not change.\r\n\r\n### What is expected?\r\nmodifying object1 won't modify object2\r\n\r\n### What is actually happening?\r\nmodifying object1 modifies object2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8924","RelatedDescription":"Closed issue \"setting object1 from another object (object2,)  object1 overwrites the original one (object2) when object1 is modified\" (#8924)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"370427498","IsPullRequest":false,"CreatedAt":"2018-10-16T03:43:42","Actor":"OngBona","Number":"2433","RawContent":null,"Title":"How to get value id in form itemUpdate ?","State":"closed","Body":"Hello every one.\r\nI have question .\r\n\r\n```\r\n btnEdit(id) {\r\n        this.$router.push({name:'itemUpdate'},{params:id})\r\n        },\r\n```\r\nHow to get value id in form itemUpdate ?\r\nHelp me please .\r\nI'm first time.\r\nthank you all brothers and sis.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2433","RelatedDescription":"Closed issue \"How to get value id in form itemUpdate ?\" (#2433)"},{"Id":"367622274","IsPullRequest":true,"CreatedAt":"2018-10-15T18:17:20","Actor":"chiaweilee","Number":"2417","RawContent":null,"Title":"[vue-router] must call Vue.use(VueRouter) before creating a router","State":"closed","Body":"Assert warning if forget to call Vue.use(VueRouter) before creating.","Url":"https://github.com/vuejs/vue-router/pull/2417","RelatedDescription":"Closed or merged PR \"[vue-router] must call Vue.use(VueRouter) before creating a router\" (#2417)"},{"Id":"370114374","IsPullRequest":false,"CreatedAt":"2018-10-15T18:15:56","Actor":"kondrashkin465","Number":"2432","RawContent":null,"Title":"How to add ''/' in the end to link 'foo/' instead  'foo'","State":"closed","Body":"### What problem does this feature solve?\r\nI need add \"/\" to links in my project. I can change path in router setting on \"path//\" but i using nuxt , where routing  the generating . How I can settings that?\r\n\r\n### What does the proposed API look like?\r\nadd settings which will be add to path \"/\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2432","RelatedDescription":"Closed issue \"How to add ''/' in the end to link 'foo/' instead  'foo'\" (#2432)"},{"Id":"370030982","IsPullRequest":false,"CreatedAt":"2018-10-15T07:24:12","Actor":"AbdallahSabri","Number":"2431","RawContent":null,"Title":"How to create an Arabic url?","State":"closed","Body":"I build a working project with vue router, In local server I have a url like `http://localhost:3000/listings`\r\n\r\nI want to change it like this  `http://localhost:3000/معالم`\r\n\r\nI changed the path in vue router file, after that I get to `404 not found ` page.\r\n\r\nWhat should I do to display URLs in Arabic language?","Url":"https://github.com/vuejs/vue-router/issues/2431","RelatedDescription":"Closed issue \"How to create an Arabic url?\" (#2431)"},{"Id":"369817614","IsPullRequest":false,"CreatedAt":"2018-10-13T17:27:30","Actor":"trandaison","Number":"2430","RawContent":null,"Title":"Is there any way to force navigation when clicking on a router-link even if the route doesn't change?","State":"closed","Body":"### What problem does this feature solve?\r\nReload current page's state or refresh the page.\r\n\r\nFor example, I have a `<HeaderBar>` which contains a `Home` button, just like the Facebook one.\r\nIf I'm in another page (rather than Home), when I hit this button, it will navigate to Home. But when I'm in Home page, hit this button it does nothing.\r\n\r\nIt's expected to reload the page, and scroll to the top, right?\r\n\r\nPlease don't tell me to write out an action to refresh the state and scroll to top. This header bar is a shared component, and the Home button can be hit at any where.\r\n\r\n### What does the proposed API look like?\r\nSome thing like \r\n```vue\r\n<router-link :to=\"{ name: 'Home', force: true }\">Home</router-link>\r\n```\r\nor\r\n```js\r\nthis.$router.replace({ name: 'Home', force: true });\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2430","RelatedDescription":"Closed issue \"Is there any way to force navigation when clicking on a router-link even if the route doesn't change?\" (#2430)"},{"Id":"369784965","IsPullRequest":false,"CreatedAt":"2018-10-13T09:27:42","Actor":"xiaojinping","Number":"2425","RawContent":null,"Title":"通过router.push()传入了一个包含path 与 name的对象后，router.matched是一个空数组。","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n\r\n-->\r\n通过router.push()传入了一个包含path 与 name的对象后，router.matched是一个空数组。\r\n![image](https://user-images.githubusercontent.com/29969183/46903788-a8011300-cf0c-11e8-8ebf-b270a4c2c135.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2425","RelatedDescription":"Closed issue \"通过router.push()传入了一个包含path 与 name的对象后，router.matched是一个空数组。\" (#2425)"},{"Id":"369750343","IsPullRequest":false,"CreatedAt":"2018-10-13T00:43:19","Actor":"lycHub","Number":"2424","RawContent":null,"Title":"hi ！Why use beforeRouteEnter to get data and enter pages will be slow.","State":"closed","Body":"Is this a normal phenomenon?\r\nIs page data acquisition recommended in beforeRouteEnter?\r\nthanks for your answer.","Url":"https://github.com/vuejs/vue-router/issues/2424","RelatedDescription":"Closed issue \"hi ！Why use beforeRouteEnter to get data and enter pages will be slow.\" (#2424)"},{"Id":"369265311","IsPullRequest":true,"CreatedAt":"2018-10-12T18:14:08","Actor":"dword-design","Number":"2423","RawContent":null,"Title":" Fix dates inside query objects being converted to empty objects while cloning","State":"closed","Body":"It happens that you want to add a Date as a query parameter. However, when creating the route, the query object is cloned. The clone function does not support dates since it converts dates to objects. This fix clones the Date in a separate conditional branch.","Url":"https://github.com/vuejs/vue-router/pull/2423","RelatedDescription":"Closed or merged PR \" Fix dates inside query objects being converted to empty objects while cloning\" (#2423)"},{"Id":"368478580","IsPullRequest":true,"CreatedAt":"2018-10-11T13:46:48","Actor":"ataylor32","Number":"2419","RawContent":null,"Title":"docs: improve \"Essentials > HTML5 History Mode > Caveat\" (#2418)","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2419","RelatedDescription":"Closed or merged PR \"docs: improve \"Essentials > HTML5 History Mode > Caveat\" (#2418)\" (#2419)"},{"Id":"368679977","IsPullRequest":true,"CreatedAt":"2018-10-10T17:34:36","Actor":"MatthewSaintBull","Number":"2422","RawContent":null,"Title":"[ITALIAN] Translated README in Italian","State":"closed","Body":"Translated readme file in italian. \r\nTrying to translate all the docs files\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2422","RelatedDescription":"Closed or merged PR \"[ITALIAN] Translated README in Italian\" (#2422)"},{"Id":"368574842","IsPullRequest":false,"CreatedAt":"2018-10-10T11:16:36","Actor":"hushenao","Number":"2421","RawContent":null,"Title":"使用addrouters动态添加路由，无法懒加载","State":"closed","Body":"### What problem does this feature solve?\r\n使用addrouters动态添加路由的时候，在添加路由的时候会把所有的路由信息都加载，导致加载慢，有没有方法可以使用懒加载的方式加载动态路由\r\n\r\n### What does the proposed API look like?\r\n最好是可以直接通过webpack或者router配置\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2421","RelatedDescription":"Closed issue \"使用addrouters动态添加路由，无法懒加载\" (#2421)"},{"Id":"368498861","IsPullRequest":false,"CreatedAt":"2018-10-10T05:23:23","Actor":"Yolenna","Number":"2420","RawContent":null,"Title":"'this.$router.push' dosen't work in .net application but it is working in browser with the same code","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI want to use 'this.$router.push'  go to the path '/question/correct', \r\n`this.$router.push({path: '/question/correct', query:{id: '001'}})`\r\njust like that code\r\nThen I am watching  router in the template '/question/correct.vue' \r\n`beforeRouteEnter(to, from, next) {\r\n            alert(to.path)\r\n            next()\r\n        }`\r\nIt dosen't alert in .net application but had alert in browser. why? \r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2420","RelatedDescription":"Closed issue \"'this.$router.push' dosen't work in .net application but it is working in browser with the same code\" (#2420)"},{"Id":"368014841","IsPullRequest":false,"CreatedAt":"2018-10-09T07:44:22","Actor":"ataylor32","Number":"2418","RawContent":null,"Title":"[Docs] HTML5 History Mode Caveat Clarification","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/history-mode.html#caveat](https://router.vuejs.org/guide/essentials/history-mode.html#caveat)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe documentation correctly states that using history mode and configuring the server with a catch-all fallback route has the caveat that the server will no longer report 404 errors. It says \"To get around the issue, you should implement a catch-all route within your Vue app to show a 404 page\". In my opinion, that wording implies that implementing a catch-all route within Vue completely fixes the problem. However, with that approach, if a user goes to an invalid URL, the server will respond with a status code of 200 even though the URL is invalid. On some sites (especially dynamic ones), there is a good chance that a URL that is valid today could be invalid tomorrow. Maybe some search engines are smart enough to recognize that it's a \"Page Not Found\" page and treat it as such rather than a valid URL, but I'm guessing that not all search engines are that smart. I think it's important for developers to be aware of this, so I think it would be a good addition to the \"Essentials > HTML5 History Mode >  Caveat\" documentation.\r\n\r\n### What is expected?\r\nThe documentation should mention that the server will respond with a status code of 200 for invalid URLs.\r\n\r\n### What is actually happening?\r\nThe documentation does not mention this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2418","RelatedDescription":"Closed issue \"[Docs] HTML5 History Mode Caveat Clarification\" (#2418)"},{"Id":"365594628","IsPullRequest":true,"CreatedAt":"2018-10-07T18:05:58","Actor":"Slashgear","Number":"2411","RawContent":null,"Title":"docs(vuepress): move fr gitbook doc to vuepress","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThe french doc translation was hidden in the previous gitbook configuration.\r\nThis heavy PR moves all the files to the vuepress config.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vue-router/pull/2411","RelatedDescription":"Closed or merged PR \"docs(vuepress): move fr gitbook doc to vuepress\" (#2411)"},{"Id":"367376297","IsPullRequest":false,"CreatedAt":"2018-10-06T11:29:53","Actor":"wcjr","Number":"2416","RawContent":null,"Title":"Give the Router plugin a config option","State":"closed","Body":"### What problem does this feature solve?\r\nRight now we are required to send in a \"configured router\" to the instantiation options of the Vue instance, example:\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport router from './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n**AND**\r\n\r\nwe are also required to \"`use`\" the plugin, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router);\r\n\r\nconst configuredRouter = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n\r\nexport default configuredRouter;\r\n```\r\n\r\nThis feels a little redundant to me.\r\n\r\n\r\n### What does the proposed API look like?\r\nI'm requesting we be able to configure the Router at time of plugin installation, i.e., `Vue.use(Router, options)`, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router, {\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nso the `main.js` could look like this:\r\n```\r\nimport Vue from 'vue';\r\nimport './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n\r\nDevelopers could save a step in bootstrapping if this were available and I believe it could be done in a backward compatible way.  Vuetify does it this way and it seems like a cleaner approach to me.\r\n\r\nThanks for consideration.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2416","RelatedDescription":"Closed issue \"Give the Router plugin a config option\" (#2416)"},{"Id":"366977430","IsPullRequest":true,"CreatedAt":"2018-10-05T10:42:48","Actor":"HusamIbrahim","Number":"2415","RawContent":null,"Title":"[docs] Fix typo in redirect-and-alias.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2415","RelatedDescription":"Closed or merged PR \"[docs] Fix typo in redirect-and-alias.md\" (#2415)"},{"Id":"366238028","IsPullRequest":false,"CreatedAt":"2018-10-03T11:22:34","Actor":"tomerBluevine","Number":"2414","RawContent":null,"Title":"Param not present when pushing the same route name with params","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/](https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a route definition for /user\r\n2. Push user to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\n### What is expected?\r\nThe route params will change to {id: 'foo'}\r\n\r\n### What is actually happening?\r\nThe route params is an empty object.\r\n\r\n---\r\nIf you try to:\r\n1. Push user2 to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\nIt works!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2414","RelatedDescription":"Closed issue \"Param not present when pushing the same route name with params\" (#2414)"},{"Id":"366160068","IsPullRequest":false,"CreatedAt":"2018-10-03T06:14:06","Actor":"graham-sportsmgmt","Number":"2413","RawContent":null,"Title":"[Docs] Clearly show how to keep router reference after ajax callbacks","State":"closed","Body":"### What problem does this feature solve?\r\nIt is unclear how to maintain a reference to the router once \"this\" changes inside a callback (such as an ajax request)\r\n\r\n### What does the proposed API look like?\r\nPlease change the \"Programmatic Navigation\" documentation to show how to declare a variable outside of the callbacks that keep a reference to the router.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2413","RelatedDescription":"Closed issue \"[Docs] Clearly show how to keep router reference after ajax callbacks\" (#2413)"},{"Id":"365619891","IsPullRequest":false,"CreatedAt":"2018-10-01T21:07:26","Actor":"sarmanulco","Number":"2412","RawContent":null,"Title":"Vue router opened with nodejs outpus me an error on router.push","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c](https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a project like in the package json in the gist on the link I have written and run it with nodejs and not in the browser\r\n\r\n### What is expected?\r\nIn the output should appear:\r\n```\r\n<div>\r\n   <h1>Hola vuex</h1>\r\n   <h1>Foo</h1>\r\n</div>\r\n```\r\n\r\n### What is actually happening?\r\nOutputs the error addressed in the gist github\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2412","RelatedDescription":"Closed issue \"Vue router opened with nodejs outpus me an error on router.push\" (#2412)"},{"Id":"364750282","IsPullRequest":false,"CreatedAt":"2018-09-28T05:52:56","Actor":"jamesjianpeng","Number":"2410","RawContent":null,"Title":"TS2339: Property 'afterEach' does not exist on type 'object'.","State":"closed","Body":" error info:\r\n```\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(6,12)\r\n      TS2339: Property 'beforeEach' does not exist on type 'object'.\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(10,12)\r\n      TS2339: Property 'afterEach' does not exist on type 'object'.\r\n``` \r\n\r\n\r\n- package.json\r\n  ```json\r\n     \"@babel/core\": \"^7.1.0\",\r\n    \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\r\n    \"@babel/preset-env\": \"^7.1.0\",\r\n    \"babel-loader\": \"^8.0.2\",\r\n    \"clean-webpack-plugin\": \"^0.1.19\",\r\n    \"commitizen\": \"^2.10.1\",\r\n    \"css-loader\": \"^1.0.0\",\r\n    \"cz-conventional-changelog\": \"^2.1.0\",\r\n    \"html-webpack-plugin\": \"^3.2.0\",\r\n    \"node-sass\": \"^4.9.3\",\r\n    \"sass-loader\": \"^7.1.0\",\r\n    \"ts-loader\": \"^5.2.1\",\r\n    \"typescript\": \"^3.0.3\",\r\n    \"vue\": \"^2.5.17\",\r\n    \"vue-loader\": \"^15.4.2\",\r\n    \"vue-router\": \"^3.0.1\",\r\n    \"vue-style-loader\": \"^4.1.2\",\r\n    \"vue-template-compiler\": \"^2.5.17\",\r\n    \"webpack\": \"^4.20.2\",\r\n    \"webpack-cli\": \"^3.1.1\",\r\n    \"webpack-dev-server\": \"^3.1.9\",\r\n    \"webpack-merge\": \"^4.1.4\"\r\n  ``\r\n\r\n- webpack.ts.vue.conf.js\r\n```js\r\n/**\r\n * @file 只构建 TypeScript and Vue\r\n * @author jamesjianpeng\r\n */\r\nconst path = require('path');\r\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst { VueLoaderPlugin } = require('vue-loader');\r\n\r\nmodule.exports = {\r\n    mode: 'none',\r\n    entry: {\r\n        mian: path.resolve(__dirname, '../src/app-ts-vue/index.ts')\r\n    },\r\n    output: {\r\n        path: path.resolve(__dirname, '../dist'),\r\n        publicPath: './',\r\n        filename: '[name].js'\r\n    },\r\n    resolve: {\r\n        // alias: {\r\n        //    /**\r\n        //     * @todo https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6\r\n        //     * 需要编译\r\n        //     */\r\n        //    'vue$': 'vue/dist/vue.esm.js'\r\n        // }\r\n        // extensions: [ '.ts', '.vue', '.json' ] // extensions 的数组长度大于等于 3\r\n    },\r\n    externals: {\r\n        vue: 'Vue', // 需要知道库中暴露出来的 name，key 是我们在项目 import Vue from 'vue', value 就是 资源中暴露出来的名字\r\n        'vue-router': 'VueRouter'\r\n    },\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.vue$/,\r\n                loader: 'vue-loader'\r\n            },\r\n            {\r\n                test: /\\.scss/,\r\n                use: [\r\n                    'vue-style-loader',\r\n                    'css-loader',\r\n                    'sass-loader'\r\n                ]\r\n            },\r\n            {\r\n                test: /.ts$/,\r\n                loader: 'ts-loader',\r\n                options: {\r\n                    appendTsSuffixTo: [ /\\.vue$/ ]\r\n                },\r\n                exclude: /node_module/\r\n            }\r\n        ]\r\n    },\r\n    plugins: [\r\n        new VueLoaderPlugin(),\r\n        new HtmlWebpackPlugin({\r\n            template: path.resolve(__dirname, '../src/app-ts-vue/index-ts-vue.html'),\r\n            meta: {\r\n                viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'\r\n            }\r\n        })\r\n    ]\r\n};\r\n\r\n```\r\n\r\n- 入口文件\r\n```typescript\r\nimport Vue from 'vue';\r\nimport App from './app.vue';\r\nimport router from './router/index.ts';\r\n\r\n/**\r\n * 生成一个 id 为 app 的元素插入到 body 中，在最后一个元素的前面\r\n * @param none\r\n * @returns {string} id名字：'#app'\r\n */\r\nconst createAppId = function() {\r\n    const scriptTag = document.body.lastChild;\r\n    const app = document.createElement('div');\r\n    app.id = 'app';\r\n    document.body.insertBefore(app, scriptTag);\r\n    return '#' + app.id;\r\n};\r\n\r\nnew Vue({\r\n    router,\r\n    el: createAppId(),\r\n    template: `<div>\r\n                    <App />\r\n               </div>`,\r\n    components:{\r\n        App\r\n    }\r\n});\r\n\r\n\r\n```\r\n\r\n- 路由入口文件\r\n```\r\n/**\r\n * @file 路由出口\r\n * @author jamesjianpeng\r\n */\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport defaultRoutes from './default-routes.ts';\r\nimport globalGuards from './guards.ts';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'layoutDefault',\r\n    beforeEnter: (to:object, from:object, next:any) => {\r\n        console.log('%c 路由组件中特有的钩子 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next();\r\n    },\r\n    component: () => import(/* webpackChunkName: \"layout-default\" */'../layout/default.vue'),\r\n    children: defaultRoutes,\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n});\r\n\r\nglobalGuards(router);\r\n\r\nexport default router;\r\n```\r\n\r\n- guards.ts 错误来源的文件\r\n```\r\n/**\r\n * @file 全局路由守卫\r\n * @author jamesjianpeng\r\n */\r\nconst globalGuards = function (router:object) {\r\n    router.beforeEach((to:object, from:object, next:any) => {\r\n        console.log('%c 全局路由 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next()\r\n    })\r\n    router.afterEach((to:object, from:object) => {\r\n        console.log('%c 全局路由 %c - afterEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n    })\r\n}\r\n\r\nexport default globalGuards\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2410","RelatedDescription":"Closed issue \"TS2339: Property 'afterEach' does not exist on type 'object'.\" (#2410)"},{"Id":"364209279","IsPullRequest":false,"CreatedAt":"2018-09-27T06:26:32","Actor":"wuservices","Number":"2409","RawContent":null,"Title":"Register router-link and router-view with PascalCase for style guide compatibility","State":"closed","Body":"### What problem does this feature solve?\r\nThe Vue style guide recommends using PascalCase for Vue components in templates. However, since the components are registerd using kebab-case, you can't use PascalCase in the templates:\r\n```\r\n  Vue.component('router-view', View);\r\n  Vue.component('router-link', Link);\r\n```\r\n\r\nIn contrast, they're registered with kebab-case, you'd be able to use them with either kebab-case, or PascalCase:\r\n\r\n```\r\n  Vue.component('RouterView', View);\r\n  Vue.component('RouterLink', Link);\r\n```\r\n\r\nThis is the related style guide recommendation: https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended\r\n\r\n### What does the proposed API look like?\r\n```\r\n<RouterView/>\r\n<RouterLink to=\"/foo\">Go to Foo</RouterLink>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2409","RelatedDescription":"Closed issue \"Register router-link and router-view with PascalCase for style guide compatibility\" (#2409)"},{"Id":"364019823","IsPullRequest":false,"CreatedAt":"2018-09-26T13:28:02","Actor":"francoisromain","Number":"2408","RawContent":null,"Title":"Dynamic alias","State":"closed","Body":"### What problem does this feature solve?\r\nWith a route defined like this: \r\n\r\n```\r\n{\r\n    path: '/404',\r\n    alias: '*',\r\n    name: 'error',\r\n    component: Error\r\n}\r\n```\r\n\r\nWhen a user visit `my-site.com/random-inexisting-url`, the url doesn't change and it displays the error page. (this is what we want)\r\n\r\n*** \r\n\r\nNow, how to to do the same with dynamic routes?\r\n\r\nExample: \r\n- there is a route like `my-site.com/pages/:id` \r\n- the user visits `my-site.com/pages/inexisting-id`. \r\n- the `id` param is used to fetch an API. If the API returns null, there is no automatic redirection to the error page. \r\n\r\nIt is possible to manually redirect to the `/error` page with `router.push({ name: 'error' })` or a navigation guard, but it will change the url to `/error`. \r\n\r\n**Is it possible to keep the original url, but still display the error page?** \r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nsomething like `router.aliasTo({name: 'error' })`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2408","RelatedDescription":"Closed issue \"Dynamic alias\" (#2408)"},{"Id":"363637659","IsPullRequest":true,"CreatedAt":"2018-09-26T02:10:38","Actor":"wregis","Number":"2407","RawContent":null,"Title":"Forward args as props to custom child","State":"closed","Body":"When rendering a custom child (\"tag\" prop) forward unhandled args to the component, like a button or something complex.\r\n\r\nI believe this will not break any existing functionality while giving some new capabilities.\r\n\r\nGuess this will fix #1678 and can be related to #2029.","Url":"https://github.com/vuejs/vue-router/pull/2407","RelatedDescription":"Closed or merged PR \"Forward args as props to custom child\" (#2407)"},{"Id":"363554913","IsPullRequest":false,"CreatedAt":"2018-09-25T17:46:07","Actor":"Amorites","Number":"2406","RawContent":null,"Title":"add runtime type-checking & well understood warnings","State":"closed","Body":"### What problem does this feature solve?\r\nIf we accidentally set `to` prop of router-link to `null`, an error `TypeError: Cannot read property 'name' of null` will be thrown. \r\n\r\nAt this line:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/location.js#L18\r\n\r\nThere should be a better error message but not just crash and leave users confused.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nwarn like react\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2406","RelatedDescription":"Closed issue \"add runtime type-checking & well understood warnings\" (#2406)"},{"Id":"362924527","IsPullRequest":true,"CreatedAt":"2018-09-23T08:32:38","Actor":"HikaruSato","Number":"2405","RawContent":null,"Title":"Add Node.js(Express) Usage Example to Docs","State":"open","Body":"I thought that I needed documentation on usage examples in Node.js (Express).\r\nSo I will suggest adding a usage example in Node.js (Express).","Url":"https://github.com/vuejs/vue-router/pull/2405","RelatedDescription":"Open PR \"Add Node.js(Express) Usage Example to Docs\" (#2405)"},{"Id":"362886196","IsPullRequest":false,"CreatedAt":"2018-09-22T19:59:11","Actor":"rightaway","Number":"2404","RawContent":null,"Title":"Set caseSensitive and pathToRegexpOptions defaults on router","State":"open","Body":"### What problem does this feature solve?\r\n`caseSensitive` and `pathToRegexpOptions` are set on each of the routes individually, which is redundant and not clean especially when working a very large number of routes and across multiple files. It would simplify the code to be able to set it as a default on the router itself, and each of the routes will inherit that if they don't override it in their own route config.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnew VueRouter({\r\n  caseSensitive: true,\r\n  pathToRegexpOptions: {},\r\n  routes: [\r\n    { path: '/example', caseSensitive: false, pathToRegexpOptions: {} }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2404","RelatedDescription":"Open issue \"Set caseSensitive and pathToRegexpOptions defaults on router\" (#2404)"},{"Id":"362876398","IsPullRequest":false,"CreatedAt":"2018-09-22T17:43:59","Actor":"smakinson","Number":"2403","RawContent":null,"Title":"route will iframe changes the iframe then the page when hitting back","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/smakinson/pen/JaVbGv](https://codepen.io/smakinson/pen/JaVbGv)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the first PRESS ME link to move to the page with an iframe.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nClick the next PRESS ME link.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button again.\r\n\r\nNotice the iframe and the VAL.\r\n\r\n### What is expected?\r\nPressing the browser back button would go back to the previous route on the first press, not first affecting only the iframe.\r\n\r\n### What is actually happening?\r\nPressing back in the browser first affects the iframe, then pressing again affects the route.\r\n\r\n---\r\nReference issue: https://github.com/vuejs/vue-router/issues/1699\r\n\r\nI came across this bug recently in a project I am working on that uses an iframe for video. I had only noticed the issue in Chrome initially, but the pen seems to show it happening in Firefox and Safari as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2403","RelatedDescription":"Open issue \"route will iframe changes the iframe then the page when hitting back\" (#2403)"},{"Id":"362523658","IsPullRequest":false,"CreatedAt":"2018-09-22T09:56:35","Actor":"rothsandro","Number":"2401","RawContent":null,"Title":"$router not available in function passed as prop (undefined is not an object)","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/rothsandro/vue-router-issue](https://github.com/rothsandro/vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repo\r\n2. Go into the repo folder\r\n3. `npm install`\r\n4. `npm run serve`\r\n5. Open the app (http://localhost:8080/)\r\n6. Click on the button\r\n\r\nThe parent component `HelloWorld` has a property `demo` with a function `run`, passed down to its child component `ChildComponent`. Clicking the button executes the run method in the child component.\r\n\r\nThe run method triggers four alerts:\r\n1. Alert of a property of the class\r\n2. Alert a property from the Vuex store\r\n3. Alert the $router object using a method in the class\r\n4. Alert using this.$router directly instead of a separate function\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nYou should see four alerts, number 3 and 4 should show \"[object Object]\".\r\n\r\n### What is actually happening?\r\nOnly three alerts will be shown, number four produces the following error:\r\n\r\n```\r\nTypeError: undefined is not an object (evaluating 'this._routerRoot._router')\r\n```\r\n\r\nThe same syntax using this.$store works fine. Therefore I assume the problem is related to Vue Router, not Vue or Typescript.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2401","RelatedDescription":"Closed issue \"$router not available in function passed as prop (undefined is not an object)\" (#2401)"},{"Id":"362717132","IsPullRequest":false,"CreatedAt":"2018-09-22T07:47:10","Actor":"Drezdenozk","Number":"2402","RawContent":null,"Title":"Can i make route with asterisk and exception?","State":"closed","Body":"### What problem does this feature solve?\r\nFor works need something like\r\n'path': '*(exclude something like /static/)'\r\nYes, really, root asterisk and exception...\r\n\r\n### What does the proposed API look like?\r\n*(regExp)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2402","RelatedDescription":"Closed issue \"Can i make route with asterisk and exception?\" (#2402)"},{"Id":"362432843","IsPullRequest":false,"CreatedAt":"2018-09-21T14:51:15","Actor":"dongnaebi","Number":"2400","RawContent":null,"Title":"Why encode '(' to 28%","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88](https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI use vue-router in ssr,in entry-server.js,got rejection\r\n```javascript\r\n    const { url } = context\r\n    const { fullPath } = router.resolve(url).route\r\n\r\n    if (fullPath !== url) {\r\n      return reject({ url: fullPath })\r\n    }\r\n```\r\nthe URL is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nget fullPath in express by `req.url` is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nbut in vue-router `route.fullPath` get `/search?keyword=iPhone%20XS%20Max%28A2104%29%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nthe difference is vue-router encode '(' to 28% and ')' to 29%,why do this?\r\n\r\n### What is expected?\r\ndon't endoce `!， '，(，)，*，-，.，_，~，0-9，a-z，A-Z`\r\n\r\n### What is actually happening?\r\ngot error in ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2400","RelatedDescription":"Closed issue \"Why encode '(' to 28%\" (#2400)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"370724958","IsPullRequest":true,"CreatedAt":"2018-10-16T17:44:30","Actor":"roschaefer","Number":"1425","RawContent":null,"Title":"Fix false negative when checking `payload: false`","State":"open","Body":"Here is my example code:\r\n```javascript\r\n    test('commits setContributionId', (done) => {\r\n      const state = {\r\n        comments: []\r\n      }\r\n      testAction(action, 42, state, [\r\n        // ...\r\n        { type: 'isLoading', payload: false}\r\n      ], done)\r\n    })\r\n```\r\nI'm passing `42` as an argument to `testAction` and I want to verify that `commit('isLoading', payload)` is executed. Here the payload is not the payload of the testAction helper (in my case 42) but the second argument of `commit`. That might be `false` and in my case it is. If I change the payload of the last expected commit to be `true` no assertion error is raised. The fix is to make the if condition in the mocked commit method more specific.","Url":"https://github.com/vuejs/vuex/pull/1425","RelatedDescription":"Open PR \"Fix false negative when checking `payload: false`\" (#1425)"},{"Id":"370535247","IsPullRequest":false,"CreatedAt":"2018-10-16T10:05:14","Actor":"7iomka","Number":"1424","RawContent":null,"Title":"It is possible to sync vuex state across devices?","State":"open","Body":"### What problem does this feature solve?\r\nI want to make the same user, authorized on different devices, interact with the site, when the state changes, so that it synchronously changes on all devices.\r\n\r\nBack-Ender asks to implement the mechanism via *web sockets*   how-to about **change the state from the server(!)**. \r\nHe says that in *react-redux* he calls action with *type* and some *payload*. \r\nBut vuex has **two entities**: *mutations* and *actions*, which adds complexity! Especially when store is namespaced by modules.\r\n\r\n\r\n### What does the proposed API look like?\r\n  I would be grateful for any help.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1424","RelatedDescription":"Open issue \"It is possible to sync vuex state across devices?\" (#1424)"},{"Id":"370310863","IsPullRequest":true,"CreatedAt":"2018-10-16T02:59:27","Actor":"Jinjiang","Number":"1423","RawContent":null,"Title":"docs(zh): updated to #f64a89c","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/b205e9f...f64a89c\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1423","RelatedDescription":"Closed or merged PR \"docs(zh): updated to #f64a89c\" (#1423)"},{"Id":"368962092","IsPullRequest":false,"CreatedAt":"2018-10-11T05:49:31","Actor":"chrisvfritz","Number":"1417","RawContent":null,"Title":"Discussion on removing mapXXX helpers in Vuex 4","State":"open","Body":"@yyx990803 @ktsn Regarding this note in the current [roadmap](https://github.com/vuejs/roadmap) for Vuex 4:\r\n\r\n> Getting rid of `mapXXX` helpers via scoped-slot based store consumer component\r\n\r\nI've experimented with this scoped-slot pattern in some apps, but it has a couple serious limitations that have led to me never using it anymore:\r\n\r\n- Vuex state/getters/actions are only conveniently available in templates and render functions. That means the convenience is unavailable for computed properties that rely on Vuex state and methods that dispatch Vuex actions, which is a big limitation.\r\n\r\n- It requires tight coupling of components to Vuex modules, which I've found doesn't scale well to large apps. Instead, I've found it very useful to _never_ use the `mapXXX` helpers directly in my components, but in a [state helpers file](https://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/state/helpers.js), which describes the public interfaces for all Vuex modules. From this file, I'll import the concerns I care about into individual components. For example:\r\n  ```js\r\n  import {\r\n    authComputed,\r\n    notificationsComputed,\r\n    notificationsMethods,\r\n    searchMethods,\r\n  } from '@state/helpers'\r\n\r\n  // ...\r\n\r\n  computed: {\r\n    ...authComputed,\r\n    ...notificationsComputed,\r\n  },\r\n  methods: {\r\n    ...notificationsMethods,\r\n    ...searchMethods,\r\n  },\r\n  ```\r\n  This prevents verbose and duplicated `mapXXX` code in components, replaced by a nice list of the global concerns this component cares about. But the benefit _really_ comes in when adding new state/getters/actions or when refactoring a Vuex module. For example, if I add a new `userLoggedIn` getter to `authComputed`, it will automatically be available in any component using `authComputed`. Or, if I rename some state or split it out into additional modules, the state helpers file allows the refactor to be done in two steps: first on the Vuex side, while updating the state helpers for compatibility, _then_ in my components (if I actually want the public interface to change as well).\r\n\r\nFor these reasons, I feel like the `mapXXX` helpers should stay and the scoped slot pattern should actually be avoided. What are others' thoughts? Is there something I've missed?","Url":"https://github.com/vuejs/vuex/issues/1417","RelatedDescription":"Open issue \"Discussion on removing mapXXX helpers in Vuex 4\" (#1417)"},{"Id":"358495065","IsPullRequest":false,"CreatedAt":"2018-10-08T15:36:35","Actor":"ankitsinghaniyaz","Number":"1399","RawContent":null,"Title":"How to access Vue(vm) instance in Vuex store?","State":"closed","Body":"### What problem does this feature solve?\r\nI have a `$notify` method on Vue prototype. I need to use that in my action. Is there a way to do that?\r\n\r\nI see that on Vuex we have `this.$_vm` but not sure if that is the right thing to do\r\n\r\n### What does the proposed API look like?\r\n`this.vue.$notify()`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1399","RelatedDescription":"Closed issue \"How to access Vue(vm) instance in Vuex store?\" (#1399)"},{"Id":"363205490","IsPullRequest":false,"CreatedAt":"2018-10-08T15:15:33","Actor":"AshwinTayson","Number":"1405","RawContent":null,"Title":"Dynamic module generation - Nested modules doesn't have proper levels","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/749394/](https://jsfiddle.net/50wL7mdz/749394/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the program and check the console and the paragraph tag\r\n\r\n### What is expected?\r\n1. There should be two nested modules a and b in the console store[getters].<br>\r\n1.a The two modules should be namespaced with a/aa and b/aa\r\n\r\n2. The first &lt;p&gt; tag should be undefined since namespace a was not given\r\n3. Second &lt;p&gt; tag should get \"module a/aa\"\r\n4. Third &lt;p&gt; tag should get \"module b/aa\"\r\n\r\n### What is actually happening?\r\n1. There is only one getter.(nested namespacing did not work)<br>\r\n1.a The getter is not namespaced by neither a nor b\r\n\r\n2. The first &lt;p&gt; tag is giving value (not respecting namespace)\r\n3. Second &lt;p&gt; tag is undefined since namespace is not registering properly\r\n4. Third &lt;p&gt; tag is undefined since namespace is not registering properly\r\n\r\n---\r\nBut if u check the state property of the store object in the console, you can see the modules registered with the correct namespace.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1405","RelatedDescription":"Closed issue \"Dynamic module generation - Nested modules doesn't have proper levels\" (#1405)"},{"Id":"365285331","IsPullRequest":false,"CreatedAt":"2018-10-08T15:12:15","Actor":"silentmissile","Number":"1411","RawContent":null,"Title":"this is undefined in vuex","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7jqyyvmqm1](https://codesandbox.io/s/7jqyyvmqm1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwin10 x64\r\nnodejs 10.11.0 x64\r\n@vue/cli 3.0.4\r\n@vue/cli-service 3.0.4\r\n@vue/cli-service-global 3.0.4\r\nvue 2.5.17\r\nvue-router 3.0.1\r\n\r\n\r\n<template>\r\n  <div>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Initial from './Initial'\r\nexport default {\r\n  components: {\r\n    'initial': Initial,\r\n  },\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created () {\r\n    console.log(this.$store)\r\n    this.$store.dispatch('Init')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\nwhen running\r\nnpm run serve\r\nthe service runs smoothly\r\n\r\nwhen I visit this component in browser, some error in console\r\n\r\nthis.$store can be recognized and logged correctly, but\r\n\r\n[Vue warn]: Error in created hook: \"TypeError: this is undefined\"\r\n\r\nfound in\r\n\r\n---> <Design> at src/views/initial.vue\r\n       <Entrance> at src/Entrance.vue\r\n         <Root>\r\n\r\n### What is expected?\r\nfix this bug\r\n\r\n### What is actually happening?\r\nthis is undefined if vuex\r\n\r\n---\r\nin codesandbox, it can't be reproduced, maybe it's caused by conflict of some other software like nodejs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1411","RelatedDescription":"Closed issue \"this is undefined in vuex\" (#1411)"},{"Id":"365418987","IsPullRequest":true,"CreatedAt":"2018-10-08T00:49:57","Actor":"Slashgear","Number":"1412","RawContent":null,"Title":" docs(vuepress): move 🇫🇷 doc in vuepress","State":"closed","Body":"Last week I notice that French Vuex doc was not on Vuepress therefore not very accessible for the french community.\r\n\r\nThis PR fix that.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vuex/pull/1412","RelatedDescription":"Closed or merged PR \" docs(vuepress): move 🇫🇷 doc in vuepress\" (#1412)"},{"Id":"367476734","IsPullRequest":false,"CreatedAt":"2018-10-07T19:43:38","Actor":"syntacticsolutions","Number":"1416","RawContent":null,"Title":"Support for IndexedDB","State":"closed","Body":"### What problem does this feature solve?\r\nIt should (in theory) make dealing with Big Data Web Visualizations easier and more performant.\r\n\r\nI'm using echarts to render big data vizualizations at the company I work for. The problem is that when my data gets really big (1m records), It's takes way too long to do anything. The app pretty much becomes unresponsive and so now the only alternative I have is to do all of the aggregation on the backend and then return the response.\r\n\r\n### What does the proposed API look like?\r\nI would imagine that the vuex instance would send messages back and forth between the serviceworker and itself. The mutations could then be passed as arguments to the serviceworker. The serviceworker would perform the operation and return the aggregated data. If the user does not have third-party-cookies enabled. It would just fall back to the normal Vuex instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1416","RelatedDescription":"Closed issue \"Support for IndexedDB\" (#1416)"},{"Id":"367472752","IsPullRequest":false,"CreatedAt":"2018-10-06T16:28:43","Actor":"nicodmf","Number":"1415","RawContent":null,"Title":"Wrong data for getters at least in actions because getters are mutables","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fqm3tj5y/3/](https://jsfiddle.net/fqm3tj5y/3/)\r\n\r\n### Steps to reproduce\r\nclic on \"display values\" text\r\n\r\n### What is expected?\r\nwrapper: values ===  getter: value\r\n\r\n### What is actually happening?\r\nwrapper: values !==  getter: value\r\n\r\n---\r\nI change the line 17\r\nfrom \r\n       let begin = getters.begin\r\nto \r\n       let begin = moment(getters.begin;)\r\n\r\nAnd this works. \r\n\r\nAnyway, it seems to me that a getter should'nt change and be a copy in every call. If not this should be good documented with an big warning : \" Attention : a getter is mutable, copy it, if you want to play with its ow properties.\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1415","RelatedDescription":"Open issue \"Wrong data for getters at least in actions because getters are mutables\" (#1415)"},{"Id":"367468201","IsPullRequest":false,"CreatedAt":"2018-10-06T15:37:22","Actor":"nicodmf","Number":"1414","RawContent":null,"Title":"Wrong data for getters in actions : Bug?","State":"closed","Body":"Because an exemple is better :\r\n\r\n```js\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        filters: {\r\n            date: moment(),\r\n            period: \"3weeks\",\r\n        },\r\n    },\r\n    getters: {\r\n        begin(state) {\r\n            switch(state.filters.period) {\r\n                case 'day': return moment(state.filters.date).startOf('day');\r\n                case 'week': return moment(state.filters.date).startOf('week');\r\n                case '3weeks': return moment(state.filters.date).subtract(1, 'week').startOf('week');\r\n            }\r\n            return moment();\r\n        },\r\n   },\r\n   actions: {\r\n        async load({commit, state, getters}) {\r\n            console.log(this._wrappedGetters.begin(state).format('YYYY-MM-DD'), getters.begin.format('YYYY-MM-DD'));\r\n            // Here results are identicals at initialisation, but différents after changes :\r\n            // At initialisation    => **2018-10-15** getter(good value) : **2018-10-15**\r\n            // After changes        => **2018-10-22** getter(wrong value): **2018-10-29**\r\n            // After changes        => **2018-10-15** getter(wrong value): **2018-10-22**\r\n            // After another change => **2018-10-08** getter(wrong value): **2018-10-29**\r\n        },\r\n    },\r\n};\r\n```\r\nIn fact, the use of getters in actions isn't largely documented, but as getters are just computed values based on store and because i always mutate store by mutation in this processus, this should not appear IMO.","Url":"https://github.com/vuejs/vuex/issues/1414","RelatedDescription":"Closed issue \"Wrong data for getters in actions : Bug?\" (#1414)"},{"Id":"367434053","IsPullRequest":false,"CreatedAt":"2018-10-06T07:47:58","Actor":"PedroJuan91","Number":"1413","RawContent":null,"Title":"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)","State":"open","Body":"### What problem does this feature solve?\r\nevery time i want to filter my array in my modules state properties.\r\ni will write it to my root getters. and its kinda confusing to me like accessing to the root just to make a filter.  \r\nthen its kinda messy accessing something from the modules going to root\r\n\r\n### What does the proposed API look like?\r\n````\r\n//root getters\r\ngetters: {\r\n createMe(state, getters, rootState){\r\n  return function(nameID) {\r\n   return rootState.persons.names.find(function (thisName) {\r\n    return thisName.id === nameID\r\n   })\r\n  }\r\n }\r\n}\r\n//computed \r\nloadname(id){\r\n return this.$store.getters.createMe(id)\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1413","RelatedDescription":"Open issue \"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)\" (#1413)"},{"Id":"363671985","IsPullRequest":true,"CreatedAt":"2018-10-02T08:53:50","Actor":"Austio","Number":"1407","RawContent":null,"Title":"Add ability to turn off devtools on vuex by passing an off options","State":"closed","Body":"This PR adds the ability to turn off devtools on a per vuex instance level.  This is useful for cases where you have multiple vuex stores on a single page.  A good example is a scenario where teams maintain their own portions of a single app that are all loaded, some of which will have an independent vuex store.\r\n\r\nWith this option, on the dev side i could turn this off per instance so that I can debug a single store. \r\n\r\nBy default, this mirrors what is already in vuex, it just allows for turning off when specified.\r\n\r\n```\r\nconst store = new Vuex.Store({\r\n  devtools: false\r\n})\r\n```\r\n\r\nFollow through on https://github.com/vuejs/vuex/issues/875\r\n","Url":"https://github.com/vuejs/vuex/pull/1407","RelatedDescription":"Closed or merged PR \"Add ability to turn off devtools on vuex by passing an off options\" (#1407)"},{"Id":"364858237","IsPullRequest":true,"CreatedAt":"2018-09-30T07:24:08","Actor":"Alex-Sokolov","Number":"1410","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1410","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1410)"},{"Id":"363977638","IsPullRequest":true,"CreatedAt":"2018-09-27T08:42:26","Actor":"nulpatrol","Number":"1408","RawContent":null,"Title":"Add helpers to default export type declaration as in sources","State":"closed","Body":"Partially based on #1274\r\nImport Vuex.\r\n```ts\r\nimport Vuex from \"vuex\";\r\n```\r\nUsing before this PR: \r\n```ts\r\n(Vuex as any).mapActions(...)\r\n```\r\n\r\nUsing after:\r\n```\r\nVuex.mapActions(...)\r\n```","Url":"https://github.com/vuejs/vuex/pull/1408","RelatedDescription":"Closed or merged PR \"Add helpers to default export type declaration as in sources\" (#1408)"},{"Id":"364304597","IsPullRequest":true,"CreatedAt":"2018-09-27T08:03:27","Actor":"revelt","Number":"1409","RawContent":null,"Title":"[docs] Update plugins.md","State":"closed","Body":"Let's update the function's name to match the code sample","Url":"https://github.com/vuejs/vuex/pull/1409","RelatedDescription":"Closed or merged PR \"[docs] Update plugins.md\" (#1409)"},{"Id":"363342548","IsPullRequest":false,"CreatedAt":"2018-09-24T22:23:49","Actor":"Hoishin","Number":"1406","RawContent":null,"Title":"Remove TS type definition and move to DefinitelyTyped","State":"open","Body":"### What problem does this feature solve?\r\n#### Background:\r\nIt's hard to say TypeScript type definition development has been active in this repo. [Searching TypeScript tags](https://github.com/vuejs/vuex/labels/typescript), all 7 issues TS-related remain open, and 3 out of 5 PRs are waiting for reviewing, including one opened back in January 2018.\r\n\r\nIf the repository includes type definition, it would be nice if the repository maintainers are responsible for maintaining definition actively as well as library itself.\r\n\r\n#### Suggestion:\r\nRemove TypeScipt type definition in this repository, and move them to [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped), so type definition development wouldn't be the tasks for Vuex maintainers. I would expect type definition development would be more active with this since it'll be easier to review/merge.\r\n\r\n### What does the proposed API look like?\r\nType definition are removed. Users will have to install `@types/vuex`, but it will be more accurate/strict/up-to-date definition.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1406","RelatedDescription":"Open issue \"Remove TS type definition and move to DefinitelyTyped\" (#1406)"},{"Id":"359277072","IsPullRequest":true,"CreatedAt":"2018-09-24T14:49:27","Actor":"kazupon","Number":"1400","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1400","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1400)"},{"Id":"361250917","IsPullRequest":false,"CreatedAt":"2018-09-22T23:08:32","Actor":"sjmcdowall","Number":"1403","RawContent":null,"Title":"Typescript definition for interface Dispatch not correct -- should allow non-async return? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sjmcdowall/hzew29g1/](https://jsfiddle.net/sjmcdowall/hzew29g1/)\r\n\r\n\r\n### Steps to reproduce\r\nCreate a typescript Vue project with Vuex\r\nUse a fairly strict tslint that has \"no-floating-promises\" turned on \r\nCode a call to a store.dispatch() without await / async Promise stuff (i.e. normal sync. call)\r\n\r\n### What is expected?\r\nNo linting errors\r\n\r\n### What is actually happening?\r\ntslint complains with \r\nERROR: (no-floating-promises) /Users/sjm/work/mm/mms4/web-ui/src/app/router.ts[91, 5]: Promises must be handled appropriately on this code:\r\n    store.dispatch('event/initState');\r\n\r\n---\r\nI think the interface for Dispatch needs to have more overrides to include the non-Promise versions that return : any ?? \r\n\r\n`export interface Dispatch {\r\n  (type: string, payload?: any, options?: DispatchOptions): Promise<any>;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): Promise<any>;\r\n  (type: string, payload?: any, options?: DispatchOptions): any;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): any;\r\n}`\r\n\r\n??\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1403","RelatedDescription":"Closed issue \"Typescript definition for interface Dispatch not correct -- should allow non-async return? \" (#1403)"},{"Id":"361542686","IsPullRequest":true,"CreatedAt":"2018-09-19T01:29:50","Actor":"rigor789","Number":"1404","RawContent":null,"Title":"feat(devtool): allow usage in non-browser environments","State":"open","Body":"This allows inspecting vuex state in standalone devtools with non-browser environments such as NativeScript\r\n\r\nChanges taken from\r\nhttps://github.com/vuejs/vue-devtools/blob/4fe7c84d614f1ddf581d65274f30a989b77f9ad3/shells/electron/index.js#L3-L7","Url":"https://github.com/vuejs/vuex/pull/1404","RelatedDescription":"Open PR \"feat(devtool): allow usage in non-browser environments\" (#1404)"},{"Id":"359858860","IsPullRequest":true,"CreatedAt":"2018-09-13T11:42:03","Actor":"escapedcat","Number":"1402","RawContent":null,"Title":"chore(docs): link to vue docs watch for options","State":"open","Body":"> Accepts an optional options object that takes the same options as Vue's vm.$watch method.\r\n\r\nlinking to the actual `watch` of the vue doc might be helpful for others to check options faster. not sure if this is wanted though due to future maintenance efforts.","Url":"https://github.com/vuejs/vuex/pull/1402","RelatedDescription":"Open PR \"chore(docs): link to vue docs watch for options\" (#1402)"},{"Id":"359583716","IsPullRequest":true,"CreatedAt":"2018-09-12T17:40:01","Actor":"TimvdLippe","Number":"1401","RawContent":null,"Title":"Add esm-browser build to dist","State":"open","Body":"This PR is the complement of https://github.com/vuejs/vue/pull/7110 which is already being distributed on NPM for Vue. I have personally ran the build and imported in my project and I can confirm all references to `process` have been removed and that the code is not transpiled.\r\n\r\nFixes #1247","Url":"https://github.com/vuejs/vuex/pull/1401","RelatedDescription":"Open PR \"Add esm-browser build to dist\" (#1401)"},{"Id":"358486841","IsPullRequest":false,"CreatedAt":"2018-09-12T11:55:12","Actor":"the-s0urce","Number":"1398","RawContent":null,"Title":"Mutations or Actions deprecated?","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\nas first sorry for abusing the issue system, but did not find any other contact option. On one of the last two vue.js conferences (not sure wich of both it was), you said, that Mutations and Actions will be merged to one call. I was looking for some written news about this now for quite a time. Now we are setting up a new big project and we would really love to get a confirmation about this.\r\nThank you\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1398","RelatedDescription":"Closed issue \"Mutations or Actions deprecated?\" (#1398)"},{"Id":"358406566","IsPullRequest":false,"CreatedAt":"2018-09-09T19:55:57","Actor":"ClickerMonkey","Number":"1397","RawContent":null,"Title":"Improve Computed Support","State":"open","Body":"### What problem does this feature solve?\r\nBetter support for computed properties with a set function.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```vue\r\nimport { mapComputed } from 'vuex'\r\nnew Vue({\r\n  computed: {\r\n    ...mapComputed({\r\n       'mutationName': 'stateVariable',\r\n       // example:\r\n       'setLoading': 'loading'\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nThis would generate a computed property that would return `stateVariable` and when the value is changed it would call the mutation `mutationName` with the new value.\r\n\r\nThis greatly simplifies directives like `v-model`.\r\n\r\nImplementation:\r\n\r\n```TypeScript\r\ntype VuexComputedMap = { [mutation: string]: string };\r\n\r\nexport function mapComputed(map: VuexComputedMap) {\r\n  const mapped = Object.create(null);\r\n  for (const mutation in map) {\r\n    const variable = map[mutation]\r\n    mapped[variable] = {\r\n      get () {\r\n         return this.$store.state[ variable ]\r\n      },\r\n      set (value) {\r\n        this.$store.commit(mutation, value)\r\n      }\r\n    };\r\n  }\r\n  return mapped;\r\n}\r\n```\r\n\r\n### Problems\r\n\r\nThe implementation would need to be changed to account for modules & namespaces.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1397","RelatedDescription":"Open issue \"Improve Computed Support\" (#1397)"},{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-17T05:30:49.7219119Z","RunDurationInMilliseconds":4785}