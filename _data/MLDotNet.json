{"Data":{"GitHub":{"Issues":[{"Id":"437419183","IsPullRequest":true,"CreatedAt":"2019-04-26T02:44:56","Actor":"daholste","Number":"3591","RawContent":null,"Title":"[AutoML] If first three iterations all fail, short-circuit AutoML experiment","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/341","Url":"https://github.com/dotnet/machinelearning/pull/3591","RelatedDescription":"Closed or merged PR \"[AutoML] If first three iterations all fail, short-circuit AutoML experiment\" (#3591)"},{"Id":"437435111","IsPullRequest":true,"CreatedAt":"2019-04-26T02:39:15","Actor":"daholste","Number":"3597","RawContent":null,"Title":"[AutoML] AutoML SDK API: validate schema types of input IDataView","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3597","RelatedDescription":"Closed or merged PR \"[AutoML] AutoML SDK API: validate schema types of input IDataView\" (#3597)"},{"Id":"437447208","IsPullRequest":true,"CreatedAt":"2019-04-26T01:19:07","Actor":"daholste","Number":"3599","RawContent":null,"Title":"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/348","Url":"https://github.com/dotnet/machinelearning/pull/3599","RelatedDescription":"Closed or merged PR \"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view\" (#3599)"},{"Id":"437423840","IsPullRequest":true,"CreatedAt":"2019-04-26T01:18:05","Actor":"daholste","Number":"3593","RawContent":null,"Title":"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/311","Url":"https://github.com/dotnet/machinelearning/pull/3593","RelatedDescription":"Closed or merged PR \"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed\" (#3593)"},{"Id":"437457843","IsPullRequest":true,"CreatedAt":"2019-04-26T01:12:49","Actor":"codemzs","Number":"3601","RawContent":null,"Title":"Handle Indexed Pixel Format correctly in Image Resize transform.","State":"open","Body":"fixes #3600\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3601","RelatedDescription":"Open PR \"Handle Indexed Pixel Format correctly in Image Resize transform.\" (#3601)"},{"Id":"437457751","IsPullRequest":false,"CreatedAt":"2019-04-26T01:12:23","Actor":"codemzs","Number":"3600","RawContent":null,"Title":"Image Resize Transform does not handle Indexed Pixel Format images correctly.","State":"open","Body":"It tries to Graphics.DrawImage when resizing images that are of Indexed Pixel Format as evident from the below code. This will throw an exception \"A Graphics object cannot be created from an image that has an indexed pixel format.\"\r\n\r\n```csharp\r\ndst = new Bitmap(info.ImageWidth, info.ImageHeight, src.PixelFormat);\r\n\r\nvar srcRectangle = new Rectangle(sourceX, sourceY, sourceWidth, sourceHeight);\r\nvar destRectangle = new Rectangle(destX, destY, destWidth, destHeight);\r\nusing (var g = Graphics.FromImage(dst))\r\n {\r\n    g.DrawImage(src, destRectangle, srcRectangle, GraphicsUnit.Pixel);\r\n|\r\n                        \r\n```\r\n\r\nInstead of Indexed Pixel Format the images should be resized in the below manner:\r\n\r\n```csharp\r\nif (src.PixelFormat == PixelFormat.Format1bppIndexed ||\r\n    src.PixelFormat == PixelFormat.Format4bppIndexed ||\r\n    src.PixelFormat == PixelFormat.Format8bppIndexed)\r\n {\r\n   dst = new Bitmap(info.ImageWidth, info.ImageHeight);\r\n}\r\nelse\r\n   dst = new Bitmap(info.ImageWidth, info.ImageHeight, src.PixelFormat);\r\n\r\nvar srcRectangle = new Rectangle(sourceX, sourceY, sourceWidth, sourceHeight);\r\nvar destRectangle = new Rectangle(destX, destY, destWidth, destHeight);\r\nusing (var g = Graphics.FromImage(dst))\r\n{\r\n    g.DrawImage(src, destRectangle, srcRectangle, GraphicsUnit.Pixel);\r\n}\r\n```\r\nTo read more refer to https://stackoverflow.com/questions/17313285/graphics-on-indexed-image and specifically the last answer is the most accurate.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3600","RelatedDescription":"Open issue \"Image Resize Transform does not handle Indexed Pixel Format images correctly.\" (#3600)"},{"Id":"437446991","IsPullRequest":true,"CreatedAt":"2019-04-26T00:13:11","Actor":"daholste","Number":"3598","RawContent":null,"Title":"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3598","RelatedDescription":"Closed or merged PR \"[AutoML] InferColumns API: Validate all columns specified in column info exist in inferred data view\" (#3598)"},{"Id":"437431622","IsPullRequest":false,"CreatedAt":"2019-04-25T23:00:14","Actor":"shmoradims","Number":"3596","RawContent":null,"Title":"Ensure samples auto-generated .cs files are in-sync with .tt files","State":"open","Body":"For trainers' samples, we're using T4 templates to reduce boilerplate code. This creates a problem when devs directly modify the autogenerated .cs files, which will make the .tt and .cs files out of sync. We need a way to check that auto-generated .cs files don't have any manual changes.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3596","RelatedDescription":"Open issue \"Ensure samples auto-generated .cs files are in-sync with .tt files\" (#3596)"},{"Id":"437430325","IsPullRequest":true,"CreatedAt":"2019-04-25T22:54:12","Actor":"artidoro","Number":"3595","RawContent":null,"Title":"Refactoring clustering catalog samples line width to 85","State":"open","Body":"Towards #3478.","Url":"https://github.com/dotnet/machinelearning/pull/3595","RelatedDescription":"Open PR \"Refactoring clustering catalog samples line width to 85\" (#3595)"},{"Id":"437428668","IsPullRequest":true,"CreatedAt":"2019-04-25T22:46:56","Actor":"wschin","Number":"3594","RawContent":null,"Title":"Clean SamplesUtils","State":"open","Body":"This PR cleans SampleUtils a bit. Toward #3584.\r\n\r\n- If a function/class is used only in less than two places, we copy them wherever it's used.\r\n- Function/class referenced by nothing is removed.\r\n\r\nCurrently, we can't not remove SamplesUtils entirely because some samples are still using it.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3594","RelatedDescription":"Open PR \"Clean SamplesUtils\" (#3594)"},{"Id":"437423544","IsPullRequest":true,"CreatedAt":"2019-04-25T22:26:11","Actor":"daholste","Number":"3592","RawContent":null,"Title":"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed","State":"closed","Body":"Closes https://github.com/dotnet/machinelearning-automl/issues/311","Url":"https://github.com/dotnet/machinelearning/pull/3592","RelatedDescription":"Closed or merged PR \"[AutoML] PipelineSuggester: don't recommend pipelines from first-stage trainers that failed\" (#3592)"},{"Id":"437418780","IsPullRequest":true,"CreatedAt":"2019-04-25T22:10:14","Actor":"daholste","Number":"3590","RawContent":null,"Title":"[AutoML] If first three iterations all fail, short-circuit AutoML experiment","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3590","RelatedDescription":"Closed or merged PR \"[AutoML] If first three iterations all fail, short-circuit AutoML experiment\" (#3590)"},{"Id":"437418219","IsPullRequest":false,"CreatedAt":"2019-04-25T22:07:45","Actor":"eerhardt","Number":"3589","RawContent":null,"Title":"Change baseline tests to use the new NumberParseOption.UseSingle","State":"open","Body":"A lot of our tests use baseline files that have serialized numbers in them. We've had a lot of issues in the past comparing these baselines files because of minor changes in how floating point values are written to the output file (sometimes changes in which .NET we are running on, or Windows vs. Linux, etc. cause the values to slightly change).\r\n\r\nOne cause of these issues is because we are writing `float` (32-bit floating points) to the file, but when we are parsing the values, we are using `double` (64-bit floating points).\r\n\r\nAt times, we've decreased the `digitsOfPrecision` low enough to tolerate these differences. However, there are cases where `digitsOfPrecision` isn't enough, specifically when we have large values that differ by a digit in the exponential form, for example:\r\n\r\n```\r\n3.40282347E+38\r\n```\r\nvs\r\n```\r\n3.4028235E+38\r\n```\r\n\r\nTo solve this issue, I've added a new option - to parse the numbers using `float.Parse` instead of `double.Parse`.\r\n\r\nSee the solution added in https://github.com/dotnet/machinelearning/pull/3532.\r\n\r\nWe should go through the tests where we use a lowered `digitsOfPrecision`, and see if using `float.Parse` fixes the test on all platforms. This may allow us to remove the `digitsOfPrecision` parameter altogether if all these places can be converted to `UseSingle`.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/machinelearning/issues/3589","RelatedDescription":"Open issue \"Change baseline tests to use the new NumberParseOption.UseSingle\" (#3589)"},{"Id":"437415497","IsPullRequest":true,"CreatedAt":"2019-04-25T21:59:07","Actor":"codemzs","Number":"3588","RawContent":null,"Title":"Reformat categorical transform samples.","State":"open","Body":"towards #3478\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3588","RelatedDescription":"Open PR \"Reformat categorical transform samples.\" (#3588)"},{"Id":"437411327","IsPullRequest":false,"CreatedAt":"2019-04-25T21:46:08","Actor":"dckorben","Number":"3587","RawContent":null,"Title":"Fast Tree Nuget 1.0.0-preview doesn't set PackageReference","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10\r\n- **.NET Version (eg., dotnet --info)**:  Dot Net 4.7.2\r\n\r\n### Issue\r\n\r\n- **What did you do?** Added Fast Tree NUGET\r\n- **What happened?** DLL Not Found Error On Execute\r\n- **What did you expect?** No DLL Not Found Error\r\n\r\n### Source code / logs\r\n\r\nTo use Fast Tree you must manually add `<PackageReference Include=\"Microsoft.ML.FastTree\" Version=\"1.0.0-preview\" />` to the project file otherwise it won't copy the fast tree dll to the output folder.","Url":"https://github.com/dotnet/machinelearning/issues/3587","RelatedDescription":"Open issue \"Fast Tree Nuget 1.0.0-preview doesn't set PackageReference\" (#3587)"},{"Id":"437380363","IsPullRequest":true,"CreatedAt":"2019-04-25T20:20:29","Actor":"wschin","Number":"3586","RawContent":null,"Title":"L1-norm and L2-norm regularization doc","State":"open","Body":"Fix #3356.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3586","RelatedDescription":"Open PR \"L1-norm and L2-norm regularization doc\" (#3586)"},{"Id":"437323910","IsPullRequest":true,"CreatedAt":"2019-04-25T18:38:10","Actor":"shauheen","Number":"3585","RawContent":null,"Title":"Updates release with latest changes from master","State":"closed","Body":"This PR takes the documentation updates from master and updates the release branch.\r\n\r\n*No Squash*","Url":"https://github.com/dotnet/machinelearning/pull/3585","RelatedDescription":"Closed or merged PR \"Updates release with latest changes from master\" (#3585)"},{"Id":"437069538","IsPullRequest":true,"CreatedAt":"2019-04-25T17:49:26","Actor":"shauheen","Number":"3581","RawContent":null,"Title":"Updates release with latest changes from master","State":"closed","Body":"This PR takes the documentation updates from master and updates the release branch.\r\n\r\n~~Don't merge until we finalize a decision on #3558 issue.~~\r\n\r\n*No Squash*","Url":"https://github.com/dotnet/machinelearning/pull/3581","RelatedDescription":"Closed or merged PR \"Updates release with latest changes from master\" (#3581)"},{"Id":"437321774","IsPullRequest":false,"CreatedAt":"2019-04-25T17:48:33","Actor":"shmoradims","Number":"3584","RawContent":null,"Title":"Delete SamplsUtils project","State":"open","Body":"We stopped using SamplesUtils, as discussed in #2979. So SamplesUtils is unused code and can be removed.","Url":"https://github.com/dotnet/machinelearning/issues/3584","RelatedDescription":"Open issue \"Delete SamplsUtils project\" (#3584)"},{"Id":"437315060","IsPullRequest":true,"CreatedAt":"2019-04-25T17:30:52","Actor":"yaeldekel","Number":"3583","RawContent":null,"Title":"Add the correct name to the InitializationAlgorithm enum","State":"open","Body":"The name Yinyang actually refers to the implementation of the algorithm itself, not the initialization of the clusters. The algorithm for cluster initialization either random, kmeans++ or kmeans||\r\n(see the links in the trainer documentation [here](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.KMeansClustering/KMeansPlusPlusTrainer.cs#L48-L57)).","Url":"https://github.com/dotnet/machinelearning/pull/3583","RelatedDescription":"Open PR \"Add the correct name to the InitializationAlgorithm enum\" (#3583)"},{"Id":"437156886","IsPullRequest":false,"CreatedAt":"2019-04-25T11:49:15","Actor":"musab1234","Number":"3582","RawContent":null,"Title":"Realtime image classification using pretrained onnx model","State":"open","Body":"i am using this sample https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ObjectDetection_Onnx, but its loading images from folder , is there way/api to load image directly from memory and apply preprocess transformation? ","Url":"https://github.com/dotnet/machinelearning/issues/3582","RelatedDescription":"Open issue \"Realtime image classification using pretrained onnx model\" (#3582)"},{"Id":"436940782","IsPullRequest":true,"CreatedAt":"2019-04-25T06:24:39","Actor":"sfilipi","Number":"3574","RawContent":null,"Title":"Updating the binary samples to print the confusion matrix together wi…","State":"closed","Body":"Addresses part of #3573 adding the confusion matrix to some samples. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3574","RelatedDescription":"Closed or merged PR \"Updating the binary samples to print the confusion matrix together wi…\" (#3574)"},{"Id":"437024704","IsPullRequest":true,"CreatedAt":"2019-04-25T06:21:06","Actor":"sfilipi","Number":"3580","RawContent":null,"Title":"Adding the confusion matrix to binary samples.","State":"closed","Body":"Same change as #3574 because the later is refusing to kick a CI build. Closes #3573 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/3580","RelatedDescription":"Closed or merged PR \"Adding the confusion matrix to binary samples.\" (#3580)"},{"Id":"436995228","IsPullRequest":true,"CreatedAt":"2019-04-25T05:18:02","Actor":"codemzs","Number":"3579","RawContent":null,"Title":"Fix runtime exceptions in samples.","State":"closed","Body":"Fixes runtime exceptions in samples introduced by PR #3539 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3579","RelatedDescription":"Closed or merged PR \"Fix runtime exceptions in samples.\" (#3579)"},{"Id":"436990561","IsPullRequest":true,"CreatedAt":"2019-04-25T05:05:52","Actor":"artidoro","Number":"3578","RawContent":null,"Title":"Confusion matrix for multiclass samples","State":"closed","Body":"Together with #3574 fixes #3573.","Url":"https://github.com/dotnet/machinelearning/pull/3578","RelatedDescription":"Closed or merged PR \"Confusion matrix for multiclass samples\" (#3578)"},{"Id":"436940478","IsPullRequest":false,"CreatedAt":"2019-04-25T05:05:52","Actor":"sfilipi","Number":"3573","RawContent":null,"Title":"The Binary and Multiclass samples should print the confusion matrix together with the other metrics","State":"closed","Body":"The Binary and Multiclass samples should print the confusion matrix together with the other metrics\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3573","RelatedDescription":"Closed issue \"The Binary and Multiclass samples should print the confusion matrix together with the other metrics\" (#3573)"},{"Id":"436972276","IsPullRequest":true,"CreatedAt":"2019-04-25T03:56:29","Actor":"artidoro","Number":"3577","RawContent":null,"Title":"Reference to See Also section for example of usage in all estimators","State":"closed","Body":"FIxes #3485.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3577","RelatedDescription":"Closed or merged PR \"Reference to See Also section for example of usage in all estimators\" (#3577)"},{"Id":"436972065","IsPullRequest":true,"CreatedAt":"2019-04-25T01:52:39","Actor":"codemzs","Number":"3576","RawContent":null,"Title":"Fix broken XREF in XML documentation.","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3576","RelatedDescription":"Closed or merged PR \"Fix broken XREF in XML documentation.\" (#3576)"},{"Id":"436968997","IsPullRequest":true,"CreatedAt":"2019-04-25T01:38:45","Actor":"codemzs","Number":"3575","RawContent":null,"Title":"Add samples for linear SVM in XML documentation.","State":"closed","Body":"towards #3527\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3575","RelatedDescription":"Closed or merged PR \"Add samples for linear SVM in XML documentation.\" (#3575)"},{"Id":"436916124","IsPullRequest":true,"CreatedAt":"2019-04-24T21:39:15","Actor":"codemzs","Number":"3572","RawContent":null,"Title":"Fix incorrect link in ComputeLogisticRegressionStandardDeviation class documentation","State":"closed","Body":"fixes #3479\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3572","RelatedDescription":"Closed or merged PR \"Fix incorrect link in ComputeLogisticRegressionStandardDeviation class documentation\" (#3572)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-26T05:30:38.677655Z","RunDurationInMilliseconds":1060}