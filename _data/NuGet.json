{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11268092125","Type":"PullRequestEvent","CreatedAt":"2020-01-14T04:52:20","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7804","RelatedDescription":"Opened pull request \"Add ussc preview to functional tests validation\" (#7804) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11264167651","Type":"IssuesEvent","CreatedAt":"2020-01-13T17:47:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7628","RelatedDescription":"Closed issue \"[Azure Search] Remap legacy DNS to point to Azure Search Service\" (#7628) at NuGet/NuGetGallery","RelatedBody":"There is still large amounts of traffic going to legacy search ([App Insights query](https://ms.portal.azure.com#@33e01921-4d64-4f8c-a055-5bdaffd5e33d/blade/Microsoft_Azure_Monitoring_Logs/LogsBlade/resourceId/%2Fsubscriptions%2F685c4662-53d8-40f9-ac51-926097ede041%2FresourceGroups%2Fnuget-prod-0-v2v3search%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2Fnuget-prod-v2v3search/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA22TwW7bMAxA7wX6D5xPCZA2liVb0oBsKNZg6KWHdjsPlESlRmo5tRV0Hfbxk5KmnbGdLJHme6JMD%252FS0pzGO52e%252F4fmBBoLYdimA3Q4%252BAW76GXPz92TAjqANMCu%252Brr%252FBciQc7MPStbgpFjCJJezw8hac7nAfe9t3u0eKVCT6cnni74dH%252BGD7ELENIxQT2Oen1Q7tFjfUuo%252Fran1ZwHIJ6%252BAuYn9BwUE8NUI%252FY967GwcriP0YhzZsZnY%252Fxr67Tu2Fse3DeHlNu8f%252BJW3jzbHH17o72qQ8rM7PAFrvZwfOCgqUdV1roYRgjWikRmaxaoQWjVfMM1VAP8Dp5YpzpxpF5KUR0jm0xjKukAmJdWl5vozv97dfikXWwNSkGlM54SVL9UIrrZtKMzRaYKk8GT8xWUGqQc0FRyGMNElRa46yKqlOSns03b%252Bbpi5Pwvm64VIaErxGLcmRkyJ1W2mvp125SnNvVNnwCgWzxnhb85o0OjK1rQ6u9dVfpqmL1SKdzBOXzAtOWutKSM604krJRk1dxL2ubL6uhosKS%252BN441NMMlmWTInsus%252By1F7Yhv455Fl6tZ5Wh%252Be%252FH%252FcquLvj5N%252FmiV5BmhGLcXbMJiIkbB72OeTacd91OLS%252FCGy%252FD3E2B%252FMCpg2zt59lAbzs5ov%252F4k%252FRIzHz%252BsHRkBkH3A9wNNocH9IJcyIPPQ4Rtm1wq8S3W3LwBx%252Br866rAwAA)). Things to do:\r\n\r\n* Understand CORS policy? Talk to Barry\r\n* Consider updating the DNS to point legacy search to azure search. See: https://github.com/nuget/engineering/issues/2841\r\n\r\nRaw query:\r\n\r\n```\r\nrequests\r\n| where timestamp > ago(1d)\r\n| where name in (\"GET /search/diag\", \"GET /search/query\", \"GET /query\", \"GET /autocomplete\")\r\n//| where url !contains \"/search/query?q=packageid:E2E.\" // End-to-end tests\r\n| extend dId = tostring(customDimensions.DeploymentId)\r\n| extend Region =\r\n  iff(dId == \"a755594844164679a1ca264946f81f18\" or dId == \"233d868eef7b47ddacbc138a147a50c3\", \"USNC\",\r\n     iff(dId == \"86b2d4f718ee498996291ab94a08febf\" or dId == \"c4e86a9343a44b7ba14593a720e5c13c\", \"USSC\",\r\n       iff(dId == \"fe4df56377be435a97eded74a7529f98\" or dId == \"d293fb80632a41cbbfc535e9adeb5c2c\", \"EA\",\r\n         iff(dId == \"15493afe371f43e99924731983887688\" or dId == \"e3f92c47a56342a0bd36f3f971700184\", \"SEA\", \"Unknown\")\r\n       )\r\n     )\r\n  )\r\n| extend RegionAndRequestName = strcat(Region, \" \", name) \r\n| summarize count() by bin(timestamp, 30m), RegionAndRequestName, Region, name\r\n| order by count_ desc\r\n| render barchart kind=stacked \r\n```\r\n\r\nThis investigation needs to be done before we can delete legacy search resources."},{"Id":"11252220237","Type":"IssuesEvent","CreatedAt":"2020-01-11T06:46:32","Actor":"gsscoder","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7792","RelatedDescription":"Closed issue \"A new version of a package shows previous icon\" (#7792) at NuGet/NuGetGallery","RelatedBody":"I've recently pushed a release with a new icon, but I still se the previous one on NuGet.org.\r\n\r\n**package link**:\r\nhttps://www.nuget.org/packages/CSharpx/1.2.3-rc2\r\n\r\n**github of the project**:\r\nhttps://github.com/gsscoder/csharpx\r\n\r\nI had to use deprecated `PackageIconUrl` because, it's seem impossible to point a file with `PackageIcon`.\r\n\r\nThanks in advance."},{"Id":"11251270497","Type":"IssuesEvent","CreatedAt":"2020-01-10T23:41:47","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7774","RelatedDescription":"Closed issue \"Gallery feedback button shifts all the content to the right\" (#7774) at NuGet/NuGetGallery","RelatedBody":"1. Go to https://dev.nugettest.org\r\n2. Click on the feedback button.\r\n\r\nNotice the content shifts right as the feedback dialog appears.\r\nAt the same time the feedback button gets partially obscured by the scrollbar:\r\n![image](https://user-images.githubusercontent.com/102933/70952086-1b734880-201a-11ea-964e-57f42fb9430a.png)\r\n"},{"Id":"11242756741","Type":"PullRequestEvent","CreatedAt":"2020-01-10T00:24:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7803","RelatedDescription":"Merged pull request \"Minor app service related changes\" (#7803) at NuGet/NuGetGallery","RelatedBody":"Renamed a variable and a method to emphasize their relation to cloud service infrastructure (not the cloud hosting in general).\r\nRemoved duplicate code that figured out machine name.\r\nAdded `<applicationInitialization>` section to the web.config."},{"Id":"11242603265","Type":"PullRequestEvent","CreatedAt":"2020-01-09T23:50:47","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7803","RelatedDescription":"Opened pull request \"Minor app service related changes\" (#7803) at NuGet/NuGetGallery","RelatedBody":"Renamed a variable and a method to emphasize their relation to cloud service infrastructure (not the cloud hosting in general).\r\nRemoved duplicate code that figured out machine name.\r\nAdded `<applicationInitialization>` section to the web.config."},{"Id":"11242468363","Type":"IssuesEvent","CreatedAt":"2020-01-09T23:22:54","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7766","RelatedDescription":"Closed issue \"[PackageType]Update Gallery to reject invalid package types\" (#7766) at NuGet/NuGetGallery","RelatedBody":"Currently, gallery appears to do very little validation of packageTypes node on package upload.\r\nThis allows packageTypes that are invalid (according to spec) to be pushed to gallery.\r\n\r\nThese package types are effectively meaningless, and should be rejected at push time/nuspec validation time."},{"Id":"11242462744","Type":"IssuesEvent","CreatedAt":"2020-01-09T23:21:49","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7780","RelatedDescription":"Closed issue \"[PackageType]Reflowing packages with package types cause the records to be duplicated\" (#7780) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/71047031-1af8b180-20ef-11ea-9a5a-150ddaffb3f1.png)\r\n\r\nThere should only be one."},{"Id":"11242358102","Type":"PullRequestEvent","CreatedAt":"2020-01-09T23:02:17","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7799","RelatedDescription":"Merged pull request \"Functional test script update to wait for the service to start up after the deployment\" (#7799) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2863\r\n\r\nApp service deployment reports success way before the service initialization completes successfully and is able to serve requests. This breaks our tests that encounter 502 responses and fail.\r\nThis change adds a delay and a response test to the test run script to make sure we run tests against the working service."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11266974447","Type":"IssuesEvent","CreatedAt":"2020-01-14T00:34:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9036","RelatedDescription":"Closed issue \"Make the dotnet.exe functional tests runnable from Visual Studio, speed up the Dotnet.Integration.Test suite by 40%\" (#9036) at NuGet/Home","RelatedBody":""},{"Id":"11266875591","Type":"IssuesEvent","CreatedAt":"2020-01-14T00:13:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6631","RelatedDescription":"Closed issue \"NuGet package manager should display 'Owner' field for NuGet.org packages\" (#6631) at NuGet/Home","RelatedBody":"Author being a free text field is often misused and causes confusion to the developers consuming packages. The proposal is to show the owner information in PM UI when the information is available from the feed/repository like NuGet.org.\r\n\r\n "},{"Id":"11266820755","Type":"IssuesEvent","CreatedAt":"2020-01-14T00:02:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8557","RelatedDescription":"Closed issue \"[Test Failure][Deprecation] Deprecated info of the deprecated package “test10k” will show on PM UI right pane with 30 seconds’ delay and VS hanging\" (#8557) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.3.0.6224\r\nVS Version: D16.3\\29305.141\r\nOS: Windows-10-Enterprise-19H1-04-05-2019\r\n## Detailed repro steps \r\n1. Launch VS and create a project. [e.g. Console Application (.NET Core)]\r\n2. Add a deprecated package source: https://apidev.nugettest.org/v3-index/index.json.\r\n3. Open PM UI of the project, select the above deprecated package source and search the deprecated package “test10k” in Browse tab.\r\n4. Click the package on the left pane and look at the right pane.\r\n## Expected\r\nDeprecated info of the package should show immediately.\r\n## Actual\r\nDeprecated info of the deprecated package “test10k” will show on PM UI right pane with 30 seconds’ delay and VS hung when loading the deprecated info as below video.\r\n\r\n![DeprecationInfoDelay](https://user-images.githubusercontent.com/20632625/64420367-b8e0e700-d0d1-11e9-8300-4292e537cdeb.gif)\r\n\r\n"},{"Id":"11265965296","Type":"IssuesEvent","CreatedAt":"2020-01-13T21:42:44","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3119","RelatedDescription":"Closed issue \"Prevent narrator from narrating hidden UIElements in PackageManager UI\" (#3119) at NuGet/Home","RelatedBody":"Accessibility issues.\n"},{"Id":"11265140590","Type":"IssuesEvent","CreatedAt":"2020-01-13T19:53:03","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9054","RelatedDescription":"Opened issue \"Insertion of 5.5.0-preview2.6368\" (#9054) at NuGet/Home","RelatedBody":"* [ ] VS\r\n* [ ] dotnet CLI"},{"Id":"11262810884","Type":"IssuesEvent","CreatedAt":"2020-01-13T15:18:32","Actor":"gsscoder","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9053","RelatedDescription":"Opened issue \"Feature request: better message if package ID already exists\" (#9053) at NuGet/Home","RelatedBody":"If *package ID* exists I get:\r\n```\r\ninfo : Push di Tagger.1.0.5.nupkg in 'https://www.nuget.org/api/v2/package'...\r\ninfo :   PUT https://www.nuget.org/api/v2/package/\r\ninfo :   Forbidden https://www.nuget.org/api/v2/package/ 1398 ms\r\nerror: Response status code does not indicate success: 403 (The specified API key is invalid, has expired, or does not have permission to access the specified package.).\r\n```\r\nI discovered it using the web gallery instead of command line.\r\n\r\nA meaningful message after this kind of fail for `dotnet pack` will be very useful!\r\n\r\nThank you for **excellent job**."},{"Id":"11257093283","Type":"IssuesEvent","CreatedAt":"2020-01-12T20:26:42","Actor":"avivanoff","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9052","RelatedDescription":"Opened issue \"PackageReference and transitive dependencies\" (#9052) at NuGet/Home","RelatedBody":"A while back you [changed the default behavior of build dependency asset to transitive](https://github.com/NuGet/Home/issues/6091). I was reading discussions, as well as [spec](https://github.com/NuGet/Home/wiki/Allow-package--authors-to-define-build-assets-transitive-behavior), but cannot find anything about potential [issue with transitive dependencies](https://curia.me/net-core-transitive-references-and-how-to-block-them/). I will sum it up here:\r\n\r\n- Project DAL: references the Json.NET NuGet package and defines the class ClassDB;\r\n- Project BLL: references the DAL project;\r\n- Project UI: references the BLL project.\r\n\r\nIn this case, UI is able to access both the Json.NET package and the ClassDB class, which his quite dangerous, because it could let the developers to skip the architectural layers set up during design phase.\r\n\r\nIs there something I am missing?"},{"Id":"11254108487","Type":"IssuesEvent","CreatedAt":"2020-01-11T21:01:02","Actor":"wli3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9051","RelatedDescription":"Opened issue \"dotNet Core SDK 3.1.100 failing to restore because of bad versions\" (#9051) at NuGet/Home","RelatedBody":"_From @predatorian3 on Saturday, January 11, 2020 1:53:54 AM_\r\n\r\n# Issue Description\r\n\r\nOn a brand new install of dotNet Core SDK 3.1.100 for Windows 10 x64, It seems to be missing dependencies with the install. Should I need to include other feeds to get the `dotnet restore` to work after doing a `dotnet new xunit`? I was following this document: [Organizing and testing projects with the .NET Core command line](https://docs.microsoft.com/en-us/dotnet/core/tutorials/testing-with-cli#testing-the-sample). Some of the references are a little old so maybe something changed? \r\n\r\n## Steps performed\r\n\r\n```\r\ndotnet new xunit\r\ndotnet restore\r\n```\r\n\r\n## System Information\r\n\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>systeminfo\r\n\r\nHost Name:                 FENIX\r\nOS Name:                   Microsoft Windows 10 Pro\r\nOS Version:                10.0.18362 N/A Build 18362\r\nOS Manufacturer:           Microsoft Corporation\r\n```\r\n\r\n## `dotnet` Errors\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>dotnet restore \r\nRestore completed in 25.54 ms for C:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\src\\NewTypes\\NewTypes.csproj.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'Microsoft.NET.Test.Sdk (>= 16.2.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'xunit (>= 2.4.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'xunit.runner.visualstudio (>= 2.4.0)' for '.NETCoreApp,Version=v3.1'.\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj : error NU1100: Unable to resolve 'coverlet.collector (>= 1.0.1)' for '.NETCoreApp,Version=v3.1'.\r\n  Restore failed in 150.83 ms for C:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests\\NewTypesTests.csproj.\r\n```\r\n\r\n## `dotnet` information\r\n\r\n```\r\nC:\\Users\\Phillip\\Desktop\\dotNetCore\\01_NewTypes\\test\\NewTypesTests>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n_Copied from original issue: dotnet/sdk#4156_"},{"Id":"11253939593","Type":"IssuesEvent","CreatedAt":"2020-01-11T19:47:15","Actor":"menaheme","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8412","RelatedDescription":"Closed issue \"Nuget MSBuild auto-detection picks up msbuild.exe 14 on a machine that has VS 2017 installed\" (#8412) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe\r\n\r\nNuGet version (4.9.3.5777):\r\n\r\nVS version (if appropriate): 2017 , 15.9 (other versions of VS also installed. 2015)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 7 v 6.1.7601\r\n\r\n## Detailed repro steps:\r\n\r\n1. run Nuget Restore <path to sln>  -NoCache -NonInteractive\r\n\r\n### Actual result:\r\n\r\nMSBuild auto-detection finds MSbuild ver 14, that is indeed installed on the machine. but visual studio 2017 came with MSBuild version 15.\r\n\r\n### Expected result:\r\nMSBuild auto-detection to find MSBuild version 15\r\n\r\n### note:\r\nthis does not happen on all dev stations, and build agents. temporary fix - we use the specify msbuild version argument.\r\n\r\n\r\n"},{"Id":"11251511889","Type":"PullRequestEvent","CreatedAt":"2020-01-11T00:51:56","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9050","RelatedDescription":"Opened pull request \"document client product dev process\" (#9050) at NuGet/Home","RelatedBody":"Fixes: #8994"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-14T05:30:46.6649267Z","RunDurationInMilliseconds":1989}