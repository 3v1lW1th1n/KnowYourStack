{"Data":{"Blog":{"FeedItems":[{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8236155378","Type":"IssuesEvent","CreatedAt":"2018-09-09T14:04:46","Actor":"mrklintscher","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2166","RelatedDescription":"Opened issue \"C:\\Users\\Torsten Klinger\\AppData\\Local\\Xamarin\\Mono for Android\\Keystore\\Royal Flush Entertainment\\Royal Flush Entertainment.keystore\"\" (#2166) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build and archive app\r\n2. Sign the app\r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nSigning app with keystore certificate.\r\n\r\n### Actual Behavior\r\n\r\nkeystore was tampered with or password was incorrect\r\n\r\nThe entered password is 100 % correct.\r\n\r\n### Version Information\r\n\r\nVS 2107 Build 15\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8235734558","Type":"IssuesEvent","CreatedAt":"2018-09-09T08:41:59","Actor":"mbikovitsky","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2165","RelatedDescription":"Opened issue \"HAXM acceleration not working with emulator versions >= 27.2.7\" (#2165) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n0. Use Windows 10 April 2018 Update (version 1803).\r\n1. Install Xamarin, the Android emulator and HAXM via the Visual Studio 2017 installer.\r\n2. Launch an x86 device image.\r\n\r\n### Expected Behavior\r\n\r\nHAXM acceleration is used.\r\n\r\n### Actual Behavior\r\n\r\nThe emulator attempts to use the Windows Hypervisor Platform (WHPX), as evidenced by the following command-line: `\"C:\\Program Files (x86)\\Android\\android-sdk\\emulator\\emulator.exe\" \"-verbose\" \"-feature\" \"WindowsHypervisorPlatform\"`. This fails because Hyper-V is not installed on the machine, and so acceleration is completely disabled.\r\n\r\n### Version Information\r\n\r\n```\r\nXamarin   4.11.0.756 (d15-8@b66ff7180)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Log File\r\n\r\nThe Android Device Manager log clearly shows that HAXM is detected correctly:\r\n\r\n```\r\n[18-09-08 23:22:33.30] Detecting component Intel x86 Emulator Accelerator (HAXM installer) r7.2.0 [Extra: (Intel Corporation)] in directory 'C:\\Program Files (x86)\\Android\\android-sdk\\extras/intel/Hardware_Accelerated_Execution_Manager'\r\n[18-09-08 23:22:33.30]   Found revision 7.2.0 on the system\r\n```\r\n\r\nHowever, when an image is launched, the following is written to the log:\r\n\r\n```\r\n[18-09-08 23:28:42.18] Going to start Android_Accelerated_x86_Oreo\r\n[18-09-08 23:28:42.19] [HypervisorManager] Checking for accelerated emulator: True\r\n[18-09-08 23:28:42.19] Executing command: cmd \"/C\" \"sc\" \"query\" \"intelhaxm\"\r\n[18-09-08 23:28:42.24] [HypervisorManager] WHPX + HAXM\r\n[18-09-08 23:28:42.24] [EmulatorManager] Adding WHPX flag\r\n```\r\n\r\nAgain, HAXM is detected, but the emulator is launched with WHPX nonetheless.\r\n\r\n### Additional Notes\r\n\r\nI managed to track the issue down to the `StartProcess` method in the `Xamarin.DeviceManager.Common.EmulatorManager` class, inside `AndroidDevices.exe` (pardon my use of dotPeek):\r\n\r\n```c#\r\nif (AppInfo.OSInformation.SupportsNativeHypervisor && this.EmulatorComponentSupportsHypervisorPlatform)\r\n{\r\n    Logger.Log(\"[EmulatorManager] Adding WHPX flag\");\r\n    stringList.InsertRange(0, (IEnumerable<string>) new string[3]\r\n    {\r\n        \"-verbose\",\r\n        \"-feature\",\r\n        \"WindowsHypervisorPlatform\"\r\n    });\r\n    this.runningWithWHPX = true;\r\n}\r\n```\r\n\r\nAs can be seen, the emulator is directed to use WHPX when both the OS and the emulator support it:\r\n\r\n- The `AppInfo.OSInformation.SupportsNativeHypervisor` property returns `true` when the Windows build is 1803 or greater.\r\n- The `EmulatorComponentSupportsHypervisorPlatform` property tests whether the installed emulator is version 27.2.7 or greater:\r\n\r\n```c#\r\npublic virtual bool EmulatorComponentSupportsHypervisorPlatform\r\n{\r\n    get\r\n    {\r\n        return this.GetEmulatorComponent(EmulatorManager.EmulatorFindMode.FindInstalled)?.InstalledRevision >= EmulatorManager.MIN_HYPERVISOR_SUPPORTED_EMU_VERSION;\r\n    }\r\n}\r\n```\r\n\r\nHowever, no check is made to ensure that WHPX is actually enabled _on the system_. This results in no acceleration being used by the emulator."},{"Id":"8234231595","Type":"PullRequestEvent","CreatedAt":"2018-09-08T11:56:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2164","RelatedDescription":"Opened pull request \"[download-bundle] Update mono bundle download URL\" (#2164) at xamarin/xamarin-android","RelatedBody":"Around 2018-Aug-15, the Jenkins config for xamarin-android was changed\r\nin a way which [altered the URL for where files are uploaded][0] so\r\nthat it contained `${BUILD_NUMBER}`, which is a value which increments\r\non every build.  A consequence of this change is that the bundle could\r\nno longer used, as it could no longer be *found*, as there is no way\r\nof knowing what `${BUILD_NUMBER}` could possibly be, which in turn\r\ncaused increased build times for PRs and master builds, as mono would\r\nnow always need to be rebuilt.\r\n\r\nOn 2018-Sep-7, the [Jenkins config was updated][1] to remove\r\n`${BUILD_NUMBER}` from the URL, allowing for \"static\" URLs which works\r\nwith our bundle mechansism.\r\n\r\nWith the removal of `${BUILD_NUMBER}`, we're good, right?  The bundle\r\nshould now be used?\r\n\r\nNot so much.  One other part needs updating: the *rest* of the URL\r\n*also* changed as part of the 2018-Aug-15 change!\r\n`download-bundle.targets` was attempting to download e.g.:\r\n\r\n\thttps://xamjenkinsartifact.azureedge.net/xamarin-android/xamarin-android/bin/Debug/bundle-v21-h7419ab9f-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=cca6805.zip\r\n\r\nHowever, the *correct* URL we now need to download is e.g.:\r\n\r\n\thttps://xamjenkinsartifact.blob.core.windows.net/mono-jenkins/xamarin-android/bin/Debug/bundle-v21-h7419ab9f-Debug-Darwin-libzip=b95cf3f,llvm=bdb3a11,mono=cca6805.zip\r\n\r\nUpdate `$(_AzureBaseUri)` so that we now download from the correct\r\nbase URL, so that the mono bundle can actually be downloaded.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/jobConfigHistory/showDiffFiles?timestamp1=2018-07-23_19-09-25&timestamp2=2018-08-15_22-31-28\r\n[1]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/jobConfigHistory/showDiffFiles?timestamp1=2018-08-31_14-49-55&timestamp2=2018-09-07_18-49-53"},{"Id":"8233334797","Type":"PullRequestEvent","CreatedAt":"2018-09-07T23:56:33","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2163","RelatedDescription":"Opened pull request \"[docs] Update $(AndroidGenerateLayoutBindings) info\" (#2163) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1671\r\nContext: https://github.com/xamarin/xamarin-android/issues/1669\r\n\r\nThe new Bindings and Code-Behind features were breaking some existing\r\nprojects, so the default value of `$(AndroidGenerateLayoutBindings)` was\r\nchanged from `True` to `False`.  This commit adjusts the documentation\r\naccordingly so that users will know how to enable those features if they\r\nwant to try them.  This new wording can be changed back once the default\r\nvalue of `$(AndroidGenerateLayoutBindings)` is switched back to `True`."},{"Id":"8232555064","Type":"PullRequestEvent","CreatedAt":"2018-09-07T19:59:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2162","RelatedDescription":"Opened pull request \"[linker] move StripEmbeddedLibraries into the linker\" (#2162) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1092\r\n\r\nThe `StripEmbeddedLibraries` MSBuild task can take 1-2 seconds, and it\r\nmainly removes `__AndroidLibraryProjects__.zip` from assemblies.\r\n\r\nIf we moved this to happen during linking, it has various benefits:\r\n- The linker already has every assembly opened and loaded.\r\n- We know if the linker is going to `Skip`/`Delete` an assembly, so we\r\n  can likewise skip it.\r\n- The linker writes all the assemblies out at the end, so we don't\r\n  have a second \"write\" step.\r\n\r\nChanges to make this happen:\r\n- Removed the `StripEmbeddedLibraries` MSBuild task and related\r\n  targets\r\n- Removed `$(_AndroidStripFlag)` from our targets, since it is no\r\n  longer used\r\n- Created a new `StripEmbeddedLibraries` linker step that runs late\r\n  during linking\r\n- Removed a `RemoveLibraryResourceZip` linker step, as it seemed to be\r\n  duplicative.\r\n\r\nI timed before and after with the Xamarin.Forms test project:\r\n\r\n    .\\bin\\Debug\\bin\\xabuild .\\tests\\Xamarin.Forms-Performance-Integration\\Droid\\Xamarin.Forms.Performance.Integration.Droid.csproj /p:Configuration=Release /t:Clean\r\n    .\\bin\\Debug\\bin\\xabuild .\\tests\\Xamarin.Forms-Performance-Integration\\Droid\\Xamarin.Forms.Performance.Integration.Droid.csproj /p:Configuration=Release /t:Build /bl\r\n\r\nBefore:\r\n\r\n     1233 ms  StripEmbeddedLibraries                     1 calls\r\n    14925 ms  LinkAssemblies                             1 calls\r\n\r\nAfter:\r\n\r\n    15437 ms  LinkAssemblies                             1 calls\r\n\r\nAs expected, `LinkAssemblies` will be slightly slower. But since\r\n`StripEmbeddedLibraries` is not called at all, we have a net gain of\r\naround 700ms.\r\n\r\nOnce this has been merged and working for `Release` builds, I plan to\r\ndo some further research to find out if running the new\r\n`StripEmbeddedLibraries` linker step will help for `Debug` builds. It\r\ncould be a net performance improvement, if the time taken to remove\r\nthese files improves deployment and app startup times."},{"Id":"8232325853","Type":"IssuesEvent","CreatedAt":"2018-09-07T19:05:10","Actor":"PureWeen","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2161","RelatedDescription":"Opened issue \"Android Forms not building if api 28 is not installed and Target Framework is set to Use Latest\" (#2161) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nOn VS for Mac\r\n\r\n1. install sdk platform 27\r\n2. uninstall sdk platform 28\r\n3. create new Xamarin forms project\r\n4. Set Target Framework to \"Use Latest\"\r\n5. Try to compile\r\n\r\n/Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets(5,5): Error: Your project is not referencing the \"MonoAndroid,Version=v8.1\" framework. Add a reference to \"MonoAndroid,Version=v8.1\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore. (BuildFailureWith27AndUseLatest.Android)\r\n\r\n\r\n[BuildFailureWith27AndUseLatest.zip](https://github.com/xamarin/xamarin-android/files/2362189/BuildFailureWith27AndUseLatest.zip)\r\n\r\nIf you install sdk platform 28 then \"Use Latest\" is able to compile\r\n\r\n### Expected Behavior\r\n\r\nProject should compile even if you don't have api 28 installed\r\n\r\n### Actual Behavior\r\n\r\nProject doesn't compile if you only have api 27 installed and do not have api 28 installed\r\n\r\n### Version Information\r\n\r\nI've also tested this on Alpha which is\r\n7.8 (build 338)\r\nXamarin.Android 9.1.0.12\r\n\r\nHere is the Version info from stable\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.3 (build 1)\r\nInstallation UUID: 72a6cb22-788b-4376-9a6e-84deacf6730b\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/shane/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.14 (Visual Studio Enterprise)\r\nHash: 1a6e2786\r\nBranch: HEAD\r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706030001\r\nGit revision: 18a828b090fb6d2cfb0b3576cd6d7eb764f29753\r\nBuild date: 2018-08-30 15:12:59+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f4aee57d7b72fa4be6b6d585ac90d614f20fa426\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nEditorConfig 1.2\r\n```\r\n"},{"Id":"8232241267","Type":"IssuesEvent","CreatedAt":"2018-09-07T18:46:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1584","RelatedDescription":"Closed issue \"Use implicit doc redirection\" (#1584) at xamarin/xamarin-android","RelatedBody":"The Windows `.vsix` file is *huge*, for two reasons (among others):\r\n\r\n1. We have to ship `Mono.Android.dll` for *14* (soon to be *15*) `$(TargetFrameworkVersion)` values, and *each one* is around 20MB in size.\r\n2. *Documentation XML Files*.\r\n\r\nDocumentation is *larger than* the assemblies:\r\n\r\n```\r\n$ unzip -l ~/Downloads/Xamarin.Android.Sdk.8.3.0.18.vsix | grep xml$\r\n 57309057  04-17-2018 15:07   $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.2/Mono.Android.xml\r\n      131  04-17-2018 15:07   $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v7.0/AndroidApiInfo.xml\r\n 57309057  04-17-2018 15:07   $ReferenceAssemblies/Microsoft/Framework/MonoAndroid/v4.3/Mono.Android.xml\r\n...\r\n```\r\n\r\n~57 *MB* for `Mono.Android.xml`, for *each* `$(TargetFrameworkVersion)`. (Then there's `mscorlib.xml`, which is full of `To be added` docs, and thus useless...)\r\n\r\nHowever, documentation supports \"redirection\":\r\n\r\n```xml\r\n<doc redirect=\"%PROGRAMFILESDIR%Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.X\\mscorlib.xml\" />\r\n```\r\n\r\nWe should check to see if `/doc/@redirect` can contain *relative* paths, and if it *can*, we can replace all but the \"latest\" `Mono.Android.xml` with a \"redirect\" to the latest, a'la:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<doc redirect=\"..\\v8.1\\Mono.Android.xml\" />\r\n```\n\n> VS bug [#603386](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/603386)"},{"Id":"8232193496","Type":"IssuesEvent","CreatedAt":"2018-09-07T18:35:46","Actor":"mathieubourgeois","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2160","RelatedDescription":"Opened issue \"Using AndroidAarLibrary will fail on aar containing impl_internal* jar\" (#2160) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In a Xamarin.Android project (not a bindings project) add an AndroidAarLibrary reference to any library containing an impl_internal* internal jar (I had the issue with support-v4-24.1.1.aar from the Android Support library)\r\n2. Try to build the project\r\n\r\n### Expected Behavior\r\n\r\nApplication compiles as usual, aar resources/java code/manifest info are used in the final application.\r\n\r\n### Actual Behavior\r\n\r\nCompilation fails with the following error :\r\n\r\n```\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: Échec inattendu de la tâche \"ResolveLibraryProjectImports\". [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: System.IO.FileNotFoundException: Le fichier '<...>\\internal_impl-24.1.1.jar' est introuvable. [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018: Nom de fichier : '<...>\\internal_impl-24.1.1.jar' [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.HashFile(String filename, HashAlgorithm hashAlg) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.HashString(String s) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.<>c.<Extract>b__60_9(String entryFullName) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tools.Files.ExtractAll(ZipArchive zip, String destination, Action`2 progressCallback, Func`2 modifyCallback, Func`2 deleteCallback, Boolean forceUpdate) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract(DirectoryAssemblyResolver res, ICollection`1 jars, ICollection`1 resolvedResourceDirectories, ICollection`1 resolvedAssetDirectories, ICollection`1 resolvedEnvironments) [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute() [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [<...>]\r\nError: <...>\\Xamarin\\Android\\Xamarin.Android.Common.targets(1196,2): error MSB4018:    à Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [<...>]\r\n```\r\n\r\n### Extra informations\r\n\r\n- The same project using `LibraryProjectZip` in a fake bindings project works fine (but we don't need the bindings, so an extra dll/so that can be avoided is a good thing)\r\n- I took a look at the code that seems to be causing the issue, it comes from the initial implementation of `AndroidAarLibrary` in `ResolveLibraryProjectImport.cs` :\r\n\r\n```\r\n\t\t\t\tusing (var zip = MonoAndroidHelper.ReadZipFile (aarFile.ItemSpec)) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tupdated |= Files.ExtractAll (zip, importsDir, modifyCallback: (entryFullName) => {\r\n\t\t\t\t\t\t\tvar entryFileName = Path.GetFileName (entryFullName);\r\n\t\t\t\t\t\t\tvar entryPath = Path.GetDirectoryName (entryFullName);\r\n\t\t\t\t\t\t\tif (entryFileName.StartsWith (\"internal_impl\", StringComparison.InvariantCulture)) {\r\n\t\t\t\t\t\t\t\tvar hash = Files.HashString (entryFileName);\r\n\t\t\t\t\t\t\t\treturn Path.Combine (entryPath, $\"internal_impl-{hash}.jar\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn entryFullName;\r\n\t\t\t\t\t\t}, deleteCallback: (fileToDelete) => {\r\n\t\t\t\t\t\t\treturn !jars.Contains (fileToDelete);\r\n\t\t\t\t\t\t}, forceUpdate: false);\r\n\r\n\t\t\t\t\t\tif (Directory.Exists (importsDir) && (updated || !stamp.Exists)) {\r\n\t\t\t\t\t\t\tLog.LogDebugMessage (\"Touch {0}\", stamp.FullName);\r\n\t\t\t\t\t\t\tstamp.Create ().Close ();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (PathTooLongException ex) {\r\n\t\t\t\t\t\tLog.LogErrorFromException (new PathTooLongException ($\"Error extracting resources from \\\"{aarFile.ItemSpec}\\\"\", ex));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n``` \r\n\r\nFrom what I can see, it extracts the aar file and needs to check the hashes of the internal jar to see if something actually changed (my initial guess at least). However, the commit (6a8ea2bbdbad65f1f46ba60a343506c92d1e0a1e) doesn't mention anything about this so I'm not entirely sure if that's supposed to be the case.\r\n\r\nSo, when it finds internal_impl* in the aar, it tries to hash `\"internal_impl*\"` file without any path. However, this means it checks at the base of the project (or the cwd I would guess) for that file, but there's no reason for it to be there, I don't think it would be extracted there anyway) Therefore, we have the crash.\r\n\r\nI guess the fix is probably to check two things\r\na) consider the proper path to the unzipped file\r\nb) consider an empty hash if the unzipped file doesn't exist yet\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.8.1\r\nVisualStudio.15.Release/15.8.1+28010.2003\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-20007-36350-AA982\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05074.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18201.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18201.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18201.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18201.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18201.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27924.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.27825.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.8.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8237386926","Type":"IssuesEvent","CreatedAt":"2018-09-10T02:38:02","Actor":"DarkChowder","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3753","RelatedDescription":"Opened issue \"Release note links don't lead to release notes\" (#3753) at xamarin/Xamarin.Forms","RelatedBody":"I go to this page\r\nhttps://developer.xamarin.com/releases/\r\nScroll down, and find this link\r\nhttps://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-3.2/\r\nWhich takes me to a page that says to go to this link\r\nhttps://developer.xamarin.com/guides/cross-platform/xamarin-forms/\r\nWhich has a link that goes here\r\nhttps://developer.xamarin.com/releases/xamarin-forms/\r\n\r\nI end up in a loop, and none of the pages have release notes."},{"Id":"8236467799","Type":"PullRequestEvent","CreatedAt":"2018-09-09T17:23:38","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3752","RelatedDescription":"Opened pull request \"WPF - Fix Local store not persistant when restarting App\" (#3752) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix : Local store not persistant when restarting App in Xamarin Forms WPF\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #3541"},{"Id":"8236115167","Type":"PullRequestEvent","CreatedAt":"2018-09-09T13:37:36","Actor":"LRP-sgravel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3751","RelatedDescription":"Opened pull request \"Make markers available to subclasses\" (#3751) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdd method to retrieve native Marker from a pin in Android MapRenderer.  No tests added as it is a simple Extract Method refactoring.\r\n\r\n### Issues Resolved ### \r\nEases subclassing of MapRenderer to extend pins.  Needed to build a Skia Maps extension Nuget.\r\n\r\n### API Changes ###\r\nNone\r\n\r\nAdded:\r\nprotected Marker GetMarkerForPin(Pin pin)\r\n\r\nChanged:\r\nN/A\r\n \r\n Removed:\r\nN/A\r\n \r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nN/A\r\n\r\n### Testing Procedure ###\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"8236042024","Type":"PullRequestEvent","CreatedAt":"2018-09-09T12:45:53","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3750","RelatedDescription":"Opened pull request \"WPF - Fix Width and Height measurement when GetDesiredSize\" (#3750) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nFix Width and Height measurement when GetDesiredSize\r\n\r\n### Issues Resolved ### \r\n- fixes #1588, #3308, #3558 \r\n\r\n### Platforms Affected ### \r\n- WPF\r\n"},{"Id":"8234690340","Type":"IssuesEvent","CreatedAt":"2018-09-08T17:24:16","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3749","RelatedDescription":"Opened issue \"[Core] Isn't DataTemplateSelector the wrong name?\" (#3749) at xamarin/Xamarin.Forms","RelatedBody":"This class is inheriting from `DataTemplate` which technically makes it another data template. A selector seems to imply a different kind of class that provides functionality around the object it works with. Shouldn't it be actually called something like `MultiDataTemplate`? I'm wondering if this class can be marked obsolete in favor of something that serves its purpose."},{"Id":"8234097808","Type":"IssuesEvent","CreatedAt":"2018-09-08T10:08:38","Actor":"Jose7777","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3748","RelatedDescription":"Opened issue \"[iOS] EntryRenderer ArgumentNullException: Value cannot be null. Parameter name: fromPosition\" (#3748) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThere seems to be a problem with new SelectionLength functionality in XF 3.2\r\n\r\nMy solution opens a complex page from an initial page; for performance reasons i cache the instance of the complex page.\r\n\r\nWith 3.2-pre2, when i push the page a second time after editing an Entry with nonempty value, the application crashes.\r\nIf the entry is not edited there is no crash.\r\n\r\n\r\n### Expected Behavior\r\n\r\nNo crash\r\n\r\n\r\n### Actual Behavior\r\n\r\nCrash with following stacktrace\r\n\r\nUnhandled Exception:\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: fromPosition\r\n  at UIKit.UITextField.GetPosition (UIKit.UITextPosition fromPosition, System.nint offset) [0x0003d] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UITextField.g.cs:574 \r\n  at Xamarin.Forms.Platform.iOS.EntryRenderer.UpdateCursorSelection () [0x00066] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\EntryRenderer.cs:345 \r\n  at Xamarin.Forms.Platform.iOS.EntryRenderer.OnElementChanged (Xamarin.Forms.Platform.iOS.ElementChangedEventArgs`1[TElement] e) [0x00124] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\EntryRenderer.cs:116 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x0012a] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.Vi\r\nsualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000de] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\r\n\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000de] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.iOS.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00000] in <e4b6f1dd03224a8e9d9ccd926c676fb9>:0 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.OnChildAdded (Xamarin.Forms.VisualElement view) [0x0003d] in D:\\a\\1\\s\\Xamari\r\nn.Forms.Platform.iOS\\VisualElementPackager.cs:97 \r\n  at Xamarin.Forms.Platform.iOS.VisualElementPackager.Load () [0x0001e] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\VisualElementPackager.cs:46 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.ViewDidLoad () [0x00086] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:123 \r\n  at (wrapper managed-to-native) ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper(intptr,intptr)\r\n  at UIKit.UIViewController.get_View () [0x0002a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/UIKit/UIViewController.g.cs:2938 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.get_NativeView () [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:41 \r\n  at Xamarin.Forms.Platform.iOS.PageRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x0004f] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\PageRenderer.cs:56 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xama\r\nrin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.SetupPage (Xamarin.Forms.Page page, System.Int32 index) [0x0000a] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:289 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.Reset () [0x0001c] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:266 \r\n  at Xamarin.Forms.Internals.NotifyCollectionChangedEventArgsExtensions.Apply (System.Collections.Specialized.NotifyCollectionChangedEventArgs self, System.Action`3[T1,T2,T3] insert, System.Action`2[T1,T2] removeAt, System.Action reset) [0x001f9] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Internals\\NotifyCollectionChangedEventArgsExtensions.cs:79 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.OnPagesChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:201 \r\n  at Xamarin.Forms.Platform.iOS.TabbedRenderer.SetElement (Xamarin.Forms.VisualElement el\r\nement) [0x0005b] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\TabbedRenderer.cs:66 \r\n  at Xamarin.Forms.Platform.iOS.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) [0x00014] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Platform.cs:198 \r\n  at Xamarin.Forms.Platform.iOS.NavigationRenderer.CreateViewControllerForPage (Xamarin.Forms.Page page) [0x00008] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\NavigationRenderer.cs:353 \r\n  at Xamarin.Forms.Platform.iOS.NavigationRenderer+<OnPushAsync>d__51.MoveNext () [0x0001d] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\Renderers\\NavigationRenderer.cs:340 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threa\r\n at Xamarin.Forms.NavigationPage+<PushAsyncInner>d__84.MoveNext () [0x00085] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationPage.cs:398 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservi\r\nding.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter`1[TResult].GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:357 \r\n \r\nces/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:113 \r\n  at Xamarin.Forms.NavigationPage+<PushAsync>d__55.MoveNext () [0x0014e] in D:\\a\\1\\s\\Xamarin.Forms.Core\\NavigationPage.cs:223 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152 \r\n  at System.Runtime.Compi\r\nlerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x00037] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:187 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:156 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/TaskAwaiter.cs:128 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.GetResult () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.12.0.4/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/r\r\nuntime/compilerservices/TaskAwaiter.cs:113 \r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2- pre2\r\n- Last known good version: 3.1\r\n- IDE: Visual Studio 2017\r\n- iOS:  11.10"},{"Id":"8233963288","Type":"IssuesEvent","CreatedAt":"2018-09-08T08:19:00","Actor":"toomasz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3747","RelatedDescription":"Opened issue \"Enhancement request - add property returning Xamarin Forms version\" (#3747) at xamarin/Xamarin.Forms","RelatedBody":"Please add property, maybe that would be **Device.FormsVersion** that returns current Xamarin.Forms version used in app.\r\nIt would be quite useful for logs, bug reports and diagnostic info dialogs in apps,\r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8237785287","Type":"IssuesEvent","CreatedAt":"2018-09-10T05:21:22","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4741","RelatedDescription":"Closed issue \"Every app including the template app crashes on iOS9.3\" (#4741) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new app\r\n2. Run it on iOS 9.3 simulator\r\n3. \r\n\r\n### Expected Behavior\r\nThe app runs (an XCode template app runs from the XCode so it is not a simulator/XCode issue)\r\n### Actual Behavior\r\nThe app crashes on the launch screen\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.2\r\nVisualStudio.15.Release/15.8.2+28010.2016\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA347\r\nMicrosoft Visual C++ 2017\r\n\r\nASP.NET and Web Tools 2017   15.8.05077.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02009.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFile Differ   1.4.24\r\nThe easiest way to diff two files directly in Solution Explorer\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.8-pre (009db7d)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nMultilingual App Toolkit   4.0\r\nMultilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.00\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.756 (d15-8@b66ff7180)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.221 (a73ca07f7)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.116 (9619170)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n[Test93.zip](https://github.com/xamarin/xamarin-macios/files/2346844/Test93.zip)\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8236185986","Type":"PullRequestEvent","CreatedAt":"2018-09-09T14:24:37","Actor":"Aguilex","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4777","RelatedDescription":"Closed pull request \"Updated reference to xamarin/Xamarin.MacDev@53959f4\" (#4777) at xamarin/xamarin-macios","RelatedBody":"Updated reference to xamarin/Xamarin.MacDev@53959f4"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":42,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":41,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":78,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":177,"FavoriteCount":86,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":121,"FavoriteCount":58,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":54,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":262,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null}]}},"RunOn":"2018-09-10T05:30:52.9890351Z","RunDurationInMilliseconds":4111}