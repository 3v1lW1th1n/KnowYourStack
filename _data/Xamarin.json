{"Data":{"Blog":{"FeedItems":[{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7952434480","Type":"PullRequestEvent","CreatedAt":"2018-07-11T20:34:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1940","RelatedDescription":"Merged pull request \"[timing] use Release build of xabuild/xamarin-android if possible\" (#1940) at xamarin/xamarin-android","RelatedBody":"When timing builds, and plotting them on Jenkins, we should prefer to\r\nuse the `Release` build output of `xamarin-android` if it exists.\r\n\r\nThis also will fix a problem downstream in `monodroid`, where I'm not\r\nable to profile `Debug` builds because `bin\\Debug` *might* not exist.\r\n`monodroid` seems to mostly use `Release` builds of `xamarin-android`.\r\nWe really need to profile `Debug` Xamarin.Android application builds\r\nso that we can see how `Fast Deployment` is performing."},{"Id":"7952351661","Type":"PullRequestEvent","CreatedAt":"2018-07-11T20:15:59","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1949","RelatedDescription":"Merged pull request \"[tests] fix CheckTargetFrameworkVersion tests\" (#1949) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1916\r\n\r\nThese tests were never quite right, since they were just looking for\r\ninstances of `TargetFrameworkVersion` in the build log. This would\r\nmatch for inputs and outputs, and wasn't actually testing anything\r\nbecause it appeared to always pass.\r\n\r\nIn #1916 I improved them by looking for\r\n`Output Property: TargetFrameworkVersion=v2.3`, but they were\r\nnot passing.\r\n\r\nTwo issues to fix:\r\n- These tests should set `AndroidUseLatestPlatformSdk=False`\r\n- These tests shouldn't use `StringAssertEx.Contains` because it calls\r\n  `Assert.Pass`, skipping any future assertions...\r\n\r\nWhen testing on Windows, these tests get skipped, so I had to fix\r\nthings on Mac. The PR builder also skips them, so we did not see the\r\nissue until it was merged into master."},{"Id":"7950168917","Type":"IssuesEvent","CreatedAt":"2018-07-11T13:43:07","Actor":"hileyj","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1954","RelatedDescription":"Opened issue \"Crash in mono-rt when uploading file over FTP using WebClient or FtpWebRequest/Response\" (#1954) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Initiate a large file upload to an FTP server using WebClient or FtpWebRequest/Response\r\n2. While upload is in progress, disconnect Wifi on Android device\r\n3. Re-enable Wifi and start another FTP upload\r\n4. Repeat 2-3\r\n\r\nTest device: Samsung S8 Edge with Android 7.0\r\n\r\n[WebClientFtp.zip](https://github.com/xamarin/xamarin-android/files/2184666/WebClientFtp.zip)\r\n\r\n### Expected Behavior\r\nThe upload initiated before network disconnection will abort and terminate cleanly. The next upload will proceed without issue.\r\n\r\n### Actual Behavior\r\nSometimes after initiating a subsequent upload, a mono-rt crash occurs with a System.AggregateException reported in System.Net.Sockets namespace.\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.7.3\r\nVisualStudio.15.Release/15.7.3+27703.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA977\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40522.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27625.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 2527e6829ecdc8281ee60d83be8cfd0fa720a648.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2026\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.1 (f1760154c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Log File\r\n[short_logcat.txt](https://github.com/xamarin/xamarin-android/files/2184657/short_logcat.txt)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7953317105","Type":"PullRequestEvent","CreatedAt":"2018-07-12T00:43:11","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3283","RelatedDescription":"Opened pull request \"[Android] Prevent white flash when switching MainPage to new MasterDetailPage\" (#3283) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#421 resolved this issue once, but it was regressed by #865, presumably because it was causing crashes when the MainPage was quickly swapped out because the `FragmentContainer` was not initialized properly. However, trial and error shows that the changes made in #421 seem to be the only answer to the blank page between transition, and there is no test case that shows a crash. \r\n\r\nSubmitting this PR for a UI test run. I've included several `MainPage` swaps at a rapid pace that should cause crashes to prove that we can't call `ExecutePendingTransactions` without waiting for the `FragmentContainer`.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #1373\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nPossible reintroduction of crashes fixed by #865 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7952865385","Type":"IssuesEvent","CreatedAt":"2018-07-11T22:11:04","Actor":"samsnowy","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3282","RelatedDescription":"Opened issue \"Runtime Exception hit in  Xamarin.Forms.Forms.Init() for UWP when theres's no \".xaml\" files\" (#3282) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWe’re hitting an runtime error in Xamarin.Forms.Forms.Init() when we try to call it in a Universal Windows App that doesn’t have any “.xaml” files. (No App.xaml, no Mainpage.xaml, etc)\r\nWe attached a minimum repro sln and you should hit the same exception when you build and launch the app.\r\n\r\nDo we need to have \".xaml\" files to invoke the xaml generated code and resources? \r\n\r\n### Steps to Reproduce\r\n\r\n1.  Unzip the repro.zip\r\n2.  Open the sln in visual studio\r\n3.  Debug, Build and Run the App\r\n\r\n### Expected Behavior\r\nNo runtime exception\r\n\r\n### Actual Behavior\r\nHits a runtime exception with the following call stack:\r\n   at Windows.UI.Xaml.ResourceDictionary.put_Source(Uri value)\r\n   at Xamarin.Forms.Forms.GetTabletResources()\r\n   at Xamarin.Forms.Forms.Init(IActivatedEventArgs launchActivatedEventArgs, IEnumerable`1 rendererAssemblies)\r\n   at TestUWP.App.OnLaunched(LaunchActivatedEventArgs e)\r\nSystem.Runtime.InteropServices.COMException: 'Error HRESULT E_FAIL has been returned from a call to a COM component.'\r\n\r\nNative Debugging gives the following exception:\r\nException thrown at 0x00007FFAE260A388 (KernelBase.dll) in TestRepro.exe: WinRT originate error - 0x802B000A : 'Cannot deserialize XBF metadata type list as 'PageControl' was not found in namespace 'Xamarin.Forms.Platform.UWP'. [Line: 0 Position: 0]'.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.527436\r\n- Last known good version: None\r\n- IDE: Visual Studio 2017 15.7.4\r\n- Platform Target Frameworks:\r\n  - UWP: \r\n    - Min version: Windows 10 Anniversary Update (10.0; Build 14393)\r\n    - Target version: Windows 10 version 1803 (10.0; Build 17134)\r\n\r\n- Nuget Packages:\r\nMicrosoft.NETCore.UniversalWindowsPlatform v6.1.5\r\nXamarin.Forms v2.5.1.527436\r\n\r\n### Reproduction Link\r\n[TestRepro.zip](https://github.com/xamarin/Xamarin.Forms/files/2186315/TestRepro.zip)\r\n\r\n"},{"Id":"7952507517","Type":"IssuesEvent","CreatedAt":"2018-07-11T20:50:23","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3281","RelatedDescription":"Opened issue \"[Android] TabbedPage BarTextColor overrules Android BarItemColor \" (#3281) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen using the Android platform specific for ToolbarPlacement, I'm setting the color of the toolbar items using the same platform specific. To get iOS text to be white, I set the BarTextColor, but the unintended consequence is that on Android this overrides the platform specific change.\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<TabbedPage xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n            xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n            xmlns:views=\"clr-namespace:TheLittleThingsPlayground.Views\" \r\n            x:Class=\"TheLittleThingsPlayground.Views.MainPage\"\r\n            BarBackgroundColor=\"{StaticResource NavigationPrimary}\"\r\n            BarTextColor=\"White\"\r\n            xmlns:android=\"clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core\"\r\n            android:TabbedPage.ToolbarPlacement=\"Bottom\"\r\n            android:TabbedPage.BarItemColor=\"#66FFFFFF\"\r\n            android:TabbedPage.BarSelectedItemColor=\"White\">\r\n```\r\n\r\n## Expected\r\n<img width=\"584\" alt=\"screenshot 2018-07-11 15 48 38\" src=\"https://user-images.githubusercontent.com/41873/42598491-febbc580-8521-11e8-8fea-b7d340ccb7fb.png\">\r\n\r\n## Actual\r\n<img width=\"584\" alt=\"screenshot 2018-07-11 15 49 22\" src=\"https://user-images.githubusercontent.com/41873/42598500-056dbe60-8522-11e8-9807-ba19c1926acd.png\">\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/\r\n"},{"Id":"7952439351","Type":"IssuesEvent","CreatedAt":"2018-07-11T20:35:38","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3280","RelatedDescription":"Opened issue \"No XAML TypeConverter for Size, results in IL error\" (#3280) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nUsing the new `ShadowOffset` with platform specific results in an IL error.\r\n\r\n<img width=\"851\" alt=\"screenshot 2018-07-11 14 41 59\" src=\"https://user-images.githubusercontent.com/41873/42597558-c018b17e-851e-11e8-9eb1-1a5689aceb69.png\">\r\n\r\n### Steps to Reproduce\r\n\r\n1. Code https://github.com/davidortinau/TheLittleThingsPlayground/blob/master/TheLittleThingsPlayground/Views/ThreeOnePage.xaml#L13\r\n2. Add `ShadowOffset` like this:\r\n```\r\n<BoxView WidthRequest=\"100\" HeightRequest=\"100\"\r\n                      x:Name=\"ShadowBox\"\r\n                    BackgroundColor=\"Black\"\r\n                    ios:VisualElement.ShadowColor=\"Red\"\r\n                    ios:VisualElement.ShadowOpacity=\"1\"\r\n                    ios:VisualElement.ShadowRadius=\"10\"\r\n                    ios:VisualElement.ShadowOffset=\"4,10\"\r\n                    ios:VisualElement.IsShadowEnabled=\"true\"\r\n                    />\r\n```\r\n\r\n3. Run and observe the IL error\r\n\r\n### Expected Behavior\r\nThe size should work just like in C#:\r\n\r\n```\r\nShadowBox.On<iOS>().SetShadowOffset(new Size(0, 20));\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/\r\n"},{"Id":"7951938237","Type":"PullRequestEvent","CreatedAt":"2018-07-11T18:48:20","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3268","RelatedDescription":"Merged pull request \"[UWP] store alert to local variable for thread safety\" (#3268) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe while loop on s_currentAlert wasn't thread safe so it could be set to null between the check and the await which meant it would be awaiting on null and throw an exception.\r\n\r\nAdded text to description but the clicking to cause the issue has to happen too quickly for the UI test to detect\r\n\r\n### Issues Resolved ###\r\n- fixes #3250 \r\n\r\n\r\n### Platforms Affected ###\r\n- UWP\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7951899037","Type":"PullRequestEvent","CreatedAt":"2018-07-11T18:40:26","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4432","RelatedDescription":"Merged pull request \"[scenekit] SCNPhysicsShape's Create should take a SCNMatrix4 array, not SCNVector3 [Backport]\" (#4432) at xamarin/xamarin-macios","RelatedBody":"This is needed by Xcode 10 sample porting"},{"Id":"7951792702","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:19:05","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4435","RelatedDescription":"Opened issue \"MMP should add rpath to MonoBundle if native references coped in\" (#4435) at xamarin/xamarin-macios","RelatedBody":"Native references often have inter-dependencies and commonly use rpath. We copy them all in @executable_path/../MonoBundle but don't set an rpath there.\r\n\r\nIt is a behavior change, but should be rather harmless, and fix the common case. "},{"Id":"7951561791","Type":"IssuesEvent","CreatedAt":"2018-07-11T17:33:46","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4434","RelatedDescription":"Opened issue \"Invalid dylibs added as native references prevent project from building even after removed until next clear\" (#4434) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new XM project \r\n2. Create an invalid dylib (create a text file with \"this is not a dylib\" and name it foo.dylib)\r\n3. Add it as a native reference\r\n4. Build\r\n5. Fails as expected.\r\n6. Remove and build again\r\n7. Still fails\r\n\r\n### Expected Behavior\r\n\r\nA successful build\r\n\r\n\r\n### Actual Behavior\r\n```\r\n    System.Exception: File format not recognized: /Users/donblas/Projects/TestInvalidNativeRefs/bin/Debug/TestInvalidNativeRefs.app/Contents/MonoBundle/foo.dylib (magic: 0x73696854)\r\n      at Xamarin.MachO.ReadFile (System.IO.BinaryReader reader, System.String filename) [0x00085] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/common/MachO.cs:183 \r\n      at Xamarin.MachO.ReadFile (System.String filename) [0x00014] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/common/MachO.cs:191 \r\n      at Xamarin.MachO+<Read>d__15.MoveNext () [0x00036] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/common/MachO.cs:198 \r\n      at Xamarin.MachO.GetNativeDependencies (System.String libraryName) [0x000bb] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/common/MachO.cs:313 \r\n      at Xamarin.Bundler.Driver.CopyDependencies (System.Collections.Generic.IDictionary`2[TKey,TValue] libraries) [0x001e1] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/mmp/driver.cs:1557 \r\n      at Xamarin.Bundler.Driver.Pack (System.Collections.Generic.IList`1[T] unprocessed) [0x00581] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/mmp/driver.cs:842 \r\n      at Xamarin.Bundler.Driver.Main2 (System.String[] args) [0x010d0] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/mmp/driver.cs:523 \r\n      at Xamarin.Bundler.Driver.Main (System.String[] args) [0x00015] in /Users/builder/data/lanes/5944/64fece5f/source/xamarin-macios/tools/mmp/driver.cs:220 \r\nThe command exited with code 1.\r\n```\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/chamons/97d5af58d9cbcea25c0abfaa5ad910dc\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/chamons/11d2506bf935054bffff273b48fc5a6e\r\n\r\n### Example Project (If Possible)\r\n\r\n[TestInvalidNativeRefs.zip](https://github.com/xamarin/xamarin-macios/files/2185574/TestInvalidNativeRefs.zip)"},{"Id":"7951032029","Type":"IssuesEvent","CreatedAt":"2018-07-11T15:53:48","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4433","RelatedDescription":"Opened issue \"AppKit outputs some messages (such as autolayout errors) to Console log not stdout/err and don't appears in IDE\" (#4433) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n- Create a simple XM app with an autolayout conflict\r\n- Run from IDE, note no warnings/errors\r\n- Run from command line, same\r\n- Open console, and search, you'll see them here.\r\n\r\nIt appears Xcode is doing some magic to fold these into the output pane.\r\n\r\nSee example in https://forums.xamarin.com/discussion/129187/enable-autolayout-diagnosis-messages-in-debug-output?\r\n\r\n### Expected Behavior\r\nWe should see these messages that show up in Xcode\r\n\r\n### Actual Behavior\r\nNo messages"},{"Id":"7950638353","Type":"PullRequestEvent","CreatedAt":"2018-07-11T14:53:35","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4432","RelatedDescription":"Opened pull request \"[scenekit] SCNPhysicsShape's Create should take a SCNMatrix4 array, not SCNVector3 [Backport]\" (#4432) at xamarin/xamarin-macios","RelatedBody":"This is needed by Xcode 10 sample porting"},{"Id":"7949868193","Type":"IssuesEvent","CreatedAt":"2018-07-11T12:52:05","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4431","RelatedDescription":"Opened issue \"Teach xtro to check Deprecated APIs\" (#4431) at xamarin/xamarin-macios","RelatedBody":"This is a xtro idea I was kicking around in channel today. Sharpie knows how to parse deprecated tags, so couldn't we do the same thing we do with introduced, and complain loudly if we miss deprecated?"},{"Id":"7949520217","Type":"IssuesEvent","CreatedAt":"2018-07-11T11:42:05","Actor":"PatrickRyder","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4430","RelatedDescription":"Opened issue \"Wireless Debugging Warning Still Appears After Disabled in VS and XCode\" (#4430) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. In XCode on Mac build server, check 'Connect via network'.\r\n2. In Visual Studio on PC, check 'Debug over WiFi'.\r\n3. Run iOS project on physically connected iPhone.\r\n\r\n(I had some problems with this that are not relevant to this bug report.  The problem I am reporting came when I tried to switch back to debugging using the USB-iPhone cable.)\r\n\r\n4. On PC, uncheck 'Debug over WiFi'.\r\n5. On Mac in XCode, uncheck 'Connect via network'.\r\n6. Run iOS project on physically connected iPhone.\r\n\r\n### Expected Behavior\r\nApplication should run with no warnings in the debug output about having to ignore the wifi connection because it is not enabled (see attached screenshot).\r\n\r\n### Actual Behavior\r\nApplication does launch but I get multiple warnings and pauses because it appears to debug via wifi, even though this is now disabled.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.5\r\nVisualStudio.15.Release/15.7.5+27703.2042\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nC# Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQLite & SQL Server Compact Toolbox   4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\nVisual Basic Tools   2.8.3-beta6-63029-08. Commit Hash: e9a3a6c0ba5b1fde8b1fff964bdfb3fb768ee2eb\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nvsFunnel   1.5.32\r\nDecrease solution loading and re-compilation times dramatically by filtering projects not relevant for the current task. \r\nFor more information about Funnel, see the website at http://www.vsfunnel.com\r\nCopyright © 2013-2016. All rights reserved.\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n[2018-07-11_12-26-05.9608.Ide.log](https://github.com/xamarin/xamarin-macios/files/2184258/2018-07-11_12-26-05.9608.Ide.log)\r\n![debugoutput](https://user-images.githubusercontent.com/13526323/42569248-cb241624-8507-11e8-9202-79552888be9e.png)\r\n![visualstudio](https://user-images.githubusercontent.com/13526323/42569249-cb426af2-8507-11e8-86ca-668cf7fd1151.png)\r\n![xcode](https://user-images.githubusercontent.com/13526323/42569250-cb5bd500-8507-11e8-869f-70fc14886ef6.png)\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":37,"FavoriteCount":21,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":91,"FavoriteCount":42,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":30,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":62,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":90,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2018-07-12T05:30:56.9347085Z","RunDurationInMilliseconds":4265}