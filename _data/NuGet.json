{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10867647143","Type":"PullRequestEvent","CreatedAt":"2019-11-15T00:41:31","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7698","RelatedDescription":"Opened pull request \"Merge dev into master for deployment\" (#7698) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10867602535","Type":"PullRequestEvent","CreatedAt":"2019-11-15T00:31:43","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7686","RelatedDescription":"Merged pull request \"Ingest first patched version of security vulnerabilities from the GitHub API\" (#7686) at NuGet/NuGetGallery","RelatedBody":"We have decided we would like to ingest this field from GitHub as well.\r\n\r\nUnfortunately, this means that we also need to introduce logic to compare the existing vulnerable range metadata to the updated vulnerable range metadata, because previously these could not change. If we find that a vulnerable range has been updated, we must mark all packages it applies to as updated as well, so the new first patched version will flow through V3."},{"Id":"10867131786","Type":"IssuesEvent","CreatedAt":"2019-11-14T22:59:08","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7403","RelatedDescription":"Closed issue \"[Azure Search] Turn off Catalog2Lucene and old Lucene search after traffic decreases\" (#7403) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10866620654","Type":"IssuesEvent","CreatedAt":"2019-11-14T21:40:59","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7391","RelatedDescription":"Closed issue \"[Azure Search] Consider multi term boosting for cases like \"Hello.World\"\" (#7391) at NuGet/NuGetGallery","RelatedBody":"Boost results that match all tokenized unscoped terms. Target queries:\r\n\r\n* https://www.nuget.org/experiments/search-sxs?q=text.ui\r\n* https://www.nuget.org/experiments/search-sxs?q=windows.extensions\r\n* https://www.nuget.org/experiments/search-sxs?q=microsoft.extensions.hosting.windowsservices\r\n* https://www.nuget.org/experiments/search-sxs?q=system.linq.async\r\n* System.Drawing\r\n* System.Net.Http.Formatting\r\n* System.Web\r\n* socket.io\r\n* system.web.mvc\r\n* Npgsql.EntityFrameworkCore.PostgreSQL\r\n* microsoft.toolkit (microsoft.toolkit.* expect at top)\r\n* Uno.Microsoft.Toolkit (uno.microsoft.toolkit.* expected at top)\r\n* NuGet.Build (NuGet.Build.Tasks and NuGet.Build.Tasks.Pack should be at top)\r\n\r\nA/B test here: https://github.com/NuGet/NuGet.Services.Metadata/pull/681\r\nReal change here: https://github.com/NuGet/NuGet.Services.Metadata/pull/688"},{"Id":"10865140223","Type":"IssuesEvent","CreatedAt":"2019-11-14T18:20:29","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7688","RelatedDescription":"Closed issue \"Create a GitHub action that downloads the latest nuget.exe\" (#7688) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10857589227","Type":"IssuesEvent","CreatedAt":"2019-11-13T23:24:32","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7694","RelatedDescription":"Closed issue \"Auxiliary2AzureSearch is stuck on PROD due to too many download count decreases\" (#7694) at NuGet/NuGetGallery","RelatedBody":"The limit of download count decreases is 15,000 today (the previous highest we saw was in the 10K-15K range. There are now 27,766 decreases.\r\n\r\nRoot cause is unknown but perhaps the downloads.v1.json file was generated during a very large roll-up.\r\n\r\n/cc @scottbommarito who is on-call.\r\n\r\nRelease: [508048](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=508048)"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10868142039","Type":"IssuesEvent","CreatedAt":"2019-11-15T02:34:13","Actor":"abhinavdevone","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8828","RelatedDescription":"Opened issue \"Nuget.exe returns false positive during nuget restore when a feed is inaccessible.\" (#8828) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx):3.6.0\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10, Server 2016.\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Include multiple feeds and packages in corext.config.\r\n \r\n2. Edit host file to point ONE nuget feed to a dummy ip address.\r\n\r\n3. kick off nuget restore.\r\n\r\n\r\nResult -- \r\nNuget.exe continues to \"hang\" for a long period for the corrupt feed and eventually moves to the next feed's restore WITHOUT throwing an error. This results in an overall false positive.\r\n...\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\nNuget.Exe Restore\r\n\r\nI can provide logs later. I would like to check if this issue has been addressed already since I realize that we have a much older version of nuget.exe running.\r\n\r\n\r\n"},{"Id":"10867359966","Type":"IssuesEvent","CreatedAt":"2019-11-14T23:42:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8774","RelatedDescription":"Closed issue \"Project assets file should not be read during no-op restore\" (#8774) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen restoring large trees, no-op reads the assets file to determine:\r\n* Path to each package to check existence of\r\n* Path to the project to ensure the assets file is for that project\r\n* Replay warnings\r\n\r\nHowever, the assets files in large trees can be very big and there are lots of them.  Profiling no-op restore shows that reading the entire assets file adds about 15% overhead.\r\n\r\nInstead, the cache file should contain the items needed for no-op so that the assets file does not need to be read.  Adding just the data needed to the no-op cache file would make no-op much more efficient.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): Any\r\n\r\nVS version (if appropriate): Any\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Any\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Restore a large repo\r\n2. Restore again\r\n\r\nNo-op restore is slower than it should be\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10866887043","Type":"IssuesEvent","CreatedAt":"2019-11-14T22:19:12","Actor":"wtgodbe","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8827","RelatedDescription":"Opened issue \"Nuget allowed a CoreFx stable package to be published with non-stable dependencies\" (#8827) at NuGet/Home","RelatedBody":"In the GA release of .Net Core 3.0, we published the 4.6.0 version of `runtime.native.System.IO.Ports` to nuget.org, with non-stable dependencies: https://www.nuget.org/packages/runtime.native.System.IO.Ports/. There was a bug in CoreFx that caused us to produce these non-stable runtime packages, but it also should have been caught during `nuget pack`/`nuget publish`.\r\n\r\nCC @ericstj "},{"Id":"10865782906","Type":"IssuesEvent","CreatedAt":"2019-11-14T19:45:31","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8728","RelatedDescription":"Closed issue \"In large solutions, during one restore operation the same config file is parsed multiple times \" (#8728) at NuGet/Home","RelatedBody":"This affects all clients. \r\n\r\nIt is done to populate the sources with creds. \r\n\r\nSpecifically the code is: https://github.com/NuGet/NuGet.Client/blob/c1f6915918b82c096bbd666bd9c18528f1f70630/src/NuGet.Core/NuGet.Commands/RestoreCommand/RequestFactory/DependencyGraphSpecRequestProvider.cs#L130"},{"Id":"10865715661","Type":"IssuesEvent","CreatedAt":"2019-11-14T19:36:37","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8826","RelatedDescription":"Opened issue \"Test:  InconsistencyBetweenAssetsAndProjectFile is flaky\" (#8826) at NuGet/Home","RelatedBody":"[`InconsistencyBetweenAssetsAndProjectFile`](https://github.com/NuGet/NuGet.Client/blob/eeb936293dd302a5bc5b936d21e0d1ea5eb08150/test/EndToEnd/tests/BuildIntegratedTest.ps1#L462) is flaky.  It has failed 3 times in the past 3 weeks.\r\n\r\nCallstack:\r\n```\r\nSystem.Management.Automation.RuntimeException: You cannot call a method on a null-valued expression.\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n   at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess)\r\n   at System.Management.Automation.PSScriptCmdlet.DoEndProcessing()\r\n   at System.Management.Automation.CommandProcessorBase.Complete()\r\n```\r\nHere is more context from the full log:\r\n```\r\nGetting the test cases factory for  InconsistencyBetweenAssetsAndProjectFile\r\nNew-Project function\r\nNew-Project function end\r\nRunning restore with 4 concurrent jobs.\r\nReading project file \r\nE:\\A\\_work\\1\\s\\artifacts\\EndToEnd\\bin\\b1e4\\Solution_f72a\\PackageReferenceClassLibrary_a182\\PackageReferenceClassLibrary_a182.csproj.\r\nPersisting no-op dg to E:\\A\\_work\\1\\s\\artifacts\\EndToEnd\\bin\\b1e4\\Solution_f72a\\PackageReferenceClassLibrary_a182\\obj\\PackageReferenceClass\r\nLibrary_a182.csproj.nuget.dgspec.json\r\nRestoring packages for .NETFramework,Version=v4.6...\r\nResolving conflicts for .NETFramework,Version=v4.6...\r\nScanning packages for runtime.json files...\r\nRestoring packages for .NETFramework,Version=v4.6/win...\r\nResolving conflicts for .NETFramework,Version=v4.6/win...\r\nRestoring packages for .NETFramework,Version=v4.6/win-x64...\r\nResolving conflicts for .NETFramework,Version=v4.6/win-x64...\r\nRestoring packages for .NETFramework,Version=v4.6/win-x86...\r\nResolving conflicts for .NETFramework,Version=v4.6/win-x86...\r\nChecking compatibility of packages on .NETFramework,Version=v4.6.\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6.\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6.\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win).\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win-x64).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win-x64).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win-x64).\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win-x86).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win-x86).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win-x86).\r\nRunning restore with 4 concurrent jobs.\r\nReading project file \r\nE:\\A\\_work\\1\\s\\artifacts\\EndToEnd\\bin\\b1e4\\Solution_f72a\\PackageReferenceClassLibrary_a182\\PackageReferenceClassLibrary_a182.csproj.\r\nPersisting no-op dg to E:\\A\\_work\\1\\s\\artifacts\\EndToEnd\\bin\\b1e4\\Solution_f72a\\PackageReferenceClassLibrary_a182\\obj\\PackageReferenceClass\r\nLibrary_a182.csproj.nuget.dgspec.json\r\nRestoring packages for .NETFramework,Version=v4.6...\r\nResolving conflicts for .NETFramework,Version=v4.6...\r\nScanning packages for runtime.json files...\r\nRestoring packages for .NETFramework,Version=v4.6/win...\r\nResolving conflicts for .NETFramework,Version=v4.6/win...\r\nRestoring packages for .NETFramework,Version=v4.6/win-x64...\r\nResolving conflicts for .NETFramework,Version=v4.6/win-x64...\r\nRestoring packages for .NETFramework,Version=v4.6/win-x86...\r\nResolving conflicts for .NETFramework,Version=v4.6/win-x86...\r\nChecking compatibility of packages on .NETFramework,Version=v4.6.\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6.\r\nChecking compatibility for Newtonsoft.Json 9.0.1 with .NETFramework,Version=v4.6.\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6.\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win).\r\nChecking compatibility for Newtonsoft.Json 9.0.1 with .NETFramework,Version=v4.6 (win).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win).\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win-x64).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win-x64).\r\nChecking compatibility for Newtonsoft.Json 9.0.1 with .NETFramework,Version=v4.6 (win-x64).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win-x64).\r\nChecking compatibility of packages on .NETFramework,Version=v4.6 (win-x86).\r\nChecking compatibility for PackageReferenceClassLibrary_a182 1.0.0.0 with .NETFramework,Version=v4.6 (win-x86).\r\nChecking compatibility for Newtonsoft.Json 9.0.1 with .NETFramework,Version=v4.6 (win-x86).\r\nAll packages and projects are compatible with .NETFramework,Version=v4.6 (win-x86).\r\nWriting cache file to disk. Path: \r\nE:\\A\\_work\\1\\s\\artifacts\\EndToEnd\\bin\\b1e4\\Solution_f72a\\PackageReferenceClassLibrary_a182\\obj\\project.nuget.cache\r\nGet-SolutionFullName function\r\nTest-InstalledPackage: Begin\r\nTest-InstalledPackage: End\r\nSaveAs-Solution function\r\nClose-Solution function\r\n Failed: Test-InconsistencyBetweenAssetsAndProjectFile. Exception message: You cannot call a method on a null-valued expression.\r\n```\r\nThe log indicates that the failure occurs at some point after [this line in `Close-Solution`](https://github.com/NuGet/NuGet.Client/blob/eeb936293dd302a5bc5b936d21e0d1ea5eb08150/test/EndToEnd/vs.ps1#L240)."},{"Id":"10865222926","Type":"IssuesEvent","CreatedAt":"2019-11-14T18:31:29","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8825","RelatedDescription":"Opened issue \"Restore:  investigate CloudBuild\" (#8825) at NuGet/Home","RelatedBody":""},{"Id":"10864691046","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:22:07","Actor":"ghost1372","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8824","RelatedDescription":"Opened issue \"run powershell script after package installed\" (#8824) at NuGet/Home","RelatedBody":"hi i want to execute powershell script for modify a file. \r\nI noticed that the script runs during installation And so I can't edit the file because it's not there yet and it's being built by Visual Studio\r\nWhat should i do?\r\nMy script is on this path:\r\n**tools\\install.ps1**"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-11-15T05:30:45.0381571Z","RunDurationInMilliseconds":2357}