{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET 5.0 Preview 3","PublishedOn":"2020-04-23T18:05:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 3. It contains a set of new features and performance improvements. We&#8217;re continuing to work on the bigger features that will define the 5.0 release....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 3","PublishedOn":"2020-04-23T17:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are excited to announce the third preview release of EF Core 5.0.\nThe third previews of .NET 5 and ASP.NET Core 5.0 are also available now.\nPrerequisites\nThe previews of EF Core 5.0 require...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-3/","RawContent":null},{"Title":"Help us shape the future of deep learning in .NET","PublishedOn":"2020-04-21T17:32:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Deep learning is a subset of machine learning used for tasks such as image classification, object detection, and natural language processing. It uses algorithms known as neural networks to learn and...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-deep-learning-in-net/","RawContent":null},{"Title":"Using .NET Core to provide Power Query for Excel on Mac","PublishedOn":"2020-04-16T03:23:08+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Power Query is a data connection technology that enables you to discover, connect, combine, and refine data sources to meet your analysis needs. Features in Power Query are available in Excel and...","Href":"https://devblogs.microsoft.com/dotnet/using-net-core-to-provide-power-query-for-excel-on-mac/","RawContent":null},{"Title":"Work flow of diagnosing memory performance issues – Part 1","PublishedOn":"2020-04-13T01:57:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Work flow of diagnosing memory performance issues – Part 0\nIn this blog post I’ll talk a bit about contributing to PerfView and then continue with the GCStats analysis. You can skip to the analysis...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-1/","RawContent":null},{"Title":"Work flow of diagnosing memory performance issues – Part 0","PublishedOn":"2020-04-06T00:55:50+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"I wanted to describe what I do to diagnose memory perf issues, or rather the common part of various work flows of doing such diagnostics. Diagnosing performance issues can take many forms because...","Href":"https://devblogs.microsoft.com/dotnet/work-flow-of-diagnosing-memory-performance-issues-part-0/","RawContent":null},{"Title":"Regex Performance Improvements in .NET 5","PublishedOn":"2020-04-02T21:19:49+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"The System.Text.RegularExpressions namespace has been in .NET for years, all the way back to .NET Framework 1.1. It&#8217;s used in hundreds of places within the .NET implementation itself, and...","Href":"https://devblogs.microsoft.com/dotnet/regex-performance-improvements-in-net-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 5.0 Preview 2","PublishedOn":"2020-04-02T17:02:30+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Announcing Entity Framework Core 5.0 Preview 2\nToday we are excited to announce the second preview release of EF Core 5.0.\nThe second previews of .NET 5 and ASP.NET Core 5.0 are also available...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-5-0-preview-2/","RawContent":null},{"Title":"Announcing .NET 5.0 Preview 2","PublishedOn":"2020-04-02T16:29:11+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing .NET 5.0 Preview 2. It contains a set of smaller features and performance improvements. We&#8217;re continuing to work on the bigger features that will define the 5.0...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-5-0-preview-2/","RawContent":null},{"Title":".NET for Apache® Spark™ In-Memory DataFrame Support","PublishedOn":"2020-03-30T16:33:38+00:00","CommentsCount":6,"FacebookCount":0,"Summary":".NET for Apache Spark is aimed at making Apache® Spark™, and thus the exciting world of big data analytics, accessible to .NET developers. .NET for Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/net-for-apache-spark-in-memory-dataframe-support/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"12069320388","Type":"PullRequestEvent","CreatedAt":"2020-04-16T15:55:03","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Opened pull request \"Fix broken links\" (#190) at dotnet/foundation","RelatedBody":""},{"Id":"12057488269","Type":"PullRequestEvent","CreatedAt":"2020-04-15T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Opened pull request \"Fix broken links\" (#189) at dotnet/foundation","RelatedBody":""},{"Id":"12047631812","Type":"PullRequestEvent","CreatedAt":"2020-04-14T19:06:28","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Merged pull request \"Added Unity Contaienr project\" (#188) at dotnet/foundation","RelatedBody":""},{"Id":"12047420263","Type":"PullRequestEvent","CreatedAt":"2020-04-14T18:43:47","Actor":"ENikS","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Opened pull request \"Added Unity Contaienr project\" (#188) at dotnet/foundation","RelatedBody":""},{"Id":"12035753653","Type":"PullRequestEvent","CreatedAt":"2020-04-13T18:28:43","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Merged pull request \"Fix broken links\" (#187) at dotnet/foundation","RelatedBody":""},{"Id":"12034367798","Type":"PullRequestEvent","CreatedAt":"2020-04-13T15:55:05","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Opened pull request \"Fix broken links\" (#187) at dotnet/foundation","RelatedBody":""},{"Id":"12028630454","Type":"PullRequestEvent","CreatedAt":"2020-04-13T00:27:33","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Merged pull request \"update for Prism contacts / links\" (#186) at dotnet/foundation","RelatedBody":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts"},{"Id":"12028591498","Type":"PullRequestEvent","CreatedAt":"2020-04-13T00:15:13","Actor":"dansiegel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Opened pull request \"update for Prism contacts / links\" (#186) at dotnet/foundation","RelatedBody":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts"},{"Id":"12017084499","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:34:11","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Merged pull request \"Fix broken links\" (#185) at dotnet/foundation","RelatedBody":""},{"Id":"12017082879","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:33:58","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Merged pull request \"Fix broken links\" (#184) at dotnet/foundation","RelatedBody":""},{"Id":"12017081176","Type":"PullRequestEvent","CreatedAt":"2020-04-10T17:33:43","Actor":"clairernovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Merged pull request \"Fix broken links\" (#183) at dotnet/foundation","RelatedBody":""},{"Id":"12016351315","Type":"PullRequestEvent","CreatedAt":"2020-04-10T15:55:04","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Opened pull request \"Fix broken links\" (#185) at dotnet/foundation","RelatedBody":""},{"Id":"12007033841","Type":"PullRequestEvent","CreatedAt":"2020-04-09T15:55:04","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Opened pull request \"Fix broken links\" (#184) at dotnet/foundation","RelatedBody":""},{"Id":"11984502394","Type":"PullRequestEvent","CreatedAt":"2020-04-07T15:57:33","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Opened pull request \"Fix broken links\" (#183) at dotnet/foundation","RelatedBody":""},{"Id":"11977507998","Type":"PullRequestEvent","CreatedAt":"2020-04-07T01:58:58","Actor":"david-driscoll","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Opened pull request \"Adding OmniSharp to projects list\" (#182) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11789505984","Type":"IssuesEvent","CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Opened issue \"March 2020 .NET Updates\" (#152) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"12127281320","Type":"PullRequestEvent","CreatedAt":"2020-04-22T18:27:18","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Opened pull request \"Backport Cross DAC runtime layout changes\" (#28035) at dotnet/coreclr","RelatedBody":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler."},{"Id":"12083179351","Type":"PullRequestEvent","CreatedAt":"2020-04-17T19:59:22","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Closed pull request \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028) at dotnet/coreclr","RelatedBody":"This is a little more than #28027"},{"Id":"12081800695","Type":"PullRequestEvent","CreatedAt":"2020-04-17T17:12:55","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Merged pull request \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015) at dotnet/coreclr","RelatedBody":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"12070867629","Type":"PullRequestEvent","CreatedAt":"2020-04-16T18:20:10","Actor":"msftbot[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13343","RelatedDescription":"Merged pull request \"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416\" (#13343) at dotnet/cli","RelatedBody":"Localization update"},{"Id":"12064144223","Type":"PullRequestEvent","CreatedAt":"2020-04-16T07:46:36","Actor":"v-chmart","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13343","RelatedDescription":"Opened pull request \"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416\" (#13343) at dotnet/cli","RelatedBody":"Localization update"},{"Id":"12057459228","Type":"PullRequestEvent","CreatedAt":"2020-04-15T15:52:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13342","RelatedDescription":"Merged pull request \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13342) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200414.15\r\n- **Date Produced**: 4/15/2020 12:06 AM\r\n- **Commit**: 6f0edb1dfaf5a6c780719794a7dd7d945c320ebf\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20210.1 to 3.1.300-preview.20214.15\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n"},{"Id":"12050015726","Type":"PullRequestEvent","CreatedAt":"2020-04-15T00:26:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13342","RelatedDescription":"Opened pull request \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13342) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200414.15\r\n- **Date Produced**: 4/15/2020 12:06 AM\r\n- **Commit**: 6f0edb1dfaf5a6c780719794a7dd7d945c320ebf\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20210.1 to 3.1.300-preview.20214.15\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n"},{"Id":"12039085841","Type":"PullRequestEvent","CreatedAt":"2020-04-14T02:46:38","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13341","RelatedDescription":"Merged pull request \"[release/2.1.8xx] Merge from 2.1.6xx\" (#13341) at dotnet/cli","RelatedBody":""},{"Id":"12038147520","Type":"PullRequestEvent","CreatedAt":"2020-04-13T23:47:07","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13341","RelatedDescription":"Opened pull request \"[release/2.1.8xx] Merge from 2.1.6xx\" (#13341) at dotnet/cli","RelatedBody":""},{"Id":"12037905643","Type":"PullRequestEvent","CreatedAt":"2020-04-13T23:03:42","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13340","RelatedDescription":"Merged pull request \"[release/2.1.6xx] Merge from 2.1.5xx\" (#13340) at dotnet/cli","RelatedBody":""},{"Id":"12037524105","Type":"PullRequestEvent","CreatedAt":"2020-04-13T22:02:44","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13340","RelatedDescription":"Opened pull request \"[release/2.1.6xx] Merge from 2.1.5xx\" (#13340) at dotnet/cli","RelatedBody":""},{"Id":"12037499069","Type":"PullRequestEvent","CreatedAt":"2020-04-13T21:59:20","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13339","RelatedDescription":"Merged pull request \"Update buildtools\" (#13339) at dotnet/cli","RelatedBody":"Contains fix https://github.com/dotnet/buildtools/pull/2271, which keeps the build from failing if a retry of an upload passes."},{"Id":"12037088744","Type":"PullRequestEvent","CreatedAt":"2020-04-13T21:05:26","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13339","RelatedDescription":"Opened pull request \"Update buildtools\" (#13339) at dotnet/cli","RelatedBody":"Contains fix https://github.com/dotnet/buildtools/pull/2271, which keeps the build from failing if a retry of an upload passes."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"12120695418","Type":"IssuesEvent","CreatedAt":"2020-04-22T08:06:48","Actor":"msedi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Opened issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758) at dotnet/standard","RelatedBody":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?"},{"Id":"12104955786","Type":"IssuesEvent","CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Opened issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757) at dotnet/standard","RelatedBody":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?"},{"Id":"12063958787","Type":"IssuesEvent","CreatedAt":"2020-04-16T07:25:01","Actor":"Mordahlhuilhulh","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Reopened issue \"Memory leak when build X509 chain\" (#1753) at dotnet/standard","RelatedBody":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n"},{"Id":"12013728138","Type":"IssuesEvent","CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Opened issue \"GAC assembly reference to .net core api.\" (#1756) at dotnet/standard","RelatedBody":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"12141653555","Type":"PullRequestEvent","CreatedAt":"2020-04-23T23:08:42","Actor":"mconnew","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42912","RelatedDescription":"Opened pull request \"Fix serialization of read-only IEnumerable's for DCS\" (#42912) at dotnet/corefx","RelatedBody":"Servicing change for dotnet/runtime#34151"},{"Id":"12141242089","Type":"PullRequestEvent","CreatedAt":"2020-04-23T22:05:03","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42911","RelatedDescription":"Opened pull request \"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461\" (#42911) at dotnet/corefx","RelatedBody":"cc: @ericstj \r\n\r\nAs expected, System.Net.Http.Json net461 configuration incorrectly depends on System.Net.Http.dll version 4.2.0.0. This is fine for now since HttpJson package depends on the netstandard facades, but this will change once this branch is merged to release/3.1 so it is important to make sure that we address this now. I have verified that after this change the package reflects the change only on the lib/net461 asset by downgrading its System.Net.Http dependency from 4.2.0.0 down to 4.0.0.0. Apart from that, the package remains unchanged.\r\n\r\nFYI: @Jozkee "},{"Id":"12129493605","Type":"PullRequestEvent","CreatedAt":"2020-04-22T22:44:32","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42910","RelatedDescription":"Opened pull request \"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds\" (#42910) at dotnet/corefx","RelatedBody":"cc: @ericstj @Anipik @wtgodbe \r\n\r\nThese changes will fix WinHttpHandler to make it build against the net461 targeting pack first to avoid regression when the netstandard facades are not injected by the package automatically. This should unblock us from shipping WinHttpHandler package again now without the need of the netstandard facades.\r\n\r\nFYI: @karelz after this is in, we will be able to ship the pending change on WinHttpHandler package.\r\n\r\nI will add the No Merge label since this is not supposed to ship until next release and branches are locked right now.\r\n\r\nFYI: @Jozkee we will most likely need to do the same changes to the package we are shipping for Blazor."},{"Id":"12128737132","Type":"PullRequestEvent","CreatedAt":"2020-04-22T21:03:45","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42909","RelatedDescription":"Opened pull request \"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages\" (#42909) at dotnet/corefx","RelatedBody":"We recently merged https://github.com/dotnet/corefx/pull/42901 which main purpose was to remove the need of the netstandard facades when using our OOB packages in net461+. Unfortunately by doing this we did find a side-effect (by using manual verification) with the System.Net.Http.WinHttpHandler package so we had to undo shipping that package with https://github.com/dotnet/corefx/pull/42908. We could have caught this in our package testing if we had enabled VerifyReferenceClosure for netfx, but that was currently disabled. This PR will enable those checks to make sure we never regress this scenario again.\r\n\r\ncc: @ericstj @Anipik @wtgodbe \r\nFYI: @karelz \r\n\r\nThis is a test-only change. The branch is locked right now because of the release process so I will add the NoMerge label, but will remove it once branch is unlocked."},{"Id":"12116189356","Type":"PullRequestEvent","CreatedAt":"2020-04-21T20:25:20","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42908","RelatedDescription":"Merged pull request \"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461\" (#42908) at dotnet/corefx","RelatedBody":"cc: @wtgodbe @Anipik @mmitche @ericstj \r\n\r\nThis will undo the build of System.Net.Http.WinHttpHandler\r\n\r\nFYI: @karelz @alnikola as this affects #42888 fix.\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"12143348589","Type":"PullRequestEvent","CreatedAt":"2020-04-24T04:38:24","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/43631","RelatedDescription":"Opened pull request \"Fix rename test flakeyness with dynamic types.\" (#43631) at dotnet/roslyn","RelatedBody":""},{"Id":"12143016910","Type":"PullRequestEvent","CreatedAt":"2020-04-24T03:32:42","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/43628","RelatedDescription":"Merged pull request \"Disable failing IntelliSense integration tests\" (#43628) at dotnet/roslyn","RelatedBody":"See #43627"},{"Id":"12142908521","Type":"PullRequestEvent","CreatedAt":"2020-04-24T03:12:01","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/43630","RelatedDescription":"Opened pull request \"Fix deadlock when calling into nuget to retrieve package information.\" (#43630) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/39889\r\n\r\nNote: which this addresses hte core deadlock, it does not address the large amount of complexity and perf problems inherent in needing to access nuget from the UI thread.  We should still drive work with Nuget and Project System teams to provide a suitable non-UI threaded, async, approach to working with nuget+packages.\r\n\r\nThis PR should be reviewed commit by commit."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"12141012062","Type":"IssuesEvent","CreatedAt":"2020-04-23T21:34:28","Actor":"andreakarasho","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8111","RelatedDescription":"Opened issue \"WebClient exception\" (#8111) at dotnet/corert","RelatedBody":"```csharp\r\nWebClient client = new WebClient();\r\nclient.Proxy = null;\r\nclient.Headers.Add(\"user-agent\", \"Other\");\r\n\r\nstring xml = client.DownloadString(MY_URL); // crash\r\n```\r\n\r\n```Unhandled Exception: System.NullReferenceException: Arg_NullReferenceException\r\nStackTrace_AtWordSystem.Diagnostics.Tracing.EventSource.WriteEvent(Int32, Int32) + 0x1b\r\nStackTrace_AtWordSystem.Threading.PortableThreadPoolEventSource.WorkerThreadStart(Int16) + 0x26\r\n```\r\n\r\nUbuntu and osx  x64\r\nnetcore 3.1\r\nlatest corert"},{"Id":"12140532384","Type":"IssuesEvent","CreatedAt":"2020-04-23T20:41:52","Actor":"xdrie","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8083","RelatedDescription":"Closed issue \"recommended way to analyze size of output binary\" (#8083) at dotnet/corert","RelatedBody":"I followed the [instructions](https://github.com/dotnet/corert/tree/master/samples/MonoGame) for the MonoGame sample to publish to a native binary compiled with CoreRT.\r\n\r\nHowever, the output size is quite a bit larger with my application than with this template application, and I would like to figure out what is contributing to the size. My application references multiple packages and other assemblies, but I am not sure how much each of those contribute to the size. Ostensibly, not that much; I looked at the file sizes from a `dotnet publish` using CoreCLR and they are in the few KB, while my CoreRT binary is upwards of 50MB. With the minimal MonoGame application, it is about 9MB, which is closer to what I am targeting.\r\n\r\nHow could I diagnose exactly what is causing my CoreRT binaries to be so large?"},{"Id":"12139441889","Type":"IssuesEvent","CreatedAt":"2020-04-23T18:51:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8109","RelatedDescription":"Closed issue \"Sample for using Avalonia UI and CoreRT\" (#8109) at dotnet/corert","RelatedBody":"Hi team,\r\n\r\nI have prepared a sample how to integrate Avalonia and CoreRT. You can find it [here](https://github.com/teobugslayer/AvaloniaCoreRTDemo). Do you think it would benefit the community if you link to it, or adopt it in the CoreRT codebase?\r\n\r\nAlso, I am open to critiques if something can be improved in my code."},{"Id":"12139440544","Type":"PullRequestEvent","CreatedAt":"2020-04-23T18:51:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8110","RelatedDescription":"Merged pull request \"Add Avalonia sample\" (#8110) at dotnet/corert","RelatedBody":"I've noticed that the current Avalonia demo is a video, and the source code associated with it no longer exists.\r\nI am submitting a new sample, which can also be used as a skeleton for creating projects based on Avalonia and CoreRT.\r\n\r\nAddresses https://github.com/dotnet/corert/issues/8109"},{"Id":"12139386336","Type":"PullRequestEvent","CreatedAt":"2020-04-23T18:46:22","Actor":"teobugslayer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8110","RelatedDescription":"Opened pull request \"Add Avalonia sample\" (#8110) at dotnet/corert","RelatedBody":"I've noticed that the current Avalonia demo is a video, and the source code associated with it no longer exists.\r\nI am submitting a new sample, which can also be used as a skeleton for creating projects based on Avalonia and CoreRT."},{"Id":"12138894208","Type":"IssuesEvent","CreatedAt":"2020-04-23T17:59:12","Actor":"teobugslayer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/8109","RelatedDescription":"Opened issue \"Sample for using Avalonia UI and CoreRT\" (#8109) at dotnet/corert","RelatedBody":"Hi team,\r\n\r\nI have prepared a sample how to integrate Avalonia and CoreRT. You can find it [here](https://github.com/teobugslayer/AvaloniaCoreRTDemo). Do you think it would benefit the community if you link to it, or adopt it in the CoreRT codebase?"},{"Id":"12138870550","Type":"IssuesEvent","CreatedAt":"2020-04-23T17:56:57","Actor":"teobugslayer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8094","RelatedDescription":"Closed issue \"How can I get the full, human readable content of exceptions?\" (#8094) at dotnet/corert","RelatedBody":"How can I get the full, human readable content of exceptions?\r\n\r\nI've read [Optimizing programs targeting CoreRT](https://github.com/dotnet/corert/blob/master/Documentation/using-corert/optimizing-corert.md) and modified my .csprog file accordingly:\r\n\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\r\n    <Platforms>AnyCPU;x64</Platforms>\r\n  </PropertyGroup>\r\n  \r\n  <PropertyGroup>\r\n\t<RootAllApplicationAssemblies>true</RootAllApplicationAssemblies>\r\n\t<IlcGenerateCompleteTypeMetadata>true</IlcGenerateCompleteTypeMetadata>\r\n\t<IlcGenerateStackTraceData>true</IlcGenerateStackTraceData>\r\n\t<IlcDisableUnhandledExceptionExperience>false</IlcDisableUnhandledExceptionExperience>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- removed for brevity-->\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nHowever, this made no difference.\r\n\r\nIf I debug my program in VS 2019, when it throws an exception, the only information I can see is (preserving the spelling):\r\n\r\n> `Unhandled exception at 0x00007FF639FDB254 in AvaloniaCoreRTDemo.exe: 0xE31F4059. occurred`\r\n\r\nIf I run the app in the console, it silently crashes and nothing is written to the console.\r\n\r\nHow can I get the full exception contents? Because this exception is thrown due to reflection problem, I really need the full exception message so that I can fix my rd.xml file."},{"Id":"12134994578","Type":"PullRequestEvent","CreatedAt":"2020-04-23T11:45:42","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/8108","RelatedDescription":"Opened pull request \"Add sample CMake configuration for VS\" (#8108) at dotnet/corert","RelatedBody":"This allows to view native cmponents inside VS CMake Targets view without much efforts.\r\nI try to mimic setup for `gen-buildsys-win.bat` for Windows only.\r\nMaybe maintaining this file in addition to `gen-buildsys-win.bat` then it can be found his place in the documentation somewhere.\r\nI prefer to work inside Visual Studio and having such file significantly improve discoverability for native components from which CoreRT made up of.\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/80095726-376b9580-858a-11ea-9b96-c2fc97cad870.png)\r\n"},{"Id":"12132826410","Type":"IssuesEvent","CreatedAt":"2020-04-23T07:59:56","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8106","RelatedDescription":"Closed issue \"Improve understanding of errors during ILC compilation\" (#8106) at dotnet/corert","RelatedBody":"I try to compile No Runtime example on Linux for SeeSharpSnake and it gives me following error:\r\n```\r\n  System.InvalidOperationException: Expected type 'Internal.Runtime.CompilerHelpers.InteropHelpers' not found in module 'SeeSharpSnake'\r\n     at Internal.IL.HelperExtensions.GetKnownType(ModuleDesc module, String namespace, String name)\r\n     at Internal.IL.HelperExtensions.GetHelperType(TypeSystemContext context, String name)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitPInvokeCall(PInvokeILCodeStreams ilCodeStreams)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL()\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL(MethodDesc method, PInvokeILEmitterConfiguration pinvokeILEmitterConfiguration, InteropStateManager interopStateManager)\r\n     at ILCompiler.Compilation.CombinedILProvider.GetMethodIL(MethodDesc method)\r\n     at ILCompiler.Compilation.ILCache.CreateValueFromKey(MethodDesc key)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.Compilation.GetMethodIL(MethodDesc method)\r\n     at Internal.IL.ILImporter..ctor(ILScanner compilation, MethodDesc method, MethodIL methodIL)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nFrom this stack trace this is non-actionable for me without building CoreRT myself. I definitely can do that, but what if somebody read article and just try to go with out-of-box experience. Current message not very friendly. \r\n\r\n"},{"Id":"12132730821","Type":"PullRequestEvent","CreatedAt":"2020-04-23T07:49:37","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/8105","RelatedDescription":"Merged pull request \"Print information about method which fails the IL compilation process\" (#8105) at dotnet/corert","RelatedBody":"This allow to better understsand what part of code break application"},{"Id":"12123545460","Type":"IssuesEvent","CreatedAt":"2020-04-22T12:54:04","Actor":"samcragg","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/8084","RelatedDescription":"Closed issue \"ilc package options\" (#8084) at dotnet/corert","RelatedBody":"I'm using the ilc to compile some managed code into a library that I'm then linking with my C++ project so would like to redistribute the ILCompiler inside my package.\r\n\r\nSince I'm only targeting Win64 and Linux64, I was hoping to try to publish the ILCompiler as a [runtime dependent](https://docs.microsoft.com/en-us/dotnet/core/deploying/#publish-runtime-dependent) package for both platforms and include them in a single package to simplify things, however, when building everything is build with the .NET Core 2.1\r\n\r\nMy naive attempt to upgrade to change `DotnetCLIVersion.txt`, however, that didn't go well. So I thought I'd change the publish step to use my local dotnet version to publish instead of the one in Tools, however, it seems the `ILCompiler/netcoreapp/ilc.csproj` isn't a real project but just there to create a native exe that can launch the dll built at a later step.\r\n\r\nSo, my question is, what would be the best way to reduce the ILCompiler package size? One option would be to dogfeed the compiler to itself, however, I think I have the same issue as above - what is the actual project that needs compiling to create the managed- > C++ library compiler?\r\n\r\nAlternatively, is there anything I can do to get the compiler to use the locally installed SDK rather than the one in the Tools directory (i.e. creating the runtime dependent one).\r\n\r\nAny pointers would be much appreciated, thanks 🙂 "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"12143381861","Type":"IssuesEvent","CreatedAt":"2020-04-24T04:44:54","Actor":"andrew-boyarshin","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/11407","RelatedDescription":"Opened issue \"Microsoft.NETFramework.ReferenceAssemblies is not marked as PrivateAssets=All\" (#11407) at dotnet/sdk","RelatedBody":"I've spent some time fine-tuning SharpGen.Runtime dependency graph and there is one unexpected public dependency for 4.7.1.\r\n![NuGet Package Explorer](https://user-images.githubusercontent.com/3063662/80175653-616f9700-8620-11ea-80a5-5bce2ebfa2de.png)\r\n\r\n[Design spec](https://github.com/dotnet/designs/blob/master/accepted/2020/targeting-packs/targeting-packs.md) mentiones that:\r\n> The reference assembly packages should not show up as dependencies of \"normal\" packages. Thus, the reference assembly packages should set developmentDependency to true in it's metadata. Likewise, when the .NET SDK automatically references the reference assembly metapackage, it should use PrivateAssets=\"All\".\r\n\r\nBut the implementation in #10981 omitted the last part."},{"Id":"12143216610","Type":"IssuesEvent","CreatedAt":"2020-04-24T04:12:33","Actor":"danmosemsft","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/11400","RelatedDescription":"Closed issue \"Require minimum Powershell version in dotnet-install.ps1?\" (#11400) at dotnet/sdk","RelatedBody":"See https://github.com/dotnet/runtime/issues/35301 -- it seems 5.1 can fail cryptically. According to https://github.com/PowerShell/PowerShell/issues/12442 this is out of support.\r\n\r\nIf we want dotnet-install.ps1 to be as helpful as possible (since it's our front door for many people) perhaps it should ensure that the Powershell version installed is new enough.  At the moment, that seems to be 6.2 : https://docs.microsoft.com/en-us/powershell/scripting/powershell-support-lifecycle?view=powershell-7 . (If that's the case, then we can also update our own [build requirements](https://github.com/dotnet/runtime/blob/master/docs/workflow/requirements/windows-requirements.md) which currently say 3.0.)\r\n\r\nConversely however on my Windows 10 machine, I see I have 5.1, and dotnet-install.ps1 appears to work. Perhaps the issue this user encountered is obscure, and we should continue to plow ahead no matter the Powershell version."},{"Id":"12143151417","Type":"PullRequestEvent","CreatedAt":"2020-04-24T03:59:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11406","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview4] Update dependencies from aspnet/websdk\" (#11406) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 91a94d90-8ff5-4956-30bf-08d7d677f4fe\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/24/2020 1:03 AM\r\n- **Commit**: 96658753683bf4691102d34bb05f8dadc6f7fc81\r\n- **Branch**: refs/heads/release/5.0.1xx-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.4.20221.2 to 5.0.100-preview.4.20223.2\r\n\r\n[marker]: <> (End:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n\r\n"},{"Id":"12142825692","Type":"PullRequestEvent","CreatedAt":"2020-04-24T02:56:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11405","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore\" (#11405) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c1beccfa-b173-4021-38cb-08d7d6783975\r\n- **Build**: 20200423.5\r\n- **Date Produced**: 4/23/2020 5:57 PM\r\n- **Commit**: 88433aa035f30dd5598d9e67875bd246d839321e\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20221.8 to 5.0.0-preview.4.20223.5\r\n\r\n[marker]: <> (End:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n\r\n"},{"Id":"12142565346","Type":"PullRequestEvent","CreatedAt":"2020-04-24T02:05:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11404","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/aspnetcore\" (#11404) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200423.13\r\n- **Date Produced**: 4/23/2020 9:57 PM\r\n- **Commit**: bf6f620791a7c7d3e957e4054394a0a9eb0330c0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.13\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n"},{"Id":"12142332825","Type":"PullRequestEvent","CreatedAt":"2020-04-24T01:18:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11406","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview4] Update dependencies from aspnet/websdk\" (#11406) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 91a94d90-8ff5-4956-30bf-08d7d677f4fe\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/24/2020 1:03 AM\r\n- **Commit**: 96658753683bf4691102d34bb05f8dadc6f7fc81\r\n- **Branch**: refs/heads/release/5.0.1xx-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.4.20221.2 to 5.0.100-preview.4.20223.2\r\n\r\n[marker]: <> (End:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n\r\n"},{"Id":"12142144953","Type":"PullRequestEvent","CreatedAt":"2020-04-24T00:40:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/11403","RelatedDescription":"Merged pull request \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11403) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.7 to 5.0.0-preview.4.20223.2 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/23/2020 9:04 PM\r\n- **Commit**: bd450fe31719535354256538ff6b65d78cf1d08b\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20222.5 to 5.0.0-preview.4.20223.2\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.7 to 5.0.0-preview.4.20223.2\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n"},{"Id":"12141995721","Type":"PullRequestEvent","CreatedAt":"2020-04-24T00:11:09","Actor":"sbomer","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11317","RelatedDescription":null,"RelatedBody":"For now this just adds private properties to make it easier for SDK components to set ILLink arguments (instead of using `_ExtraTrimmerArgs`). Most of them are not set by default, with the exception of `_TrimmerDefaultAction` which replaces the `-c` and `-u` flags.\r\n\r\nI don't think there is much to test here, since most of the new properties are not tied to existing SDK logic. An existing test checks the behavior for `_TrimmerDefaultAction`, and I have added a sanity check that the boolean options for the optimizations are actually used by validating that they produce errors if they're not boolean. The functionality of the options themselves is tested in https://github.com/mono/linker.\r\n\r\nfixes https://github.com/dotnet/sdk/issues/11006."},{"Id":"12141995485","Type":"PullRequestEvent","CreatedAt":"2020-04-24T00:11:07","Actor":"sbomer","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/11317","RelatedDescription":"Closed pull request \"Add MSBuild properties for common ILLink arguments\" (#11317) at dotnet/sdk","RelatedBody":"For now this just adds private properties to make it easier for SDK components to set ILLink arguments (instead of using `_ExtraTrimmerArgs`). Most of them are not set by default, with the exception of `_TrimmerDefaultAction` which replaces the `-c` and `-u` flags.\r\n\r\nI don't think there is much to test here, since most of the new properties are not tied to existing SDK logic. An existing test checks the behavior for `_TrimmerDefaultAction`, and I have added a sanity check that the boolean options for the optimizations are actually used by validating that they produce errors if they're not boolean. The functionality of the options themselves is tested in https://github.com/mono/linker.\r\n\r\nfixes https://github.com/dotnet/sdk/issues/11006."},{"Id":"12141988300","Type":"PullRequestEvent","CreatedAt":"2020-04-24T00:09:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/11405","RelatedDescription":"Opened pull request \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore\" (#11405) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c1beccfa-b173-4021-38cb-08d7d6783975\r\n- **Build**: 20200423.5\r\n- **Date Produced**: 4/23/2020 5:57 PM\r\n- **Commit**: 88433aa035f30dd5598d9e67875bd246d839321e\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20221.8 to 5.0.0-preview.4.20223.5\r\n\r\n[marker]: <> (End:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"601195169","IsPullRequest":true,"CreatedAt":"2020-04-16T15:55:03","Actor":"NextTurn","Number":"190","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/190","RelatedDescription":"Open PR \"Fix broken links\" (#190)"},{"Id":"600406233","IsPullRequest":true,"CreatedAt":"2020-04-15T15:55:04","Actor":"NextTurn","Number":"189","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/189","RelatedDescription":"Open PR \"Fix broken links\" (#189)"},{"Id":"599781898","IsPullRequest":true,"CreatedAt":"2020-04-14T19:06:28","Actor":"ENikS","Number":"188","RawContent":null,"Title":"Added Unity Contaienr project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/188","RelatedDescription":"Closed or merged PR \"Added Unity Contaienr project\" (#188)"},{"Id":"598969427","IsPullRequest":true,"CreatedAt":"2020-04-13T18:28:42","Actor":"NextTurn","Number":"187","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/187","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#187)"},{"Id":"598601377","IsPullRequest":true,"CreatedAt":"2020-04-13T00:27:33","Actor":"dansiegel","Number":"186","RawContent":null,"Title":"update for Prism contacts / links","State":"closed","Body":"# Description\r\n\r\nVarious updates for out of date links, License reference and project contacts","Url":"https://github.com/dotnet/foundation/pull/186","RelatedDescription":"Closed or merged PR \"update for Prism contacts / links\" (#186)"},{"Id":"597960383","IsPullRequest":true,"CreatedAt":"2020-04-10T17:34:10","Actor":"NextTurn","Number":"185","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/185","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#185)"},{"Id":"597382294","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:57","Actor":"NextTurn","Number":"184","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/184","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#184)"},{"Id":"595976496","IsPullRequest":true,"CreatedAt":"2020-04-10T17:33:42","Actor":"NextTurn","Number":"183","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/183","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#183)"},{"Id":"595536249","IsPullRequest":true,"CreatedAt":"2020-04-07T01:58:57","Actor":"david-driscoll","Number":"182","RawContent":null,"Title":"Adding OmniSharp to projects list","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/182","RelatedDescription":"Open PR \"Adding OmniSharp to projects list\" (#182)"},{"Id":"591106079","IsPullRequest":true,"CreatedAt":"2020-04-03T14:07:19","Actor":"MikeWilliams-UK","Number":"176","RawContent":null,"Title":"Update links and name","State":"closed","Body":"* Rename from V3.1 to 2020\r\n* Update links\r\n* Update logo","Url":"https://github.com/dotnet/foundation/pull/176","RelatedDescription":"Closed or merged PR \"Update links and name\" (#176)"},{"Id":"593397853","IsPullRequest":true,"CreatedAt":"2020-04-03T14:06:53","Actor":"galvesribeiro","Number":"181","RawContent":null,"Title":"Add Docker.DotNet","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/181","RelatedDescription":"Closed or merged PR \"Add Docker.DotNet\" (#181)"},{"Id":"592950571","IsPullRequest":true,"CreatedAt":"2020-04-02T22:57:48","Actor":"terrajobst","Number":"180","RawContent":null,"Title":"Link Code of Conduct","State":"closed","Body":"See [this policy rule](https://github.com/dotnet/org-policy/blob/master/doc/PR15.md) for more details.","Url":"https://github.com/dotnet/foundation/pull/180","RelatedDescription":"Closed or merged PR \"Link Code of Conduct\" (#180)"},{"Id":"591566329","IsPullRequest":true,"CreatedAt":"2020-04-01T20:28:35","Actor":"mzorec","Number":"179","RawContent":null,"Title":"Add FlubuCore","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/179","RelatedDescription":"Closed or merged PR \"Add FlubuCore\" (#179)"},{"Id":"587112642","IsPullRequest":true,"CreatedAt":"2020-04-01T14:37:46","Actor":"ChrisSfanos","Number":"171","RawContent":null,"Title":"Create new-projects-v2.md","State":"closed","Body":"First draft of the new project onboarding workflow guide\r\n\r\n@clairernovotny  - please take a look.  I still obviously need the legal wordsmith stuff from Brad, but wanted to get a first draft written.  When we finally sign off, we can change the .NET Foundation website to point to this vs Jon's original doc","Url":"https://github.com/dotnet/foundation/pull/171","RelatedDescription":"Closed or merged PR \"Create new-projects-v2.md\" (#171)"},{"Id":"591476617","IsPullRequest":true,"CreatedAt":"2020-03-31T23:59:05","Actor":"grokys","Number":"178","RawContent":null,"Title":"Add Avalonia","State":"closed","Body":"Added the Avalonia project.","Url":"https://github.com/dotnet/foundation/pull/178","RelatedDescription":"Closed or merged PR \"Add Avalonia\" (#178)"},{"Id":"591271059","IsPullRequest":true,"CreatedAt":"2020-03-31T17:18:16","Actor":"sbwalker","Number":"177","RawContent":null,"Title":"Add Oqtane to .NET Foundation","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/177","RelatedDescription":"Closed or merged PR \"Add Oqtane to .NET Foundation\" (#177)"},{"Id":"590650300","IsPullRequest":true,"CreatedAt":"2020-03-31T12:47:04","Actor":"tidyui","Number":"175","RawContent":null,"Title":"Added Piranha CMS","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/175","RelatedDescription":"Closed or merged PR \"Added Piranha CMS\" (#175)"},{"Id":"590486634","IsPullRequest":true,"CreatedAt":"2020-03-31T00:05:11","Actor":"dmetzgar","Number":"174","RawContent":null,"Title":"Add CoreWF to projects list","State":"closed","Body":"Fixes https://github.com/UiPath-Open/corewf/issues/95","Url":"https://github.com/dotnet/foundation/pull/174","RelatedDescription":"Closed or merged PR \"Add CoreWF to projects list\" (#174)"},{"Id":"589791715","IsPullRequest":true,"CreatedAt":"2020-03-29T13:39:43","Actor":"MarcoRossignoli","Number":"173","RawContent":null,"Title":"Add Coverlet project","State":"closed","Body":"Add Coverlet project\r\n\r\nIssue ref https://github.com/tonerdo/coverlet/issues/386\r\n\r\ncc: @tonerdo @petli","Url":"https://github.com/dotnet/foundation/pull/173","RelatedDescription":"Closed or merged PR \"Add Coverlet project\" (#173)"},{"Id":"589663157","IsPullRequest":true,"CreatedAt":"2020-03-29T13:28:54","Actor":"sfmskywalker","Number":"172","RawContent":null,"Title":"Added Elsa Workflows project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/172","RelatedDescription":"Closed or merged PR \"Added Elsa Workflows project\" (#172)"},{"Id":"585731828","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:58","Actor":"deadlyvices","Number":"170","RawContent":null,"Title":"Update chem4word.md","State":"closed","Body":"Snappier intro","Url":"https://github.com/dotnet/foundation/pull/170","RelatedDescription":"Closed or merged PR \"Update chem4word.md\" (#170)"},{"Id":"579459510","IsPullRequest":true,"CreatedAt":"2020-03-27T19:06:41","Actor":"JeremySkinner","Number":"166","RawContent":null,"Title":"Adds FluentValidation to the project list","State":"closed","Body":"As per https://github.com/dotnet-foundation/projects/issues/27","Url":"https://github.com/dotnet/foundation/pull/166","RelatedDescription":"Closed or merged PR \"Adds FluentValidation to the project list\" (#166)"},{"Id":"580245857","IsPullRequest":true,"CreatedAt":"2020-03-20T19:07:33","Actor":"jogibear9988","Number":"167","RawContent":null,"Title":"linq2db","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/167","RelatedDescription":"Closed or merged PR \"linq2db\" (#167)"},{"Id":"583379863","IsPullRequest":true,"CreatedAt":"2020-03-20T15:29:59","Actor":"bruno-garcia","Number":"168","RawContent":null,"Title":"add NuGet Trends","State":"closed","Body":"Adding NuGet Trends.\r\n/cc @clairernovotny, @joaopgrassi","Url":"https://github.com/dotnet/foundation/pull/168","RelatedDescription":"Closed or merged PR \"add NuGet Trends\" (#168)"},{"Id":"583999953","IsPullRequest":true,"CreatedAt":"2020-03-18T21:16:17","Actor":"mairaw","Number":"169","RawContent":null,"Title":"update URLs","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/169","RelatedDescription":"Closed or merged PR \"update URLs\" (#169)"},{"Id":"578962559","IsPullRequest":true,"CreatedAt":"2020-03-11T02:10:52","Actor":"SteveSyfuhs","Number":"165","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/165","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#165)"},{"Id":"578255669","IsPullRequest":true,"CreatedAt":"2020-03-11T02:06:45","Actor":"SteveSyfuhs","Number":"163","RawContent":null,"Title":"Added Kerberos.NET project","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/163","RelatedDescription":"Closed or merged PR \"Added Kerberos.NET project\" (#163)"},{"Id":"578822542","IsPullRequest":true,"CreatedAt":"2020-03-11T00:55:30","Actor":"oskardudycz","Number":"164","RawContent":null,"Title":"Add Marten to DNF","State":"closed","Body":"This PR is part of the Marten onboarding process (see, https://github.com/dotnet-foundation/projects/issues/47).\r\n\r\nThis PR adds the Marten md page and entry to the main listing.","Url":"https://github.com/dotnet/foundation/pull/164","RelatedDescription":"Closed or merged PR \"Add Marten to DNF\" (#164)"},{"Id":"577522629","IsPullRequest":true,"CreatedAt":"2020-03-08T16:27:23","Actor":"AArnott","Number":"162","RawContent":null,"Title":"Create nerdbank-gitversioning.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/162","RelatedDescription":"Closed or merged PR \"Create nerdbank-gitversioning.md\" (#162)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"604969346","IsPullRequest":true,"CreatedAt":"2020-04-22T18:27:17","Actor":"sdmaclea","Number":"28035","RawContent":null,"Title":"Backport Cross DAC runtime layout changes","State":"open","Body":"This represents the minimum set of changes required to\r\nbe able to build the Cross DAC out of band.\r\n\r\nThis fixes the layout difference between the Windows\r\ncompiler and the clang Linux compiler.\r\n\r\nThe code adds `alignas` directives to allow cross OS compilation type layouts to match.\r\nAlso moves a bool into a bitfield. \r\n\r\n# Customer impact\r\n\r\nThis allows us to develop and test a new 3.1 feature (#28027) allowing triage of Linux dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is in support of a new 3.1 feature.\r\n\r\n # Testing\r\n\r\nThis has been tested by using a PDB to Dwarf comparison tool to check type layouts.\r\n\r\nThis is based on a PR which has been in the 5.0 branch for a ~6 weeks.\r\n\r\n # Risk\r\n\r\nLow\r\n","Url":"https://github.com/dotnet/coreclr/pull/28035","RelatedDescription":"Open PR \"Backport Cross DAC runtime layout changes\" (#28035)"},{"Id":"580316086","IsPullRequest":true,"CreatedAt":"2020-04-17T19:59:21","Actor":"sdmaclea","Number":"28028","RawContent":null,"Title":"WIP Support older 3.x releases with cross OS backport (for testing)","State":"closed","Body":"This is a little more than #28027","Url":"https://github.com/dotnet/coreclr/pull/28028","RelatedDescription":"Closed or merged PR \"WIP Support older 3.x releases with cross OS backport (for testing)\" (#28028)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-04-17T17:12:54","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Closed or merged PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"599126504","IsPullRequest":true,"CreatedAt":"2020-04-13T20:46:51","Actor":"dotnet-maestro-bot","Number":"28034","RawContent":null,"Title":"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28034","RelatedDescription":"Open PR \"Update BuildTools, CoreClr, CoreFx to rc1-05113-01, servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28034)"},{"Id":"567714729","IsPullRequest":true,"CreatedAt":"2020-03-31T21:15:35","Actor":"dotnet-maestro-bot","Number":"28022","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/28022","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx to servicing-28619-01, servicing-28619-01, respectively (release/2.1)\" (#28022)"},{"Id":"584089447","IsPullRequest":true,"CreatedAt":"2020-03-27T03:30:09","Actor":"janvorli","Number":"28029","RawContent":null,"Title":"Port to 3.1 - Fix handling thread abort in HelperMethodFrame","State":"closed","Body":"The thread abort during func eval from a managed debugger on Linux and macOS\r\nwas sometimes causing the debuggee to exit with unhandled c++ PAL_SEHException.\r\nThe reason is that the thread abort detection that is done in the\r\nHELPER_METHOD_FRAME_BEGIN and ...END macros was done outside of the\r\nINSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion and so the exception thrown when thread abort request is detected\r\nthere was not being caught and translated into a call to DispatchManagedException.\r\nSince the caller frame was a managed function frame, the C++ exception handling\r\ndidn't know how to unwind it and so it declared the exception being unhandled.\r\n\r\nThis fix moves the check for the thread abort out of the HelperMethodFrame::Push/Pop\r\ninto a new method and calls that explicitly from the HELPER_METHOD_* macros inside\r\nthe INSTALL_MANAGED_EXCEPTION_DISPATCHER / UNINSTALL_MANAGED_EXCEPTION_DISPATCHER\r\nregion. That way, the thread abort exception is properly handled.\r\n\r\n # Customer impact\r\n\r\n.NET Core apps randomly terminate with unhandled c++ PAL_SEHException when a customer\r\ndebugs an app under managed debuggers (VS Code, 3rd party debuggers) and tries to\r\nview a property value.\r\n\r\n # Regression?\r\nNo, this problem has been present since .NET Core 1.0\r\n\r\n # Testing\r\nDebugger dotnet-diagnostictests\r\n\r\n # Risk\r\nLow, the modified code is executed heavily (on every JIT helper)","Url":"https://github.com/dotnet/coreclr/pull/28029","RelatedDescription":"Closed or merged PR \"Port to 3.1 - Fix handling thread abort in HelperMethodFrame\" (#28029)"},{"Id":"588639746","IsPullRequest":true,"CreatedAt":"2020-03-26T18:36:55","Actor":"sdmaclea","Number":"28033","RawContent":null,"Title":"For 3.1 Backport #25958 Modify amd64walker to use table based decode","State":"open","Body":"Fixes dotnet/runtime#34109\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/coreclr/pull/25958). This PR ports that fix to _release/3.1_.\r\n\r\n## Customer Impact\r\n\r\nSetting a debugger breakpoint on Amd64 (x64) can result in incorrect calculation of floating point values. \r\n\r\n## Regression?\r\n\r\nThis was a known and difficult to fix issue. The hand written Amd64 instruction parser was flaky and nearly impossible to maintain.\r\n\r\nThe problem arose because the debugger must determine the length and form of the instruction where the breakpoint is inserted. The original code was a minimal implementation which only covered the instruction form historically used by the JIT.  As new forms and especially intrinsics were added, the code was not updated because the complexity was far too high. \r\n\r\nThe fix required was this substantial change. At the time we missed the 3.0 branch and we did not have sufficient feedback to consider backport to 3.x.\r\n\r\n## Testing\r\n\r\n+ This code was manually tested to fix the originally reported issue.\r\n+ The code has been in the 5.0 branch for more than 6 months with no new regressions\r\n+ The 5.0 code has been tested against recently reported similar issues\r\n+ The internal diagnostic test suite was amended to test for this issue and prevent further identical regressions.\r\n\r\n## Risk\r\nLow. \r\n+ Only affects debugger operation.\r\n+ Removes a flaky instruction parser and replaces it with a machine generated one.  \r\n+ Adds tools to regenerate the parser tables\r\n+ Adds documentation\r\n \r\n## Code Reviewer\r\n@hoyosjs @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28033","RelatedDescription":"Open PR \"For 3.1 Backport #25958 Modify amd64walker to use table based decode\" (#28033)"},{"Id":"587768007","IsPullRequest":true,"CreatedAt":"2020-03-26T17:08:27","Actor":"gbalykov","Number":"28032","RawContent":null,"Title":"[release/3.1] Fix Runtime_1241 test build","State":"closed","Body":"Runtime_1241 test doesn't build without this change.\r\n\r\ncc @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/28032","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix Runtime_1241 test build\" (#28032)"},{"Id":"570086508","IsPullRequest":true,"CreatedAt":"2020-03-25T23:18:18","Actor":"AndyAyersMS","Number":"28024","RawContent":null,"Title":"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)","State":"closed","Body":"If we're promoting a long field, make sure `compLongUsed` gets set.\r\nOtherwise we may fail to properly decompose a long later on, leading\r\nto access violations in the jit.\r\n\r\nSee dotnet/runtime#32059 for the original bug report, and\r\ndotnet/runtime#32702 for the fix in 5.0.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash in the jit. No easy workaround.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: fix is surgical and enables existing long operand handling in\r\nthe jit in one case that can be overlooked. Only impacts x86 and arm\r\ncodegen. Problematic IL patterns may not be reachable from C#.","Url":"https://github.com/dotnet/coreclr/pull/28024","RelatedDescription":"Closed or merged PR \"Port fix for dotnet/runtime#32059 to release/3.1 (JIT: make sure to set compLongUsed during struct promotion)\" (#28024)"},{"Id":"579461507","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:42","Actor":"omajid","Number":"28026","RawContent":null,"Title":"[release/3.1] Fix build with clang 10","State":"closed","Body":"This fixes 3 different sets of build issues that are seen when compiling with clang 10.\r\n\r\n- Clang 10 fails to compile slist.h because the code contained is   actually invalid. The assignment operator being used doesn't exist.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/33096\r\n\r\n- Clang 10 has moved exception-handling mismatches in function declarations under the -fms-compatibility flag (instead of the -fms-extensions flag). Our declarations of atoll and other similar functions are missing the exception declaration `throw()`. This mismatch in exception declarations makes clang 10 unable to build this code. Fix it by defining THROW_DECL as `throw()` which is supported at least as far back as clang 3.3.\r\n\r\n  This is a backport of https://github.com/dotnet/runtime/pull/32837\r\n\r\n- Clang 10 has enabled additional warnings. Lets turn of -Werror globally in this release branch by making the `-ignorewarnings` switch  to `./build.sh` be the default.","Url":"https://github.com/dotnet/coreclr/pull/28026","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build with clang 10\" (#28026)"},{"Id":"577917254","IsPullRequest":true,"CreatedAt":"2020-03-25T20:36:25","Actor":"janvorli","Number":"28025","RawContent":null,"Title":"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle","State":"closed","Body":"When there is a race calling RuntimeType.InitializeCache, each of the\r\nracing threads creates a new GC handle using\r\nnew\r\nRuntimeTypeHandle(this).GetGCHandle(GCHandleType.WeakTrackResurrection);\r\nThis ends up calling RuntimeTypeHandle::GetGCHandle native method that\r\nadds the allocated handle into the handle cleanup list of the\r\nAssemblyLoaderAllocator specific for the runtime type.\r\nAll but the winning thread then call GCHandle.InternalFree on the just\r\nallocated handle. That frees the handle, but leaves it on the cleanup\r\nlist of the loader allocator. The same handle can be later allocated for\r\nsome\r\nother purpose. When the AssemblyLoaderAllocator is being destroyed, all\r\nthe handles on the cleanup list are destroyed too. So it destroys also\r\nthe handle that was left on the cleanup list incorrectly. That can cause\r\nall kinds of hard to diagnose issues, like the\r\nhttps://github.com/dotnet/runtime/issues/32171.\r\n\r\nThis change fixes it by adding a FreeGCHandle method on the\r\nRuntimeTypeHandle that besides freeing the handle also removes it from\r\nthe cleanup list of the related AssemblyLoadContext.\r\n\r\n ## Customer impact\r\nHard to diagnose crashes in the runtime caused by closing of random\r\nGC handles. The customer that has reported this issue was using\r\ncollectible assemblies and it was resulting in collecting\r\nLoaderAllocator that was still in use and it lead to crashes at various\r\nplaces.\r\n\r\n ## Regression?\r\nYes, it was introduced in 3.0. In 2.1 and 2.2, the thread that loses\r\nthe race destroys the handle only if the type was not in a collectible\r\nassembly. Since the non-collectible assemblies LoaderAllocator is never\r\ndestroyed, the handles were never cleaned up and so no problem could occur.\r\nIt was introduced in https://github.com/dotnet/coreclr/pull/21737\r\n\r\n ## Testing\r\nCustomer affected by the issue heavily has tested a fixed version and\r\nreported the issue doesn't occur anymore.\r\n\r\n ## Risk\r\nLow, the new code is executed at single place once per process runtine\r\nonly when a thread races for allocating the GC handle with another one\r\nand loses the race.","Url":"https://github.com/dotnet/coreclr/pull/28025","RelatedDescription":"Closed or merged PR \"Port to 3.1: Fix allocation of RuntimeTypeCache GC handle\" (#28025)"},{"Id":"569148773","IsPullRequest":true,"CreatedAt":"2020-03-25T20:35:59","Actor":"hoyosjs","Number":"28023","RawContent":null,"Title":"[3.1 port] Fix debugger crash during unload of assemblies in ALC","State":"closed","Body":"Issue dotnet/runtime#2317 reports that trying to use unloadable ALCs under the debugger often ends up in a crash. There was a missing implementation when removing values from the module cache which in turn triggered a sporadic bad error in the DAC\r\n\r\nThis has already been fixed in .NET 5 (see dotnet/runtime#32311). This PR ports that fix down to _release/3.1_.\r\n\r\nFixes dotnet/runtime#2317\r\n\r\n## Customer Impact\r\nInner loop get's heavily impacted for plugin scenarios. From dotnet/runtime#2317 \r\n> Developing/using the use cases that where described in the .net core announcement under [Assembly Unloadability](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0) is slowed down as it is not possible to debug any scenario that requires assembly unloading. Without this fix the application must be restarted or tested without a debugger attached. This makes plugin development very annoying and less attractive.\r\n\r\nAlso see https://developercommunity.visualstudio.com/content/problem/698374/vs2019-and-fatal-error-has-occurred-and-debugging.html\r\n\r\n## Regression?\r\nNot a regression. Unloadable ALC's were introduced in the 3.0/3.1 time-frame as a new feature. However, adoption is cumbersome on inner loop due to this. \r\n\r\n## Testing\r\nThere's currently work in flight to add ALCs and unloadability verification for debugger scenarios. \r\n\r\n## Risk\r\nLow. The only code path that reaches this is exactly the one that's getting fixed and that still has somewhat low adoption. \r\n\r\n## Code Reviewer\r\n@sdmaclea ","Url":"https://github.com/dotnet/coreclr/pull/28023","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix debugger crash during unload of assemblies in ALC\" (#28023)"},{"Id":"587357484","IsPullRequest":true,"CreatedAt":"2020-03-25T18:36:02","Actor":"Anipik","Number":"28030","RawContent":null,"Title":"update branding for coreclr to 3.1.4","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28030","RelatedDescription":"Closed or merged PR \"update branding for coreclr to 3.1.4\" (#28030)"},{"Id":"587368335","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:19","Actor":"Anipik","Number":"28031","RawContent":null,"Title":"update branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28031","RelatedDescription":"Closed or merged PR \"update branding for 2.1.18\" (#28031)"},{"Id":"580315472","IsPullRequest":true,"CreatedAt":"2020-03-13T01:29:34","Actor":"sdmaclea","Number":"28027","RawContent":null,"Title":"Port Cross OS DAC to 3.1","State":"open","Body":"This represents the changes required to enable Cross OS/Arch DAC for the 3.1 product. This new feature will allow triage and debug of \r\n\r\nThis is currently a superset of #28035, which is the minimum changes to the runtime to allow us to build the Cross DAC out of band and have it work correctly.\r\n\r\n**_This patch set is still under development._**  \r\n+ It is still missing the CI changes required to sign and publish the Cross DAC binaries.\r\n+ It is not fully tested.  This is blocked by a release containing #28035.\r\n+ Depending on partner requirements this change set could grow (likely to support full stack unwind support).\r\n\r\n# Customer impact\r\n\r\nThis implements a new diagnostic feature allowing triage of Linux/Linux-Alpine dumps on Windows.\r\n\r\n # Regression?\r\n\r\nNo, this is new 3.1 feature\r\n\r\n # Testing\r\n\r\nThis is based on a series of PR's from the 5.0 branch.\r\n\r\nWe will have Partner sign-off before we consider merging this PR.\r\n\r\nWe have initial manual test results for the new feature from our testing team.\r\n\r\n # Risk\r\n\r\nModerate\r\n\r\nThe intent is to make no functional changes to the runtime.  \r\n\r\nHowever, this change is large.  It introduces lots of changes to the build system and `#if` related to the `Target` and `Host` platform. This is not expected to change the runtime, because for the runtime `Target` == `Host`.  However due to the shear number of changes the change is difficult to exhaustively review.\r\n\r\nThe risk is mitigated in part because errors in the build systems and `#if` would typically trigger compile errors.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28027","RelatedDescription":"Open PR \"Port Cross OS DAC to 3.1\" (#28027)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"600820737","IsPullRequest":true,"CreatedAt":"2020-04-16T18:20:10","Actor":"v-chmart","Number":"13343","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416","State":"closed","Body":"Localization update","Url":"https://github.com/dotnet/cli/pull/13343","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/cli release/3.1.3xx | 20200416\" (#13343)"},{"Id":"599938219","IsPullRequest":true,"CreatedAt":"2020-04-15T15:52:29","Actor":"dotnet-maestro[bot]","Number":"13342","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200414.15\r\n- **Date Produced**: 4/15/2020 12:06 AM\r\n- **Commit**: 6f0edb1dfaf5a6c780719794a7dd7d945c320ebf\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20210.1 to 3.1.300-preview.20214.15\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13342","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13342)"},{"Id":"599201023","IsPullRequest":true,"CreatedAt":"2020-04-14T02:46:38","Actor":"mmitche","Number":"13341","RawContent":null,"Title":"[release/2.1.8xx] Merge from 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13341","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Merge from 2.1.6xx\" (#13341)"},{"Id":"599162695","IsPullRequest":true,"CreatedAt":"2020-04-13T23:03:41","Actor":"mmitche","Number":"13340","RawContent":null,"Title":"[release/2.1.6xx] Merge from 2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13340","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Merge from 2.1.5xx\" (#13340)"},{"Id":"599135961","IsPullRequest":true,"CreatedAt":"2020-04-13T21:59:20","Actor":"mmitche","Number":"13339","RawContent":null,"Title":"Update buildtools","State":"closed","Body":"Contains fix https://github.com/dotnet/buildtools/pull/2271, which keeps the build from failing if a retry of an upload passes.","Url":"https://github.com/dotnet/cli/pull/13339","RelatedDescription":"Closed or merged PR \"Update buildtools\" (#13339)"},{"Id":"597925022","IsPullRequest":true,"CreatedAt":"2020-04-10T15:37:23","Actor":"dotnet-maestro[bot]","Number":"13338","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200410.1\r\n- **Date Produced**: 4/10/2020 2:29 PM\r\n- **Commit**: 6f3d0952c6f206eca675ea1b9ed87f5e8cde2791\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk**: from 3.1.300-preview.20179.9 to 3.1.300-preview.20210.1\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13338","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13338)"},{"Id":"596161722","IsPullRequest":true,"CreatedAt":"2020-04-09T03:04:57","Actor":"dotnet-maestro[bot]","Number":"13336","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6558\r\n- **Date Produced**: 4/6/2020 10:48 PM\r\n- **Commit**: 863fc6bb184cccfe12caa03bea91b0ddc48843da\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks**: from 5.6.0-preview.2.6532 to 5.6.0-preview.3.6558\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13336","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13336)"},{"Id":"596672984","IsPullRequest":true,"CreatedAt":"2020-04-08T22:28:56","Actor":"mmitche","Number":"13337","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 templates","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13337","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 templates\" (#13337)"},{"Id":"596128162","IsPullRequest":true,"CreatedAt":"2020-04-08T21:24:49","Actor":"mmitche","Number":"13335","RawContent":null,"Title":"[release/3.1.3xx] Revert to 3.1.2 runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13335","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Revert to 3.1.2 runtime\" (#13335)"},{"Id":"596057168","IsPullRequest":true,"CreatedAt":"2020-04-07T21:02:37","Actor":"mmitche","Number":"13334","RawContent":null,"Title":"[release/2.1.5xx] Update feed tasks versions","State":"closed","Body":"Fix up the feed task version to match core-setup's 2.1 branch. Going on the hunch that the errors seen are not seen in core-setup.","Url":"https://github.com/dotnet/cli/pull/13334","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Update feed tasks versions\" (#13334)"},{"Id":"595947380","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:28","Actor":"mmitche","Number":"13333","RawContent":null,"Title":"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13333","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Merge from 2.1.5xx and 2.1.6xx\" (#13333)"},{"Id":"595947109","IsPullRequest":true,"CreatedAt":"2020-04-07T18:13:07","Actor":"mmitche","Number":"13332","RawContent":null,"Title":"[release/2.1.6xx] Merge from release/2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13332","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Merge from release/2.1.5xx\" (#13332)"},{"Id":"595497861","IsPullRequest":true,"CreatedAt":"2020-04-07T13:52:23","Actor":"mmitche","Number":"13331","RawContent":null,"Title":"[release/2.1.5xx] Enable TLS 1.2","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13331","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Enable TLS 1.2\" (#13331)"},{"Id":"593287142","IsPullRequest":true,"CreatedAt":"2020-04-03T10:37:45","Actor":"v-chmart","Number":"13330","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20200403","State":"open","Body":"Localization update.","Url":"https://github.com/dotnet/cli/pull/13330","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli master | 20200403\" (#13330)"},{"Id":"592091086","IsPullRequest":true,"CreatedAt":"2020-04-02T03:44:09","Actor":"dotnet-maestro[bot]","Number":"13329","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200401.6\r\n- **Date Produced**: 4/1/2020 5:23 PM\r\n- **Commit**: 06bdc9ce0f3f21c365b998a34165c9c6a8019589\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20201.6\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13329","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13329)"},{"Id":"589929295","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:17","Actor":"wli3","Number":"13315","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13315","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13315)"},{"Id":"589929389","IsPullRequest":true,"CreatedAt":"2020-04-02T03:14:10","Actor":"wli3","Number":"13316","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13316","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13316)"},{"Id":"589929746","IsPullRequest":true,"CreatedAt":"2020-04-02T03:13:52","Actor":"wli3","Number":"13317","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13317","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13317)"},{"Id":"591476705","IsPullRequest":true,"CreatedAt":"2020-04-01T16:03:25","Actor":"dotnet-maestro[bot]","Number":"13324","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 1d38dcf8-9350-49ec-24a2-08d7c517f22b\r\n- **Build**: 5.6.0.6532\r\n- **Date Produced**: 3/25/2020 11:01 PM\r\n- **Commit**: 1c2681b16a0bb9be9271abe043a1cbf892761ef8\r\n- **Branch**: dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.6.0-preview.2.6532\r\n\r\n[marker]: <> (End:1d38dcf8-9350-49ec-24a2-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13324","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from nuget/nuget.client\" (#13324)"},{"Id":"591660841","IsPullRequest":true,"CreatedAt":"2020-04-01T16:00:03","Actor":"dotnet-maestro[bot]","Number":"13327","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9f2ba0f1-e8d3-4958-c5dc-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13327","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/aspnetcore\" (#13327)"},{"Id":"591660845","IsPullRequest":true,"CreatedAt":"2020-04-01T15:59:56","Actor":"dotnet-maestro[bot]","Number":"13328","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: 9a2d95d4-e7b6-4af1-24a3-08d7c517f22b\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:9a2d95d4-e7b6-4af1-24a3-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13328","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/aspnetcore\" (#13328)"},{"Id":"591503112","IsPullRequest":true,"CreatedAt":"2020-04-01T15:56:15","Actor":"dotnet-maestro[bot]","Number":"13325","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: cadcf242-0374-4d70-4f28-08d7c5f06407\r\n- **Build**: 20200331.2\r\n- **Date Produced**: 4/1/2020 2:44 AM\r\n- **Commit**: 57d5bbb58f17a8cb3a82c81839c9379b4fcfe0d8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.4-servicing.20181.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.4\r\n\r\n[marker]: <> (End:cadcf242-0374-4d70-4f28-08d7c5f06407)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13325","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/core-setup\" (#13325)"},{"Id":"591660832","IsPullRequest":true,"CreatedAt":"2020-04-01T06:51:04","Actor":"dotnet-maestro[bot]","Number":"13326","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200331.15\r\n- **Date Produced**: 4/1/2020 5:42 AM\r\n- **Commit**: ffab087b73506f6622eff69e087efcb557efeef4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.4-servicing.20181.15\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13326","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13326)"},{"Id":"590005024","IsPullRequest":true,"CreatedAt":"2020-03-31T20:27:31","Actor":"dotnet-maestro-bot","Number":"13318","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* wli3\n* dsplaisted\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13318","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13318)"},{"Id":"590782764","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:55","Actor":"wli3","Number":"13321","RawContent":null,"Title":"Change mac build pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13321","RelatedDescription":"Closed or merged PR \"Change mac build pool\" (#13321)"},{"Id":"590783573","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:40","Actor":"wli3","Number":"13322","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13322","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13322)"},{"Id":"590814958","IsPullRequest":true,"CreatedAt":"2020-03-31T15:49:33","Actor":"wli3","Number":"13323","RawContent":null,"Title":"Change mac pool","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13323","RelatedDescription":"Closed or merged PR \"Change mac pool\" (#13323)"},{"Id":"589929171","IsPullRequest":true,"CreatedAt":"2020-03-30T18:56:44","Actor":"wli3","Number":"13314","RawContent":null,"Title":"Add retry on docker build","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13314","RelatedDescription":"Closed or merged PR \"Add retry on docker build\" (#13314)"},{"Id":"590031312","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:28","Actor":"dotnet-maestro[bot]","Number":"13319","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200329.7\r\n- **Date Produced**: 3/30/2020 6:18 AM\r\n- **Commit**: 974c51e8486a018d53394cc4852fd451eb940dd6\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.202-servicing.20179.7\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13319","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13319)"},{"Id":"590050283","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:19","Actor":"dotnet-maestro[bot]","Number":"13320","RawContent":null,"Title":"[release/3.1.3xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: e69455e3-8f1c-4360-24a1-08d7c517f22b\r\n- **Build**: 20200329.9\r\n- **Date Produced**: 3/30/2020 6:57 AM\r\n- **Commit**: b90f3aeb88e31f9519482ab5f665e953056598d5\r\n- **Branch**: refs/heads/release/3.1.3xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.300-preview.20179.9\r\n\r\n[marker]: <> (End:e69455e3-8f1c-4360-24a1-08d7c517f22b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13320","RelatedDescription":"Closed or merged PR \"[release/3.1.3xx] Update dependencies from dotnet/sdk\" (#13320)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"604545860","IsPullRequest":false,"CreatedAt":"2020-04-22T07:44:27","Actor":"msedi","Number":"1758","RawContent":null,"Title":"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1","State":"open","Body":"Most of our components are developed in .NET Standard 2.0. With the advent of .NET Core 3.0 MethodImplOptions.AggressiveOptimization was introduced. So we have decided to swithc to .NET Standard 2.1 and were assuming the AggressiveOptimization is available too, but it isn't. \r\n\r\n1. Is there any reason why this is so?\r\n2. What would be the impact if it's not available?\r\n3. Is there a workaround to use it?","Url":"https://github.com/dotnet/standard/issues/1758","RelatedDescription":"Open issue \"MethodImplOptions.AggressiveOptimization is nmot available in .NET Standard 2.1\" (#1758)"},{"Id":"603537790","IsPullRequest":false,"CreatedAt":"2020-04-20T21:11:20","Actor":"rummelsworth","Number":"1757","RawContent":null,"Title":"Expression.Call(Expression, MethodInfo, Expression) overload","State":"open","Body":"Discussed a few years ago at this SO question:\r\n\r\nhttps://stackoverflow.com/questions/41251676/expression-call-overload-for-calling-an-instance-method-expecting-a-single-arg\r\n\r\nThere doesn't seem to be a specialized `Expression.Call` overload for instance method invocation with a single argument, but there are such overloads for 2, 3, and 4 arguments. Currently, the `params`-ified overload can be used, but that allocates an array object unnecessarily.\r\n\r\nApparently the expected overload exists in .NET Core, it's just marked `internal` to maintain compile-time compatibility for when the 3rd argument is the literal `null`.\r\n\r\nhttps://github.com/dotnet/runtime/blob/faebda75e202d810b00ce8176c79363006f62113/src/libraries/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs#L1050\r\n\r\nAre there plans for .NET Standard and/or .NET 5+ to publish this overload?","Url":"https://github.com/dotnet/standard/issues/1757","RelatedDescription":"Open issue \"Expression.Call(Expression, MethodInfo, Expression) overload\" (#1757)"},{"Id":"597796979","IsPullRequest":false,"CreatedAt":"2020-04-10T09:33:40","Actor":"mandala16","Number":"1756","RawContent":null,"Title":"GAC assembly reference to .net core api.","State":"open","Body":"HI ,\r\n\r\nI created .net core api . Referenced .net framework reference on .net core api project. published and executed as windows service in another machine.  it's working fine but below scenario it's not working\r\n\r\n when i registered the referenced .net framework reference to GAC so I removed that reference on published folder but still api expecting reference assembly on published folder but that reference available on GAC. It's not picked from GAC.\r\n\r\nThanks,\r\nSuresh","Url":"https://github.com/dotnet/standard/issues/1756","RelatedDescription":"Open issue \"GAC assembly reference to .net core api.\" (#1756)"},{"Id":"597037757","IsPullRequest":false,"CreatedAt":"2020-04-09T05:48:02","Actor":"fatihyildizhan","Number":"1755","RawContent":null,"Title":"NetFX20 TypeLibType to .Net Standard","State":"open","Body":"I am working with `WindowsAPICodePack` and moving to .Net Standard 2.1. Is there a way to convert` TypeLibType` to .Net Standard?\r\n\r\nIt currently requires `Microsoft.NetFX20`.\r\n\r\n```\r\nusing System;\r\nusing System.Collections;\r\nusing System.Runtime.CompilerServices;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Microsoft.WindowsAPICodePack.Net\r\n{\r\n    [ComImport]\r\n    [TypeLibType(0x1040)]\r\n    [Guid(\"DCB00002-570F-4A9B-8D69-199FDBA5723B\")]\r\n    internal interface INetwork\r\n    { }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1755","RelatedDescription":"Open issue \"NetFX20 TypeLibType to .Net Standard\" (#1755)"},{"Id":"586350170","IsPullRequest":false,"CreatedAt":"2020-04-07T15:43:35","Actor":"user2150","Number":"1748","RawContent":null,"Title":"Is it legal to decompile .NET libraries?","State":"closed","Body":"As of version 16.5 the Visual Studio debugger includes a decompiler feature. But is it legal to decompile the .NET libraries? In the [license agreement](https://dotnet.microsoft.com/dotnet_library_license.htm) we read:\r\n\r\n\"You may not\" ... \"reverse engineer, decompile or disassemble the software, or otherwise attempt to derive the source code for the software, except and to the extent required by third party licensing terms governing use of certain open source components that may be included in the software;\"\r\n\r\nBut at the same time the .NET libraries are kind of opensource (although we can't get the source code sufficient for building the product, we can get it for investigation), and decompilation doesn't add anything except the ability to debug.\r\n\r\nSo can we do it? If no, what is the benefit of the new feature?\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/standard/issues/1748","RelatedDescription":"Closed issue \"Is it legal to decompile .NET libraries?\" (#1748)"},{"Id":"595131445","IsPullRequest":false,"CreatedAt":"2020-04-06T13:46:58","Actor":"Nekuskus","Number":"1754","RawContent":null,"Title":"System.TypeInitializationException","State":"open","Body":"I keep getting `System.TypeInitializationException: System.IO.FileNotFoundException: Can't find file or assembly 'System.Private.CoreLib, Version=4.0.0.0', Culture=neutral, PublicKeyToken=7cec85d7bea7798e` exception after moving my app from .NET Core to .NET Framework 4.7.2. I tried a few solutions including adding `<PackageReference Include=\"NETStandard.Library.NETFramework\" Version=\"2.0.0-preview2-25405-01\" />`. However nothing works. The exception occurs before executing any code.","Url":"https://github.com/dotnet/standard/issues/1754","RelatedDescription":"Open issue \"System.TypeInitializationException\" (#1754)"},{"Id":"594269060","IsPullRequest":false,"CreatedAt":"2020-04-05T05:25:41","Actor":"Mordahlhuilhulh","Number":"1753","RawContent":null,"Title":"Memory leak when build X509 chain","State":"open","Body":"I have .net standard project and my project is running on Linux \r\nI can see that there is a memory leak problem on the following lines:\r\n\r\nusing (X509Chain x509Chain = new X509Chain())\r\n{\t\r\n\tx509Chain.ChainPolicy.RevocationMode = X509RevocationMode.NoCheck;\r\n\tx509Chain.ChainPolicy.ExtraStore.AddRange(_trustedStore.ToArray());\r\n\r\n\tx509Chain.Build(Certificate);\r\n\r\n\t// Check if the returned errors in the build are acceptable\r\n\tif (x509Chain.ChainStatus.Any())\r\n\t{\r\n\t}\r\n}\r\n\r\nWhen running with a high load, the memory of the process starts at %MEM = 1.1 and after a few hours, the %MEM is  2.0\r\n\r\nAny help will be highly appreciated.\r\n","Url":"https://github.com/dotnet/standard/issues/1753","RelatedDescription":"Open issue \"Memory leak when build X509 chain\" (#1753)"},{"Id":"592577113","IsPullRequest":true,"CreatedAt":"2020-04-02T12:20:49","Actor":"dotnet-maestro[bot]","Number":"1752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 4:57 PM\r\n- **Commit**: bce0a98620c1c5a110b2bba9912f3d5929069c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20201.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20201.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1752)"},{"Id":"587316824","IsPullRequest":true,"CreatedAt":"2020-03-31T15:08:39","Actor":"mmitche","Number":"1749","RawContent":null,"Title":"Feed cleanup","State":"closed","Body":"Switch away from blob feeds","Url":"https://github.com/dotnet/standard/pull/1749","RelatedDescription":"Closed or merged PR \"Feed cleanup\" (#1749)"},{"Id":"591048752","IsPullRequest":true,"CreatedAt":"2020-03-31T12:25:46","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1751","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1751)"},{"Id":"590745147","IsPullRequest":false,"CreatedAt":"2020-03-31T02:49:39","Actor":"tb-mtg","Number":"1750","RawContent":null,"Title":"System.Data.Linq.Mapping namespace missing","State":"open","Body":"Why were object in namespace **System.Data.Linq.Mapping** not included in .Net Standard 2.0?\r\n\r\nWhat can be used as the equivalent for the likes of AssociationAttribute, ColumnAttribute, TableAttribute, etc.\r\n\r\n Could an Abstraction nuget package be created like some other namespaces have?","Url":"https://github.com/dotnet/standard/issues/1750","RelatedDescription":"Open issue \"System.Data.Linq.Mapping namespace missing\" (#1750)"},{"Id":"585702391","IsPullRequest":true,"CreatedAt":"2020-03-22T12:25:50","Actor":"dotnet-maestro[bot]","Number":"1747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200321.1\r\n- **Date Produced**: 3/21/2020 1:34 PM\r\n- **Commit**: 7dbc907fa03eacf4c57f827cb4235d77b7ed4fcd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20171.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20171.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1747)"},{"Id":"585485829","IsPullRequest":true,"CreatedAt":"2020-03-21T12:30:55","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.4\r\n- **Date Produced**: 3/20/2020 9:54 PM\r\n- **Commit**: 89aa923e9c53483f61ec28bf9d546ac39d54a26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1746","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1746)"},{"Id":"585023231","IsPullRequest":true,"CreatedAt":"2020-03-20T12:15:48","Actor":"dotnet-maestro[bot]","Number":"1745","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200320.1\r\n- **Date Produced**: 3/20/2020 9:10 AM\r\n- **Commit**: 08954d95550364cb78764b078c9b24383f8cda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20170.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20170.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1745","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1745)"},{"Id":"584362093","IsPullRequest":true,"CreatedAt":"2020-03-19T12:25:52","Actor":"dotnet-maestro[bot]","Number":"1744","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.2\r\n- **Date Produced**: 3/18/2020 1:46 PM\r\n- **Commit**: 1ffbf7b1b3d4842d027aecda84e9ece2bb3855d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1744","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1744)"},{"Id":"582961986","IsPullRequest":true,"CreatedAt":"2020-03-18T22:09:09","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200318.1\r\n- **Date Produced**: 3/18/2020 8:07 AM\r\n- **Commit**: a5981bea658fa46405eb39b59f8d8bbd2730a141\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20168.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20168.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1742","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1742)"},{"Id":"584020602","IsPullRequest":true,"CreatedAt":"2020-03-18T22:08:19","Actor":"gugavaro","Number":"1743","RawContent":null,"Title":"Updating ApiCompat baselines files","State":"closed","Body":"Updating ApiCompat baselines files","Url":"https://github.com/dotnet/standard/pull/1743","RelatedDescription":"Closed or merged PR \"Updating ApiCompat baselines files\" (#1743)"},{"Id":"580556512","IsPullRequest":true,"CreatedAt":"2020-03-13T12:15:46","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1740","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1740)"},{"Id":"579889900","IsPullRequest":true,"CreatedAt":"2020-03-12T12:10:44","Actor":"dotnet-maestro[bot]","Number":"1739","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200311.5\r\n- **Date Produced**: 3/12/2020 1:01 AM\r\n- **Commit**: df7ef03819d65500711edd0bceac091264b464b1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20161.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20161.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1739","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1739)"},{"Id":"579213194","IsPullRequest":true,"CreatedAt":"2020-03-11T12:25:51","Actor":"dotnet-maestro[bot]","Number":"1738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200310.4\r\n- **Date Produced**: 3/10/2020 8:42 PM\r\n- **Commit**: 9a9422d109520d942711e07fae8c662c20e7b6e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20160.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20160.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1738)"},{"Id":"578529521","IsPullRequest":true,"CreatedAt":"2020-03-10T12:35:54","Actor":"dotnet-maestro[bot]","Number":"1737","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1737","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1737)"},{"Id":"577855009","IsPullRequest":true,"CreatedAt":"2020-03-09T12:10:53","Actor":"dotnet-maestro[bot]","Number":"1736","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1736","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1736)"},{"Id":"577489994","IsPullRequest":true,"CreatedAt":"2020-03-08T12:10:56","Actor":"dotnet-maestro[bot]","Number":"1735","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1735)"},{"Id":"577331751","IsPullRequest":true,"CreatedAt":"2020-03-07T13:20:45","Actor":"dotnet-maestro[bot]","Number":"1734","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1734","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1734)"},{"Id":"576916652","IsPullRequest":true,"CreatedAt":"2020-03-06T13:10:41","Actor":"dotnet-maestro[bot]","Number":"1733","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1733)"},{"Id":"576236548","IsPullRequest":true,"CreatedAt":"2020-03-05T13:25:48","Actor":"dotnet-maestro[bot]","Number":"1732","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1732","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1732)"},{"Id":"575382239","IsPullRequest":true,"CreatedAt":"2020-03-04T13:25:52","Actor":"dotnet-maestro[bot]","Number":"1731","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200303.1\r\n- **Date Produced**: 3/3/2020 2:12 PM\r\n- **Commit**: 421b20fb860907c45673de791177e3fd61402197\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20153.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20153.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1731","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1731)"},{"Id":"574651534","IsPullRequest":true,"CreatedAt":"2020-03-03T13:20:48","Actor":"dotnet-maestro[bot]","Number":"1730","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200302.4\r\n- **Date Produced**: 3/2/2020 6:28 PM\r\n- **Commit**: d8c2d041341ea7974fd3f2057e9d6afdd4f37598\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20152.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20152.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1730","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1730)"},{"Id":"574149455","IsPullRequest":true,"CreatedAt":"2020-03-02T18:30:15","Actor":"joperezr","Number":"1729","RawContent":null,"Title":"Adding Code of Conduct to the repo","State":"closed","Body":"cc: @karelz @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1729","RelatedDescription":"Closed or merged PR \"Adding Code of Conduct to the repo\" (#1729)"},{"Id":"573958323","IsPullRequest":true,"CreatedAt":"2020-03-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1728","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200301.1\r\n- **Date Produced**: 3/1/2020 2:16 PM\r\n- **Commit**: 8ccad075bbb0db445e03eed0a6073d27bdd4f31a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20151.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20151.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1728","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1728)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"605929794","IsPullRequest":true,"CreatedAt":"2020-04-23T23:08:41","Actor":"mconnew","Number":"42912","RawContent":null,"Title":"Fix serialization of read-only IEnumerable's for DCS","State":"open","Body":"Servicing change for dotnet/runtime#34151","Url":"https://github.com/dotnet/corefx/pull/42912","RelatedDescription":"Open PR \"Fix serialization of read-only IEnumerable's for DCS\" (#42912)"},{"Id":"605904437","IsPullRequest":true,"CreatedAt":"2020-04-23T22:05:03","Actor":"joperezr","Number":"42911","RawContent":null,"Title":"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461","State":"open","Body":"cc: @ericstj \r\n\r\nAs expected, System.Net.Http.Json net461 configuration incorrectly depends on System.Net.Http.dll version 4.2.0.0. This is fine for now since HttpJson package depends on the netstandard facades, but this will change once this branch is merged to release/3.1 so it is important to make sure that we address this now. I have verified that after this change the package reflects the change only on the lib/net461 asset by downgrading its System.Net.Http dependency from 4.2.0.0 down to 4.0.0.0. Apart from that, the package remains unchanged.\r\n\r\nFYI: @Jozkee ","Url":"https://github.com/dotnet/corefx/pull/42911","RelatedDescription":"Open PR \"Making System.Net.Http.Json to depend on inbox version of System.Net.Http for net461\" (#42911)"},{"Id":"605120509","IsPullRequest":true,"CreatedAt":"2020-04-22T22:44:31","Actor":"joperezr","Number":"42910","RawContent":null,"Title":"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds","State":"open","Body":"cc: @ericstj @Anipik @wtgodbe \r\n\r\nThese changes will fix WinHttpHandler to make it build against the net461 targeting pack first to avoid regression when the netstandard facades are not injected by the package automatically. This should unblock us from shipping WinHttpHandler package again now without the need of the netstandard facades.\r\n\r\nFYI: @karelz after this is in, we will be able to ship the pending change on WinHttpHandler package.\r\n\r\nI will add the No Merge label since this is not supposed to ship until next release and branches are locked right now.\r\n\r\nFYI: @Jozkee we will most likely need to do the same changes to the package we are shipping for Blazor.","Url":"https://github.com/dotnet/corefx/pull/42910","RelatedDescription":"Open PR \"Ensuring WinHttpHandler will reference TargetingPack assembly versions for netfx builds\" (#42910)"},{"Id":"605073774","IsPullRequest":true,"CreatedAt":"2020-04-22T21:03:44","Actor":"joperezr","Number":"42909","RawContent":null,"Title":"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages","State":"open","Body":"We recently merged https://github.com/dotnet/corefx/pull/42901 which main purpose was to remove the need of the netstandard facades when using our OOB packages in net461+. Unfortunately by doing this we did find a side-effect (by using manual verification) with the System.Net.Http.WinHttpHandler package so we had to undo shipping that package with https://github.com/dotnet/corefx/pull/42908. We could have caught this in our package testing if we had enabled VerifyReferenceClosure for netfx, but that was currently disabled. This PR will enable those checks to make sure we never regress this scenario again.\r\n\r\ncc: @ericstj @Anipik @wtgodbe \r\nFYI: @karelz \r\n\r\nThis is a test-only change. The branch is locked right now because of the release process so I will add the NoMerge label, but will remove it once branch is unlocked.","Url":"https://github.com/dotnet/corefx/pull/42909","RelatedDescription":"Open PR \"[Test-only change]Enable running VerifyReferenceClousre for netfx OOB packages\" (#42909)"},{"Id":"604162038","IsPullRequest":true,"CreatedAt":"2020-04-21T20:25:19","Actor":"joperezr","Number":"42908","RawContent":null,"Title":"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461","State":"closed","Body":"cc: @wtgodbe @Anipik @mmitche @ericstj \r\n\r\nThis will undo the build of System.Net.Http.WinHttpHandler\r\n\r\nFYI: @karelz @alnikola as this affects #42888 fix.\r\n","Url":"https://github.com/dotnet/corefx/pull/42908","RelatedDescription":"Closed or merged PR \"Disable build of System.Net.Http.WinHttpHandler to avoid problem on net461\" (#42908)"},{"Id":"601680398","IsPullRequest":true,"CreatedAt":"2020-04-17T21:57:41","Actor":"Jozkee","Number":"42906","RawContent":null,"Title":"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)","State":"closed","Body":"Port of https://github.com/dotnet/runtime/pull/35040\r\n\r\ncc @ericstj @jeffhandley ","Url":"https://github.com/dotnet/corefx/pull/42906","RelatedDescription":"Closed or merged PR \"[release/3.1-blazor] Fix Http.Json serialization performance by using static options (#35040)\" (#42906)"},{"Id":"602197177","IsPullRequest":true,"CreatedAt":"2020-04-17T19:49:27","Actor":"cheenamalhotra","Number":"42907","RawContent":null,"Title":"[Release/3.1] Address MARS TDS header contained errors","State":"open","Body":"Ports PR https://github.com/dotnet/SqlClient/pull/490 that fixes issue https://github.com/dotnet/SqlClient/issues/85\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/85 where client applications fail intermittently with below exception:\r\n\r\n`System.Data.SqlClient.SqlException (0x80131904): The incoming tabular data stream (TDS) protocol stream is incorrect. The MARS TDS header contained errors.`\r\n\r\n### Customer Impact\r\nHigh. A lot of customers are impacted with this bug.\r\n\r\n### Regression?\r\nNo\r\n\r\n### Testing\r\nPreviously SqlClient tests did not cover this use-case, but test has been added to cover this scenario in this PR.\r\n\r\n### Risk\r\n**Low**: The fix has been verified with all bound tests, EF Core tests and many customers have also reported they are able to now run their applications in heavy load successfully.\r\n\r\ncc: @danmosemsft @saurabh500 @David-Engel ","Url":"https://github.com/dotnet/corefx/pull/42907","RelatedDescription":"Open PR \"[Release/3.1] Address MARS TDS header contained errors\" (#42907)"},{"Id":"601512593","IsPullRequest":true,"CreatedAt":"2020-04-17T04:24:35","Actor":"ericstj","Number":"42905","RawContent":null,"Title":"Update branding to rc","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42905","RelatedDescription":"Closed or merged PR \"Update branding to rc\" (#42905)"},{"Id":"599733444","IsPullRequest":true,"CreatedAt":"2020-04-14T22:05:24","Actor":"dotnet-maestro[bot]","Number":"42904","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200413.4\r\n- **Date Produced**: 4/13/2020 7:11 PM\r\n- **Commit**: 1a55276ab9d16792cec595ba870df39a9d97d5ca\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 2.4.1-beta.20113.5 to 2.4.1-beta.20213.4\r\n  - **Microsoft.DotNet.XUnitConsoleRunner**: from 2.5.1-beta.20113.5 to 2.5.1-beta.20213.4\r\n  - **Microsoft.DotNet.VersionTools.Tasks**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.ApiCompat**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: from 2.2.0-beta.20113.5 to 2.2.0-beta.20213.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CodeAnalysis**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.CoreFxTesting**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenAPI**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.GenFacades**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 2.0.0-beta.20113.5 to 2.0.0-beta.20213.4\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 1.0.0-beta.20113.5 to 1.0.0-beta.20213.4\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42904","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42904)"},{"Id":"596769835","IsPullRequest":true,"CreatedAt":"2020-04-14T17:27:48","Actor":"joperezr","Number":"42901","RawContent":null,"Title":"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework","State":"closed","Body":"cc: @ericstj @Anipik @safern \r\nFixes https://github.com/dotnet/runtime/issues/1625\r\n\r\n**Description**\r\n\r\nThis PR will finish the work on the release/3.1 branch that was started with PR https://github.com/dotnet/corefx/pull/42849 on release/2.1 branch. It is adding .NET Framework configurations to our OOB packages so that they won't require netsandard shims for projects ingesting them and targeting .NET Framework.\r\n\r\nThings that need to happen before merging this PR:\r\n\r\n- [X] Add Net461 configurations to all projects that today ship as NuGet packages and have a .NET Standard asset when consumer targets .NET Framework 4.6.1/4.6.2/4.7/4.7.1/4.7.2/4.8. (This will be done with the first commit, so that it is easier to review this commit by commit.)\r\n- [X] Add Net461 configuration to OpenSSL OOB package which also needs it, but it will be treated specially given that it requires some special types in S.S.C.Algorithms that are not present in 461. (Done with commit 10df782)\r\n- [x] Baseline all of the packages that have new configurations from steps 1 and 2, and now service all packages above that depend on them so that all new package versions will depend on these new packages that have the new configs. After doing this, all of our latest NuGet packages should not require the .NET Standard shims. (Done with 14b5db5)\r\n- [x] Do some extensive testing to make sure API wasn't regressed by adding these new configurations. (I have more info on how I did this here https://github.com/dotnet/corefx/pull/42901#issuecomment-611770142).\r\n\r\n**Customer Impact**\r\n\r\nCustomers that have hit problems caused by this issue have been trying to add manual workarounds on their projects and custom logic for deploying. Once this is fixed, customers will have to remove those workarounds from their projects and reference the new packages in order to get the benefits of not needing the extra facades or binding redirects for their application.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nIt will involve packaging changes, so it will require a review by packaging experts.\r\n\r\n**Risk**\r\n\r\nLow. We didn't increase Assembly Version in order to not require new binding redirects from apps. The risk here is that we are effectively causing NuGet to use a different asset from the package to pass to the compiler and a different one as well for the implementation, but we did extensive testing to ensure that we were not removing or adding API and that there was no visible difference between the assets that they used to get and the ones they will get now.\r\n","Url":"https://github.com/dotnet/corefx/pull/42901","RelatedDescription":"Closed or merged PR \"Adding .NET Framework configurations to OOB packages so that they won't require the netstandard shims when targeting .NET Framework\" (#42901)"},{"Id":"599126181","IsPullRequest":true,"CreatedAt":"2020-04-13T21:23:23","Actor":"dotnet-maestro-bot","Number":"42903","RawContent":null,"Title":"Update BuildTools to rc1-05113-01 (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42903","RelatedDescription":"Closed or merged PR \"Update BuildTools to rc1-05113-01 (release/2.1)\" (#42903)"},{"Id":"597967932","IsPullRequest":true,"CreatedAt":"2020-04-10T20:32:09","Actor":"pranavkm","Number":"42902","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42902","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#42902)"},{"Id":"587757768","IsPullRequest":true,"CreatedAt":"2020-04-10T16:19:35","Actor":"alnikola","Number":"42888","RawContent":null,"Title":"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler","State":"closed","Body":"This is port of dotnet/runtime#33158.\r\n\r\n**Description**\r\nPre-release WinHTTP's version supports client certificate-based authentication over HTTP/2, but the feature must be explicitly opted-in. PR sets WINHTTP_OPTION_ENABLE_HTTP2_PLUS_CLIENT_CERT to TRUE before invoking WinHttpConnect if the request's protocol is HTTP/2 and scheme is HTTPS.\r\n\r\n**Customer impact**\r\nWithout this change, it's not possible to use client certificate-based authentication on HTTP/2 in .Net Framework 4.7.2 and 4.8.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Packaging review**\r\nChange affects System.Net.Http.WinHttpHandler.dll which is distributed in System.Net.Http.WinHttpHandler package.\r\n\r\n**Risk**\r\n**Low**, covered by functional tests in master branch, but only manually tested for 3.1","Url":"https://github.com/dotnet/corefx/pull/42888","RelatedDescription":"Closed or merged PR \"[release/3.1] Client certificate authentication on HTTP/2 in WinHttpHandler\" (#42888)"},{"Id":"593547117","IsPullRequest":true,"CreatedAt":"2020-04-03T17:56:26","Actor":"omajid","Number":"42900","RawContent":null,"Title":"[release/3.1] Fix corefx to build on clang 10","State":"open","Body":"Clang 10 adds/enables new warnings, some of which is affecting the corefx code.\r\n\r\nClang 10 has added `-Walloca` to warn about uses of `alloca()`. Clang 10 has also added `-Wimplicit-int-float-conversion`. This commit disables those warnings where applicable.\r\n\r\nThis is a backport of dotnet/runtime#33734 to corefx.\r\n\r\nAfter this commit, I can build all of corefx with Clang 10.","Url":"https://github.com/dotnet/corefx/pull/42900","RelatedDescription":"Open PR \"[release/3.1] Fix corefx to build on clang 10\" (#42900)"},{"Id":"591386734","IsPullRequest":true,"CreatedAt":"2020-03-31T22:29:33","Actor":"Anipik","Number":"42899","RawContent":null,"Title":"Stablise the 3.1 branch","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42899","RelatedDescription":"Closed or merged PR \"Stablise the 3.1 branch\" (#42899)"},{"Id":"590339010","IsPullRequest":true,"CreatedAt":"2020-03-30T14:37:07","Actor":"s-tarasov","Number":"42898","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42898","RelatedDescription":"Closed or merged PR \"Update README.md\" (#42898)"},{"Id":"588584064","IsPullRequest":true,"CreatedAt":"2020-03-27T15:18:16","Actor":"joperezr","Number":"42894","RawContent":null,"Title":"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better","State":"closed","Body":"This is porting the last 3 commits that went into https://github.com/dotnet/runtime/pull/33459.\r\n\r\ncc: @Jozkee @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42894","RelatedDescription":"Closed or merged PR \"Addressing feedback, Documenting TranscodingWriteStream.MaxbyteBuffer Size and Replacing MediaTypeHeaderValue.Parse with .ctor since it performs better\" (#42894)"},{"Id":"587989374","IsPullRequest":true,"CreatedAt":"2020-03-27T03:12:16","Actor":"Anipik","Number":"42890","RawContent":null,"Title":"rev up assembly and package versions and add package to package builds","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42890","RelatedDescription":"Closed or merged PR \"rev up assembly and package versions and add package to package builds\" (#42890)"},{"Id":"588766967","IsPullRequest":true,"CreatedAt":"2020-03-26T23:06:51","Actor":"Anipik","Number":"42897","RawContent":null,"Title":"building platforms package","State":"closed","Body":"Related PR https://github.com/dotnet/corefx/pull/42872","Url":"https://github.com/dotnet/corefx/pull/42897","RelatedDescription":"Closed or merged PR \"building platforms package\" (#42897)"},{"Id":"588726249","IsPullRequest":true,"CreatedAt":"2020-03-26T22:51:13","Actor":"dotnet-maestro[bot]","Number":"42896","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200326.1\r\n- **Date Produced**: 3/26/2020 5:57 PM\r\n- **Commit**: 83c2d68edf0cc18cf06b12fb2d7eb41031676a3f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20176.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20176.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42896","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42896)"},{"Id":"588631300","IsPullRequest":true,"CreatedAt":"2020-03-26T22:47:01","Actor":"safern","Number":"42895","RawContent":null,"Title":"Bump branding to preview4 in 3.1-blazor branch","State":"closed","Body":"I looked at aspnetcore branding and they already moved to preview4.\r\n\r\nhttps://github.com/dotnet/aspnetcore/blob/blazor-wasm/eng/Versions.props#L12","Url":"https://github.com/dotnet/corefx/pull/42895","RelatedDescription":"Closed or merged PR \"Bump branding to preview4 in 3.1-blazor branch\" (#42895)"},{"Id":"588053330","IsPullRequest":true,"CreatedAt":"2020-03-26T17:22:38","Actor":"dotnet-maestro[bot]","Number":"42893","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.3\r\n- **Date Produced**: 3/26/2020 12:32 AM\r\n- **Commit**: f5d8d52a3033bccda3ed798ba25fcfd988f78019\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42893","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42893)"},{"Id":"588040516","IsPullRequest":true,"CreatedAt":"2020-03-26T02:17:35","Actor":"safern","Number":"42892","RawContent":null,"Title":"Publish only on all configurations and only publish Json package","State":"closed","Body":"This prevents us from publishing any transport packages in release/3.1-blazor package, and will only publish the json package added in: https://github.com/dotnet/corefx/pull/42889\r\n\r\nOnce that PR is merged, I'll test this on an official build and if green add the default channel and then merge.\r\n\r\ncc: @joperezr @ericstj","Url":"https://github.com/dotnet/corefx/pull/42892","RelatedDescription":"Closed or merged PR \"Publish only on all configurations and only publish Json package\" (#42892)"},{"Id":"587871901","IsPullRequest":true,"CreatedAt":"2020-03-26T01:14:17","Actor":"joperezr","Number":"42889","RawContent":null,"Title":"Add new System.Net.Http.Json project/namespace","State":"closed","Body":"Porting #42879 to new blazor branch. The 3.1 PR was already approved for servicing. It includes all commits from PR https://github.com/dotnet/runtime/pull/33459 up to https://github.com/dotnet/runtime/pull/33459/commits/4970a538111515c734bec677d2bc4cf8e8c88a75\r\n\r\ncc: @ericstj @Jozkee @jeffhandley @stephentoub @terrajobst @mkArtakMSFT @safern @GrabYourPitchforks ","Url":"https://github.com/dotnet/corefx/pull/42889","RelatedDescription":"Closed or merged PR \"Add new System.Net.Http.Json project/namespace\" (#42889)"},{"Id":"587999955","IsPullRequest":true,"CreatedAt":"2020-03-25T22:24:07","Actor":"dotnet-maestro[bot]","Number":"42891","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200325.1\r\n- **Date Produced**: 3/25/2020 7:29 PM\r\n- **Commit**: 9d9b5795356a138fb834dc4b7ff7141002904244\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.4-servicing.20175.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.4-servicing.20175.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42891","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42891)"},{"Id":"587358274","IsPullRequest":true,"CreatedAt":"2020-03-25T18:35:42","Actor":"Anipik","Number":"42886","RawContent":null,"Title":"update branding done for 3.1.4","State":"closed","Body":"- updated branding\r\n- disable stable builds to produce suffix netcoreapp package\r\n- clear packages.build\r\n- updated packageindex","Url":"https://github.com/dotnet/corefx/pull/42886","RelatedDescription":"Closed or merged PR \"update branding done for 3.1.4\" (#42886)"},{"Id":"587368089","IsPullRequest":true,"CreatedAt":"2020-03-25T15:48:47","Actor":"Anipik","Number":"42887","RawContent":null,"Title":"branding for 2.1.18","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42887","RelatedDescription":"Closed or merged PR \"branding for 2.1.18\" (#42887)"},{"Id":"587298720","IsPullRequest":true,"CreatedAt":"2020-03-25T00:26:50","Actor":"dotnet-maestro-bot","Number":"42885","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42885","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28619-01, servicing-28619-01, stable, respectively (release/2.1)\" (#42885)"},{"Id":"587197172","IsPullRequest":true,"CreatedAt":"2020-03-24T22:36:16","Actor":"safern","Number":"42884","RawContent":null,"Title":"Clear package list for 3.1-blazor branch","State":"closed","Body":"cc: @joperezr @ericstj @Anipik ","Url":"https://github.com/dotnet/corefx/pull/42884","RelatedDescription":"Closed or merged PR \"Clear package list for 3.1-blazor branch\" (#42884)"},{"Id":"586620784","IsPullRequest":true,"CreatedAt":"2020-03-24T07:09:20","Actor":"safern","Number":"42883","RawContent":null,"Title":"Update branding for release/3.1-blazor","State":"closed","Body":"cc: @joperezr @ericstj ","Url":"https://github.com/dotnet/corefx/pull/42883","RelatedDescription":"Closed or merged PR \"Update branding for release/3.1-blazor\" (#42883)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"606034197","IsPullRequest":true,"CreatedAt":"2020-04-24T04:38:23","Actor":"CyrusNajmabadi","Number":"43631","RawContent":null,"Title":"Fix rename test flakeyness with dynamic types.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43631","RelatedDescription":"Open PR \"Fix rename test flakeyness with dynamic types.\" (#43631)"},{"Id":"605956944","IsPullRequest":true,"CreatedAt":"2020-04-24T03:32:41","Actor":"sharwell","Number":"43628","RawContent":null,"Title":"Disable failing IntelliSense integration tests","State":"closed","Body":"See #43627","Url":"https://github.com/dotnet/roslyn/pull/43628","RelatedDescription":"Closed or merged PR \"Disable failing IntelliSense integration tests\" (#43628)"},{"Id":"606006881","IsPullRequest":true,"CreatedAt":"2020-04-24T03:12:00","Actor":"CyrusNajmabadi","Number":"43630","RawContent":null,"Title":"Fix deadlock when calling into nuget to retrieve package information.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39889\r\n\r\nNote: which this addresses hte core deadlock, it does not address the large amount of complexity and perf problems inherent in needing to access nuget from the UI thread.  We should still drive work with Nuget and Project System teams to provide a suitable non-UI threaded, async, approach to working with nuget+packages.\r\n\r\nThis PR should be reviewed commit by commit.","Url":"https://github.com/dotnet/roslyn/pull/43630","RelatedDescription":"Open PR \"Fix deadlock when calling into nuget to retrieve package information.\" (#43630)"},{"Id":"605992431","IsPullRequest":true,"CreatedAt":"2020-04-24T02:31:45","Actor":"sharwell","Number":"43629","RawContent":null,"Title":"Use the same analyzer version in the Code Style layer as elsewhere","State":"open","Body":"Improves build performance by allowing VBCSCompiler.exe to service all build requests for Roslyn.sln.","Url":"https://github.com/dotnet/roslyn/pull/43629","RelatedDescription":"Open PR \"Use the same analyzer version in the Code Style layer as elsewhere\" (#43629)"},{"Id":"605956291","IsPullRequest":false,"CreatedAt":"2020-04-24T00:28:52","Actor":"sharwell","Number":"43627","RawContent":null,"Title":"Suggestion mode integration tests failures in 16.6 Preview 2.1","State":"open","Body":"The following integration tests are failing in 16.6 Preview 2.1. They should be enabled again when the test image is updated to 16.6 Preview 3 or newer.\r\n\r\n* CompleteStatementTriggersCompletion\r\n* SpeculativeTInList\r\n* CtrlAltSpace\r\n* CtrlAltSpaceOption","Url":"https://github.com/dotnet/roslyn/issues/43627","RelatedDescription":"Open issue \"Suggestion mode integration tests failures in 16.6 Preview 2.1\" (#43627)"},{"Id":"605936122","IsPullRequest":true,"CreatedAt":"2020-04-23T23:25:53","Actor":"agocke","Number":"43626","RawContent":null,"Title":"Change record equality to consider all instance fields","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43626","RelatedDescription":"Open PR \"Change record equality to consider all instance fields\" (#43626)"},{"Id":"605934695","IsPullRequest":true,"CreatedAt":"2020-04-23T23:21:46","Actor":"333fred","Number":"43625","RawContent":null,"Title":"Support symbol retargeting for function pointers.","State":"open","Body":"@AlekseyTs @dotnet/roslyn-compiler for review.","Url":"https://github.com/dotnet/roslyn/pull/43625","RelatedDescription":"Open PR \"Support symbol retargeting for function pointers.\" (#43625)"},{"Id":"605921301","IsPullRequest":true,"CreatedAt":"2020-04-23T22:45:18","Actor":"genlu","Number":"43624","RawContent":null,"Title":"Disable ngen (full or partial) for workspaces.dll","State":"open","Body":"We are seeing errors during ngen of workspaces.dll after a few attempts (presumably trying to do full ngen, since we disabled partial ngen a while ago). This PR disabled ngen for workspaces all together to avoid showing those error in event log. This doesn't change the result, since we ended up not ngen workspace anyway.\r\n\r\n@chsienki  We should merge this (to 16.6 as well) if we still see ngen errors with you fix\r\n\r\n```\r\n04/14/2020 21:09:47.077 [4844]: 1>    Compiling assembly C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\ManagedLanguages\\VBCSharp\\LanguageServices\\Microsoft.CodeAnalysis.Workspaces.dll (CLR v4.0.30319) ...\r\n04/14/2020 21:10:12.006 [4844]: 1>Ngen failed to generate native code for image C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\ManagedLanguages\\VBCSharp\\LanguageServices\\Microsoft.CodeAnalysis.Workspaces.dll because of the following error: The remote procedure call failed. (Exception from HRESULT: 0x800706BE)\r\n04/14/2020 21:10:12.006 [4844]: 1>Ngen will retry compilation of image C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\ManagedLanguages\\VBCSharp\\LanguageServices\\Microsoft.CodeAnalysis.Workspaces.dll\r\n04/14/2020 21:10:12.256 [4844]: 1>    Compiling assembly C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\ManagedLanguages\\VBCSharp\\LanguageServices\\Microsoft.CodeAnalysis.Workspaces.dll (CLR v4.0.30319) ...\r\n04/14/2020 21:10:33.584 [4844]: 1>Uninstalling assembly C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\ManagedLanguages\\VBCSharp\\LanguageServices\\Microsoft.CodeAnalysis.Workspaces.dll because of an error during compilation: The remote procedure call failed. (Exception from HRESULT: 0x800706BE)\r\n```","Url":"https://github.com/dotnet/roslyn/pull/43624","RelatedDescription":"Open PR \"Disable ngen (full or partial) for workspaces.dll\" (#43624)"},{"Id":"605906904","IsPullRequest":false,"CreatedAt":"2020-04-23T22:10:55","Actor":"KirillOsenkov","Number":"43623","RawContent":null,"Title":"AddUsing: Internal extension methods not recommended (IVT present)","State":"open","Body":"**Version Used**: \r\n3.5.0-beta4-20125-04+1baa0b3063238ed752ad1f0368b1df6b6\r\n\r\n1. Have two projects, A and B, B references A\r\n2. A has IVT to B\r\n3. A declares an extension method\r\n4. Attempt using that extension method in B, but without the using namespace of the declaring class\r\n\r\n**Expected:**\r\nLightBulb on the extension method call site should offer to add the missing using, so that the extension method can light up\r\n\r\n**Actual:** \r\nAdd using is not recommended, have to add the using manually for extension method to bind","Url":"https://github.com/dotnet/roslyn/issues/43623","RelatedDescription":"Open issue \"AddUsing: Internal extension methods not recommended (IVT present)\" (#43623)"},{"Id":"605905202","IsPullRequest":true,"CreatedAt":"2020-04-23T22:06:52","Actor":"CyrusNajmabadi","Number":"43622","RawContent":null,"Title":"Make more dependent-type-finder operations public through SymbolFinder.","State":"open","Body":"Followup to https://github.com/dotnet/roslyn/pull/43593.  That PR should go in first before this is reviewed.\r\n\r\nThis is a precursor to moving these operations OOP.","Url":"https://github.com/dotnet/roslyn/pull/43622","RelatedDescription":"Open PR \"Make more dependent-type-finder operations public through SymbolFinder.\" (#43622)"},{"Id":"605895865","IsPullRequest":false,"CreatedAt":"2020-04-23T21:47:17","Actor":"AlekseyTs","Number":"43621","RawContent":null,"Title":"Invalid metadata emitted for a fixed buffer declared within a tuple type","State":"open","Body":"Compile this code:\r\n```\r\nnamespace System\r\n{\r\n    public unsafe struct ValueTuple<T1>\r\n    {\r\n        public fixed int MessageType[50];\r\n    }\r\n}\r\n```\r\n\r\nExamine generated IL;\r\n```\r\n.class public sequential ansi sealed beforefieldinit System.ValueTuple`1<T1>\r\n       extends [mscorlib]System.ValueType\r\n{\r\n  .field public int32* MessageType\r\n  .field public !T1 Item1\r\n  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) \r\n} // end of class System.ValueTuple`1\r\n```\r\n\r\nNow change the namespace name to \"System1\" and compile again:\r\n```\r\n.class public sequential ansi sealed beforefieldinit System1.ValueTuple`1<T1>\r\n       extends [mscorlib]System.ValueType\r\n{\r\n  .class sequential ansi sealed nested public beforefieldinit '<MessageType>e__FixedBuffer'<T1>\r\n         extends [mscorlib]System.ValueType\r\n  {\r\n    .pack 0\r\n    .size 200\r\n    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) \r\n    .custom instance void [mscorlib]System.Runtime.CompilerServices.UnsafeValueTypeAttribute::.ctor() = ( 01 00 00 00 ) \r\n    .field public int32 FixedElementField\r\n  } // end of class '<MessageType>e__FixedBuffer'\r\n\r\n  .field public valuetype System1.ValueTuple`1/'<MessageType>e__FixedBuffer'<!T1> MessageType\r\n  .custom instance void [mscorlib]System.Runtime.CompilerServices.FixedBufferAttribute::.ctor(class [mscorlib]System.Type,\r\n                                                                                              int32) = ( 01 00 59 53 79 73 74 65 6D 2E 49 6E 74 33 32 2C   // ..YSystem.Int32,\r\n                                                                                                         20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69   //  mscorlib, Versi\r\n                                                                                                         6F 6E 3D 34 2E 30 2E 30 2E 30 2C 20 43 75 6C 74   // on=4.0.0.0, Cult\r\n                                                                                                         75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub\r\n                                                                                                         6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61   // licKeyToken=b77a\r\n                                                                                                         35 63 35 36 31 39 33 34 65 30 38 39 32 00 00 00   // 5c561934e0892...\r\n                                                                                                         00 00 ) \r\n} // end of class System1.ValueTuple`1\r\n```\r\n\r\nNote the added nested type and the difference in the field declaration. The same thing is expected from the first compilation.","Url":"https://github.com/dotnet/roslyn/issues/43621","RelatedDescription":"Open issue \"Invalid metadata emitted for a fixed buffer declared within a tuple type\" (#43621)"},{"Id":"605891340","IsPullRequest":true,"CreatedAt":"2020-04-23T21:37:38","Actor":"jasonmalinowski","Number":"43620","RawContent":null,"Title":"Fix a bunch of bugs around dynamic files being added and removed","State":"open","Body":"This now correctly handles a file being removed and added a second time, and also a file being removed if there was no dynamic file provided originally.\r\n\r\nFile at a time may make this easier to review.","Url":"https://github.com/dotnet/roslyn/pull/43620","RelatedDescription":"Open PR \"Fix a bunch of bugs around dynamic files being added and removed\" (#43620)"},{"Id":"605875363","IsPullRequest":false,"CreatedAt":"2020-04-23T21:10:09","Actor":"drewnoakes","Number":"43619","RawContent":null,"Title":"CS8627 for explicit interface implementation of generic method with class type constraint","State":"open","Body":"**Version Used**: Version 16.7.0 Preview 1.0 [30022.238.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\ninterface I\r\n{\r\n    T M<T>() where T : class;\r\n}\r\n\r\n#nullable enable\r\n\r\npublic class Works : I\r\n{\r\n    public T? M<T>() where T : class => null;\r\n}\r\n\r\npublic class Fails : I\r\n{\r\n    T? I.M<T>() where T : class => null;\r\n//  ^^ error CS8627: A nullable type parameter must be known to be a value type or non-nullable reference type.\r\n//                   Consider adding a 'class', 'struct', or type constraint.\r\n}\r\n```\r\n\r\n[This code on sharplab.io](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxASwDYB80Dt4IBmEAxnAAQCSAsAFADed5z5AKuQLIA8rAfABQBKcgHcAFogrsQ5AAIAmANx0AvnToBiXAFcMGCMAwU4uA0fW1ZAZjnzyAdQD2CANZRyMmgyYtrbAPycPALC4pJsHrbkALy85Dp6yrRqtHR+CuQAYhCY7p50jLQsAVQAdNx8QqISCFKRGbHxuhhJAPStzAB6neSICM7kAMIAygAcAGzyAOwyAIJNemYUMACeAA4UaxAIEGBwBORg2rDkwBQuuI4iuOQwjqcUEOQAbhAY2svrFAOXuAC0CX0hgotUIklwZFuX1KdHaxXhCOKg0cuCgaAAJohyBB0ei8ABzbHkADkCmJSBJsAQ2hIMHJ5AGqw25BIKKpOXwMOSdCAA===)\r\n\r\n**Expected Behavior**:\r\n\r\nNo compile error for explicit implementation (as with implicit implementation).\r\n\r\n**Actual Behavior**:\r\n\r\nExplicit implementation won't compile (but implicit implementation will).","Url":"https://github.com/dotnet/roslyn/issues/43619","RelatedDescription":"Open issue \"CS8627 for explicit interface implementation of generic method with class type constraint\" (#43619)"},{"Id":"605867424","IsPullRequest":true,"CreatedAt":"2020-04-23T20:58:12","Actor":"NTaylorMullen","Number":"43618","RawContent":null,"Title":"Remove Razor diagnostic URI conversion workaround.","State":"open","Body":"- Razor has implemented and inserted the \"proper\" handling of diagnostic URIs. Prior to this they would prefix file paths with a `/`. That's no longer true.\r\n- Did not remove the entire method because it still has value in converting file paths into Uris and looks to be used by more than just the `InProcLnaguageServer` diagnostic path.\r\n\r\nFYI @jinujoseph ","Url":"https://github.com/dotnet/roslyn/pull/43618","RelatedDescription":"Open PR \"Remove Razor diagnostic URI conversion workaround.\" (#43618)"},{"Id":"605718102","IsPullRequest":true,"CreatedAt":"2020-04-23T20:47:33","Actor":"sharwell","Number":"43608","RawContent":null,"Title":"Validate FunctionId does not contain duplicate values","State":"closed","Body":"Fixes #43607","Url":"https://github.com/dotnet/roslyn/pull/43608","RelatedDescription":"Closed or merged PR \"Validate FunctionId does not contain duplicate values\" (#43608)"},{"Id":"605708601","IsPullRequest":false,"CreatedAt":"2020-04-23T20:47:33","Actor":"sharwell","Number":"43607","RawContent":null,"Title":"FunctionId cannot contain duplicate values","State":"closed","Body":"When FunctionId contains duplicate values, integration tests can start to fail with a dialog reporting the following error:\r\n\r\n```\r\nSetSite failed for package [Roslyn Diagnostics Window]Source: 'mscorlib' Description: An item with the same key has already been added.\r\nSystem.ArgumentException: An item with the same key has already been added.\r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2 keySelector, Func`2 elementSelector, IEqualityComparer`1 comparer)\r\n   at System.Linq.Enumerable.ToDictionary[TSource,TKey,TElement](IEnumerable`1 source, Func`2 keySelector, Func`2 elementSelector)\r\n   at Microsoft.CodeAnalysis.Internal.Log.Logger.GetLoggingChecker(IGlobalOptionService optionService)\r\n   at Roslyn.VisualStudio.DiagnosticsWindow.OptionsPages.PerformanceLoggersPage.SetLoggers(IGlobalOptionService optionService, IThreadingContext threadingContext, IRemoteHostClientService remoteService)\r\n   at Roslyn.VisualStudio.DiagnosticsWindow.VisualStudioDiagnosticsWindowPackage.<InitializeAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Shell.AsyncPackage.<>c__DisplayClass20_0.<<Microsoft-VisualStudio-Shell-Interop-IAsyncLoadablePackageInitialize-Initialize>b__1>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Threading.JoinableTask.<JoinAsync>d__68.MoveNext()\r\n```\r\n\r\nWe should have a unit test for the workspaces layer that ensures this situation is caught prior to integration tests.","Url":"https://github.com/dotnet/roslyn/issues/43607","RelatedDescription":"Closed issue \"FunctionId cannot contain duplicate values\" (#43607)"},{"Id":"605849581","IsPullRequest":true,"CreatedAt":"2020-04-23T20:32:52","Actor":"chsienki","Number":"43617","RawContent":null,"Title":"Allow msbuild to pass properties and metadata as analyzerconfig:","State":"open","Body":"- Add new target to evaluate requested properties and metadata\r\n- Add new task to turn collected evaluations into a global analyzer config\r\n- Add tests\r\n\r\nThis PR aims to answer the question of how analyzers / generators get information from MSBuild. \r\n\r\nThis implements the MSBuild -> Editorconfig portion. Consuming the generated editorconfig will be done in a different PR.\r\n\r\nThe basic idea is that an analyzer/generator can declare the properties and metadata it is interested in via an item group in a targets file (added via the usual nuget mechanism):\r\n\r\n```xml\r\n<ItemGroup> \r\n  <!-- Properties -->\r\n  <AnalyzerProperty Include=\"PropertyName\" />\r\n \r\n  <!-- Metadata -->\r\n  <AnalyzerItemMetadata Include=\"ItemType\" MetadataName=\"MetadataName\" />\r\n</ItemGroup>\r\n```\r\n\r\nFor instance, to access the `TargetFramework` and `LangVersion` properties:\r\n\r\n```xml\r\n<ItemGroup> \r\n  <AnalyzerProperty Include=\"TargetFramework\" />\r\n  <AnalyzerProperty Include=\"LangVersion\" />\r\n</ItemGroup>\r\n```\r\n\r\nOr to access the `%(AccessedTime)` of `@(Compile)` items:\r\n\r\n```xml\r\n<ItemGroup> \r\n  <AnalyzerItemMetadata Include=\"Compile\" MetadataName=\"AccessedTime\" />\r\n</ItemGroup>\r\n```\r\n\r\n`AnalyzerProperty` items end up the in the global section of the generated config. Metadata items are placed in merged sections based on the full path of the `ItemSpec`, with a combination of the ItemType that produced it and the name of the metadata.\r\n\r\nEg:\r\n\r\n```xml\r\n<ItemGroup> \r\n  <AnalyzerProperty Include=\"TargetFramework\" />\r\n  <AnalyzerItemMetadata Include=\"Compile\" MetadataName=\"AccessedTime\" />\r\n  <AnalyzerItemMetadata Include=\"AdditionalFiles\" MetadataName=\"ModifiedTime\" />\r\n</ItemGroup>\r\n```\r\nFor a project like:\r\n\r\n```xml\r\n<Project Sdk='Microsoft.NET.Sdk'>\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <Compile Include=\"file1.cs\" />\r\n    <Compile Include=\"file2.cs\" />\r\n    <AdditionalFiles Include=\"file1.cs\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\nWould produce an editor config like:\r\n\r\n```\r\nis_global = true\r\nmsbuild_property.TargetFramework = netstandard2.0\r\n\r\n[c:\\full\\path\\to\\file1.cs]\r\nmsbuild_item.Compile.AccessedTime = 2004-08-14 16:52:36.3168743\r\nmsbuild_item.AdditionalFiles.ModifiedTime = 2004-08-14 16:52:36.3168743\r\n\r\n[c:\\full\\path\\to\\file2.cs]\r\nmsbuild_item.Compile.AccessedTime = 2004-08-14 16:52:36.3168743\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/pull/43617","RelatedDescription":"Open PR \"Allow msbuild to pass properties and metadata as analyzerconfig:\" (#43617)"},{"Id":"605822669","IsPullRequest":true,"CreatedAt":"2020-04-23T19:54:35","Actor":"333fred","Number":"43616","RawContent":null,"Title":"Add command to update XLF content for vscode","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43616","RelatedDescription":"Open PR \"Add command to update XLF content for vscode\" (#43616)"},{"Id":"605761387","IsPullRequest":true,"CreatedAt":"2020-04-23T19:44:37","Actor":"333fred","Number":"43611","RawContent":null,"Title":"Merge master into features/function-pointers","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43611","RelatedDescription":"Closed or merged PR \"Merge master into features/function-pointers\" (#43611)"},{"Id":"605808512","IsPullRequest":true,"CreatedAt":"2020-04-23T19:34:28","Actor":"tmat","Number":"43615","RawContent":null,"Title":"Fix flow of nopia build props","State":"open","Body":"By default PackageReference does not flow build targets.","Url":"https://github.com/dotnet/roslyn/pull/43615","RelatedDescription":"Open PR \"Fix flow of nopia build props\" (#43615)"},{"Id":"605786901","IsPullRequest":true,"CreatedAt":"2020-04-23T19:04:54","Actor":"sharwell","Number":"43614","RawContent":null,"Title":"Remove unused options in EditorCompletionOptions","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43614","RelatedDescription":"Open PR \"Remove unused options in EditorCompletionOptions\" (#43614)"},{"Id":"605781245","IsPullRequest":true,"CreatedAt":"2020-04-23T18:57:34","Actor":"333fred","Number":"43613","RawContent":null,"Title":"Mark APIs as shipped.","State":"open","Body":"Ran scripts/PublicAPI/mark-shipped.cmd. No code change.","Url":"https://github.com/dotnet/roslyn/pull/43613","RelatedDescription":"Open PR \"Mark APIs as shipped.\" (#43613)"},{"Id":"605765591","IsPullRequest":true,"CreatedAt":"2020-04-23T18:36:46","Actor":"sharwell","Number":"43612","RawContent":null,"Title":"Dismiss completion in SetUpEditor","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43612","RelatedDescription":"Open PR \"Dismiss completion in SetUpEditor\" (#43612)"},{"Id":"605755251","IsPullRequest":true,"CreatedAt":"2020-04-23T18:23:15","Actor":"tmat","Number":"43610","RawContent":null,"Title":"Remove unused references to HostDiagnosticUpdateSource","State":"open","Body":"Also removes other members of AbstractProject not used by TypeScript.","Url":"https://github.com/dotnet/roslyn/pull/43610","RelatedDescription":"Open PR \"Remove unused references to HostDiagnosticUpdateSource\" (#43610)"},{"Id":"605722504","IsPullRequest":false,"CreatedAt":"2020-04-23T17:38:35","Actor":"williamb1024","Number":"43609","RawContent":null,"Title":"Error CS0122 when attempting to implement a nested `private protected` interface in descendant classes","State":"open","Body":"**Version Used**:  Visual Studio 16.5.4\r\n\r\n```\r\npublic class X: X.XI, X.XII\r\n{\r\n        private interface XI\r\n        {\r\n        }\r\n\r\n        private protected interface XII\r\n        {\r\n        }\r\n}\r\n\r\npublic class XX: X, X.XII\r\n{\r\n        public void Test()\r\n        {\r\n            XII z = this;\r\n        }\r\n }\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe class type `XX` would be able to implement the `X.XII` interface.\r\n\r\n**Actual Behavior**:\r\n\r\nThe error \"CS0122: 'X.XII' is inaccessible due to its protection level\" is generated.\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/43609","RelatedDescription":"Open issue \"Error CS0122 when attempting to implement a nested `private protected` interface in descendant classes\" (#43609)"},{"Id":"605706136","IsPullRequest":true,"CreatedAt":"2020-04-23T17:14:36","Actor":"dpoeschl","Number":"43606","RawContent":null,"Title":"Add tests for indentation around C# 9 patterns.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43606","RelatedDescription":"Open PR \"Add tests for indentation around C# 9 patterns.\" (#43606)"},{"Id":"605697227","IsPullRequest":true,"CreatedAt":"2020-04-23T17:01:22","Actor":"AlekseyTs","Number":"43605","RawContent":null,"Title":"Merge master into SimplePrograms","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/43605","RelatedDescription":"Open PR \"Merge master into SimplePrograms\" (#43605)"},{"Id":"605672219","IsPullRequest":true,"CreatedAt":"2020-04-23T16:24:19","Actor":"AlekseyTs","Number":"43604","RawContent":null,"Title":"Add unit-tests.","State":"open","Body":"Closes #24517","Url":"https://github.com/dotnet/roslyn/pull/43604","RelatedDescription":"Open PR \"Add unit-tests.\" (#43604)"},{"Id":"605641898","IsPullRequest":false,"CreatedAt":"2020-04-23T15:40:31","Actor":"jnm2","Number":"43603","RawContent":null,"Title":"Name completion help disappears for out parameters","State":"open","Body":"**Version Used**: 16.6-p3\r\n\r\n(Incorrect) `out var` names are suggested when an incorrect overload is available to be selected (see https://github.com/dotnet/roslyn/issues/43602), but when there is no ambiguity, no names are suggested:\r\n\r\n```cs\r\nclass C\r\n{\r\n    void M1(out int deusExMachina) => throw null;\r\n\r\n    void M2()\r\n    {\r\n        M1(out var [||])\r\n    }\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/80119236-6d435680-8557-11ea-8eed-b244094b9e18.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/43603","RelatedDescription":"Open issue \"Name completion help disappears for out parameters\" (#43603)"},{"Id":"605638336","IsPullRequest":false,"CreatedAt":"2020-04-23T15:35:42","Actor":"jnm2","Number":"43602","RawContent":null,"Title":"Name completion help for out var suggests names from the wrong overload","State":"open","Body":"**Version Used**: 16.6-p3\r\n\r\nNot only does the chosen overload not match the currently-selected overload in signature help, the suggested names are based on a parameter that isn't even an `out` parameter!\r\n\r\n```cs\r\nclass C\r\n{\r\n    void M()\r\n    {\r\n        int.TryParse(\"\", out var [||])\r\n    }\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8040367/80118458-6d8f2200-8556-11ea-9417-b8edb8f4778d.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/43602","RelatedDescription":"Open issue \"Name completion help for out var suggests names from the wrong overload\" (#43602)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"605889649","IsPullRequest":false,"CreatedAt":"2020-04-23T21:34:27","Actor":"andreakarasho","Number":"8111","RawContent":null,"Title":"WebClient exception","State":"open","Body":"```csharp\r\nWebClient client = new WebClient();\r\nclient.Proxy = null;\r\nclient.Headers.Add(\"user-agent\", \"Other\");\r\n\r\nstring xml = client.DownloadString(MY_URL); // crash\r\n```\r\n\r\n```Unhandled Exception: System.NullReferenceException: Arg_NullReferenceException\r\nStackTrace_AtWordSystem.Diagnostics.Tracing.EventSource.WriteEvent(Int32, Int32) + 0x1b\r\nStackTrace_AtWordSystem.Threading.PortableThreadPoolEventSource.WorkerThreadStart(Int16) + 0x26\r\n```\r\n\r\nUbuntu and osx  x64\r\nnetcore 3.1\r\nlatest corert","Url":"https://github.com/dotnet/corert/issues/8111","RelatedDescription":"Open issue \"WebClient exception\" (#8111)"},{"Id":"598403897","IsPullRequest":false,"CreatedAt":"2020-04-23T20:41:52","Actor":"xdrie","Number":"8083","RawContent":null,"Title":"recommended way to analyze size of output binary","State":"closed","Body":"I followed the [instructions](https://github.com/dotnet/corert/tree/master/samples/MonoGame) for the MonoGame sample to publish to a native binary compiled with CoreRT.\r\n\r\nHowever, the output size is quite a bit larger with my application than with this template application, and I would like to figure out what is contributing to the size. My application references multiple packages and other assemblies, but I am not sure how much each of those contribute to the size. Ostensibly, not that much; I looked at the file sizes from a `dotnet publish` using CoreCLR and they are in the few KB, while my CoreRT binary is upwards of 50MB. With the minimal MonoGame application, it is about 9MB, which is closer to what I am targeting.\r\n\r\nHow could I diagnose exactly what is causing my CoreRT binaries to be so large?","Url":"https://github.com/dotnet/corert/issues/8083","RelatedDescription":"Closed issue \"recommended way to analyze size of output binary\" (#8083)"},{"Id":"605737191","IsPullRequest":false,"CreatedAt":"2020-04-23T18:51:52","Actor":"teobugslayer","Number":"8109","RawContent":null,"Title":"Sample for using Avalonia UI and CoreRT","State":"closed","Body":"Hi team,\r\n\r\nI have prepared a sample how to integrate Avalonia and CoreRT. You can find it [here](https://github.com/teobugslayer/AvaloniaCoreRTDemo). Do you think it would benefit the community if you link to it, or adopt it in the CoreRT codebase?\r\n\r\nAlso, I am open to critiques if something can be improved in my code.","Url":"https://github.com/dotnet/corert/issues/8109","RelatedDescription":"Closed issue \"Sample for using Avalonia UI and CoreRT\" (#8109)"},{"Id":"605772901","IsPullRequest":true,"CreatedAt":"2020-04-23T18:51:44","Actor":"teobugslayer","Number":"8110","RawContent":null,"Title":"Add Avalonia sample","State":"closed","Body":"I've noticed that the current Avalonia demo is a video, and the source code associated with it no longer exists.\r\nI am submitting a new sample, which can also be used as a skeleton for creating projects based on Avalonia and CoreRT.\r\n\r\nAddresses https://github.com/dotnet/corert/issues/8109","Url":"https://github.com/dotnet/corert/pull/8110","RelatedDescription":"Closed or merged PR \"Add Avalonia sample\" (#8110)"},{"Id":"602128991","IsPullRequest":false,"CreatedAt":"2020-04-23T17:56:57","Actor":"teobugslayer","Number":"8094","RawContent":null,"Title":"How can I get the full, human readable content of exceptions?","State":"closed","Body":"How can I get the full, human readable content of exceptions?\r\n\r\nI've read [Optimizing programs targeting CoreRT](https://github.com/dotnet/corert/blob/master/Documentation/using-corert/optimizing-corert.md) and modified my .csprog file accordingly:\r\n\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net5.0</TargetFramework>\r\n    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\r\n    <Platforms>AnyCPU;x64</Platforms>\r\n  </PropertyGroup>\r\n  \r\n  <PropertyGroup>\r\n\t<RootAllApplicationAssemblies>true</RootAllApplicationAssemblies>\r\n\t<IlcGenerateCompleteTypeMetadata>true</IlcGenerateCompleteTypeMetadata>\r\n\t<IlcGenerateStackTraceData>true</IlcGenerateStackTraceData>\r\n\t<IlcDisableUnhandledExceptionExperience>false</IlcDisableUnhandledExceptionExperience>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- removed for brevity-->\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nHowever, this made no difference.\r\n\r\nIf I debug my program in VS 2019, when it throws an exception, the only information I can see is (preserving the spelling):\r\n\r\n> `Unhandled exception at 0x00007FF639FDB254 in AvaloniaCoreRTDemo.exe: 0xE31F4059. occurred`\r\n\r\nIf I run the app in the console, it silently crashes and nothing is written to the console.\r\n\r\nHow can I get the full exception contents? Because this exception is thrown due to reflection problem, I really need the full exception message so that I can fix my rd.xml file.","Url":"https://github.com/dotnet/corert/issues/8094","RelatedDescription":"Closed issue \"How can I get the full, human readable content of exceptions?\" (#8094)"},{"Id":"605466365","IsPullRequest":true,"CreatedAt":"2020-04-23T11:45:42","Actor":"kant2002","Number":"8108","RawContent":null,"Title":"Add sample CMake configuration for VS","State":"open","Body":"This allows to view native cmponents inside VS CMake Targets view without much efforts.\r\nI try to mimic setup for `gen-buildsys-win.bat` for Windows only.\r\nMaybe maintaining this file in addition to `gen-buildsys-win.bat` then it can be found his place in the documentation somewhere.\r\nI prefer to work inside Visual Studio and having such file significantly improve discoverability for native components from which CoreRT made up of.\r\n\r\n![image](https://user-images.githubusercontent.com/4257079/80095726-376b9580-858a-11ea-9b96-c2fc97cad870.png)\r\n","Url":"https://github.com/dotnet/corert/pull/8108","RelatedDescription":"Open PR \"Add sample CMake configuration for VS\" (#8108)"},{"Id":"604608666","IsPullRequest":false,"CreatedAt":"2020-04-23T07:59:56","Actor":"kant2002","Number":"8106","RawContent":null,"Title":"Improve understanding of errors during ILC compilation","State":"closed","Body":"I try to compile No Runtime example on Linux for SeeSharpSnake and it gives me following error:\r\n```\r\n  System.InvalidOperationException: Expected type 'Internal.Runtime.CompilerHelpers.InteropHelpers' not found in module 'SeeSharpSnake'\r\n     at Internal.IL.HelperExtensions.GetKnownType(ModuleDesc module, String namespace, String name)\r\n     at Internal.IL.HelperExtensions.GetHelperType(TypeSystemContext context, String name)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitPInvokeCall(PInvokeILCodeStreams ilCodeStreams)\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL()\r\n     at Internal.IL.Stubs.PInvokeILEmitter.EmitIL(MethodDesc method, PInvokeILEmitterConfiguration pinvokeILEmitterConfiguration, InteropStateManager interopStateManager)\r\n     at ILCompiler.Compilation.CombinedILProvider.GetMethodIL(MethodDesc method)\r\n     at ILCompiler.Compilation.ILCache.CreateValueFromKey(MethodDesc key)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.Compilation.GetMethodIL(MethodDesc method)\r\n     at Internal.IL.ILImporter..ctor(ILScanner compilation, MethodDesc method, MethodIL methodIL)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nFrom this stack trace this is non-actionable for me without building CoreRT myself. I definitely can do that, but what if somebody read article and just try to go with out-of-box experience. Current message not very friendly. \r\n\r\n","Url":"https://github.com/dotnet/corert/issues/8106","RelatedDescription":"Closed issue \"Improve understanding of errors during ILC compilation\" (#8106)"},{"Id":"604292610","IsPullRequest":true,"CreatedAt":"2020-04-23T07:49:37","Actor":"kant2002","Number":"8105","RawContent":null,"Title":"Print information about method which fails the IL compilation process","State":"closed","Body":"This allow to better understsand what part of code break application","Url":"https://github.com/dotnet/corert/pull/8105","RelatedDescription":"Closed or merged PR \"Print information about method which fails the IL compilation process\" (#8105)"},{"Id":"598425828","IsPullRequest":false,"CreatedAt":"2020-04-22T12:54:04","Actor":"samcragg","Number":"8084","RawContent":null,"Title":"ilc package options","State":"closed","Body":"I'm using the ilc to compile some managed code into a library that I'm then linking with my C++ project so would like to redistribute the ILCompiler inside my package.\r\n\r\nSince I'm only targeting Win64 and Linux64, I was hoping to try to publish the ILCompiler as a [runtime dependent](https://docs.microsoft.com/en-us/dotnet/core/deploying/#publish-runtime-dependent) package for both platforms and include them in a single package to simplify things, however, when building everything is build with the .NET Core 2.1\r\n\r\nMy naive attempt to upgrade to change `DotnetCLIVersion.txt`, however, that didn't go well. So I thought I'd change the publish step to use my local dotnet version to publish instead of the one in Tools, however, it seems the `ILCompiler/netcoreapp/ilc.csproj` isn't a real project but just there to create a native exe that can launch the dll built at a later step.\r\n\r\nSo, my question is, what would be the best way to reduce the ILCompiler package size? One option would be to dogfeed the compiler to itself, however, I think I have the same issue as above - what is the actual project that needs compiling to create the managed- > C++ library compiler?\r\n\r\nAlternatively, is there anything I can do to get the compiler to use the locally installed SDK rather than the one in the Tools directory (i.e. creating the runtime dependent one).\r\n\r\nAny pointers would be much appreciated, thanks 🙂 ","Url":"https://github.com/dotnet/corert/issues/8084","RelatedDescription":"Closed issue \"ilc package options\" (#8084)"},{"Id":"604733607","IsPullRequest":true,"CreatedAt":"2020-04-22T12:53:03","Actor":"samcragg","Number":"8107","RawContent":null,"Title":"Allow publishing of ilc with newer SDKs","State":"open","Body":"This is to address #8084 - there shouldn't be any observable changes, however, it does mean that you are able to run `dotnet publish` on the ilc project with your local SDK so hopefully it's of some use to others.","Url":"https://github.com/dotnet/corert/pull/8107","RelatedDescription":"Open PR \"Allow publishing of ilc with newer SDKs\" (#8107)"},{"Id":"602799103","IsPullRequest":false,"CreatedAt":"2020-04-21T22:45:50","Actor":"yowl","Number":"8100","RawContent":null,"Title":"Wasm: Question: what is CORINFO_EH_CLAUSE_SAMETRY for?","State":"closed","Body":"Wasm backend doesn't do anything with this flag and maybe it should.  What would be some c# or IL  that would cause that to be set?\r\n\r\nhttps://github.com/dotnet/corert/blob/e0e4531dd844e05596a794f74bd2e038815df96a/src/JitInterface/src/CorInfoTypes.cs#L659","Url":"https://github.com/dotnet/corert/issues/8100","RelatedDescription":"Closed issue \"Wasm: Question: what is CORINFO_EH_CLAUSE_SAMETRY for?\" (#8100)"},{"Id":"604036599","IsPullRequest":true,"CreatedAt":"2020-04-21T17:02:17","Actor":"kant2002","Number":"8104","RawContent":null,"Title":"Fix link to CoreCLR sources","State":"closed","Body":"and give exposure to ILVerify sources","Url":"https://github.com/dotnet/corert/pull/8104","RelatedDescription":"Closed or merged PR \"Fix link to CoreCLR sources\" (#8104)"},{"Id":"602809588","IsPullRequest":false,"CreatedAt":"2020-04-21T16:28:21","Actor":"kant2002","Number":"8101","RawContent":null,"Title":"Expected type 'System.Runtime.CompilerServices.ICastable' not found in module","State":"closed","Body":"I messing up with custom runtime, and something start falling.\r\n\r\n```\r\nEXEC : error : Expected type 'System.Runtime.CompilerServices.ICastable' not found in module 'EfiRuntime' [D:\\d\\kant\\my\\EfiTools\\UefiSnake\\UefiSnake.csproj]\r\n  System.InvalidOperationException: Expected type 'System.Runtime.CompilerServices.ICastable' not found in module 'EfiRuntime'\r\n     at Internal.IL.HelperExtensions.GetKnownType(ModuleDesc module, String namespace, String name)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.get_ICastableInterface()\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.OutputFlags(NodeFactory factory, ObjectDataBuilder& objData)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.GetData(NodeFactory factory, Boolean relocsOnly)\r\n     at ILCompiler.DependencyAnalysis.ObjectNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nSeems to be it is falling in this code\r\nhttps://github.com/dotnet/corert/blob/bee1832d86cf8fe795f307579e152700a9770c52/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/EETypeNode.cs#L563-L573\r\nbecause I do not implement  `ICastable`.\r\n\r\nIf I do not have ICastable defined, maybe I do not care, and Node flag `EETypeFlags.ICastableFlag` should not be set at all?","Url":"https://github.com/dotnet/corert/issues/8101","RelatedDescription":"Closed issue \"Expected type 'System.Runtime.CompilerServices.ICastable' not found in module\" (#8101)"},{"Id":"603589145","IsPullRequest":true,"CreatedAt":"2020-04-21T16:27:01","Actor":"kant2002","Number":"8103","RawContent":null,"Title":"Remove ICastable","State":"closed","Body":"Closes #8101","Url":"https://github.com/dotnet/corert/pull/8103","RelatedDescription":"Closed or merged PR \"Remove ICastable\" (#8103)"},{"Id":"602624896","IsPullRequest":true,"CreatedAt":"2020-04-21T10:21:34","Actor":"yowl","Number":"8097","RawContent":null,"Title":"Wasm: implement ckfinite","State":"closed","Body":"This follows https://github.com/dotnet/corert/pull/5405 now that we have exception support.  Added all the test cases from the cases mentioned there, https://github.com/dotnet/coreclr/blob/9b0a9fd623/tests/src/JIT/IL_Conformance/Old/Base/ckfinite.il\r\n\r\nThanks @am11\r\n\r\nWIP as depends on #8096, when I'll squash commits.\r\n\r\nCloses #4549","Url":"https://github.com/dotnet/corert/pull/8097","RelatedDescription":"Closed or merged PR \"Wasm: implement ckfinite\" (#8097)"},{"Id":"603399138","IsPullRequest":true,"CreatedAt":"2020-04-20T23:03:46","Actor":"kant2002","Number":"8102","RawContent":null,"Title":"If ICastable is not defined in Runtime library, do not perform specific processing","State":"closed","Body":"I see references to have ICastable removed, but anyway there nothing specific in my code which seems to be require presence of this interface in custom classlib\r\n\r\nCloses #8101","Url":"https://github.com/dotnet/corert/pull/8102","RelatedDescription":"Closed or merged PR \"If ICastable is not defined in Runtime library, do not perform specific processing\" (#8102)"},{"Id":"602472945","IsPullRequest":true,"CreatedAt":"2020-04-20T09:39:35","Actor":"MichalStrehovsky","Number":"8095","RawContent":null,"Title":"Speed up typeof(Foo) and Object.GetType by 50+%","State":"closed","Body":"This adds a general purpose concept of \"writable data\" to the EEType data structure. This points to a block of memory whose purpose is defined by the class library (we can potentially cache all sorts of stuff there).\r\n\r\nThe writable data is used to hold a GC handle to the runtime `System.Type` instance associated with the EEType. This bypasses the hashtable lookup that has been used before.\r\n\r\nI'm seeing more than 50% TP improvement against best case scenarios with the hashtable (best case defined as \"the thing we're looking for is the first entry in the hashtable bucket\").\r\n\r\nBoth CoreCLR and Mono use a similar approach. CoreRT was lagging in perf because of the hashtable lookup: this brings us much closer. We're still not as fast as CoreCLR, but getting faster than this would have impacts elsewhere (in terms of working set and size on disk). The implementation I chose for CoreRT (optional relative pointer field) has minimal working set impact.","Url":"https://github.com/dotnet/corert/pull/8095","RelatedDescription":"Closed or merged PR \"Speed up typeof(Foo) and Object.GetType by 50+%\" (#8095)"},{"Id":"602620280","IsPullRequest":true,"CreatedAt":"2020-04-19T21:28:38","Actor":"yowl","Number":"8096","RawContent":null,"Title":"Wasm: change NRE handling from trap to exception","State":"closed","Body":"This PR updates NullReferenceException handling from an LLVM `trap` to a `RhpThrowEx`.  Also added the check to getting field addresses as noticed that was missing.  Just 2 basic tests.  At some point I suppose Wasm can mature into using the existing tests rather than the `HelloWorld` bucket.","Url":"https://github.com/dotnet/corert/pull/8096","RelatedDescription":"Closed or merged PR \"Wasm: change NRE handling from trap to exception\" (#8096)"},{"Id":"602772172","IsPullRequest":true,"CreatedAt":"2020-04-19T21:14:07","Actor":"MichalStrehovsky","Number":"8099","RawContent":null,"Title":"Allow generic types through marshalling infra","State":"closed","Body":"This might require other fixes once we actually run CoreCLR tests for the newly allowed marshalling of blittable generics, but this is enough to restore compatible behavior with `Marshal.OffsetOf<SomeGenericType<Arg>>(\"foo\")`.\r\n\r\nCLR didn't do a good job blocking generics in that particular code path and there is code out there taking advantage of that.\r\n\r\nFixes a compiler crash that would happen because the instantiation on the native type was unexpected.","Url":"https://github.com/dotnet/corert/pull/8099","RelatedDescription":"Closed or merged PR \"Allow generic types through marshalling infra\" (#8099)"},{"Id":"602761123","IsPullRequest":true,"CreatedAt":"2020-04-19T18:14:48","Actor":"MichalStrehovsky","Number":"8098","RawContent":null,"Title":"Fix emission of BSS section in Mach-O","State":"closed","Body":"Mach-O has a DataBSSSection in LLVM and BSSSection is null.\r\n\r\nAlso disabling warning as errors because compiling LLVM with latest\r\nXcode produces warnings.","Url":"https://github.com/dotnet/corert/pull/8098","RelatedDescription":"Closed or merged PR \"Fix emission of BSS section in Mach-O\" (#8098)"},{"Id":"598370515","IsPullRequest":true,"CreatedAt":"2020-04-16T12:50:53","Actor":"yowl","Number":"8082","RawContent":null,"Title":"Wasm: Update linux instructions for LLVM9","State":"closed","Body":"You'll see there is a problem with the RID for the libLLVM nuget as described in the updated instructions.  At least that is my limited understanding of it.   I've created this PR with the changes to the documentation to describe the issue I had, but if there's a better way to fix this, then please let me know.  Otherwise this brings the linux build script in line with the Windows one.\r\n\r\nFixes #6827 ","Url":"https://github.com/dotnet/corert/pull/8082","RelatedDescription":"Closed or merged PR \"Wasm: Update linux instructions for LLVM9\" (#8082)"},{"Id":"600533247","IsPullRequest":true,"CreatedAt":"2020-04-16T12:49:24","Actor":"MichalStrehovsky","Number":"8093","RawContent":null,"Title":"CompleteTypeMetadata shouldn't cause compilation to crash","State":"closed","Body":"Ensure the signature of the added method can be resolved.","Url":"https://github.com/dotnet/corert/pull/8093","RelatedDescription":"Closed or merged PR \"CompleteTypeMetadata shouldn't cause compilation to crash\" (#8093)"},{"Id":"600294085","IsPullRequest":true,"CreatedAt":"2020-04-16T06:28:14","Actor":"yowl","Number":"8091","RawContent":null,"Title":"Wasm: Do not build wasm when running `build`","State":"closed","Body":"Following on from https://github.com/dotnet/corert/pull/7137#discussion_r408403714 this PR removes the building of the wasm enabled test projects, Generics and HelloWorld, when running `build`.","Url":"https://github.com/dotnet/corert/pull/8091","RelatedDescription":"Closed or merged PR \"Wasm: Do not build wasm when running `build`\" (#8091)"},{"Id":"600309999","IsPullRequest":false,"CreatedAt":"2020-04-15T13:45:42","Actor":"Michael-Kelley","Number":"8092","RawContent":null,"Title":"Publishing a freestanding shared library prevents exports from being generated","State":"open","Body":"As in the title, publishing a shared library that doesn't use a runtime (as outlined [here in ZeroSharp](https://github.com/MichalStrehovsky/zerosharp/blob/master/no-runtime/noruntime.csproj)) and contains no entry point results in a DLL that has no exports.\r\n\r\nHere are the relevant portions from my project file:\r\n```xml\r\n<PropertyGroup>\r\n    ...\r\n\r\n    <NoStdLib>true</NoStdLib>\r\n    <NoConfig>true</NoConfig>\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>\r\n    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>\r\n\r\n    <IlcDisableReflection>true</IlcDisableReflection>\r\n    <IlcSystemModule>Kernel</IlcSystemModule>\r\n\r\n    <NativeLib>Shared</NativeLib>\r\n</PropertyGroup>\r\n\r\n...\r\n\r\n<ItemGroup>\r\n    <LinkerArg Include=\"/noentry\" />\r\n</ItemGroup>\r\n\r\n<Target Name=\"CustomizeReferences\" BeforeTargets=\"BeforeCompile\" AfterTargets=\"FindReferenceAssembliesForReferences\">\r\n    <ItemGroup>\r\n        <ReferencePathWithRefAssemblies Remove=\"@(ReferencePathWithRefAssemblies)\" />\r\n        <ReferencePath Remove=\"@(ReferencePath)\" />\r\n    </ItemGroup>\r\n</Target>\r\n```\r\n\r\nAnd the function that should be exported:\r\n\r\n```csharp\r\n[NativeCallable(EntryPoint = \"kernel_main\")]\r\npublic static void KernelMain() {\r\n    ...\r\n}\r\n```\r\n\r\nEDIT: Just to clarify, I *can* work around it by adding an `/export` entry for each function to my linker arguments, but it's far from ideal.","Url":"https://github.com/dotnet/corert/issues/8092","RelatedDescription":"Open issue \"Publishing a freestanding shared library prevents exports from being generated\" (#8092)"},{"Id":"599523129","IsPullRequest":true,"CreatedAt":"2020-04-14T13:39:16","Actor":"MichalStrehovsky","Number":"8090","RawContent":null,"Title":"Restore application manifest in dependency graph viewer","State":"closed","Body":"This line got lost in #7958. Makes the dependency viewer auto-prompt for elevation.","Url":"https://github.com/dotnet/corert/pull/8090","RelatedDescription":"Closed or merged PR \"Restore application manifest in dependency graph viewer\" (#8090)"},{"Id":"598917637","IsPullRequest":true,"CreatedAt":"2020-04-13T17:13:11","Actor":"jkotas","Number":"8088","RawContent":null,"Title":"Disable bigvtbl test","State":"closed","Body":"Fixes #8087","Url":"https://github.com/dotnet/corert/pull/8088","RelatedDescription":"Closed or merged PR \"Disable bigvtbl test\" (#8088)"},{"Id":"598908371","IsPullRequest":false,"CreatedAt":"2020-04-13T17:13:10","Actor":"yowl","Number":"8087","RawContent":null,"Title":"Linux CI: Question - increase timeout?","State":"closed","Body":"https://dev.azure.com/dnceng/public/_build/results?buildId=597925&view=logs&j=7606baf7-4fd4-5a2a-9b67-e3a40f828761&t=fea84407-18f4-580a-c97f-a372cd8c4cce&l=711\r\n\r\nLine 711:\r\n```\r\n cmdLine:/__w/1/s/tests_downloaded/CoreCLR/JIT/opt/virtualstubdispatch/bigvtbl/bigvtbl_cs_ro/bigvtbl_cs_ro.sh Timed Out\r\n```\r\n\r\nWould it be appropriate to increase the timeout on this?","Url":"https://github.com/dotnet/corert/issues/8087","RelatedDescription":"Closed issue \"Linux CI: Question - increase timeout?\" (#8087)"},{"Id":"598944256","IsPullRequest":true,"CreatedAt":"2020-04-13T15:09:40","Actor":"yowl","Number":"8089","RawContent":null,"Title":"WIP: Wasm: add overflow exceptions to add.ovf(.un)","State":"open","Body":"Wasm currently implements these opcodes but without the overflow checks.  This PR adds the checks just for add.ovf and add.ovf.un for 32 and 64 bit ints.  I've done it starting with this idea \r\n```\r\n    if (a > 0 && b > INT_MAX - a) {\r\n        /* handle overflow */\r\n    } else if (a < 0 && b < INT_MIN - a) {\r\n        /* handle underflow */\r\n    }\r\n    return a + b;\r\n```\r\nfrom https://codereview.stackexchange.com/questions/37177/simple-method-to-detect-int-overflow.  Unsigned checks are simpler as `a<0` is always false.\r\n\r\nIf this looks ok I can create similar checks for sub and mul.  WIP as depends on exception support in https://github.com/dotnet/corert/pull/7137  ","Url":"https://github.com/dotnet/corert/pull/8089","RelatedDescription":"Open PR \"WIP: Wasm: add overflow exceptions to add.ovf(.un)\" (#8089)"},{"Id":"598589155","IsPullRequest":true,"CreatedAt":"2020-04-12T22:53:42","Actor":"christianscheuer","Number":"8086","RawContent":null,"Title":"Add Dockerfile for building Wasm in Debian 10 Docker container.","State":"open","Body":"Since I saw the work in https://github.com/dotnet/corert/pull/8082 I thought it would be interesting to see if the Wasm leg could be built in Docker.\r\n\r\nBased on this we could make it possible for people to have fully self-contained Wasm examples that run with no dependencies on anything but Docker. I think that would be a nice alternative vs having to set up Emscripten etc.\r\n\r\nHere's an attempt at that. Right now it works with a Dockerfile in the root of corert.\r\nWe could then use that image as a basis for a .NET Sdk based image where we copy over the ILC binaries/output dir. This again could be used in a self-contained example as mentioned, which will then build cross-plat with little to no setup. I think that would lower the burden of entry into testing the Wasm stuff.\r\n\r\nI had to ugly hack src/BuildIntegration/Microsoft.NETCore.Native.targets to accept \".bc\" bitcode files from Emscripten em++, since for some reason it doesn't produce the \".a\" files expected. They work though. `em++` says while building the portable runtime:\r\n```\r\nem++: warning: Assuming object file output in the absence of `-c`, based on output filename. Add with `-c` or `-r` to avoid this warning [-Wemcc]\r\n```\r\n\r\nI also had to put an if-def around the calls to `ILHelpers` in HelloWasm since those are only built on Windows it appears.\r\n\r\nLet me know if this could be of interest, or if it's better suited to have in an external repo where we just pull in the corert source code instead of hosting the Dockerfile directly here.","Url":"https://github.com/dotnet/corert/pull/8086","RelatedDescription":"Open PR \"Add Dockerfile for building Wasm in Debian 10 Docker container.\" (#8086)"},{"Id":"598434454","IsPullRequest":false,"CreatedAt":"2020-04-12T08:12:09","Actor":"kant2002","Number":"8085","RawContent":null,"Title":"Source package for runtime","State":"open","Body":"Is it possible to ship `System.Private.CoreLib` as source package, so a lot of things should not be copied over. Use case for that is new target different execution environment, not supported by CoreCLR itself. Example for me for sure is UEFI. But other targets probably can be considered.\r\n\r\nI see need to have marshaling delegates in custom runtime for UEFI, and this require me to drag more code from `System.Private.CoreLib`. This derivation stop probably around `[RuntimeExport]` part. But I may hit some `[RuntimeImport]` too. \r\n\r\nI understand that near term for me no other solution except borrowing code from `System.Private.CoreLib`, but maybe other better ways possible?","Url":"https://github.com/dotnet/corert/issues/8085","RelatedDescription":"Open issue \"Source package for runtime\" (#8085)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"606036388","IsPullRequest":false,"CreatedAt":"2020-04-24T04:44:54","Actor":"andrew-boyarshin","Number":"11407","RawContent":null,"Title":"Microsoft.NETFramework.ReferenceAssemblies is not marked as PrivateAssets=All","State":"open","Body":"I've spent some time fine-tuning SharpGen.Runtime dependency graph and there is one unexpected public dependency for 4.7.1.\r\n![NuGet Package Explorer](https://user-images.githubusercontent.com/3063662/80175653-616f9700-8620-11ea-80a5-5bce2ebfa2de.png)\r\n\r\n[Design spec](https://github.com/dotnet/designs/blob/master/accepted/2020/targeting-packs/targeting-packs.md) mentiones that:\r\n> The reference assembly packages should not show up as dependencies of \"normal\" packages. Thus, the reference assembly packages should set developmentDependency to true in it's metadata. Likewise, when the .NET SDK automatically references the reference assembly metapackage, it should use PrivateAssets=\"All\".\r\n\r\nBut the implementation in #10981 omitted the last part.","Url":"https://github.com/dotnet/sdk/issues/11407","RelatedDescription":"Open issue \"Microsoft.NETFramework.ReferenceAssemblies is not marked as PrivateAssets=All\" (#11407)"},{"Id":"605676782","IsPullRequest":false,"CreatedAt":"2020-04-24T04:12:33","Actor":"danmosemsft","Number":"11400","RawContent":null,"Title":"Require minimum Powershell version in dotnet-install.ps1?","State":"closed","Body":"See https://github.com/dotnet/runtime/issues/35301 -- it seems 5.1 can fail cryptically. According to https://github.com/PowerShell/PowerShell/issues/12442 this is out of support.\r\n\r\nIf we want dotnet-install.ps1 to be as helpful as possible (since it's our front door for many people) perhaps it should ensure that the Powershell version installed is new enough.  At the moment, that seems to be 6.2 : https://docs.microsoft.com/en-us/powershell/scripting/powershell-support-lifecycle?view=powershell-7 . (If that's the case, then we can also update our own [build requirements](https://github.com/dotnet/runtime/blob/master/docs/workflow/requirements/windows-requirements.md) which currently say 3.0.)\r\n\r\nConversely however on my Windows 10 machine, I see I have 5.1, and dotnet-install.ps1 appears to work. Perhaps the issue this user encountered is obscure, and we should continue to plow ahead no matter the Powershell version.","Url":"https://github.com/dotnet/sdk/issues/11400","RelatedDescription":"Closed issue \"Require minimum Powershell version in dotnet-install.ps1?\" (#11400)"},{"Id":"605970790","IsPullRequest":true,"CreatedAt":"2020-04-24T03:59:41","Actor":"dotnet-maestro[bot]","Number":"11406","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 91a94d90-8ff5-4956-30bf-08d7d677f4fe\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/24/2020 1:03 AM\r\n- **Commit**: 96658753683bf4691102d34bb05f8dadc6f7fc81\r\n- **Branch**: refs/heads/release/5.0.1xx-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.4.20221.2 to 5.0.100-preview.4.20223.2\r\n\r\n[marker]: <> (End:91a94d90-8ff5-4956-30bf-08d7d677f4fe)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11406","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from aspnet/websdk\" (#11406)"},{"Id":"605950290","IsPullRequest":true,"CreatedAt":"2020-04-24T02:56:00","Actor":"dotnet-maestro[bot]","Number":"11405","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c1beccfa-b173-4021-38cb-08d7d6783975\r\n- **Build**: 20200423.5\r\n- **Date Produced**: 4/23/2020 5:57 PM\r\n- **Commit**: 88433aa035f30dd5598d9e67875bd246d839321e\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.4.20221.8 to 5.0.0-preview.4.20223.5\r\n\r\n[marker]: <> (End:c1beccfa-b173-4021-38cb-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11405","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore\" (#11405)"},{"Id":"605943952","IsPullRequest":true,"CreatedAt":"2020-04-24T02:05:19","Actor":"dotnet-maestro[bot]","Number":"11404","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200423.13\r\n- **Date Produced**: 4/23/2020 9:57 PM\r\n- **Commit**: bf6f620791a7c7d3e957e4054394a0a9eb0330c0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20223.1 to 5.0.0-preview.5.20223.13\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11404","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11404)"},{"Id":"605903970","IsPullRequest":true,"CreatedAt":"2020-04-24T00:40:10","Actor":"dotnet-maestro[bot]","Number":"11403","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.7 to 5.0.0-preview.4.20223.2 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/23/2020 9:04 PM\r\n- **Commit**: bd450fe31719535354256538ff6b65d78cf1d08b\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20222.5 to 5.0.0-preview.4.20223.2\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.7 to 5.0.0-preview.4.20223.2\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11403","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11403)"},{"Id":"605477515","IsPullRequest":true,"CreatedAt":"2020-04-23T22:14:09","Actor":"dotnet-maestro[bot]","Number":"11393","RawContent":null,"Title":"[master] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200422.1\r\n- **Date Produced**: 4/22/2020 12:36 PM\r\n- **Commit**: 226ea9b41a2f327f5c13d124b20085719f7760fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.5.20221.1 to 5.0.100-preview.5.20222.1\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11393","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/websdk\" (#11393)"},{"Id":"605477865","IsPullRequest":true,"CreatedAt":"2020-04-23T22:12:59","Actor":"dotnet-maestro[bot]","Number":"11394","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200422.6\r\n- **Date Produced**: 4/23/2020 5:59 AM\r\n- **Commit**: f5697e3cf6cb210e6710b85be1949b134b375ea2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.5.20221.2 to 5.0.0-preview.5.20222.6\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11394)"},{"Id":"605271870","IsPullRequest":true,"CreatedAt":"2020-04-23T17:18:45","Actor":"dotnet-maestro[bot]","Number":"11390","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.4 to 5.0.0-preview.4.20222.7 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200422.5\r\n- **Date Produced**: 4/23/2020 5:28 AM\r\n- **Commit**: 964a0e37ec9a561d89ef2ad85852f7a80f485c96\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20222.4 to 5.0.0-preview.4.20222.5\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.4 to 5.0.0-preview.4.20222.7\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11390","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11390)"},{"Id":"605695589","IsPullRequest":false,"CreatedAt":"2020-04-23T16:58:54","Actor":"ViktorHofer","Number":"11402","RawContent":null,"Title":"Add a RunEnvironmentVariables property to the sdk's Run target","State":"open","Body":"We currently define the `RunCommand`, `RunArguments` and `RunWorkingDirectory` properties which are used when Visual Studio F5 invokes the `Run` target. In case environment variables need to be passed in to the process invocation, a launchSettings.json file needs to be created in which you can specify `environmentVariables`.\r\n\r\nAdding a `RunEnvironmentVariables` property removes the necessity of adding a launchSettings.json file for such scenarios and works outside of Visual Studio as well (launchSettings.json are VS specific files).\r\n\r\nThe proposed change would be added to the RunInformation section in the `Microsoft.NET.Sdk.targets` file: https://github.com/dotnet/sdk/blob/36ef8b2aa8e5d579c921704bdab69a7407936889/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L706-L758\r\n\r\n### Example runsettings file with environment variables specified\r\n```\r\n  \r\n{\r\n    \"profiles\": {\r\n        \".NET Framework xUnit Console\": {\r\n            \"commandName\": \"Executable\",\r\n            \"executablePath\": \"$(RunWorkingDirectory)$(RunCommand)\",\r\n            \"commandLineArgs\": \"$(RunArguments) -parallel none\",\r\n            \"workingDirectory\": \"$(RunWorkingDirectory)\",\r\n            \"environmentVariables\": {\r\n                \"DEVPATH\": \"$(TestHostRootPath)\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @dsplaisted @eerhardt ","Url":"https://github.com/dotnet/sdk/issues/11402","RelatedDescription":"Open issue \"Add a RunEnvironmentVariables property to the sdk's Run target\" (#11402)"},{"Id":"605694345","IsPullRequest":true,"CreatedAt":"2020-04-23T16:56:59","Actor":"dotnet-maestro[bot]","Number":"11401","RawContent":null,"Title":"[master] Update dependencies from Microsoft/msbuild","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 2152568d-3f9e-49e7-fd5b-08d7a4f28342\r\n- **Build**: 20200423.2\r\n- **Date Produced**: 4/23/2020 4:01 PM\r\n- **Commit**: a123b6db0758e426ec84667ce10665a56455fd5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20222-02 to 16.7.0-preview-20223-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20222-02 to 16.7.0-preview-20223-02\r\n\r\n[marker]: <> (End:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11401","RelatedDescription":"Open PR \"[master] Update dependencies from Microsoft/msbuild\" (#11401)"},{"Id":"605028906","IsPullRequest":true,"CreatedAt":"2020-04-23T16:56:26","Actor":"dotnet-maestro[bot]","Number":"11385","RawContent":null,"Title":"[master] Update dependencies from Microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 2152568d-3f9e-49e7-fd5b-08d7a4f28342\r\n- **Build**: 20200422.2\r\n- **Date Produced**: 4/22/2020 6:24 PM\r\n- **Commit**: 43f946cf4e2c98442ad1075e5009297426a2c5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20222-01 to 16.7.0-preview-20222-02\r\n  - **Microsoft.Build**: from 16.7.0-preview-20222-01 to 16.7.0-preview-20222-02\r\n\r\n[marker]: <> (End:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11385","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from Microsoft/msbuild\" (#11385)"},{"Id":"605640859","IsPullRequest":true,"CreatedAt":"2020-04-23T15:39:43","Actor":"mmitche","Number":"11399","RawContent":null,"Title":"[release/5.0.1xx-preview4] Add preview4 publishing","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/11399","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Add preview4 publishing\" (#11399)"},{"Id":"605628356","IsPullRequest":false,"CreatedAt":"2020-04-23T15:22:13","Actor":"dsplaisted","Number":"11398","RawContent":null,"Title":"Infer WinExe output type as appropriate","State":"open","Body":"If a project file specifies an `OutputType` of `Exe`, we should automatically change it to `WinExe` if any of the following are true:\r\n\r\n- `TargetPlatformIdentifier` is `windows` (which will be the case if the `TargetFramework` is `net5.0-windows`\r\n- `UseWindowsForms` or `UseWPF` is true (this will cover projects that target .NET Core 3.x and thus don't have the `TargetPlatformIdentifier` set to `Windows`","Url":"https://github.com/dotnet/sdk/issues/11398","RelatedDescription":"Open issue \"Infer WinExe output type as appropriate\" (#11398)"},{"Id":"605624150","IsPullRequest":false,"CreatedAt":"2020-04-23T15:16:35","Actor":"justinormont","Number":"11397","RawContent":null,"Title":"CLI help text commas vs. bars for aliases","State":"open","Body":"The main page of the help text uses \"|\" to note aliases:\r\n\r\n```bash\r\n$ dotnet -h\r\n...\r\nsdk-options:\r\n  -d|--diagnostics  Enable diagnostic output.\r\n  -h|--help         Show command line help.\r\n```\r\n\r\nHelp text for commands use \", \" to note aliases:\r\n```bash\r\n$dotnet build -h\r\nOptions:\r\n  -h, --help                            Show command line help.\r\n  -o, --output <OUTPUT_DIR>             The output directory to place built artifacts in.\r\n  -f, --framework <FRAMEWORK>           The target framework to build for. The target framework must also be specified in the project file.\r\n  -c, --configuration <CONFIGURATION>   The configuration to use for building the project. The default for most projects is 'Debug'.\r\n```","Url":"https://github.com/dotnet/sdk/issues/11397","RelatedDescription":"Open issue \"CLI help text commas vs. bars for aliases\" (#11397)"},{"Id":"605476828","IsPullRequest":true,"CreatedAt":"2020-04-23T14:52:01","Actor":"dotnet-maestro[bot]","Number":"11392","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200423.1\r\n- **Date Produced**: 4/23/2020 10:08 AM\r\n- **Commit**: bac79b9f62595924f71cf6666283e9fc60a8beea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20221.15 to 5.0.0-preview.5.20223.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11392","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#11392)"},{"Id":"605479190","IsPullRequest":true,"CreatedAt":"2020-04-23T12:07:25","Actor":"dotnet-maestro[bot]","Number":"11396","RawContent":null,"Title":"[master] Update dependencies from mono/linker","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n## From https://github.com/mono/linker\r\n- **Subscription**: 769e6472-e796-4bcb-a0ac-08d7dbf4acc5\r\n- **Build**: 20200423.1\r\n- **Date Produced**: 4/23/2020 11:27 AM\r\n- **Commit**: f5a987566eef13ea8f06e1fcfd3680ce307ae51f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.ILLink.Tasks**: from 5.0.0-preview.3.20222.1 to 5.0.0-preview.3.20223.1\r\n\r\n[marker]: <> (End:769e6472-e796-4bcb-a0ac-08d7dbf4acc5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11396","RelatedDescription":"Open PR \"[master] Update dependencies from mono/linker\" (#11396)"},{"Id":"605478205","IsPullRequest":true,"CreatedAt":"2020-04-23T12:05:48","Actor":"dotnet-maestro[bot]","Number":"11395","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.5.20221.5 to 5.0.0-preview.5.20222.1 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200422.1\r\n- **Date Produced**: 4/22/2020 4:02 PM\r\n- **Commit**: 5cf6eb0f4f96c4397fb6088b2426f0436abcde6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.5.20221.5 to 5.0.0-preview.5.20222.1\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.5.20221.5 to 5.0.0-preview.5.20222.1\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11395","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#11395)"},{"Id":"605386583","IsPullRequest":true,"CreatedAt":"2020-04-23T11:57:26","Actor":"dotnet-maestro[bot]","Number":"11391","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200423.1\r\n- **Date Produced**: 4/23/2020 9:05 AM\r\n- **Commit**: dfc4b3a601169e4b0c40256a6b4809097f6ed2bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20222.8 to 5.0.0-preview.5.20223.1\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11391","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11391)"},{"Id":"605172812","IsPullRequest":true,"CreatedAt":"2020-04-23T06:22:10","Actor":"dotnet-maestro[bot]","Number":"11389","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.2 to 5.0.0-preview.4.20222.4 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200422.4\r\n- **Date Produced**: 4/23/2020 2:15 AM\r\n- **Commit**: d1cae6c4ce7e938ea4c31ab412ef0e3af4c5e936\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20222.2 to 5.0.0-preview.4.20222.4\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20222.2 to 5.0.0-preview.4.20222.4\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11389","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11389)"},{"Id":"605141218","IsPullRequest":true,"CreatedAt":"2020-04-23T02:03:10","Actor":"dotnet-maestro[bot]","Number":"11388","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c0c2be01-34a3-46d9-31fe-08d7a4f3bc87\r\n- **Build**: 20200422.8\r\n- **Date Produced**: 4/22/2020 10:43 PM\r\n- **Commit**: 6e9bc21f3e43aadfbce537380c9d545a9597838f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat**: from 5.0.0-preview.5.20221.4 to 5.0.0-preview.5.20222.8\r\n\r\n[marker]: <> (End:c0c2be01-34a3-46d9-31fe-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11388","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore\" (#11388)"},{"Id":"605122315","IsPullRequest":true,"CreatedAt":"2020-04-23T01:30:30","Actor":"dotnet-maestro[bot]","Number":"11387","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:db3a6699-65b4-4945-4531-08d7d6786c95)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: db3a6699-65b4-4945-4531-08d7d6786c95\r\n- **Build**: 20200422.3\r\n- **Date Produced**: 4/22/2020 10:24 PM\r\n- **Commit**: 3d7efdc4f35f0d81a9dea64172bc11a04a01447e\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.4.20219.1 to 5.0.0-preview.4.20222.3\r\n\r\n[marker]: <> (End:db3a6699-65b4-4945-4531-08d7d6786c95)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11387","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/aspnetcore-tooling\" (#11387)"},{"Id":"605077826","IsPullRequest":true,"CreatedAt":"2020-04-23T00:07:23","Actor":"dotnet-maestro[bot]","Number":"11386","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20221.6 to 5.0.0-preview.4.20222.2 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200422.2\r\n- **Date Produced**: 4/22/2020 8:54 PM\r\n- **Commit**: 6a11ec1eb327bf1f40eb785deb7b4488fb39d14b\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20221.6 to 5.0.0-preview.4.20222.2\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20221.6 to 5.0.0-preview.4.20222.2\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11386","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11386)"},{"Id":"604921957","IsPullRequest":true,"CreatedAt":"2020-04-22T19:55:33","Actor":"dotnet-maestro[bot]","Number":"11384","RawContent":null,"Title":"[master] Update dependencies from Microsoft/msbuild","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n## From https://github.com/microsoft/msbuild\r\n- **Subscription**: 2152568d-3f9e-49e7-fd5b-08d7a4f28342\r\n- **Build**: 20200422.1\r\n- **Date Produced**: 4/22/2020 5:00 PM\r\n- **Commit**: a42e54cb676a4a0a6ff527a86b4c30f14f133c09\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Build.Localization**: from 16.7.0-preview-20221-01 to 16.7.0-preview-20222-01\r\n  - **Microsoft.Build**: from 16.7.0-preview-20221-01 to 16.7.0-preview-20222-01\r\n\r\n[marker]: <> (End:2152568d-3f9e-49e7-fd5b-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11384","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from Microsoft/msbuild\" (#11384)"},{"Id":"604346376","IsPullRequest":true,"CreatedAt":"2020-04-22T18:07:08","Actor":"dotnet-maestro[bot]","Number":"11378","RawContent":null,"Title":"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.6 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n[marker]: <> (Begin:56f67902-1694-48d9-38ce-08d7d6783975)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: 56f67902-1694-48d9-38ce-08d7d6783975\r\n- **Build**: 20200421.6\r\n- **Date Produced**: 4/22/2020 6:45 AM\r\n- **Commit**: 69b5cf2a2d006d39661d73125e2732cef32a9176\r\n- **Branch**: refs/heads/release/5.0-preview4\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.6\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.4.20218.3 to 5.0.0-preview.4.20221.6\r\n\r\n[marker]: <> (End:56f67902-1694-48d9-38ce-08d7d6783975)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11378","RelatedDescription":"Closed or merged PR \"[release/5.0.1xx-preview4] Update dependencies from dotnet/windowsdesktop\" (#11378)"},{"Id":"604703669","IsPullRequest":true,"CreatedAt":"2020-04-22T16:01:58","Actor":"dotnet-maestro[bot]","Number":"11381","RawContent":null,"Title":"[master] Update dependencies from aspnet/websdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n## From https://github.com/aspnet/websdk\r\n- **Subscription**: 83e6badd-2490-46c6-4ef2-08d7a4f251c6\r\n- **Build**: 20200421.1\r\n- **Date Produced**: 4/21/2020 12:34 PM\r\n- **Commit**: 656bd04c33605537b8983f2f93f2a641d7b84231\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Web**: from 5.0.100-preview.5.20220.2 to 5.0.100-preview.5.20221.1\r\n\r\n[marker]: <> (End:83e6badd-2490-46c6-4ef2-08d7a4f251c6)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11381","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/websdk\" (#11381)"},{"Id":"604703015","IsPullRequest":true,"CreatedAt":"2020-04-22T14:55:22","Actor":"dotnet-maestro[bot]","Number":"11380","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200421.15\r\n- **Date Produced**: 4/22/2020 7:13 AM\r\n- **Commit**: ec9d33daf4f1922b2f36f548752ac4539f370c91\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **Microsoft.NET.HostModel**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **Microsoft.Extensions.DependencyModel**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **Microsoft.NETCore.DotNetHostResolver**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **System.Text.Encoding.CodePages**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20220.19 to 5.0.0-preview.5.20221.15\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11380","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#11380)"},{"Id":"604704004","IsPullRequest":true,"CreatedAt":"2020-04-22T14:46:56","Actor":"dotnet-maestro[bot]","Number":"11382","RawContent":null,"Title":"[master] Update dependencies from dotnet/aspnetcore-tooling","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n## From https://github.com/dotnet/aspnetcore-tooling\r\n- **Subscription**: ed1c2bc3-ada8-4f10-fd59-08d7a4f28342\r\n- **Build**: 20200421.2\r\n- **Date Produced**: 4/21/2020 6:07 PM\r\n- **Commit**: 7fa56fb1071c014bad8e471916a0143acb33fd6a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.Razor**: from 5.0.0-preview.5.20220.6 to 5.0.0-preview.5.20221.2\r\n\r\n[marker]: <> (End:ed1c2bc3-ada8-4f10-fd59-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11382","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/aspnetcore-tooling\" (#11382)"},{"Id":"604704339","IsPullRequest":true,"CreatedAt":"2020-04-22T14:17:12","Actor":"dotnet-maestro[bot]","Number":"11383","RawContent":null,"Title":"[master] Update dependencies from dotnet/windowsdesktop","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.5.20221.1 to 5.0.0-preview.5.20221.5 (parent: Microsoft.WindowsDesktop.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n## From https://github.com/dotnet/windowsdesktop\r\n- **Subscription**: e20b3dc7-0bdd-4677-3200-08d7a4f3bc87\r\n- **Build**: 20200421.5\r\n- **Date Produced**: 4/22/2020 6:51 AM\r\n- **Commit**: 2f63f21e54b0c88ebad41188d6f0a216917d0a44\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.WindowsDesktop.App**: from 5.0.0-preview.5.20221.1 to 5.0.0-preview.5.20221.5\r\n  - **Microsoft.NET.Sdk.WindowsDesktop**: from 5.0.0-preview.5.20221.1 to 5.0.0-preview.5.20221.5\r\n\r\n[marker]: <> (End:e20b3dc7-0bdd-4677-3200-08d7a4f3bc87)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/11383","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/windowsdesktop\" (#11383)"},{"Id":"604660003","IsPullRequest":true,"CreatedAt":"2020-04-22T10:54:19","Actor":"ViktorHofer","Number":"11379","RawContent":null,"Title":"Change VSTest invocation verbosity to minimal","State":"open","Body":"Fixes https://github.com/microsoft/vstest/issues/2413\r\n\r\nThis was set to quiet in 2016 probably because the build logged more details. The current output is identical between quiet and minimal. Setting this to quiet to align with the other dotnet verbs and stop swallowing outputs when sequencing on BeforeTargets or AfterTargets VSTest.\r\n\r\nRemoving the verbosity switch as minimal is already passed in: `-verbosity:m -verbosity:quiet`","Url":"https://github.com/dotnet/sdk/pull/11379","RelatedDescription":"Open PR \"Change VSTest invocation verbosity to minimal\" (#11379)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"583170428","IsPullRequest":false,"CreatedAt":"2020-03-17T17:16:09","Actor":"TaraOverfield","Number":"152","RawContent":null,"Title":"March 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on March 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework March 2020 Update for Windows 10 1607 (Anniversary Update) and Windows Server 2016](https://devblogs.microsoft.com/dotnet/net-framework-march-2020-update-for-windows-10-1607-anniversary-update-and-windows-server-2016/)\r\n\r\n## .NET Core\r\n* [March 2020 Updates – 2.1.17 and 3.1.3](https://devblogs.microsoft.com/dotnet/net-core-march-2020/)\r\n\r\n* .NET Core 3.1.3 and .NET Core SDK 3.1.103( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.3/3.1.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n \r\n* .NET Core 2.1.17 and .NET Core SDK 2.1.805 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.17/2.1.17.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/152","RelatedDescription":"Open issue \"March 2020 .NET Updates\" (#152)"},{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup/)\r\n\r\n* [.NET Framework February 2020 Preview of Quality Rollup for Windows 10 1909, Windows 10 1903, Windows Server, version 1909 and Windows Server, version 1903](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-preview-of-quality-rollup-for-windows-10-1909-windows-10-1903-windows-server-version-1909-and-windows-server-version-1903/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.2/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1253462775055044608","CreatedAt":"2020-04-23T23:16:28+00:00","UserScreenname":"dotnet","Text":"Announcing .NET 5.0 Preview 3 https://t.co/NyuazUxjcY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":225,"FavoriteCount":106,"RawContent":null},{"Id":"1253421897259180038","CreatedAt":"2020-04-23T20:34:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @sywhang95 joins to talk about the diagnostics client in #dotNET Core and how by usin… https://t.co/DFlyYMiJaQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"1253368004743585797","CreatedAt":"2020-04-23T16:59:53+00:00","UserScreenname":"dotnet","Text":"We're now live doing API reviews. https://t.co/lXY8t8X5z6","Source":"<a href=\"https://restream.io/\" rel=\"nofollow\">Restream.io</a>","RetweetCount":19,"FavoriteCount":3,"RawContent":null},{"Id":"1253344629220675585","CreatedAt":"2020-04-23T15:27:00+00:00","UserScreenname":"dotnet","Text":"Get started with .NET for Apache Spark\n\nhttps://t.co/dabZsX1Iow #dotnet #spark #bigdata","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":15,"RawContent":null},{"Id":"1253342370789126151","CreatedAt":"2020-04-23T15:18:01+00:00","UserScreenname":"dotnet","Text":"Join in on the latest .NET community stand-up as @cl_beyer, @gotheap, and @jongalloway, discuss the latest… https://t.co/zqkHHYGjBf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":16,"FavoriteCount":9,"RawContent":null},{"Id":"1253061015169839105","CreatedAt":"2020-04-22T20:40:01+00:00","UserScreenname":"dotnet","Text":"Building reliable async software is difficult. In this webinar and live Q&amp;A, software engineer Chris Lovett introdu… https://t.co/WShL3zGmSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":8,"RawContent":null},{"Id":"1253023010044424192","CreatedAt":"2020-04-22T18:09:00+00:00","UserScreenname":"dotnet","Text":"Around a year ago @cesardelatorre came on #OnDotNet to discuss\n\nMicroservice Architecture with… https://t.co/v8MWVkzLWf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1253011188075683841","CreatedAt":"2020-04-22T17:22:01+00:00","UserScreenname":"dotnet","Text":"Drop in on the #ASPNET Community Standup from April 14th where Brady Gaster and David Pine discuss SignalR. Tune in… https://t.co/IiNz32u4Qw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":22,"FavoriteCount":7,"RawContent":null},{"Id":"1252996837428072448","CreatedAt":"2020-04-22T16:25:00+00:00","UserScreenname":"dotnet","Text":"An Introduction to the DataFrame type for .NET to make data exploration easy!\n\nhttps://t.co/t0ofVqOWWk #dotnet #Jupyter","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":96,"FavoriteCount":41,"RawContent":null},{"Id":"1252976711530164225","CreatedAt":"2020-04-22T15:05:01+00:00","UserScreenname":"dotnet","Text":"If you missed the live stream of the #dotNETConf Focus on #Xamarin event, don’t worry. Here is a session recap and… https://t.co/gBET4INtyq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"1252695861781504000","CreatedAt":"2020-04-21T20:29:02+00:00","UserScreenname":"dotnet","Text":"What's up with CSLA?\n\n#dotNETRocks talks to @RockyLhotka about his ubiquitous framework for managing UI w/ the powe… https://t.co/IZuP5wrnOZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"1252664655685787648","CreatedAt":"2020-04-21T18:25:01+00:00","UserScreenname":"dotnet","Text":"Need a little primer on diagnosing memory performance issues? Here you go: https://t.co/Z0WgW6Pj9j https://t.co/gyQ9aCaUVY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":24,"FavoriteCount":11,"RawContent":null},{"Id":"1252615582689697793","CreatedAt":"2020-04-21T15:10:02+00:00","UserScreenname":"dotnet","Text":"Bringing accessibility into your applications isn't just easy, it's essential. In this #dotNETConf session replay,… https://t.co/c2x8vZbW22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-04-24T05:30:33.2360522Z","RunDurationInMilliseconds":12579}