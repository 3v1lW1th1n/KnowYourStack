{"Data":{"GitHub":{"Issues":[{"Id":"432370007","IsPullRequest":true,"CreatedAt":"2019-04-12T03:21:50","Actor":"codemzs","Number":"3309","RawContent":null,"Title":"Standalone app to run all samples to catch run time exceptions.","State":"open","Body":"fixes #3308\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3309","RelatedDescription":"Open PR \"Standalone app to run all samples to catch run time exceptions.\" (#3309)"},{"Id":"432369846","IsPullRequest":false,"CreatedAt":"2019-04-12T03:21:09","Actor":"codemzs","Number":"3308","RawContent":null,"Title":"Standalone app to run all samples to catch run time exceptions","State":"open","Body":"We need an app that run as a build step to verify samples not only compile but also execute with no exceptions. We have recently seen as evident by #3187 that samples are being checked-in that when run by a user will not produce any meaningful output but instead cause runtime exception and leave a very bad user experience. ","Url":"https://github.com/dotnet/machinelearning/issues/3308","RelatedDescription":"Open issue \"Standalone app to run all samples to catch run time exceptions\" (#3308)"},{"Id":"432369035","IsPullRequest":true,"CreatedAt":"2019-04-12T03:17:18","Actor":"codemzs","Number":"3307","RawContent":null,"Title":"Dispose images after use in image transform samples","State":"open","Body":"fixes #3306","Url":"https://github.com/dotnet/machinelearning/pull/3307","RelatedDescription":"Open PR \"Dispose images after use in image transform samples\" (#3307)"},{"Id":"432368660","IsPullRequest":false,"CreatedAt":"2019-04-12T03:15:42","Actor":"codemzs","Number":"3306","RawContent":null,"Title":"Image samples don't dispose bitmap object after use causes exceptions.","State":"open","Body":"When running samples all at once there is an exception between image samples because image transforms open and return image as a Bitmap object, however our samples don't dispose the bitmap object due to this when the next sample opens the same image it gets an exception saying the file is in use by the same or another process. Even though it is a new pipeline, we see this exception because garbage collector has not yet disposed the Bitmap object. The correct way to fix this problem is to dispose all bitmap objects after a sample has executed, this will not only solve the issue when running all samples at once in the same process but will also educate the user on disposing the bitmaps after use and make our samples better.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3306","RelatedDescription":"Open issue \"Image samples don't dispose bitmap object after use causes exceptions.\" (#3306)"},{"Id":"432333390","IsPullRequest":true,"CreatedAt":"2019-04-12T00:41:59","Actor":"codemzs","Number":"3305","RawContent":null,"Title":"Fix runtime exception in MapKeyToVectorMultiColumn sample","State":"closed","Body":"fixes #3304\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3305","RelatedDescription":"Closed or merged PR \"Fix runtime exception in MapKeyToVectorMultiColumn sample\" (#3305)"},{"Id":"432333292","IsPullRequest":false,"CreatedAt":"2019-04-12T00:41:59","Actor":"codemzs","Number":"3304","RawContent":null,"Title":"Runtime exception in MapKeyToVectorMultiColumn sample","State":"closed","Body":"Due to cast exception between float and uint. The scheme has column type float but the output class for enumerating the data has the type uint.","Url":"https://github.com/dotnet/machinelearning/issues/3304","RelatedDescription":"Closed issue \"Runtime exception in MapKeyToVectorMultiColumn sample\" (#3304)"},{"Id":"431758292","IsPullRequest":true,"CreatedAt":"2019-04-12T00:01:44","Actor":"wschin","Number":"3282","RawContent":null,"Title":"Add a sample for one class matrix factorization","State":"closed","Body":"Fix #1769.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3282","RelatedDescription":"Closed or merged PR \"Add a sample for one class matrix factorization\" (#3282)"},{"Id":"432321036","IsPullRequest":true,"CreatedAt":"2019-04-11T23:45:10","Actor":"codemzs","Number":"3303","RawContent":null,"Title":"Cherry-pick bug fixes and samples from master to release/1.0","State":"open","Body":"Cherry pick for the below PRs from master branch, most of these PRs are related to samples and none related to API except for #3172 multi-column mapping API for normalizer estimator and #3291 that makes Prior trainer accept only Boolean type label column to make it consistent with every other binary trainer. I also did speak with @shauheen prior to cherry-picking and he agreed ideally these sample fixes should be in the release.\r\n\r\n#3172 \r\n#3215 \r\n#3212 \r\n#3230 \r\n#3237 \r\n#3257 \r\n#3259 \r\n#3249 \r\n#3267 \r\n#3278 \r\n#3213 \r\n#3285 \r\n#3287 \r\n#3291 \r\n#3295 \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3303","RelatedDescription":"Open PR \"Cherry-pick bug fixes and samples from master to release/1.0\" (#3303)"},{"Id":"432312682","IsPullRequest":true,"CreatedAt":"2019-04-11T23:06:15","Actor":"TomFinley","Number":"3302","RawContent":null,"Title":"Simple IDataView implementation sample.","State":"open","Body":"Fixes #3301.","Url":"https://github.com/dotnet/machinelearning/pull/3302","RelatedDescription":"Open PR \"Simple IDataView implementation sample.\" (#3302)"},{"Id":"432312277","IsPullRequest":false,"CreatedAt":"2019-04-11T23:04:32","Actor":"TomFinley","Number":"3301","RawContent":null,"Title":"Simple IDataView Sample","State":"open","Body":"Though we have many methods or samples to create data views from existing structures, like files, databases, enumerables, lists, and so on, we can't possibly handle everything, so a sample as to how to create a data view may be desirable.\r\n\r\nIn this first simple sample, my goal would be to show a fairly minimal `IDataView` implementation but from absolute scratch, one that is very simple without being, I hope, simplistic. I might however stick to scalar inputs for that first simple example, and definitely avoid anything having to do with enabling shuffling or parallel cursor evaluation.\r\n\r\nRelated to #1209, but given that this does not describe a sample for anything *directly* related to `MLContext`, it was thought best to have a separate issue for it.","Url":"https://github.com/dotnet/machinelearning/issues/3301","RelatedDescription":"Open issue \"Simple IDataView Sample\" (#3301)"},{"Id":"432178151","IsPullRequest":true,"CreatedAt":"2019-04-11T22:53:12","Actor":"codemzs","Number":"3295","RawContent":null,"Title":"Fix runtime exception in prior trainer sample and update the comments.","State":"closed","Body":"fixes #3294","Url":"https://github.com/dotnet/machinelearning/pull/3295","RelatedDescription":"Closed or merged PR \"Fix runtime exception in prior trainer sample and update the comments.\" (#3295)"},{"Id":"432177694","IsPullRequest":false,"CreatedAt":"2019-04-11T22:53:12","Actor":"codemzs","Number":"3294","RawContent":null,"Title":"Prior Trainer sample throws an exception and the output comments do not match the actual output","State":"closed","Body":"Prior trainer used to take label type of float but this was changed to take label type of boolean to make it consistent with other binary trainers. Update the sample to change the schema of the data loader to accept label type of boolean and also update the comments to be consistent with the actual output from ML.NET","Url":"https://github.com/dotnet/machinelearning/issues/3294","RelatedDescription":"Closed issue \"Prior Trainer sample throws an exception and the output comments do not match the actual output\" (#3294)"},{"Id":"432304276","IsPullRequest":true,"CreatedAt":"2019-04-11T22:46:39","Actor":"zeahmed","Number":"3300","RawContent":null,"Title":"Cherry pick sample update (Concate, Select, Drop, Copy)","State":"open","Body":"This PR cherry picks the following commits from the master related to Concatenate, Select, Drop and Copy transforms.\r\n\r\n#3262\r\n#3268\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3300","RelatedDescription":"Open PR \"Cherry pick sample update (Concate, Select, Drop, Copy)\" (#3300)"},{"Id":"432228197","IsPullRequest":true,"CreatedAt":"2019-04-11T22:03:36","Actor":"wschin","Number":"3297","RawContent":null,"Title":"Try buid LIBMF with OpenMP again","State":"closed","Body":"Add path to `omp.h` and incorporate a minor fix from LIBMF.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3297","RelatedDescription":"Closed or merged PR \"Try buid LIBMF with OpenMP again\" (#3297)"},{"Id":"432239512","IsPullRequest":true,"CreatedAt":"2019-04-11T21:18:51","Actor":"wschin","Number":"3298","RawContent":null,"Title":"Disable omp and sse in MF","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3298","RelatedDescription":"Closed or merged PR \"Disable omp and sse in MF\" (#3298)"},{"Id":"432250545","IsPullRequest":false,"CreatedAt":"2019-04-11T21:01:13","Actor":"bsoman3","Number":"3299","RawContent":null,"Title":"Probability is missing from the prediction Output schema of BinaryClassification.Trainers.AveragedPerceptron","State":"open","Body":"### Issue\r\nUsing the Averaged Perceptron Binary Classifier in the Pipeline:\r\n~~~~\r\nvar pipeline =\r\n//Other things in the pipeline\r\n.Append(mlContext.BinaryClassification.Trainers.AveragedPerceptron(learningRate: lr, numIterations: 5));\r\n\r\n//Fit Model steps\r\n//Save Model steps\r\n//Load Model steps\r\n\r\nvar predictions = loadedModel.Transform(data);\r\nvar metrics = mlContextTest.BinaryClassification.Evaluate(predictions);\r\n~~~~\r\n\r\nLeads to the following error.\r\n~~~~\r\n'Probability column 'Probability' not found\r\nParameter name: schema'\r\n~~~~\r\n### What Happened \r\nLooking at the outputSchema of the predictions IDataView, the probability column is absent.\r\n\r\n### Expected Behavior\r\nThe Probability column should be available in the predictions IDataView based on reply by @zeahmed here- https://github.com/dotnet/machinelearning/issues/376#issuecomment-399282699\r\n\r\nLooking at other binary classifiers like fast tree, that column is present in their output schema.\r\n\r\n**System information**\r\n* Product: dotnet-ml-api\r\n* GitHub Login: @bsoman3\r\n* Microsoft Alias: bhsoman\r\n\r\n- **OS version/distro**:Windows 10 Enterprise\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1","Url":"https://github.com/dotnet/machinelearning/issues/3299","RelatedDescription":"Open issue \"Probability is missing from the prediction Output schema of BinaryClassification.Trainers.AveragedPerceptron\" (#3299)"},{"Id":"432208736","IsPullRequest":true,"CreatedAt":"2019-04-11T19:32:20","Actor":"TomFinley","Number":"3296","RawContent":null,"Title":"Update VectorDataViewType documentation.","State":"open","Body":"Fix of PR #3288. Shauheen had a couple comments that I had addressed and committed locally, but did not get pushed successfully to the branch of that PR... sorry about that @shauheen!","Url":"https://github.com/dotnet/machinelearning/pull/3296","RelatedDescription":"Open PR \"Update VectorDataViewType documentation.\" (#3296)"},{"Id":"432173342","IsPullRequest":true,"CreatedAt":"2019-04-11T18:28:36","Actor":"rogancarr","Number":"3293","RawContent":null,"Title":"Cherry-Pick PFI and FCC Samples","State":"open","Body":"This PR cherry-picks PFI and FCC Samples into the release branch.","Url":"https://github.com/dotnet/machinelearning/pull/3293","RelatedDescription":"Open PR \"Cherry-Pick PFI and FCC Samples\" (#3293)"},{"Id":"432148084","IsPullRequest":true,"CreatedAt":"2019-04-11T18:24:54","Actor":"codemzs","Number":"3291","RawContent":null,"Title":"Prior trainer should accept label column type of boolean ONLY.","State":"closed","Body":"fixes #3119","Url":"https://github.com/dotnet/machinelearning/pull/3291","RelatedDescription":"Closed or merged PR \"Prior trainer should accept label column type of boolean ONLY.\" (#3291)"},{"Id":"432170848","IsPullRequest":true,"CreatedAt":"2019-04-11T18:22:10","Actor":"wschin","Number":"3292","RawContent":null,"Title":"Add MF fixes to release branch","State":"open","Body":"Cherry-pick the following PRs for fixing MF bugs.\r\n\r\n#3297\r\n#3265\r\n#3227\r\n#3210\r\n#3170\r\n\r\nThey are all bug fixes or docs. No API change.","Url":"https://github.com/dotnet/machinelearning/pull/3292","RelatedDescription":"Open PR \"Add MF fixes to release branch\" (#3292)"},{"Id":"431833771","IsPullRequest":true,"CreatedAt":"2019-04-11T17:53:04","Actor":"TomFinley","Number":"3288","RawContent":null,"Title":"Update IDataView principles, type system documentation.","State":"closed","Body":"Towards #3095.","Url":"https://github.com/dotnet/machinelearning/pull/3288","RelatedDescription":"Closed or merged PR \"Update IDataView principles, type system documentation.\" (#3288)"},{"Id":"431777392","IsPullRequest":false,"CreatedAt":"2019-04-11T17:01:36","Actor":"artidoro","Number":"3283","RawContent":null,"Title":"Prior Trainer does not accept bool label column","State":"closed","Body":"The template for our binary classification samples uses a bool label column. This template is used by a number of our binary classification trainers.\r\n\r\n`PrriorTrainer` does not however accept a boolean label column. It only accepts a float label column. Here is the code that checks that the label column is of type float:\r\nhttps://github.com/dotnet/machinelearning/blob/55d911dc5f50bf45bfffe50bf9f0ee3ffb14c369/src/Microsoft.ML.StandardTrainers/Standard/Simple/SimpleTrainers.cs#L233\r\n\r\nIn order to be consistent with the rest of the binary classification trainers, we should allow the label column to be of boolean type for `PriorTrainer`.","Url":"https://github.com/dotnet/machinelearning/issues/3283","RelatedDescription":"Closed issue \"Prior Trainer does not accept bool label column\" (#3283)"},{"Id":"431933525","IsPullRequest":true,"CreatedAt":"2019-04-11T16:58:59","Actor":"tauheedul","Number":"3289","RawContent":null,"Title":"Update Documents Index README.md","State":"closed","Body":"Added reference to ML Cookbook, Roadmap, API Reference Doc, Samples and related Infer.NET and NimbusML Repo Docs\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3289","RelatedDescription":"Closed or merged PR \"Update Documents Index README.md\" (#3289)"},{"Id":"431789619","IsPullRequest":true,"CreatedAt":"2019-04-11T15:17:16","Actor":"codemzs","Number":"3287","RawContent":null,"Title":"Fix runtime exception in MapKeyToVector sample.","State":"closed","Body":"fixes #3286","Url":"https://github.com/dotnet/machinelearning/pull/3287","RelatedDescription":"Closed or merged PR \"Fix runtime exception in MapKeyToVector sample.\" (#3287)"},{"Id":"431789518","IsPullRequest":false,"CreatedAt":"2019-04-11T15:17:16","Actor":"codemzs","Number":"3286","RawContent":null,"Title":"MapKeyToValue sample throws exception","State":"closed","Body":"Seems like the issue is cast exception between vector of float to vector of uint.","Url":"https://github.com/dotnet/machinelearning/issues/3286","RelatedDescription":"Closed issue \"MapKeyToValue sample throws exception\" (#3286)"},{"Id":"432080719","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:00","Actor":"PeterPann23","Number":"3290","RawContent":null,"Title":"Operation is not valid due to the current state of the object","State":"open","Body":"### System information\r\n\r\n- **Windows 10 64 bit**:\r\n- **.NET Core 3.0 preview, \r\n- Microsoft.ML.LightGbm (1.0.0-preview)**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nUsed the LightGbm sample \r\n- **What happened?**\r\nGot 2 strange errors, \r\n1: one the feature vector is off by 1, hardcoding the wrong number will make it work\r\n2: can't generate a single Prediction without the api throwing exception \"Operation is not valid due to the current state of the object.\"\r\n- **What did you expect?**\r\nI'd expect this to work, the faulty vector size looks like it takes the column index into account and as for the operation not valid exception... not sure as what that is especially after it generated native predictions\r\n\r\n### Source code / logs\r\n\r\n\r\nExtract, full project with test data Attached\r\n```\r\n\r\n\r\n            // Create a pipeline. \r\n            //  - Convert the string labels into key types.\r\n            //  - Apply LightGbm multiclass trainer.\r\n            var pipeline = mlContext.Transforms.Conversion.MapValueToKey(\"LabelIndex\", \"Label\",maximumNumberOfKeys:3,keyOrdinality: Transforms.ValueToKeyMappingEstimator.KeyOrdinality.ByValue)\r\n                        .Append(mlContext.MulticlassClassification.Trainers.LightGbm(labelColumnName: \"LabelIndex\"))\r\n                        .Append(mlContext.Transforms.Conversion.MapValueToKey(\"PredictedLabelIndex\", \"PredictedLabel\"))\r\n                        .Append(mlContext.Transforms.CopyColumns(\"Scores\", \"Score\"));\r\n\r\n            // Split the static-typed data into training and test sets. Only training set is used in fitting\r\n            // the created pipeline. Metrics are computed on the test.\r\n            var split = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.5);\r\n\r\n            // Train the model.\r\n            var model = pipeline.Fit(split.TrainSet);\r\n```\r\n\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Operation is not valid due to the current state of the object.\r\n  Source=Microsoft.ML.StandardTrainers\r\n  StackTrace:\r\n   at Microsoft.ML.Trainers.OneVersusAllModelParameters.ImplDist.<>c__DisplayClass11_0.<GetMapper>b__0(VBuffer`1& src, VBuffer`1& dst)\r\n   at Microsoft.ML.Data.PredictedLabelScorerBase.EnsureCachedPosition[TScore](Int64& cachedPosition, TScore& score, DataViewRow boundRow, ValueGetter`1 scoreGetter)\r\n   at Microsoft.ML.Data.MulticlassClassificationScorer.<>c__DisplayClass16_0.<GetPredictedLabelGetter>b__0(UInt32& dst)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingTransformer.BoundTermMap.Base`1.<>c__DisplayClass3_0.<GetMappingGetter>b__0(UInt32& dst)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass10_0`1.<CreateDirectSetter>b__0(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n   at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n   at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n   at Microsoft.ML.PredictionEngineBase`2.Predict(TSrc example)\r\n   at Microsoft.ML.Samples.LightGbm.Example() in D:\\Deepbook\\Microsoft.ML.Samples\\LightGbm.cs:line 148\r\n   at Microsoft.ML.Samples.Program.Main(String[] args) in D:\\Deepbook\\Microsoft.ML.Samples\\Program.cs:line 9\r\n```\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting. (added the trained model that goes with the data)\r\n[Microsoft.ML.LightGbm.Samples.zip](https://github.com/dotnet/machinelearning/files/3069341/Microsoft.ML.LightGbm.Samples.zip)\r\n[Model.zip](https://github.com/dotnet/machinelearning/files/3070530/Model.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3290","RelatedDescription":"Open issue \"Operation is not valid due to the current state of the object\" (#3290)"},{"Id":"431781531","IsPullRequest":true,"CreatedAt":"2019-04-11T02:03:16","Actor":"codemzs","Number":"3285","RawContent":null,"Title":"Update tt files to have Microsoft.ML prefix for SampleUtils.","State":"closed","Body":"fixes #3284","Url":"https://github.com/dotnet/machinelearning/pull/3285","RelatedDescription":"Closed or merged PR \"Update tt files to have Microsoft.ML prefix for SampleUtils.\" (#3285)"},{"Id":"431781132","IsPullRequest":false,"CreatedAt":"2019-04-11T02:03:16","Actor":"codemzs","Number":"3284","RawContent":null,"Title":"TT file contains reference to SampleUtils without Microsoft.ML prefix","State":"closed","Body":"Upon running custom tool this will cause build failures.","Url":"https://github.com/dotnet/machinelearning/issues/3284","RelatedDescription":"Closed issue \"TT file contains reference to SampleUtils without Microsoft.ML prefix\" (#3284)"},{"Id":"431754394","IsPullRequest":true,"CreatedAt":"2019-04-10T22:55:01","Actor":"rogancarr","Number":"3281","RawContent":null,"Title":"Extend Gam Samples","State":"open","Body":"This PR extends the current GAM samples for regression and adds them for Binary Classification.\r\n\r\nFixes #3280 ","Url":"https://github.com/dotnet/machinelearning/pull/3281","RelatedDescription":"Open PR \"Extend Gam Samples\" (#3281)"},{"Id":"431754211","IsPullRequest":false,"CreatedAt":"2019-04-10T22:54:09","Actor":"rogancarr","Number":"3280","RawContent":null,"Title":"Samples for GAM are needed","State":"open","Body":"The current samples for GAM don't go into a lot of detail and binary classification samples are missing.","Url":"https://github.com/dotnet/machinelearning/issues/3280","RelatedDescription":"Open issue \"Samples for GAM are needed\" (#3280)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-12T05:30:35.2753971Z","RunDurationInMilliseconds":717}