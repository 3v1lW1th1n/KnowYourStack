{"Data":{"Blog":{"FeedItems":[{"Title":"Embracing nullable reference types","PublishedOn":"2019-11-27T20:55:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Probably the most impactful feature of C# 8.0 is Nullable Reference Types (NRTs). It lets you make the flow of nulls explicit in your code, and warns you when you don&#8217;t act according to...","Href":"https://devblogs.microsoft.com/dotnet/embracing-nullable-reference-types/","RawContent":null},{"Title":".NET Framework November 2019 Preview of Quality Rollup","PublishedOn":"2019-11-20T05:28:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the November 2019 Preview of Quality Rollup\nQuality and Reliability\nThis release contains the following quality and reliability improvements for .NET Framework for Windows 8.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core November 2019 Updates – 2.1.14, 2.2.8, and 3.0.1","PublishedOn":"2019-11-19T20:11:16+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November 2019 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-november-2019/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 3","PublishedOn":"2019-11-14T17:16:36+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 3. .NET Core 3.1 is a small and short release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0.. It...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/","RawContent":null},{"Title":".NET Framework November 13, 2019, Update for .NET Framework 4.8","PublishedOn":"2019-11-14T06:16:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we released an update for .NET Framework 4.8 to Microsoft Update Catalog.\nQuality and Reliability\nThis release contains the following reliability improvement.\nCLR1\nAddresses an issue where some...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/","RawContent":null},{"Title":"ML.NET Model Builder Updates","PublishedOn":"2019-11-12T20:51:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is a cross-platform, machine learning framework for .NET developers, and Model Builder is the UI tooling in Visual Studio that uses Automated Machine Learning (AutoML) to easily allow you to...","Href":"https://devblogs.microsoft.com/dotnet/model-builder-updates-mlnet/","RawContent":null},{"Title":".NET Framework Repair Tool","PublishedOn":"2019-11-12T00:51:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are announcing an update to .NET Framework Repair tool.\nIn case you are not familiar with previous releases of this tool, here is a bit of background. Occasionally, some customers will run...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-repair-tool/","RawContent":null},{"Title":"Building Modern Cloud Applications using Pulumi and .NET Core","PublishedOn":"2019-11-11T15:00:24+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"This is a guest post from the Pulumi team. Pulumi is an open source infrastructure as code tool that helps developers and infrastructure teams work better together to create, deploy, and manage cloud...","Href":"https://devblogs.microsoft.com/dotnet/building-modern-cloud-applications-using-pulumi-and-net-core/","RawContent":null},{"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","PublishedOn":"2019-11-06T17:01:16+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Coinciding with the Microsoft Ignite 2019 conference, we are thrilled to announce the GA release of ML.NET 1.4 and updates to Model Builder in Visual Studio, with exciting new machine learning...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/","RawContent":null},{"Title":".NET Core with Jupyter Notebooks –  Available today | Preview 1","PublishedOn":"2019-11-06T17:00:21+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"When you think about Jupyter Notebooks, you probably think about writing your code in Python, R, Julia, or Scala and not .NET. Today we are excited to announce you can write .NET code in Jupyter...","Href":"https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10879854793","Type":"IssuesEvent","CreatedAt":"2019-11-17T05:53:48","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Opened issue \"Typos in CLA bot profile\" (#155) at dotnet/foundation","RelatedBody":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)"},{"Id":"10878192098","Type":"PullRequestEvent","CreatedAt":"2019-11-16T15:59:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Opened pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"10864162405","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:22:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Opened pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"10863953091","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:00:24","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Opened pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"10823146740","Type":"PullRequestEvent","CreatedAt":"2019-11-08T23:32:03","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Merged pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68"},{"Id":"10822052136","Type":"PullRequestEvent","CreatedAt":"2019-11-08T20:13:07","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Opened pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":""},{"Id":"10806560653","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:43:05","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Merged pull request \"(GH-111) Update Source Link location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"10806557022","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:42:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Merged pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10806555226","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:41:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Merged pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10873564628","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:51:28","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`."},{"Id":"10873546016","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:49:05","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`."},{"Id":"10864634140","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:15:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 3\" (#139) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"},{"Id":"10862597044","Type":"IssuesEvent","CreatedAt":"2019-11-14T13:37:29","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Opened issue \"November 2019 .NET Updates\" (#138) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10856924757","Type":"IssuesEvent","CreatedAt":"2019-11-13T21:41:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Opened issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137) at dotnet/announcements","RelatedBody":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Framework Samples\r\n\r\n"},{"Id":"10847180825","Type":"IssuesEvent","CreatedAt":"2019-11-12T22:05:52","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Opened issue \".NET Core Docker images support for Windows Server, version 1909\" (#136) at dotnet/announcements","RelatedBody":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n"},{"Id":"10822538366","Type":"IssuesEvent","CreatedAt":"2019-11-08T21:33:13","Actor":"CESARDELATORRE","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Opened issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135) at dotnet/announcements","RelatedBody":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n**- New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n**- Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n**- Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n**- PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n**- ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n"},{"Id":"10780907118","Type":"IssuesEvent","CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 2\" (#134) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/XXXX has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/XXXX, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10965450024","Type":"IssuesEvent","CreatedAt":"2019-11-28T02:57:13","Actor":"mikernet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27953","RelatedDescription":"Closed issue \"RuntimeBinderException when dynamically casting private enum type\" (#27953) at dotnet/coreclr","RelatedBody":"It took me way too long to figure out what the heck was going on here and isolate the problem because the code where this is happening is fairly complex and anytime I would try to simplify it to write a simple repro it would infuriatingly start working again...but I finally got it, and here it is:\r\n\r\n```c#\r\nvoid Main()\r\n{\t\r\n        // Works fine\r\n\tSomeClass.Method1().Dump(); \r\n\r\n        // RuntimeBinderException: Cannot convert type 'System.Enum' to 'decimal'\r\n\tSomeClass.Method2().Dump();\r\n}\r\n\r\npublic static class SomeClass {\r\n\tpublic static bool Method1()\r\n\t{\r\n\t\treturn (decimal)(dynamic)Test.A == (decimal)(dynamic)Test.A;\r\n\t}\r\n\t\r\n\tpublic static bool Method2()\r\n\t{\r\n\t\treturn CompareDecimalValues(Test.A, Test.A);\r\n\t}\r\n\r\n\tprivate enum Test\r\n\t{\r\n\t\tA = -100,\r\n\t}\r\n}\r\n\r\npublic static bool CompareDecimalValues<T>(T value1, T value2) where T : unmanaged, Enum\r\n{\r\n\treturn (decimal)(dynamic)value1 == (decimal)(dynamic)value2;\r\n}\r\n```\r\n\r\nIf `CompareDecimalValues()` is inside the same assembly then changing the enum to internal or public makes `Method2` work. If `CompareDecimalValues` is outside the assembly then the enum must be changed to public for it to work. \r\n\r\nBasically, it seems like the method doing the dynamic cast must have visibility of the enum type otherwise it fails.\r\n\r\n"},{"Id":"10964450559","Type":"PullRequestEvent","CreatedAt":"2019-11-27T22:39:15","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27954","RelatedDescription":"Opened pull request \"Disable formatting jobs in release/3.1\" (#27954) at dotnet/coreclr","RelatedBody":"/cc @hoyosjs "},{"Id":"10964398319","Type":"IssuesEvent","CreatedAt":"2019-11-27T22:28:05","Actor":"jeffschwMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21883","RelatedDescription":"Closed issue \"Small bit of unreachable IL in CLRtoWinRT stub\" (#21883) at dotnet/coreclr","RelatedBody":"Not sure if it matters all that much, but `IL_STUB_CLRtoWinRT` contains a small bit of unreachable IL. Noticed this while modifying the jit to track which methods are only partially imported.\r\n```\r\nIL_0022  25                dup         \r\nIL_0023  16                ldc.i4.0    \r\nIL_0024  3c 0d 00 00 00    bge          13 (IL_0036)\r\nIL_0029  28 03 00 00 06    call         0x6000003\r\nIL_002e  02                ldarg.0     \r\nIL_002f  28 04 00 00 06    call         0x6000004\r\nIL_0034  7a                throw       \r\nIL_0035  16                ldc.i4.0       // unreachable\r\nIL_0036  26                pop         \r\n```\r\nperhaps the emitted IL used to be different?\r\n\r\nhttps://github.com/dotnet/coreclr/blob/bd5ea1c46ca21631194610f88f2ba420e8982d5b/src/vm/dllimport.cpp#L989-L992"},{"Id":"10963948699","Type":"IssuesEvent","CreatedAt":"2019-11-27T21:04:35","Actor":"mikernet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27953","RelatedDescription":"Opened issue \"RuntimeBinderException when dynamically casting nested private enum type\" (#27953) at dotnet/coreclr","RelatedBody":"It took me way too long to figure out what the heck was going on here and isolate the problem because the code where this is happening is fairly complex and anytime I would try to simplify it to write a simple repro it would infuriatingly start working again...but I finally got it, and here it is:\r\n\r\n```c#\r\nvoid Main()\r\n{\t\r\n        // Works fine\r\n\tSomeClass.Method1().Dump(); \r\n\r\n        // RuntimeBinderException: Cannot convert type 'System.Enum' to 'decimal'\r\n\tSomeClass.Method2().Dump();\r\n}\r\n\r\npublic static class SomeClass {\r\n\tpublic static bool Method1()\r\n\t{\r\n\t\treturn (decimal)(dynamic)Test.A == (decimal)(dynamic)Test.A;\r\n\t}\r\n\t\r\n\tpublic static bool Method2()\r\n\t{\r\n\t\treturn CompareDecimalValues(Test.A, Test.A);\r\n\t}\r\n\r\n\tprivate enum Test\r\n\t{\r\n\t\tA = -100,\r\n\t}\r\n}\r\n\r\npublic static bool CompareDecimalValues<T>(T value1, T value2) where T : unmanaged, Enum\r\n{\r\n\treturn (decimal)(dynamic)value1 == (decimal)(dynamic)value2;\r\n}\r\n```\r\n\r\nIt only appears to happen with nested private enums being dynamically accessed outside of the class that defines the private enum."},{"Id":"10962478533","Type":"PullRequestEvent","CreatedAt":"2019-11-27T17:20:03","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27856","RelatedDescription":"Closed pull request \"Arm64: ReverseElementBits Codegen and Tests\" (#27856) at dotnet/coreclr","RelatedBody":"This finishes the implementation of `ReverseElementBits`.\r\nSee #27582 and #26769\r\n\r\n/CC @tannergooding @CarolEidt @echesakov "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10965214832","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:55:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13135","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13135) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.4\r\n- **Date Produced**: 11/28/2019 1:42 AM\r\n- **Commit**: 15b6aee2f5702a8d38bf9063e52f34d8e689ab72\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19577.4\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n"},{"Id":"10965104543","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:25:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13134","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13134) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.2\r\n- **Date Produced**: 11/28/2019 1:08 AM\r\n- **Commit**: ea3020cd0422107d6f982b363aa16c59fe2e846e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19577.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n"},{"Id":"10964979345","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:51:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13133","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13133) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n"},{"Id":"10964944389","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:41:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13132","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13132) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n"},{"Id":"10964448436","Type":"PullRequestEvent","CreatedAt":"2019-11-27T22:38:48","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13131","RelatedDescription":"Opened pull request \"Pin dependency on Microsoft.Netcore.App refpack to 3.1.0\" (#13131) at dotnet/cli","RelatedBody":"@nguerrera @mmitche PTAL"},{"Id":"10961388855","Type":"PullRequestEvent","CreatedAt":"2019-11-27T15:18:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13130","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13130) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6319\r\n- **Date Produced**: 11/21/2019 2:19 AM\r\n- **Commit**: ba2a72ac9afd9e7260798a6ad14088297570b350\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6319\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n"},{"Id":"10956324680","Type":"PullRequestEvent","CreatedAt":"2019-11-27T02:40:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13129","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13129) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.9\r\n- **Date Produced**: 11/27/2019 1:52 AM\r\n- **Commit**: f3f2dd583fffa254015fc21ff0e45784b333256d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10965065265","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10965008153","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:59:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10964111850","Type":"IssuesEvent","CreatedAt":"2019-11-27T21:33:26","Actor":"timdoke","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Closed issue \"Generic class operators derived from interface seems broken\" (#1659) at dotnet/standard","RelatedBody":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n"},{"Id":"10963975504","Type":"IssuesEvent","CreatedAt":"2019-11-27T21:09:19","Actor":"timdoke","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Opened issue \"Generic class operators derived from interface seems broken\" (#1659) at dotnet/standard","RelatedBody":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n"},{"Id":"10936732669","Type":"IssuesEvent","CreatedAt":"2019-11-25T02:23:46","Actor":"arizvisa","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Closed issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657) at dotnet/standard","RelatedBody":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10965367252","Type":"IssuesEvent","CreatedAt":"2019-11-28T02:35:43","Actor":"DaRosenberg","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42746","RelatedDescription":"Opened issue \"InvariantCulture string comparison is inconsistent between Windows and macOS\" (#42746) at dotnet/corefx","RelatedBody":"Verified in .NET Core 3.0 on Windows 10 1909 and macOS 10.15.1.\r\n\r\nThis expression:\r\n\r\n```cs\r\nSystem.StringComparer.InvariantCulture.Compare(\".\", \"_\")\r\n```\r\n\r\nReturns `-1` on Windows, but `1` on macOS.\r\n\r\nSince the invariant culture is being used, expected result is for string comparison to behave the same.\r\n\r\nThis is a blocking issue for us, because we are building a cross-platform tool whose output goes into shared data storage, and contains sorted strings. Currently, Windows users and Mac users overwrite each others' data with changes in sorting."},{"Id":"10965241171","Type":"PullRequestEvent","CreatedAt":"2019-11-28T02:02:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42745","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#42745) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n"},{"Id":"10965178886","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:46:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42744","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#42744) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n"},{"Id":"10964981921","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:52:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42745","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#42745) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n"},{"Id":"10964957952","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:45:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42744","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#42744) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10965319340","Type":"IssuesEvent","CreatedAt":"2019-11-28T02:23:21","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/40052","RelatedDescription":"Opened issue \"TypeInfo.ConvertedType.NullableAnnotation is None when binding a 'var' keyword\" (#40052) at dotnet/roslyn","RelatedBody":"This is being observed in https://github.com/dotnet/roslyn/pull/40030 as I'm removing the IDE's nullable wrappers. If you run [this test](https://github.com/dotnet/roslyn/blob/8d1995963dc0d7add5f6482e323ced9bae2f971b/src/EditorFeatures/CSharpTest/CodeRefactorings/UseExplicitOrImplicitType/UseExplicitTypeRefactoringTests.cs#L298) in the branch it fails. The test is calling GetTypeInfo on the argument and grabbing the ConvertedType [here](https://github.com/jasonmalinowski/roslyn/blob/d3e3d359ca97e4652582206cb052646d66bcdb06/src/Features/CSharp/Portable/TypeStyle/UseExplicitTypeCodeFixProvider.cs#L93). The old nullability APIs say that it is indeed nullable, but the new ITypeSymbol.NullableAnnotation still says None.\r\n\r\nI believe the expectation now is the ITypeSymbol.NullableAnnotation should have brought along the annotated state of Annotated."},{"Id":"10965189656","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:48:58","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40049","RelatedDescription":"Merged pull request \"Merge master to features/local-function-attributes\" (#40049) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10965188177","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:48:35","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40048","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#40048) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10965186409","Type":"IssuesEvent","CreatedAt":"2019-11-28T01:48:06","Actor":"ryzngard","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39775","RelatedDescription":"Closed issue \"ArgumentOutOfRangeException from ReplacePropertyWithMethods\" (#39775) at dotnet/roslyn","RelatedBody":"Place caret inside \"[]\"\r\n````\r\nusing System;\r\n\r\nclass AAttribute : Attribute\r\n{\r\n}\r\n\r\npublic class TestClass\r\n{\r\n    public void Test()\r\n    {\r\n        void Local<[]> // place caret inside []\r\n    }\r\n}\r\n````\r\n\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\nParameter name: position\r\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\r\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.GetInitialToken(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\r\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.FindTokenOnRightOfPosition(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\r\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.GetStartOfNodeExcludingAttributes(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader[THoleSyntax](Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader,ImmutableArray`1 holes)\r\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader(Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxFactsService.IsOnParameterHeader(SyntaxNode root,Int32 position,SyntaxNode& parameter)\r\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.<ExtractNodesInHeader>d__7.MoveNext()\r\n   at System.Linq.Enumerable.<OfTypeIterator>d__95`1.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.AddNonHiddenCorrectTypeNodes[TSyntaxNode](IEnumerable`1 nodes,ArrayBuilder`1 resultBuilder,CancellationToken cancellationToken)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.GetRelevantNodesAsync[TExpressionSyntax,TArgumentSyntax,TSyntaxNode](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.GetRelevantNodesAsync[TSyntaxNode](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.TryGetRelevantNodeAsync[TSyntaxNode](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.GetPropertyDeclarationAsync[TIdentifierNameSyntax,TExpressionSyntax,TCrefSyntax,TStatementSyntax,TPropertySyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n\r\n```"},{"Id":"10965105561","Type":"IssuesEvent","CreatedAt":"2019-11-28T01:25:30","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/40051","RelatedDescription":"Opened issue \"GetTypeInfo returns with nullability but the ITypeSymbol.NullableAnnotation is None\" (#40051) at dotnet/roslyn","RelatedBody":"This is being observed in https://github.com/dotnet/roslyn/pull/40030 as I'm removing the IDE's nullable wrappers. If you run [this test](https://github.com/dotnet/roslyn/blob/8d1995963dc0d7add5f6482e323ced9bae2f971b/src/EditorFeatures/CSharpTest/Diagnostics/GenerateMethod/GenerateMethodTests.cs#L298) in the branch it fails. The test is calling GetTypeInfo on the argument, and the old nullability APIs say that it is indeed nullable, but the new ITypeSymbol.NullableAnnotation still says None:\r\n\r\n![image](https://user-images.githubusercontent.com/201340/69769717-d5257a80-113a-11ea-860e-d9e6515aabba.png)\r\n\r\nI believe the expectation now is the ITypeSymbol.NullableAnnotation should have brought along the flow state of Annotated. If I debug into the implementation, it looks like this might just be missing the call to wrap the type."},{"Id":"10964919498","Type":"IssuesEvent","CreatedAt":"2019-11-28T00:34:52","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/40050","RelatedDescription":"Opened issue \".editorconfig Async methods should have \"Async\" suffix when interface in play\" (#40050) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/515551/editorconfig-async-methods-should-have-async-suffi.html)._\n\n---\nI use the following .editoconfig settings to require async methods in our codebase to have their name ending in \"Async\". \n```\n[*.{cs,vb}]\n\n# Async methods should have \"Async\" suffix\ndotnet_naming_rule.async_methods_end_in_async.symbols = any_async_methods\ndotnet_naming_rule.async_methods_end_in_async.style = end_in_async\ndotnet_naming_rule.async_methods_end_in_async.severity = warning\n\ndotnet_naming_symbols.any_async_methods.applicable_kinds = method\ndotnet_naming_symbols.any_async_methods.applicable_accessibilities = *\ndotnet_naming_symbols.any_async_methods.required_modifiers = async\n\ndotnet_naming_style.end_in_async.required_suffix = Async\ndotnet_naming_style.end_in_async.capitalization = pascal_case\n```\n\n\nWhile it works great, it doesn't work when interfaces come into play. Take below as an example. Get should be prompted as a warning that it should end in \"Async\". It makes sense that the interface member isn't, because:\n1. It doesn't have the \"required_modifiers\" async that the config requires\n2. I'm not 100% sure it's even considered a \"method\" but I couldn't find another \"applicable_kinds\" value that seemed appropriate. Is there one?\n\nThe fact that the interface member isn't highlighted then seems to flow through to the concretion, I guess because there's some logic that says editorconfig prefs should be ignored if it's simply following the interface? Comment out `Get` member of `IMyContract` and `Get` in `Something` gets highlighted.\n\n```\npublic interface IMyContract\n{\n    Task<string> Get();\n}\n\npublic class Something : IMyContract\n{\n    public async Task<string> Get() => await Task.FromResult(\"\");\n}\n```\n\nSo it feels as if:\n1. I need a way to target the interface member and enforce the suffix \n(e.g. interface_member that returns Task? Just wonder if there is ever a case for returning Task when an implementation isn't async though?), or \n2. The concretion should still get the rule violation in this specific case\n\nCheers,\nBen\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 4/3/2019, 09:44 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 4/4/2019, 04:58 AM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at:  https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq . In case you need answers to common questions or need assisted support, be sure to use  https://visualstudio.microsoft.com/vs/support/ . We'll keep you posted on any updates to this feedback.</p>\n\n#### ben.mccallum on 4/6/2019, 09:44 AM: \n\n<p>One thing that is tricky with a solution here is that if you rely on some third-party packages and are implementing their interfaces, you don't really want to get warnings about the naming convention if you can't really control their interface and it's naming convention.</p><p>For instance, our solution uses MediatR extensively so we're inheriting from IRequestHandler which has a member called \"Handle\". Ideally that'd be HandleAsync, but we don't want to get warnings given \"it is what it is\". So any solution here would need to understand that third-party deps should not create warnings.</p><p>Cheers again. </p>\n\n#### Visual Studio Feedback System on 8/23/2019, 03:00 AM: \n\nI'm closing this report, because in the last 90 days there was no internal developer activity and very small number of new votes or comments. Sorry, we would like to look at this further, but we just don’t have the time right now. Our goal in closing older issues such as this one is to keep customers informed on which issues are currently being pursued by Visual Studio teams. If you still have trouble with our latest version, please report it as a new problem.\n\n#### andrew.grady on 11/26/2019, 06:45 AM: \n\n<p>I am also running into this issue and I spent hours trying to figure out why it worked in some cases but not others. The existing behavior is confusing. In my case, all public async methods are tied to an interface. I would assume that would be the case for most others as coding to an interface is a best practice. </p><p>So my editorconfig rule (the same as the example above) only picks up private async methods which is a small fraction of the async methods implemented. </p><p>Can you please reconsider fixing this or at the very least documenting it for others who will probably run into this? Your documentation linked below makes no mention of this limitation. </p><p><a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019</a> </p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10964828447","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:10:25","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40010","RelatedDescription":"Merged pull request \"Track assemblies declaring well-known types used by a compilation.\" (#40010) at dotnet/roslyn","RelatedBody":"Related to #37768."},{"Id":"10964816318","Type":"IssuesEvent","CreatedAt":"2019-11-28T00:07:26","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39793","RelatedDescription":"Closed issue \"Disable Hyperlinks in code tooltips (VS 2019 C# code editor)\" (#39793) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/813017/disable-hyperlinks-in-code-tooltips-vs-2019-c-code.html)._\n\n---\n<p>Since upgrading to Visual Studio 2019, the code tooltips that appear when your mouse hovers over symbols in your code now include clickable hyperlinks that navigate to other code files. These tooltips are incredibly dangerous and time-costing because accidental clicks happen very frequently and the sudden, unexpected transition is very intrusive.</p> <p>Please can we have an option to disable these hyperlinks. (Specifically: in C# code files, but best in all languages.)</p> <p>Even better would be an option to make the tooltips ignore all clicks and not be hit-tested at all unless a key was held -- perhaps Ctrl. In older versions of visual studio, these tooltips existed and clicking them accidentally blocked the click event and was thus somewhat annoying, already.</p> <p><a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/103682-untitled.png\"> Image:103682-untitled.png</a></p><p>^^^ I don't need to click that! ^^^</p><p>The inclusion of links in these tooltips is extremely disturbing to my workflow -- they pop up at exactly the instant I am trying to use the mouse to position the caret and now include time-costing hyperlinks! In fact, it slows me down enough to keep me from upgrading to visual studio 2019!</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 11/8/2019, 02:06 AM: \n\n4. Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We'll provide an update once the issue has been triaged by the product team."},{"Id":"10964802376","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:03:39","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40049","RelatedDescription":"Opened pull request \"Merge master to features/local-function-attributes\" (#40049) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10964801976","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:03:32","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40048","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#40048) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10964805775","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:04:33","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7894","RelatedDescription":"Opened pull request \"WIP: Wasm: fix for boxing a float32 into Single\" (#7894) at dotnet/corert","RelatedBody":"Add a test and the fix for :\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nWhich was failing due to using a float64 and not trunking the float64 into a float32 before calling RhBox.  Also added code to ensure that type used in the reflection has its type symbol add to the dependencies to prevent missing metadata exception.  WIP as contains changes from #7891 so will wait for that before releasing."},{"Id":"10964427193","Type":"IssuesEvent","CreatedAt":"2019-11-27T22:34:13","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/issues/7893","RelatedDescription":"Reopened issue \"Wasm: question: boxing to Single\" (#7893) at dotnet/corert","RelatedBody":"Hi, in the Wasm backend it loads float32s into float64s and adds the extends/truncs as necessary.  This has worked ok up till now, but there is a problem I think with `FieldInfo.SetValue`.  This takes an object so boxes the float32.  Currently this fails as the address passed to `SetValue` is an address to a float64 and RhBox does not expect that and the value is corrupted (a 64bit float is interpreted as a 32 bit float I think).  In other words the following test fails\r\n```\r\n    internal static void TestBoxSingle()\r\n    {\r\n        StartTest(\"Test box single\");\r\n        var fi = typeof(ClassWithFloat).GetField(\"F\");\r\n        fi.SetValue(null, 1.1f);\r\n\r\n        PrintLine(ClassWithFloat.F.ToString());\r\n        EndTest(1.1f == ClassWithFloat.F);\r\n    }\r\n}\r\n\r\npublic class ClassWithFloat\r\n{\r\n    public static float F;\r\n}\r\n``` \r\nAnd it prints -1.0842022E-19.   In the Wasm backend the evaluation stack can have a `StackEntry` type of `FloatConstantEntry`, but this I'm not sure is sufficient to solve this problem as the enum for StackValueKind is \r\n```\r\n    internal enum StackValueKind\r\n    {\r\n        /// <summary>An unknow type.</summary>\r\n        Unknown,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 32-bit entity.</summary>\r\n        Int32,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 64-bit entity.</summary>\r\n        Int64,\r\n        /// <summary>Underlying platform pointer type represented as an integer of the appropriate size.</summary>\r\n        NativeInt,\r\n        /// <summary>Any float value.</summary>\r\n        Float,\r\n        /// <summary>A managed pointer.</summary>\r\n        ByRef,\r\n        /// <summary>An object reference.</summary>\r\n        ObjRef,\r\n        /// <summary>A value type which is not any of the primitive one.</summary>\r\n        ValueType\r\n    }\r\n```\r\nIt does not distinguish between 32 and 64 bit floats, so its impossible, I think, to load the constant correctly from\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nThe 1.1 is loaded with the `FloatConstantEntry` and it can't be passed correctly to the box/RhBox as its unknown whether to trunc the float or not.  \r\n\r\nMy question is, is my thinking correct and I need to add a new `StackEntry` type so that its known if the value was 32 or 64 bits?  This would not be a bad thing presumably from a performance point of view anyway,\r\n"},{"Id":"10964339474","Type":"IssuesEvent","CreatedAt":"2019-11-27T22:16:17","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7893","RelatedDescription":"Closed issue \"Wasm: question: boxing to Single\" (#7893) at dotnet/corert","RelatedBody":"Hi, in the Wasm backend it loads float32s into float64s and adds the extends/truncs as necessary.  This has worked ok up till now, but there is a problem I think with `FieldInfo.SetValue`.  This takes an object so boxes the float32.  Currently this fails as the address passed to `SetValue` is an address to a float64 and RhBox does not expect that and the value is corrupted (a 64bit float is interpreted as a 32 bit float I think).  In other words the following test fails\r\n```\r\n    internal static void TestBoxSingle()\r\n    {\r\n        StartTest(\"Test box single\");\r\n        var fi = typeof(ClassWithFloat).GetField(\"F\");\r\n        fi.SetValue(null, 1.1f);\r\n\r\n        PrintLine(ClassWithFloat.F.ToString());\r\n        EndTest(1.1f == ClassWithFloat.F);\r\n    }\r\n}\r\n\r\npublic class ClassWithFloat\r\n{\r\n    public static float F;\r\n}\r\n``` \r\nAnd it prints -1.0842022E-19.   In the Wasm backend the evaluation stack can have a `StackEntry` type of `FloatConstantEntry`, but this I'm not sure is sufficient to solve this problem as the enum for StackValueKind is \r\n```\r\n    internal enum StackValueKind\r\n    {\r\n        /// <summary>An unknow type.</summary>\r\n        Unknown,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 32-bit entity.</summary>\r\n        Int32,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 64-bit entity.</summary>\r\n        Int64,\r\n        /// <summary>Underlying platform pointer type represented as an integer of the appropriate size.</summary>\r\n        NativeInt,\r\n        /// <summary>Any float value.</summary>\r\n        Float,\r\n        /// <summary>A managed pointer.</summary>\r\n        ByRef,\r\n        /// <summary>An object reference.</summary>\r\n        ObjRef,\r\n        /// <summary>A value type which is not any of the primitive one.</summary>\r\n        ValueType\r\n    }\r\n```\r\nIt does not distinguish between 32 and 64 bit floats, so its impossible, I think, to load the constant correctly from\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nThe 1.1 is loaded with the `FloatConstantEntry` and it can't be passed correctly to the box/RhBox as its unknown whether to trunc the float or not.  \r\n\r\nMy question is, is my thinking correct and I need to add a new `StackEntry` type so that its known if the value was 32 or 64 bits?  This would not be a bad thing presumably from a performance point of view anyway,\r\n"},{"Id":"10964198147","Type":"IssuesEvent","CreatedAt":"2019-11-27T21:49:26","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7893","RelatedDescription":"Opened issue \"Wasm: question: boxing to Single\" (#7893) at dotnet/corert","RelatedBody":"Hi, in the Wasm backend it loads float32s into float64s and adds the extends/truncs as necessary.  This has worked ok up till now, but there is a problem I think with `FieldInfo.SetValue`.  This takes an object so boxes the float32.  Currently this fails as the address passed to `SetValue` is an address to a float64 and RhBox does not expect that and the value is corrupted (a 64bit float is interpreted as a 32 bit float I think).  In other words the following test fails\r\n```\r\n    internal static void TestBoxSingle()\r\n    {\r\n        StartTest(\"Test box single\");\r\n        var fi = typeof(ClassWithFloat).GetField(\"F\");\r\n        fi.SetValue(null, 1.1f);\r\n\r\n        PrintLine(ClassWithFloat.F.ToString());\r\n        EndTest(1.1f == ClassWithFloat.F);\r\n    }\r\n}\r\n\r\npublic class ClassWithFloat\r\n{\r\n    public static float F;\r\n}\r\n``` \r\nAnd it prints -1.0842022E-19.   In the Wasm backend the evaluation stack can have a `StackEntry` type of `FloatConstantEntry`, but this I'm not sure is sufficient to solve this problem as the enum for StackValueKind is \r\n```\r\n    internal enum StackValueKind\r\n    {\r\n        /// <summary>An unknow type.</summary>\r\n        Unknown,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 32-bit entity.</summary>\r\n        Int32,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 64-bit entity.</summary>\r\n        Int64,\r\n        /// <summary>Underlying platform pointer type represented as an integer of the appropriate size.</summary>\r\n        NativeInt,\r\n        /// <summary>Any float value.</summary>\r\n        Float,\r\n        /// <summary>A managed pointer.</summary>\r\n        ByRef,\r\n        /// <summary>An object reference.</summary>\r\n        ObjRef,\r\n        /// <summary>A value type which is not any of the primitive one.</summary>\r\n        ValueType\r\n    }\r\n```\r\nIt does not distinguish between 32 and 64 bit floats, so its impossible, I think, to load the constant correctly from\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nThe 1.1 is loaded with the `FloatConstantEntry` and it can't be passed correctly to the box/RhBox as its unknown whether to trunc the float or not.  \r\n\r\nMy question is, is my thinking correct and I need to add a new `StackEntry` type so that its known if the value was 32 or 64 bits?  This would not be a bad thing presumably from a performance point of view anyway,\r\n"},{"Id":"10963405022","Type":"PullRequestEvent","CreatedAt":"2019-11-27T19:36:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7892","RelatedDescription":"Merged pull request \"Fix `out string` arguments in reverse p/invoke\" (#7892) at dotnet/corert","RelatedBody":"`EmitMarshalArgumentNativeToManaged` bypasses `AllocAndTransformManagedToNative` and calls `Alloc/TransformManagedToNative` directly. Those are no-ops for the string marshallers, leading to bad marshalling code.\r\n\r\nI think doing allocation+transform in the \"transform\" part is what CoreCLR does as well (`EmitConvertContentsCLRToNative` is where allocation+transform happens for string marshallers in CoreCLR, as opposed to `EmitConvertSpaceAndContentsCLRToNative` which would be the right place based on its name)."},{"Id":"10962638413","Type":"PullRequestEvent","CreatedAt":"2019-11-27T17:42:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7892","RelatedDescription":"Opened pull request \"Fix `out string` arguments in reverse p/invoke\" (#7892) at dotnet/corert","RelatedBody":"`EmitMarshalArgumentNativeToManaged` bypasses `AllocAndTransformManagedToNative` and calls `Alloc/TransformManagedToNative` directly. Those are no-ops for the string marshallers, leading to bad marshalling code.\r\n\r\nI think doing allocation+transform in the \"transform\" part is what CoreCLR does as well (`EmitConvertContentsCLRToNative` is where allocation+transform happens for string marshallers in CoreCLR, as opposed to `EmitConvertSpaceAndContentsCLRToNative` which would be the right place based on its name)."},{"Id":"10962553266","Type":"PullRequestEvent","CreatedAt":"2019-11-27T17:30:09","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7890","RelatedDescription":"Merged pull request \"Port p/invoke marshalling changes from CoreCLR\" (#7890) at dotnet/corert","RelatedBody":"* First commit takes shared files from CoreCLR verbatim.\r\n* Second commit adjusts non-shared files.\r\n* Third commit fixes what appears to be a CppCodegen bug.\r\n"},{"Id":"10961652095","Type":"PullRequestEvent","CreatedAt":"2019-11-27T15:46:16","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7891","RelatedDescription":"Opened pull request \"Wasm: fix unsigned extend to uint64 and add test\" (#7891) at dotnet/corert","RelatedBody":"This widening cast was failing, particular causing a problem in https://github.com/dotnet/corert/blob/8d81b96c2561fe00a0ac95a40e2dd19642971a5a/src/System.Private.CoreLib/shared/System/Number.DiyFp.cs#L77-L103.  \r\n\r\nAdded a test that failed previously and zext instead of sext for unsigned widening.  There is parameter that I thought to use, but it is passed false here: https://github.com/dotnet/corert/blob/master/src/Common/src/TypeSystem/IL/ILImporter.cs#L574-L578.  Maybe that is wrong?\r\n\r\nAlso I updated emscripten, this wasn't necessary to fix this, but I got sidetracked with a build error and upgraded.  Its not a bad idea anyway as they changed the build tooling to allow for either the fastcomp or llvm backend and we will need to upgrade at some point.  If you just `git pull` emscripten you will hit a problem with the current scripts due to these changes.  Changed a bit of documentation to fit today's reality."},{"Id":"10953323817","Type":"PullRequestEvent","CreatedAt":"2019-11-26T18:12:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7889","RelatedDescription":"Merged pull request \"Get System.Text.Json to work\" (#7889) at dotnet/corert","RelatedBody":"The System.Text.Json that ships with the .NET Core 3.0+ uses Reflection.Emit - we should grab the NetStandard 2.0 version instead."},{"Id":"10951558936","Type":"PullRequestEvent","CreatedAt":"2019-11-26T14:59:22","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7890","RelatedDescription":"Opened pull request \"Port p/invoke marshalling changes from CoreCLR\" (#7890) at dotnet/corert","RelatedBody":"* First commit takes shared files from CoreCLR verbatim.\r\n* Second commit adjusts non-shared files.\r\n* Third commit fixes what appears to be a CppCodegen bug.\r\n"},{"Id":"10951540103","Type":"PullRequestEvent","CreatedAt":"2019-11-26T14:57:31","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7889","RelatedDescription":"Opened pull request \"Get System.Text.Json to work\" (#7889) at dotnet/corert","RelatedBody":"The System.Text.Json that ships with the .NET Core 3.0+ uses Reflection.Emit - we should grab the NetStandard 2.0 version instead."},{"Id":"10950360117","Type":"IssuesEvent","CreatedAt":"2019-11-26T12:48:12","Actor":"s-m-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7888","RelatedDescription":"Opened issue \"[macOS] System.Globalization.Native not linking properly when building with InvariantCulture\" (#7888) at dotnet/corert","RelatedBody":"**Software version:**\r\n.NET Core SDK 2.1.300\r\nILCompiler 1.0.0-alpha-28229-02\r\nmacOS 10.14.4, Darwin Kernel Version 18.5.0\r\n\r\n**Repro steps:**\r\n1. create a MonoGame project (possibly unrelated, but my project uses the framework)\r\n2. set `IlcInvariantGlobalization` to `true` in the project file\r\n3. make sure `System.Globalization` is included in the build (e.g. try additionally setting up `CultureInfo.InvariantCulture` at startup in the code)\r\n4. build on macOS\r\n\r\n**Results:**\r\nBuild fails during the linking stage yielding the following errors:\r\n```\r\nld : warning : can't parse dwarf compilation unit info in obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n  Undefined symbols for architecture x86_64:\r\n    \"_u_charsToUChars_ptr\", referenced from:\r\n        _u_charsToUChars_safe in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_u_strlen_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_u_strncpy_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_u_toupper_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOfOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareStringOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucal_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucol_closeElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_close_ptr\", referenced from:\r\n        _GlobalizationNative_CloseSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GetCollatorFromSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        ...\r\n    \"_ucol_getRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getSortKey_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortKey in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getStrength_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getVersion_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortVersion in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_next_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_previous_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_safeClone_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setAttribute_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setMaxVariable_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_strcoll_ptr\", referenced from:\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucurr_forLocale_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ucurr_getName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_getSymbols_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_toPattern_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_canonicalize_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_countAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getBaseName_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getCharacterOrientation_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDefault_ptr\", referenced from:\r\n        _DetectDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getDisplayCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Country_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Language_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getKeywordValue_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getLCID_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getName_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getParent_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ulocdata_getMeasurementSystem_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_getSymbol_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_toPattern_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_usearch_close_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_first_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_getMatchedLength_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_last_ptr\", referenced from:\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_openFromCollator_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n  ld: symbol(s) not found for architecture x86_64\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n/Users/phobia/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/build/Microsoft.NETCore.Native.targets(295,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o\" -o \"bin/Release/netcoreapp2.1/osx-x64/native/Carrion\" /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libbootstrapper.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libRuntime.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.CoreLib.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.TypeLoader.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Globalization.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.IO.Compression.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Net.Security.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Security.Cryptography.Native.Apple.a -g -Wl,-rpath,'$ORIGIN' -lstdc++ -ldl -lm -lz -licucore -framework CoreFoundation -framework Security -framework GSS\" exited with code 1. [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n```\r\n**Expected behavior:**\r\nBuild succeeds, the binary is created.\r\n\r\n**Workaround:**\r\nWhen building on macOS, don't set `IlcInvariantGlobalization` to `true`."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10965431288","Type":"PullRequestEvent","CreatedAt":"2019-11-28T02:52:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3978","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3978) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"},{"Id":"10965413449","Type":"PullRequestEvent","CreatedAt":"2019-11-28T02:47:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3979","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3979) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n"},{"Id":"10964962372","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:46:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3979","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3979) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n"},{"Id":"10964960881","Type":"PullRequestEvent","CreatedAt":"2019-11-28T00:46:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3978","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3978) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"},{"Id":"10961390240","Type":"PullRequestEvent","CreatedAt":"2019-11-27T15:18:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3977","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#3977) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6319\r\n- **Date Produced**: 11/21/2019 2:19 AM\r\n- **Commit**: ba2a72ac9afd9e7260798a6ad14088297570b350\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6319\r\n\r\n[marker]: <> (End:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n\r\n"},{"Id":"10961040641","Type":"PullRequestEvent","CreatedAt":"2019-11-27T14:41:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3976","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#3976) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"10960159929","Type":"PullRequestEvent","CreatedAt":"2019-11-27T13:01:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3976","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#3976) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"10959311180","Type":"IssuesEvent","CreatedAt":"2019-11-27T11:07:46","Actor":"bencyoung","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3975","RelatedDescription":"Opened issue \"TargetPath wrong with auto creation of exe?\" (#3975) at dotnet/sdk","RelatedBody":"We have a build system where we need to post-sign our build artifacts so we can run them on our development machines. On .NET Core 2.1 we used a command like:\r\n\r\n```xml\r\n        <SignCommand>$(SignTool) sign /n \"$(CertificateName) /v \"$(TargetPath)\" ...</SignCommand>\r\n```\r\n\r\nand then\r\n\r\n```xml\r\n    <Target Name=\"SignThisAssembly\" AfterTargets=\"Build\" Condition=\"'$(SignThisAssembly)' == 'true'\">\r\n        <Message Text=\"Signing assembly &quot;$(TargetPath)&quot;\" Importance=\"High\" />\r\n        <!-- Attempt 1 -->\r\n        <Exec Command=\"$(SignCommand)\" ContinueOnError=\"true\">\r\n            <Output TaskParameter=\"ExitCode\" PropertyName=\"ExitCode\" />\r\n        </Exec>\r\n```\r\n\r\nWith netcoreapp3.1 this fails because $(TargetPath) points to the dll, but at some point an exe is produced instead and this *isn't* signed. Is there a new or separate property that points to the exe or do we need to move the signing to a later stage or something?\r\n\r\nThank,\r\nBen"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2019-11-14T16:22:27","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Open PR \"Fix broken links\" (#153)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2019-11-14T16:00:23","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Open PR \"Fix broken links\" (#152)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"529572120","IsPullRequest":false,"CreatedAt":"2019-11-28T02:57:12","Actor":"mikernet","Number":"27953","RawContent":null,"Title":"RuntimeBinderException when dynamically casting private enum type","State":"closed","Body":"It took me way too long to figure out what the heck was going on here and isolate the problem because the code where this is happening is fairly complex and anytime I would try to simplify it to write a simple repro it would infuriatingly start working again...but I finally got it, and here it is:\r\n\r\n```c#\r\nvoid Main()\r\n{\t\r\n        // Works fine\r\n\tSomeClass.Method1().Dump(); \r\n\r\n        // RuntimeBinderException: Cannot convert type 'System.Enum' to 'decimal'\r\n\tSomeClass.Method2().Dump();\r\n}\r\n\r\npublic static class SomeClass {\r\n\tpublic static bool Method1()\r\n\t{\r\n\t\treturn (decimal)(dynamic)Test.A == (decimal)(dynamic)Test.A;\r\n\t}\r\n\t\r\n\tpublic static bool Method2()\r\n\t{\r\n\t\treturn CompareDecimalValues(Test.A, Test.A);\r\n\t}\r\n\r\n\tprivate enum Test\r\n\t{\r\n\t\tA = -100,\r\n\t}\r\n}\r\n\r\npublic static bool CompareDecimalValues<T>(T value1, T value2) where T : unmanaged, Enum\r\n{\r\n\treturn (decimal)(dynamic)value1 == (decimal)(dynamic)value2;\r\n}\r\n```\r\n\r\nIf `CompareDecimalValues()` is inside the same assembly then changing the enum to internal or public makes `Method2` work. If `CompareDecimalValues` is outside the assembly then the enum must be changed to public for it to work. \r\n\r\nBasically, it seems like the method doing the dynamic cast must have visibility of the enum type otherwise it fails.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27953","RelatedDescription":"Closed issue \"RuntimeBinderException when dynamically casting private enum type\" (#27953)"},{"Id":"529602760","IsPullRequest":true,"CreatedAt":"2019-11-27T22:39:15","Actor":"jashook","Number":"27954","RawContent":null,"Title":"Disable formatting jobs in release/3.1","State":"open","Body":"/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/27954","RelatedDescription":"Open PR \"Disable formatting jobs in release/3.1\" (#27954)"},{"Id":"529195568","IsPullRequest":true,"CreatedAt":"2019-11-27T08:37:17","Actor":"hoyosjs","Number":"27952","RawContent":null,"Title":"Change non_virtual_calls_to_instance_methods test to non-il-sdk format","State":"open","Body":"Branch 3.1 doesn't have the changes necessary to build ilproj using the SDK. PR #27868 ported a bug fix and added this test, so just use the old format.","Url":"https://github.com/dotnet/coreclr/pull/27952","RelatedDescription":"Open PR \"Change non_virtual_calls_to_instance_methods test to non-il-sdk format\" (#27952)"},{"Id":"528330168","IsPullRequest":false,"CreatedAt":"2019-11-27T02:01:43","Actor":"erozenfeld","Number":"27941","RawContent":null,"Title":"Remove PAL_RegisterModule jit export","State":"closed","Body":"This issue is a follow-up from https://github.com/dotnet/runtime/pull/167#discussion_r349868608\r\n\r\nThe work that's done inside PAL_RegisterModule should be done in jitStartup.\r\n\r\nCorInfoImpl  (in src\\coreclr\\src\\tools\\Common\\JitInterface\\CorInfoImpl.cs) currently calls PAL_RegisterModule followed by jitStartup but it only needs the PAL_InitializeDLL part of PAL_RegisterModule. Because of that it can't properly check the return code from PAL_RegisterModule.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27941","RelatedDescription":"Closed issue \"Remove PAL_RegisterModule jit export\" (#27941)"},{"Id":"529055217","IsPullRequest":false,"CreatedAt":"2019-11-27T01:08:06","Actor":"VSadov","Number":"27951","RawContent":null,"Title":"[Pinned Object Heap] Need to generalize GC notification API","State":"open","Body":"The `GC.RegisterForFullGCNotification` API takes a separate parameter for LOH. Most likely need another overload for POH","Url":"https://github.com/dotnet/coreclr/issues/27951","RelatedDescription":"Open issue \"[Pinned Object Heap] Need to generalize GC notification API\" (#27951)"},{"Id":"528917611","IsPullRequest":true,"CreatedAt":"2019-11-26T21:20:05","Actor":"jashook","Number":"27947","RawContent":null,"Title":"Disable test with warning","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27947","RelatedDescription":"Closed or merged PR \"Disable test with warning\" (#27947)"},{"Id":"528951170","IsPullRequest":true,"CreatedAt":"2019-11-26T20:19:50","Actor":"dotnet-maestro-bot","Number":"27950","RawContent":null,"Title":"Update BuildTools to preview1-04626-03 (release/2.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27950","RelatedDescription":"Open PR \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#27950)"},{"Id":"528950486","IsPullRequest":true,"CreatedAt":"2019-11-26T20:18:10","Actor":"stephentoub","Number":"27949","RawContent":null,"Title":"Fix CancellationTokenRegistration.Unregister race condition","State":"open","Body":"Port https://github.com/dotnet/runtime/pull/309 to release/3.1\r\nFixes https://github.com/dotnet/coreclr/issues/22946\r\n\r\n## Description\r\n\r\nIf multiple threads race to Unregister and zero out a CancellationTokenRegistration field, we can end up null ref'ing due to a torn read/write on a struct resulting in passing around some inconsistent state.  This pattern is possible as part of clean up in Task.Delay(timeout, cancellationToken), with the null ref then happening on a thread pool thread that results in the app crashing.\r\n\r\n## Customer Impact\r\n\r\nValid coding patterns, both in customer code and in our framework implementation, resulting in NullReferenceExceptions that may not be catchable.  Back in March a customer reported this, and just recently @rynowak hit up against it in ASP.NET.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.8 and .NET Core 2.0.  This was introduced in https://github.com/dotnet/coreclr/pull/12819 in 2.1 as part of overhauling the CancellationToken implementation.\r\n\r\n## Testing\r\n\r\nIsolated a repro that quickly fails (within a second) prior to the fix and successfully runs for a long time after.\r\n\r\n## Risk\r\n\r\nMinimal.\r\n\r\ncc: @tarekgh, @kouvel, @rynowak \r\n\r\n@danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27949","RelatedDescription":"Open PR \"Fix CancellationTokenRegistration.Unregister race condition\" (#27949)"},{"Id":"528397569","IsPullRequest":true,"CreatedAt":"2019-11-26T19:30:17","Actor":"brianrob","Number":"27942","RawContent":null,"Title":"Emit an Event for Every Tiered Compilation Call Counter Operation","State":"closed","Body":"Adds a new verbose event that when enabled via the CompilationDiagnostic keyword will emit an event each time a tiered compilation method call counter increment operation occurs.\r\n\r\nThis is expected to be very verbose, but can help with understanding call counter behavior and verifying tiered compilation behavior in real workloads.","Url":"https://github.com/dotnet/coreclr/pull/27942","RelatedDescription":"Closed or merged PR \"Emit an Event for Every Tiered Compilation Call Counter Operation\" (#27942)"},{"Id":"528926512","IsPullRequest":true,"CreatedAt":"2019-11-26T19:26:20","Actor":"dotnet-maestro-bot","Number":"27948","RawContent":null,"Title":"Update BuildTools to rc1-04626-02 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27948","RelatedDescription":"Open PR \"Update BuildTools to rc1-04626-02 (release/2.1)\" (#27948)"},{"Id":"528886486","IsPullRequest":true,"CreatedAt":"2019-11-26T18:44:02","Actor":"dotnet-maestro-bot","Number":"27946","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27946","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27946)"},{"Id":"528078084","IsPullRequest":false,"CreatedAt":"2019-11-26T18:16:43","Actor":"saucecontrol","Number":"27937","RawContent":null,"Title":"RyuJIT: Access violation when calling IsLclVarUpdateTree on GenTreeHWIntrinsic","State":"closed","Body":"When compiling the `crash` method below, RyuJIT throws an AV when `GenTree::IsLclVarUpdateTree` is called from `Compiler::optExtractInitTestIncr`.  The rhs arg in this case is a `GenTreeHWIntrinsic`  (NI_Vector128_Zero), which causes a nullptr dereference.\r\n\r\n```C#\r\nusing System.Runtime.Intrinsics;\r\n\r\nclass Program\r\n{\r\n    static unsafe void crash(float* fa, float* fb)\r\n    {\r\n        float* pb = fb;\r\n        float* eb = pb + 16;\r\n\r\n        do\r\n        {\r\n            float* pa = fa;\r\n            float* ea = pa + 16;\r\n            var va = Vector128<float>.Zero;\r\n\r\n            do\r\n            {\r\n                *pa = va.ToScalar();\r\n\r\n                pa += Vector128<float>.Count;\r\n                pb += Vector128<float>.Count;\r\n            } while (pa < ea);\r\n\r\n        } while (pb < eb);\r\n    }\r\n\r\n    static unsafe void Main()\r\n    {\r\n        float* a = stackalloc float[16];\r\n        float* b = stackalloc float[16];\r\n\r\n        crash(a, b);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27937","RelatedDescription":"Closed issue \"RyuJIT: Access violation when calling IsLclVarUpdateTree on GenTreeHWIntrinsic\" (#27937)"},{"Id":"527475916","IsPullRequest":true,"CreatedAt":"2019-11-26T17:56:32","Actor":"Anipik","Number":"27928","RawContent":null,"Title":"enabling ci for 2.1 branches","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27928","RelatedDescription":"Closed or merged PR \"enabling ci for 2.1 branches\" (#27928)"},{"Id":"528835856","IsPullRequest":false,"CreatedAt":"2019-11-26T17:53:40","Actor":"znakeeye","Number":"27945","RawContent":null,"Title":"ArrayPool's Return() and Rent() have the wrong signature","State":"closed","Body":"[ConfigurableArrayPool.Return()](https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/shared/System/Buffers/ConfigurableArrayPool.cs#L123) should return a `bool`, indicating if the buffer was indeed returned. Similarly, there should be a `Rent(int minimumLength, out bool rented)` so that you can quickly determine if the returned buffer is indeed from the pool.\r\n\r\n**Important for unit tests**\r\nThe current implementation makes it impossible to determine if you are working with a pooled array or temporary array. Distinguishing between the two can be critical for e.g. unit tests. In our use case, we traverse a tree structure and it's important that we don't reach a point where the array pool has been exhausted. Here, fine-tuning the size of the pool (impossible due to the above) would allow us to get a deterministic GC behavior.","Url":"https://github.com/dotnet/coreclr/issues/27945","RelatedDescription":"Closed issue \"ArrayPool's Return() and Rent() have the wrong signature\" (#27945)"},{"Id":"528401202","IsPullRequest":false,"CreatedAt":"2019-11-25T23:40:45","Actor":"ViktorHofer","Number":"27943","RawContent":null,"Title":"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉","State":"open","Body":"We are excited to announce that we just opened the [dotnet/runtime](https://github.com/dotnet/runtime) repository for community members: https://github.com/dotnet/runtime/issues/253. Issues will be ported over early December and this master branch will be recycled soon after. Please open Issues and Pull Requests in the new repository.\r\n\r\ncc @MeiChin-Tsai ","Url":"https://github.com/dotnet/coreclr/issues/27943","RelatedDescription":"Open issue \"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉\" (#27943)"},{"Id":"528249356","IsPullRequest":false,"CreatedAt":"2019-11-25T18:05:47","Actor":"EgorBo","Number":"27940","RawContent":null,"Title":"JIT: use `test` for Nullable == null","State":"open","Body":"```csharp\r\npublic static bool MyTest(int? a)\r\n{\r\n    return a == null;\r\n}\r\n```\r\nCodegen:\r\n```asm\r\nG_M41936_IG01:\r\n       mov      qword ptr [rsp+08H], rcx\r\nG_M41936_IG02:\r\n       cmp      byte  ptr [rsp+08H], 0\r\n       sete     al\r\n       movzx    rax, al\r\nG_M41936_IG03:\r\n       ret      \r\n; Total bytes of code: 17\r\n```\r\nShould use a slightly cheaper `test` instead of `cmp 0`.\r\nPS: Mono-LLVM's cogegen for this case:\r\n```asm\r\n       test     dil,dil\r\n       sete     al\r\n       ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27940","RelatedDescription":"Open issue \"JIT: use `test` for Nullable == null\" (#27940)"},{"Id":"528187837","IsPullRequest":false,"CreatedAt":"2019-11-25T16:12:40","Actor":"jkotas","Number":"27939","RawContent":null,"Title":"Move ILVerify tool to dotnet/runtime repo","State":"open","Body":"https://github.com/dotnet/coreclr/issues/27934#issuecomment-558193025","Url":"https://github.com/dotnet/coreclr/issues/27939","RelatedDescription":"Open issue \"Move ILVerify tool to dotnet/runtime repo\" (#27939)"},{"Id":"528154820","IsPullRequest":true,"CreatedAt":"2019-11-25T15:40:36","Actor":"dotnet-maestro-bot","Number":"27938","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\n* @davmason\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27938","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27938)"},{"Id":"527598571","IsPullRequest":true,"CreatedAt":"2019-11-25T15:15:27","Actor":"hoyosjs","Number":"27933","RawContent":null,"Title":"Use MicrosoftSHA2 for DAC signing","State":"closed","Body":"The DAC can't be signed with a 400 cert like all other DLLs. There's a requirement to have a dual Sha signature for Watson scenarios.","Url":"https://github.com/dotnet/coreclr/pull/27933","RelatedDescription":"Closed or merged PR \"Use MicrosoftSHA2 for DAC signing\" (#27933)"},{"Id":"527890918","IsPullRequest":false,"CreatedAt":"2019-11-25T07:05:25","Actor":"stasgaonkar","Number":"27936","RawContent":null,"Title":"Cannot unload a collectible AssemblyLoadContext if System.Data.SqlClient is used","State":"open","Body":"The Assembly we want to load (and unload) needs the ability to connect to a database for which we use Dapper. Dapper internally makes use of System.Data.SqlClient. We find that when we create such an assembly, then we are unable to Unload the **collectible AssemblyLoadContext**.\r\n\r\nThe sample source code is available at: https://github.com/stasgaonkar/DynamicLoading\r\n\r\nHaving followed the steps mentioned in https://docs.microsoft.com/en-us/dotnet/standard/assembly/unloadability#, the following is the output of `gcroot` command,\r\n\r\n```\r\n0:000> !dumpheap -type LoaderAllocator\r\n         Address               MT     Size\r\n000002022c46e1f0 00007fff74999410       48     \r\n000002022c46e260 00007fff74999538       24     \r\n\r\nStatistics:\r\n              MT    Count    TotalSize Class Name\r\n00007fff74999538        1           24 System.Reflection.LoaderAllocatorScout\r\n00007fff74999410        1           48 System.Reflection.LoaderAllocator\r\nTotal 2 objects\r\n0:000> !gcroot -all 0x000002022c46e1f0\r\nHandleTable:\r\n    000002022A9D12A0 (strong handle)\r\n    -> 000002022C4E8C48 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D12A8 (strong handle)\r\n    -> 000002022C4E00F0 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D12E0 (strong handle)\r\n    -> 000002022C4B38C0 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D15F8 (pinned handle)\r\n    -> 000002023C461038 System.Object[]\r\n    -> 000002022C475768 System.Threading.TimerQueue[]\r\n    -> 000002022C475840 System.Threading.TimerQueue\r\n    -> 000002022C4ABE88 System.Threading.TimerQueueTimer\r\n    -> 000002022C475708 System.Threading.TimerQueueTimer\r\n    -> 000002022C475580 System.Threading.TimerCallback\r\n    -> 000002022C474D60 System.Data.SqlClient.SqlConnectionFactory\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\nFound 4 roots.\r\n```\r\n\r\nSo it seems that the TdsParserStateObjectNative is the culprit. What we have also noticed is that there are some **\"unmanaged/native DLL\"** that are used (`sni.dll`) internally by `System.Data.SqlClient`, possibly from within `TdsParserStateObjectNative`. Not sure if this is causing any issues. \r\n\r\nIs something that we are attempting to do, incorrect? ","Url":"https://github.com/dotnet/coreclr/issues/27936","RelatedDescription":"Open issue \"Cannot unload a collectible AssemblyLoadContext if System.Data.SqlClient is used\" (#27936)"},{"Id":"527782075","IsPullRequest":false,"CreatedAt":"2019-11-25T00:12:32","Actor":"Thealexbarney","Number":"27935","RawContent":null,"Title":"JIT: Dead code at runtime not completely removed","State":"open","Body":"The JIT doesn't properly remove dead code in certain instances. [Here's an example](https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBDAzgWwB8ABAJgEYBYAKGIAYACY8gOgCUBXAOwwEt8YLAMIR8AB14AbGFADKMgG68wMXAG4a9Jq049+ggJI8ovLrmW4WADQAcSDdU0BmJqQZCaAbxoNfTF8xIDMAQEJIMBrgAggoIshxiYtAYMAAmABQAlD5+3tR+BUwA7AwxCCyR8YnJaQ4FAL40Ob7EAeRBxCil6aYYDNhoDLJi2FwAPMAAnikAfMHZ+bnNhbwAZgzpkWVVSVApGZkLhUuLxwXEAKxl6QPzdWeNp4UwkrgwywV5Z4WXAHIQ11uwEy92OjwaTSerW0HS6UVIPR4/UGw1GE2mMDmwOWXzOaw2ZQquB2NVSRzOuO+LSusRug2BoMK4LOLzeHxOVL8fwBtKBIPZvmZgsh5zasNKTkRfVuqPGU1m8xxAoY+M20ViJL2aSy5OOlKpl0B9P5Twhpr8rPe5t8+u+AHo7Qw2DB8BAFGkGMqhQxHssANoAWRgGAAFhBUgZxJJ0kHQ+HI2JJAB5MR8CBmFj/IySUymADmmQAustoYEmF1DbTesihiM5RisZkGJ4fSK/IHg2GI1GY5341GU2mM1muDmuPmiyWxeWmBd/tdqzK6+iFcDm63qPUgA==) that does some method dispatching based on CPU features:\r\n```\r\npublic class C\r\n{\r\n    public static bool IsAvxSupported()\r\n    {\r\n        return Avx.IsSupported;\r\n    }\r\n\r\n    public static void A(int a, Span<byte> b)\r\n    {\r\n        if (IsAvxSupported())\r\n            FuncAvx(a, b);\r\n        else\r\n            FuncNoAvx(a, b);\r\n    }\r\n\r\n    public static void A2(int a, Span<byte> b)\r\n    {\r\n        if (Avx.IsSupported)\r\n            FuncAvx(a, b);\r\n        else\r\n            FuncNoAvx(a, b);\r\n    }\r\n\r\n    public static void A3(int a, Span<byte> b)\r\n    {\r\n        if (IsAvxSupported())\r\n            FuncAvx(a, b);\r\n        else\r\n        {\r\n            // Removed \r\n        }\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static void FuncAvx(int a, Span<byte> b) { }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static void FuncNoAvx(int a, Span<byte> b) { }\r\n}\r\n```\r\n\r\n`A1` Moves some arguments around on the stack unnecessarily.\r\n```\r\nG_M13277_IG01:\r\n       sub      rsp, 56\r\n       vzeroupper \r\n       xor      rax, rax\r\n       mov      qword ptr [rsp+28H], rax\r\n\r\nG_M13277_IG02:\r\n       vmovdqu  xmm0, qword ptr [rdx]\r\n       vmovdqu  qword ptr [rsp+28H], xmm0\r\n\r\nG_M13277_IG03:\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     C:FuncAvx(int,struct)\r\n       nop      \r\n\r\nG_M13277_IG04:\r\n       add      rsp, 56\r\n       ret\r\n```\r\n\r\nManually inlining `IsAvxSupported` or removing the code from the `false` branch like in `A2` and `A3` make the JIT remove all those instructions, leaving just the call.\r\n```\r\nG_M62574_IG01:\r\n       sub      rsp, 40\r\n       nop      \r\n\r\nG_M62574_IG02:\r\n       call     C:FuncAvx(int,struct)\r\n       nop      \r\n\r\nG_M62574_IG03:\r\n       add      rsp, 40\r\n       ret   \r\n```","Url":"https://github.com/dotnet/coreclr/issues/27935","RelatedDescription":"Open issue \"JIT: Dead code at runtime not completely removed\" (#27935)"},{"Id":"527739290","IsPullRequest":false,"CreatedAt":"2019-11-24T18:47:21","Actor":"am11","Number":"27934","RawContent":null,"Title":"ilasm/ildasm/ilverify as dotnet global tools","State":"open","Body":"For example, acquisition and usage of https://www.nuget.org/packages/dotnet-format/ is quite simple:\r\n\r\n```\r\ndotnet tool install --global dotnet-format\r\n```\r\n\r\n```\r\ndotnet-format --files MyModel.cs\r\n```\r\n\r\nIt would be handy if IL-related tools are also packaged as [.NET Core Global tools](https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools-how-to-create) and following the installation instructions on nuget.org page (`dotnet tool install ..`) is sufficient.","Url":"https://github.com/dotnet/coreclr/issues/27934","RelatedDescription":"Open issue \"ilasm/ildasm/ilverify as dotnet global tools\" (#27934)"},{"Id":"527583622","IsPullRequest":false,"CreatedAt":"2019-11-23T17:20:04","Actor":"EgorBo","Number":"27932","RawContent":null,"Title":"JIT: Optimize boxing(x) == boxing(y) to false.","State":"open","Body":"```csharp\r\nstatic bool Generic<T1, T2>(T1 a, T2 b)\r\n{\r\n    return (object)a == (object)b;\r\n}\r\n\r\nstatic bool Test()\r\n{\r\n    return Generic(42, 3.14);\r\n}\r\n```\r\nCodegen for `Test`:\r\n```asm\r\n; Method Program:Test():bool\r\nG_M11853_IG01:\r\n       push     rsi\r\n       sub      rsp, 32\r\n       vzeroupper \r\nG_M11853_IG02:\r\n       mov      rcx, 0xD1FFAB1E\r\n       call     CORINFO_HELP_NEWSFAST\r\n       mov      rsi, rax\r\n       mov      dword ptr [rsi+8], 42\r\n       mov      rcx, 0xD1FFAB1E\r\n       call     CORINFO_HELP_NEWSFAST\r\n       vmovsd   xmm0, qword ptr [reloc @RWD00]\r\n       vmovsd   qword ptr [rax+8], xmm0\r\n       cmp      rsi, rax\r\n       sete     al\r\n       movzx    rax, al\r\nG_M11853_IG03:\r\n       add      rsp, 32\r\n       pop      rsi\r\n       ret      \r\nRWD00  dq\t40091EB851EB851Fh\r\n```\r\n```\r\n\\--*  EQ\\NE     int   \r\n   +--*  BOX       ref   \r\n   |  \\--*  LCL_VAR   ref    V03 tmp1   \r\n   \\--*  BOX       ref   \r\n      \\--*  LCL_VAR   ref    V04 tmp2   \r\n```\r\nExpected codegen:\r\n```asm\r\n; Method Program:Test():bool\r\n       xor      eax, eax  ; return false \r\n       ret     \r\n```\r\nNot sure if people actually use this pattern though. But should be a simple fix because CoreCLR already optimizes boxing for similar cases (e.g. `boxing(x) == null` to `false` etc, see https://github.com/mono/mono/issues/17858 for links).","Url":"https://github.com/dotnet/coreclr/issues/27932","RelatedDescription":"Open issue \"JIT: Optimize boxing(x) == boxing(y) to false.\" (#27932)"},{"Id":"527549581","IsPullRequest":false,"CreatedAt":"2019-11-23T12:07:02","Actor":"jkotas","Number":"27931","RawContent":null,"Title":"Casting in a loop may cause long GC pause times","State":"open","Body":"https://github.com/dotnet/performance/issues/1049#issuecomment-557064299","Url":"https://github.com/dotnet/coreclr/issues/27931","RelatedDescription":"Open issue \"Casting in a loop may cause long GC pause times\" (#27931)"},{"Id":"527549509","IsPullRequest":false,"CreatedAt":"2019-11-23T12:06:18","Actor":"jkotas","Number":"27930","RawContent":null,"Title":"Calling System.Math floating point operations in a loop causes long GC pause times","State":"open","Body":"https://github.com/dotnet/performance/issues/1049#issuecomment-557064299","Url":"https://github.com/dotnet/coreclr/issues/27930","RelatedDescription":"Open issue \"Calling System.Math floating point operations in a loop causes long GC pause times\" (#27930)"},{"Id":"527479946","IsPullRequest":false,"CreatedAt":"2019-11-23T00:40:00","Actor":"albahari","Number":"27929","RawContent":null,"Title":"NativeLibrary.Load(string, Assembly, DllImportSearchPath?) should honor assembly's ALC","State":"open","Body":"The following overload of NativeLibrary.Load:\r\n\r\n`NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)`\r\n\r\nshould invoke the `LoadUnmanagedDll` method and `ResolvingUnmanagedDll` event of the assembly's ALC, in keeping with the API's design intention:\r\n\r\n> - NativeLibrary.Load(string) is a low-level API that wraps the underlying library load OS API and nothing else. It is meant to be used e.g. for loading OS and similar libraries that are outside the application.\r\n> - NativeLibrary.Load(string libraryName, Assembly assembly, DllImportSearchPath? searchPath) is a higher level API. The intention for this API was to **behave as if DllImport was used in the given assembly**.\r\n\r\nRight now, it does not behave as such and ignores the assembly's ALC. Consequently, any assembly calling this method will almost certainly break **unless that assembly is loaded into the default ALC**. An example is Microsoft.Data.Sqlite, which calls SQLitePCLRaw.nativelibrary. This breaks right now when loaded into a non-default ALC (or when loaded dynamically).\r\n\r\nThe other overload - NativeLibrary.Load(string libraryPath) - should remain as-is.\r\n\r\nSee the second/third comment in #26864 for a full discussion.","Url":"https://github.com/dotnet/coreclr/issues/27929","RelatedDescription":"Open issue \"NativeLibrary.Load(string, Assembly, DllImportSearchPath?) should honor assembly's ALC\" (#27929)"},{"Id":"527464367","IsPullRequest":true,"CreatedAt":"2019-11-22T23:36:35","Actor":"dotnet-maestro[bot]","Number":"27927","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27927","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#27927)"},{"Id":"527424040","IsPullRequest":true,"CreatedAt":"2019-11-22T21:55:28","Actor":"dotnet-maestro-bot","Number":"27925","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @davmason\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27925","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27925)"},{"Id":"527429360","IsPullRequest":true,"CreatedAt":"2019-11-22T21:44:17","Actor":"jashook","Number":"27926","RawContent":null,"Title":"Do not fast tail call with callee stack space.","State":"open","Body":"This change is pessimistic, but it will guarentee correctness.\r\nWe specifically know that LowerFastTailCall fundamentally is broken.\r\nThis has been fixed in https://github.com/dotnet/coreclr/pull/26255.\r\nThis change exists only to make sure that we do not have SBC in older releases.\r\n\r\nNote that this changes behavoir, there are valid fast tail calls which could have avoided StackOverFlow exceptions.\r\n\r\nThese tail calls must have not had overlapping slot locations, for a flawed definition of slot location. Which simply means they got lucky when generating code.","Url":"https://github.com/dotnet/coreclr/pull/27926","RelatedDescription":"Open PR \"Do not fast tail call with callee stack space.\" (#27926)"},{"Id":"527413257","IsPullRequest":false,"CreatedAt":"2019-11-22T21:02:55","Actor":"jkotas","Number":"27924","RawContent":null,"Title":"Bad GCInfo generated for Unsafe.ByteOffset","State":"open","Body":"Repro:\r\n\r\n```\r\nusing System;\r\nusing System.Threading;\r\nusing System.Runtime.CompilerServices;\r\n\r\nclass Program\r\n{\r\n    static byte[][] s = new byte[1000][];\r\n\r\n    static void Work()\r\n    {\r\n        uint i = 0;\r\n        for (;;) {\r\n             var a = s[i++ % s.Length];\r\n\r\n             ref byte p = ref a[0];\r\n             ref byte q = ref a[1];\r\n\r\n             if (Unsafe.ByteOffset(ref p, ref q) != new IntPtr(1))\r\n                 Console.WriteLine(\"ERROR\");\r\n\r\n             p = 1; q = 2;\r\n        }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        for(int i = 0; i < s.Length; i++) s[i] = new byte[2];\r\n\r\n        for(int i = 0; i < 20; i++) new Thread(Work).Start();\r\n\r\n        Random r = new Random();\r\n        for (;;) {\r\n            s[r.Next(s.Length)] = new byte[3 + r.Next(100)];\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResult: Run with `dotnet run -c Release`. ERROR is printed occasionally.","Url":"https://github.com/dotnet/coreclr/issues/27924","RelatedDescription":"Open issue \"Bad GCInfo generated for Unsafe.ByteOffset\" (#27924)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"529651007","IsPullRequest":true,"CreatedAt":"2019-11-28T01:55:44","Actor":"dotnet-maestro[bot]","Number":"13135","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.4\r\n- **Date Produced**: 11/28/2019 1:42 AM\r\n- **Commit**: 15b6aee2f5702a8d38bf9063e52f34d8e689ab72\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19577.4\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13135","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13135)"},{"Id":"529644622","IsPullRequest":true,"CreatedAt":"2019-11-28T01:25:13","Actor":"dotnet-maestro[bot]","Number":"13134","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.2\r\n- **Date Produced**: 11/28/2019 1:08 AM\r\n- **Commit**: ea3020cd0422107d6f982b363aa16c59fe2e846e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19577.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13134","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13134)"},{"Id":"529636031","IsPullRequest":true,"CreatedAt":"2019-11-28T00:51:32","Actor":"dotnet-maestro[bot]","Number":"13133","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13133","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13133)"},{"Id":"529633633","IsPullRequest":true,"CreatedAt":"2019-11-28T00:41:49","Actor":"dotnet-maestro[bot]","Number":"13132","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13132","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13132)"},{"Id":"529602649","IsPullRequest":true,"CreatedAt":"2019-11-27T22:38:47","Actor":"wtgodbe","Number":"13131","RawContent":null,"Title":"Pin dependency on Microsoft.Netcore.App refpack to 3.1.0","State":"open","Body":"@nguerrera @mmitche PTAL","Url":"https://github.com/dotnet/cli/pull/13131","RelatedDescription":"Open PR \"Pin dependency on Microsoft.Netcore.App refpack to 3.1.0\" (#13131)"},{"Id":"529412032","IsPullRequest":true,"CreatedAt":"2019-11-27T15:18:40","Actor":"dotnet-maestro[bot]","Number":"13130","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6319\r\n- **Date Produced**: 11/21/2019 2:19 AM\r\n- **Commit**: ba2a72ac9afd9e7260798a6ad14088297570b350\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6319\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13130","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13130)"},{"Id":"529079605","IsPullRequest":true,"CreatedAt":"2019-11-27T02:40:15","Actor":"dotnet-maestro[bot]","Number":"13129","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.9\r\n- **Date Produced**: 11/27/2019 1:52 AM\r\n- **Commit**: f3f2dd583fffa254015fc21ff0e45784b333256d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13129","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13129)"},{"Id":"529075631","IsPullRequest":true,"CreatedAt":"2019-11-27T02:25:13","Actor":"dotnet-maestro[bot]","Number":"13128","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.08\r\n- **Date Produced**: 11/27/2019 1:35 AM\r\n- **Commit**: 547ae1f5f072d130b32ec3089876711070b2dc4f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-08\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13128","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13128)"},{"Id":"529047920","IsPullRequest":true,"CreatedAt":"2019-11-27T01:15:29","Actor":"dotnet-maestro[bot]","Number":"13127","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.7\r\n- **Date Produced**: 11/26/2019 11:48 PM\r\n- **Commit**: 3175a035df26e4082ad5513be661400ce722d0f5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13127","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13127)"},{"Id":"529036669","IsPullRequest":true,"CreatedAt":"2019-11-27T01:05:44","Actor":"dotnet-maestro[bot]","Number":"13126","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.05\r\n- **Date Produced**: 11/26/2019 11:00 PM\r\n- **Commit**: bf4c7b66bc5aea96c8569384aa11fa88a8966cf8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-05\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13126","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13126)"},{"Id":"528281071","IsPullRequest":true,"CreatedAt":"2019-11-26T23:33:18","Actor":"dotnet-maestro[bot]","Number":"13121","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.4\r\n- **Date Produced**: 11/26/2019 10:04 PM\r\n- **Commit**: 07f2d6521b95b6a5e781dc2597e0d6a2c3849f3c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13121","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13121)"},{"Id":"528993213","IsPullRequest":true,"CreatedAt":"2019-11-26T22:25:32","Actor":"dotnet-maestro[bot]","Number":"13125","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.03\r\n- **Date Produced**: 11/26/2019 9:04 PM\r\n- **Commit**: 62e9d13376ca698367b5f7682cce8a2bf4666f42\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-03\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13125","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13125)"},{"Id":"527467895","IsPullRequest":true,"CreatedAt":"2019-11-26T16:32:16","Actor":"dotnet-maestro[bot]","Number":"13114","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13114","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13114)"},{"Id":"528487412","IsPullRequest":true,"CreatedAt":"2019-11-26T04:55:11","Actor":"dotnet-maestro[bot]","Number":"13124","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191125.14\r\n- **Date Produced**: 11/26/2019 4:11 AM\r\n- **Commit**: 7db696998c6ae4852fbf01827efdb10634e22668\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19575.14\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13124","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13124)"},{"Id":"528459182","IsPullRequest":true,"CreatedAt":"2019-11-26T03:11:26","Actor":"flcdrg","Number":"13123","RawContent":null,"Title":"Add switch to enable searching global path for existing SDK version","State":"open","Body":"Implements #11058","Url":"https://github.com/dotnet/cli/pull/13123","RelatedDescription":"Open PR \"Add switch to enable searching global path for existing SDK version\" (#13123)"},{"Id":"528336049","IsPullRequest":true,"CreatedAt":"2019-11-26T01:27:58","Actor":"wtgodbe","Number":"13122","RawContent":null,"Title":"Add trigger for internal builds","State":"closed","Body":"Needed for the internal builds for 3.1.1. CC @wli3 @livarcocc @mmitche ","Url":"https://github.com/dotnet/cli/pull/13122","RelatedDescription":"Closed or merged PR \"Add trigger for internal builds\" (#13122)"},{"Id":"527464709","IsPullRequest":true,"CreatedAt":"2019-11-25T16:00:23","Actor":"dotnet-maestro[bot]","Number":"13113","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13113","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13113)"},{"Id":"527634913","IsPullRequest":false,"CreatedAt":"2019-11-24T01:37:22","Actor":"alexzandros","Number":"13120","RawContent":null,"Title":"Container Image cannot run default console app in F#","State":"open","Body":"Same problem when trying to run the default F# console app\r\ndotnet --version\r\n3.0.101\r\nSystem.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\nRunning inside a container created from the latest image present in MS images repository.\r\n\r\n_Originally posted by @alexzandros in https://github.com/dotnet/cli/issues/11231#issuecomment-557848531_","Url":"https://github.com/dotnet/cli/issues/13120","RelatedDescription":"Open issue \"Container Image cannot run default console app in F#\" (#13120)"},{"Id":"527613050","IsPullRequest":true,"CreatedAt":"2019-11-23T22:10:26","Actor":"dotnet-maestro[bot]","Number":"13119","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191123.3\r\n- **Date Produced**: 11/23/2019 8:16 PM\r\n- **Commit**: c31f51e5c778dc817862d0c932e7cfe9223d4899\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19573.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13119","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13119)"},{"Id":"527524674","IsPullRequest":true,"CreatedAt":"2019-11-23T08:20:27","Actor":"dotnet-maestro[bot]","Number":"13118","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.19\r\n- **Date Produced**: 11/23/2019 6:59 AM\r\n- **Commit**: 814f3bd24b68db6881273d1639673842d697486e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.19\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13118","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13118)"},{"Id":"527515488","IsPullRequest":true,"CreatedAt":"2019-11-23T08:11:12","Actor":"dotnet-maestro[bot]","Number":"13116","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.09\r\n- **Date Produced**: 11/23/2019 6:43 AM\r\n- **Commit**: 626c14488261f91192e39a4c6c2d9480a7cd1f37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19572-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19572-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19572-09\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19572-09\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19572-09\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13116","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13116)"},{"Id":"527519906","IsPullRequest":true,"CreatedAt":"2019-11-23T07:25:28","Actor":"dotnet-maestro[bot]","Number":"13117","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.8\r\n- **Date Produced**: 11/23/2019 5:51 AM\r\n- **Commit**: 9541fa09c354ea9288db00b8c1b95a34a3abdcdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19572.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19572.8\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19572.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19572.8\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19572.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19572.8\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13117","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13117)"},{"Id":"527512289","IsPullRequest":true,"CreatedAt":"2019-11-23T05:45:26","Actor":"dotnet-maestro[bot]","Number":"13115","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.16\r\n- **Date Produced**: 11/23/2019 4:29 AM\r\n- **Commit**: 9fded4c4aad794c7bb1152375a2eff092bb52a86\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13115","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13115)"},{"Id":"527087356","IsPullRequest":true,"CreatedAt":"2019-11-23T04:13:46","Actor":"dotnet-maestro[bot]","Number":"13110","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191122.05\r\n- **Date Produced**: 11/23/2019 2:41 AM\r\n- **Commit**: 84c8bdc161ce5f1e414eb76993a8ec388dc6f167\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19572-05\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19572-05\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13110","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13110)"},{"Id":"527406566","IsPullRequest":true,"CreatedAt":"2019-11-23T00:16:17","Actor":"wli3","Number":"13111","RawContent":null,"Title":"update branding 3.1.101 servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13111","RelatedDescription":"Closed or merged PR \"update branding 3.1.101 servicing\" (#13111)"},{"Id":"527462382","IsPullRequest":true,"CreatedAt":"2019-11-22T23:28:43","Actor":"dotnet-maestro-bot","Number":"13112","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13112","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13112)"},{"Id":"527041854","IsPullRequest":true,"CreatedAt":"2019-11-22T08:40:38","Actor":"dotnet-maestro[bot]","Number":"13109","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.09\r\n- **Date Produced**: 11/22/2019 6:59 AM\r\n- **Commit**: e16006fdb878571435c093f2fda5f4e6daa55654\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-09\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-09\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13109","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13109)"},{"Id":"526989771","IsPullRequest":true,"CreatedAt":"2019-11-22T05:35:29","Actor":"dotnet-maestro[bot]","Number":"13108","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.08\r\n- **Date Produced**: 11/22/2019 4:11 AM\r\n- **Commit**: ced6a9739002ddbc2470f0b42a21306c49b18ab1\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-08\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-08\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13108","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13108)"},{"Id":"526948890","IsPullRequest":true,"CreatedAt":"2019-11-22T02:55:28","Actor":"dotnet-maestro[bot]","Number":"13107","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.06\r\n- **Date Produced**: 11/22/2019 1:26 AM\r\n- **Commit**: 67d553d070f4e1e25e64ba45c5de21e71675af7a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19571-06\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19571-06\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13107","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13107)"},{"Id":"526925066","IsPullRequest":true,"CreatedAt":"2019-11-22T00:57:39","Actor":"dotnet-maestro-bot","Number":"13106","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"open","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* dotnet-maestro[bot]\n* mmitche\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13106","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#13106)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"529638047","IsPullRequest":true,"CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Number":"1660","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660)"},{"Id":"529573719","IsPullRequest":false,"CreatedAt":"2019-11-27T21:33:26","Actor":"timdoke","Number":"1659","RawContent":null,"Title":"Generic class operators derived from interface seems broken","State":"closed","Body":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Closed issue \"Generic class operators derived from interface seems broken\" (#1659)"},{"Id":"526765953","IsPullRequest":false,"CreatedAt":"2019-11-25T02:23:45","Actor":"arizvisa","Number":"1657","RawContent":null,"Title":"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed","State":"closed","Body":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh.","Url":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Closed issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657)"},{"Id":"527469491","IsPullRequest":true,"CreatedAt":"2019-11-23T01:19:55","Actor":"dotnet-maestro[bot]","Number":"1658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658)"},{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"},{"Id":"522220691","IsPullRequest":true,"CreatedAt":"2019-11-13T13:59:11","Actor":"dotnet-maestro[bot]","Number":"1651","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 9:07 AM\r\n- **Commit**: a528006b4536e5b73227285b57d2a56116532506\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1651","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1651)"},{"Id":"522208590","IsPullRequest":true,"CreatedAt":"2019-11-13T13:01:39","Actor":"dotnet-maestro[bot]","Number":"1650","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1650)"},{"Id":"521547575","IsPullRequest":true,"CreatedAt":"2019-11-12T14:07:43","Actor":"dotnet-maestro[bot]","Number":"1649","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.1\r\n- **Date Produced**: 11/12/2019 10:06 AM\r\n- **Commit**: 21278249c6b417469737b20445a0dd045cd1b16e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1649","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1649)"},{"Id":"520598776","IsPullRequest":true,"CreatedAt":"2019-11-10T13:31:00","Actor":"dotnet-maestro[bot]","Number":"1648","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 6:07 AM\r\n- **Commit**: bc115700c3ece60acd6b8dbe4b0bdb8f6f80c756\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1648","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1648)"},{"Id":"520424908","IsPullRequest":true,"CreatedAt":"2019-11-09T14:01:26","Actor":"dotnet-maestro[bot]","Number":"1647","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.1\r\n- **Date Produced**: 11/9/2019 9:20 AM\r\n- **Commit**: f546aa9e76c776f2c27e30dfb91c50d8f62da2f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1647","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1647)"},{"Id":"520010128","IsPullRequest":true,"CreatedAt":"2019-11-08T13:28:42","Actor":"dotnet-maestro[bot]","Number":"1646","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191107.22\r\n- **Date Produced**: 11/8/2019 8:30 AM\r\n- **Commit**: 7a318879f787e9feee9266fe9e876ee2411b548f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19557.22\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1646","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1646)"},{"Id":"519262813","IsPullRequest":true,"CreatedAt":"2019-11-07T13:26:42","Actor":"dotnet-maestro[bot]","Number":"1645","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191106.12\r\n- **Date Produced**: 11/7/2019 8:14 AM\r\n- **Commit**: a4f04476ea74c61a52168cf0b31c0281822ecad3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19556.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1645","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1645)"},{"Id":"518467413","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:10","Actor":"dotnet-maestro[bot]","Number":"1644","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191105.8\r\n- **Date Produced**: 11/6/2019 9:54 AM\r\n- **Commit**: 9e94e2552ad869005f30f6a59eb638c544d3efdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19555.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1644","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1644)"},{"Id":"518175351","IsPullRequest":false,"CreatedAt":"2019-11-06T01:11:51","Actor":"tchitnis","Number":"1643","RawContent":null,"Title":"Debug.Assert causing entire test run to be aborted","State":"open","Body":"Similar to the issues reported here:\r\n\r\nhttps://github.com/Microsoft/vstest/issues/1022\r\nhttps://github.com/dotnet/coreclr/issues/22569\r\n\r\nI still see the same error/issue on .net standard 2.0 with MSTest. Sounds like it was fixed with .Net Core 3.0, can someone comment on whether a similar fix was applied to .Net Standard as well?","Url":"https://github.com/dotnet/standard/issues/1643","RelatedDescription":"Open issue \"Debug.Assert causing entire test run to be aborted\" (#1643)"},{"Id":"517769508","IsPullRequest":true,"CreatedAt":"2019-11-05T13:42:32","Actor":"dotnet-maestro[bot]","Number":"1642","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191104.10\r\n- **Date Produced**: 11/5/2019 7:44 AM\r\n- **Commit**: ee038925bde85c1c45c52f235ab09ea03b9c126c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19554.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1642)"},{"Id":"517192004","IsPullRequest":false,"CreatedAt":"2019-11-04T14:33:56","Actor":"peni4142","Number":"1641","RawContent":null,"Title":"Regex Bug","State":"open","Body":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Open issue \"Regex Bug\" (#1641)"},{"Id":"517142571","IsPullRequest":true,"CreatedAt":"2019-11-04T13:21:47","Actor":"dotnet-maestro[bot]","Number":"1640","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1640)"},{"Id":"516826733","IsPullRequest":true,"CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Number":"1639","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1639)"},{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"529660113","IsPullRequest":false,"CreatedAt":"2019-11-28T02:35:42","Actor":"DaRosenberg","Number":"42746","RawContent":null,"Title":"InvariantCulture string comparison is inconsistent between Windows and macOS","State":"open","Body":"Verified in .NET Core 3.0 on Windows 10 1909 and macOS 10.15.1.\r\n\r\nThis expression:\r\n\r\n```cs\r\nSystem.StringComparer.InvariantCulture.Compare(\".\", \"_\")\r\n```\r\n\r\nReturns `-1` on Windows, but `1` on macOS.\r\n\r\nSince the invariant culture is being used, expected result is for string comparison to behave the same.\r\n\r\nThis is a blocking issue for us, because we are building a cross-platform tool whose output goes into shared data storage, and contains sorted strings. Currently, Windows users and Mac users overwrite each others' data with changes in sorting.","Url":"https://github.com/dotnet/corefx/issues/42746","RelatedDescription":"Open issue \"InvariantCulture string comparison is inconsistent between Windows and macOS\" (#42746)"},{"Id":"529636218","IsPullRequest":true,"CreatedAt":"2019-11-28T02:02:44","Actor":"dotnet-maestro[bot]","Number":"42745","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42745","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#42745)"},{"Id":"529634564","IsPullRequest":true,"CreatedAt":"2019-11-28T01:46:00","Actor":"dotnet-maestro[bot]","Number":"42744","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42744","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42744)"},{"Id":"529559765","IsPullRequest":true,"CreatedAt":"2019-11-27T20:30:00","Actor":"wfurt","Number":"42743","RawContent":null,"Title":"WIP: test some ideas","State":"open","Body":"this is only to run test. I will close after. ","Url":"https://github.com/dotnet/corefx/pull/42743","RelatedDescription":"Open PR \"WIP: test some ideas\" (#42743)"},{"Id":"529449217","IsPullRequest":true,"CreatedAt":"2019-11-27T18:00:49","Actor":"mmitche","Number":"42741","RawContent":null,"Title":"[release/3.0] Stabilize package versions","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42741","RelatedDescription":"Closed or merged PR \"[release/3.0] Stabilize package versions\" (#42741)"},{"Id":"528924117","IsPullRequest":true,"CreatedAt":"2019-11-27T16:10:52","Actor":"dotnet-maestro-bot","Number":"42723","RawContent":null,"Title":"Update BuildTools to rc1-04626-02 (release/uwp6.2)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42723","RelatedDescription":"Closed or merged PR \"Update BuildTools to rc1-04626-02 (release/uwp6.2)\" (#42723)"},{"Id":"529314731","IsPullRequest":false,"CreatedAt":"2019-11-27T12:25:02","Actor":"hillin","Number":"42739","RawContent":null,"Title":"NullRefereceException when using a JsonConverter without a parameterless constructor","State":"open","Body":"https://github.com/dotnet/corefx/blob/dfe3ab2f0205436e23b93c369ee0b2e41a4973e0/src/System.Text.Json/src/System/Text/Json/Serialization/JsonSerializerOptions.Converters.cs#L208-L209\r\n\r\n`ctor` will be `null` if `type` does not have a parameterless constructor.","Url":"https://github.com/dotnet/corefx/issues/42739","RelatedDescription":"Open issue \"NullRefereceException when using a JsonConverter without a parameterless constructor\" (#42739)"},{"Id":"529195231","IsPullRequest":false,"CreatedAt":"2019-11-27T12:05:29","Actor":"KamranShahid","Number":"42738","RawContent":null,"Title":".net core 3.0 getting System.Threading.Tasks.TaskCanceledException: The operation was canceled.","State":"closed","Body":"I have .net core 3.0 web api project where i am calling my .net core 3.0 service (systemd in linux) httplistener calls.\r\nI am getting error\r\n\r\n```\r\nawait client.PostAsync(url, content).ConfigureAwait(false)\r\nSystem.Threading.Tasks.TaskCanceledException: The operation was canceled.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n```\r\n\r\nMy calling method is \r\n\r\n```\r\n\t\tpublic static async Task<GenerricApiResponsewithResult> ProcessWebRequestWithResponsetype<T>(string url, string friendlyName, T req)\r\n        {\r\n            var obj = new GenerricApiResponsewithResult();\r\n            try\r\n            {\r\n                using (var client = new HttpClient())\r\n                {\r\n                    var jsonRequest = JsonSerializer.Serialize(req);\r\n                    client.DefaultRequestHeaders.ExpectContinue = false;\r\n                    var content = new StringContent(jsonRequest);\r\n                    content.Headers.Clear();\r\n                    content.Headers.ContentType = new MediaTypeHeaderValue(\"application/json\");\r\n                    \r\n                    var response = await client.PostAsync(url, content).ConfigureAwait(false);\r\n                    obj.HttpResponseCode = response.StatusCode;\r\n                    if (response.StatusCode == HttpStatusCode.OK)\r\n                    {\r\n                        obj.Response = await response.Content.ReadAsStringAsync();\r\n                        if (obj.Response != null && IsValidJson(obj.Response))\r\n                        {\r\n                            obj = JsonSerializer.Deserialize<GenerricApiResponsewithResult>(obj.Response);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                        obj.IsError = true;\r\n                        obj.Response = response.StatusCode.ToString();\r\n                    }\r\n                    client.Dispose();\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                obj.IsError = true;\r\n                obj.Exception = ex;\r\n\r\n                obj.Response = $\"Error Processing a call to {friendlyName}. Please see logs\";\r\n                Logger.Fatal(obj.Response + \" \" + ex.Message, ex);\r\n            }\r\n            return obj;\r\n        }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42738","RelatedDescription":"Closed issue \".net core 3.0 getting System.Threading.Tasks.TaskCanceledException: The operation was canceled.\" (#42738)"},{"Id":"528993585","IsPullRequest":true,"CreatedAt":"2019-11-27T05:44:10","Actor":"dotnet-maestro-bot","Number":"42728","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42728","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42728)"},{"Id":"529121223","IsPullRequest":false,"CreatedAt":"2019-11-27T05:17:34","Actor":"kamaruddin-desai","Number":"42737","RawContent":null,"Title":"Support for reading the windows events from the  Linux host","State":"open","Body":"I was happy that when I heard the .NET Core can be used to build apps onto the across the platforms.\r\nSpecifically the Linux one. I've code snippet which reads the windows event from the windows localhost or the remote windows host. For that purpose, I've created the below issue and the code snippet that I am using can be seen here[https://github.com/dotnet/corefx/issues/40925](https://github.com/dotnet/corefx/issues/40925).\r\n\r\nThi issue focus on the milestone to \r\n\r\n> **Support for reading the windows events from the  Linux host**\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42737","RelatedDescription":"Open issue \"Support for reading the windows events from the  Linux host\" (#42737)"},{"Id":"529052742","IsPullRequest":true,"CreatedAt":"2019-11-27T03:28:09","Actor":"Anipik","Number":"42735","RawContent":null,"Title":"disabling publishing of stable packages on 3.1","State":"closed","Body":"I missed to disable the packages build in branding due to which internal build was failing","Url":"https://github.com/dotnet/corefx/pull/42735","RelatedDescription":"Closed or merged PR \"disabling publishing of stable packages on 3.1\" (#42735)"},{"Id":"529082915","IsPullRequest":false,"CreatedAt":"2019-11-27T03:03:40","Actor":"Dogwei","Number":"42736","RawContent":null,"Title":"What is the difference between '_methodPtrAux' and '_methodPtr' in The private fields for 'System.Delegate'?","State":"closed","Body":"As title.\r\nI need this knowledge.\r\nPlease.","Url":"https://github.com/dotnet/corefx/issues/42736","RelatedDescription":"Closed issue \"What is the difference between '_methodPtrAux' and '_methodPtr' in The private fields for 'System.Delegate'?\" (#42736)"},{"Id":"529045950","IsPullRequest":false,"CreatedAt":"2019-11-27T00:32:52","Actor":"replaysMike","Number":"42734","RawContent":null,"Title":"PublishTrimmed=true issue - TypeInitializationException in System.Runtime.Serialization.Formatters","State":"open","Body":"When using PublishTrimmed=true for publishing single file applications in .net core, I get a runtime error when performing binary serialization/deserialization in System.Runtime.Serialization.Formatters library.\r\n\r\n```\r\n<PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n    <PublishReadyToRun>true</PublishReadyToRun>\r\n    <PublishReadyToRunShowWarnings>true</PublishReadyToRunShowWarnings>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n```\r\nThe error during runtime received is:\r\n\r\n```\r\nSystem.TypeInitializationException: The type initializer for 'System.Runtime.Serialization.Formatters.Binary.Converter' threw an exception.\r\n ---> System.IO.FileNotFoundException: Could not load file or assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified.\r\nFile name: 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n   at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly assemblyContext, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, StackCrawlMark& stackMark, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.Assembly.Load(String assemblyString)\r\n   at System.Runtime.Serialization.Formatters.Binary.Converter..cctor()\r\n\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.get_SystemAssemblyInfo()\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryObjectWithMapTyped record)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryHeaderEnum binaryHeaderEnum)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.Run()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n```\r\n\r\nI also tried adding the following to address this error:\r\n```\r\n<ItemGroup>\r\n    <TrimmerRootAssembly Include=\"System.Runtime.Serialization.Formatters.Binary.Converter\" />\r\n</ItemGroup>\r\n```\r\nbut that prevents it from publishing as it returns an error: `C:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(87,5): error MSB6006: \"dotnet.exe\" exited with code -1073741819.`\r\n\r\nI can disable PublishTrimmed=true for now, but I would think there's a way to address this.\r\n\r\nThe application is a .Net Core 3 app, which references two multi-target libraries which are `netstandard2.0;net462`","Url":"https://github.com/dotnet/corefx/issues/42734","RelatedDescription":"Open issue \"PublishTrimmed=true issue - TypeInitializationException in System.Runtime.Serialization.Formatters\" (#42734)"},{"Id":"529044580","IsPullRequest":false,"CreatedAt":"2019-11-27T00:27:57","Actor":"danmosemsft","Number":"42733","RawContent":null,"Title":"⛔ Please do not open new PR's and issues in this repo ⛔","State":"open","Body":"We have moved! All new issues and PR's now should be opened in https://github.com/dotnet/runtime.\r\n\r\nIn a little bit, all existing PR's in this repo will be closed, and all existing issues will be migrated. Meantime, new ones should go over there.\r\n\r\nMore details here.\r\n\r\n(Pinning this so everyone sees it.)","Url":"https://github.com/dotnet/corefx/issues/42733","RelatedDescription":"Open issue \"⛔ Please do not open new PR's and issues in this repo ⛔\" (#42733)"},{"Id":"529035602","IsPullRequest":true,"CreatedAt":"2019-11-27T00:22:54","Actor":"martynasapanavicius","Number":"42732","RawContent":null,"Title":"update missing docs for System.IO.UnmanagedMemoryStream","State":"closed","Body":"Was looking into System.IO.UnmanagedMemoryStream.ReadByte() return documentation because apparently it has some encoded meaning to it. Updated that one + some other docs while looking around.","Url":"https://github.com/dotnet/corefx/pull/42732","RelatedDescription":"Closed or merged PR \"update missing docs for System.IO.UnmanagedMemoryStream\" (#42732)"},{"Id":"529009409","IsPullRequest":true,"CreatedAt":"2019-11-26T23:45:54","Actor":"dotnet-maestro[bot]","Number":"42731","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 9:25 PM\r\n- **Commit**: 016d9d67a7be81c68c6d870b7e7de31c4b4fb468\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-rtm.19576.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-rtm.19576.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-rtm.19576.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42731","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42731)"},{"Id":"528999476","IsPullRequest":false,"CreatedAt":"2019-11-26T22:09:59","Actor":"Uzivatel919","Number":"42729","RawContent":null,"Title":"New API proposal; new collection interfacing, new read-only models – read-only & alter-also design pattern","State":"open","Body":"## Abstract\r\n\r\nRecently I went through ```ReadOnlyCollection<T>``` ([1](https://referencesource.microsoft.com/#mscorlib/system/collections/objectmodel/readonlycollection.cs,aafef79f3fced6c2), [2](https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel.readonlycollection-1?view=netframework-4.8)) finding it [generaly failing](https://github.com/dotnet/corefx/issues/42699) by design terms.\r\n\r\nI reviewed the origin (root cause) and I found out that some collection designs are not as good as they could.\r\n\r\nNowadays any movement toward protectivity and declarativity is beyond nice-to-have. Today readonly fields, structs, parameters (in) are part of programers’ day. (Let mention there ```ReadOnlySpan<T>```, ```ReadOnlyMemory<T>```.)\r\n\r\nThe same is missing on the collection level in framework in a way we get used to feel such presence. There exists in [System.Collections.ObjectModel](https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel?view=netframework-4.8) mentioned ```ReadOnlyCollection<T>``` that is declared to be base type for collection of kind. Must be noted that dedicated base class throws 12 times NotImplementedException. 🙅‍♂️ \r\n\r\nIf one review interface like [```IReadOnlyList<T>```](https://docs.microsoft.com/en-gb/dotnet/api/system.collections.generic.ireadonlylist-1?view=netframework-4.8) or [```IReadOnlyCollection<T>```](https://docs.microsoft.com/en-gb/dotnet/api/system.collections.generic.ireadonlycollection-1?view=netframework-4.8) surely will find that these interfaces are capable of little making them inapplicable for any reasonable read-only collection designing on framework level since for any advanced work one have to implement other interface or find out other workaround (like acting classic type as read-only one). In any place no collection alteration will ever come the read-only type could be used – idea for resource management.\r\n\r\nAs it was noted actual trend confirms read-only tendecies and wide popularity for it. For a such new trends new collections could become. I find that making design in let name it **read-only & alter-also pairs** fits this trend and demands. Beside popularity of readonlyness one can find out that such designs are really proper in opposite to actual ones.\r\n\r\nThat is observable at ```ReadOnlyCollection<T>```. There is no general tendecy about its usage although commonly we declare readonly fields (they are stil less efective than classic fields since defensive copying), use in paramater modifiers etc. This is likely due its bad design and aside this also by fact that it is sited in some “top-level” designers’ namespace. Worth noting that regardless its naming it exposes indexer – like lists do. I found this far away from proper. It is just some dirty sufficient solution to readonlyness for case where it must be. More proper is to go with as simple type as it is needed like it is aforementioned but with such read-only collectioning framework avoids this.\r\n\r\n## Concrete\r\n\r\nI prepared some design samples for demonstration of such **read-only & alter-also** patterning.\r\n\r\nThis pattern is about building “classic” types on top of their read-only counterparts.\r\n\r\n#### Sample for non-generics:\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      /// <remarks>\r\n      ///  Completely replaces System.Collections.ICollection that does not exists at all.\r\n      /// </remarks>\r\n      public interface IReadOnlyCollection : System.Collections.IEnumerable\r\n      {\r\n        void CopyTo(Array array, int index);\r\n\r\n        int Count { get; }\r\n\r\n        Object SyncRoot { get; }\r\n\r\n        bool IsSynchronized { get; }\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      interface IReadOnlyList : IReadOnlyCollection\r\n      {    \r\n        Object this[int index] { get; }\r\n\r\n        bool Contains(Object value);\r\n        \r\n        int IndexOf(Object value);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      interface IList : IReadOnlyList\r\n      {\r\n        new Object this[int index] { get; set; }\r\n\r\n        int Add(Object value);\r\n\r\n        void Clear();\r\n\r\n        bool IsFixedSize { get; }\r\n\r\n        void Insert(int index, Object value);\r\n\r\n        void Remove(Object value);\r\n\r\n        void RemoveAt(int index);\r\n      }\r\n    }\r\n\r\n#### Sample for generics:\r\n    \r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IReadOnlyCollection<T> : System.Collections.Generic.IEnumerable<T>\r\n      {  \r\n        int Count { get; }\r\n\r\n        bool Contains(T item);\r\n\r\n        void CopyTo(T[] array, int arrayIndex);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface ICollection<T> : IReadOnlyCollection<T>\r\n      {        \r\n        void Add(T item);\r\n\r\n        void Clear();\r\n\r\n        bool Remove(T item);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IReadOnlyList<T> : IReadOnlyCollection<T>\r\n      {\r\n        T this[int index] { get; }\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IList<T> : IReadOnlyList<T>, ICollection<T>\r\n      {\r\n        new T this[int index] { get; set; }\r\n\r\n        int IndexOf(T item);\r\n        \r\n        void Insert(int index, T item);\r\n        \r\n        void RemoveAt(int index);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class ReadOnlyCollection<T> :\r\n        Interface.IReadOnlyCollection<T>,\r\n        Collection.Interface.IReadOnlyCollection\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class Collection<T> :\r\n        ReadOnlyCollection<T>, \r\n        Interface.ICollection<T>\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class ReadOnlyList<T> :\r\n        ReadOnlyCollection<T>, \r\n        Interface.IReadOnlyList<T>,\r\n        Collection.Interface.IReadOnlyList\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class List<T> : \r\n        ReadOnlyList<T>, \r\n        Interface.IList<T>,\r\n        Collections.IList\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n\r\nGoing along with this approach the benifits are:\r\n1. Straight hierarchy logic where all non-altering executions belongs to read-only type/interface.\r\n2. Consumer is provided with read-only types that are not lame brothers of their counterparts while alter-also types are fully capable.\r\n3. Resource efficiency. Since alter-also types are bigger in bytes, consumer can go on with lightweight but capable read-only types.\r\n4. Brings popular readonlyness to consumers instead of code magicians.\r\n\r\n## Conclusion:\r\n\r\nI am totally aware about actual count of types in framework build on actual collection types and interfaces but still any move forward is not move backward or stiff attitude.\r\n\r\nAlso I know that such redesign is not just about to copy paste because time advanced and other changes would be included also in bunch.\r\n\r\nIt is not possible to look readonlyness popularity over and the same should be seen on framework collections. Not such stain like ```System.Collections.ObjectModel.ReadOnlyCollection<T>```.  (No any of read-only kind of the proper ones.)\r\n\r\nThis read-only & alter-also desing results in ```ReadOnlyList<T>``` that never throws for any member of any interfaces that it contracts to implement. That is far better than 12 throws.\r\n\r\nSince actual framework collection robustness I suppose that such new designs should come as separated bunch in dedicated namespace like System.Collections.Fine. From there they can leak out.","Url":"https://github.com/dotnet/corefx/issues/42729","RelatedDescription":"Open issue \"New API proposal; new collection interfacing, new read-only models – read-only & alter-also design pattern\" (#42729)"},{"Id":"528950638","IsPullRequest":true,"CreatedAt":"2019-11-26T21:53:14","Actor":"Anipik","Number":"42727","RawContent":null,"Title":"[release/3.0] Update SslClientAuthenticationOptionsExtensions.ShallowClone to copy CipherSuitesPolicy","State":"closed","Body":"Already ported to 3.1\r\n\r\nhttps://github.com/dotnet/corefx/pull/42694","Url":"https://github.com/dotnet/corefx/pull/42727","RelatedDescription":"Closed or merged PR \"[release/3.0] Update SslClientAuthenticationOptionsExtensions.ShallowClone to copy CipherSuitesPolicy\" (#42727)"},{"Id":"528946936","IsPullRequest":true,"CreatedAt":"2019-11-26T20:34:17","Actor":"MattGal","Number":"42725","RawContent":null,"Title":"Update buildtools to get helix fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42725","RelatedDescription":"Closed or merged PR \"Update buildtools to get helix fixes\" (#42725)"},{"Id":"528949248","IsPullRequest":true,"CreatedAt":"2019-11-26T20:15:20","Actor":"dotnet-maestro-bot","Number":"42726","RawContent":null,"Title":"Update BuildTools to preview1-04626-03 (release/2.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42726","RelatedDescription":"Open PR \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#42726)"},{"Id":"528941213","IsPullRequest":true,"CreatedAt":"2019-11-26T20:00:37","Actor":"dotnet-maestro-bot","Number":"42724","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42724","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#42724)"},{"Id":"528921876","IsPullRequest":true,"CreatedAt":"2019-11-26T19:54:38","Actor":"MattGal","Number":"42721","RawContent":null,"Title":"Update BuildTools version ","State":"closed","Body":"Needed to get Send-To-Helix fixes into the 2.1 rel branch","Url":"https://github.com/dotnet/corefx/pull/42721","RelatedDescription":"Closed or merged PR \"Update BuildTools version \" (#42721)"},{"Id":"528923039","IsPullRequest":true,"CreatedAt":"2019-11-26T19:18:53","Actor":"dotnet-maestro-bot","Number":"42722","RawContent":null,"Title":"Update BuildTools to rc1-04626-02 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42722","RelatedDescription":"Open PR \"Update BuildTools to rc1-04626-02 (release/2.1)\" (#42722)"},{"Id":"528757817","IsPullRequest":false,"CreatedAt":"2019-11-26T17:40:13","Actor":"devhl-labs","Number":"42720","RawContent":null,"Title":"Utf8JsonWriter writes invalid JSON","State":"closed","Body":"The below code shows how the serializer is failing for me.  It is giving me invalid JSON.\r\n\r\n```\r\n/*\r\nThe below code outputs this incorrect json:\r\n{\r\n  \"Role\": \r\n  \"Role\": \"admin\"\r\n}\r\n*/\r\n\r\n\r\npublic class Test\r\n{\r\n    public Role Role { get; set; }\r\n}\r\n\r\n\r\npublic static async Task Main(string[] args)\r\n{\r\n    JsonSerializerOptions options = new JsonSerializerOptions();\r\n\r\n    options.WriteIndented = true;\r\n\r\n    options.Converters.Add(new RoleConverter());\r\n\r\n    var Test = new Test { Role = devhl.CocApi.Enums.Role.Elder };\r\n\r\n    var c = JsonSerializer.Serialize(Test, options);\r\n    //inspect the output and observe improper JSON\r\n}\r\n\r\n\r\npublic class RoleConverter : JsonConverter<Role>\r\n{\r\n    public override Role Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\r\n    {\r\n        //return a Role object   \r\n    }\r\n\r\n    public override void Write(Utf8JsonWriter writer, Role value, JsonSerializerOptions options)\r\n    {\r\n        string enumMemberAttrValue = value.ToEnumMemberAttrValue();\r\n\r\n        writer.WriteString(\"Role\", enumMemberAttrValue);\r\n    }\r\n}\r\n\r\npublic static class Extensions\r\n{\r\n    public static string ToEnumMemberAttrValue(this Enum @enum)\r\n    {\r\n        var attr = @enum.GetType().GetMember(@enum.ToString()).FirstOrDefault()?.\r\n                GetCustomAttributes(false).OfType<EnumMemberAttribute>().\r\n                FirstOrDefault();\r\n\r\n        if (attr == null) return @enum.ToString();\r\n\r\n        return attr.Value;\r\n        //returns \"admin\" \r\n    }\r\n}\r\n\r\npublic enum Role : int\r\n{\r\n    [EnumMember(Value = \"unknown\")]\r\n    Unknown = 0,\r\n    [EnumMember(Value = \"member\")]\r\n    Member = 10,\r\n    [EnumMember(Value = \"admin\")]\r\n    Elder = 20,\r\n    [EnumMember(Value = \"coLeader\")]\r\n    Coleader = 30,\r\n    [EnumMember(Value = \"leader\")]\r\n    Leader = 40\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42720","RelatedDescription":"Closed issue \"Utf8JsonWriter writes invalid JSON\" (#42720)"},{"Id":"528335093","IsPullRequest":true,"CreatedAt":"2019-11-26T17:07:51","Actor":"korsaire","Number":"42714","RawContent":null,"Title":"Throwing DirectoryNotFoundException when part of image path does not exist","State":"closed","Body":"Fixes #42294. ","Url":"https://github.com/dotnet/corefx/pull/42714","RelatedDescription":"Closed or merged PR \"Throwing DirectoryNotFoundException when part of image path does not exist\" (#42714)"},{"Id":"528725156","IsPullRequest":false,"CreatedAt":"2019-11-26T13:36:11","Actor":"piotrsz1234","Number":"42719","RawContent":null,"Title":"Simplifying the OrderedEnumerable.TryGetFirst method ","State":"closed","Body":"I've noticed, that method TryGetFirst in OrderedEnumerable, after finding the matching value, is still searching. I'd like to ask, does it has to be done like this, because some of the cases, or that could be simplifyed to simple search loop.\r\n\r\nSorry for bad English\r\nRegards","Url":"https://github.com/dotnet/corefx/issues/42719","RelatedDescription":"Closed issue \"Simplifying the OrderedEnumerable.TryGetFirst method \" (#42719)"},{"Id":"528715687","IsPullRequest":false,"CreatedAt":"2019-11-26T13:12:35","Actor":"shaan1337","Number":"42718","RawContent":null,"Title":"Deadlock in SocketAsyncContext.Unix.cs","State":"open","Body":"While running XUnit tests on CI (Azure Pipelines) they would almost always hang on macos (we tried both 10.13 and 10.14 on azure pipelines) but never on linux and windows. Moreover the tests would only hang in `RELEASE` builds of macos but never (as far as I remember) on `DEBUG` builds. We've tested on both .net core 3.0 and .net core 3.1-preview 3.\r\n\r\nAfter attaching lldb to the process and getting a thread dump, it appears that there's a deadlock in SocketAsyncContext.Unix.cs (full logs attached for 2 instances):\r\n```\r\n000070000EF32550 0000000111b78efe (MethodDesc 0000000111cf2ee0 + 0x6e System.Net.Sockets.SocketAsyncContext+AsyncOperation.TryCancel()), calling (MethodDesc 000000011191bd68 + 0 System.Threading.SpinWait.SpinOnce())\r\n000070000EF32580 0000000111b7a7bd (MethodDesc 0000000111cf3128 + 0x3d System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].StopAndAbort(System.Net.Sockets.SocketAsyncContext)), calling (MethodDesc 0000000111cf2ee0 + 0 System.Net.Sockets.SocketAsyncContext+AsyncOperation.TryCancel())\r\n000070000EF325B0 0000000111b76eec (MethodDesc 0000000111cf2410 + 0x3c System.Net.Sockets.SocketAsyncContext.Close()), calling (MethodDesc 0000000111cf3128 + 0 System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].StopAndAbort(System.Net.Sockets.SocketAsyncContext))\r\n000070000EF325E0 0000000111b4f0ea (MethodDesc 0000000111bc5ec0 + 0xca System.Net.Sockets.SafeSocketHandle.ReleaseHandle()), calling (MethodDesc 0000000111cf2410 + 0 System.Net.Sockets.SocketAsyncContext.Close())\r\n000070000EF32600 000000011b4ea729 (MethodDesc 00000001113d1dd8 + 0xa9 System.Runtime.InteropServices.SafeHandle.InternalRelease(Boolean))\r\n000070000EF32640 000000011b4ed8ca (MethodDesc 000000011140faa0 + 0x1a System.StubHelpers.StubHelpers.SafeHandleRelease(System.Runtime.InteropServices.SafeHandle)), calling (MethodDesc 00000001113d1dd8 + 0 System.Runtime.InteropServices.SafeHandle.InternalRelease(Boolean))\r\n000070000EF32660 000000011137249d (MethodDesc 0000000111d93640 + 0xcd ILStubClass.IL_STUB_PInvoke(System.Runtime.InteropServices.SafeHandle, MessageHeader*, System.Net.Sockets.SocketFlags, Int64*)), calling (MethodDesc 000000011140faa0 + 0 System.StubHelpers.StubHelpers.SafeHandleRelease(System.Runtime.InteropServices.SafeHandle))\r\n000070000EF326A0 000000011137246b (MethodDesc 0000000111d93640 + 0x9b ILStubClass.IL_STUB_PInvoke(System.Runtime.InteropServices.SafeHandle, MessageHeader*, System.Net.Sockets.SocketFlags, Int64*))\r\n000070000EF32700 0000000111b50d7d (MethodDesc 0000000111bc6428 + 0x10d System.Net.Sockets.SocketPal.Receive(System.Net.Sockets.SafeSocketHandle, System.Net.Sockets.SocketFlags, System.Span`1<Byte>, Byte[], Int32 ByRef, System.Net.Sockets.SocketFlags ByRef, Error ByRef)), calling 0000000111367e68 (stub for Interop+Sys.ReceiveMessage(System.Runtime.InteropServices.SafeHandle, MessageHeader*, System.Net.Sockets.SocketFlags, Int64*))\r\n000070000EF327D0 0000000111b50b25 (MethodDesc 0000000111bc6548 + 0x65 System.Net.Sockets.SocketPal.TryCompleteReceiveFrom(System.Net.Sockets.SafeSocketHandle, System.Span`1<Byte>, System.Collections.Generic.IList`1<System.ArraySegment`1<Byte>>, System.Net.Sockets.SocketFlags, Byte[], Int32 ByRef, Int32 ByRef, System.Net.Sockets.SocketFlags ByRef, System.Net.Sockets.SocketError ByRef)), calling (MethodDesc 0000000111bc6428 + 0 System.Net.Sockets.SocketPal.Receive(System.Net.Sockets.SafeSocketHandle, System.Net.Sockets.SocketFlags, System.Span`1<Byte>, Byte[], Int32 ByRef, System.Net.Sockets.SocketFlags ByRef, Error ByRef))\r\n000070000EF327F0 000000010255e36d libcoreclr.dylib!ReleaseSemaphore + 0x3d, calling libcoreclr.dylib!CorUnix::InternalReleaseSemaphore(CorUnix::CPalThread*, void*, int, int*)\r\n000070000EF32850 0000000111b5116f (MethodDesc 0000000111d93870 + 0xaf System.Net.Sockets.SocketAsyncContext+BufferMemoryReceiveOperation.DoTryComplete(System.Net.Sockets.SocketAsyncContext)), calling (MethodDesc 0000000111bc6548 + 0 System.Net.Sockets.SocketPal.TryCompleteReceiveFrom(System.Net.Sockets.SafeSocketHandle, System.Span`1<Byte>, System.Collections.Generic.IList`1<System.ArraySegment`1<Byte>>, System.Net.Sockets.SocketFlags, Byte[], Int32 ByRef, Int32 ByRef, System.Net.Sockets.SocketFlags ByRef, System.Net.Sockets.SocketError ByRef))\r\n000070000EF328A0 0000000111b7a44e (MethodDesc 0000000111cf3108 + 0xae System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].ProcessQueuedOperation(System.__Canon)), calling 00000001109eb0a0\r\n000070000EF32920 0000000111b7a35f (MethodDesc 0000000111cf30f8 + 0x2f System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].ProcessAsyncOperation(System.__Canon)), calling 000000011136b0b0 (stub for System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].ProcessQueuedOperation(System.__Canon))\r\n000070000EF32950 0000000111b510ab (MethodDesc 0000000111cf82d0 + 0x2b System.Net.Sockets.SocketAsyncContext+ReadOperation.System.Threading.IThreadPoolWorkItem.Execute()), calling 000000011136b0a8 (stub for System.Net.Sockets.SocketAsyncContext+OperationQueue`1[[System.__Canon, System.Private.CoreLib]].ProcessAsyncOperation(System.__Canon))\r\n000070000EF32960 000000011b4ef096 (MethodDesc 000000011198f378 + 0x1f6 System.Threading.ThreadPoolWorkQueue.Dispatch())\r\n```\r\n\r\nThe deadlock seems to happen in this way:\r\n1. an `AsyncOperation` is queued, for instance `BufferMemoryReceiveOperation` as seen in the above stack trace\r\n2. the operation starts being executed on the thread pool\r\n3. after a series of calls, `SocketPal.Receive` makes a call to `Interop.Sys.ReceiveMessage` which calls some unmanaged OS-specific socket code. Eventually the socket handle is released in the unmanaged code which triggers `SocketAsyncContext.Close()`\r\n5. `SocketAsyncContext.Close()` attempts to call `TryCancel()` which waits indefinitely for all async operations to complete: https://github.com/dotnet/corefx/blob/master/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs#L212\r\n6. `BufferMemoryReceiveOperation` is itself an async operation, so it's in effect waiting for itself to complete. Deadlock.\r\n\r\nIt appears that the reason it would not hang in DEBUG builds is because of this line: https://github.com/dotnet/corefx/blob/master/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs#L659 which is called here:\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Net.Sockets/src/System/Net/Sockets/SocketAsyncContext.Unix.cs#L1096\r\n\r\nI've attached two instances of the problem occurring but we can reproduce the problem consistently if any additional information is required:\r\n[macos_deadlock.zip](https://github.com/dotnet/corefx/files/3891980/macos_deadlock.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42718","RelatedDescription":"Open issue \"Deadlock in SocketAsyncContext.Unix.cs\" (#42718)"},{"Id":"528429456","IsPullRequest":false,"CreatedAt":"2019-11-26T01:18:59","Actor":"mattw-db","Number":"42717","RawContent":null,"Title":"X509Chain NotSignatureValid error on Linux with .NET Core 3.0+","State":"open","Body":"Hello,\r\n\r\nWe're having issues with X509 cert chain validation after retargeting our Linux application to netcoreapp3.0.  The chain in three deep: we have a self-signed root CA, which has signed a domain level CA, which in turn has signed a server (non-CA) cert.\r\n\r\nWhen validating the chain, we're met with a X509ChainStatusFlags.NotSignatureValid error carrying a \"certificate signature failure\" StatusInformation string.  The error appears to originate from openssl, but the native code responsible for bubbling this up to the managed world seems to be new (or at least heavily reworked) for .NET Core 3.0 and largely introduced by this pull request: https://github.com/dotnet/corefx/pull/35801\r\n\r\nThe issue occurs only on Linux (both x64 and ARM), not Windows.  It is seen with both .NET Core 3.0 and 3.1, but not with 2.2, 2.1, or 2.0.  I've also tested with both openssl 1.1.1 and 1.0.2 libs and it's seen with both.\r\n\r\nI've validated the chain on the command line with both the openssl and GnuTLS certtool command (in the same Linux environments) and both show no errors.\r\n\r\nThe attached project (with a junk cert chain formed similarly to our own) should reproduce the issue easily.  On Windows (or Linux with .NET Core 2.x) it's output with be \"Chain Valid\".  On Linux with .NET Core 3.0/3.1, it'll print \"Chain Invalid: NotSignatureValid: certificate signature failure\"\r\n\r\n[CertChainValidateTest.zip](https://github.com/dotnet/corefx/files/3899088/CertChainValidateTest.zip)\r\n\r\nThe following openssl command can be used to validate the chain:\r\n```\r\n$ openssl verify -CAfile root-ca.crt -untrusted domain-ca.crt server.crt \r\nserver.crt: OK\r\n```\r\n\r\nLet me know if there's anything else I can provide or should check.\r\n\r\nThanks a lot!\r\n\r\nMatt\r\n\r\nEdit: updated zip with fixed example cert chain","Url":"https://github.com/dotnet/corefx/issues/42717","RelatedDescription":"Open issue \"X509Chain NotSignatureValid error on Linux with .NET Core 3.0+\" (#42717)"},{"Id":"528400827","IsPullRequest":false,"CreatedAt":"2019-11-25T23:39:23","Actor":"ViktorHofer","Number":"42716","RawContent":null,"Title":"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉","State":"open","Body":"We are excited to announce that we just opened the [dotnet/runtime](https://github.com/dotnet/runtime) repository for community members: https://github.com/dotnet/runtime/issues/253. Issues will be ported over early December and this master branch will be recycled soon after. Please open Issues and Pull Requests in the new repository.\r\n\r\ncc @danmosemsft","Url":"https://github.com/dotnet/corefx/issues/42716","RelatedDescription":"Open issue \"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉\" (#42716)"},{"Id":"528346130","IsPullRequest":true,"CreatedAt":"2019-11-25T23:10:11","Actor":"safern","Number":"42715","RawContent":null,"Title":"Move helix arm queues to use new armarch queue","State":"closed","Body":"Port of: https://github.com/dotnet/corefx/commit/d62c8fe5a32ba889017cdc1f69984bb59a9ee5c0\r\n\r\nThis is a requirement from the engineering folks to re-use some machines for other new queues.\r\n\r\ncc: @ilyas1974 @MattGal @danmosemsft","Url":"https://github.com/dotnet/corefx/pull/42715","RelatedDescription":"Closed or merged PR \"Move helix arm queues to use new armarch queue\" (#42715)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"529657312","IsPullRequest":false,"CreatedAt":"2019-11-28T02:23:21","Actor":"jasonmalinowski","Number":"40052","RawContent":null,"Title":"TypeInfo.ConvertedType.NullableAnnotation is None when binding a 'var' keyword","State":"open","Body":"This is being observed in https://github.com/dotnet/roslyn/pull/40030 as I'm removing the IDE's nullable wrappers. If you run [this test](https://github.com/dotnet/roslyn/blob/8d1995963dc0d7add5f6482e323ced9bae2f971b/src/EditorFeatures/CSharpTest/CodeRefactorings/UseExplicitOrImplicitType/UseExplicitTypeRefactoringTests.cs#L298) in the branch it fails. The test is calling GetTypeInfo on the argument and grabbing the ConvertedType [here](https://github.com/jasonmalinowski/roslyn/blob/d3e3d359ca97e4652582206cb052646d66bcdb06/src/Features/CSharp/Portable/TypeStyle/UseExplicitTypeCodeFixProvider.cs#L93). The old nullability APIs say that it is indeed nullable, but the new ITypeSymbol.NullableAnnotation still says None.\r\n\r\nI believe the expectation now is the ITypeSymbol.NullableAnnotation should have brought along the annotated state of Annotated.","Url":"https://github.com/dotnet/roslyn/issues/40052","RelatedDescription":"Open issue \"TypeInfo.ConvertedType.NullableAnnotation is None when binding a 'var' keyword\" (#40052)"},{"Id":"529624509","IsPullRequest":true,"CreatedAt":"2019-11-28T01:48:57","Actor":"dotnet-bot","Number":"40049","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40049","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40049)"},{"Id":"529624481","IsPullRequest":true,"CreatedAt":"2019-11-28T01:48:34","Actor":"dotnet-bot","Number":"40048","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40048","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40048)"},{"Id":"529644686","IsPullRequest":false,"CreatedAt":"2019-11-28T01:25:29","Actor":"jasonmalinowski","Number":"40051","RawContent":null,"Title":"GetTypeInfo returns with nullability but the ITypeSymbol.NullableAnnotation is None","State":"open","Body":"This is being observed in https://github.com/dotnet/roslyn/pull/40030 as I'm removing the IDE's nullable wrappers. If you run [this test](https://github.com/dotnet/roslyn/blob/8d1995963dc0d7add5f6482e323ced9bae2f971b/src/EditorFeatures/CSharpTest/Diagnostics/GenerateMethod/GenerateMethodTests.cs#L298) in the branch it fails. The test is calling GetTypeInfo on the argument, and the old nullability APIs say that it is indeed nullable, but the new ITypeSymbol.NullableAnnotation still says None:\r\n\r\n![image](https://user-images.githubusercontent.com/201340/69769717-d5257a80-113a-11ea-860e-d9e6515aabba.png)\r\n\r\nI believe the expectation now is the ITypeSymbol.NullableAnnotation should have brought along the flow state of Annotated. If I debug into the implementation, it looks like this might just be missing the call to wrap the type.","Url":"https://github.com/dotnet/roslyn/issues/40051","RelatedDescription":"Open issue \"GetTypeInfo returns with nullability but the ITypeSymbol.NullableAnnotation is None\" (#40051)"},{"Id":"529631888","IsPullRequest":false,"CreatedAt":"2019-11-28T00:34:52","Actor":"vsfeedback","Number":"40050","RawContent":null,"Title":".editorconfig Async methods should have \"Async\" suffix when interface in play","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/515551/editorconfig-async-methods-should-have-async-suffi.html)._\n\n---\nI use the following .editoconfig settings to require async methods in our codebase to have their name ending in \"Async\". \n```\n[*.{cs,vb}]\n\n# Async methods should have \"Async\" suffix\ndotnet_naming_rule.async_methods_end_in_async.symbols = any_async_methods\ndotnet_naming_rule.async_methods_end_in_async.style = end_in_async\ndotnet_naming_rule.async_methods_end_in_async.severity = warning\n\ndotnet_naming_symbols.any_async_methods.applicable_kinds = method\ndotnet_naming_symbols.any_async_methods.applicable_accessibilities = *\ndotnet_naming_symbols.any_async_methods.required_modifiers = async\n\ndotnet_naming_style.end_in_async.required_suffix = Async\ndotnet_naming_style.end_in_async.capitalization = pascal_case\n```\n\n\nWhile it works great, it doesn't work when interfaces come into play. Take below as an example. Get should be prompted as a warning that it should end in \"Async\". It makes sense that the interface member isn't, because:\n1. It doesn't have the \"required_modifiers\" async that the config requires\n2. I'm not 100% sure it's even considered a \"method\" but I couldn't find another \"applicable_kinds\" value that seemed appropriate. Is there one?\n\nThe fact that the interface member isn't highlighted then seems to flow through to the concretion, I guess because there's some logic that says editorconfig prefs should be ignored if it's simply following the interface? Comment out `Get` member of `IMyContract` and `Get` in `Something` gets highlighted.\n\n```\npublic interface IMyContract\n{\n    Task<string> Get();\n}\n\npublic class Something : IMyContract\n{\n    public async Task<string> Get() => await Task.FromResult(\"\");\n}\n```\n\nSo it feels as if:\n1. I need a way to target the interface member and enforce the suffix \n(e.g. interface_member that returns Task? Just wonder if there is ever a case for returning Task when an implementation isn't async though?), or \n2. The concretion should still get the rule violation in this specific case\n\nCheers,\nBen\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 4/3/2019, 09:44 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 4/4/2019, 04:58 AM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at:  https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq . In case you need answers to common questions or need assisted support, be sure to use  https://visualstudio.microsoft.com/vs/support/ . We'll keep you posted on any updates to this feedback.</p>\n\n#### ben.mccallum on 4/6/2019, 09:44 AM: \n\n<p>One thing that is tricky with a solution here is that if you rely on some third-party packages and are implementing their interfaces, you don't really want to get warnings about the naming convention if you can't really control their interface and it's naming convention.</p><p>For instance, our solution uses MediatR extensively so we're inheriting from IRequestHandler which has a member called \"Handle\". Ideally that'd be HandleAsync, but we don't want to get warnings given \"it is what it is\". So any solution here would need to understand that third-party deps should not create warnings.</p><p>Cheers again. </p>\n\n#### Visual Studio Feedback System on 8/23/2019, 03:00 AM: \n\nI'm closing this report, because in the last 90 days there was no internal developer activity and very small number of new votes or comments. Sorry, we would like to look at this further, but we just don’t have the time right now. Our goal in closing older issues such as this one is to keep customers informed on which issues are currently being pursued by Visual Studio teams. If you still have trouble with our latest version, please report it as a new problem.\n\n#### andrew.grady on 11/26/2019, 06:45 AM: \n\n<p>I am also running into this issue and I spent hours trying to figure out why it worked in some cases but not others. The existing behavior is confusing. In my case, all public async methods are tied to an interface. I would assume that would be the case for most others as coding to an interface is a best practice. </p><p>So my editorconfig rule (the same as the example above) only picks up private async methods which is a small fraction of the async methods implemented. </p><p>Can you please reconsider fixing this or at the very least documenting it for others who will probably run into this? Your documentation linked below makes no mention of this limitation. </p><p><a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019\">https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019</a> </p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40050","RelatedDescription":"Open issue \".editorconfig Async methods should have \"Async\" suffix when interface in play\" (#40050)"},{"Id":"529616402","IsPullRequest":false,"CreatedAt":"2019-11-27T23:28:53","Actor":"mihirdalal","Number":"40047","RawContent":null,"Title":"Hard coded password detection..","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019\r\n\r\n**Steps to Reproduce**:\r\nI wrote the following code in C# on a simple WinForm application.\r\n\r\nstring password = \"abcd\";\r\ntextBox1.Text = password;\r\n\r\nI then ran the Code Analysis on the solution. I would think, any of the Roslyn security code analyzers would flag this as hard coded password in code, but I got no warnings about that.\r\n\r\nThe Roslyn Analyzers didn't flag this as a concerning code.\r\n\r\nDo Roslyn Analyzers scan for such obvious security weaknesses in code?**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\nExpected code to be flagged.","Url":"https://github.com/dotnet/roslyn/issues/40047","RelatedDescription":"Open issue \"Hard coded password detection..\" (#40047)"},{"Id":"529608303","IsPullRequest":false,"CreatedAt":"2019-11-27T22:58:32","Actor":"jnm2","Number":"40046","RawContent":null,"Title":"Refactoring to reverse the direction of a for loop","State":"open","Body":"Either direction:\r\n\r\n```cs\r\nfor (var i = foo; i < bar; i++)\r\n```\r\n\r\n```cs\r\nfor (var i = bar - 1; i >= foo; i--)\r\n```\r\n\r\nMaybe variations:\r\n\r\n```cs\r\nfor (var i = foo; i <= bar; i++)\r\n```\r\n\r\n```cs\r\nfor (var i = bar; i >= foo; i--)\r\n```\r\n\r\nOr:\r\n\r\n```cs\r\nfor (var i = foo; i != bar; i++)\r\n```\r\n\r\n```cs\r\nfor (var i = bar; i >= foo; i--)\r\n```\r\n\r\nIf the increment is anything other than adding or subtracting constant 1, the for loop can't be reversed without potentially changing the reversed sequence. E.g. 0, 2, 4 could become 5, 3, 1.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40046","RelatedDescription":"Open issue \"Refactoring to reverse the direction of a for loop\" (#40046)"},{"Id":"529599028","IsPullRequest":false,"CreatedAt":"2019-11-27T22:25:28","Actor":"jasonmalinowski","Number":"40045","RawContent":null,"Title":"Default parameter value binding to property instead of type name (i.e. Color Color problem)","State":"open","Body":"**Version Used**: Roslyn 3.5.0-beta2-19570-07+4bd316035f64c9776d5420af71df8ba38e8e23e4\r\n\r\n![image](https://user-images.githubusercontent.com/201340/69763281-8c14fc80-1121-11ea-8650-2ccc05833c53.png)\r\n\r\n**Expected Behavior:** the \"Color\" before the period where we are typing is colored blue.\r\n**Actual Behavior:** it's binding to the property so it stays the wrong color.\r\n\r\nI had some complicated case where I wasn't getting completion either. I'm not sure if I have a repro for that but this classification issue was very confusing.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40045","RelatedDescription":"Open issue \"Default parameter value binding to property instead of type name (i.e. Color Color problem)\" (#40045)"},{"Id":"529596389","IsPullRequest":true,"CreatedAt":"2019-11-27T22:17:06","Actor":"tmat","Number":"40044","RawContent":null,"Title":"Document load failures","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/40044","RelatedDescription":"Open PR \"Document load failures\" (#40044)"},{"Id":"529592644","IsPullRequest":false,"CreatedAt":"2019-11-27T22:06:08","Actor":"dpoeschl","Number":"40043","RawContent":null,"Title":"Rename Type to Match File crashes VS when code only contains `class` keyword","State":"open","Body":"**Steps to Reproduce**:\r\n\r\n1. In an otherwise empty C# file:\r\n\r\n```C#\r\nclass$$\r\n```\r\n\r\n2. Remove the `$$` and invoke the lightbulb at that location\r\n3. Pick \"Rename type to Program\"\r\n\r\n**Expected Behavior**: The refactoring shouldn't be offered on this particular incomplete code.\r\n**Actual Behavior**: VS crashes.\r\n\r\n**Note: This is particularly important because of the way the LSP is implemented today.**\r\n\r\n```\r\nArgumentException: openBraceToken\r\n\r\n   at Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(SyntaxList`1 attributeLists, SyntaxTokenList modifiers, SyntaxToken keyword, SyntaxToken identifier, TypeParameterListSyntax typeParameterList, BaseListSyntax baseList, SyntaxList`1 constraintClauses, SyntaxToken openBraceToken, SyntaxList`1 members, SyntaxToken closeBraceToken, SyntaxToken semicolonToken) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Main.Generated.cs:line 4333\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Update(SyntaxList`1 attributeLists, SyntaxTokenList modifiers, SyntaxToken keyword, SyntaxToken identifier, TypeParameterListSyntax typeParameterList, BaseListSyntax baseList, SyntaxList`1 constraintClauses, SyntaxToken openBraceToken, SyntaxList`1 members, SyntaxToken closeBraceToken, SyntaxToken semicolonToken) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Syntax.Generated.cs:line 7788\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitClassDeclaration(ClassDeclarationSyntax node) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Main.Generated.cs:line 1739\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Accept[TResult](CSharpSyntaxVisitor`1 visitor) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Syntax.Generated.cs:line 7782\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.Visit(SyntaxNode node) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Syntax\\CSharpSyntaxRewriter.cs:line 39\r\n   at Microsoft.CodeAnalysis.CSharp.Rename.CSharpRenameConflictLanguageService.RenameRewriter.Visit(SyntaxNode node) in C:\\src\\roslyn\\src\\Workspaces\\CSharp\\Portable\\Rename\\CSharpRenameRewriterLanguageService.cs:line 171\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement[TNode](TNode node) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Syntax\\CSharpSyntaxRewriter.cs:line 165\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList[TNode](SyntaxList`1 list) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Syntax\\CSharpSyntaxRewriter.cs:line 142\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCompilationUnit(CompilationUnitSyntax node) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Main.Generated.cs:line 1703\r\n   at Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Accept[TResult](CSharpSyntaxVisitor`1 visitor) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Generated\\Syntax.xml.Syntax.Generated.cs:line 6936\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.Visit(SyntaxNode node) in C:\\src\\roslyn\\src\\Compilers\\CSharp\\Portable\\Syntax\\CSharpSyntaxRewriter.cs:line 39\r\n   at Microsoft.CodeAnalysis.CSharp.Rename.CSharpRenameConflictLanguageService.RenameRewriter.Visit(SyntaxNode node) in C:\\src\\roslyn\\src\\Workspaces\\CSharp\\Portable\\Rename\\CSharpRenameRewriterLanguageService.cs:line 171\r\n   at Microsoft.CodeAnalysis.CSharp.Rename.CSharpRenameConflictLanguageService.AnnotateAndRename(RenameRewriterParameters parameters) in C:\\src\\roslyn\\src\\Workspaces\\CSharp\\Portable\\Rename\\CSharpRenameRewriterLanguageService.cs:line 45\r\n   at Microsoft.CodeAnalysis.Rename.ConflictEngine.ConflictResolver.Session.<AnnotateAndRename_WorkerAsync>d__27.MoveNext() in C:\\src\\roslyn\\src\\Workspaces\\Core\\Portable\\Rename\\ConflictEngine\\ConflictResolver.Session.cs:line 795\r\n```","Url":"https://github.com/dotnet/roslyn/issues/40043","RelatedDescription":"Open issue \"Rename Type to Match File crashes VS when code only contains `class` keyword\" (#40043)"},{"Id":"529506033","IsPullRequest":true,"CreatedAt":"2019-11-27T21:59:46","Actor":"dotnet-bot","Number":"40039","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40039","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40039)"},{"Id":"529505982","IsPullRequest":true,"CreatedAt":"2019-11-27T21:59:44","Actor":"dotnet-bot","Number":"40038","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40038","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40038)"},{"Id":"529591042","IsPullRequest":false,"CreatedAt":"2019-11-27T21:31:40","Actor":"timdoke","Number":"40042","RawContent":null,"Title":"Generic class operators derived from interface seems broken","State":"open","Body":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/40042","RelatedDescription":"Open issue \"Generic class operators derived from interface seems broken\" (#40042)"},{"Id":"529561893","IsPullRequest":false,"CreatedAt":"2019-11-27T20:35:28","Actor":"tamlin-mike","Number":"40041","RawContent":null,"Title":"VS crash. C# code analysis out of stack due to recursion in AsyncAwaitHighlighter.HighlightRelatedKeywords","State":"open","Body":"Currently running a \"home-built\" version due to the fix for #39092 not going to get published until at least VS 16.4, but it seems extremely unlikely this condition is yet handled in the shipping code.\r\n\r\nWhile trying to find a bug in a (Microsoft tool-) generated source file, viewing that file provokes this bug and crashes VS.\r\n\r\n<details>\r\n<summary>stacktrace</summary>\r\n\r\n```\r\nMicrosoft.CodeAnalysis.CSharp.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.CSharp.KeywordHighlighting.KeywordHighlighters.AsyncAwaitHighlighter.HighlightRelatedKeywords(Microsoft.CodeAnalysis.SyntaxNode node, System.Collections.Generic.List<Microsoft.CodeAnalysis.Text.TextSpan> spans)\tC#\r\nMicrosoft.CodeAnalysis.CSharp.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.CSharp.KeywordHighlighting.KeywordHighlighters.AsyncAwaitHighlighter.HighlightRelatedKeywords(Microsoft.CodeAnalysis.SyntaxNode node, System.Collections.Generic.List<Microsoft.CodeAnalysis.Text.TextSpan> spans) Line 108\tC#\r\n\r\n[... over 3000 recursions removed from display] \t\r\n\r\nMicrosoft.CodeAnalysis.CSharp.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.CSharp.KeywordHighlighting.KeywordHighlighters.AsyncAwaitHighlighter.GetHighlightsForNode(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken) Line 30\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.AbstractKeywordHighlighter.GetHighlights(Microsoft.CodeAnalysis.SyntaxNode root, int position, System.Threading.CancellationToken cancellationToken) Line 34\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.HighlightingService.GetHighlights.AnonymousMethod__1(System.Lazy<Microsoft.CodeAnalysis.Editor.IHighlighter, Microsoft.CodeAnalysis.Host.Mef.LanguageMetadata> h) Line 31\tC#\r\nSystem.Core.dll!System.Linq.Enumerable.WhereSelectListIterator<System.Lazy<Microsoft.CodeAnalysis.Editor.IHighlighter, Microsoft.CodeAnalysis.Host.Mef.LanguageMetadata>, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>>.MoveNext()\tUnknown\r\nSystem.Core.dll!System.Linq.Enumerable.WhereEnumerableIterator<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>>.MoveNext()\tUnknown\r\nSystem.Core.dll!System.Linq.Enumerable.SelectManyIterator<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>, Microsoft.CodeAnalysis.Text.TextSpan>(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>> source, System.Func<System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>> selector)\tUnknown\r\nSystem.Core.dll!System.Linq.Enumerable.DistinctIterator<Microsoft.CodeAnalysis.Text.TextSpan>(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan> source, System.Collections.Generic.IEqualityComparer<Microsoft.CodeAnalysis.Text.TextSpan> comparer)\tUnknown\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.HighlighterViewTaggerProvider.ProduceTagsAsync(Microsoft.CodeAnalysis.Editor.Tagging.TaggerContext<Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.KeywordHighlightTag> context, Microsoft.CodeAnalysis.Editor.DocumentSnapshotSpan documentSnapshotSpan, int? caretPosition) Line 103\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider<Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.KeywordHighlightTag>.ProduceTagsAsync(Microsoft.CodeAnalysis.Editor.Tagging.TaggerContext<Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.KeywordHighlightTag> context) Line 202\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider<Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.KeywordHighlightTag>.TagSource.RecomputeTagsAsync(object oldState, Microsoft.VisualStudio.Text.SnapshotPoint? caretPosition, Microsoft.CodeAnalysis.Text.TextChangeRange? textChangeRange, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Editor.DocumentSnapshotSpan> spansToTag, System.Collections.Immutable.ImmutableDictionary<Microsoft.VisualStudio.Text.ITextBuffer, Microsoft.CodeAnalysis.Editor.Shared.Tagging.TagSpanIntervalTree<Microsoft.CodeAnalysis.Editor.Implementation.Highlighting.KeywordHighlightTag>> oldTagTrees, bool initialTags, System.Threading.CancellationToken cancellationToken) Line 467\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Tagging.AbstractAsynchronousTaggerProvider<System.__Canon>.TagSource.RecomputeTagsForeground.AnonymousMethod__0(System.Threading.CancellationToken ct) Line 316\tC#\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Shared.Threading.AsynchronousSerialWorkQueue.EnqueueBackgroundTask.AnonymousMethod__0(System.Threading.Tasks.Task _) Line 131\tC#\r\nmscorlib.dll!System.Threading.Tasks.ContinuationResultTaskFromTask<System.Threading.Tasks.Task>.InnerInvoke() Line 111\tC#\r\nmscorlib.dll!System.Threading.Tasks.Task.Execute() Line 2498\tC#\r\nmscorlib.dll!System.Threading.Tasks.Task.ExecutionContextCallback(object obj) Line 2861\tC#\r\nmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\nmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\nmscorlib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot) Line 2827\tC#\r\nmscorlib.dll!System.Threading.Tasks.Task.ExecuteEntry(bool bPreventDoubleExecution) Line 2767\tC#\r\nmscorlib.dll!System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() Line 2704\tC#\r\nmscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() Line 820\tC#\r\nmscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() Line 1161\tC#\r\n```\r\n\r\n</details>\r\n\r\nIf the code has changed considerably since my copy, it's the loop `foreach (var child in node.ChildNodes())`.\r\n\r\nWhile it could be aborted with a stack probe, perhaps a more sane version would keep track of recursion count and not recurse past... 1k? The over 3k recursions provoking this is evidently too much.\r\n\r\nWhile in the neighbourhood, it could probably be a good idea to move the comment (`// Highlight async keyword`) at the top of that method to where it actually belongs -- or simply remove it, as it's pretty much pointless.","Url":"https://github.com/dotnet/roslyn/issues/40041","RelatedDescription":"Open issue \"VS crash. C# code analysis out of stack due to recursion in AsyncAwaitHighlighter.HighlightRelatedKeywords\" (#40041)"},{"Id":"529534224","IsPullRequest":false,"CreatedAt":"2019-11-27T19:25:47","Actor":"genlu","Number":"40040","RawContent":null,"Title":"Need to evaluate how our code change services handle linked documents","State":"open","Body":"Because the result of our services (e.g. MoveType service) is often used as an intermediate state which will undergo further change made by other, say, refactorings, it will need either propagate changes made to one of many linked files to others, or consolidate changes made in all linked documents, before passing it on. Otherwise, there will be inconsistency in the content among linked documents, causing problem in downstream code changes.","Url":"https://github.com/dotnet/roslyn/issues/40040","RelatedDescription":"Open issue \"Need to evaluate how our code change services handle linked documents\" (#40040)"},{"Id":"529304148","IsPullRequest":true,"CreatedAt":"2019-11-27T17:25:49","Actor":"dotnet-bot","Number":"40035","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40035","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40035)"},{"Id":"529304097","IsPullRequest":true,"CreatedAt":"2019-11-27T17:25:29","Actor":"dotnet-bot","Number":"40034","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40034","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40034)"},{"Id":"529335720","IsPullRequest":true,"CreatedAt":"2019-11-27T14:18:54","Actor":"dotnet-maestro[bot]","Number":"40036","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/40036","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#40036)"},{"Id":"529356242","IsPullRequest":true,"CreatedAt":"2019-11-27T13:46:20","Actor":"v-zbsail","Number":"40037","RawContent":null,"Title":"LOC CHECKIN | dotnet/roslyn master | 20191127","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/40037","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/roslyn master | 20191127\" (#40037)"},{"Id":"529161245","IsPullRequest":false,"CreatedAt":"2019-11-27T07:12:40","Actor":"mareklinka","Number":"40033","RawContent":null,"Title":"CS0121 (ambiguous invocation) thrown when enabling nullable reference types for parts of solution","State":"open","Body":"**Version Used**: VS 2019 (16.3.10)\r\n\r\n**Steps to Reproduce**:\r\nOpen unit test in attachment: [AmbiguityRepro.zip](https://github.com/dotnet/roslyn/files/3895511/AmbiguityRepro.zip)\r\nTry compiling the code.\r\n\r\n**Expected Behavior**:\r\nThe compilation works without issues.\r\n\r\n**Actual Behavior**:\r\nCS0121 is returned in Output pane (not in Error List pane). The compiler thinks the call to `ExecuteAsync` is ambiguous (apparently to itself, since there is no other method).\r\n\r\n**Explanation I can guess at**\r\nThis has something to do with setting `<Nullable>enable</Nullable>` on the `Infrastructure` project and keeping it disabled on the `Implementation` project. Then it errors out. If I keep nullable reference types disabled on both projects, the solution compiles. If I enable NRT on both, it compiles as well.\r\n\r\nCould someone explain why this is happening? I came across this behavior when experimentally enabling NRT on our production code (on a few projects at a time). Also, sorry for weird naming, I just threw together the fastest repro I could, it kinda reflects our code organization.","Url":"https://github.com/dotnet/roslyn/issues/40033","RelatedDescription":"Open issue \"CS0121 (ambiguous invocation) thrown when enabling nullable reference types for parts of solution\" (#40033)"},{"Id":"529120841","IsPullRequest":false,"CreatedAt":"2019-11-27T05:16:19","Actor":"tamlin-mike","Number":"40032","RawContent":null,"Title":"Unhandled System.OperationCanceledException","State":"open","Body":"`Microsoft.CodeAnalysis` in the call stack makes me believe this could be for Roslyn.\r\n\r\nVS16.3.6.\r\n\r\n**Expected Behavior**:\r\nThe software handling the exception.\r\n\r\n**Actual Behavior**:\r\nThe software is (according to the attached debugger) not handling the exception.\r\n\r\n<details>\r\n<summary>stack trace</summary>\r\n\r\n```ini\r\nmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task) Line 176\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task) Line 146\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(System.Threading.Tasks.Task task) Line 124\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.Initialize.AnonymousMethod__0() Line 197\tC#\r\n \t[Resuming Async Method]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents.AnonymousMethod__0() Line 977\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.OutputWaitEtwEvents.AnonymousMethod__0() Line 288\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, bool allowInlining, ref System.Threading.Tasks.Task currentTask) Line 810\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3617\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.CancellationCleanupLogic() Line 3567\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<(System.__Canon, System.__Canon)>.TrySetCanceled(System.Threading.CancellationToken tokenToRecord, object cancellationException) Line 654\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<(Microsoft.CodeAnalysis.Diagnostics.AnalyzerActions, System.Collections.Immutable.ImmutableHashSet<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>)>.SetException(System.Exception exception) Line 662\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetAnalyzerActionsAsync(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager analyzerManager, Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor analyzerExecutor) Line 1556\tC#\r\n \t[Resuming Async Method]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents.AnonymousMethod__0() Line 977\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.OutputWaitEtwEvents.AnonymousMethod__0() Line 288\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, bool allowInlining, ref System.Threading.Tasks.Task currentTask) Line 810\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3617\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.CancellationCleanupLogic() Line 3567\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<System.__Canon>.TrySetCanceled(System.Threading.CancellationToken tokenToRecord, object cancellationException) Line 654\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Microsoft.CodeAnalysis.Diagnostics.AnalyzerActions>.SetException(System.Exception exception) Line 662\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager.GetAnalyzerActionsAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor analyzerExecutor) Line 155\tC#\r\n \t[Resuming Async Method]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents.AnonymousMethod__0() Line 977\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.OutputWaitEtwEvents.AnonymousMethod__0() Line 288\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, bool allowInlining, ref System.Threading.Tasks.Task currentTask) Line 810\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3617\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.CancellationCleanupLogic() Line 3567\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<System.__Canon>.TrySetCanceled(System.Threading.CancellationToken tokenToRecord, object cancellationException) Line 654\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Microsoft.CodeAnalysis.Diagnostics.HostCompilationStartAnalysisScope>.SetException(System.Exception exception) Line 662\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager.GetCompilationAnalysisScopeAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Microsoft.CodeAnalysis.Diagnostics.HostSessionStartAnalysisScope sessionScope, Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor analyzerExecutor) Line 56\tC#\r\n \t[Resuming Async Method]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents.AnonymousMethod__0() Line 977\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.OutputWaitEtwEvents.AnonymousMethod__0() Line 288\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action action, bool allowInlining, ref System.Threading.Tasks.Task currentTask) Line 810\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishContinuations() Line 3617\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.FinishStageThree() Line 2363\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task.CancellationCleanupLogic() Line 3567\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.Task<System.__Canon>.TrySetCanceled(System.Threading.CancellationToken tokenToRecord, object cancellationException) Line 654\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<Microsoft.CodeAnalysis.Diagnostics.HostCompilationStartAnalysisScope>.SetException(System.Exception exception) Line 662\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager.GetCompilationAnalysisScopeCoreAsync(Microsoft.CodeAnalysis.Diagnostics.HostSessionStartAnalysisScope sessionScope, Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor analyzerExecutor, Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager.AnalyzerExecutionContext analyzerExecutionContext) Line 75\tC#\r\n \t[Resuming Async Method]\t\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(object stateMachine) Line 1090\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 980\tC#\r\n \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx) Line 928\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run() Line 1070\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents.AnonymousMethod__0() Line 977\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.OutputWaitEtwEvents.AnonymousMethod__0() Line 288\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncMethodBuilderCore.ContinuationWrapper.Invoke() Line 1123\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.ExecuteWorkItemHelper() Line 681\tC#\r\n \tmscorlib.dll!System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem() Line 715\tC#\r\n \tmscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch() Line 820\tC#\r\n \tmscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() Line 1161\tC#\r\n \t[Async Call Stack]\t\r\n \t[Async] mscorlib.dll!System.Threading.Tasks.Task.Run\tC#\r\n \t[Async] Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDriverAsync(System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.ComputeAnalyzerDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.AnalysisScope analysisScope, System.Func<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.CompilationEvent>> getPendingEventsOpt, int newTaskToken, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsCoreAsync(Microsoft.CodeAnalysis.SemanticModel model, Microsoft.CodeAnalysis.Text.TextSpan? filterSpan, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken, bool forceCompletePartialTrees)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync(Microsoft.CodeAnalysis.SemanticModel model, Microsoft.CodeAnalysis.Text.TextSpan? filterSpan, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer> analyzers, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerHelper.ComputeDiagnosticsAsync.__ComputeDiagnosticAnalyzerDiagnosticsAsync|0()\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.AnalyzerHelper.ComputeDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerService service, Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers analyzerDriverOpt, Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer analyzer, Microsoft.CodeAnalysis.Diagnostics.AnalysisKind kind, Microsoft.CodeAnalysis.Text.TextSpan? spanOpt, Microsoft.CodeAnalysis.Diagnostics.Log.DiagnosticLogAggregator logAggregatorOpt, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter.TryGetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet stateSet, Microsoft.CodeAnalysis.Diagnostics.AnalysisKind kind, Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter.DiagnosticsGetterAsync diagnosticGetterAsync, System.Collections.Generic.List<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> list, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter.TryGetSyntaxAndSemanticDiagnosticsAsync(Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.StateSet stateSet, System.Collections.Generic.List<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> list, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.LatestDiagnosticsForSpanGetter.TryGetAsync(System.Collections.Generic.List<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> list, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.TryAppendDiagnosticsForSpanAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan range, System.Collections.Generic.List<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> result, bool includeSuppressedDiagnostics, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] mscorlib.dll!System.Threading.Tasks.Task.Run\tC#\r\n \t[Async] Microsoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetMostSevereFixableDiagnosticAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan range, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] Microsoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetFixLevelAsync(Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider provider, Microsoft.CodeAnalysis.Document document, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tC#\r\n \t[Async] mscorlib.dll!System.Threading.Tasks.Task.Run\tC#\r\n```\r\n</details>\r\n","Url":"https://github.com/dotnet/roslyn/issues/40032","RelatedDescription":"Open issue \"Unhandled System.OperationCanceledException\" (#40032)"},{"Id":"529082100","IsPullRequest":false,"CreatedAt":"2019-11-27T02:50:14","Actor":"odyth","Number":"40031","RawContent":null,"Title":"SyntaxEditorBasedFixAllProvider encoutered an error - NullReferenceException","State":"open","Body":"**Version Used**: \r\nVisual Studio Professional 2019 Version 16.3.10\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Find some code that needs to Use discard '_'\r\n![image](https://user-images.githubusercontent.com/947020/69689034-bc2bb380-10bf-11ea-82e9-fd32e274d8e9.png)\r\n\r\n2. Try and apply this change to the project or solution (document works). \r\n3. VS will think for a few seconds as if attempting and then SyntaxEditorBasedFixAllProvider will crash with an NRE\r\n\r\n![image](https://user-images.githubusercontent.com/947020/69689295-715e6b80-10c0-11ea-9a17-d1ffcb123185.png)\r\n\r\nHere is the stack trace:\r\n\r\n```\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Kind(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGeneration.CSharpSyntaxGenerator.GetDeclarationKind(SyntaxNode declaration)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGeneration.CSharpSyntaxGenerator.AsNodeLike(SyntaxNode existingNode,SyntaxNode newNode)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGeneration.CSharpSyntaxGenerator.ReplaceNode(SyntaxNode root,SyntaxNode declaration,SyntaxNode newDeclaration)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceChange.Apply(SyntaxNode root,SyntaxGenerator generator)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot()\r\n   at async Microsoft.CodeAnalysis.RemoveUnusedParametersAndValues.AbstractRemoveUnusedValuesCodeFixProvider`11.FixAllAsync[TExpressionSyntax,TStatementSyntax,TBlockSyntax,TExpressionStatementSyntax,TLocalDeclarationStatementSyntax,TVariableDeclaratorSyntax,TForEachStatementSyntax,TSwitchCaseBlockSyntax,TSwitchCaseLabelOrClauseSyntax,TCatchStatementSyntax,TCatchBlockSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.FixDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.GetFixAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.GetFixAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.FixAllGetFixesService.GetFixAllCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.FixAllGetFixesService.GetFixAllOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetOperationsCoreAsync(<Unknown Parameters>)\r\n   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.<>c__DisplayClass20_0.<InvokeCore>b__0()\r\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\r\n```\r\n\r\n**Expected Behavior**:\r\nFormatting is performed across my project\r\n\r\n**Actual Behavior**:\r\nNRE is thrown and no formatting is performed.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/40031","RelatedDescription":"Open issue \"SyntaxEditorBasedFixAllProvider encoutered an error - NullReferenceException\" (#40031)"},{"Id":"529037973","IsPullRequest":true,"CreatedAt":"2019-11-27T01:53:09","Actor":"dotnet-bot","Number":"40026","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40026","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40026)"},{"Id":"529036806","IsPullRequest":true,"CreatedAt":"2019-11-27T01:43:07","Actor":"RikkiGibson","Number":"40025","RawContent":null,"Title":"Always restore when running a bootstrap build","State":"closed","Body":"/cc @jaredpar","Url":"https://github.com/dotnet/roslyn/pull/40025","RelatedDescription":"Closed or merged PR \"Always restore when running a bootstrap build\" (#40025)"},{"Id":"529037997","IsPullRequest":true,"CreatedAt":"2019-11-27T01:21:11","Actor":"dotnet-bot","Number":"40027","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40027","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40027)"},{"Id":"529058172","IsPullRequest":true,"CreatedAt":"2019-11-27T01:18:54","Actor":"jasonmalinowski","Number":"40030","RawContent":null,"Title":"Remove the nullable wrappers from the Workspaces layer","State":"open","Body":"The compiler merged support for top-level symbol nullability in #39498, so we can now delete our own wrappers that were performing the same thing. This is a mostly mechanical change. Commit-by-commit might be slightly more helpful as the similar types of changes were grouped together.\r\n\r\nCloses https://github.com/dotnet/roslyn/issues/39737.\r\nFixes https://github.com/dotnet/roslyn/issues/36093.","Url":"https://github.com/dotnet/roslyn/pull/40030","RelatedDescription":"Open PR \"Remove the nullable wrappers from the Workspaces layer\" (#40030)"},{"Id":"529039049","IsPullRequest":true,"CreatedAt":"2019-11-27T00:08:32","Actor":"jaredpar","Number":"40029","RawContent":null,"Title":"Nullable collections","State":"open","Body":"Enable nullability checking in more of our collection types","Url":"https://github.com/dotnet/roslyn/pull/40029","RelatedDescription":"Open PR \"Nullable collections\" (#40029)"},{"Id":"529038765","IsPullRequest":false,"CreatedAt":"2019-11-27T00:07:26","Actor":"pix64","Number":"40028","RawContent":null,"Title":"Allow using statement in out variable declaration","State":"open","Body":"C# 8.0 introduced the using declaration, which is convenient but cannot be used with out parameters. This leads to the awkward code below.\r\n\r\n    TextReader reader = null;\r\n    try\r\n    {\r\n        if (this.TryOpenReader(sourceName, out reader))\r\n        {\r\n            ...\r\n        }\r\n    }\r\n    finally\r\n    {\r\n        reader?.Dispose();\r\n    }\r\n\r\nThis could be simplified if the following code was valid\r\n\r\n    if (this.TryOpenReader(sourceName, using out var reader))\r\n    {\r\n        ...\r\n    }","Url":"https://github.com/dotnet/roslyn/issues/40028","RelatedDescription":"Open issue \"Allow using statement in out variable declaration\" (#40028)"},{"Id":"528970533","IsPullRequest":true,"CreatedAt":"2019-11-26T21:03:28","Actor":"jasonmalinowski","Number":"40024","RawContent":null,"Title":"Don't use the C#_LSP language service for Razor secondary buffers","State":"open","Body":"This removes one of the remaining uses of the language service.","Url":"https://github.com/dotnet/roslyn/pull/40024","RelatedDescription":"Open PR \"Don't use the C#_LSP language service for Razor secondary buffers\" (#40024)"},{"Id":"528927029","IsPullRequest":false,"CreatedAt":"2019-11-26T19:27:26","Actor":"allisonchou","Number":"40023","RawContent":null,"Title":"Extract method does not respect whitespace when extracting a return statement","State":"open","Body":"**Version Used**: 16.4.0 P6\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Highlight a single return statement\r\n2. Ctrl+. and select extract method code action\r\n\r\n**Expected Behavior**: Newline above return statement preserved\r\n\r\n**Actual Behavior**: Newline not preserved. Seems to be an edge case since extracting regular statements seems to correctly preserve the newline if present.\r\n\r\n![newlinenotrespected](https://user-images.githubusercontent.com/16968319/69665624-9e1e6e80-103f-11ea-993f-4f88013cb8e9.png)","Url":"https://github.com/dotnet/roslyn/issues/40023","RelatedDescription":"Open issue \"Extract method does not respect whitespace when extracting a return statement\" (#40023)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"529624715","IsPullRequest":true,"CreatedAt":"2019-11-28T00:04:32","Actor":"yowl","Number":"7894","RawContent":null,"Title":"WIP: Wasm: fix for boxing a float32 into Single","State":"open","Body":"Add a test and the fix for :\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nWhich was failing due to using a float64 and not trunking the float64 into a float32 before calling RhBox.  Also added code to ensure that type used in the reflection has its type symbol add to the dependencies to prevent missing metadata exception.  WIP as contains changes from #7891 so will wait for that before releasing.","Url":"https://github.com/dotnet/corert/pull/7894","RelatedDescription":"Open PR \"WIP: Wasm: fix for boxing a float32 into Single\" (#7894)"},{"Id":"529587467","IsPullRequest":false,"CreatedAt":"2019-11-27T21:49:26","Actor":"yowl","Number":"7893","RawContent":null,"Title":"Wasm: question: boxing to Single","State":"open","Body":"Hi, in the Wasm backend it loads float32s into float64s and adds the extends/truncs as necessary.  This has worked ok up till now, but there is a problem I think with `FieldInfo.SetValue`.  This takes an object so boxes the float32.  Currently this fails as the address passed to `SetValue` is an address to a float64 and RhBox does not expect that and the value is corrupted (a 64bit float is interpreted as a 32 bit float I think).  In other words the following test fails\r\n```\r\n    internal static void TestBoxSingle()\r\n    {\r\n        StartTest(\"Test box single\");\r\n        var fi = typeof(ClassWithFloat).GetField(\"F\");\r\n        fi.SetValue(null, 1.1f);\r\n\r\n        PrintLine(ClassWithFloat.F.ToString());\r\n        EndTest(1.1f == ClassWithFloat.F);\r\n    }\r\n}\r\n\r\npublic class ClassWithFloat\r\n{\r\n    public static float F;\r\n}\r\n``` \r\nAnd it prints -1.0842022E-19.   In the Wasm backend the evaluation stack can have a `StackEntry` type of `FloatConstantEntry`, but this I'm not sure is sufficient to solve this problem as the enum for StackValueKind is \r\n```\r\n    internal enum StackValueKind\r\n    {\r\n        /// <summary>An unknow type.</summary>\r\n        Unknown,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 32-bit entity.</summary>\r\n        Int32,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 64-bit entity.</summary>\r\n        Int64,\r\n        /// <summary>Underlying platform pointer type represented as an integer of the appropriate size.</summary>\r\n        NativeInt,\r\n        /// <summary>Any float value.</summary>\r\n        Float,\r\n        /// <summary>A managed pointer.</summary>\r\n        ByRef,\r\n        /// <summary>An object reference.</summary>\r\n        ObjRef,\r\n        /// <summary>A value type which is not any of the primitive one.</summary>\r\n        ValueType\r\n    }\r\n```\r\nIt does not distinguish between 32 and 64 bit floats, so its impossible, I think, to load the constant correctly from\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nThe 1.1 is loaded with the `FloatConstantEntry` and it can't be passed correctly to the box/RhBox as its unknown whether to trunc the float or not.  \r\n\r\nMy question is, is my thinking correct and I need to add a new `StackEntry` type so that its known if the value was 32 or 64 bits?  This would not be a bad thing presumably from a performance point of view anyway,\r\n","Url":"https://github.com/dotnet/corert/issues/7893","RelatedDescription":"Open issue \"Wasm: question: boxing to Single\" (#7893)"},{"Id":"529491585","IsPullRequest":true,"CreatedAt":"2019-11-27T19:36:17","Actor":"MichalStrehovsky","Number":"7892","RawContent":null,"Title":"Fix `out string` arguments in reverse p/invoke","State":"closed","Body":"`EmitMarshalArgumentNativeToManaged` bypasses `AllocAndTransformManagedToNative` and calls `Alloc/TransformManagedToNative` directly. Those are no-ops for the string marshallers, leading to bad marshalling code.\r\n\r\nI think doing allocation+transform in the \"transform\" part is what CoreCLR does as well (`EmitConvertContentsCLRToNative` is where allocation+transform happens for string marshallers in CoreCLR, as opposed to `EmitConvertSpaceAndContentsCLRToNative` which would be the right place based on its name).","Url":"https://github.com/dotnet/corert/pull/7892","RelatedDescription":"Closed or merged PR \"Fix `out string` arguments in reverse p/invoke\" (#7892)"},{"Id":"528780780","IsPullRequest":true,"CreatedAt":"2019-11-27T17:30:09","Actor":"MichalStrehovsky","Number":"7890","RawContent":null,"Title":"Port p/invoke marshalling changes from CoreCLR","State":"closed","Body":"* First commit takes shared files from CoreCLR verbatim.\r\n* Second commit adjusts non-shared files.\r\n* Third commit fixes what appears to be a CppCodegen bug.\r\n","Url":"https://github.com/dotnet/corert/pull/7890","RelatedDescription":"Closed or merged PR \"Port p/invoke marshalling changes from CoreCLR\" (#7890)"},{"Id":"529428997","IsPullRequest":true,"CreatedAt":"2019-11-27T15:46:15","Actor":"yowl","Number":"7891","RawContent":null,"Title":"Wasm: fix unsigned extend to uint64 and add test","State":"open","Body":"This widening cast was failing, particular causing a problem in https://github.com/dotnet/corert/blob/8d81b96c2561fe00a0ac95a40e2dd19642971a5a/src/System.Private.CoreLib/shared/System/Number.DiyFp.cs#L77-L103.  \r\n\r\nAdded a test that failed previously and zext instead of sext for unsigned widening.  There is a parameter that I thought to use, but it is passed false here: https://github.com/dotnet/corert/blob/master/src/Common/src/TypeSystem/IL/ILImporter.cs#L574-L578.  Maybe that is wrong?\r\n\r\nAlso I updated emscripten, this wasn't necessary to fix this, but I got sidetracked with a build error and upgraded.  Its not a bad idea anyway as they changed the build tooling to allow for either the fastcomp or llvm backend and we will need to upgrade at some point.  If you just `git pull` emscripten you will hit a problem with the current scripts due to these changes.  Changed a bit of documentation to fit today's reality.","Url":"https://github.com/dotnet/corert/pull/7891","RelatedDescription":"Open PR \"Wasm: fix unsigned extend to uint64 and add test\" (#7891)"},{"Id":"528779520","IsPullRequest":true,"CreatedAt":"2019-11-26T18:12:44","Actor":"MichalStrehovsky","Number":"7889","RawContent":null,"Title":"Get System.Text.Json to work","State":"closed","Body":"The System.Text.Json that ships with the .NET Core 3.0+ uses Reflection.Emit - we should grab the NetStandard 2.0 version instead.","Url":"https://github.com/dotnet/corert/pull/7889","RelatedDescription":"Closed or merged PR \"Get System.Text.Json to work\" (#7889)"},{"Id":"528703148","IsPullRequest":false,"CreatedAt":"2019-11-26T12:48:11","Actor":"s-m-k","Number":"7888","RawContent":null,"Title":"[macOS] System.Globalization.Native not linking properly when building with InvariantCulture","State":"open","Body":"**Software version:**\r\n.NET Core SDK 2.1.300\r\nILCompiler 1.0.0-alpha-28229-02\r\nmacOS 10.14.4, Darwin Kernel Version 18.5.0\r\n\r\n**Repro steps:**\r\n1. create a MonoGame project (the framework is likely unrelated to the issue, but my project uses it and I haven't isolated the case yet)\r\n2. set `IlcInvariantGlobalization` to `true` in the project file\r\n3. make sure `System.Globalization` is included in the build (e.g. try additionally setting up `CultureInfo.InvariantCulture` at startup in the code)\r\n4. build on macOS\r\n\r\n**Results:**\r\nBuild fails during the linking stage yielding the following errors:\r\n```\r\nld : warning : can't parse dwarf compilation unit info in obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n  Undefined symbols for architecture x86_64:\r\n    \"_u_charsToUChars_ptr\", referenced from:\r\n        _u_charsToUChars_safe in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_u_strlen_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_u_strncpy_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_u_toupper_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOfOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareStringOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucal_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucol_closeElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_close_ptr\", referenced from:\r\n        _GlobalizationNative_CloseSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GetCollatorFromSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        ...\r\n    \"_ucol_getRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getSortKey_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortKey in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getStrength_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getVersion_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortVersion in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_next_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_previous_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_safeClone_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setAttribute_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setMaxVariable_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_strcoll_ptr\", referenced from:\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucurr_forLocale_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ucurr_getName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_getSymbols_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_toPattern_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_canonicalize_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_countAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getBaseName_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getCharacterOrientation_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDefault_ptr\", referenced from:\r\n        _DetectDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getDisplayCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Country_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Language_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getKeywordValue_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getLCID_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getName_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getParent_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ulocdata_getMeasurementSystem_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_getSymbol_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_toPattern_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_usearch_close_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_first_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_getMatchedLength_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_last_ptr\", referenced from:\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_openFromCollator_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n  ld: symbol(s) not found for architecture x86_64\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n/Users/phobia/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/build/Microsoft.NETCore.Native.targets(295,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o\" -o \"bin/Release/netcoreapp2.1/osx-x64/native/Carrion\" /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libbootstrapper.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libRuntime.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.CoreLib.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.TypeLoader.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Globalization.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.IO.Compression.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Net.Security.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Security.Cryptography.Native.Apple.a -g -Wl,-rpath,'$ORIGIN' -lstdc++ -ldl -lm -lz -licucore -framework CoreFoundation -framework Security -framework GSS\" exited with code 1. [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n```\r\n**Expected behavior:**\r\nBuild succeeds, the binary is created.\r\n\r\n**Workaround:**\r\nWhen you build on macOS, don't set `IlcInvariantGlobalization` to `true`.","Url":"https://github.com/dotnet/corert/issues/7888","RelatedDescription":"Open issue \"[macOS] System.Globalization.Native not linking properly when building with InvariantCulture\" (#7888)"},{"Id":"526893131","IsPullRequest":true,"CreatedAt":"2019-11-25T14:33:40","Actor":"yowl","Number":"7885","RawContent":null,"Title":"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…","State":"closed","Body":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing.","Url":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":"Closed or merged PR \"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…\" (#7885)"},{"Id":"527558607","IsPullRequest":false,"CreatedAt":"2019-11-23T13:39:33","Actor":"gimpest","Number":"7887","RawContent":null,"Title":"[SharedLibrary] SIGSEGV on unload","State":"open","Body":"on exit process\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff6770d58 in CloseHandle (handle=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:583\r\n583     /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007ffff6770d58 in CloseHandle (handle=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:583\r\n#1  0x00007ffff672fd25 in PalCloseHandle (arg1=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/Full/../PalRedhawkFunctions.h:14\r\n#2  Thread::Destroy (this=0x6046d0) at /root/corert_3253263/src/Native/Runtime/thread.cpp:375\r\n#3  0x00007ffff6730e23 in ThreadStore::DetachCurrentThread () at /root/corert_3253263/src/Native/Runtime/threadstore.cpp:181\r\n#4  0x00007ffff677196e in TlsDestructionMonitor::~TlsDestructionMonitor (this=<optimized out>) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:468\r\n#5  0x00007ffff792cb19 in (anonymous namespace)::run (p=<optimized out>) at ../../../../libstdc++-v3/libsupc++/atexit_thread.cc:64\r\n#6  0x00007ffff7024b69 in __run_exit_handlers (status=0, listp=0x7ffff73b16c8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77\r\n#7  0x00007ffff7024bb7 in __GI_exit (status=<optimized out>) at exit.c:99\r\n#8  0x00007ffff700d3dc in __libc_start_main (main=0x400abd <main>, argc=1, argv=0x7fffffffe528, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffe518) at ../csu/libc-start.c:300\r\n#9  0x00000000004009f9 in _start ()\r\n```\r\n\r\nshared library\r\n-------------------------------------------\r\n```\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace SharedLibrary\r\n{\r\n        public class Class1\r\n        {\r\n                [NativeCallable(EntryPoint = \"add\", CallingConvention = CallingConvention.StdCall)]\r\n                public static int Add(int a, int b)\r\n                {\r\n                        return a + b;\r\n                }\r\n        }\r\n}\r\n```\r\n\r\nsample(c++) code\r\n-------------------------------------------\r\n```\r\n#include <stdio.h>\r\n#include <dlfcn.h>\r\n\r\ntypedef int(*f_add)(int, int);\r\n\r\nint main(int argc, char* argv[]) {\r\n\tvoid* handle = dlopen (\"SharedLibrary.so\", RTLD_LAZY);\r\n        f_add add = (f_add)dlsym(handle, \"add\");\r\n        printf(\"%d\\r\\n\", add(5, 10));\r\n\tdlclose(handle);\r\n        return 0;\r\n}\r\n```","Url":"https://github.com/dotnet/corert/issues/7887","RelatedDescription":"Open issue \"[SharedLibrary] SIGSEGV on unload\" (#7887)"},{"Id":"526898250","IsPullRequest":true,"CreatedAt":"2019-11-22T04:31:51","Actor":"cshung","Number":"7886","RawContent":null,"Title":"Revert \"Support custom modifier for method signature\"","State":"closed","Body":"This reverts commit 5575cc060201ad462809f48db25a56c35e4eaca0.","Url":"https://github.com/dotnet/corert/pull/7886","RelatedDescription":"Closed or merged PR \"Revert \"Support custom modifier for method signature\"\" (#7886)"},{"Id":"526275945","IsPullRequest":true,"CreatedAt":"2019-11-21T23:19:25","Actor":"cshung","Number":"7884","RawContent":null,"Title":"[WIP] Porting changes from CoreCLR","State":"closed","Body":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy.","Url":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Closed or merged PR \"[WIP] Porting changes from CoreCLR\" (#7884)"},{"Id":"523136354","IsPullRequest":true,"CreatedAt":"2019-11-15T00:35:44","Actor":"Dotnet-GitSync-Bot","Number":"7883","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung @john-h-k @manandre @tannergooding @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7883)"},{"Id":"522914006","IsPullRequest":false,"CreatedAt":"2019-11-14T15:00:12","Actor":"AArnott","Number":"7882","RawContent":null,"Title":"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645","State":"open","Body":"**Repro steps**\r\n\r\n1. Create a new UWP Test project in VS 2019\r\n1. Switch to the Release|x86 solution configuration\r\n1. Build (which succeeds, but with many warnings about a missing assembly)\r\n1. Install the `System.Xml.XPath.XmlDocument` package. Build again. No warnings this time. ❓ Why is this package necessary in the default proejct yet somehow not included in the default project?\r\n1. Set the `AllowUnsafeBlocks=true` msbuild property.\r\n1. Add this method to the UWP test project (or any dependency project/package):\r\n\r\n    ```cs\r\n        private static IntPtr GetAddress(object value)\r\n        {\r\n            unsafe\r\n            {\r\n                TypedReference tr = __makeref(value);\r\n                return **(IntPtr**)(&tr);\r\n            }\r\n        }\r\n    ```\r\n\r\n1. Build again.\r\n\r\n**Expected**\r\n\r\nBuild succeeds.\r\n\r\n**Actual**\r\n\r\nBuild fails with:\r\n\r\n> C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n\r\n\r\nFull log follows\r\n\r\n```\r\n1>------ Build started: Project: UWPUnitTestProject2, Configuration: Release x86 ------\r\n1>  UWPUnitTestProject2 -> D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\bin\\x86\\Release\\UWPUnitTestProject2.exe\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 139 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```","Url":"https://github.com/dotnet/corert/issues/7882","RelatedDescription":"Open issue \"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645\" (#7882)"},{"Id":"522521151","IsPullRequest":true,"CreatedAt":"2019-11-14T02:41:52","Actor":"jkotas","Number":"7881","RawContent":null,"Title":"Delete dead files","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Closed or merged PR \"Delete dead files\" (#7881)"},{"Id":"522441624","IsPullRequest":false,"CreatedAt":"2019-11-13T20:02:05","Actor":"Shadow4walker","Number":"7880","RawContent":null,"Title":"HttpWebRequest/HttpWebResponse Not Working!","State":"open","Body":"HttpWebRequest request= with Headers ....etc\r\nvar httpWebResponse = (HttpWebResponse) await request.GetResponseAsync()\r\nnever passed this code >fail fast!! idk what to put in the rd.xml or if event i should put anything there!","Url":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Open issue \"HttpWebRequest/HttpWebResponse Not Working!\" (#7880)"},{"Id":"518910070","IsPullRequest":true,"CreatedAt":"2019-11-12T22:51:55","Actor":"cshung","Number":"7869","RawContent":null,"Title":"Adding signature matching unit test","State":"closed","Body":"This unit test is meant to validate https://github.com/dotnet/coreclr/pull/27676 \r\n\r\n@dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/corert/pull/7869","RelatedDescription":"Closed or merged PR \"Adding signature matching unit test\" (#7869)"},{"Id":"521355526","IsPullRequest":true,"CreatedAt":"2019-11-12T08:01:33","Actor":"Dotnet-GitSync-Bot","Number":"7879","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7879","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7879)"},{"Id":"521113889","IsPullRequest":true,"CreatedAt":"2019-11-12T06:24:24","Actor":"Dotnet-GitSync-Bot","Number":"7878","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7878","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7878)"},{"Id":"520572011","IsPullRequest":true,"CreatedAt":"2019-11-10T14:20:44","Actor":"jkotas","Number":"7877","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7877","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7877)"},{"Id":"520423064","IsPullRequest":true,"CreatedAt":"2019-11-09T19:45:59","Actor":"Dotnet-GitSync-Bot","Number":"7876","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jnm2 @rob313663 @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7876","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7876)"},{"Id":"520311915","IsPullRequest":true,"CreatedAt":"2019-11-09T13:00:37","Actor":"Dotnet-GitSync-Bot","Number":"7875","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7875","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7875)"},{"Id":"520020083","IsPullRequest":true,"CreatedAt":"2019-11-08T19:44:36","Actor":"jkotas","Number":"7874","RawContent":null,"Title":"Port CoreCLR change","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7874","RelatedDescription":"Closed or merged PR \"Port CoreCLR change\" (#7874)"},{"Id":"519847099","IsPullRequest":true,"CreatedAt":"2019-11-08T13:36:23","Actor":"Dotnet-GitSync-Bot","Number":"7873","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm @tannergooding @CoffeeFlux @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7873","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7873)"},{"Id":"519029005","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:52","Actor":"Dotnet-GitSync-Bot","Number":"7870","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7870","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7870)"},{"Id":"519547667","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:33","Actor":"yowl","Number":"7872","RawContent":null,"Title":"Wasm: Fix compilation error for `build wasm`","State":"closed","Body":"`build wasm` was failing as mentioned at https://github.com/dotnet/corert/pull/7609#issuecomment-527250119.  Extend the `#if` to include `_WASM_` which allows compilation to succeed.","Url":"https://github.com/dotnet/corert/pull/7872","RelatedDescription":"Closed or merged PR \"Wasm: Fix compilation error for `build wasm`\" (#7872)"},{"Id":"519466012","IsPullRequest":false,"CreatedAt":"2019-11-07T19:28:54","Actor":"erherhh4herh","Number":"7871","RawContent":null,"Title":"build.cmd Setting build variables failed.","State":"open","Body":"Whenever I execute build.cmd from \"x64 Native Tools Command Prompt for VS 2017\" I get this message:\r\n\r\nChecking pre-requisites...\r\n\r\nThe system cannot find the batch label specified - CheckMSBuild\r\nSetting build variables failed.\r\n\r\nIf it makes any difference, I clone the repo using `git clone --recursive https://github.com/dotnet/corert.git`.\r\n\r\nI have cmake-3.16.0-rc3 installed, I am on windows 10 pro x64 1903, using visual studio 2017.\r\n\r\nAny help is greatly appreciated,\r\nerherhh4herh.","Url":"https://github.com/dotnet/corert/issues/7871","RelatedDescription":"Open issue \"build.cmd Setting build variables failed.\" (#7871)"},{"Id":"518713147","IsPullRequest":true,"CreatedAt":"2019-11-07T04:02:17","Actor":"Dotnet-GitSync-Bot","Number":"7868","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7868","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7868)"},{"Id":"518273496","IsPullRequest":true,"CreatedAt":"2019-11-06T14:36:00","Actor":"Dotnet-GitSync-Bot","Number":"7867","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7867","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7867)"},{"Id":"517973637","IsPullRequest":true,"CreatedAt":"2019-11-05T21:39:36","Actor":"Dotnet-GitSync-Bot","Number":"7866","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @JesperTreetop","Url":"https://github.com/dotnet/corert/pull/7866","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7866)"},{"Id":"517276028","IsPullRequest":true,"CreatedAt":"2019-11-05T19:15:32","Actor":"Dotnet-GitSync-Bot","Number":"7865","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm","Url":"https://github.com/dotnet/corert/pull/7865","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7865)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"529634783","IsPullRequest":true,"CreatedAt":"2019-11-28T02:52:20","Actor":"dotnet-maestro[bot]","Number":"3978","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3978","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3978)"},{"Id":"529634878","IsPullRequest":true,"CreatedAt":"2019-11-28T02:47:42","Actor":"dotnet-maestro[bot]","Number":"3979","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3979","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3979)"},{"Id":"529412123","IsPullRequest":true,"CreatedAt":"2019-11-27T15:18:49","Actor":"dotnet-maestro[bot]","Number":"3977","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6319\r\n- **Date Produced**: 11/21/2019 2:19 AM\r\n- **Commit**: ba2a72ac9afd9e7260798a6ad14088297570b350\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6319\r\n\r\n[marker]: <> (End:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3977","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#3977)"},{"Id":"529332068","IsPullRequest":true,"CreatedAt":"2019-11-27T14:41:55","Actor":"dotnet-maestro[bot]","Number":"3976","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 5:39 PM\r\n- **Commit**: e1f099bf18a14e8ef5dc50f1a90078839aa102c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19576.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19576.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3976","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3976)"},{"Id":"529276901","IsPullRequest":false,"CreatedAt":"2019-11-27T11:07:45","Actor":"bencyoung","Number":"3975","RawContent":null,"Title":"TargetPath wrong with auto creation of exe?","State":"open","Body":"We have a build system where we need to post-sign our build artifacts so we can run them on our development machines. On .NET Core 2.1 we used a command like:\r\n\r\n```xml\r\n        <SignCommand>$(SignTool) sign /n \"$(CertificateName) /v \"$(TargetPath)\" ...</SignCommand>\r\n```\r\n\r\nand then\r\n\r\n```xml\r\n    <Target Name=\"SignThisAssembly\" AfterTargets=\"Build\" Condition=\"'$(SignThisAssembly)' == 'true'\">\r\n        <Message Text=\"Signing assembly &quot;$(TargetPath)&quot;\" Importance=\"High\" />\r\n        <!-- Attempt 1 -->\r\n        <Exec Command=\"$(SignCommand)\" ContinueOnError=\"true\">\r\n            <Output TaskParameter=\"ExitCode\" PropertyName=\"ExitCode\" />\r\n        </Exec>\r\n```\r\n\r\nWith netcoreapp3.1 this fails because $(TargetPath) points to the dll, but at some point an exe is produced instead and this *isn't* signed. Is there a new or separate property that points to the exe or do we need to move the signing to a later stage or something?\r\n\r\nThank,\r\nBen","Url":"https://github.com/dotnet/sdk/issues/3975","RelatedDescription":"Open issue \"TargetPath wrong with auto creation of exe?\" (#3975)"},{"Id":"528992188","IsPullRequest":false,"CreatedAt":"2019-11-26T21:52:50","Actor":"lamawithonel","Number":"3974","RawContent":null,"Title":"`dotnet tool run pwsh` always returns 0","State":"open","Body":"### Steps to reproduce\r\n\r\n```sh\r\ndotnet tool install --global powershell\r\ndotnet tool run pwsh -- 'exit 1'\r\necho $?\r\n```\r\n\r\n### Expected behavior\r\n\r\nOutput of `echo $?` should equal `1`\r\n\r\n### Actual behavior\r\n\r\nOutput of `echo $?` equals `0`\r\n\r\n### Environment data\r\n\r\n```\r\nPS > $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.2.3\r\nPSEdition                      Core\r\nGitCommitId                    6.2.3\r\nOS                             Darwin 18.7.0 Darwin Kernel Version 18.7.0: Sat Oct 12 00:02:19 PDT 2019; root:xnu-4903.278.12~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\ndotnet SDK: version 3.0.101\r\nBash 5.0.11\r\n\r\nAlso reported at PowerShell/PowerShell#11203","Url":"https://github.com/dotnet/sdk/issues/3974","RelatedDescription":"Open issue \"`dotnet tool run pwsh` always returns 0\" (#3974)"},{"Id":"527466091","IsPullRequest":true,"CreatedAt":"2019-11-26T20:06:20","Actor":"dotnet-maestro[bot]","Number":"3959","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3959","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3959)"},{"Id":"528898727","IsPullRequest":false,"CreatedAt":"2019-11-26T18:25:54","Actor":"patrolez","Number":"3973","RawContent":null,"Title":"`dotnet build` creating wrong executable name","State":"open","Body":"Hello everyone!\r\n\r\n## Problem\r\n\r\nI have noticed that `dotnet build` results in exactly the same naming mistake as it was already mentioned in <https://github.com/dotnet/sdk/issues/1396>, but I can reproduce the issue for `dotnet build` command, while *publish* command is producing correctly named executable.\r\n\r\n## Steps to reproduce\r\n\r\nJust like in <https://github.com/dotnet/sdk/issues/1396>, but with `dotnet build` instead of *dotnet publish*.\r\n\r\n## Environment\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     neon\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.802/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  19942e7199\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/usr/share/dotnet/sdk]\r\n  3.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.14 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.14 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3973","RelatedDescription":"Open issue \"`dotnet build` creating wrong executable name\" (#3973)"},{"Id":"528872650","IsPullRequest":true,"CreatedAt":"2019-11-26T17:32:07","Actor":"sfoslund","Number":"3972","RawContent":null,"Title":"Consolidating PackageVersion and NuGetPackageVersion metadata","State":"open","Body":"Removing PacakgeVersion metadata in favor of NuGetPackageVersion \r\nFixes #3499","Url":"https://github.com/dotnet/sdk/pull/3972","RelatedDescription":"Open PR \"Consolidating PackageVersion and NuGetPackageVersion metadata\" (#3972)"},{"Id":"528709868","IsPullRequest":true,"CreatedAt":"2019-11-26T14:46:54","Actor":"dotnet-maestro[bot]","Number":"3971","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191125.7\r\n- **Date Produced**: 11/26/2019 4:27 AM\r\n- **Commit**: 549475dff607986e6d9626f0dc8678e9736b7d0c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19575.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19575.7\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19575.7\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3971","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3971)"},{"Id":"528706655","IsPullRequest":false,"CreatedAt":"2019-11-26T12:54:58","Actor":"ransagy","Number":"3970","RawContent":null,"Title":"dotnet installer script fails to add to PATH in CentOS 7","State":"open","Body":"I'm trying to use the `dotnet-install.sh` script to install .NET Core 3.0 on an Azure Batch CentOS 7 node. This is the script i use in the startup task:\r\n\r\n```shell\r\n# mostly according to https://docs.microsoft.com/en-us/dotnet/core//install/dependencies?tabs=netcore30&pivots=os-linux\r\n\r\n# add the mono .net repo for libgdiplus\r\nrpmkeys --import \"http://pool.sks-keyservers.net/pks/lookup?op=get&search=0x3fa7e0328081bff6a14da29aa6a19b38d3d831ef\"\r\nsu -c 'curl https://download.mono-project.com/repo/centos7-stable.repo | tee /etc/yum.repos.d/mono-centos7-stable.repo'\r\n\r\n# install dotnet core prereqs for CentOS 7 \r\nyum install libicu libunwind libgdiplus -y\r\n\r\n# get MS' installer script and set execute perms\r\ncurl -O -L https://dot.net/v1/dotnet-install.sh \r\nchmod a+x dotnet-install.sh \r\n\r\n# get latest 3.0 install\r\n./dotnet-install.sh -Runtime dotnet -Channel 3.0 \r\n\r\n# make sure this works\r\ndotnet --list-runtimes\r\n```\r\n\r\nThe script output shows it is TRYING to add it to the PATH:\r\n\r\n```\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Runtime/3.0.0/dotnet-runtime-3.0.0-linux-x64.tar.gz\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Runtime/3.0.0/dotnet-runtime-3.0.0-linux-x64.tar.gz\r\ndotnet-install: Adding to current process PATH: `/mnt/resource/batch/tasks/startup/wd/.dotnet`. Note: This change will be visible only when sourcing script.\r\ndotnet-install: Installation finished successfully.\r\n```\r\n\r\nbut the result is `dotnet: command not found`. Obviously if i run it directly from the given path it works. I do believe in a previous version i did try doing `source dotnet-install.sh ...` to no avail.","Url":"https://github.com/dotnet/sdk/issues/3970","RelatedDescription":"Open issue \"dotnet installer script fails to add to PATH in CentOS 7\" (#3970)"},{"Id":"528337522","IsPullRequest":true,"CreatedAt":"2019-11-26T01:28:19","Actor":"wtgodbe","Number":"3969","RawContent":null,"Title":"Add trigger for internal builds","State":"closed","Body":"Needed for the internal builds for 3.1.1. CC @wli3 @livarcocc @mmitche","Url":"https://github.com/dotnet/sdk/pull/3969","RelatedDescription":"Closed or merged PR \"Add trigger for internal builds\" (#3969)"},{"Id":"528133333","IsPullRequest":false,"CreatedAt":"2019-11-25T21:49:11","Actor":"jzabroski","Number":"3967","RawContent":null,"Title":"[Question] Is there a component that drives how to update csproj files?","State":"closed","Body":"There are some interesting quirks in Visual Studio when using the new csproj SDK file format.  I am not clear if this is a Visual Studio component, or a general re-usable component that might be shared between Visual Studio and Visual Studio Code.  If there is a general re-usable component, I'd like to contribute test cases to improve its behavior.\r\n\r\nAs a brief example of annoyances:\r\n\r\n```xml\r\n    <Content Include=\"App.config\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n    <Content Include=\"App.*.config\">\r\n      <DependentUpon>App.config</DependentUpon>\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n```\r\n\r\nRight clicking on App.config and doing copy-paste results in a new file.  Then you re-name that file App.Production.config and get an additional entry (as well as an error message box from Visual Studio).\r\n\r\nThis produces spurious entries in my csproj SDK file:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <None Remove=\"App - Copy.config\" />\r\n    <None Remove=\"App.Production.config\" />\r\n```\r\n\r\nFurther, creating an App.Beta.config on top of App.config and App.Production.config produces even more spruious behavior that is truly unexpected.  Copying and renaming App.config to App.Beta.Config generates a spurious App - Copy.Production.config!\r\n\r\nIf this is not a first class component, I think it's worth considering.  Benefits include fewer merge conflicts and cleaner csproj SDK projects.","Url":"https://github.com/dotnet/sdk/issues/3967","RelatedDescription":"Closed issue \"[Question] Is there a component that drives how to update csproj files?\" (#3967)"},{"Id":"528210775","IsPullRequest":false,"CreatedAt":"2019-11-25T16:51:05","Actor":"kmuthukumar23","Number":"3968","RawContent":null,"Title":"How can install preview version of SDKs in linux using CLI","State":"open","Body":"I want to install the .net core 3.1 preview 3 in linux machine using command line\r\n\r\nIs there any ways to install the preview versions of .Net Core SDKs in linux machine using command line?\r\n\r\nFor example,\r\n\r\n> sudo apt-get update\r\n\r\n> sudo apt-get install apt-transport-https\r\n\r\n> sudo apt-get update\r\n\r\n> sudo apt-get install dotnet-sdk-3.0\r\n\r\nAbove Command used to install the SDK 3.0 in linux. Now i want to install latest .net core 3.1 preview 3 by the same way.\r\n\r\nIs this possible?  Please help me on this?\r\n","Url":"https://github.com/dotnet/sdk/issues/3968","RelatedDescription":"Open issue \"How can install preview version of SDKs in linux using CLI\" (#3968)"},{"Id":"528071596","IsPullRequest":true,"CreatedAt":"2019-11-25T14:52:02","Actor":"dotnet-maestro[bot]","Number":"3966","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191124.1\r\n- **Date Produced**: 11/24/2019 2:49 PM\r\n- **Commit**: 87b59e17420bf0c3341edacbd8a6721e619afbac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19574.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19574.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19574.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3966","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3966)"},{"Id":"528069653","IsPullRequest":false,"CreatedAt":"2019-11-25T12:57:39","Actor":"ceka","Number":"3965","RawContent":null,"Title":"segmentation fault ubuntu 16.04","State":"open","Body":"i've got strange results after upgrading to dotnet-3.0 sdk.\r\n\r\n1) dotnet run never finish\r\n2) dotnet build works as usual\r\n3) dotnet run --no-build runs after step 2)\r\n4) dotnet run --no-build sometimes DEFUNCT\r\n5) dotnet run --no-build sometimes goes into segmentation fault\r\n\r\ntested on new console project.\r\n```bash\r\nck@poznan:~/src/test2$ ls\r\nProgram.cs  test2.csproj\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3965","RelatedDescription":"Open issue \"segmentation fault ubuntu 16.04\" (#3965)"},{"Id":"527694546","IsPullRequest":true,"CreatedAt":"2019-11-24T14:56:53","Actor":"dotnet-maestro[bot]","Number":"3964","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191123.1\r\n- **Date Produced**: 11/23/2019 2:22 PM\r\n- **Commit**: 9393e2e903d42774c63770e40119c1621b88dc16\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19573.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19573.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19573.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3964","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3964)"},{"Id":"527693817","IsPullRequest":false,"CreatedAt":"2019-11-24T12:55:04","Actor":"kiranpradeep","Number":"3963","RawContent":null,"Title":"dotnet add package fails when using global.json","State":"open","Body":"We could reproduce the issue in 5 steps below. To verify if this happen across operating systems, I tried below steps also on a macOS 10.13.4, which gave same results.\r\n\r\n1. dotnet --info\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   2.2.401\r\n>  Commit:    729b316c13\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  18.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.18.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.2.401/\r\n> \r\n> Host (useful for support):\r\n>   Version: 2.2.6\r\n>   Commit:  7dac9b1b51\r\n> \r\n> .NET Core SDKs installed:\r\n>   2.1.301 [/usr/share/dotnet/sdk]\r\n>   2.2.401 [/usr/share/dotnet/sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.2.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n> \r\n> To install additional .NET Core runtimes or SDKs:\r\n>   https://aka.ms/dotnet-download\r\n> \r\n\r\n2. mkdir -p /tmp/bug_squasher && cd /tmp/bug_squasher\r\n3. echo '{\"sdk\":{\"version\":\"2.1.301\"}}' >> global.json\r\n4. dotnet new console\r\n5. dotnet add package Newtonsoft.Json\r\n\r\n>  Writing /tmp/tmpzUOVzz.tmp\r\n> info : Adding PackageReference for package 'Newtonsoft.Json' into project '/tmp/bug_squasher/bug_squasher.csproj'.\r\n> log  : Restoring packages for /tmp/bug_squasher/bug_squasher.csproj...\r\n> error: Unable to get repository signature information for source https://api.nuget.org/v3-index/repository-signatures/4.7.0/index.json.\r\n> error:   The SSL connection could not be established, see inner exception.\r\n> error:   error:2006D080:BIO routines:BIO_new_file:no such file","Url":"https://github.com/dotnet/sdk/issues/3963","RelatedDescription":"Open issue \"dotnet add package fails when using global.json\" (#3963)"},{"Id":"527554753","IsPullRequest":true,"CreatedAt":"2019-11-23T15:32:09","Actor":"dotnet-maestro[bot]","Number":"3962","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.5\r\n- **Date Produced**: 11/22/2019 11:00 PM\r\n- **Commit**: 18ef57ae9aa0a728553f757e312b369d82e0abc9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19572.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19572.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19572.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3962","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3962)"},{"Id":"527510977","IsPullRequest":true,"CreatedAt":"2019-11-23T05:00:29","Actor":"dotnet-maestro[bot]","Number":"3961","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.9\r\n- **Date Produced**: 11/27/2019 1:52 AM\r\n- **Commit**: f3f2dd583fffa254015fc21ff0e45784b333256d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.9\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3961","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3961)"},{"Id":"527502218","IsPullRequest":true,"CreatedAt":"2019-11-23T03:20:24","Actor":"dotnet-maestro-bot","Number":"3960","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* wli3\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3960","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#3960)"},{"Id":"527417691","IsPullRequest":true,"CreatedAt":"2019-11-23T03:16:55","Actor":"wli3","Number":"3956","RawContent":null,"Title":"update branding 3.1.101 servicing","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3956","RelatedDescription":"Closed or merged PR \"update branding 3.1.101 servicing\" (#3956)"},{"Id":"527465986","IsPullRequest":true,"CreatedAt":"2019-11-23T02:17:40","Actor":"dotnet-maestro[bot]","Number":"3958","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3958","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3958)"},{"Id":"527452448","IsPullRequest":true,"CreatedAt":"2019-11-22T22:53:20","Actor":"sfoslund","Number":"3957","RawContent":null,"Title":"Add Incremental publishing","State":"open","Body":"Adding incremental publishing and test coverage for the following cases:\r\n- Single file publishes\r\n- Renaming project between publishes\r\n- Trimmed publishes\r\n- MVC project publishes\r\n- Custom output directories","Url":"https://github.com/dotnet/sdk/pull/3957","RelatedDescription":"Open PR \"Add Incremental publishing\" (#3957)"},{"Id":"527379700","IsPullRequest":true,"CreatedAt":"2019-11-22T19:40:02","Actor":"dotnet-maestro-bot","Number":"3955","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"open","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3955","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#3955)"},{"Id":"527182653","IsPullRequest":true,"CreatedAt":"2019-11-22T14:26:52","Actor":"dotnet-maestro[bot]","Number":"3954","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191121.10\r\n- **Date Produced**: 11/22/2019 3:08 AM\r\n- **Commit**: 6ade65ab9d2d63b3fcb73647fc109e2b36ffdc80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19571.10\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19571.10\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3954","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3954)"},{"Id":"526939335","IsPullRequest":true,"CreatedAt":"2019-11-22T03:20:52","Actor":"dotnet-maestro[bot]","Number":"3953","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191121.5\r\n- **Date Produced**: 11/22/2019 12:55 AM\r\n- **Commit**: 4e1bb23ca12cfe3de0b7e834872ed7327377d420\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3953","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3953)"},{"Id":"526784083","IsPullRequest":false,"CreatedAt":"2019-11-22T00:28:30","Actor":"DerAlbertCom","Number":"3951","RawContent":null,"Title":"SDK 3.0.101 is not delivered via Visual Studio","State":"closed","Body":"A promise of the SDK 3.0 was that a new version of an patch level SDK will uninstall the the previous Version. Great, less hassle keeping the machine cleaner.\r\n\r\nSo I downloaded the SDK (main download page), installed it and, of course SDK 3.0.100 still present on the machine.\r\n![image](https://user-images.githubusercontent.com/136992/69367812-42e42900-0c99-11ea-9f18-caa18c4c47d1.png)\r\n\r\nSo there is a Visual Studio Version of the SDK and an \"other\" Version of the SDK. Or what is happening here? \r\n\r\nAnd why is Visual Studio (Released 2019/10/20) not updating the SDK (Released 2019/10/19). \r\n\r\nThe SDK Update mess is really confusing. \r\n","Url":"https://github.com/dotnet/sdk/issues/3951","RelatedDescription":"Closed issue \"SDK 3.0.101 is not delivered via Visual Studio\" (#3951)"},{"Id":"526799014","IsPullRequest":true,"CreatedAt":"2019-11-21T19:35:11","Actor":"dotnet-maestro[bot]","Number":"3952","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.08\r\n- **Date Produced**: 11/27/2019 1:35 AM\r\n- **Commit**: 547ae1f5f072d130b32ec3089876711070b2dc4f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-08\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3952","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3952)"},{"Id":"526780721","IsPullRequest":false,"CreatedAt":"2019-11-21T18:57:01","Actor":"DerAlbertCom","Number":"3950","RawContent":null,"Title":"SDK 2.2.403 is missing","State":"open","Body":"Your SDK Upgrade Rules and Policies are getting not better.\r\n\r\nThere is no SDK 2.2.403 (for VS 16.2 and V16.3) and which includes Runtime 2.2.8. With that in mind that we should not specificy an ASP.NET Core Version in the .csproj means that even with Runtime 2.2.8 installed only Runtime 2.2.7 will be used at compile and debug time. Because without a Version Number on the ASP.NET Core PackageReference the Runtime from the SDK will be used.\r\n\r\nSo how I am supposed to test against 2.2.8?","Url":"https://github.com/dotnet/sdk/issues/3950","RelatedDescription":"Open issue \"SDK 2.2.403 is missing\" (#3950)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1199788744578150402","CreatedAt":"2019-11-27T20:35:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @JohnBaluka and @ChristosMatskas give us an interesting look at the architecture of n… https://t.co/jjc2y9yedf","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":22,"FavoriteCount":9,"RawContent":null},{"Id":"1199724568946065413","CreatedAt":"2019-11-27T16:20:01+00:00","UserScreenname":"dotnet","Text":"Last week we made some security fixes to #dotNET Core. Here are all the links you'll need for the downloads and ima… https://t.co/CPn6xKrDS4","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":31,"FavoriteCount":16,"RawContent":null},{"Id":"1199457805310341120","CreatedAt":"2019-11-26T22:40:00+00:00","UserScreenname":"dotnet","Text":"Introducing Orleans 3.0 - a cross-platform framework for building distributed applications with #dotNET. \n\nSee the… https://t.co/bHqtQuwswt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":189,"FavoriteCount":92,"RawContent":null},{"Id":"1199395897336950784","CreatedAt":"2019-11-26T18:34:00+00:00","UserScreenname":"dotnet","Text":"Check out this #OnDotNet episode as @jeremylikness &amp; @vickyharp talk about the new SqlClient package!\n\n🚀 Working wi… https://t.co/H4rHYV7P4T","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"1199374513433124864","CreatedAt":"2019-11-26T17:09:01+00:00","UserScreenname":"dotnet","Text":"Here is some really great info about using gRPC as a replacement for WCF c/o @CODEmagazine. Learn more:… https://t.co/4ZwiaJZdLD","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":49,"FavoriteCount":21,"RawContent":null},{"Id":"1199076549171056641","CreatedAt":"2019-11-25T21:25:01+00:00","UserScreenname":"dotnet","Text":"New from @CODEmagazine: Essential C#\nLearn more about:\n➡️ Nullable Reference Types\n➡️ Asynchronous Streams\n➡️ Enhan… https://t.co/SbwqL0UURS","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":73,"FavoriteCount":28,"RawContent":null},{"Id":"1199012126452523013","CreatedAt":"2019-11-25T17:09:02+00:00","UserScreenname":"dotnet","Text":"#OnDotNET welcomes @JulieLerman for some insight and great tips on working with #EntityFramework in #Docker.\n\nBonus… https://t.co/1iKJvMmSdQ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"1197990894588350468","CreatedAt":"2019-11-22T21:31:01+00:00","UserScreenname":"dotnet","Text":"Decision: Do you go Native or use Forms for your cross-platform mobile app in #Xamarin? @CODEmagazine weighs the pr… https://t.co/dzt83q8eML","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":5,"RawContent":null},{"Id":"1197917159181160448","CreatedAt":"2019-11-22T16:38:01+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, @VickyHarp joins to talk #MicrosoftDataSqlClient, why it was created, feature scenari… https://t.co/sU3kalQUYZ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":24,"FavoriteCount":13,"RawContent":null},{"Id":"1197643853257486337","CreatedAt":"2019-11-21T22:32:00+00:00","UserScreenname":"dotnet","Text":"Hey! Did you know we updated the #dotNET Framework Repair tool? See what's changed and then download it (just in ca… https://t.co/O6rg8WQ9Kk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"1197629766091841537","CreatedAt":"2019-11-21T21:36:01+00:00","UserScreenname":"dotnet","Text":"#VS4Mac has come a long way since its initial #Xamarin development days. This month's @CODEmagazine has a great art… https://t.co/amT38JtrGm","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"1197574221255151616","CreatedAt":"2019-11-21T17:55:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":19,"FavoriteCount":6,"RawContent":null},{"Id":"1197565340529631233","CreatedAt":"2019-11-21T17:20:01+00:00","UserScreenname":"dotnet","Text":"...news you may have missed from #MSIgnite...\n\n#MLdotNET 1.4 and updates to Model Builder in #VisualStudio are now… https://t.co/MFTOiXcgqi","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":38,"FavoriteCount":30,"RawContent":null},{"Id":"1197261086912843776","CreatedAt":"2019-11-20T21:11:01+00:00","UserScreenname":"dotnet","Text":"\"...forward-looking tech to approach Web dev in very different ways. There are now more ways than ever to create gr… https://t.co/WT8OdC1tqI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2019-11-28T05:30:40.5600855Z","RunDurationInMilliseconds":16830}