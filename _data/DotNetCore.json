{"Data":{"Blog":{"FeedItems":[{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 1)","PublishedOn":"2019-06-10T15:22:01+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Olia recently wrote a post about how to port a WinForms app from .NET Framework to .NET Core. Today, I&#8217;d like to follow that up by walking through the steps to migrate a sample WPF app to .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9874690732","Type":"PullRequestEvent","CreatedAt":"2019-06-23T03:53:44","Actor":"tommcdon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25335","RelatedDescription":"Merged pull request \"remove non-windows test pipelines\" (#25335) at dotnet/coreclr","RelatedBody":""},{"Id":"9874690278","Type":"PullRequestEvent","CreatedAt":"2019-06-23T03:53:22","Actor":"tommcdon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25335","RelatedDescription":"Opened pull request \"remove non-windows test pipelines\" (#25335) at dotnet/coreclr","RelatedBody":""},{"Id":"9874613124","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:55:18","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25047","RelatedDescription":"Merged pull request \"Change exception throwing in Path.GetRelativePath\" (#25047) at dotnet/coreclr","RelatedBody":"Related to https://github.com/dotnet/corefx/issues/38197\r\n\r\nPlease review.\r\nThank you in advance"},{"Id":"9874610721","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:53:21","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25332","RelatedDescription":"Closed pull request \"Test https://github.com/dotnet/coreclr/pull/25115\" (#25332) at dotnet/coreclr","RelatedBody":""},{"Id":"9874609969","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:52:44","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25115","RelatedDescription":"Merged pull request \"ArgumentException: use system-supplied message if message is null\" (#25115) at dotnet/coreclr","RelatedBody":"Enable using a system-supplied message while also providing an argument/parameter name by passing in a null message. While providing a specific error message would be best, providing a parameter name is better than nothing.\r\n\r\nMade my changes to match the behavior of FileNotFoundException. I think this change is relatively safe since it checks the HResult value, so subclasses that set the HResult will not be affected. Also the basic Exception class already provides a default string if the message is null, so `Message == null` checks should not exist."},{"Id":"9874550520","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:06:29","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25333","RelatedDescription":"Merged pull request \"Fix ReturnKind classification for byref like types returned in registers\" (#25333) at dotnet/coreclr","RelatedBody":"These types contain byrefs, and so when returned in registers we may need\r\nto avoid GC stress at the return site.\r\n\r\nAddresses part of #24263."},{"Id":"9874161576","Type":"IssuesEvent","CreatedAt":"2019-06-22T21:09:14","Actor":"Lakritzator","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25334","RelatedDescription":"Opened issue \"Wpf applications can be published as a trimmed single exe\" (#25334) at dotnet/coreclr","RelatedBody":"I'm not sure if this is the correct repository for this.\r\n\r\nWhen using dotnet sdk 3.0.100-preview7-012564 (and a lot of builds before this) I get a crash when starting a publishing a WPF application as a trimmed single exe.\r\n\r\nAn example repository is located here: https://github.com/Lakritzator/WpfPublishTrimmedCrash\r\nIt's a \"dotnet new wpf\" with a textbox added, as without it the error is not visible.\r\n\r\nRunning the following on the project:\r\n```\r\ndotnet publish WpfTest.csproj -f netcoreapp3.0 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true /p:RuntimeIdentifier=win-x64\r\n```\r\n\r\nThan starting the WpfText.exe which is located in bin\\Release\\netcoreapp3.0\\win-x64\\publish\r\nwill not start the application, and in the eventlog I can see the following error:\r\n```\r\nApplication: WpfTest.exe\r\nCoreCLR Version: 4.700.19.32201\r\n.NET Core Version: 3.0.0-preview7-27822-04\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeInitializationException: The type initializer for 'System.Windows.Media.FontFamily' threw an exception.\r\n ---> System.TypeInitializationException: The type initializer for 'MS.Internal.FontCache.DWriteFactory' threw an exception.\r\n ---> System.InvalidCastException: Specified cast is not valid.\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode, IntPtr errorInfo)\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.Factory.Initialize(FactoryType factoryType)\r\n   at MS.Internal.Text.TextInterface.Factory..ctor(FactoryType factoryType, IFontSourceCollectionFactory fontSourceCollectionFactory, IFontSourceFactory fontSourceFactory)\r\n   at MS.Internal.Text.TextInterface.Factory.Create(FactoryType factoryType, IFontSourceCollectionFactory fontSourceCollectionFactory, IFontSourceFactory fontSourceFactory)\r\n   at MS.Internal.FontCache.DWriteFactory..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.FontCache.DWriteFactory.get_SystemFontCollection()\r\n   at MS.Internal.FontCache.FamilyCollection.FromWindowsFonts(Uri folderUri)\r\n   at System.Windows.Media.FontFamily.PreCreateDefaultFamilyCollection()\r\n   at System.Windows.Media.FontFamily..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Media.Typeface..ctor(FontFamily fontFamily, FontStyle style, FontWeight weight, FontStretch stretch)\r\n   at MS.Internal.Text.DynamicPropertyReader.GetTypeface(DependencyObject element)\r\n   at MS.Internal.Text.TextProperties.InitCommon(DependencyObject target)\r\n   at MS.Internal.Text.TextProperties..ctor(FrameworkElement target, Boolean isTypographyDefaultValue)\r\n   at System.Windows.Controls.TextBoxView.GetLineProperties()\r\n   at System.Windows.Controls.TextBoxView.TextCache..ctor(TextBoxView owner)\r\n   at System.Windows.Controls.TextBoxView.EnsureCache()\r\n   at System.Windows.Controls.TextBoxView.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.Controls.ScrollContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.ScrollViewer.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Control.MeasureOverride(Size constraint)\r\n   at System.Windows.Controls.TextBox.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.StackPanel.StackMeasureHelper(IStackMeasure measureElement, IStackMeasureScrollData scrollData, Size constraint)\r\n   at System.Windows.Controls.StackPanel.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\r\n   at System.Windows.Window.MeasureOverride(Size availableSize)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Interop.HwndSource.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SourceWindowHelper.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SetRootVisual()\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at System.Windows.Application.Run(Window window)\r\n   at System.Windows.Application.Run()\r\n   at WpfTest.App.Main()\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9873230933","Type":"PullRequestEvent","CreatedAt":"2019-06-22T12:35:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11611","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#11611) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n"},{"Id":"9873188767","Type":"PullRequestEvent","CreatedAt":"2019-06-22T12:11:08","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11612","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/templating\" (#11612) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190621.2\r\n- **Date Produced**: 6/21/2019 9:17 PM\r\n- **Commit**: f90d317ef52c0d69808f02eca76f364cab379268\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19321.2\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9873293148","Type":"PullRequestEvent","CreatedAt":"2019-06-22T13:11:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1271) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9873275614","Type":"PullRequestEvent","CreatedAt":"2019-06-22T13:01:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1271) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9873193698","Type":"PullRequestEvent","CreatedAt":"2019-06-22T12:13:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1270","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1270) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9873176634","Type":"PullRequestEvent","CreatedAt":"2019-06-22T12:03:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1270","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1270) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9871653362","Type":"IssuesEvent","CreatedAt":"2019-06-21T22:08:20","Actor":"tstuts","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1269","RelatedDescription":"Opened issue \"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"\" (#1269) at dotnet/standard","RelatedBody":"I'm not sure where this issue should be reported, but since it is somewhat related to dotnet/standard#542, I figured I'd start here. This week, some of my team installed the latest updates in Visual Studio for Mac and after doing so they now encounter errors when trying to build. I've created a simple reproduction at https://github.com/tstuts/net-standard-test using a Xamarin.Mac app and a .NET Standard library.\r\n\r\n<br>\r\n\r\n#### Working Configuration:\r\n```\r\nVisual Studio: 8.0.9.5\r\nMono: 5.18.1.3\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/WorkingOlderConfig.txt)\r\n<br>\r\n\r\n#### Broken Configuration:\r\n```\r\nVisual Studio: 8.1.1.27\r\nMono: 5.18.1.28\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/BrokenUpdatedConfig.txt)\r\nThis configuration produces the following error:\r\n```\r\nError CS0012: The type 'Guid' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (NetStandardTestApp)\r\n```"},{"Id":"9869854656","Type":"IssuesEvent","CreatedAt":"2019-06-21T16:29:24","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1250","RelatedDescription":"Closed issue \"Expose System.ServiceModel.ServiceHost in .NET Standard 2.0\" (#1250) at dotnet/standard","RelatedBody":"Currently we can't access the ServiceHost under the System.ServiceModel.\r\nIs there a way that we can access the ServiceHost under the NET Standard 2.0?\r\n\r\n\r\nAny inputs are much appreciated.\r\n\r\nThanks,\r\n-Marvin"},{"Id":"9869851705","Type":"IssuesEvent","CreatedAt":"2019-06-21T16:28:55","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Closed issue \"Hosting environment or server.mappath in .net framework\" (#1228) at dotnet/standard","RelatedBody":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks"},{"Id":"9869846706","Type":"IssuesEvent","CreatedAt":"2019-06-21T16:28:06","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Closed issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?"},{"Id":"9869842976","Type":"IssuesEvent","CreatedAt":"2019-06-21T16:27:26","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1248","RelatedDescription":"Closed issue \"Multiple DLLs from referenced .NET Standard projects\" (#1248) at dotnet/standard","RelatedBody":"I've created three .NET Standard 2.0 class library C# projects with Visual Studio 2017 (default settings).\r\n\r\n**Projects:**\r\n\r\n- MainProject (no dependencies)\r\n- TimeProject -> Dependencies -> Projects -> MainProject\r\n- ClockProject -> Dependencies -> Projects -> TimeProject\r\n\r\nEach of them have its own output directory. The DLL file should and is placed that output directory but the problem is that the referenced project DLLs are also placed in each output directory.\r\n\r\n**Output directories and files:**\r\n- Projects\\Build\\MainProject\r\n  - MainProject.dll\r\n- Projects\\Build\\TimeProject \r\n  - TimeProject.dll\r\n- Projects\\Build\\ClockProject \r\n  - ClockProject.dll\r\n  - MainProject.dll <-- my problem\r\n\r\n**Example of ProjectReference in ClockProject.csproj file:**\r\n\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\TimeProject\\TimeProject.csproj\">\r\n    <Private>false</Private>\r\n  </ProjectReference>\r\n</ItemGroup>\r\n```\r\n\r\nThe ClockProject referencing the TimeProject which referencing the MainProject.\r\n\r\nI want to prevent that the ClockProject creates a MainProject.dll in its output directory because the MainProject.dll already exists in the output directory of the MainProject."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9874763206","Type":"PullRequestEvent","CreatedAt":"2019-06-23T04:51:12","Actor":"ts2do","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38790","RelatedDescription":"Opened pull request \"Eliminate extra time zone conversions in DateTimeOffset\" (#38790) at dotnet/corefx","RelatedBody":"Revised members dealing specifically with local time by removing delegation to `DateTime` methods to avoid an extra call to `TimeZoneInfo` to determine offset:\r\n> Now\r\n> FromFileTime(long)\r\n> ToLocalTime()"},{"Id":"9874714811","Type":"PullRequestEvent","CreatedAt":"2019-06-23T04:12:37","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38789","RelatedDescription":"Merged pull request \"Fix SslStream client auth with intermediate certificates on Linux\" (#38789) at dotnet/corefx","RelatedBody":"On Linux, a client TLS certificate chaining to multiple intermediate certificates wasn't\r\nsending the complete list of intermediates because the final one in the chain wasn't\r\ntrusted. This differs from Windows behavior. This was causing the application to fail\r\nto authenticate to the payment provider in the repro.\r\n\r\nThis PR fixes SslStream so that it will send the complete list of intermediates if the\r\nchain build operation results in a \"PartialChain\" instead of a fully trusted chain.\r\n\r\nDue to the complexity of this scenario, I didn't write a standalone CI test. But I was\r\nable to run the original repro (using a docker container) to validate the fix.\r\n\r\nFixes #37927"},{"Id":"9874714805","Type":"IssuesEvent","CreatedAt":"2019-06-23T04:12:37","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37927","RelatedDescription":"Closed issue \"HttpClient with client certificate fails with OpenSslCryptographicException on Linux\" (#37927) at dotnet/corefx","RelatedBody":"I am trying to make calls from ASP.NET Core application to [Swish payment platform](https://developer.getswish.se/merchants/) \r\nsimulator Web API. I am using `HttpClient` to make the calls and I am attaching client certificate which is required by the API.\r\n\r\nThis is the code I am using (full source code [here](https://pescn.visualstudio.com/_git/AspNetCoreSwish?path=%2Fsrc%2FSwishClient%2FControllers%2FApiController.cs&version=GBmaster)):\r\n```\r\nvar cert = GetCertificate(\"Swish_Merchant_TestCertificate_1231181189.p12\", \"swish\");\r\n\r\nvar handler = new HttpClientHandler();\r\nhandler.ClientCertificates.Add(cert);\r\n\r\nvar client = new HttpClient(handler);\r\n\r\nconst string paymentPath = \"https://mss.cpc.getswish.net/swish-cpcapi/api/v1/paymentrequests/\";\r\n\r\nvar response = await client.PostAsync(paymentPath, PaymentModel.GetSampleContent());\r\n\r\nvar responseContent = await response.Content.ReadAsStringAsync();\r\n```\r\n\r\nEverything works fine on Windows but as soon as I switch to Docker on Linux I get the following exception during the API call:\r\n\r\n```\r\nAn unhandled exception occurred while processing the request.\r\nOpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\nUnknown location\r\n\r\nSslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL.\r\nInterop+OpenSsl.DoSslHandshake(SafeSslHandle context, byte[] recvBuf, int recvOffset, int recvCount, out byte[] sendBuf, out int sendCount)\r\n\r\nAuthenticationException: Authentication failed, see inner exception.\r\nSystem.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n\r\nHttpRequestException: The SSL connection could not be established, see inner exception.\r\nSystem.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n```\r\n```\r\nInterop+OpenSsl+SslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL. ---> Interop+Crypto+OpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\n   --- End of inner exception stack trace ---\r\n   at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n```\r\n```\r\nSystem.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: Authentication failed, see inner exception. ---> Interop+OpenSsl+SslException: SSL Handshake failed with OpenSSL error - SSL_ERROR_SSL. ---> Interop+Crypto+OpenSslCryptographicException: error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure\r\n   --- End of inner exception stack trace ---\r\n   at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount)\r\n   at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_1(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at SwishClient.Controllers.ApiController.Call() in /src/SwishClient/Controllers/ApiController.cs:line 36\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n# Additional Context\r\n\r\nThe required client certificate is signed by intermediate CA. I have tried:\r\n- To install these intermediate CA before running the app - on Windows manually, on Docker during Docker build.\r\n- Installing these certificates programmatically from the app before making first API call\r\n\r\nBoth methods work fine on Windows, none on Linux.\r\n\r\nComplete source code including certificates, `Dockerfile` and further instruction in `Readme` in \r\nhttps://pescn.visualstudio.com/AspNetCoreSwish/_git/AspNetCoreSwish\r\n\r\nI can SSH into Linux docker container running my app and successfully connect to Swish API using curl\r\n```\r\ncurl -s -S -i -k --cert ./Certificates/Swish_Merchant_TestCertificate_1231181189.p12:swish --cert-type p12 --cacert ./CA/Swish_TLS_RootCA.pem --tlsv1.1 --header \"Content-Type:application/json\" https://host.docker.internal:5001/api/test --data '{ \"payeePaymentReference\" : \"0123456789\", \"callbackUrl\" :\"https://myfakehost.se/swishcallback.cfm\", \"payerAlias\" : \"4671234768\",\"payeeAlias\" : \"1231181189\", \"amount\" : \"100\", \"currency\" : \"SEK\",\"message\" : \"Kingston USB Flash Drive 8 GB\" }'\r\n```\r\n\r\n\r\n"},{"Id":"9874603801","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:48:02","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38739","RelatedDescription":"Merged pull request \"Remove Serialization Guard public APIs\" (#38739) at dotnet/corefx","RelatedBody":"Removes public APIs per https://github.com/dotnet/corefx/issues/36723 and our conversations over email. Also refactors the reflection-based code out of the `Process` class and into its own standalone file so that it can be shared by future components if needed.\r\n\r\nThere are no behavioral changes from this PR."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9874504691","Type":"PullRequestEvent","CreatedAt":"2019-06-23T01:30:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36690","RelatedDescription":"Merged pull request \"Merge master-vs-deps to features/razorSupport2\" (#36690) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9874396192","Type":"PullRequestEvent","CreatedAt":"2019-06-23T00:02:27","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36690","RelatedDescription":"Opened pull request \"Merge master-vs-deps to features/razorSupport2\" (#36690) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9874394610","Type":"PullRequestEvent","CreatedAt":"2019-06-23T00:01:25","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36689","RelatedDescription":"Opened pull request \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36689) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9874644477","Type":"PullRequestEvent","CreatedAt":"2019-06-23T03:18:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7545","RelatedDescription":"Merged pull request \"Implement GetTotalAllocatedBytes\" (#7545) at dotnet/corert","RelatedBody":"Implements `GetTotalAllocatedBytes`\r\ncontributes to #5680"},{"Id":"9874601672","Type":"PullRequestEvent","CreatedAt":"2019-06-23T02:46:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Merged pull request \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550) at dotnet/corert","RelatedBody":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)"},{"Id":"9874262297","Type":"PullRequestEvent","CreatedAt":"2019-06-22T22:17:55","Actor":"timmydo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Opened pull request \"Devcontainer files for vscode cross-platform development.\" (#7552) at dotnet/corert","RelatedBody":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs."},{"Id":"9874248039","Type":"PullRequestEvent","CreatedAt":"2019-06-22T22:07:38","Actor":"timmydo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7551","RelatedDescription":"Opened pull request \"add StaticallyLinked csproj property for unix\" (#7551) at dotnet/corert","RelatedBody":"Add `<StaticallyLinked>true</StaticallyLinked>` to your csproj to compile a statically liked binary. "},{"Id":"9874080057","Type":"PullRequestEvent","CreatedAt":"2019-06-22T20:20:31","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Opened pull request \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550) at dotnet/corert","RelatedBody":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)"},{"Id":"9873482365","Type":"PullRequestEvent","CreatedAt":"2019-06-22T14:53:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7549","RelatedDescription":"Opened pull request \"Add support for x86/x64 hardware intrinsics\" (#7549) at dotnet/corert","RelatedBody":"RyuJIT has had support for HW intrinsics for a while but we didn't enable them (besides SSE/SSE2) because the way RyuJIT implements them only suits JIT environments: RyuJIT is not able to generate code that switches based on the intrinsics supported by the CPU at runtime - the intrinsic support level is hardcoded at compilation time. This works for a JIT, but not so well for AOT.\r\n\r\nFollowing scheme is used to adapt this for AOT compilation:\r\n* We tell RyuJIT all non-VEX intrinsics are supported.\r\n* We intercept the `IsSupported` property calls on the individual intrinsic classes and instead of telling RyuJIT the `IsSupported` methods are intrinsics (that RyuJIT would expand to a constant `true` based on the flags we passed to RyuJIT), we treat them as normal method calls.\r\n* We rewrite the IL of the `IsSupported` method to read a value from an RVA static field and check for a bit (each bit representing a different ISA extension).\r\n* At process startup we initialize the RVA static field with bits based on a CPUID check."},{"Id":"9872167189","Type":"IssuesEvent","CreatedAt":"2019-06-22T01:28:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7548","RelatedDescription":"Closed issue \"async issue\" (#7548) at dotnet/corert","RelatedBody":"I'm developing an application which uses `youtube-dl` for some of it's functionality\r\n\r\nhowever, I get a different result when using a build from `dotnet build -c Release`  and the corert,\r\n\r\n`dotnet build -c Release`:\r\n![cmd_dj5LUjFmF3](https://user-images.githubusercontent.com/18737914/59950014-196a6b80-9475-11e9-9bee-5238114dd27e.png)\r\n\r\ncorert:\r\n![cmd_aFvdtYM0vh](https://user-images.githubusercontent.com/18737914/59950038-29824b00-9475-11e9-845f-38d77661cc5a.png)\r\n\r\nrelevant code:\r\n[main](https://github.com/tim241/corert-async-bug/blob/master/AudioControlServer/Program.cs)\r\n[async function](https://github.com/tim241/corert-async-bug/blob/master/YoutubeCandyWrapper/AudioDownloader.cs#L72-L108)\r\n\r\n# How to reproduce\r\n* `git clone https://github.com/tim241/corert-async-bug`\r\n* install youtube-dl and add it to PATH\r\n* use `dotnet publish -c Release -r win-x64` (in the `AudioControlServer` folder) to build for the corert\r\n\r\nI'm not sure why the corert is giving me a different result, maybe it doesn't fill the `JsonList`?"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"459533496","IsPullRequest":true,"CreatedAt":"2019-06-23T03:53:44","Actor":"tommcdon","Number":"25335","RawContent":null,"Title":"remove non-windows test pipelines","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25335","RelatedDescription":"Closed or merged PR \"remove non-windows test pipelines\" (#25335)"},{"Id":"459496750","IsPullRequest":true,"CreatedAt":"2019-06-23T02:53:20","Actor":"jkotas","Number":"25332","RawContent":null,"Title":"Test https://github.com/dotnet/coreclr/pull/25115","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25332","RelatedDescription":"Closed or merged PR \"Test https://github.com/dotnet/coreclr/pull/25115\" (#25332)"},{"Id":"459499410","IsPullRequest":true,"CreatedAt":"2019-06-23T02:06:28","Actor":"AndyAyersMS","Number":"25333","RawContent":null,"Title":"Fix ReturnKind classification for byref like types returned in registers","State":"closed","Body":"These types contain byrefs, and so when returned in registers we may need\r\nto avoid GC stress at the return site.\r\n\r\nAddresses part of #24263.","Url":"https://github.com/dotnet/coreclr/pull/25333","RelatedDescription":"Closed or merged PR \"Fix ReturnKind classification for byref like types returned in registers\" (#25333)"},{"Id":"459511455","IsPullRequest":false,"CreatedAt":"2019-06-22T21:09:14","Actor":"Lakritzator","Number":"25334","RawContent":null,"Title":"Wpf applications can't be published as a trimmed single exe","State":"open","Body":"I'm not sure if this is the correct repository for this.\r\n\r\nWhen using dotnet sdk 3.0.100-preview7-012564 (and a lot of builds before this) I get a crash when starting a publishing a WPF application as a trimmed single exe.\r\n\r\nAn example repository is located here: https://github.com/Lakritzator/WpfPublishTrimmedCrash\r\nIt's a \"dotnet new wpf\" with a textbox added, as without it the error is not visible.\r\n\r\nRunning the following on the project:\r\n```\r\ndotnet publish WpfTest.csproj -f netcoreapp3.0 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true /p:RuntimeIdentifier=win-x64\r\n```\r\n\r\nThan starting the WpfText.exe which is located in bin\\Release\\netcoreapp3.0\\win-x64\\publish\r\nwill not start the application, and in the eventlog I can see the following error:\r\n```\r\nApplication: WpfTest.exe\r\nCoreCLR Version: 4.700.19.32201\r\n.NET Core Version: 3.0.0-preview7-27822-04\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeInitializationException: The type initializer for 'System.Windows.Media.FontFamily' threw an exception.\r\n ---> System.TypeInitializationException: The type initializer for 'MS.Internal.FontCache.DWriteFactory' threw an exception.\r\n ---> System.InvalidCastException: Specified cast is not valid.\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(Int32 errorCode, IntPtr errorInfo)\r\n   at MS.Internal.Text.TextInterface.Native.Util.ConvertHresultToException(Int32 hr)\r\n   at MS.Internal.Text.TextInterface.Factory.Initialize(FactoryType factoryType)\r\n   at MS.Internal.Text.TextInterface.Factory..ctor(FactoryType factoryType, IFontSourceCollectionFactory fontSourceCollectionFactory, IFontSourceFactory fontSourceFactory)\r\n   at MS.Internal.Text.TextInterface.Factory.Create(FactoryType factoryType, IFontSourceCollectionFactory fontSourceCollectionFactory, IFontSourceFactory fontSourceFactory)\r\n   at MS.Internal.FontCache.DWriteFactory..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at MS.Internal.FontCache.DWriteFactory.get_SystemFontCollection()\r\n   at MS.Internal.FontCache.FamilyCollection.FromWindowsFonts(Uri folderUri)\r\n   at System.Windows.Media.FontFamily.PreCreateDefaultFamilyCollection()\r\n   at System.Windows.Media.FontFamily..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Media.Typeface..ctor(FontFamily fontFamily, FontStyle style, FontWeight weight, FontStretch stretch)\r\n   at MS.Internal.Text.DynamicPropertyReader.GetTypeface(DependencyObject element)\r\n   at MS.Internal.Text.TextProperties.InitCommon(DependencyObject target)\r\n   at MS.Internal.Text.TextProperties..ctor(FrameworkElement target, Boolean isTypographyDefaultValue)\r\n   at System.Windows.Controls.TextBoxView.GetLineProperties()\r\n   at System.Windows.Controls.TextBoxView.TextCache..ctor(TextBoxView owner)\r\n   at System.Windows.Controls.TextBoxView.EnsureCache()\r\n   at System.Windows.Controls.TextBoxView.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.Controls.ScrollContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Grid.MeasureCell(Int32 cell, Boolean forceInfinityV)\r\n   at System.Windows.Controls.Grid.MeasureCellsGroup(Int32 cellsHead, Size referenceSize, Boolean ignoreDesiredSizeU, Boolean forceInfinityV, Boolean& hasDesiredSizeUChanged)\r\n   at System.Windows.Controls.Grid.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.ScrollViewer.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Control.MeasureOverride(Size constraint)\r\n   at System.Windows.Controls.TextBox.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.StackPanel.StackMeasureHelper(IStackMeasure measureElement, IStackMeasureScrollData scrollData, Size constraint)\r\n   at System.Windows.Controls.StackPanel.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at MS.Internal.Helper.MeasureElementWithSingleChild(UIElement element, Size constraint)\r\n   at System.Windows.Controls.ContentPresenter.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Decorator.MeasureOverride(Size constraint)\r\n   at System.Windows.Documents.AdornerDecorator.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Controls.Border.MeasureOverride(Size constraint)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Window.MeasureOverrideHelper(Size constraint)\r\n   at System.Windows.Window.MeasureOverride(Size availableSize)\r\n   at System.Windows.FrameworkElement.MeasureCore(Size availableSize)\r\n   at System.Windows.UIElement.Measure(Size availableSize)\r\n   at System.Windows.Interop.HwndSource.SetLayoutSize()\r\n   at System.Windows.Interop.HwndSource.set_RootVisualInternal(Visual value)\r\n   at System.Windows.Interop.HwndSource.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SourceWindowHelper.set_RootVisual(Visual value)\r\n   at System.Windows.Window.SetRootVisual()\r\n   at System.Windows.Window.SetRootVisualAndUpdateSTC()\r\n   at System.Windows.Window.SetupInitialState(Double requestedTop, Double requestedLeft, Double requestedWidth, Double requestedHeight)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at System.Windows.Application.Run(Window window)\r\n   at System.Windows.Application.Run()\r\n   at WpfTest.App.Main()\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/25334","RelatedDescription":"Open issue \"Wpf applications can't be published as a trimmed single exe\" (#25334)"},{"Id":"459468941","IsPullRequest":true,"CreatedAt":"2019-06-22T16:43:47","Actor":"dotnet-maestro[bot]","Number":"25328","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25328","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25328)"},{"Id":"459469931","IsPullRequest":true,"CreatedAt":"2019-06-22T16:43:37","Actor":"dotnet-maestro[bot]","Number":"25329","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Bcl.AsyncInterfaces** -> 1.0.0-preview7.19321.8\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19321.8\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25329","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25329)"},{"Id":"459470284","IsPullRequest":true,"CreatedAt":"2019-06-22T16:43:25","Actor":"dotnet-maestro[bot]","Number":"25330","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190621.07\r\n- **Date Produced**: 6/22/2019 4:17 AM\r\n- **Commit**: 1be0aae259c6ba7919a2aee6009c92f5108af912\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27821-07\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25330","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25330)"},{"Id":"459471114","IsPullRequest":true,"CreatedAt":"2019-06-22T16:07:02","Actor":"dotnet-maestro[bot]","Number":"25331","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190622.1\r\n- **Date Produced**: 6/22/2019 11:26 AM\r\n- **Commit**: e65c231a2510ad8aca3f2c28b1b392924f62ee0c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190622.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190622.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25331","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25331)"},{"Id":"459458073","IsPullRequest":true,"CreatedAt":"2019-06-22T09:49:45","Actor":"MarcoRossignoli","Number":"25327","RawContent":null,"Title":"MemoryExtensions ToUpper / ToLower throws for overlapping buffer","State":"open","Body":"contributes to https://github.com/dotnet/corefx/issues/34799\r\n\r\nI kept the same style of other code in this file no open/close brackets.\r\n\r\n/cc @ahsonkhan @GrabYourPitchforks ","Url":"https://github.com/dotnet/coreclr/pull/25327","RelatedDescription":"Open PR \"MemoryExtensions ToUpper / ToLower throws for overlapping buffer\" (#25327)"},{"Id":"459416716","IsPullRequest":true,"CreatedAt":"2019-06-22T01:08:00","Actor":"BruceForstall","Number":"25326","RawContent":null,"Title":"Improve corefx testhost construction","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25326","RelatedDescription":"Open PR \"Improve corefx testhost construction\" (#25326)"},{"Id":"459413955","IsPullRequest":true,"CreatedAt":"2019-06-22T00:39:21","Actor":"echesakovMSFT","Number":"25325","RawContent":null,"Title":"Add /eng/pipelines/*.yml","State":"open","Body":"The plan is to commit these files first and then starting changing the build definitions one-by-one (i.e. changing their root files from azure-pipelines.yml to /eng/pipelines/x.yml.\r\n\r\nThe last step should be cleaning up azure-pipelines.yml from the logic for all the build definitions except main ones - official build and coreclr-ci.","Url":"https://github.com/dotnet/coreclr/pull/25325","RelatedDescription":"Open PR \"Add /eng/pipelines/*.yml\" (#25325)"},{"Id":"459413925","IsPullRequest":false,"CreatedAt":"2019-06-22T00:39:01","Actor":"sywhang","Number":"25324","RawContent":null,"Title":"Heap dump is broken","State":"open","Body":"I tried taking a heap dump using PerfView and saw a bunch of unresolved symbols:\r\n![image](https://user-images.githubusercontent.com/30421794/59957190-da272500-944a-11e9-9899-17a32f1b0672.png)\r\n\r\nIf I target the same app to netcoreapp2.1 and try taking a heap dump, I see this:\r\n![image](https://user-images.githubusercontent.com/30421794/59957195-df846f80-944a-11e9-8306-5fe948cdfa06.png)\r\n\r\nI tried using netcoreapp2.2 as well and it gives me broken symbols again:\r\n![image](https://user-images.githubusercontent.com/30421794/59957244-4efa5f00-944b-11e9-9067-0298e261e37d.png)\r\n\r\nwhich leads me to believe that this is a 2.1->2.2 regression..\r\n\r\ncc @noahfalk @tommcdon ","Url":"https://github.com/dotnet/coreclr/issues/25324","RelatedDescription":"Open issue \"Heap dump is broken\" (#25324)"},{"Id":"459169998","IsPullRequest":true,"CreatedAt":"2019-06-22T00:19:34","Actor":"dotnet-maestro[bot]","Number":"25311","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 9:31 AM\r\n- **Commit**: b21c24996a73aa62b7a1ee69f546b9d2eb084f29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19320.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19320.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25311","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25311)"},{"Id":"459182082","IsPullRequest":true,"CreatedAt":"2019-06-22T00:19:01","Actor":"dotnet-maestro[bot]","Number":"25314","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190621.1\r\n- **Date Produced**: 6/21/2019 11:21 AM\r\n- **Commit**: 4c046160773283e3dae12cf8a5f56bf7a1132e57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190621.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190621.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25314","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25314)"},{"Id":"459398000","IsPullRequest":true,"CreatedAt":"2019-06-21T23:02:39","Actor":"fadimounir","Number":"25323","RawContent":null,"Title":"Enable byref primitive types to be considered for pinvoke inlining","State":"closed","Body":"I was investigating #23873 and found this interesting issue where we fail to pre-compile some pinvokes because they have \"out\" parameters. These can really be treated as pointer types.\r\n\r\nEnabled byrefs for primitive types only to minimize risk. This might actually work for valuetypes without the need for marshalling, and we can just make it the same behavior that we have for the ELEMENT_TYPE_PTR case. Not sure about it though...","Url":"https://github.com/dotnet/coreclr/pull/25323","RelatedDescription":"Closed or merged PR \"Enable byref primitive types to be considered for pinvoke inlining\" (#25323)"},{"Id":"459393258","IsPullRequest":false,"CreatedAt":"2019-06-21T22:25:44","Actor":"davmason","Number":"25322","RawContent":null,"Title":"Display detailed ReJIT information in !DumpMD","State":"open","Body":"Right now !DumpMD displays the ReJIT id and state, but doesn't give you a pointer to the current/previous ILCodeVersionNodes. It would be really helpful to have those when debugging issues.","Url":"https://github.com/dotnet/coreclr/issues/25322","RelatedDescription":"Open issue \"Display detailed ReJIT information in !DumpMD\" (#25322)"},{"Id":"459384763","IsPullRequest":true,"CreatedAt":"2019-06-21T21:57:57","Actor":"tommcdon","Number":"25321","RawContent":null,"Title":"Remove debug crossbuilds","State":"closed","Body":"Verified the fix against the UWP 6.1 coreclr pipeline","Url":"https://github.com/dotnet/coreclr/pull/25321","RelatedDescription":"Closed or merged PR \"Remove debug crossbuilds\" (#25321)"},{"Id":"459333662","IsPullRequest":true,"CreatedAt":"2019-06-21T21:49:58","Actor":"sandreenko","Number":"25316","RawContent":null,"Title":"WorkAround for #25050.","State":"closed","Body":"A temporary workaround to push the milestone for #25050 to 3.next.\r\n\r\nPTAL @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/25316","RelatedDescription":"Closed or merged PR \"WorkAround for #25050.\" (#25316)"},{"Id":"459384486","IsPullRequest":true,"CreatedAt":"2019-06-21T21:47:55","Actor":"jashook","Number":"25320","RawContent":null,"Title":"Throw platform unsupported error for windows arm32 varargs","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/23034. Correctly throws a platform not supported exception on windows arm32 for native vararg methods.","Url":"https://github.com/dotnet/coreclr/pull/25320","RelatedDescription":"Open PR \"Throw platform unsupported error for windows arm32 varargs\" (#25320)"},{"Id":"459334316","IsPullRequest":true,"CreatedAt":"2019-06-21T21:26:12","Actor":"CarolEidt","Number":"25317","RawContent":null,"Title":"Fix test to use mutual waits","State":"closed","Body":"Fix #25245","Url":"https://github.com/dotnet/coreclr/pull/25317","RelatedDescription":"Closed or merged PR \"Fix test to use mutual waits\" (#25317)"},{"Id":"459363042","IsPullRequest":false,"CreatedAt":"2019-06-21T20:35:19","Actor":"Maoni0","Number":"25319","RawContent":null,"Title":"GCToEEInterface::Get*ConfigValue should also check the runtimeconfig.json","State":"open","Body":"this should return all the known configs (known as in already processed by eeconfig) back and for the rest right now it just does this check\r\n`if (CLRConfig::IsConfigOptionSpecified(configKey))`\r\nwe should also check `GetConfigurationValue` which check if the config is specified in runtimeconfig.json. and the former overwrites the latter.\r\n","Url":"https://github.com/dotnet/coreclr/issues/25319","RelatedDescription":"Open issue \"GCToEEInterface::Get*ConfigValue should also check the runtimeconfig.json\" (#25319)"},{"Id":"459360533","IsPullRequest":true,"CreatedAt":"2019-06-21T20:27:48","Actor":"safern","Number":"25318","RawContent":null,"Title":"Address last round of nullable feedback - S.Resources.ResourceManager, System.Reflection.Emit and ILGeneration","State":"open","Body":"I separated it by commits.\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/25318","RelatedDescription":"Open PR \"Address last round of nullable feedback - S.Resources.ResourceManager, System.Reflection.Emit and ILGeneration\" (#25318)"},{"Id":"459267949","IsPullRequest":false,"CreatedAt":"2019-06-21T16:01:48","Actor":"xinyanmsft","Number":"25315","RawContent":null,"Title":"VSDBG launch fails with 0x80131c49 for Alpine based docker container running inside AKS","State":"open","Body":"Found this when trying to get Azure DevSpaces sport Alpine based Docker images.\r\n\r\nIn Docker container, VSDBG is installed via (also tried vs2017u5)\r\nRUN curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -r linux-musl-x64 -v vs2019 -l /vsdbg/linux-musl-x64\r\n\r\nand have a Dockerfile from Alpine:\r\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2-alpine3.9\r\n\r\nARG BUILD_CONFIGURATION=Debug\r\n\r\nENV ASPNETCORE_ENVIRONMENT=Development\r\n\r\nENV DOTNET_USE_POLLING_FILE_WATCHER=true\r\n\r\nEXPOSE 80\r\n\r\n\r\nWORKDIR /src\r\n\r\nCOPY [\"webfrontend.csproj\", \"./\"]\r\n\r\n\r\nRUN dotnet restore \"./webfrontend.csproj\"\r\n\r\nCOPY . .\r\n\r\nWORKDIR \"/src/.\"\r\n\r\nRUN dotnet build --no-restore \"webfrontend.csproj\" -c $BUILD_CONFIGURATION\r\n\r\n\r\nRUN echo \"exec dotnet run --no-build --no-launch-profile -c $BUILD_CONFIGURATION --\" > /entrypoint.sh\r\n\r\n\r\nENTRYPOINT [\"/bin/bash\", \"/entrypoint.sh\"]\r\n\r\n\r\nWhen launch the debugger (via remote debugger, our own SSH-ish pipe), getting the error below. This container runs in AKS.\r\n\r\nStarting: \"azds\" exec --interactive --on-exit-resume-up -- /vsdbg/linux-musl-x64/vsdbg --interpreter=vscode\r\n\r\n------------------------------------------------------------------- You may only use the Microsoft .NET Core Debugger (vsdbg) with Visual Studio Code, Visual Studio or Visual Studio for Mac software to help you develop and test your applications. -------------------------------------------------------------------\r\n\r\nUnable to attach to CoreCLR. Unknown Error: 0x80131c49\r\n\r\nThe program '[152] webfrontend.dll' has exited with code -1 (0xffffffff).\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25315","RelatedDescription":"Open issue \"VSDBG launch fails with 0x80131c49 for Alpine based docker container running inside AKS\" (#25315)"},{"Id":"459032127","IsPullRequest":true,"CreatedAt":"2019-06-21T15:56:14","Actor":"stephentoub","Number":"25305","RawContent":null,"Title":"Remove several unnecessary string allocations","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25305","RelatedDescription":"Closed or merged PR \"Remove several unnecessary string allocations\" (#25305)"},{"Id":"459062667","IsPullRequest":true,"CreatedAt":"2019-06-21T13:36:55","Actor":"Goldenbeak21","Number":"25306","RawContent":null,"Title":"Darc master 662e5daf 6e2f 4df0 8f67 87320609515f","State":"closed","Body":"zfda","Url":"https://github.com/dotnet/coreclr/pull/25306","RelatedDescription":"Closed or merged PR \"Darc master 662e5daf 6e2f 4df0 8f67 87320609515f\" (#25306)"},{"Id":"459179659","IsPullRequest":false,"CreatedAt":"2019-06-21T12:45:36","Actor":"Anna-Guseva","Number":"25313","RawContent":null,"Title":"Is it common to have multiple profilers attached to .net core 3.0 process at the same time","State":"open","Body":"I tried to attach profiler to the same .NET Core v3.0.0-preview6 process twice and suddenly I managed to do it. Is this expected case? .NET Framework versions don't allow such behavior.\r\n\r\nBesides, I'm able to attach two performance profilers in sampling mode or memory + performance (sampling) profilers, but I get an error when try to attach two memory profilers.","Url":"https://github.com/dotnet/coreclr/issues/25313","RelatedDescription":"Open issue \"Is it common to have multiple profilers attached to .net core 3.0 process at the same time\" (#25313)"},{"Id":"459174906","IsPullRequest":false,"CreatedAt":"2019-06-21T12:33:26","Actor":"nietras","Number":"25312","RawContent":null,"Title":"HW Intrinsics CG unnecessary `vmovaps` when calling `Avx2.GatherMaskVector256`","State":"open","Body":"Playing with Intrinsics.X86 on .NET Core 3.0 Preview 6. I am doing a simple LUT in AVX2 using gather to see how well this performs. E.g. in normal code:\r\n```csharp\r\nfor (int col = 0; col < cols; col++)\r\n{\r\n    dstPtr[col] = lut[srcPtr[col]];\r\n}\r\n```\r\nAnd the Avx2 vectorized version:\r\n```csharp\r\nif (Avx2.IsSupported)\r\n{\r\n    var mask = new Vector256<int>();\r\n    mask = Avx2.CompareEqual(mask, mask);\r\n    for (; (col - Vector128<byte>.Count) < cols; col += Vector128<byte>.Count)\r\n    {\r\n        var srcVec128Byte = Unsafe.ReadUnaligned<Vector128<byte>>(srcRowPtr + col);\r\n\r\n        var srcVec256Short = Avx2.ConvertToVector256Int16(srcVec128Byte);\r\n\r\n        var srcVec128Short0 = srcVec256Short.GetLower();\r\n        var srcVec128Short1 = srcVec256Short.GetUpper();\r\n        var srcVec256Int0 = Avx2.ConvertToVector256Int32(srcVec128Short0);\r\n        var srcVec256Int1 = Avx2.ConvertToVector256Int32(srcVec128Short1);\r\n\r\n        // https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=6017&text=_mm256_mask_i32gather_epi32\r\n        // Below generates unnecessary vmopaps for each gather\r\n        //vmovaps ymm3, ymm0\r\n        //vmovaps ymm4, ymm2\r\n        //vpgatherdd ymm4, dword ptr[rbx + ymm2 * 4],ymm3\r\n        var gathered256Int0 = Avx2.GatherMaskVector256(srcVec256Int0, intLutPtr, srcVec256Int0, mask, 4);\r\n        var gathered256Int1 = Avx2.GatherMaskVector256(srcVec256Int1, intLutPtr, srcVec256Int1, mask, 4);\r\n\r\n        var packed256Short = Avx2.PackUnsignedSaturate(gathered256Int0, gathered256Int1);\r\n        var permuted256Short = Avx2.Permute4x64(packed256Short.AsUInt64(), 0xD8).AsInt16();\r\n\r\n        // Need https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=6017,2978,2033&text=_mm256_cvtusepi16_epi8\r\n        // but not available\r\n        var gathered256Byte = Avx2.PackUnsignedSaturate(permuted256Short, permuted256Short);\r\n        var permuted256Byte = Avx2.Permute4x64(gathered256Byte.AsUInt64(), 0xD8).AsByte();\r\n\r\n        var dstVec = permuted256Byte.GetLower();\r\n\r\n        Unsafe.WriteUnaligned(dstRowPtr + col, dstVec);\r\n    }\r\n}\r\n```\r\nThis generates the following assembly:\r\n```assembly\r\n                           int col = 0;\r\n                           ^^^^^^^^^^^^\r\nM01_L11:\r\n       xor     r8d,r8d\r\n                               var mask = new Vector256<int>();\r\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vxorps  ymm0,ymm0,ymm0\r\n                               mask = Avx2.CompareEqual(mask, mask);\r\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vpcmpeqd ymm0,ymm0,ymm0\r\n       jmp     M01_L13\r\nM01_L12:\r\n       movsxd  r9,r8d\r\n       shl     r9,1\r\n       vmovupd ymm1,ymmword ptr [rsi+r9]\r\n                                   var srcVec128Short0 = srcVec256Short.GetLower();\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vmovaps ymm2,ymm1\r\n                                   var srcVec128Short1 = srcVec256Short.GetUpper();\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vextracti128 xmm1,ymm1,1\r\n                                   var srcVec256Int0 = Avx2.ConvertToVector256Int32(srcVec128Short0);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vpmovzxwd ymm2,xmm2\r\n                                   var srcVec256Int1 = Avx2.ConvertToVector256Int32(srcVec128Short1);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vpmovzxwd ymm1,xmm1\r\n                                   var gathered256Int0 = Avx2.GatherMaskVector256(mask, intLutPtr, srcVec256Int0, mask, 4);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vmovaps ymm3,ymm0\r\n       vmovaps ymm4,ymm0\r\n       vpgatherdd ymm4,dword ptr [rbx+ymm2*4],ymm3\r\n                                   var gathered256Int1 = Avx2.GatherMaskVector256(mask, intLutPtr, srcVec256Int1, mask, 4);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vmovaps ymm2,ymm0\r\n       vmovaps ymm3,ymm0\r\n       vpgatherdd ymm3,dword ptr [rbx+ymm1*4],ymm2\r\n                                   var packed256Short = Avx2.PackUnsignedSaturate(gathered256Int0, gathered256Int1);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vpackusdw ymm1,ymm4,ymm3\r\n                                   var permuted256Short = Avx2.Permute4x64(packed256Short.AsUInt64(), 0xD8).AsUInt16();\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vpermq  ymm1,ymm1,0D8h\r\n                                   Unsafe.WriteUnaligned(dstRowPtr + col, permuted256Short);\r\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n       vmovupd ymmword ptr [rax+r9],ymm1\r\n       add     r8d,10h\r\n```\r\nThe `vmovaps` seem unnecessary.\r\n```assembly\r\n       vmovaps ymm2,ymm0\r\n       vmovaps ymm3,ymm0\r\n```\r\n\r\nI do get a speedup of 2x on Coffee Lake for this, just noticed the extra `vmovapps`.\r\n\r\nCC: @tannergooding \r\n","Url":"https://github.com/dotnet/coreclr/issues/25312","RelatedDescription":"Open issue \"HW Intrinsics CG unnecessary `vmovaps` when calling `Avx2.GatherMaskVector256`\" (#25312)"},{"Id":"459066589","IsPullRequest":true,"CreatedAt":"2019-06-21T12:29:02","Actor":"theaoqi","Number":"25307","RawContent":null,"Title":"Fixed mis-matching arguments in src/CMakeLists.txt","State":"closed","Body":"A trivial patch to fix a CMake warning.","Url":"https://github.com/dotnet/coreclr/pull/25307","RelatedDescription":"Closed or merged PR \"Fixed mis-matching arguments in src/CMakeLists.txt\" (#25307)"},{"Id":"459106850","IsPullRequest":false,"CreatedAt":"2019-06-21T09:35:48","Actor":"zhengwb","Number":"25309","RawContent":null,"Title":"Guideline for supporting a new CPU architecture","State":"open","Body":"Although .NET Core now supports x86 and ARM platforms, some people in the community still want to add more CPU architecture. Is it possible to provide a guideline of support a new CPU architecture based on the experience of ARM?","Url":"https://github.com/dotnet/coreclr/issues/25309","RelatedDescription":"Open issue \"Guideline for supporting a new CPU architecture\" (#25309)"},{"Id":"459089869","IsPullRequest":true,"CreatedAt":"2019-06-21T08:58:24","Actor":"jorive","Number":"25308","RawContent":null,"Title":"Multiple bug fixes","State":"open","Body":"- Fixes **EventPipe does not properly dispose of itself on an active session error** #25228\r\n  - On EventPipeSession::ThreadProc, if an error occurs on the IPC streaming, then EventPipe::Disable will be invoked.\r\n- Fixes **Prevent EventPipe Sessions IDs from being reused on disconnect** #25229","Url":"https://github.com/dotnet/coreclr/pull/25308","RelatedDescription":"Open PR \"Multiple bug fixes\" (#25308)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"459467632","IsPullRequest":true,"CreatedAt":"2019-06-22T12:35:28","Actor":"dotnet-maestro[bot]","Number":"11611","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11611)"},{"Id":"459468093","IsPullRequest":true,"CreatedAt":"2019-06-22T12:11:07","Actor":"dotnet-maestro[bot]","Number":"11612","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190621.2\r\n- **Date Produced**: 6/21/2019 9:17 PM\r\n- **Commit**: f90d317ef52c0d69808f02eca76f364cab379268\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19321.2\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11612","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#11612)"},{"Id":"459163574","IsPullRequest":true,"CreatedAt":"2019-06-22T12:05:18","Actor":"dotnet-maestro[bot]","Number":"11605","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190620.2\r\n- **Date Produced**: 6/21/2019 12:24 AM\r\n- **Commit**: 260f37383a4974b478cba2ba67ac7908578f5b07\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19320.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11605)"},{"Id":"459453448","IsPullRequest":true,"CreatedAt":"2019-06-22T08:48:07","Actor":"dotnet-maestro[bot]","Number":"11610","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190622.3\r\n- **Date Produced**: 6/23/2019 5:09 AM\r\n- **Commit**: 6761dec9c69ffb4cd5b14a0a663ab73aa01fc7e2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19322.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11610","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11610)"},{"Id":"459424502","IsPullRequest":true,"CreatedAt":"2019-06-22T03:24:11","Actor":"dotnet-maestro[bot]","Number":"11609","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190621.9\r\n- **Date Produced**: 6/22/2019 2:53 AM\r\n- **Commit**: 4ef204e13b88c0734e0e94a1cc4c0ef05f40849e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19321.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11609)"},{"Id":"459092405","IsPullRequest":false,"CreatedAt":"2019-06-21T22:03:46","Actor":"vinnytheviking","Number":"11603","RawContent":null,"Title":"Installing tool to custom tool-path fails when trying to access it","State":"closed","Body":"I'm trying to install a custom tool during azure pipeline however if fails to pick up the tool. I've tried several options but they all fail at execution stage. I'm trying to use the tool-path because without it step 2 fails with cannot find the executable\r\n \r\n## Steps to reproduce\r\n\r\n```\r\n- task: DotNetCoreCLI@2\r\n  displayName: 'Install Stryker'\r\n  continueOnError: true\r\n  inputs:\r\n    command: custom\r\n    custom: tool\r\n    vstsFeed: ${{ parameters.Build_Vsts_Feed }}\r\n    arguments: 'install dotnet-stryker --tool-path ~/tools'\r\n```\r\n\r\n```\r\n- script: |    \r\n    cd ${{ parameters.Unit_Test_Folder }}\r\n    dotnet ~/tools/stryker --project-file=${{ parameters.Stryker_Project }}.csproj\r\n  displayName: 'Run Stryker tests against ${{ parameters.Stryker_Project }}'\r\n```\r\n\r\n## Expected  behavior\r\nTool should install and be executable\r\n\r\n## Actual behavior\r\n\r\nOutput from Installation task\r\n```\r\nsr/bin/dotnet tool install dotnet-stryker --tool-path ~/tools \r\nYou can invoke the tool using the following command: dotnet-stryker |  \r\nTool 'dotnet-stryker' (version '0.11.0') was successfully installed.\r\n```\r\nOutput from execution task\r\n`No executable found matching command \"dotnet-/home/vsts/tools/stryker\"`\r\n\r\nNo matter how i define tool-path it does the above behaviour of merging dotnet- to the path rather than /home/vsts/tools/dotnet-stryker\r\n","Url":"https://github.com/dotnet/cli/issues/11603","RelatedDescription":"Closed issue \"Installing tool to custom tool-path fails when trying to access it\" (#11603)"},{"Id":"459364335","IsPullRequest":false,"CreatedAt":"2019-06-21T20:39:07","Actor":"isaac2004","Number":"11608","RawContent":null,"Title":"Support for verbosity in dotnet new","State":"open","Body":"I came across this comment in a [closed issue](https://github.com/dotnet/cli/issues/9165#issuecomment-385222281) where this has been talked about, but I see value in having more verbose logging for `dotnet new`. Here is my scenario. I want to be able to create custom templates with configuration based on options (think --auth for dotnet new webapp). If something goes wrong in the project generation, I have no idea why. It would be nice to see some logs for the transform piece. More than happy to even do a PR if I got some guidance on where to look.","Url":"https://github.com/dotnet/cli/issues/11608","RelatedDescription":"Open issue \"Support for verbosity in dotnet new\" (#11608)"},{"Id":"459289859","IsPullRequest":true,"CreatedAt":"2019-06-21T17:36:50","Actor":"dotnet-maestro[bot]","Number":"11607","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190621.1\r\n- **Date Produced**: 6/21/2019 4:40 PM\r\n- **Commit**: edf8bbe65de3e25dd1db64174865683146ba0af5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19321.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11607)"},{"Id":"459016444","IsPullRequest":true,"CreatedAt":"2019-06-21T16:59:06","Actor":"dotnet-maestro[bot]","Number":"11600","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190620.7\r\n- **Date Produced**: 6/21/2019 5:33 AM\r\n- **Commit**: 495f52920c1b8bd685363a3e53038f9cb8ae086d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19320.7\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11600","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11600)"},{"Id":"459165873","IsPullRequest":true,"CreatedAt":"2019-06-21T16:57:01","Actor":"dotnet-maestro[bot]","Number":"11606","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 12:56 PM\r\n- **Commit**: cd8a65408312bf4a92de7e97948782f9f88471e6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19320.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11606)"},{"Id":"459163436","IsPullRequest":true,"CreatedAt":"2019-06-21T16:49:41","Actor":"dotnet-maestro[bot]","Number":"11604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 9:31 AM\r\n- **Commit**: b21c24996a73aa62b7a1ee69f546b9d2eb084f29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19320.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11604)"},{"Id":"458923399","IsPullRequest":false,"CreatedAt":"2019-06-21T16:37:52","Actor":"SergeyKleyman","Number":"11599","RawContent":null,"Title":"Where can I find the code that discovers Host version printed by dotnet --info","State":"closed","Body":"I would like to log .NET Core runtime version and it seems there is no easy way to do it until [this change](https://github.com/dotnet/corefx/issues/35573) that is available only from .NET Core 3.0 Preview 4. On the other hand I see that `dotnet --info` does print\r\n\r\n        Host (useful for support):\r\n          Version: 2.1.8\r\n\r\nSo I was wondering if I can use the code in `dotnet` utility that discovers Host version in my application.\r\n\r\nIn the source code I see [`PrintInfo() method`](https://github.com/dotnet/cli/blob/master/src/dotnet/Program.cs#L299) but it misses the part in which I'm interested (Host version). Could you please point me as to where I can find it? Thank you in advance.\r\n","Url":"https://github.com/dotnet/cli/issues/11599","RelatedDescription":"Closed issue \"Where can I find the code that discovers Host version printed by dotnet --info\" (#11599)"},{"Id":"459087727","IsPullRequest":true,"CreatedAt":"2019-06-21T08:53:40","Actor":"AnthonieP","Number":"11602","RawContent":null,"Title":"Release/2.2.4xx","State":"open","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11602","RelatedDescription":"Open PR \"Release/2.2.4xx\" (#11602)"},{"Id":"459072058","IsPullRequest":true,"CreatedAt":"2019-06-21T08:16:26","Actor":"v-zbsail","Number":"11601","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.0.1xx | 20190621","State":"open","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11601","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli release/3.0.1xx | 20190621\" (#11601)"},{"Id":"457921502","IsPullRequest":false,"CreatedAt":"2019-06-21T01:03:28","Actor":"YunWeiaa","Number":"11585","RawContent":null,"Title":"Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build.","State":"closed","Body":"## Steps to reproduce\r\n1. Install 16.3.0 [29018.65.master]([Release Channel](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/710819d747beda09ce59cbbbf69a82db4090fcab/258a92b4-1d34-4fee-88e3-fbb419f25336%3bchannels/internal/Release/bootstrappers/fixed/Enterprise/vs_Enterprise.exe))\r\n2. Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via VS. Build and run\r\n\r\n## Expected  behavior\r\nBuild and run succeeded\r\n\r\n\r\n## Actual behavior\r\n![image](https://user-images.githubusercontent.com/33921754/59756414-3e67ae80-92bc-11e9-8ada-345ff0663665.png)\r\nOutput info:\r\nerror  : The project file cannot be opened by the project system, because it is missing some critical imports or the referenced SDK cannot be found.\r\n\r\nDetailed Information:\r\nUnable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\n\r\nNote: Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via CLI. Build and run succeeded.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012323\r\n Commit:    46c4932822\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012323\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27809-09\r\n  Commit:  b2a369fb53\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview7-012323 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19307.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27809-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27809-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11585","RelatedDescription":"Closed issue \"Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build.\" (#11585)"},{"Id":"458911419","IsPullRequest":false,"CreatedAt":"2019-06-20T22:19:42","Actor":"mwpowellhtx","Number":"11598","RawContent":null,"Title":"Command line arguments not passing to my CLI tool","State":"open","Body":"Possibly also stuck in a ``dotnet`` cache somewhere.\r\n\r\n## Steps to reproduce\r\n\r\n```Xml\r\n<Exec Command=\"dotnet mytool -- --version\" ConsoleToMSBuild=\"true\" StandardOutputImportance=\"normal\" ContinueOnError=\"true\">\r\n  <Output TaskParameter=\"ConsoleOutput\" PropertyName=\"_MyToolVersion\" />\r\n</Exec>\r\n```\r\n\r\nYes, I do have a ``dotnet-mytool.dll`` registered:\r\n\r\n```Xml\r\n<ItemGroup>\r\n  <DotNetCliToolReference Include=\"dotnet-mytool\" Version=\"*\" />\r\n</ItemGroup>\r\n```\r\n\r\nHowever, version(s) of my tool appear to be somehow cached, because I am not finding behavior consistent with my troubleshooting efforts. In the CLI tool itself:\r\n\r\n```C#\r\nusing static String;\r\n// ...\r\npublic static TextWriter Out { get; internal set; } = Console.Out;\r\n\r\npublic static TextWriter Error { get; internal set; } = Console.Error;\r\n\r\npublic static int Main(string[] args)\r\n{\r\n    Out.WriteLine($@\"The arguments were: `{Join(\" \", args)}´.\");\r\n    Error.WriteLine($@\"The arguments were: `{Join(\" \", args)}´.\");\r\n    return 42;\r\n}\r\n```\r\n\r\nYet, when I am trying to integration test, I am finding the message ``The output directory must be specified.``, which is a previous version of the CLI tool, and would be consistent with not having been given the expected command line arguments.\r\n\r\nNow, I did look at file properties, and these are both the same for the actual project output as well as the project dependency. So I am 99.99% confident that the CLI tool is landing as it should, notwithstanding the fact I cannot square the apparent caching issue.\r\n\r\n## Expected  behavior\r\nI have integration tests in which I can directly invoke the ``Program.Main``. This works as expected. This is as robust an integration test as I can imagine short of invoking the CLI tool at the command line, never mind via *Microsoft Build Target*, which is where I ultimately want it to work correctly.\r\n\r\n## Actual behavior\r\nFor whatever reason, the command line arguments do not appear to be relayed to my CLI tool. I am fairly confident, however, that my CLI plumbing is at least correct because I am finding error messages reported that would indicate at least ``dotnet mytool -- ...`` did get invoked. Without the expected command line arguments. Or at least, the error is obvious when the plumbing is incorrect.\r\n\r\n## Environment data\r\n`dotnet --info` attached.\r\n\r\n[dotnet-info.txt](https://github.com/dotnet/cli/files/3312275/dotnet-info.txt)\r\n","Url":"https://github.com/dotnet/cli/issues/11598","RelatedDescription":"Open issue \"Command line arguments not passing to my CLI tool\" (#11598)"},{"Id":"458617669","IsPullRequest":true,"CreatedAt":"2019-06-20T18:08:48","Actor":"dotnet-maestro[bot]","Number":"11594","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.25\r\n- **Date Produced**: 6/19/2019 10:49 PM\r\n- **Commit**: bd50b2bcc787a8c62e2e114fb54704b645cc1c3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.25\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11594","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11594)"},{"Id":"458602450","IsPullRequest":false,"CreatedAt":"2019-06-20T17:39:45","Actor":"Leon99","Number":"11593","RawContent":null,"Title":"dotnet should ignore .dcproj ","State":"closed","Body":"As far as I'm aware, `dotnet` has nothing to do with .dcproj, however, it considers a .dcproj to be an eligible project file. As a result, after adding docker compose support in VS, which creates a .dcproj next to the .sln, `dotnet build` no longer works when executed in the root folder reporting ` error MSB1011: Specify which project or solution file to use because this folder contains more than one project or solution file.` and requires .sln to be explicitly specified.\r\n\r\nSeems to be remotely related to https://github.com/dotnet/cli/issues/6178.","Url":"https://github.com/dotnet/cli/issues/11593","RelatedDescription":"Closed issue \"dotnet should ignore .dcproj \" (#11593)"},{"Id":"458756373","IsPullRequest":false,"CreatedAt":"2019-06-20T17:24:27","Actor":"bigpod98","Number":"11597","RawContent":null,"Title":"was http CLI for API testing dropped.","State":"closed","Body":"There is still no HTTP CLI for testing of APIs that was shown in build 2018 by scott hunter and scot hanselman\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11597","RelatedDescription":"Closed issue \"was http CLI for API testing dropped.\" (#11597)"},{"Id":"458620879","IsPullRequest":true,"CreatedAt":"2019-06-20T12:47:42","Actor":"dotnet-maestro[bot]","Number":"11596","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 12:50 PM\r\n- **Commit**: 7e43668b697884dcce1f78506cbecd5e94039c9e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19319.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11596)"},{"Id":"458617867","IsPullRequest":true,"CreatedAt":"2019-06-20T12:36:22","Actor":"dotnet-maestro[bot]","Number":"11595","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/20/2019 5:08 AM\r\n- **Commit**: 226b4cfacea85f465a5920bcbae80706e48f2af1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19319.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11595)"},{"Id":"458601357","IsPullRequest":true,"CreatedAt":"2019-06-20T12:04:35","Actor":"dotnet-maestro[bot]","Number":"11592","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 11:28 AM\r\n- **Commit**: 56ffc6b58210292a18f548bf4eddff193f73a4d6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19320.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11592","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11592)"},{"Id":"458201859","IsPullRequest":true,"CreatedAt":"2019-06-19T22:10:19","Actor":"dotnet-maestro[bot]","Number":"11591","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190619.3\r\n- **Date Produced**: 6/19/2019 8:03 PM\r\n- **Commit**: 2df72072ad5bf4d40c1e20d96500593cd801b557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19319.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11591","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11591)"},{"Id":"457973899","IsPullRequest":true,"CreatedAt":"2019-06-19T21:46:30","Actor":"dotnet-maestro[bot]","Number":"11587","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11587","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11587)"},{"Id":"457705721","IsPullRequest":true,"CreatedAt":"2019-06-19T21:18:21","Actor":"livarcocc","Number":"11583","RawContent":null,"Title":"Update MSBuild to 16.2.0-preview-19318-05","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11583","RelatedDescription":"Closed or merged PR \"Update MSBuild to 16.2.0-preview-19318-05\" (#11583)"},{"Id":"457942388","IsPullRequest":true,"CreatedAt":"2019-06-19T18:36:54","Actor":"dotnet-maestro[bot]","Number":"11586","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190619.2\r\n- **Date Produced**: 6/19/2019 6:06 PM\r\n- **Commit**: 9ea20ddef331b786141b5e52cd03a91bff4c401f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19319.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11586)"},{"Id":"458045253","IsPullRequest":false,"CreatedAt":"2019-06-19T14:23:36","Actor":"rcl4444","Number":"11590","RawContent":null,"Title":"some problem with dotnet publish","State":"open","Body":"## Steps to reproduce\r\nI have a project,SplitPackage.Web.Host reference SplitPackage.Web.Core, SplitPackage.Web.Core  reference SplitPackage.Application.SplitPackage.Web.Host 's publish need SplitPackage.Application.xml and SplitPackage.Web.Core.xml in the SwaggerXml folder.\r\nwhen I excuting command `dotnet publish` in dotnet sdk 2.1.505, it do well.when I upgrade to 2.2.300.The result is not as expected\r\nSplitPackage.Web.Host.csproj 's content below\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n    <AssemblyName>SplitPackage.Web.Host</AssemblyName>\r\n    <OutputType>Exe</OutputType>\r\n    <PackageId>SplitPackage.Web.Host</PackageId>\r\n    <UserSecretsId>AbpCompanyName-SplitPackage-56C2EF2F-ABD6-4EFC-AAF2-2E81C34E8FB1</UserSecretsId>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n    <DockerComposeProjectPath>..\\..\\docker-compose.dcproj</DockerComposeProjectPath>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <DocumentationFile></DocumentationFile>\r\n    <NoWarn>1701;1702;</NoWarn>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Remove=\"wwwroot\\index.html\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <EmbeddedResource Include=\"SwaggerIndex.html\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"app.config\" />\r\n    <None Update=\"Dockerfile\">\r\n      <CopyToOutputDirectory>Never</CopyToOutputDirectory>\r\n    </None>\r\n    <None Update=\"log4net.config\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n    <None Update=\"wwwroot\\**\\*\">\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n    <None Include=\"SplitPackageRules\\**\\*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"SwaggerXml\\**\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Web.Core\\SplitPackage.Web.Core.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.0\">\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Castle.LoggingFacility.MsLogging\" Version=\"3.1.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Abp.Castle.Log4Net\" Version=\"4.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Update=\"Configure\\log4net.config\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nSplitPackage.Web.Core.csproj's content below\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <VersionPrefix>1.0.0.0</VersionPrefix>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <AssemblyName>SplitPackage.Web.Core</AssemblyName>\r\n    <PackageId>SplitPackage.Web.Core</PackageId>\r\n    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>\r\n    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>\r\n    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>\r\n    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>\r\n    <RootNamespace>SplitPackage</RootNamespace>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <NoWarn>1701;1702;1591</NoWarn>\r\n<DocumentationFile>../SplitPackage.Web.Host/SwaggerXml/SplitPackage.Web.Core.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Application\\SplitPackage.Application.csproj\" />\r\n    <ProjectReference Include=\"..\\SplitPackage.EntityFrameworkCore\\SplitPackage.EntityFrameworkCore.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ValueTuple\" Version=\"4.5.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Owin\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"4.0.1\" />\r\n    <PackageReference Include=\"Abp.AspNetCore\" Version=\"4.0.2\" />\r\n    <PackageReference Include=\"Abp.ZeroCore\" Version=\"4.0.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Abp.AspNetCore.SignalR\" Version=\"4.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"Authentication\\UmsAuth\\System\\\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nSplitPackage.Application.csproj's context below:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <VersionPrefix>1.0.0.0</VersionPrefix>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <AssemblyName>SplitPackage.Application</AssemblyName>\r\n    <PackageId>SplitPackage.Application</PackageId>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <RootNamespace>SplitPackage</RootNamespace>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n<DocumentationFile>../SplitPackage.Web.Host/SwaggerXml/SplitPackage.Application.xml</DocumentationFile>\r\n    <NoWarn>1701;1702;1591;1570;1571;1572;1573</NoWarn>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Core\\SplitPackage.Core.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"Business\\NumFreights\\\" />\r\n    <Folder Include=\"Business\\WeightFreights\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"DeepCloner\" Version=\"0.10.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n## Expected  behavior\r\nSplitPackage.Application.xml and SplitPackage.Web.Core.xml copy in the SwaggerXml folder.\r\n![image](https://user-images.githubusercontent.com/19640490/59772775-01f97a00-92df-11e9-9032-08a5e2dfe7fc.png)\r\n\r\n\r\n## Actual behavior\r\nSplitPackage.Application.xml and SplitPackage.Web.Core.xml not copy in the SwaggerXml folder.\r\n![image](https://user-images.githubusercontent.com/19640490/59773005-7502f080-92df-11e9-9ceb-3ff617ff6be3.png)\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11590","RelatedDescription":"Open issue \"some problem with dotnet publish\" (#11590)"},{"Id":"457976842","IsPullRequest":true,"CreatedAt":"2019-06-19T12:47:38","Actor":"dotnet-maestro[bot]","Number":"11589","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190618.1\r\n- **Date Produced**: 6/18/2019 12:50 PM\r\n- **Commit**: 84d778990198681b27f4a9b2eeea6efaeeb431a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19318.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11589)"},{"Id":"457974081","IsPullRequest":true,"CreatedAt":"2019-06-19T12:36:21","Actor":"dotnet-maestro[bot]","Number":"11588","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190618.4\r\n- **Date Produced**: 6/19/2019 6:31 AM\r\n- **Commit**: 7aa2004792850f672c70181820c86e88b8963992\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19318.4\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11588","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11588)"},{"Id":"457890869","IsPullRequest":true,"CreatedAt":"2019-06-19T09:36:36","Actor":"dotnet-maestro[bot]","Number":"11584","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190618.5\r\n- **Date Produced**: 6/19/2019 9:00 AM\r\n- **Commit**: 51919cb631f62040506266b46b19bc7a4d241d43\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19318.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11584)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"459472124","IsPullRequest":true,"CreatedAt":"2019-06-22T13:11:49","Actor":"dotnet-maestro[bot]","Number":"1271","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1271)"},{"Id":"459467523","IsPullRequest":true,"CreatedAt":"2019-06-22T12:13:58","Actor":"dotnet-maestro[bot]","Number":"1270","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1270","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1270)"},{"Id":"459389350","IsPullRequest":false,"CreatedAt":"2019-06-21T22:08:19","Actor":"tstuts","Number":"1269","RawContent":null,"Title":"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"","State":"open","Body":"I'm not sure where this issue should be reported, but since it is somewhat related to dotnet/standard#542, I figured I'd start here. This week, some of my team installed the latest updates in Visual Studio for Mac and after doing so they now encounter errors when trying to build. I've created a simple reproduction at https://github.com/tstuts/net-standard-test using a Xamarin.Mac app and a .NET Standard library.\r\n\r\n<br>\r\n\r\n#### Working Configuration:\r\n```\r\nVisual Studio: 8.0.9.5\r\nMono: 5.18.1.3\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/WorkingOlderConfig.txt)\r\n<br>\r\n\r\n#### Broken Configuration:\r\n```\r\nVisual Studio: 8.1.1.27\r\nMono: 5.18.1.28\r\n```\r\n(Full details in https://github.com/tstuts/net-standard-test/blob/master/BrokenUpdatedConfig.txt)\r\nThis configuration produces the following error:\r\n```\r\nError CS0012: The type 'Guid' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (NetStandardTestApp)\r\n```","Url":"https://github.com/dotnet/standard/issues/1269","RelatedDescription":"Open issue \"Visual Studio for Mac update leads to \"You must add a reference to assembly 'netstandard,...'\"\" (#1269)"},{"Id":"456107920","IsPullRequest":false,"CreatedAt":"2019-06-21T16:29:24","Actor":"marzim","Number":"1250","RawContent":null,"Title":"Expose System.ServiceModel.ServiceHost in .NET Standard 2.0","State":"closed","Body":"Currently we can't access the ServiceHost under the System.ServiceModel.\r\nIs there a way that we can access the ServiceHost under the NET Standard 2.0?\r\n\r\n\r\nAny inputs are much appreciated.\r\n\r\nThanks,\r\n-Marvin","Url":"https://github.com/dotnet/standard/issues/1250","RelatedDescription":"Closed issue \"Expose System.ServiceModel.ServiceHost in .NET Standard 2.0\" (#1250)"},{"Id":"454251339","IsPullRequest":false,"CreatedAt":"2019-06-21T16:28:06","Actor":"vixisoft","Number":"1242","RawContent":null,"Title":"ExcludeFromCodeCoverageAttribute should have Justification property","State":"closed","Body":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?","Url":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Closed issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242)"},{"Id":"455728018","IsPullRequest":false,"CreatedAt":"2019-06-21T16:27:25","Actor":"SebastianStruct","Number":"1248","RawContent":null,"Title":"Multiple DLLs from referenced .NET Standard projects","State":"closed","Body":"I've created three .NET Standard 2.0 class library C# projects with Visual Studio 2017 (default settings).\r\n\r\n**Projects:**\r\n\r\n- MainProject (no dependencies)\r\n- TimeProject -> Dependencies -> Projects -> MainProject\r\n- ClockProject -> Dependencies -> Projects -> TimeProject\r\n\r\nEach of them have its own output directory. The DLL file should and is placed that output directory but the problem is that the referenced project DLLs are also placed in each output directory.\r\n\r\n**Output directories and files:**\r\n- Projects\\Build\\MainProject\r\n  - MainProject.dll\r\n- Projects\\Build\\TimeProject \r\n  - TimeProject.dll\r\n- Projects\\Build\\ClockProject \r\n  - ClockProject.dll\r\n  - MainProject.dll <-- my problem\r\n\r\n**Example of ProjectReference in ClockProject.csproj file:**\r\n\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\TimeProject\\TimeProject.csproj\">\r\n    <Private>false</Private>\r\n  </ProjectReference>\r\n</ItemGroup>\r\n```\r\n\r\nThe ClockProject referencing the TimeProject which referencing the MainProject.\r\n\r\nI want to prevent that the ClockProject creates a MainProject.dll in its output directory because the MainProject.dll already exists in the output directory of the MainProject.","Url":"https://github.com/dotnet/standard/issues/1248","RelatedDescription":"Closed issue \"Multiple DLLs from referenced .NET Standard projects\" (#1248)"},{"Id":"459187249","IsPullRequest":true,"CreatedAt":"2019-06-21T13:13:31","Actor":"dotnet-maestro[bot]","Number":"1268","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.1\r\n- **Date Produced**: 6/21/2019 9:37 AM\r\n- **Commit**: e5aa6a5b6df5593e17b794dfcf5cf7ec87e9ef1d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19321.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19321.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1268","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1268)"},{"Id":"459162783","IsPullRequest":true,"CreatedAt":"2019-06-21T12:11:02","Actor":"dotnet-maestro[bot]","Number":"1267","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190620.1\r\n- **Date Produced**: 6/20/2019 9:31 AM\r\n- **Commit**: b21c24996a73aa62b7a1ee69f546b9d2eb084f29\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19320.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19320.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1267)"},{"Id":"458616891","IsPullRequest":true,"CreatedAt":"2019-06-20T17:51:33","Actor":"dotnet-maestro[bot]","Number":"1265","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.25\r\n- **Date Produced**: 6/19/2019 10:49 PM\r\n- **Commit**: bd50b2bcc787a8c62e2e114fb54704b645cc1c3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.25\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.25\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1265","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1265)"},{"Id":"458647611","IsPullRequest":true,"CreatedAt":"2019-06-20T13:17:30","Actor":"dotnet-maestro[bot]","Number":"1266","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.10\r\n- **Date Produced**: 6/20/2019 3:08 AM\r\n- **Commit**: eaa0079941923b4f903344130315f4cd332b84fe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1266)"},{"Id":"458053294","IsPullRequest":false,"CreatedAt":"2019-06-19T15:42:32","Actor":"mokhabadi","Number":"1264","RawContent":null,"Title":"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1264","RelatedDescription":"Closed issue \"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed\" (#1264)"},{"Id":"458003284","IsPullRequest":true,"CreatedAt":"2019-06-19T13:17:26","Actor":"dotnet-maestro[bot]","Number":"1263","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:48 AM\r\n- **Commit**: 721a570b005c53a839947603dcf76f8a3e5fc56a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1263)"},{"Id":"457973212","IsPullRequest":true,"CreatedAt":"2019-06-19T12:14:09","Actor":"dotnet-maestro[bot]","Number":"1262","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1262","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1262)"},{"Id":"457962610","IsPullRequest":false,"CreatedAt":"2019-06-19T11:39:36","Actor":"GammaFour","Number":"1261","RawContent":null,"Title":"Expression.Call exception on sorting with .NET native tool chain.","State":"open","Body":"I have an extension method which sorts an **ObservableCollection&lt;T&gt;** using a dynamic property.  Here's the original code:\r\n\r\n```\r\n       public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```\r\nThis works great in my debug build, but crashes when I set '**Compile with .Net Native tool chain**' with the message: \r\n\r\n> No generic method 'OrderBy' on type 'System.Linq.Queryable' is compatible with the supplied type arguments and arguments. No type arguments should be provided if the method is non-generic.\r\n\r\nFurther testing showed that if I called the 'OrderBy' methods explicitly, rather than dynamically, before I performed the dynamic '**Expression.Call**' it would work with the **.Net Native tool chain** setting.  So I distilled the method down to this (this is not a fix, this just illustrates the problem):\r\n\r\n```\r\n        public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // [HACK] This fixes it so that the call to Expression.Call doesn't crash.\r\n            IQueryable<T> queryable1 = new ObservableCollection<T>().AsQueryable();\r\n            Queryable.OrderBy<T, int>(queryable1, p => p.GetHashCode());\r\n            Queryable.OrderByDescending<T, int>(queryable1, p => p.GetHashCode());\r\n\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```\r\nThere is some strange bug in the dynamic **Expression.Call** that only expresses itself when compiled with the **.NET Native tool chain**.  Initializing the library by calling the functions explicitly seems to 'prime' the pump and allow the method to work as intended.","Url":"https://github.com/dotnet/standard/issues/1261","RelatedDescription":"Open issue \"Expression.Call exception on sorting with .NET native tool chain.\" (#1261)"},{"Id":"457672725","IsPullRequest":true,"CreatedAt":"2019-06-18T20:10:06","Actor":"dotnet-maestro-bot","Number":"1260","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1260","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1260)"},{"Id":"457468774","IsPullRequest":true,"CreatedAt":"2019-06-18T13:13:08","Actor":"dotnet-maestro[bot]","Number":"1259","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190618.1\r\n- **Date Produced**: 6/18/2019 9:46 AM\r\n- **Commit**: 1fca079ddec2aabf56e256dab03e39b31b5036c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19318.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1259","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1259)"},{"Id":"457440540","IsPullRequest":true,"CreatedAt":"2019-06-18T12:14:19","Actor":"dotnet-maestro[bot]","Number":"1258","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190618.2\r\n- **Date Produced**: 6/18/2019 8:19 AM\r\n- **Commit**: dc538a29793fd56618d0fa3186e2388d47d00c19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19318.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1258","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1258)"},{"Id":"456916169","IsPullRequest":true,"CreatedAt":"2019-06-17T12:58:44","Actor":"dotnet-maestro[bot]","Number":"1257","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190617.2\r\n- **Date Produced**: 6/17/2019 11:31 AM\r\n- **Commit**: 7acfe7156497d667fc39bc1cdb5a7e95d12f5dca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19317.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19317.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19317.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1257","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1257)"},{"Id":"456638679","IsPullRequest":true,"CreatedAt":"2019-06-16T13:06:10","Actor":"dotnet-maestro[bot]","Number":"1256","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190615.6\r\n- **Date Produced**: 6/16/2019 6:29 AM\r\n- **Commit**: 23faf5d032feef556f5399b46a92a6e4aef7d84a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19315.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19315.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19315.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1256","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1256)"},{"Id":"456634075","IsPullRequest":true,"CreatedAt":"2019-06-16T12:13:48","Actor":"dotnet-maestro[bot]","Number":"1255","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190615.2\r\n- **Date Produced**: 6/15/2019 4:13 PM\r\n- **Commit**: aa4285be7fab64e2b6e62e4d5688ea50931c407c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19315.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1255","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1255)"},{"Id":"456535222","IsPullRequest":true,"CreatedAt":"2019-06-15T13:06:53","Actor":"dotnet-maestro[bot]","Number":"1254","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190614.4\r\n- **Date Produced**: 6/15/2019 3:37 AM\r\n- **Commit**: 5fa3d3b8f89302202091993681391c9b356755a7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19314.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19314.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19314.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1254","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1254)"},{"Id":"456531161","IsPullRequest":true,"CreatedAt":"2019-06-15T12:13:52","Actor":"dotnet-maestro[bot]","Number":"1253","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190614.27\r\n- **Date Produced**: 6/15/2019 1:53 AM\r\n- **Commit**: 372249cafc24384ae3488aab4e815e54c2ff3938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19314.27\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1253","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1253)"},{"Id":"456237914","IsPullRequest":true,"CreatedAt":"2019-06-14T13:22:47","Actor":"dotnet-maestro[bot]","Number":"1252","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190613.10\r\n- **Date Produced**: 6/14/2019 8:01 AM\r\n- **Commit**: c3f4524c785a226bae79cc82a96f7525460e2b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19313.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19313.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19313.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1252","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1252)"},{"Id":"456212743","IsPullRequest":true,"CreatedAt":"2019-06-14T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1251","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190613.18\r\n- **Date Produced**: 6/13/2019 11:28 PM\r\n- **Commit**: 8952b877fa6bca387cd4321b33dcdf6778e31240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19313.18\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1251","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1251)"},{"Id":"455732093","IsPullRequest":true,"CreatedAt":"2019-06-13T13:18:52","Actor":"dotnet-maestro[bot]","Number":"1249","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190612.7\r\n- **Date Produced**: 6/13/2019 7:43 AM\r\n- **Commit**: cc8137ede09cdf16811767a6fb262fb498d85e67\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19312.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19312.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19312.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1249","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1249)"},{"Id":"455701722","IsPullRequest":true,"CreatedAt":"2019-06-13T12:14:50","Actor":"dotnet-maestro[bot]","Number":"1247","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190612.21\r\n- **Date Produced**: 6/13/2019 7:23 AM\r\n- **Commit**: e5cd71926eaa13aba3138c14cd80def0ccfebb30\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19312.21\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1247","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1247)"},{"Id":"455203364","IsPullRequest":true,"CreatedAt":"2019-06-12T13:17:20","Actor":"dotnet-maestro[bot]","Number":"1246","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1246","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1246)"},{"Id":"455174207","IsPullRequest":true,"CreatedAt":"2019-06-12T12:14:57","Actor":"dotnet-maestro[bot]","Number":"1245","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1245)"},{"Id":"454680960","IsPullRequest":true,"CreatedAt":"2019-06-11T13:19:14","Actor":"dotnet-maestro[bot]","Number":"1244","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 11:00 AM\r\n- **Commit**: a78bd7308555926f88aad3d0ecaaebae0f9204cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1244","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1244)"},{"Id":"454649658","IsPullRequest":true,"CreatedAt":"2019-06-11T12:15:00","Actor":"dotnet-maestro[bot]","Number":"1243","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190610.24\r\n- **Date Produced**: 6/11/2019 12:59 AM\r\n- **Commit**: f268510de7a7bcf800a6966830f8d11ff8d24e0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19310.24\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1243","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1243)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"459536385","IsPullRequest":true,"CreatedAt":"2019-06-23T04:51:11","Actor":"ts2do","Number":"38790","RawContent":null,"Title":"Eliminate extra time zone conversions in DateTimeOffset","State":"open","Body":"Revised members dealing specifically with local time by removing delegation to `DateTime` methods to avoid an extra call to `TimeZoneInfo` to determine offset:\r\n> Now\r\n> FromFileTime(long)\r\n> ToLocalTime()","Url":"https://github.com/dotnet/corefx/pull/38790","RelatedDescription":"Open PR \"Eliminate extra time zone conversions in DateTimeOffset\" (#38790)"},{"Id":"459520107","IsPullRequest":true,"CreatedAt":"2019-06-23T04:12:36","Actor":"davidsh","Number":"38789","RawContent":null,"Title":"Fix SslStream client auth with intermediate certificates on Linux","State":"closed","Body":"On Linux, a client TLS certificate chaining to multiple intermediate certificates wasn't\r\nsending the complete list of intermediates because the final one in the chain wasn't\r\ntrusted. This differs from Windows behavior. This was causing the application to fail\r\nto authenticate to the payment provider in the repro.\r\n\r\nThis PR fixes SslStream so that it will send the complete list of intermediates if the\r\nchain build operation results in a \"PartialChain\" instead of a fully trusted chain.\r\n\r\nDue to the complexity of this scenario, I didn't write a standalone CI test. But I was\r\nable to run the original repro (using a docker container) to validate the fix.\r\n\r\nFixes #37927","Url":"https://github.com/dotnet/corefx/pull/38789","RelatedDescription":"Closed or merged PR \"Fix SslStream client auth with intermediate certificates on Linux\" (#38789)"},{"Id":"459515230","IsPullRequest":true,"CreatedAt":"2019-06-23T00:19:03","Actor":"GrabYourPitchforks","Number":"38787","RawContent":null,"Title":"Prefer ILLinkTrim.xml over InternalsVisibleTo in System.Text.Encodings.Web","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/38785. Thank you Jan for the pointer! :)","Url":"https://github.com/dotnet/corefx/pull/38787","RelatedDescription":"Closed or merged PR \"Prefer ILLinkTrim.xml over InternalsVisibleTo in System.Text.Encodings.Web\" (#38787)"},{"Id":"459499059","IsPullRequest":false,"CreatedAt":"2019-06-23T00:19:03","Actor":"jkotas","Number":"38785","RawContent":null,"Title":"Remove use of InternalsVisibleTo from System.Text.Encodings.Web","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/issues/38785","RelatedDescription":"Closed issue \"Remove use of InternalsVisibleTo from System.Text.Encodings.Web\" (#38785)"},{"Id":"459519426","IsPullRequest":false,"CreatedAt":"2019-06-22T23:20:46","Actor":"geoffkizer","Number":"38788","RawContent":null,"Title":"HTTP2: Race with ping data handling","State":"open","Body":"Issue is here: https://github.com/dotnet/corefx/blob/28c41fff6f830b8393fd6c7661f33f96aa27f965/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs#L558\r\n\r\nWe shouldn't reference _incomingBuffer directly here, as it can change when we read more data into the buffer. \r\n\r\nInstead, we should copy the ping data locally (it's always 8 bytes, so ulong would be appropriate) and then pass the copied data to SendPingAckAsync.\r\n\r\nSee: https://github.com/dotnet/corefx/pull/38226#discussion_r295916526","Url":"https://github.com/dotnet/corefx/issues/38788","RelatedDescription":"Open issue \"HTTP2: Race with ping data handling\" (#38788)"},{"Id":"459507138","IsPullRequest":true,"CreatedAt":"2019-06-22T21:38:19","Actor":"qmfrederik","Number":"38786","RawContent":null,"Title":"GraphicsTests: Add missing using statements","State":"closed","Body":"Opening PR to get a CI signal, will cherry-pick into #38771 once this is green.","Url":"https://github.com/dotnet/corefx/pull/38786","RelatedDescription":"Closed or merged PR \"GraphicsTests: Add missing using statements\" (#38786)"},{"Id":"459473009","IsPullRequest":true,"CreatedAt":"2019-06-22T16:04:03","Actor":"dotnet-maestro[bot]","Number":"38784","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190622.2\r\n- **Date Produced**: 6/22/2019 1:24 PM\r\n- **Commit**: 5c6ab440216b953a86cae470a41d19bdd8d91be4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19322.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38784","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#38784)"},{"Id":"459471339","IsPullRequest":true,"CreatedAt":"2019-06-22T14:44:23","Actor":"dotnet-maestro[bot]","Number":"38783","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190622.1\r\n- **Date Produced**: 6/22/2019 11:26 AM\r\n- **Commit**: e65c231a2510ad8aca3f2c28b1b392924f62ee0c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190622.1\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38783","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#38783)"},{"Id":"459469537","IsPullRequest":true,"CreatedAt":"2019-06-22T14:09:51","Actor":"dotnet-maestro[bot]","Number":"38781","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190621.8\r\n- **Date Produced**: 6/22/2019 7:52 AM\r\n- **Commit**: d7631df16a92da0e21bcb64240d5007f0dab95ed\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview7.19321.8\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19321.8\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38781","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#38781)"},{"Id":"459469231","IsPullRequest":true,"CreatedAt":"2019-06-22T14:00:35","Actor":"dotnet-maestro[bot]","Number":"38780","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190621.07\r\n- **Date Produced**: 6/22/2019 4:17 AM\r\n- **Commit**: 1be0aae259c6ba7919a2aee6009c92f5108af912\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27821-07\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview7-27821-07\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview7-27821-07\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38780","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#38780)"},{"Id":"459470690","IsPullRequest":true,"CreatedAt":"2019-06-22T12:45:08","Actor":"dotnet-maestro[bot]","Number":"38782","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190621.2\r\n- **Date Produced**: 6/22/2019 12:45 AM\r\n- **Commit**: 56e6568b51476868303744473c03ac595121165b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19321.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19321.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19321.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38782","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/coreclr\" (#38782)"},{"Id":"459467504","IsPullRequest":true,"CreatedAt":"2019-06-22T12:03:30","Actor":"dotnet-maestro[bot]","Number":"38779","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190621.75\r\n- **Date Produced**: 6/22/2019 3:18 AM\r\n- **Commit**: fcee3d5c2d6180bec19c4ae50234771c436b4b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19321.75\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19321.75\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19321.75\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19321.75\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19321.75\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38779","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#38779)"},{"Id":"459452056","IsPullRequest":true,"CreatedAt":"2019-06-22T11:06:12","Actor":"qmfrederik","Number":"38773","RawContent":null,"Title":"GraphicsTests: Add missing using statements","State":"closed","Body":"`Graphics` & friends implement IDisposable and use native resources, so dispose if them when the test is complete.","Url":"https://github.com/dotnet/corefx/pull/38773","RelatedDescription":"Closed or merged PR \"GraphicsTests: Add missing using statements\" (#38773)"},{"Id":"459454634","IsPullRequest":true,"CreatedAt":"2019-06-22T11:05:59","Actor":"qmfrederik","Number":"38774","RawContent":null,"Title":"Region tests: Add using statements","State":"closed","Body":"`Region` uses native resources, so should be disposed of.\r\n\r\n- Use a single instance of a disposed `Region`\r\n- Replace `try`/`finally` with `using`\r\n- Add a bunch of `using` statements","Url":"https://github.com/dotnet/corefx/pull/38774","RelatedDescription":"Closed or merged PR \"Region tests: Add using statements\" (#38774)"},{"Id":"459455310","IsPullRequest":true,"CreatedAt":"2019-06-22T11:05:48","Actor":"qmfrederik","Number":"38775","RawContent":null,"Title":"GraphicsPathTests: Add using statements","State":"closed","Body":"Add missing using statements for `GraphicsPath` tests","Url":"https://github.com/dotnet/corefx/pull/38775","RelatedDescription":"Closed or merged PR \"GraphicsPathTests: Add using statements\" (#38775)"},{"Id":"459455341","IsPullRequest":true,"CreatedAt":"2019-06-22T11:05:39","Actor":"qmfrederik","Number":"38776","RawContent":null,"Title":"MatrixTests: Add using statements","State":"closed","Body":"Add missing `using` statements for `Matrix` tests, and use a single instance of a disposed `Matrix` object.","Url":"https://github.com/dotnet/corefx/pull/38776","RelatedDescription":"Closed or merged PR \"MatrixTests: Add using statements\" (#38776)"},{"Id":"459455501","IsPullRequest":true,"CreatedAt":"2019-06-22T11:05:30","Actor":"qmfrederik","Number":"38777","RawContent":null,"Title":"Drawing tests: Add missing using statements","State":"closed","Body":"Add missing using statements for various drawing tests.","Url":"https://github.com/dotnet/corefx/pull/38777","RelatedDescription":"Closed or merged PR \"Drawing tests: Add missing using statements\" (#38777)"},{"Id":"459451948","IsPullRequest":true,"CreatedAt":"2019-06-22T11:05:18","Actor":"qmfrederik","Number":"38772","RawContent":null,"Title":"EncoderParametersTests: Add missing using statements","State":"closed","Body":"`EncoderParameters ` implements IDisposable and uses native resources, so dispose if it when the test is complete.","Url":"https://github.com/dotnet/corefx/pull/38772","RelatedDescription":"Closed or merged PR \"EncoderParametersTests: Add missing using statements\" (#38772)"},{"Id":"459458227","IsPullRequest":true,"CreatedAt":"2019-06-22T09:51:52","Actor":"MarcoRossignoli","Number":"38778","RawContent":null,"Title":"[WIP]MemoryExtensions ToUpper / ToLower throws for overlapping buffer","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/34799\r\nDepends on https://github.com/dotnet/coreclr/pull/25327\r\n\r\nAdded also tests with direct call to static method to be sure that if in future we'll add overload on ROS behaviour will be verified, let me know if it makes sense.\r\n\r\n/cc @ahsonkhan @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/38778","RelatedDescription":"Open PR \"[WIP]MemoryExtensions ToUpper / ToLower throws for overlapping buffer\" (#38778)"},{"Id":"459451838","IsPullRequest":true,"CreatedAt":"2019-06-22T08:28:19","Actor":"qmfrederik","Number":"38771","RawContent":null,"Title":"Clean up System.Drawing.Common unit tests","State":"open","Body":"- A lot of the types in System.Drawing.Common implement `IDisposable` and use native resources. Make sure these types are wrapped in a `using` statement in the unit tests.\r\n- Convert `BitmapTests.Rotate1bit4bit` to a theory, and prevent it from using `/tmp` directly\r\n- Convert `ScaleTransform_ZeroZero_ThrowsArgumentException` and `SurroundColors_Null_ThrowsArgumentNullException` from a theory to a fact (they have no test parameters)","Url":"https://github.com/dotnet/corefx/pull/38771","RelatedDescription":"Open PR \"Clean up System.Drawing.Common unit tests\" (#38771)"},{"Id":"459393516","IsPullRequest":true,"CreatedAt":"2019-06-22T03:59:31","Actor":"bartonjs","Number":"38766","RawContent":null,"Title":"Add support for NumericString to X500DistinguishedName","State":"closed","Body":"An X500DN which contains a valid NumericString will now not cause the\r\nentire string to turn into the empty string; which (per the tests) matches the\r\nWindows/NetFX behavior.\r\n\r\nFixes #38014.","Url":"https://github.com/dotnet/corefx/pull/38766","RelatedDescription":"Closed or merged PR \"Add support for NumericString to X500DistinguishedName\" (#38766)"},{"Id":"459418053","IsPullRequest":false,"CreatedAt":"2019-06-22T01:21:48","Actor":"vexx32","Number":"38770","RawContent":null,"Title":"System.Net.NetworkInformation.Ping is throwing exceptions for anything but TtlExpired or Success","State":"open","Body":"So I ran into this originally while working on PowerShell's Test-Connection cmdlet. Below is a very simple C# repro of the bug:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Net.NetworkInformation;\r\n\r\nnamespace Pings\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                var sender = new Ping();\r\n                var reply = sender.Send(\"1.2.3.4\");\r\n\r\n                Console.WriteLine(\"Status {0}; Latency: {0} ms\", reply.Status, reply.RoundtripTime);\r\n            }\r\n            catch (PingException e)\r\n            {\r\n                Console.WriteLine(\"Exception occurred: {0}\", e.Message);\r\n                Console.WriteLine(\"Exception HResult: {0}\", e.HResult);\r\n                Console.WriteLine(\"Exception stack trace:\\n{0}\", e.StackTrace);\r\n                System.Environment.Exit(e.HResult);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTry it with both `netcoreapp2.1` and `netcoreapp3.0` targets with a simple `dotnet run` after adding a very basic csproj.\r\n\r\n**netcoreapp2.1**\r\n![image](https://user-images.githubusercontent.com/32407840/59957833-fa66dc00-946a-11e9-97bc-23e1bdc98ca9.png)\r\n\r\n**netcoreapp3.0**\r\n![image](https://user-images.githubusercontent.com/32407840/59957835-081c6180-946b-11e9-8676-8d06ec581245.png)\r\n\r\nYou'll notice `netcoreapp2.1` _does not throw_ an exception. The inevitable time out is handled as a time out PingReply and returned to the caller properly. This will be very similar with the async methods as well, I believe.\r\n\r\nIn `netcoreapp3.0` the native exception is not properly handled and is improperly surfaced, along with HResult values and so forth. This appears to be a regression that was introduced in #30000.\r\n\r\nThe affected code is here:\r\nhttps://github.com/dotnet/corefx/blob/42ecf717478504fd7cc072f3586c6edd1ba57daa/src/System.Net.Ping/src/System/Net/NetworkInformation/Ping.Windows.cs#L92\r\n\r\nAlso possibly related:\r\n\r\n- https://stackoverflow.com/questions/23374710/icmpsendecho2-fails-with-fails-with-wsa-qos-admission-failure-and-error-noaccess\r\n- #38303\r\n\r\nAny chance we could sort this out for .NET Core 3 release? 💖 \r\n\r\n/cc @seeminglyscience who helped figure out the details of what was going wrong here 😘 ","Url":"https://github.com/dotnet/corefx/issues/38770","RelatedDescription":"Open issue \"System.Net.NetworkInformation.Ping is throwing exceptions for anything but TtlExpired or Success\" (#38770)"},{"Id":"459415612","IsPullRequest":false,"CreatedAt":"2019-06-22T00:56:25","Actor":"pranavkm","Number":"38769","RawContent":null,"Title":"JsonExtensionData should not use the dictionary name when serializing","State":"open","Body":"Consider:\r\n\r\n```C#\r\npublic class MyPoco\r\n{\r\n    public int Id { get; set;}\r\n\r\n    [JsonExtensionData]\r\n    public Dictionary<string, object> Extensions { get; set;} = new Dictionary<string, object>();\r\n}\r\n```\r\n\r\nDeserializing this works perfectly:\r\n\r\n```C#\r\nvar json = \"{\\\"Id\\\": 10, \\\"Hello\\\": \\\"world\\\" }\";\r\n\r\nvar poco = JsonSerializer.Parse<MyPoco>(json);\r\n```\r\n\r\nHowever, if I attempt to serialize the type, it includes the dictionary name as the property key:\r\n\r\n```C#\r\nvar serialized = JsonSerializer.ToString(poco);\r\nConsole.WriteLine(serialized); // Prints {\"Id\":10,\"Extensions\":{\"Hello\":\"world\"}}\r\n```\r\n\r\nWhile this does round-trip, the expectation is keys in `JsonExtensionData` should alongside other properties of the Poco object. Here's the same routine performed using Json.NET:\r\n\r\n```C#\r\nvar json = \"{\\\"Id\\\": 10, \\\"Hello\\\": \\\"world\\\" }\";\r\n\r\nvar poco = JsonConvert.DeserializeObject<MyPoco>(json);\r\nConsole.WriteLine(poco.Extensions[\"Hello\"]);\r\n\r\nvar serialized = JsonConvert.SerializeObject(poco);\r\nConsole.WriteLine(serialized); // Prints {\"Id\":10,\"Hello\":\"world\"}\r\n```\r\n\r\nMore interestingly, Json.NET does not allow using the dictionary name for deserialization:\r\n\r\n```C#\r\nvar json = \"{\\\"Id\\\":10,\\\"Extensions\\\":{\\\"Hello\\\":\\\"world\\\"}}\";\r\n\r\nvar poco = JsonConvert.DeserializeObject<MyPoco>(json);\r\nConsole.WriteLine(poco.Extensions.ContainsKey(\"Hello\")); // Returns false\r\n```\r\n\r\nThis makes the serialized output particularly problematic since it's not consumable by Json.Net.","Url":"https://github.com/dotnet/corefx/issues/38769","RelatedDescription":"Open issue \"JsonExtensionData should not use the dictionary name when serializing\" (#38769)"},{"Id":"459414646","IsPullRequest":false,"CreatedAt":"2019-06-22T00:46:16","Actor":"jkotas","Number":"38768","RawContent":null,"Title":" System.Globalization.Tests.CurrentCultureTests tests failing on Linux amd64 checked CoreCLR","State":"open","Body":"First found in https://github.com/dotnet/coreclr/pull/25120. The tests are disabled in CoreCLR CI against this issue.\r\n\r\nAffected tests:\r\n\r\nSystem.Globalization.Tests.CurrentCultureTests.CurrentCulture_DefaultWithNoLang\r\nSystem.Globalization.Tests.CurrentCultureTests.CurrentCulture_BasedOnLangEnvVar\r\n\r\n```\r\nError message\r\nExit code was 150 but it should have been 42\\nExpected: True\\nActual: False\r\n\r\nStack trace\r\n   at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose(Boolean disposing) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor/RemoteInvokeHandle.cs:line 143\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/38768","RelatedDescription":"Open issue \" System.Globalization.Tests.CurrentCultureTests tests failing on Linux amd64 checked CoreCLR\" (#38768)"},{"Id":"459384449","IsPullRequest":false,"CreatedAt":"2019-06-21T23:59:34","Actor":"JeremyKuhne","Number":"38763","RawContent":null,"Title":"TcpReceiveSendGetsCanceledByDispose failing in CI","State":"closed","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38527~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190621.24/workItem/System.Net.Sockets.Tests/analysis/xunit/System.Net.Sockets.Tests.SendReceiveMemoryNativeTask~2FTcpReceiveSendGetsCanceledByDispose(receiveOrSend:%20False)\r\n\r\nTest was just added in: #37486\r\n\r\n```\r\nUbuntu.1604.Amd64.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.EqualException\r\nMessage :\r\nAssert.Equal() Failure\r\nExpected: OperationAborted\r\nActual:   ConnectionReset\r\nStack Trace :\r\n   at System.Net.Sockets.Tests.SendReceive`1.TcpReceiveSendGetsCanceledByDispose(Boolean receiveOrSend) in /_/src/System.Net.Sockets/tests/FunctionalTests/SendReceive.cs:line 1121\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```","Url":"https://github.com/dotnet/corefx/issues/38763","RelatedDescription":"Closed issue \"TcpReceiveSendGetsCanceledByDispose failing in CI\" (#38763)"},{"Id":"459408130","IsPullRequest":false,"CreatedAt":"2019-06-21T23:52:58","Actor":"pranavkm","Number":"38767","RawContent":null,"Title":"Types deriving from concrete collection types aren't supported by JsonSerializer","State":"open","Body":"Consider:\r\n\r\n```C#\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var dictionary= new MyDictionary\r\n            {\r\n                { \"Hello\", \"World\" },\r\n            };\r\n\r\n            var x = JsonSerializer.ToString(dictionary);\r\n            System.Console.WriteLine(x);\r\n        }\r\n    }\r\n\r\n    public class MyDictionary : Dictionary<string, object>\r\n    {\r\n    }\r\n```\r\n\r\nThis fails to serialize with the following error:\r\n\r\n```\r\nUnhandled exception. System.NotSupportedException: The collection type 'dictionary.MyDictionary' is not supported.\r\n   at System.Text.Json.JsonClassInfo.GetElementType(Type propertyType, Type parentType, MemberInfo memberInfo, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo.CreateProperty(Type declaredPropertyType, Type runtimePropertyType, PropertyInfo propertyInfo, Type parentClassType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo.AddProperty(Type propertyType, PropertyInfo propertyInfo, Type classType, JsonSerializerOptions options)\r\n   at System.Text.Json.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n```\r\n\r\nSimilarly, this does not work either:\r\n\r\n```C#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var list = new MyList { \"A\", \"B\" };\r\n        var json = JsonSerializer.ToString(list);\r\n        System.Console.WriteLine(json);\r\n    }\r\n}\r\n\r\npublic class MyList : List<string>\r\n{\r\n}\r\n```\r\n\r\nHaven't tried out other collection types, happened to run in to these two. For the first case, there is an actual MVC scenario for this: https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/Mvc.Core/src/SerializableError.cs. If it happens to be fairly trivial to fix this, we'd love to see this fixed.\r\n","Url":"https://github.com/dotnet/corefx/issues/38767","RelatedDescription":"Open issue \"Types deriving from concrete collection types aren't supported by JsonSerializer\" (#38767)"},{"Id":"459385795","IsPullRequest":true,"CreatedAt":"2019-06-21T23:51:35","Actor":"davidsh","Number":"38764","RawContent":null,"Title":"Revert \"Socket: Linux: unblock synchronous socket operations on Dispose\"","State":"closed","Body":"Reverts dotnet/corefx#37486","Url":"https://github.com/dotnet/corefx/pull/38764","RelatedDescription":"Closed or merged PR \"Revert \"Socket: Linux: unblock synchronous socket operations on Dispose\"\" (#38764)"},{"Id":"459386730","IsPullRequest":false,"CreatedAt":"2019-06-21T21:57:37","Actor":"wfurt","Number":"38765","RawContent":null,"Title":"behavior change with Socket sending reset","State":"open","Body":"This is outcome of #37486. Even if that aimed to fix Synchronous blocking calls, it also impacts  Async operations:\r\n\r\nlet say there is simple receiver app:\r\n```c#\r\nusing System;\r\nusing System.Net;\r\nusing System.Net.Sockets;\r\n\r\nnamespace Receiver\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Socket l = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n            l.Bind(new IPEndPoint(IPAddress.Parse(\"127.0.0.1\"), 8888));\r\n            l.Listen(1);\r\n\r\n            Socket s = l.Accept();\r\n            Console.WriteLine(\"got socket!\");\r\n\r\n            byte[] buffer = new byte[1000];\r\n            int rlen = 0;\r\n            do {\r\n                rlen = s.Receive(buffer, SocketFlags.None);\r\n            }\r\n            while (rlen > 0);\r\n\r\n            Console.WriteLine(\"All done\");\r\n        }\r\n    }\r\n```\r\nand then sender using Async IO.\r\n\r\n```c# \r\nusing System;\r\nusing System.Net;\r\nusing System.Net.Sockets;\r\nusing System.Threading.Tasks;\r\n\r\n\r\nnamespace dotnet_latest\r\n{\r\n    class Program\r\n    {\r\n        static async Task reader(Socket s)\r\n        {\r\n            byte[] buffer = new byte[1000];\r\n            int readLength=0;\r\n            do\r\n            {\r\n                readLength = await s.ReceiveAsync(buffer, SocketFlags.None);\r\n                Console.WriteLine(\"Got {0} bytes\", readLength);\r\n            }\r\n            while (readLength > 0);\r\n            Console.WriteLine(\"Reader all done\");\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Socket s= new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n            s.Connect(new IPEndPoint(IPAddress.Parse(\"127.0.0.1\"), 8888));\r\n            Task.Run(() => reader(s));\r\n\r\n            Console.WriteLine(\"Hello World!\");\r\n            Console.ReadLine();\r\n            s.Close();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nbefore the change the receiver would simply finish after hitting enter on sending side. \r\n\r\nwith the latest socket call it fails:\r\n```\r\nUnhandled exception. System.Net.Sockets.SocketException (104): Connection reset by peer\r\n   at System.Net.Sockets.Socket.Receive(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags)\r\n   at System.Net.Sockets.Socket.Receive(Byte[] buffer, SocketFlags socketFlags)\r\n   at Receiver.Program.Main(String[] args) in /home/furt/abcd/Program.cs:line 21\r\n```\r\n\r\nIt seems like we send reset when we should not. \r\n\r\n![image](https://user-images.githubusercontent.com/14356188/59953387-ac36e600-9434-11e9-9b46-c6a7d7c06ee6.png)\r\n \r\ncc: @tmds @davidsh @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/38765","RelatedDescription":"Open issue \"behavior change with Socket sending reset\" (#38765)"},{"Id":"459376317","IsPullRequest":false,"CreatedAt":"2019-06-21T21:18:09","Actor":"miguep","Number":"38762","RawContent":null,"Title":"String.Format Fatal error in Windows 7","State":"open","Body":"The following line of code results in \"Fatal error. 0xC000001D\"\r\n\r\n``` csharp\r\nString.Format(CultureInfo.InvariantCulture, \"{0}\", 1.0d);\r\n```\r\n\r\nWe started observing this in build 3.0.100-preview7-012535.\r\nbuild 3.0.100-preview7-012496 runs fine.\r\n\r\nThis is currently blocking all WPF test runs in Windows 7\r\n\r\n\r\nStack Trace:\r\nFatal error. 0xC000001D\r\n   at System.Number+Grisu3.GetCachedPowerForBinaryExponentRange(Int32, Int32, In\r\nt32 ByRef)\r\n   at System.Number+Grisu3.TryRunShortest(DiyFp ByRef, DiyFp ByRef, DiyFp ByRef,\r\n System.Span`1<Byte>, Int32 ByRef, Int32 ByRef)\r\n   at System.Number+Grisu3.TryRunDouble(Double, Int32, NumberBuffer ByRef)\r\n   at System.Number.FormatDouble(System.Text.ValueStringBuilder ByRef, Double, S\r\nystem.ReadOnlySpan`1<Char>, System.Globalization.NumberFormatInfo)\r\n   at System.Number.TryFormatDouble(Double, System.ReadOnlySpan`1<Char>, System.\r\nGlobalization.NumberFormatInfo, System.Span`1<Char>, Int32 ByRef)\r\n   at System.Double.TryFormat(System.Span`1<Char>, Int32 ByRef, System.ReadOnlyS\r\npan`1<Char>, System.IFormatProvider)\r\n   at System.Text.StringBuilder.AppendFormatHelper(System.IFormatProvider, Syste\r\nm.String, System.ParamsArray)\r\n   at System.String.FormatHelper(System.IFormatProvider, System.String, System.P\r\naramsArray)\r\n   at System.String.Format(System.IFormatProvider, System.String, System.Object)","Url":"https://github.com/dotnet/corefx/issues/38762","RelatedDescription":"Open issue \"String.Format Fatal error in Windows 7\" (#38762)"},{"Id":"459339433","IsPullRequest":false,"CreatedAt":"2019-06-21T19:22:25","Actor":"Jozkee","Number":"38761","RawContent":null,"Title":" System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2/GoAwayFrame_AbortAllPendingStreams_StreamFailWithExpectedException failing in CI","State":"open","Body":"From #38566\r\n\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38566~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190619.80/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2~2FGoAwayFrame_AbortAllPendingStreams_StreamFailWithExpectedException\r\n\r\nMessage:\r\n```\r\nSystem.Net.Http.HttpRequestException : An error occurred while sending the request.\r\n---- System.ObjectDisposedException : Cannot access a disposed object.\r\nObject name: 'CreditManager'.\r\n```\r\n\r\nStack Trace:\r\n```  \r\nat System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 1449\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/HttpConnectionPool.cs:line 539\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/RedirectHandler.cs:line 33\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts) in /_/src/System.Net.Http/src/System/Net/Http/HttpClient.cs:line 496\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.<>c__DisplayClass39_0.<<EstablishConnectionAndProcessOneRequestAsync>b__0>d.MoveNext() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 739\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks, Int32 millisecondsTimeout) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 71\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.EstablishConnectionAndProcessOneRequestAsync(HttpClient client, Http2LoopbackServer server) in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 735\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.GoAwayFrame_AbortAllPendingStreams_StreamFailWithExpectedException() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 889\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at System.Net.Http.CreditManager.RequestCreditAsync(Int32 amount, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/CreditManager.cs:line 50\r\n   at System.Net.Http.Http2Connection.SendHeadersAsync(HttpRequestMessage request, CancellationToken cancellationToken, Boolean mustFlush) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 972\r\n   at System.Threading.Tasks.ValueTask`1.get_Result() in /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/ValueTask.cs:line 763\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 1370\r\n```","Url":"https://github.com/dotnet/corefx/issues/38761","RelatedDescription":"Open issue \" System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2/GoAwayFrame_AbortAllPendingStreams_StreamFailWithExpectedException failing in CI\" (#38761)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"459521543","IsPullRequest":true,"CreatedAt":"2019-06-23T01:30:05","Actor":"dotnet-bot","Number":"36690","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36690","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36690)"},{"Id":"459521480","IsPullRequest":true,"CreatedAt":"2019-06-23T00:01:24","Actor":"dotnet-bot","Number":"36689","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36689","RelatedDescription":"Open PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36689)"},{"Id":"459467278","IsPullRequest":true,"CreatedAt":"2019-06-22T14:30:15","Actor":"dotnet-bot","Number":"36683","RawContent":null,"Title":"Merge master to release/dev16.3-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.3-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36683","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.3-preview1\" (#36683)"},{"Id":"459467434","IsPullRequest":true,"CreatedAt":"2019-06-22T14:30:06","Actor":"dotnet-bot","Number":"36685","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36685","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36685)"},{"Id":"459467360","IsPullRequest":true,"CreatedAt":"2019-06-22T14:00:32","Actor":"dotnet-bot","Number":"36684","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36684","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36684)"},{"Id":"459467449","IsPullRequest":true,"CreatedAt":"2019-06-22T14:00:15","Actor":"dotnet-bot","Number":"36686","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36686","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36686)"},{"Id":"459467479","IsPullRequest":true,"CreatedAt":"2019-06-22T14:00:06","Actor":"dotnet-bot","Number":"36688","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36688","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36688)"},{"Id":"459467461","IsPullRequest":true,"CreatedAt":"2019-06-22T13:30:12","Actor":"dotnet-bot","Number":"36687","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36687","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36687)"},{"Id":"459456534","IsPullRequest":false,"CreatedAt":"2019-06-22T09:29:06","Actor":"Paxxi","Number":"36682","RawContent":null,"Title":"VisualBasicRemoveUnusedValuesCodeFixProvider crashes","State":"open","Body":"**Version Used**:  VS 2019 16.1.3 but also seeing issue with git version 99f88ce03be3f8a524d9a855258cd9f8cdbe2c08\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a VB classlib targeting netfx 472\r\n2. Paste this into Class1.vb\r\n```\r\nPublic Class Class1\r\n    Sub Method()\r\n        For Each a In New Integer() {1, 2, 3}\r\n            a = 1\r\n            Console.WriteLine(a)\r\n        Next\r\n    End Sub\r\nEnd Class\r\n```\r\n3. place character on a after For Each `For Each |a` and trigger light bulb, I used ctrl+. but clicking it seems to do the same thing. \r\n\r\n**Expected Behavior**:\r\nGet a code fix suggestion to remove unused variable (IDE hints about this by fading the variable).\r\nI don't believe it should be offered at all for the foreach variable as removing it will break the code.\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/874927/59962062-bca49a80-94e0-11e9-89ab-e410b8b47c81.png)\r\n\r\n```\r\nSystem.InvalidOperationException : The item specified is not the element of a list.\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForEachBlock(ForEachBlockSyntax node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.BaseListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMethodBlock(MethodBlockSyntax node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.BaseListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitClassBlock(ClassBlockSyntax node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.BaseListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.VisitList[TNode](SyntaxList`1 list)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCompilationUnit(CompilationUnitSyntax node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.BaseListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.NodeListEditor.Visit(SyntaxNode node)\r\n   at Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxReplacer.InsertNodeInList(SyntaxNode root,SyntaxNode nodeInList,IEnumerable`1 nodesToInsert,Boolean insertBefore)\r\n   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.InsertNodesInListCore(SyntaxNode nodeInList,IEnumerable`1 nodesToInsert,Boolean insertBefore)\r\n   at Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertNodesBefore[TRoot](TRoot root,SyntaxNode nodeInList,IEnumerable`1 newNodes)\r\n   at Microsoft.CodeAnalysis.VisualBasic.CodeGeneration.VisualBasicSyntaxGenerator.InsertDeclarationsBeforeInternal(SyntaxNode root,SyntaxNode declaration,IEnumerable`1 newDeclarations)\r\n   at Microsoft.CodeAnalysis.VisualBasic.CodeGeneration.VisualBasicSyntaxGenerator._Closure$__309-0._Lambda$__0(SyntaxNode r)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxGenerator.PreserveTrivia[TNode](TNode node,Func`2 nodeChanger)\r\n   at Microsoft.CodeAnalysis.VisualBasic.CodeGeneration.VisualBasicSyntaxGenerator.InsertNodesBefore(SyntaxNode root,SyntaxNode declaration,IEnumerable`1 newDeclarations)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.InsertChange.Apply(SyntaxNode root,SyntaxGenerator generator)\r\n   at Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot()\r\n   at async Microsoft.CodeAnalysis.RemoveUnusedParametersAndValues.AbstractRemoveUnusedValuesCodeFixProvider`11.FixAllAsync[TExpressionSyntax,TStatementSyntax,TBlockSyntax,TExpressionStatementSyntax,TLocalDeclarationStatementSyntax,TVariableDeclaratorSyntax,TForEachStatementSyntax,TSwitchCaseBlockSyntax,TSwitchCaseLabelOrClauseSyntax,TCatchStatementSyntax,TCatchBlockSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.GetPreviewResultAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionWithNestedFlavors.<>c__DisplayClass11_0.<GetPreviewAsync>b__0(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync[T](<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/36682","RelatedDescription":"Open issue \"VisualBasicRemoveUnusedValuesCodeFixProvider crashes\" (#36682)"},{"Id":"459409339","IsPullRequest":true,"CreatedAt":"2019-06-22T02:00:10","Actor":"dotnet-bot","Number":"36679","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36679","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36679)"},{"Id":"459420806","IsPullRequest":true,"CreatedAt":"2019-06-22T01:58:01","Actor":"ivanbasov","Number":"36681","RawContent":null,"Title":"C# SymbolMatcher tests for nullables","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36681","RelatedDescription":"Open PR \"C# SymbolMatcher tests for nullables\" (#36681)"},{"Id":"459394165","IsPullRequest":true,"CreatedAt":"2019-06-22T00:28:44","Actor":"sharwell","Number":"36671","RawContent":null,"Title":"Update to Roslyn.Diagnostics.Analyzers 2.9.3","State":"closed","Body":"This is a simplified version of #35439. Diagnostics will be addressed as part of the 16.3 release.\r\n\r\nCloses #35941","Url":"https://github.com/dotnet/roslyn/pull/36671","RelatedDescription":"Closed or merged PR \"Update to Roslyn.Diagnostics.Analyzers 2.9.3\" (#36671)"},{"Id":"459409494","IsPullRequest":true,"CreatedAt":"2019-06-22T00:02:36","Actor":"dotnet-bot","Number":"36680","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36680","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36680)"},{"Id":"459299824","IsPullRequest":true,"CreatedAt":"2019-06-22T00:00:05","Actor":"dotnet-bot","Number":"36662","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36662","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36662)"},{"Id":"459406736","IsPullRequest":true,"CreatedAt":"2019-06-21T23:42:30","Actor":"gafter","Number":"36678","RawContent":null,"Title":"Don't treat zero-length deconstruction as an error when binding patterns.","State":"open","Body":"Fixes #36496\r\n\r\nThis is a tiny bug fix for a compiler \"crash\".\r\n@dotnet/roslyn-compiler Please review.\r\n","Url":"https://github.com/dotnet/roslyn/pull/36678","RelatedDescription":"Open PR \"Don't treat zero-length deconstruction as an error when binding patterns.\" (#36678)"},{"Id":"459399870","IsPullRequest":false,"CreatedAt":"2019-06-21T23:21:38","Actor":"smartcodinghub","Number":"36675","RawContent":null,"Title":"Compile error in abstract generic class with generic constraint to itself error on using this keyboard to call a method that expects that generic class.","State":"closed","Body":"I found a compile error when using generic constraints in an abstract class (`Entity<T>`)that restricts the generic type to inherit from the abstract class itself (`where T : Entity<T>`) and then use methods inside de class using the this keyword. Since its an abstract class, 'this' will always be an object that inherits the abstract class, but the compiler gives an error.\r\n\r\nI don't know if this is because the runtime can't support this, that the compiler doesn't support this edge case or this is by the language design (some context on this Eric's post: https://blogs.msdn.microsoft.com/ericlippert/2008/05/19/a-generic-constraint-question/).\r\n\r\nThe code to play with this issue:\r\n\r\n```csharp\r\npublic abstract class Entity<T> where T : Entity<T>\r\n{\r\n\tGuid Id { get; }\r\n\tlong Version { get; }\r\n\tpublic List<IEvent<T>> PendingEvents { get; protected set; }\r\n\tpublic List<IEvent<T>> AppliedEvents { get; protected set; }\r\n\r\n\tpublic void Load() { ApplyDefaults(this); } // The error is here, on this\r\n\r\n\tpublic static void ApplyDefaults(T something) { }\r\n}\r\n\r\npublic interface IEvent<T> where T : Entity<T>\r\n{\r\n\tGuid EventId { get; }\r\n\tstring EventType { get; }\r\n}\r\n\r\npublic class Order : Entity<Order>\r\n{\r\n}\r\n\r\npublic class OrderCreated : IEvent<Order>\r\n{\r\n\tpublic Guid EventId => throw new NotImplementedException();\r\n\tpublic string EventType => throw new NotImplementedException();\r\n}\r\n```\r\n\r\nThe last two classes (`Order`) is just to give some context, but unnecessary. \r\n\r\n_**I know that I can avoid this with other class design (and I'll have to) but with the language specs I think this must be supported by the compiler and its just an edge cased that has been overlooked**_","Url":"https://github.com/dotnet/roslyn/issues/36675","RelatedDescription":"Closed issue \"Compile error in abstract generic class with generic constraint to itself error on using this keyboard to call a method that expects that generic class.\" (#36675)"},{"Id":"459403139","IsPullRequest":true,"CreatedAt":"2019-06-21T23:18:54","Actor":"heejaechang","Number":"36677","RawContent":null,"Title":"recognize @code as code block","State":"open","Body":"razor added new @code block. add support for new code block in roslyn.\r\n\r\nfor old razor version, IsCodeBlock won't get called since razor will not treat code in @code as C# code block, in new razor version where @code is added, razor will recognize it as C# code block and call us which we will in turn check new @code along with existing @ tags for code blocks.\r\n\r\naddressing https://github.com/aspnet/AspNetCore/issues/10942","Url":"https://github.com/dotnet/roslyn/pull/36677","RelatedDescription":"Open PR \"recognize @code as code block\" (#36677)"},{"Id":"459401216","IsPullRequest":false,"CreatedAt":"2019-06-21T23:07:37","Actor":"gafter","Number":"36676","RawContent":null,"Title":"INamedTypeSymbol properties for tuples vs short tuples","State":"open","Body":"The LDM [recently confirmed](https://github.com/dotnet/csharplang/blob/master/meetings/2018/LDM-2018-11-05.md) that the nongeneric struct type `ValueTuple` is a tuple type (with zero elements).  However, the `INamedTypeSymbol` APIs `TupleUnderlyingType` and `TupleElements` do not currently treat it as such.\r\n\r\nThis may be related to https://github.com/dotnet/roslyn/issues/20648. Assigning to @AlekseyTs as I think it makes sense to address this at the same time as that.","Url":"https://github.com/dotnet/roslyn/issues/36676","RelatedDescription":"Open issue \"INamedTypeSymbol properties for tuples vs short tuples\" (#36676)"},{"Id":"459398937","IsPullRequest":true,"CreatedAt":"2019-06-21T22:55:19","Actor":"mavasani","Number":"36674","RawContent":null,"Title":"Make Dispose analyzers (IDE0067 and IDE0069) more conservative","State":"open","Body":"1. Make IDE0069 (DisposableFieldsShouldBeDisposed) conservative by bailing out on disposable types that don't have the Dispose implementation, but rely on base type implementing it and having virtual helper methods for dispose functionality\r\n\r\n2. Make IDE0067 (DisposeObjectsBeforeLosingScope) conservative by bailing out on disposable objects that are passed as arguments to methods in metadata.\r\n\r\nRequires updating to a new FlowAnalysisUtilities version.\r\nFixes #36498","Url":"https://github.com/dotnet/roslyn/pull/36674","RelatedDescription":"Open PR \"Make Dispose analyzers (IDE0067 and IDE0069) more conservative\" (#36674)"},{"Id":"459397875","IsPullRequest":false,"CreatedAt":"2019-06-21T22:49:37","Actor":"ryzngard","Number":"36673","RawContent":null,"Title":"IEventSymbol has a mysterious NullableAnnotation","State":"open","Body":"```C#\r\n#nullable enable\r\n\r\nclass C\r\n{\r\n\tevent EventHandler Goo;\r\n}\r\n```\r\n\r\nHow does one observe nullability on an `IEventSymbol`? ","Url":"https://github.com/dotnet/roslyn/issues/36673","RelatedDescription":"Open issue \"IEventSymbol has a mysterious NullableAnnotation\" (#36673)"},{"Id":"459395111","IsPullRequest":false,"CreatedAt":"2019-06-21T22:34:55","Actor":"vsfeedback","Number":"36672","RawContent":null,"Title":"VS 15.9.8 Unknown Hard Error ArgumentOutOfRangeException","State":"open","Body":"VSF_TYPE_MARKDOWNTyping or pasting this line of code into the IDE will immediately cause a crash with error message: Unknown Hard Error.\n\n```\nA a&lt;int, ItrPtr, =\n```\n\n```\nApplication: devenv.exe\nFramework Version: v4.0.30319\nDescription: The application requested process termination through System.Environment.FailFast(string message).\nMessage: System.ArgumentOutOfRangeException: Position is not within syntax tree with full span [5573..5733)\nParameter name: position\nActual value was 5538.\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.CheckAndAdjustPosition(Int32 position, SyntaxToken&amp; token)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetAdjustedNodePosition(SyntaxNode node)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetDeclaredSymbol(LocalFunctionStatementSyntax declarationSyntax, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetLambdaOrLocalFunctionParameterSymbol(ParameterSyntax parameter, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetDeclaredSymbol(ParameterSyntax declarationSyntax, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetDeclaredSymbol(ParameterSyntax declarationSyntax, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetDeclaredSymbolCore(SyntaxNode node, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetDeclaredSymbolsCore(SyntaxNode declaration, CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.IsDiagnosticSuppressed(String id, Location location, SuppressMessageInfo&amp; info)\n   at Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.ApplySourceSuppressions(Diagnostic diagnostic, ISymbol symbolOpt)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.FilterDiagnosticsSuppressedInSource(ImmutableArray`1 diagnostics, Compilation compilation, SuppressMessageAttributeState suppressMessageState)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalysisResultBuilder.StoreAnalysisResult(AnalysisScope analysisScope, AnalyzerDriver driver, Compilation compilation, Func`2 getAnalyzerActionCounts, Boolean fullAnalysisResultForAnalyzersInScope)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.&lt;ComputeAnalyzerDiagnosticsCoreAsync&gt;d__64.MoveNext()\nStack:\n   at System.Environment.FailFast(System.String, System.Exception)\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\n   at Microsoft.CodeAnalysis.FatalError.Report(System.Exception, System.Action`1&lt;System.Exception&gt;)\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;ComputeAnalyzerDiagnosticsCoreAsync&gt;d__64.MoveNext()\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.CheckAndAdjustPosition(Int32, Microsoft.CodeAnalysis.SyntaxToken ByRef)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetAdjustedNodePosition(Microsoft.CodeAnalysis.SyntaxNode)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetDeclaredSymbol(Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetLambdaOrLocalFunctionParameterSymbol(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetDeclaredSymbol(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetDeclaredSymbol(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetDeclaredSymbolCore(Microsoft.CodeAnalysis.SyntaxNode, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetDeclaredSymbolsCore(Microsoft.CodeAnalysis.SyntaxNode, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.IsDiagnosticSuppressed(System.String, Microsoft.CodeAnalysis.Location, Microsoft.CodeAnalysis.Diagnostics.SuppressMessageInfo ByRef)\n   at Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState.ApplySourceSuppressions(Microsoft.CodeAnalysis.Diagnostic, Microsoft.CodeAnalysis.ISymbol)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.FilterDiagnosticsSuppressedInSource(System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.Diagnostic&gt;, Microsoft.CodeAnalysis.Compilation, Microsoft.CodeAnalysis.Diagnostics.SuppressMessageAttributeState)\n   at Microsoft.CodeAnalysis.Diagnostics.AnalysisResultBuilder.StoreAnalysisResult(Microsoft.CodeAnalysis.Diagnostics.AnalysisScope, Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver, Microsoft.CodeAnalysis.Compilation, System.Func`2&lt;Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerActionCounts&gt;, Boolean)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;ComputeAnalyzerDiagnosticsCoreAsync&gt;d__64.MoveNext()\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;ComputeAnalyzerDiagnosticsCoreAsync&gt;d__64, Microsoft.CodeAnalysis, Version=2.10.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](&lt;ComputeAnalyzerDiagnosticsCoreAsync&gt;d__64 ByRef)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.ComputeAnalyzerDiagnosticsCoreAsync(Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver, Microsoft.CodeAnalysis.Diagnostics.AsyncQueue`1&lt;Microsoft.CodeAnalysis.Diagnostics.CompilationEvent&gt;, Microsoft.CodeAnalysis.Diagnostics.AnalysisScope, System.Threading.CancellationToken)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;&gt;c__DisplayClass57_2+&lt;&lt;ComputeAnalyzerDiagnosticsAsync&gt;b__1&gt;d.MoveNext()\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;&gt;c__DisplayClass57_2+&lt;&lt;ComputeAnalyzerDiagnosticsAsync&gt;b__1&gt;d, Microsoft.CodeAnalysis, Version=2.10.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](&lt;&lt;ComputeAnalyzerDiagnosticsAsync&gt;b__1&gt;d ByRef)\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+&lt;&gt;c__DisplayClass57_2.&lt;ComputeAnalyzerDiagnosticsAsync&gt;b__1()\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].InnerInvoke()\n   at System.Threading.Tasks.Task.Execute()\n   at System.Threading.Tasks.Task.ExecutionContextCallback(System.Object)\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/485564/vs-1598-unknown-hard-error-argumentoutofrangeexcep.html\nVSTS ticketId: 817403_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 3/11/2019, 11:52 PM (101 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36672","RelatedDescription":"Open issue \"VS 15.9.8 Unknown Hard Error ArgumentOutOfRangeException\" (#36672)"},{"Id":"459394110","IsPullRequest":true,"CreatedAt":"2019-06-21T22:29:55","Actor":"jasonmalinowski","Number":"36670","RawContent":null,"Title":"Pass feature flags to the remote workspace","State":"open","Body":"This implements IExperimentationService in the remote workspace; any request for feature flags is forwarded to the main Visual Studio process and the feature flag is queried there.","Url":"https://github.com/dotnet/roslyn/pull/36670","RelatedDescription":"Open PR \"Pass feature flags to the remote workspace\" (#36670)"},{"Id":"459378725","IsPullRequest":true,"CreatedAt":"2019-06-21T21:35:27","Actor":"gafter","Number":"36669","RawContent":null,"Title":"Guard against runaway parsing of the switch expression arms.","State":"closed","Body":"Fixes #36427\r\nIn DEBUG builds it will fail an assertion in offending scenarios allowing us to diagnose the underlying issue.\r\nThere are no tests as I do not know how to reproduce the customer-reported issue.\r\nBut the stack trace suggests that this change is likely to paper over the symptoms until diagnosed.","Url":"https://github.com/dotnet/roslyn/pull/36669","RelatedDescription":"Closed or merged PR \"Guard against runaway parsing of the switch expression arms.\" (#36669)"},{"Id":"459308453","IsPullRequest":false,"CreatedAt":"2019-06-21T21:25:23","Actor":"Digmaster","Number":"36665","RawContent":null,"Title":"Public API analyzer does not warn on missing API files","State":"closed","Body":"**Version Used**: 2.4.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Add public API analyzer to a new solution, with some public members\r\n2. Do not add PublicAPI.Unshipped.txt or PublicAPI.Shipped.txt to the solution\r\n3. Run public API analyzers\r\n\r\n**Expected Behavior**:\r\nWarning about missing PublicAPI files, or at very least analyzer functionality not related to PublicAPI files (EG RS0027).\r\n\r\n**Actual Behavior**:\r\nAnalyzer silently fails with no warnings.","Url":"https://github.com/dotnet/roslyn/issues/36665","RelatedDescription":"Closed issue \"Public API analyzer does not warn on missing API files\" (#36665)"},{"Id":"459372340","IsPullRequest":true,"CreatedAt":"2019-06-21T21:04:27","Actor":"ryzngard","Number":"36668","RawContent":null,"Title":"Add more nullability awareness in code generation","State":"open","Body":"Fixes #30324 ","Url":"https://github.com/dotnet/roslyn/pull/36668","RelatedDescription":"Open PR \"Add more nullability awareness in code generation\" (#36668)"},{"Id":"459368405","IsPullRequest":false,"CreatedAt":"2019-06-21T20:52:00","Actor":"TessenR","Number":"36667","RawContent":null,"Title":"Roslyn shouldn't consider variables non-null if their user-defined conversion result is not null","State":"open","Body":"**Version Used**: \r\n\r\nBranch master (21 Jun 2019)\r\nLatest commit 898bed by Heejae Chang:\r\nadded NFW to get some data on incremental parsing bug where source si� (#36620)\r\n\r\n* added NFW to get some data on incremental parsing bug where source size and tree size is different\r\n\r\n* more comments\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code:\r\n```cs\r\n#nullable enable\r\nclass C { }\r\n\r\nclass D\r\n{\r\n    static void Main()\r\n    {\r\n        new D().M(null);\r\n    }\r\n    \r\n    void M(C? c)\r\n    {\r\n        ((D)c).ToString();\r\n        c.ToString();\r\n    }\r\n    \r\n    public static implicit operator D(C? c) => new D();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n`Possible dereference of a null reference` warning for `c.ToString();`\r\nThe type of variable `c` is explicitly marked as nullable.\r\nThe conversion operator used explicitly declares in its signature that it returns non-nullable result even if null was passed.\r\n\r\n**Actual Behavior**:\r\nNo warnings. The program crashes at runtime with a `NullReferenceException`.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36667","RelatedDescription":"Open issue \"Roslyn shouldn't consider variables non-null if their user-defined conversion result is not null\" (#36667)"},{"Id":"459342615","IsPullRequest":false,"CreatedAt":"2019-06-21T19:31:41","Actor":"ivanbasov","Number":"36666","RawContent":null,"Title":"Completion ignores information from pattern matcher when calculating the best completion item","State":"open","Body":"During the completion (both old and new), we filter items using PatternMatcher. Then PatternMatcher calculates what `PatternMatchKind` occurs. There is an order of `PatternMatchKind` from strong (exact) to weak. It goes over case-sensitive and insensitive, prefix or substring matches.\r\n\r\nThen, in completion we have a list of matched items. All they are matched at least with the very weak _match kind_. We perform calculation of the best item, the item to be selected in the completion (there are separate algorithms for deletion and for everything else). Here, instead of using the `PatternMatchKind` we compare items between each other once again.\r\n\r\nWe should try using `PatternMatchKind` instead.","Url":"https://github.com/dotnet/roslyn/issues/36666","RelatedDescription":"Open issue \"Completion ignores information from pattern matcher when calculating the best completion item\" (#36666)"},{"Id":"459306382","IsPullRequest":false,"CreatedAt":"2019-06-21T17:49:58","Actor":"vsfeedback","Number":"36664","RawContent":null,"Title":"movetypecoderefactoringprovider encountered an error - invalid name","State":"open","Body":"VSF_TYPE_MARKDOWNattempting to move class '**MadeContactOption**' to a separate file\n\nis it because the class name contains the string '**CON**'?\n\n========================================\n\nstacktrace is\n\nSystem.AggregateException : One or more errors occurred. ---&gt; Files and folders cannot:\n-be empty strings\n- contain any of the following characters: / ? : &amp; \\ * &quot; &lt; &gt; | # %\n- contain Unicode control characters\n- contain surrogate characters\n- be system reserved names, including '**CON**', 'AUX', 'PRN', 'COM1' or 'LPT2'\n- be '.' or '.. '\n\nPlease enter a valid name.\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&lt;&gt;c__DisplayClass17_0.&lt;InvokeCore&gt;b__0()\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\n---&gt; (Inner Exception #0) System.Runtime.InteropServices.COMException : Files and folders cannot:\n-be empty strings\n- contain any of the following characters: / ? : &amp; \\ * &quot; &lt; &gt; | # %\n- contain Unicode control characters\n- contain surrogate characters\n- be system reserved names, including 'CON', 'AUX', 'PRN', 'COM1' or 'LPT2'\n- be '.' or '.. '\n\nPlease enter a valid name.\n   at EnvDTE.ProjectItems.AddFolder(String Name,String Kind)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.CreateFolder(ProjectItems currentItems,String container)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.FindOrCreateFolder(Project project,IEnumerable`1 containers)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentToFolder(Project project,DocumentId documentId,IEnumerable`1 folders,String documentName,SourceCodeKind sourceCodeKind, SourceText initialText,String filePath,Boolean isAdditionalDocument)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentCore(DocumentInfo info,SourceText initialText,Boolean isAdditionalDocument)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyDocumentAdded(DocumentInfo info,SourceText text)\n   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)\n   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace,ImmutableArray`1 operations,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ApplyAsync(&lt;Unknown Parameters&gt;)&lt;---\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/556923/movetypecoderefactoringprovider-encountered-an-err.html\nVSTS ticketId: 881451_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/5/2019, 02:29 AM (47 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 5/6/2019, 01:43 AM (46 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nJames Bradt on 5/6/2019, 07:14 AM (46 days ago): <p>some more info. the project the file exists in is a shared project (.shproj)</p>\n\nbugreporter5367 on 5/23/2019, 01:09 PM (28 days ago): I got the same error and stacktrace:<br><br>In a WinForms project that references a SharedProject I clicked on a class and through Quick Actions selected 'Move type to Class1.cs'.\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36664","RelatedDescription":"Open issue \"movetypecoderefactoringprovider encountered an error - invalid name\" (#36664)"},{"Id":"459300378","IsPullRequest":true,"CreatedAt":"2019-06-21T17:32:27","Actor":"AlekseyTs","Number":"36663","RawContent":null,"Title":"Support nullable variance in interface and partial method implementation.","State":"open","Body":"Closes #35227.","Url":"https://github.com/dotnet/roslyn/pull/36663","RelatedDescription":"Open PR \"Support nullable variance in interface and partial method implementation.\" (#36663)"},{"Id":"459299677","IsPullRequest":true,"CreatedAt":"2019-06-21T17:30:40","Actor":"dotnet-bot","Number":"36661","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36661","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#36661)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"458971234","IsPullRequest":true,"CreatedAt":"2019-06-23T03:18:19","Actor":"Suchiman","Number":"7545","RawContent":null,"Title":"Implement GetTotalAllocatedBytes","State":"closed","Body":"Implements `GetTotalAllocatedBytes`\r\ncontributes to #5680","Url":"https://github.com/dotnet/corert/pull/7545","RelatedDescription":"Closed or merged PR \"Implement GetTotalAllocatedBytes\" (#7545)"},{"Id":"459508048","IsPullRequest":true,"CreatedAt":"2019-06-23T02:46:21","Actor":"Suchiman","Number":"7550","RawContent":null,"Title":"Ports dotnet/coreclr#25216 to CoreRT","State":"closed","Body":"Ports https://github.com/dotnet/coreclr/pull/25216 (gc only port)","Url":"https://github.com/dotnet/corert/pull/7550","RelatedDescription":"Closed or merged PR \"Ports dotnet/coreclr#25216 to CoreRT\" (#7550)"},{"Id":"459515874","IsPullRequest":true,"CreatedAt":"2019-06-22T22:17:55","Actor":"timmydo","Number":"7552","RawContent":null,"Title":"Devcontainer files for vscode cross-platform development.","State":"open","Body":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs.","Url":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Open PR \"Devcontainer files for vscode cross-platform development.\" (#7552)"},{"Id":"459515304","IsPullRequest":true,"CreatedAt":"2019-06-22T22:07:37","Actor":"timmydo","Number":"7551","RawContent":null,"Title":"add StaticallyLinked csproj property for unix","State":"open","Body":"Add `<StaticallyLinked>true</StaticallyLinked>` to your csproj to compile a statically liked binary. ","Url":"https://github.com/dotnet/corert/pull/7551","RelatedDescription":"Open PR \"add StaticallyLinked csproj property for unix\" (#7551)"},{"Id":"459481444","IsPullRequest":true,"CreatedAt":"2019-06-22T14:53:11","Actor":"MichalStrehovsky","Number":"7549","RawContent":null,"Title":"Add support for x86/x64 hardware intrinsics","State":"open","Body":"RyuJIT has had support for HW intrinsics for a while but we didn't enable them (besides SSE/SSE2) because the way RyuJIT implements them only suits JIT environments: RyuJIT is not able to generate code that switches based on the intrinsics supported by the CPU at runtime - the intrinsic support level is hardcoded at compilation time. This works for a JIT, but not so well for AOT.\r\n\r\nFollowing scheme is used to adapt this for AOT compilation:\r\n* We tell RyuJIT all non-VEX intrinsics are supported.\r\n* We intercept the `IsSupported` property calls on the individual intrinsic classes and instead of telling RyuJIT the `IsSupported` methods are intrinsics (that RyuJIT would expand to a constant `true` based on the flags we passed to RyuJIT), we treat them as normal method calls.\r\n* We rewrite the IL of the `IsSupported` method to read a value from an RVA static field and check for a bit (each bit representing a different ISA extension).\r\n* At process startup we initialize the RVA static field with bits based on a CPUID check.","Url":"https://github.com/dotnet/corert/pull/7549","RelatedDescription":"Open PR \"Add support for x86/x64 hardware intrinsics\" (#7549)"},{"Id":"459366444","IsPullRequest":false,"CreatedAt":"2019-06-22T01:28:46","Actor":"tim241","Number":"7548","RawContent":null,"Title":"async issue","State":"closed","Body":"I'm developing an application which uses `youtube-dl` for some of it's functionality\r\n\r\nhowever, I get a different result when using a build from `dotnet build -c Release`  and the corert,\r\n\r\n`dotnet build -c Release`:\r\n![cmd_dj5LUjFmF3](https://user-images.githubusercontent.com/18737914/59950014-196a6b80-9475-11e9-9bee-5238114dd27e.png)\r\n\r\ncorert:\r\n![cmd_aFvdtYM0vh](https://user-images.githubusercontent.com/18737914/59950038-29824b00-9475-11e9-845f-38d77661cc5a.png)\r\n\r\nrelevant code:\r\n[main](https://github.com/tim241/corert-async-bug/blob/master/AudioControlServer/Program.cs)\r\n[async function](https://github.com/tim241/corert-async-bug/blob/master/YoutubeCandyWrapper/AudioDownloader.cs#L72-L108)\r\n\r\n# How to reproduce\r\n* `git clone https://github.com/tim241/corert-async-bug`\r\n* install youtube-dl and add it to PATH\r\n* use `dotnet publish -c Release -r win-x64` (in the `AudioControlServer` folder) to build for the corert\r\n\r\nI'm not sure why the corert is giving me a different result, maybe it doesn't fill the `JsonList`?","Url":"https://github.com/dotnet/corert/issues/7548","RelatedDescription":"Closed issue \"async issue\" (#7548)"},{"Id":"459012632","IsPullRequest":true,"CreatedAt":"2019-06-21T14:12:31","Actor":"jkotas","Number":"7547","RawContent":null,"Title":"Make acquiring cache size optional","State":"closed","Body":"Contributes to #7524","Url":"https://github.com/dotnet/corert/pull/7547","RelatedDescription":"Closed or merged PR \"Make acquiring cache size optional\" (#7547)"},{"Id":"458992661","IsPullRequest":true,"CreatedAt":"2019-06-21T14:09:17","Actor":"jkotas","Number":"7546","RawContent":null,"Title":"Port dotnet/coreclr#25130 to CoreRT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7546","RelatedDescription":"Closed or merged PR \"Port dotnet/coreclr#25130 to CoreRT\" (#7546)"},{"Id":"458955125","IsPullRequest":true,"CreatedAt":"2019-06-21T13:49:14","Actor":"jkotas","Number":"7544","RawContent":null,"Title":"Rename task name to avoid collisions with ILLinker task name","State":"closed","Body":"Fixes #7543","Url":"https://github.com/dotnet/corert/pull/7544","RelatedDescription":"Closed or merged PR \"Rename task name to avoid collisions with ILLinker task name\" (#7544)"},{"Id":"458913296","IsPullRequest":false,"CreatedAt":"2019-06-21T13:49:14","Actor":"Suchiman","Number":"7543","RawContent":null,"Title":"Instructions on how to use CoreRT don't work anymore","State":"closed","Body":"https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built\r\n```\r\nMicrosoft.NETCore.Native.Publish.targets(82,5): error MSB4064:\r\nThe DotNetAppHostExecutableName parameter is not supported by the ComputeManagedAssemblies task.\r\nMake sure the parameter is present in the task and it is a definable public instance property.\r\n```\r\nWould also be nice to update the instructions for `netcoreapp3.0` at the same time.","Url":"https://github.com/dotnet/corert/issues/7543","RelatedDescription":"Closed issue \"Instructions on how to use CoreRT don't work anymore\" (#7543)"},{"Id":"458791412","IsPullRequest":true,"CreatedAt":"2019-06-20T19:20:57","Actor":"Dotnet-GitSync-Bot","Number":"7542","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @safern @stephentoub","Url":"https://github.com/dotnet/corert/pull/7542","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7542)"},{"Id":"458713096","IsPullRequest":false,"CreatedAt":"2019-06-20T17:25:31","Actor":"hhblaze","Number":"7541","RawContent":null,"Title":"XML DeSerializazion error","State":"closed","Body":"Only after running native executable (standard .NetCore works)\r\n\r\n```\r\npublic class SerClass\r\n    {\r\n        public SerClass()\r\n        {\r\n            Name = String.Empty;\r\n            MinimalVersion = \"0\";\r\n            MaximalVersion = \"40001212180000\";\r\n            Version = \"200810101800\";\r\n            Path = String.Empty;\r\n            Minimal = 0;\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        public string MinimalVersion { get; set; }\r\n\r\n\r\n        public string MaximalVersion { get; set; }\r\n\r\n        public string Version { get; set; }\r\n\r\n\r\n        public string Path { get; set; }\r\n\r\n\r\n        public byte[] Zipped { get; set; }\r\n\r\n\r\n        public long Minimal { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n static void TestXmlSerialization()\r\n        {\r\n            try\r\n            {\r\n                SerClass ai = new SerClass()\r\n                {\r\n                    Minimal = 4568654,\r\n                    Name = \"addinname\",\r\n                    Path = \"pathtozipfile\",\r\n                    MaximalVersion = \"smv\",\r\n                    MinimalVersion = \"sminvc\",\r\n                    Version = \" dsfsdf\",\r\n                    Zipped = new byte[] { 1, 2, 3 }\r\n                };\r\n\r\n                Console.WriteLine(\"---se\");\r\n                var sxml = SerializeXml(ai);\r\n                Console.WriteLine(sxml);\r\n                Console.WriteLine(\"---de\");\r\n                var ai1 = DeserializeXml<SerClass>(sxml);\r\n                Console.WriteLine(\"---done\");\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex.ToString());\r\n            }\r\n\r\n            Console.ReadLine();\r\n           \r\n        }\r\n```\r\n```\r\n\r\n  public static string SerializeXml(this object objectForSerialization)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(objectForSerialization.GetType());\r\n\r\n                string r = String.Empty;\r\n\r\n                using (System.IO.StringWriter wr = new System.IO.StringWriter())\r\n                {\r\n                    xs.Serialize(wr, objectForSerialization);\r\n                    r = wr.GetStringBuilder().ToString();\r\n                    wr.Close();\r\n                }\r\n\r\n                return r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        public static T DeserializeXml<T>(this string str)\r\n        {\r\n            try\r\n            {\r\n                System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(typeof(T));\r\n\r\n                object r = null;\r\n                using (System.IO.StringReader sr = new System.IO.StringReader(str))\r\n                {\r\n                    r = xs.Deserialize(new System.IO.StringReader(str));\r\n                    sr.Close();\r\n                }\r\n\r\n                return (T)r;\r\n            }\r\n            catch (Exception ex)\r\n            {                \r\n                throw ex;\r\n            }\r\n            \r\n        }\r\n```\r\n\r\n\r\nResult:\r\n\r\n```\r\n---se\r\n<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<SerClass xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Name>addinname</Name>\r\n  <MinimalVersion>sminvc</MinimalVersion>\r\n  <MaximalVersion>smv</MaximalVersion>\r\n  <Version> dsfsdf</Version>\r\n  <Path>pathtozipfile</Path>\r\n  <Zipped>AQID</Zipped>\r\n  <Minimal>4568654</Minimal>\r\n</SerClass>\r\n---de\r\nSystem.InvalidOperationException: There is an error in XML document (2, 2). ---> EETypeRva:0x018729F8(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'System.Xml.Serialization.ReflectionXmlSerializationReaderHelper.GetSetMemberValueDelegateWithType<GpsCarControl.LicenceServer.SerClass,System.Int64>(System.Reflection.MemberInfo)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x148\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x50\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0xa8\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x104\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GetSetMemberValueDelegate(Object, String) + 0x152\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteLiteralStructMethod(StructMapping, Boolean, Boolean, String) + 0x905\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteElement(ElementAccessor, Boolean, Boolean, Boolean, String, Int32, Int32, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.Member) + 0x462\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.WriteMemberElementsIf(ReflectionXmlSerializationReader.Member[], ReflectionXmlSerializationReader.Member, UnknownNodeAction, XmlSerializationReader.Fixup, ReflectionXmlSerializationReader.CheckTypeSource) + 0x30e\r\n   at System.Xml.Serialization.ReflectionXmlSerializationReader.GenerateTypeElement(XmlTypeMapping) + 0x1a9\r\n   at System.Xml.Serialization.XmlSerializer.Deserialize(XmlReader, String, XmlDeserializationEvents) + 0x2e0\r\n```","Url":"https://github.com/dotnet/corert/issues/7541","RelatedDescription":"Closed issue \"XML DeSerializazion error\" (#7541)"},{"Id":"456580659","IsPullRequest":true,"CreatedAt":"2019-06-20T00:22:34","Actor":"trylek","Number":"7531","RawContent":null,"Title":"Initial support for R2RDump in SuperIlc","State":"closed","Body":"I have added initial minimalistic support for R2RDump to SuperIlc.\r\nUsing the new switch -r2r <path> we can specify the path to the\r\nR2RDump tool and SuperIlc will use it to disassemble each\r\nsuccessfully compiled assembly in the \"naked\" and \"raw\" mode\r\n(from a completely selfish point of view these are the modes I'm\r\nusing most of the time). These dumps make it much easier to compare\r\nCPAOT and Crossgen output when analyzing the remaining failing\r\ntests.\r\n\r\nAs a caveat this cannot be yet added to automated testing because\r\nof the known backlog item \"R2RDump build doesn't publish\r\nCoreDisTools.dll it requires\" (even though the library is available\r\nin the build outputs and just copying it next to R2RDump fixes the\r\nproblem - that's what I've been doing since the very beginning).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7531","RelatedDescription":"Closed or merged PR \"Initial support for R2RDump in SuperIlc\" (#7531)"},{"Id":"457614786","IsPullRequest":false,"CreatedAt":"2019-06-19T15:50:46","Actor":"forestbat","Number":"7539","RawContent":null,"Title":"There is a IL2CPP compiler on tap","State":"closed","Body":"The origin maintainer of the compiler has abandoned this project，so I fork it and made some small changes。\r\nIt's dependency is still .NET Framework and its built-in clang and llvm-linker should be updated to 8.0.\r\nPlease see this and hope your reply。\r\nhttps://github.com/forestbat/il2cpp","Url":"https://github.com/dotnet/corert/issues/7539","RelatedDescription":"Closed issue \"There is a IL2CPP compiler on tap\" (#7539)"},{"Id":"457362196","IsPullRequest":false,"CreatedAt":"2019-06-19T11:37:53","Actor":"hhblaze","Number":"7537","RawContent":null,"Title":"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204","State":"closed","Body":"```\r\nosboxes@osboxes:~/Documents/HelloWorld$ export CppCompilerAndLinker=clang-6.0\r\nosboxes@osboxes:~/Documents/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 123.17 ms for /home/osboxes/Documents/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/osboxes/Documents/HelloWorld/bin/release/netcoreapp2.2/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-6.0\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/osboxes/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/HelloWorld.ilc.rsp\"\" exited with code 1. [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ uname -a\r\nLinux osboxes 5.0.0-13-generic #14-Ubuntu SMP Mon Apr 15 14:59:14 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nldd /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so\r\nldd: /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so: No such file or directory\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ ls /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools\r\ncreatedump\r\nilc\r\nilc.deps.json\r\nilc.dll\r\nILCompiler.Compiler.dll\r\nILCompiler.CppCodeGen.dll\r\nILCompiler.DependencyAnalysisFramework.dll\r\nILCompiler.MetadataTransform.dll\r\nILCompiler.MetadataWriter.dll\r\nILCompiler.ReadyToRun.dll\r\nILCompiler.RyuJit.dll\r\nILCompiler.TypeSystem.dll\r\nILCompiler.WebAssembly.dll\r\nilc.runtimeconfig.json\r\njitinterface.so\r\nlibclrjitilc.so\r\nlibclrjit.so\r\nlibcoreclr.so\r\nlibcoreclrtraceptprovider.so\r\nlibdbgshim.so\r\nlibhostfxr.so\r\nlibhostpolicy.so\r\nlibLLVM.so\r\nlibmscordaccore.so\r\nlibmscordbi.so\r\nlibobjwriter.so\r\nlibsosplugin.so\r\nlibsos.so\r\nLLVMSharp.dll\r\nMicrosoft.CSharp.dll\r\nMicrosoft.DiaSymReader.dll\r\nMicrosoft.VisualBasic.dll\r\nMicrosoft.Win32.Primitives.dll\r\nMicrosoft.Win32.Registry.dll\r\nmscorlib.dll\r\nnetstandard.dll\r\nsosdocsunix.txt\r\nSOS.NETCore.dll\r\nSystem.AppContext.dll\r\nSystem.Buffers.dll\r\nSystem.Collections.Concurrent.dll\r\nSystem.Collections.dll\r\nSystem.Collections.Immutable.dll\r\nSystem.Collections.NonGeneric.dll\r\nSystem.Collections.Specialized.dll\r\nSystem.CommandLine.dll\r\nSystem.ComponentModel.Annotations.dll\r\nSystem.ComponentModel.DataAnnotations.dll\r\nSystem.ComponentModel.dll\r\nSystem.ComponentModel.EventBasedAsync.dll\r\nSystem.ComponentModel.Primitives.dll\r\nSystem.ComponentModel.TypeConverter.dll\r\nSystem.Configuration.dll\r\nSystem.Console.dll\r\nSystem.Core.dll\r\nSystem.Data.Common.dll\r\nSystem.Data.dll\r\nSystem.Diagnostics.Contracts.dll\r\nSystem.Diagnostics.Debug.dll\r\nSystem.Diagnostics.DiagnosticSource.dll\r\nSystem.Diagnostics.FileVersionInfo.dll\r\nSystem.Diagnostics.Process.dll\r\nSystem.Diagnostics.StackTrace.dll\r\nSystem.Diagnostics.TextWriterTraceListener.dll\r\nSystem.Diagnostics.Tools.dll\r\nSystem.Diagnostics.TraceSource.dll\r\nSystem.Diagnostics.Tracing.dll\r\nSystem.dll\r\nSystem.Drawing.dll\r\nSystem.Drawing.Primitives.dll\r\nSystem.Dynamic.Runtime.dll\r\nSystem.Globalization.Calendars.dll\r\nSystem.Globalization.dll\r\nSystem.Globalization.Extensions.dll\r\nSystem.Globalization.Native.so\r\nSystem.IO.Compression.Brotli.dll\r\nSystem.IO.Compression.dll\r\nSystem.IO.Compression.FileSystem.dll\r\nSystem.IO.Compression.Native.a\r\nSystem.IO.Compression.Native.so\r\nSystem.IO.Compression.ZipFile.dll\r\nSystem.IO.dll\r\nSystem.IO.FileSystem.AccessControl.dll\r\nSystem.IO.FileSystem.dll\r\nSystem.IO.FileSystem.DriveInfo.dll\r\nSystem.IO.FileSystem.Primitives.dll\r\nSystem.IO.FileSystem.Watcher.dll\r\nSystem.IO.IsolatedStorage.dll\r\nSystem.IO.MemoryMappedFiles.dll\r\nSystem.IO.Pipes.AccessControl.dll\r\nSystem.IO.Pipes.dll\r\nSystem.IO.UnmanagedMemoryStream.dll\r\nSystem.Linq.dll\r\nSystem.Linq.Expressions.dll\r\nSystem.Linq.Parallel.dll\r\nSystem.Linq.Queryable.dll\r\nSystem.Memory.dll\r\nSystem.Native.a\r\nSystem.Native.so\r\nSystem.Net.dll\r\nSystem.Net.Http.dll\r\nSystem.Net.HttpListener.dll\r\nSystem.Net.Http.Native.a\r\nSystem.Net.Http.Native.so\r\nSystem.Net.Mail.dll\r\nSystem.Net.NameResolution.dll\r\nSystem.Net.NetworkInformation.dll\r\nSystem.Net.Ping.dll\r\nSystem.Net.Primitives.dll\r\nSystem.Net.Requests.dll\r\nSystem.Net.Security.dll\r\nSystem.Net.Security.Native.a\r\nSystem.Net.Security.Native.so\r\nSystem.Net.ServicePoint.dll\r\nSystem.Net.Sockets.dll\r\nSystem.Net.WebClient.dll\r\nSystem.Net.WebHeaderCollection.dll\r\nSystem.Net.WebProxy.dll\r\nSystem.Net.WebSockets.Client.dll\r\nSystem.Net.WebSockets.dll\r\nSystem.Numerics.dll\r\nSystem.Numerics.Vectors.dll\r\nSystem.ObjectModel.dll\r\nSystem.Private.CoreLib.dll\r\nSystem.Private.DataContractSerialization.dll\r\nSystem.Private.Uri.dll\r\nSystem.Private.Xml.dll\r\nSystem.Private.Xml.Linq.dll\r\nSystem.Reflection.DispatchProxy.dll\r\nSystem.Reflection.dll\r\nSystem.Reflection.Emit.dll\r\nSystem.Reflection.Emit.ILGeneration.dll\r\nSystem.Reflection.Emit.Lightweight.dll\r\nSystem.Reflection.Extensions.dll\r\nSystem.Reflection.Metadata.dll\r\nSystem.Reflection.Primitives.dll\r\nSystem.Reflection.TypeExtensions.dll\r\nSystem.Resources.Reader.dll\r\nSystem.Resources.ResourceManager.dll\r\nSystem.Resources.Writer.dll\r\nSystem.Runtime.CompilerServices.Unsafe.dll\r\nSystem.Runtime.CompilerServices.VisualC.dll\r\nSystem.Runtime.dll\r\nSystem.Runtime.Extensions.dll\r\nSystem.Runtime.Handles.dll\r\nSystem.Runtime.InteropServices.dll\r\nSystem.Runtime.InteropServices.RuntimeInformation.dll\r\nSystem.Runtime.InteropServices.WindowsRuntime.dll\r\nSystem.Runtime.Loader.dll\r\nSystem.Runtime.Numerics.dll\r\nSystem.Runtime.Serialization.dll\r\nSystem.Runtime.Serialization.Formatters.dll\r\nSystem.Runtime.Serialization.Json.dll\r\nSystem.Runtime.Serialization.Primitives.dll\r\nSystem.Runtime.Serialization.Xml.dll\r\nSystem.Security.AccessControl.dll\r\nSystem.Security.Claims.dll\r\nSystem.Security.Cryptography.Algorithms.dll\r\nSystem.Security.Cryptography.Cng.dll\r\nSystem.Security.Cryptography.Csp.dll\r\nSystem.Security.Cryptography.Encoding.dll\r\nSystem.Security.Cryptography.Native.OpenSsl.a\r\nSystem.Security.Cryptography.Native.OpenSsl.so\r\nSystem.Security.Cryptography.OpenSsl.dll\r\nSystem.Security.Cryptography.Primitives.dll\r\nSystem.Security.Cryptography.X509Certificates.dll\r\nSystem.Security.dll\r\nSystem.Security.Principal.dll\r\nSystem.Security.Principal.Windows.dll\r\nSystem.Security.SecureString.dll\r\nSystem.ServiceModel.Web.dll\r\nSystem.ServiceProcess.dll\r\nSystem.Text.Encoding.dll\r\nSystem.Text.Encoding.Extensions.dll\r\nSystem.Text.RegularExpressions.dll\r\nSystem.Threading.dll\r\nSystem.Threading.Overlapped.dll\r\nSystem.Threading.Tasks.Dataflow.dll\r\nSystem.Threading.Tasks.dll\r\nSystem.Threading.Tasks.Extensions.dll\r\nSystem.Threading.Tasks.Parallel.dll\r\nSystem.Threading.Thread.dll\r\nSystem.Threading.ThreadPool.dll\r\nSystem.Threading.Timer.dll\r\nSystem.Transactions.dll\r\nSystem.Transactions.Local.dll\r\nSystem.ValueTuple.dll\r\nSystem.Web.dll\r\nSystem.Web.HttpUtility.dll\r\nSystem.Windows.dll\r\nSystem.Xml.dll\r\nSystem.Xml.Linq.dll\r\nSystem.Xml.ReaderWriter.dll\r\nSystem.Xml.Serialization.dll\r\nSystem.Xml.XDocument.dll\r\nSystem.Xml.XmlDocument.dll\r\nSystem.Xml.XmlSerializer.dll\r\nSystem.Xml.XPath.dll\r\nSystem.Xml.XPath.XDocument.dll\r\nWindowsBase.dll\r\n\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7537","RelatedDescription":"Closed issue \"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204\" (#7537)"},{"Id":"457733189","IsPullRequest":true,"CreatedAt":"2019-06-19T00:16:53","Actor":"jkotas","Number":"7540","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7540)"},{"Id":"457279660","IsPullRequest":true,"CreatedAt":"2019-06-18T21:27:44","Actor":"jkotas","Number":"7536","RawContent":null,"Title":"Ensure ObjectWriter package does not get used on ObjWriterBuild mode","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7536","RelatedDescription":"Closed or merged PR \"Ensure ObjectWriter package does not get used on ObjWriterBuild mode\" (#7536)"},{"Id":"457470464","IsPullRequest":false,"CreatedAt":"2019-06-18T13:35:21","Actor":"hhblaze","Number":"7538","RawContent":null,"Title":"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)","State":"closed","Body":"Content of HelloWorld.csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Google.Cloud.Datastore.V1\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nCompilation output\r\n\r\n```\r\nH:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld>dotnet publish -r win-x64 -c release\r\nMicrosoft (R) Build Engine 16.1.76+g14b0a930a7 для .NET Core\r\n(C) (Microsoft Corporation). \r\n\r\n  Restore completed в 1,7 sec для H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj.\r\n  HelloWorld -> H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\bin\\release\\netcoreapp2.2\\win-x64\\HelloWorld.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : Method `[System.Interactive.Async]System.Linq.AsyncEnumerable+CatchAsyncIterator`2+<MoveNextCore>d__7<System.__Canon,System.__Canon>.MoveNext()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramDefault: [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlopen [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlsym [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nbin\\release\\netcoreapp2.2\\win-x64\\native\\HelloWorld.exe : fatal error LNK1120: 2 unresolved externals [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nC:\\Users\\blaze\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27818-01\\build\\Microsoft.NETCore.Native.targets(342,5): error MSB3073: comand output \"\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\release\\netcoreapp2.2\\win-x64\\native\\link.rsp\"\" wit code 1120. [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7538","RelatedDescription":"Closed issue \"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)\" (#7538)"},{"Id":"456464202","IsPullRequest":true,"CreatedAt":"2019-06-18T00:18:12","Actor":"jkotas","Number":"7525","RawContent":null,"Title":"Update libunwind to latest","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7525","RelatedDescription":"Closed or merged PR \"Update libunwind to latest\" (#7525)"},{"Id":"457178956","IsPullRequest":true,"CreatedAt":"2019-06-18T00:18:01","Actor":"Dotnet-GitSync-Bot","Number":"7535","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @jkotas @tarekgh @sywhang @marek-safar @adamsitnik @benaadams @ViktorHofer","Url":"https://github.com/dotnet/corert/pull/7535","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7535)"},{"Id":"456690465","IsPullRequest":true,"CreatedAt":"2019-06-17T22:24:37","Actor":"trylek","Number":"7533","RawContent":null,"Title":"More precise handling of instantiating stubs according to CoreCLR","State":"closed","Body":"I have found a few places in ceeInfoGetCallInfo where I originally\r\ndidn't fully understand the intent of the CoreCLR code so\r\nI converted it imprecisely. This change fixes two such imprecisions\r\nregarding instantiating stubs and, in doing so, fixes about\r\n300 more CoreCLR classloader Pri#1 tests.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7533","RelatedDescription":"Closed or merged PR \"More precise handling of instantiating stubs according to CoreCLR\" (#7533)"},{"Id":"456800818","IsPullRequest":true,"CreatedAt":"2019-06-17T13:32:28","Actor":"MichalStrehovsky","Number":"7534","RawContent":null,"Title":"Port GC changes from coreclr","State":"closed","Body":"Porting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.","Url":"https://github.com/dotnet/corert/pull/7534","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr\" (#7534)"},{"Id":"456684435","IsPullRequest":true,"CreatedAt":"2019-06-17T01:40:50","Actor":"MichalStrehovsky","Number":"7532","RawContent":null,"Title":"Do not generate object array thunk for byref-returning delegates","State":"closed","Body":"Object array thunks are the weird thunks we make for delegates for the LINQ expression interpreter that dispatch to a method that takes an object array and returns object. There's no way to turn object returned from that method into a byref so we shouldn't try to make the thunks.\r\n\r\nAlso hit an assert in dynamic invoke method thunk, so fixed that too.\r\n\r\nFixes #7526.","Url":"https://github.com/dotnet/corert/pull/7532","RelatedDescription":"Closed or merged PR \"Do not generate object array thunk for byref-returning delegates\" (#7532)"},{"Id":"456480061","IsPullRequest":false,"CreatedAt":"2019-06-17T01:40:50","Actor":"kvittokonito","Number":"7526","RawContent":null,"Title":"Compilation error when using \"ref\" returns ","State":"closed","Body":"I am getting the following error:\r\n```csharp\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [Path/To/Project/With/Confidential/Class.csproj]\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: SomeConfidentialClass ByRef, ? [Path/To/Project/With/Confidential/Class.csproj]\r\n  Internal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: SomeConfidentialClass ByRef, ?\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateConstructedTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.InstantiateDependencies(NodeFactory factory, Instantiation typeInstantiation, Instantiation methodInstantiation)\r\n     at ILCompiler.DependencyAnalysis.ShadowConcreteMethodNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nWhen using \"ref\" returns like this:\r\n```csharp\r\nprivate ITransform _transform;\r\npublic ref ITransform TransformByRef => ref _transform;\r\n```\r\n\r\nIs this feature not supported in CoreRT?","Url":"https://github.com/dotnet/corert/issues/7526","RelatedDescription":"Closed issue \"Compilation error when using \"ref\" returns \" (#7526)"},{"Id":"456575788","IsPullRequest":true,"CreatedAt":"2019-06-16T15:45:55","Actor":"MichalStrehovsky","Number":"7530","RawContent":null,"Title":"Implement obsolete Marshal.Read APIs","State":"closed","Body":"If there's a bad obsolete API we added to .NET Core, chances are WinForms uses it.","Url":"https://github.com/dotnet/corert/pull/7530","RelatedDescription":"Closed or merged PR \"Implement obsolete Marshal.Read APIs\" (#7530)"},{"Id":"456568649","IsPullRequest":true,"CreatedAt":"2019-06-16T15:43:39","Actor":"MichalStrehovsky","Number":"7527","RawContent":null,"Title":"Fix CharSet on GetProcAddress","State":"closed","Body":"This flavor is used in NativeLibrary.GetSymbol so we didn't hit this before.","Url":"https://github.com/dotnet/corert/pull/7527","RelatedDescription":"Closed or merged PR \"Fix CharSet on GetProcAddress\" (#7527)"},{"Id":"456568694","IsPullRequest":true,"CreatedAt":"2019-06-16T05:16:48","Actor":"MichalStrehovsky","Number":"7529","RawContent":null,"Title":"Scan for `Marshal.SizeOf(Type)` usage","State":"closed","Body":"WinForms codebase is full of this pattern and there's no reason we couldn't misuse the reflection method body scanner to scan for this too.","Url":"https://github.com/dotnet/corert/pull/7529","RelatedDescription":"Closed or merged PR \"Scan for `Marshal.SizeOf(Type)` usage\" (#7529)"},{"Id":"456568676","IsPullRequest":true,"CreatedAt":"2019-06-16T04:27:48","Actor":"MichalStrehovsky","Number":"7528","RawContent":null,"Title":"Implement generation of function pointer metadata","State":"closed","Body":"Hit this while accidentally compiling WPF, but might as well just implement this.","Url":"https://github.com/dotnet/corert/pull/7528","RelatedDescription":"Closed or merged PR \"Implement generation of function pointer metadata\" (#7528)"},{"Id":"456373747","IsPullRequest":false,"CreatedAt":"2019-06-14T18:14:20","Actor":"christianscheuer","Number":"7524","RawContent":null,"Title":"Finalize Alpine Linux / linux-musl-x64 support","State":"open","Body":"Thanks to @janvorli's fix in #7522 we can now build the objwriter package on Alpine Linux (in the Docker image from https://github.com/dotnet/corert/issues/7510#issuecomment-501516667 - mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.6-WithNode-cfdd435-20190521001804), by invoking:\r\n\r\n```\r\n./build.sh objwriter Release\r\n```\r\n\r\nHowever, even while the ObjectWriter package itself builds, CoreRT does not pick it up. CoreRT expects to find a published ObjectWriter package, musl edition, in the nuget feed. The error message when invoking the above is therefore (after having successfully built the native components of CoreRT + objwriter):\r\n\r\n```\r\n Restoring packages for /corertalpine/src/ILCompiler/ObjectWriter/ObjectWriter.depproj...\r\n  Installing Microsoft.DotNet.ObjectWriter 1.0.0-alpha-27619-05.\r\n/corertalpine/src/ILCompiler/ObjectWriter/ObjectWriter.depproj : error NU1101: Unable to find package runtime.linux-musl-x64.Microsoft.DotNet.ObjectWriter. No packages exist with this id in source(s): dotnetfeed dotnet-core, dotnetfeed dotnet-coreclr, myget.org dotnet-buildtools, myget.org dotnet-core, myget.org dotnet-corefxlab, myget.org system-commandline, nuget.org\r\n  Generating MSBuild file /corertalpine/bin/obj/Linux.x64.Release/ObjectWriter/ObjectWriter.depproj.nuget.g.props.\r\n  Generating MSBuild file /corertalpine/bin/obj/Linux.x64.Release/ObjectWriter/ObjectWriter.depproj.nuget.g.targets.\r\n```\r\n\r\n### Proper fix: Publish linux-musl-x64 packages\r\nI suspect the best longtime fix would be for CoreRT to publish linux-musl-x64 packages by adding a linux-musl-x64 flavor to the `eng/platform-matrix.yml`, if I'm understanding the infrastructure correctly.\r\nIf this is the way going forward, would it then be as simple as just adding it there, or do things need to be changed in other places too?\r\nSince CoreCLR builds musl flavors and we can now build those manually for CoreRT with janvorli's fix, I suspect this should be a pretty simple change, right?\r\n\r\n### Workaround for now: Patch CoreRT to pick up the built objwriter package\r\nFor now I'm fine with having to build CoreRT myself on Alpine Linux, even if we need to do some manual patches to the tree to allow CoreRT to pick up the built objwriter package.\r\nBut, how should I patch it so that it does that? I'm assuming the ObjectWriter.depproj is part of the solution (or the problem).\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7524","RelatedDescription":"Open issue \"Finalize Alpine Linux / linux-musl-x64 support\" (#7524)"},{"Id":"455960432","IsPullRequest":true,"CreatedAt":"2019-06-13T23:17:23","Actor":"Dotnet-GitSync-Bot","Number":"7523","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7523","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7523)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"459399758","IsPullRequest":true,"CreatedAt":"2019-06-21T22:59:45","Actor":"wli3","Number":"3349","RawContent":null,"Title":"Upload to PerfCommand","State":"open","Body":"Instead of benchview. And changed the format of the result.\r\nUse a csproj and dotnet run in Helix to do convert and uploading instead of python scripts","Url":"https://github.com/dotnet/sdk/pull/3349","RelatedDescription":"Open PR \"Upload to PerfCommand\" (#3349)"},{"Id":"459399549","IsPullRequest":true,"CreatedAt":"2019-06-21T22:58:33","Actor":"dsplaisted","Number":"3348","RawContent":null,"Title":"Unify more build and publish logic","State":"open","Body":"Implement some of the unification in #3311, but without changing the product behavior.","Url":"https://github.com/dotnet/sdk/pull/3348","RelatedDescription":"Open PR \"Unify more build and publish logic\" (#3348)"},{"Id":"458091414","IsPullRequest":true,"CreatedAt":"2019-06-21T17:11:48","Actor":"rainersigwald","Number":"3342","RawContent":null,"Title":"Use preserialized resources to target Core 3","State":"closed","Body":"Opts into the new System.Resources.Extensions approach to resource\r\nserialization when targeting .NET Core 3.0+/.NET Standard 2.1+.\r\n\r\nRespects project setting if the project explicitly sets the property, to\r\nallow opting .NET Framework-targeting applications to opt in.\r\n\r\nThis is my stake-in-the ground proposal: light this up automatically for the folks who definitely need it. Happy to have discussion about other times when we should set this.\r\n\r\nImportant factors include:\r\n* TF of the project, including whether that TF has S.R.Extensions guaranteed\r\n* runtime of the building MSBuild (Core MSBuild can't support the legacy approach needed for targeting full without adding the S.R.Extensions reference to the project)\r\n\r\n@nguerrera @livarcocc @ericstj @merriemcgaw @dreddy-work\r\n\r\n(this property does nothing but is harmless until it runs in conjunction with https://github.com/microsoft/msbuild/pull/4420; posting this now to review in parallel)","Url":"https://github.com/dotnet/sdk/pull/3342","RelatedDescription":"Closed or merged PR \"Use preserialized resources to target Core 3\" (#3342)"},{"Id":"458276977","IsPullRequest":true,"CreatedAt":"2019-06-20T23:13:07","Actor":"wli3","Number":"3343","RawContent":null,"Title":"add wpf and winform large perf tests","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3343","RelatedDescription":"Closed or merged PR \"add wpf and winform large perf tests\" (#3343)"},{"Id":"458918161","IsPullRequest":true,"CreatedAt":"2019-06-20T22:40:06","Actor":"fadimounir","Number":"3347","RawContent":null,"Title":"Silence R2R compiler warnings by default","State":"open","Body":"They can be re-enabled by setting `PublishReadyToRunShowWarnings` to true.\r\nIf warnings are detected when the property is not set, a single message will be displayed to inform of the presence of warnings.","Url":"https://github.com/dotnet/sdk/pull/3347","RelatedDescription":"Open PR \"Silence R2R compiler warnings by default\" (#3347)"},{"Id":"458294573","IsPullRequest":true,"CreatedAt":"2019-06-20T22:25:50","Actor":"nguerrera","Number":"3345","RawContent":null,"Title":"Fix dotnet store for netcoreapp3.0","State":"closed","Body":"Also fix msbuild batching error that caused O(N^2) redundant work, and flakiness due to race conditions between the redundant workers.\r\n\r\nAnd replace ContinueOnError=WarnAndContinue with just ignoring standard error format on exec of crossgen. crossgen prior to 3.0 is notorious for spewing noise and the only thing that is reliable is the exit code. The previous approach around it was way too big of a hammer.\r\n\r\nThis is the \"minimal fix\" for 3.0. I am still working on a major re-design and simplification of dotnet store, but that will not likely be ready for 3.0 preview 7 and we want to have these issues fixed before then.\r\n\r\nIt is also not clear yet if we would be able to use the simplified design for all TFMs or only on netcoreapp3.0. That is because the crux of the re-design is to use the new PublishReadyToRun code as the foundation.","Url":"https://github.com/dotnet/sdk/pull/3345","RelatedDescription":"Closed or merged PR \"Fix dotnet store for netcoreapp3.0\" (#3345)"},{"Id":"458409021","IsPullRequest":true,"CreatedAt":"2019-06-20T07:53:52","Actor":"v-zbsail","Number":"3346","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk release/3.0.1xx | 20190620","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3346","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk release/3.0.1xx | 20190620\" (#3346)"},{"Id":"458283215","IsPullRequest":true,"CreatedAt":"2019-06-20T03:28:03","Actor":"nguerrera","Number":"3344","RawContent":null,"Title":"Fix crash in case of fallback from package cache to memory","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3344","RelatedDescription":"Closed or merged PR \"Fix crash in case of fallback from package cache to memory\" (#3344)"},{"Id":"457991662","IsPullRequest":false,"CreatedAt":"2019-06-19T12:44:05","Actor":"onovotny","Number":"3341","RawContent":null,"Title":"Incorrect warning about WindowsDesktop SDK","State":"open","Body":"I have a project that has some libraries/exe that use WPF and some that don't. The ones that do use the WindowsDesktop SDK. The ones that don't use the default SDK to prevent accidental WPF references.\r\n\r\nI have a directory.build.props file that sets `UseWPF` to `true` so that I don't need them in all places.\r\n\r\nIn Preview 7, I now get this warning:\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012503\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets(340,5): warning NETSDK1107: Microsoft.NET.Sdk.WindowsDesktop is required to build Windows desktop applications. 'UseWpf' and 'UseWindowsForms' are not supported by the current SDK.\r\n```\r\n\r\nThat's coming from `Microsoft.NET.Sdk.DefaultItems.targets`. The check is being too aggressive.","Url":"https://github.com/dotnet/sdk/issues/3341","RelatedDescription":"Open issue \"Incorrect warning about WindowsDesktop SDK\" (#3341)"},{"Id":"457688407","IsPullRequest":true,"CreatedAt":"2019-06-19T04:40:21","Actor":"nguerrera","Number":"3340","RawContent":null,"Title":"Fix small build issues","State":"closed","Body":"Three separate small issues in three commits:\r\n\r\n\r\n1. Fix incremental build in VS when only target files change. This had been driving me crazy causing tests to run without my targets changes. Fixed the other two while I was playing around nearby.\r\n\r\n2. Remove outdated workaround\r\n\r\n3. Auto-bump version of task assemblies. Fix #2953. Follows [Arcade recommendation](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/Versioning.md#recommanded-settings). ","Url":"https://github.com/dotnet/sdk/pull/3340","RelatedDescription":"Closed or merged PR \"Fix small build issues\" (#3340)"},{"Id":"456008150","IsPullRequest":true,"CreatedAt":"2019-06-19T00:11:56","Actor":"dsplaisted","Number":"3331","RawContent":null,"Title":"Preserve metadata from Reference items","State":"closed","Body":"Fix #2254 ","Url":"https://github.com/dotnet/sdk/pull/3331","RelatedDescription":"Closed or merged PR \"Preserve metadata from Reference items\" (#3331)"},{"Id":"455368499","IsPullRequest":true,"CreatedAt":"2019-06-18T22:48:11","Actor":"nguerrera","Number":"3326","RawContent":null,"Title":"Support PublishReadyToRun for framework-dependent deployment","State":"closed","Body":"Fix #3110 ","Url":"https://github.com/dotnet/sdk/pull/3326","RelatedDescription":"Closed or merged PR \"Support PublishReadyToRun for framework-dependent deployment\" (#3326)"},{"Id":"455469527","IsPullRequest":true,"CreatedAt":"2019-06-18T18:02:52","Actor":"nguerrera","Number":"3327","RawContent":null,"Title":"Reduce verbosity of conflict resolution","State":"closed","Body":"Also:\r\n* Reduce line noise in preview message\r\n* Log info about arbitrary copy-local choice in conflict resolution\r\n\r\nFix #2468 \r\nFix #3319 ","Url":"https://github.com/dotnet/sdk/pull/3327","RelatedDescription":"Closed or merged PR \"Reduce verbosity of conflict resolution\" (#3327)"},{"Id":"457564494","IsPullRequest":false,"CreatedAt":"2019-06-18T17:34:22","Actor":"lzganec","Number":"3338","RawContent":null,"Title":"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects","State":"closed","Body":"Having a dependency to Microsoft.CodeCoverage (which comes from Microsoft.NET.Test.Sdk) leaves Microsoft.VisualStudio.TraceDataCollector.resources.dll localized resource satellite assembly in the publish output using .NET Core version 2.2.","Url":"https://github.com/dotnet/sdk/issues/3338","RelatedDescription":"Closed issue \"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects\" (#3338)"},{"Id":"457573123","IsPullRequest":false,"CreatedAt":"2019-06-18T16:12:55","Actor":"vitek-karas","Number":"3339","RawContent":null,"Title":"Add ability to differentiate framework assemblies in self-contained apps","State":"open","Body":"In .NET Core 3.0 we're introducing `AssemblyDependencyResolver` which is a managed API to basically parse and process a `.deps.json` for a component (think plugin). The API uses existing algorithms in `hostpolicy` which are executed during application startup to process the `.deps.json` for the app.\r\n\r\nApps are allowed to contain assemblies which are also part of a framework which the app relies on. As an example app which relies on ASP.NET framework can also have a package reference for `System.Threading.Channels` (assembly which is part of the ASP.NET framework). The current behavior is:\r\n* For self-contained apps, the SDK will pick the higher version of the two and copy it into the app (so if the package reference is higher it overwrites the one in the framework, otherwise the one from framework wins).\r\n* For framework-dependent apps, the SDK will make the package assembly part of the app and it will write the assembly and file versions into the `.deps.json`. At runtime `hostpolicy` uses the version information to compare the assembly from the app against the one in the framework and it picks the one with the higher version.\r\n\r\nApplying this logic to dynamically loaded components means that we would want the \"framework dependent\" behavior for components as well (we don't support self-contained components - that sort of doesn't make sense). Note that during component dependency resolution we intentionally ignore the assemblies from the app itself (this is to enable component isolation), but we do want to consider the frameworks (as frameworks are assumed to always be shared between the app and the components).\r\n\r\nIf the component is loaded into a framework dependent app, this is easy to solve as `hostpolicy` will apply the exact same logic and compare assembly and file versions for framework assemblies.\r\n\r\nThe problem is if the component is loaded into a self-contained app, there's no way to tell which assemblies are from a framework and which belong to the app itself. As noted above we want to consider the framework assemblies, but ignore the app assemblies.\r\n\r\nThe ask here is to add some information somewhere such that the dependency resolution could always tell which assemblies are framework assemblies, even in self-contained apps. For the hosting layer, putting this information into `.deps.json` would make a lot of sense, but if it makes sense to put it elsewhere, it might work as well.\r\n\r\nThe problem is also discussed here: https://github.com/dotnet/core-setup/issues/6826\r\n\r\nWe would be OK for this to not be solved in 3.0 as we probably don't have enough time to make the necessary hosting changes to support the new information coming from the SDK.","Url":"https://github.com/dotnet/sdk/issues/3339","RelatedDescription":"Open issue \"Add ability to differentiate framework assemblies in self-contained apps\" (#3339)"},{"Id":"457161990","IsPullRequest":false,"CreatedAt":"2019-06-17T21:42:34","Actor":"fadimounir","Number":"3337","RawContent":null,"Title":"App host not published correctly after a previous PublishSingleFile","State":"open","Body":"To repro:\r\n1) dotnet new console\r\n2) dotnet publish -r win-x64 /p:PublishSingleFile\r\n3) dotnet publish -r win-x64\r\n\r\nAfter step 2, there will be a single app.exe (+pdb) file in the publish folder. Approx size is ~70 MB.\r\nStep 3 correctly copies all dlls and other files to the publish folder, but fails to overwrite app.exe with the non-bundled version of the file (should be around ~150 KB). The large single-file bundle is still there in the publish folder.\r\n\r\nNot sure if we can do something about it. This falls in the \"clean publish\" category of bugs, but I thing at least we should overwrite the app.exe in the publish folder with the correct one.","Url":"https://github.com/dotnet/sdk/issues/3337","RelatedDescription":"Open issue \"App host not published correctly after a previous PublishSingleFile\" (#3337)"},{"Id":"457128227","IsPullRequest":false,"CreatedAt":"2019-06-17T20:15:30","Actor":"fadimounir","Number":"3336","RawContent":null,"Title":"Unable to use ReadyToRun on Debian 8 due to incorrect runtime bits resolution by SDK","State":"open","Body":"Original bug: https://github.com/dotnet/coreclr/issues/24565\r\n\r\nRepro app is here: https://github.com/wieslawsoltes/Draw2D. To repro, clone and run this command:\r\n``` console\r\ndotnet publish ./src/Draw2D/Draw2D.csproj -f netcoreapp3.0 -c Release -r debian.8-x64 -o Draw2D_netcoreapp3.0_debian.8-x64\r\n```\r\n\r\nRunning the application throws a `Failed to initialize CoreCLR,, HRESULT: 0x80131500` error.\r\n\r\nLooking at the msbuild verbose logs, you can see that the SDK is copying the runtime bits from the runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64 package, which is incorrect.\r\n\r\nOn Debian9 targets, the runtime bits are copied correctly (version 3). On Debian8, the SDK doesn't resolve correctly. Here's an example error I got: \r\n\r\n``` console\r\n/home/fadi/dotnet_preview5/sdk/3.0.100-preview5-011569/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(39,5): message NETSDK1041: Encountered conflict between 'CopyLocal:/home/fadi/.nuget/packages/runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64/native/libcoreclr.so' and 'CopyLocal:/home/fadi/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/3.0.0-preview5-27709-08/runtimes/linux-x64/native/libcoreclr.so'.  NETSDK1037: Could not determine winner due to equal file and assembly versions. [/home/fadi/git/Draw2D/src/Draw2D/Draw2D.csproj]\r\n```\r\n\r\nAlso, it ends up copying the runtime bits from the 1.0.7 runtime package. Example:\r\n\r\n``` console\r\nCopying file from \"/home/fadi/.nuget/packages/runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64/native/libcoreclr.so\" to \"/home/fadi/git/Draw2D/src/Draw2D/bin/Release/netcoreapp3.0/debian.8-x64/libcoreclr.so\".\r\n```","Url":"https://github.com/dotnet/sdk/issues/3336","RelatedDescription":"Open issue \"Unable to use ReadyToRun on Debian 8 due to incorrect runtime bits resolution by SDK\" (#3336)"},{"Id":"454964340","IsPullRequest":true,"CreatedAt":"2019-06-17T18:56:57","Actor":"dsplaisted","Number":"3324","RawContent":null,"Title":"Use runtime pack manifest","State":"closed","Body":"Use runtime pack manifest instead of using conventions and scanning folders.\r\n\r\nResources are still handled using conventions, we need updates to the runtime pack manifest in order to be able to consume them from it: https://github.com/dotnet/core-setup/issues/6768","Url":"https://github.com/dotnet/sdk/pull/3324","RelatedDescription":"Closed or merged PR \"Use runtime pack manifest\" (#3324)"},{"Id":"456910488","IsPullRequest":false,"CreatedAt":"2019-06-17T12:35:44","Actor":"ViktorHofer","Number":"3335","RawContent":null,"Title":"What is the expected path for ResolvePackageFileConflicts to work with repositories that build their own platforms","State":"open","Body":"CoreFx doesn't use the Microsoft.NETCore.App.Ref targeting pack as we build the refs ourselves. Without that targeting pack the `ResolvePackageFileConflicts` task seems to not be able to handle conflicts between package runtime assemblies and the live built ones.\r\n\r\nComparing an example project with a test project in CoreFx I can see the following differences:\r\n- PlatformManifests: not set, points to a manifest file on disk which contains all the platform assemblies\r\n- PreferredPackages: not set, a list of packages that are preferred?\r\n\r\nConflicts as such are therefore missing in CoreFx:\r\n\r\n`Encountered conflict between 'Platform:System.Xml.XDocument.dll' and 'CopyLocal:C:\\Users\\vihofer\\.nuget\\packages\\system.xml.xdocument\\4.0.11\\lib\\netstandard1.3\\System.Xml.XDocument.dll'.  NETSDK1033: Choosing 'Platform:System.Xml.XDocument.dll' because AssemblyVersion '4.1.1.0' is greater than '4.0.11.0'.`\r\n\r\nThe impact of this is that dependencies that come via packages are copied to the output directory and are preferred over the live built ones.\r\n\r\nWhat is the expected path for repositories that live build platforms?\r\n\r\nEDIT: Attaching the binlog of the corefx test project: [msbuild.zip](https://github.com/dotnet/sdk/files/3297026/msbuild.zip)\r\n\r\ncc @ericstj @dsplaisted @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3335","RelatedDescription":"Open issue \"What is the expected path for ResolvePackageFileConflicts to work with repositories that build their own platforms\" (#3335)"},{"Id":"456547388","IsPullRequest":false,"CreatedAt":"2019-06-15T15:19:55","Actor":"MeikTranel","Number":"3334","RawContent":null,"Title":"Hide or Move generated *.designer.cs to obj directory","State":"open","Body":"When using .RESX files for localization the sdk currently compiles this file at design time / build time to be able to reference it as static properties from any csharp code (or xaml for that matter).\r\n\r\nThe generated file probably should not be put under version control, so my preferred way would be moving the output file of the generator into the obj directory, where it would fall under common gitignore rules.\r\n","Url":"https://github.com/dotnet/sdk/issues/3334","RelatedDescription":"Open issue \"Hide or Move generated *.designer.cs to obj directory\" (#3334)"},{"Id":"455826747","IsPullRequest":false,"CreatedAt":"2019-06-15T03:39:50","Actor":"amh1979","Number":"3329","RawContent":null,"Title":"NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized","State":"closed","Body":"SDK: 3.0.0-preview6-27804-01\r\nMicrosoft.NET.Sdk.TargetingPackResolution.targets(185,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized","Url":"https://github.com/dotnet/sdk/issues/3329","RelatedDescription":"Closed issue \"NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" (#3329)"},{"Id":"456439257","IsPullRequest":true,"CreatedAt":"2019-06-14T23:25:37","Actor":"dsplaisted","Number":"3333","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Replaces #3332, hopefully fixing test failures","Url":"https://github.com/dotnet/sdk/pull/3333","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3333)"},{"Id":"456342176","IsPullRequest":true,"CreatedAt":"2019-06-14T21:04:49","Actor":"wli3","Number":"3332","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3332","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3332)"},{"Id":"455914987","IsPullRequest":true,"CreatedAt":"2019-06-14T00:19:59","Actor":"dsplaisted","Number":"3330","RawContent":null,"Title":"Don't hash DesignTimeBould for ResolvePackageAssets","State":"closed","Body":"Fixes #3313 ","Url":"https://github.com/dotnet/sdk/pull/3330","RelatedDescription":"Closed or merged PR \"Don't hash DesignTimeBould for ResolvePackageAssets\" (#3330)"},{"Id":"454941152","IsPullRequest":true,"CreatedAt":"2019-06-13T19:44:06","Actor":"nugetlurker","Number":"3321","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3321","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3321)"},{"Id":"454941165","IsPullRequest":true,"CreatedAt":"2019-06-13T18:55:43","Actor":"nugetlurker","Number":"3322","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3322","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3322)"},{"Id":"455480612","IsPullRequest":false,"CreatedAt":"2019-06-13T05:12:14","Actor":"heejaechang","Number":"3328","RawContent":null,"Title":"use different assembly version for different build task","State":"closed","Body":"a lot of times, I get something like this whenever I do branch switch and restore and open solution in VS\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/59394912-5d06fc00-8d36-11e9-81c1-d2f0ad724168.png)\r\n\r\nand I believe that is happening because different dll that has same assembly version is already loaded in the msbuild which got reused.\r\n\r\ncan we make different build task dll to use different assembly version so that we don't get into this problem?","Url":"https://github.com/dotnet/sdk/issues/3328","RelatedDescription":"Closed issue \"use different assembly version for different build task\" (#3328)"},{"Id":"455273191","IsPullRequest":false,"CreatedAt":"2019-06-12T15:14:24","Actor":"dsplaisted","Number":"3325","RawContent":null,"Title":"Supply RuntimeIdentifier graph to NuGet","State":"open","Body":"Once this NuGet feature is implemented: https://github.com/NuGet/Client.Engineering/pull/96\r\n\r\nWe will need to set the appropriate property to supply the SDKs graph to NuGet, as well as remove the infrastructure that implicitly references Microsoft.NETCore.App.","Url":"https://github.com/dotnet/sdk/issues/3325","RelatedDescription":"Open issue \"Supply RuntimeIdentifier graph to NuGet\" (#3325)"},{"Id":"454848287","IsPullRequest":true,"CreatedAt":"2019-06-12T03:09:18","Actor":"nguerrera","Number":"3320","RawContent":null,"Title":"Fix duplicate resolved files to publish","State":"closed","Body":"Fix #3257 \r\n\r\nThere were two issues.\r\n\r\n1. A misunderstanding of msbuild batching rules and unqualified metadata caused satellite assemblies to be included twice (from same source location) into the publish list. (See https://github.com/microsoft/msbuild/issues/4429)\r\n2. There are assemblies with the same name and version in multiple frameworks. We have to choose one arbitrarily.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3320","RelatedDescription":"Closed or merged PR \"Fix duplicate resolved files to publish\" (#3320)"},{"Id":"454941183","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:54","Actor":"nugetlurker","Number":"3323","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk master branch","Url":"https://github.com/dotnet/sdk/pull/3323","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3323)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":55,"FavoriteCount":15,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":20,"RawContent":null},{"Id":"1141752346860347394","CreatedAt":"2019-06-20T16:59:06+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"1141074032273453056","CreatedAt":"2019-06-18T20:03:44+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core https://t.co/modbwJLbCR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":317,"FavoriteCount":154,"RawContent":null},{"Id":"1139464997086515200","CreatedAt":"2019-06-14T09:30:00+00:00","UserScreenname":"dotnet","Text":"In this episode of On .NET, @merrie_mcgaw and @dcampbell share some interesting insights on the work that's going i… https://t.co/lk13vbgcLT","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"1138862091987800064","CreatedAt":"2019-06-12T17:34:16+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 6 https://t.co/33ez5lSv95","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":379,"FavoriteCount":204,"RawContent":null},{"Id":"1138808172397899781","CreatedAt":"2019-06-12T14:00:00+00:00","UserScreenname":"dotnet","Text":"Announcing ML .NET 1.1 and Model Builder updates (Machine Learning for .NET)\nhttps://t.co/XN6b6HRpSP https://t.co/3pmcAPxoN9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":68,"FavoriteCount":40,"RawContent":null}]}},"RunOn":"2019-06-23T05:30:30.8781489Z","RunDurationInMilliseconds":10729}