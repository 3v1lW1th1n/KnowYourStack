{"Data":{"Sdk":{"Events":[{"Id":"10763892943","Type":"IssuesEvent","CreatedAt":"2019-11-01T06:13:55","Actor":"xinyu391","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/637","RelatedDescription":"Opened issue \"how to build on Ubuntu/Linux with .net core 3.0.100\" (#637) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\nbuild openxml-sdk failed with .net cor 3.0 on ubuntu19.04\r\n  \r\n**Information**\r\n- OS: Ubuntu 19.10\r\n- .NET Target:  .net core 3.0.100\r\n- DocumentFormat.OpenXml Version: (2.9.1)\r\n\r\n**Repro**\r\n\r\ndownload and install .net core 3.0 https://dotnet.microsoft.com/download/dotnet-core/3.0\r\nand set DOTNET_ROOT PATH\r\n\r\n>>cd openxml-sdk\r\n>>dotnet  build  # failed\r\n \r\nBuild FAILED.\r\n\r\n**/home/jesse/Software/dotnet3.0/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(1175,5): error MSB3644: The reference assemblies for .NETFramework,Version=v4.6 were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. You can download .NET Framework Developer Packs at https://aka.ms/msbuild/developerpacks [/data2/jesse/work/Open-XML-SDK-2.9.1/test/DocumentFormat.OpenXml.Packaging.Tests/DocumentFormat.OpenXml.Packaging.Tests.csproj]**\r\n  \r\nBut in the folder bin/Debug/DocumentFormat.OpenXml/netstandard1.3/, I got dll files\r\nDocumentFormat.OpenXml.dll    \r\nDocumentFormat.OpenXml.pdb   \r\n\r\nI copy these dll to my c# project \r\nthen dotnet build, get error   \r\n \r\n**Build FAILED.\r\n  \r\nProgram.cs(14,51): error CS0012: The type 'Package' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.IO.Packaging, Version=4.0.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. [/data2/jesse/work/myApp/myApp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)**\r\n"},{"Id":"10682421515","Type":"IssuesEvent","CreatedAt":"2019-10-22T05:18:47","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/635","RelatedDescription":"Closed issue \"Support for encrypted workbook\" (#635) at OfficeDev/Open-XML-SDK","RelatedBody":"\r\n"},{"Id":"10682418992","Type":"IssuesEvent","CreatedAt":"2019-10-22T05:18:01","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/636","RelatedDescription":"Closed issue \"Make it easy\" (#636) at OfficeDev/Open-XML-SDK","RelatedBody":"package is utter shit.\r\nRewrite it from scratch\r\n\r\nSample:\r\n`using (SpreadsheetDocument sDoc = SpreadsheetDocument.Open(MyExcelStream, ReadOnly))\r\n            {\r\n                WorkbookPart workbookPart = sDoc.WorkbookPart;\r\n                IEnumerable<Sheet> sheets = sDoc.WorkbookPart.Workbook.GetFirstChild<Sheets>().Elements<Sheet>();\r\n                string relationshipId = sheets.First().Id.Value;\r\n                WorksheetPart worksheetPart = (WorksheetPart)sDoc.WorkbookPart.GetPartById(relationshipId);\r\n                Worksheet workSheet = worksheetPart.Worksheet;\r\n                SheetData sheetData = workSheet.GetFirstChild<SheetData>();\r\n                IEnumerable<Row> rows = sheetData.Descendants<Row>();`\r\n\r\nThis is trash. Bad kids.\r\n\r\nLearn:\r\n\r\nEPPLus example:\r\n\r\n`using (var p = new ExcelPackage())\r\n        {\r\n           //A workbook must have at least on cell, so lets add one... \r\n           var ws=p.Workbook.Worksheets.Add(\"MySheet\");\r\n           //To set values in the spreadsheet use the Cells indexer.\r\n           ws.Cells[\"A1\"].Value = \"This is cell A1\";\r\n           //Save the new workbook. We haven't specified the filename so use the Save as method.\r\n           p.SaveAs(new FileInfo(@\"c:\\workbooks\\myworkbook.xlsx\"));\r\n        }`\r\n\r\nClear and easy!!!!\r\n\r\nLearn to program and rewrite this trash please."},{"Id":"10674761281","Type":"IssuesEvent","CreatedAt":"2019-10-21T10:06:07","Actor":"Porkechebure","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/636","RelatedDescription":"Opened issue \"Make it easy\" (#636) at OfficeDev/Open-XML-SDK","RelatedBody":"package is utter shit.\r\nRewrite it from scratch\r\n\r\nSample:\r\n`using (SpreadsheetDocument sDoc = SpreadsheetDocument.Open(MyExcelStream, ReadOnly))\r\n            {\r\n                WorkbookPart workbookPart = sDoc.WorkbookPart;\r\n                IEnumerable<Sheet> sheets = sDoc.WorkbookPart.Workbook.GetFirstChild<Sheets>().Elements<Sheet>();\r\n                string relationshipId = sheets.First().Id.Value;\r\n                WorksheetPart worksheetPart = (WorksheetPart)sDoc.WorkbookPart.GetPartById(relationshipId);\r\n                Worksheet workSheet = worksheetPart.Worksheet;\r\n                SheetData sheetData = workSheet.GetFirstChild<SheetData>();\r\n                IEnumerable<Row> rows = sheetData.Descendants<Row>();`\r\n\r\nThis is trash. Bad kids.\r\n\r\nLearn:\r\n\r\nEPPLus example:\r\n\r\n`using (var p = new ExcelPackage())\r\n        {\r\n           //A workbook must have at least on cell, so lets add one... \r\n           var ws=p.Workbook.Worksheets.Add(\"MySheet\");\r\n           //To set values in the spreadsheet use the Cells indexer.\r\n           ws.Cells[\"A1\"].Value = \"This is cell A1\";\r\n           //Save the new workbook. We haven't specified the filename so use the Save as method.\r\n           p.SaveAs(new FileInfo(@\"c:\\workbooks\\myworkbook.xlsx\"));\r\n        }`\r\n\r\nClear and easy!!!!\r\n\r\nLearn to program and rewrite this trash please."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2019-11-06T05:30:53.0063867Z","RunDurationInMilliseconds":935}