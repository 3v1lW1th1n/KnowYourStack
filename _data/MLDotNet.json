{"Data":{"GitHub":{"Issues":[{"Id":"431833771","IsPullRequest":true,"CreatedAt":"2019-04-11T05:15:18","Actor":"TomFinley","Number":"3288","RawContent":null,"Title":"Update IDataView principles, type system documentation.","State":"open","Body":"Towards #3095.","Url":"https://github.com/dotnet/machinelearning/pull/3288","RelatedDescription":"Open PR \"Update IDataView principles, type system documentation.\" (#3288)"},{"Id":"431781531","IsPullRequest":true,"CreatedAt":"2019-04-11T02:03:16","Actor":"codemzs","Number":"3285","RawContent":null,"Title":"Update tt files to have Microsoft.ML prefix for SampleUtils.","State":"closed","Body":"fixes #3284","Url":"https://github.com/dotnet/machinelearning/pull/3285","RelatedDescription":"Closed or merged PR \"Update tt files to have Microsoft.ML prefix for SampleUtils.\" (#3285)"},{"Id":"431781132","IsPullRequest":false,"CreatedAt":"2019-04-11T02:03:16","Actor":"codemzs","Number":"3284","RawContent":null,"Title":"TT file contains reference to SampleUtils without Microsoft.ML prefix","State":"closed","Body":"Upon running custom tool this will cause build failures.","Url":"https://github.com/dotnet/machinelearning/issues/3284","RelatedDescription":"Closed issue \"TT file contains reference to SampleUtils without Microsoft.ML prefix\" (#3284)"},{"Id":"431789619","IsPullRequest":true,"CreatedAt":"2019-04-11T01:32:23","Actor":"codemzs","Number":"3287","RawContent":null,"Title":"Fix runtime exception in MapKeyToVector sample.","State":"open","Body":"fixes #3286","Url":"https://github.com/dotnet/machinelearning/pull/3287","RelatedDescription":"Open PR \"Fix runtime exception in MapKeyToVector sample.\" (#3287)"},{"Id":"431789518","IsPullRequest":false,"CreatedAt":"2019-04-11T01:31:50","Actor":"codemzs","Number":"3286","RawContent":null,"Title":"MapKeyToValue sample throws exception","State":"open","Body":"Seems like the issue is cast exception between vector of float to vector of uint.","Url":"https://github.com/dotnet/machinelearning/issues/3286","RelatedDescription":"Open issue \"MapKeyToValue sample throws exception\" (#3286)"},{"Id":"431714037","IsPullRequest":false,"CreatedAt":"2019-04-11T00:56:00","Actor":"codemzs","Number":"3277","RawContent":null,"Title":"Samples for time series prediction engine and general clean up of all time series samples","State":"closed","Body":"It seems time series samples related to prediction engine were deleted by PR #2900. This is unfortunate because time series has its own prediction engine that allows for state to be updated and saved at prediction time. By deleting the samples we have no way to show to the user how the checkpoint() API of prediction engine is used. We need to add the samples back and clean up all time series samples so that the format is consistent with rest of samples.","Url":"https://github.com/dotnet/machinelearning/issues/3277","RelatedDescription":"Closed issue \"Samples for time series prediction engine and general clean up of all time series samples\" (#3277)"},{"Id":"431777392","IsPullRequest":false,"CreatedAt":"2019-04-11T00:26:52","Actor":"artidoro","Number":"3283","RawContent":null,"Title":"Prior Trainer does not accept bool label column","State":"open","Body":"The template for our binary classification samples uses a bool label column. This template is used by a number of our binary classification trainers.\r\n\r\n`PrriorTrainer` does not however accept a boolean label column. It only accepts a float label column. Here is the code that checks that the label column is of type float:\r\nhttps://github.com/dotnet/machinelearning/blob/55d911dc5f50bf45bfffe50bf9f0ee3ffb14c369/src/Microsoft.ML.StandardTrainers/Standard/Simple/SimpleTrainers.cs#L233\r\n\r\nIn order to be consistent with the rest of the binary classification trainers, we should allow the label column to be of boolean type for `PriorTrainer`.","Url":"https://github.com/dotnet/machinelearning/issues/3283","RelatedDescription":"Open issue \"Prior Trainer does not accept bool label column\" (#3283)"},{"Id":"431735996","IsPullRequest":false,"CreatedAt":"2019-04-11T00:23:46","Actor":"codemzs","Number":"3279","RawContent":null,"Title":"Remove Console.Readline at the end of the samples","State":"closed","Body":"There are two samples that have ReadLine() in the end, presumably to prevent the window from closing but this is not needed because VS prevents the window from closing and also this pattern is inconsistent from rest of the samples. This interferes with the test that runs all the samples to ensure samples are working and not throwing any runtime exceptions.","Url":"https://github.com/dotnet/machinelearning/issues/3279","RelatedDescription":"Closed issue \"Remove Console.Readline at the end of the samples\" (#3279)"},{"Id":"431735631","IsPullRequest":true,"CreatedAt":"2019-04-11T00:23:46","Actor":"codemzs","Number":"3278","RawContent":null,"Title":"Remove Console.Readline at the end of the samples.","State":"closed","Body":"fixes #3279\r\n\r\nThere are two samples that have ReadLine() in the end, presumably to prevent the window from closing but this is not needed because VS prevents the window from closing and also this pattern is inconsistent from rest of the samples.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3278","RelatedDescription":"Closed or merged PR \"Remove Console.Readline at the end of the samples.\" (#3278)"},{"Id":"431221151","IsPullRequest":true,"CreatedAt":"2019-04-10T23:23:14","Actor":"wschin","Number":"3265","RawContent":null,"Title":"Ensable the uses of SSE and OpenMP in LIBMF","State":"closed","Body":"Fix #1408 by compiling LIBMF with SSE and OpenMP.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3265","RelatedDescription":"Closed or merged PR \"Ensable the uses of SSE and OpenMP in LIBMF\" (#3265)"},{"Id":"431758292","IsPullRequest":true,"CreatedAt":"2019-04-10T23:11:13","Actor":"wschin","Number":"3282","RawContent":null,"Title":"Add a sample for one class matrix factorization","State":"open","Body":"Fix #1769.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3282","RelatedDescription":"Open PR \"Add a sample for one class matrix factorization\" (#3282)"},{"Id":"431754394","IsPullRequest":true,"CreatedAt":"2019-04-10T22:55:01","Actor":"rogancarr","Number":"3281","RawContent":null,"Title":"Extend Gam Samples","State":"open","Body":"This PR extends the current GAM samples for regression and adds them for Binary Classification.\r\n\r\nFixes #3280 ","Url":"https://github.com/dotnet/machinelearning/pull/3281","RelatedDescription":"Open PR \"Extend Gam Samples\" (#3281)"},{"Id":"431754211","IsPullRequest":false,"CreatedAt":"2019-04-10T22:54:09","Actor":"rogancarr","Number":"3280","RawContent":null,"Title":"Samples for GAM are needed","State":"open","Body":"The current samples for GAM don't go into a lot of detail and binary classification samples are missing.","Url":"https://github.com/dotnet/machinelearning/issues/3280","RelatedDescription":"Open issue \"Samples for GAM are needed\" (#3280)"},{"Id":"431244182","IsPullRequest":true,"CreatedAt":"2019-04-10T22:49:34","Actor":"zeahmed","Number":"3268","RawContent":null,"Title":" Updated CopyColumns, DropColumns and SelectColumns samples.","State":"closed","Body":"Related to #1209.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3268","RelatedDescription":"Closed or merged PR \" Updated CopyColumns, DropColumns and SelectColumns samples.\" (#3268)"},{"Id":"431161794","IsPullRequest":true,"CreatedAt":"2019-04-10T20:46:13","Actor":"zeahmed","Number":"3262","RawContent":null,"Title":"Updated sample for Concatenate API.","State":"closed","Body":"Related to #1209.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3262","RelatedDescription":"Closed or merged PR \"Updated sample for Concatenate API.\" (#3262)"},{"Id":"431654978","IsPullRequest":false,"CreatedAt":"2019-04-10T18:43:19","Actor":"bsoman3","Number":"3276","RawContent":null,"Title":"Tokenizer option for Wordbag Transforms","State":"open","Body":"### Issue\r\nTrying to import the following functionality from TLC:\r\n~~~~\r\nxf=WordBagTransform{    \r\n    col=Features:CatFeatures    \r\n    tok=WordTokenizeTransform{      sep=comma    }    \r\n    max=1000000000    \r\n    weighting=TfIdf  } \r\n~~~~\r\n\r\nI would have expected this to work:\r\n~~~~\r\nvar pipeline =\r\n    mlContext.Transforms.Text.TokenizeWords(\"CatTokens\", \"CatFeatures\", separator) //comma only\r\n    .Append(mlContext.Transforms.Text.ProduceWordBags(\"Features\", \"CatFeatures\", \r\n        ngramLength: 1, allLengths: true, maxNumTerms: 1000000000, \r\n        weighting: NgramExtractingEstimator.WeightingCriteria.TfIdf))\r\n    ;\r\n~~~~\r\n### What Happened \r\nIt seems that ProduceWordBags is tokenizing under the hood. [link] (https://github.com/dotnet/machinelearning/blob/fc89745fd9d5d7dcca875570bd3b9ffc981f2184/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/Text/ProduceWordBags.cs)\r\nThe user does not have any option to specify the separator. TLC uses space by default, but provides the option to change that.\r\n\r\n### Expected Behavior\r\nThe user should be able to produce bag of counts of ngrams on tokens such that they select how the tokenization is done.\r\n\r\nI would expect either TokenizeCharacters() + ProduceNgrams() or TokenizeWords + ProduceWordbags to provide this functionality\r\n\r\n\r\n**System information**\r\n* Product: dotnet-ml-api\r\n* GitHub Login: @bsoman3\r\n* Microsoft Alias: bhsoman\r\n\r\n- **OS version/distro**:Windows 10 Enterprise\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1","Url":"https://github.com/dotnet/machinelearning/issues/3276","RelatedDescription":"Open issue \"Tokenizer option for Wordbag Transforms\" (#3276)"},{"Id":"431639392","IsPullRequest":true,"CreatedAt":"2019-04-10T18:06:48","Actor":"artidoro","Number":"3275","RawContent":null,"Title":"Samples for CustomMapping, IndicateMissingValues, ReplaceMissingValues","State":"open","Body":"Cherry pick of #3216.\r\n\r\nNote that this PR removes the strong naming of the samples assembly. I have discussed this offline with @eerhardt. \r\n\r\nhttps://github.com/dotnet/machinelearning/pull/3216#discussion_r273732201","Url":"https://github.com/dotnet/machinelearning/pull/3275","RelatedDescription":"Open PR \"Samples for CustomMapping, IndicateMissingValues, ReplaceMissingValues\" (#3275)"},{"Id":"431620607","IsPullRequest":false,"CreatedAt":"2019-04-10T17:20:40","Actor":"wschin","Number":"3274","RawContent":null,"Title":"DataView Type System Is Not Extensive Enough","State":"open","Body":"To support loading `Image` from `IDataView` (as shown in #3263), user must modify ML.NET code, which means our type system is not extensive. Do we want to invest on the extensibility of ML.NET type system?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3274","RelatedDescription":"Open issue \"DataView Type System Is Not Extensive Enough\" (#3274)"},{"Id":"431617112","IsPullRequest":false,"CreatedAt":"2019-04-10T17:12:02","Actor":"ganik","Number":"3273","RawContent":null,"Title":"NaiveBayes needs better documentation on a range of input values","State":"open","Body":"Related to #3226 \r\n\r\nCurrently its not obvious that NaiveBayes acceots ony binary values. This should be both documented and gracefully handled in the trainer","Url":"https://github.com/dotnet/machinelearning/issues/3273","RelatedDescription":"Open issue \"NaiveBayes needs better documentation on a range of input values\" (#3273)"},{"Id":"431612368","IsPullRequest":false,"CreatedAt":"2019-04-10T17:00:33","Actor":"vKuryshev","Number":"3272","RawContent":null,"Title":"Exception on using LightGBM trainer with FeatureContributionCalculation and OneHotEncoding","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.7.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI used FeatureContributionCalculation with LightGbm trainer. My data pipeline contains OneHotEncoding features.\r\n- **What happened?**\r\nWhen I try to get feature contribution calculation I get the following exception\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Splitter/consolidator worker encountered exception while consuming source data\r\n  Source=Microsoft.ML.Data\r\n  StackTrace:\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes)\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Data.ColumnCursorExtensions.<GetColumnArrayDirect>d__3`1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at ConsoleApp1.Program.BuildTrainEvaluateAndSaveModel(MLContext mlContext) in C:\\Users\\vladimir.kuryshev\\source\\repos\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 150\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\Users\\vladimir.kuryshev\\source\\repos\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 45\r\n\r\nInner Exception 1:\r\nArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\nParameter name: slot\r\n\r\n   at Microsoft.ML.Data.VBuffer`1.GetItemOrDefault(Int32 slot)\r\n   at Microsoft.ML.Trainers.FastTree.InternalRegressionTree.AppendFeatureContributions(VBuffer`1& src, BufferBuilder`1 contributions)\r\n   at Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.GetFeatureContributions(VBuffer`1& features, VBuffer`1& contribs, BufferBuilder`1& builder)\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.<>c__DisplayClass30_0`2.<Microsoft.ML.Model.IFeatureContributionMapper.GetFeatureContributionMapper>b__0(VBuffer`1& src, VBuffer`1& dst)\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.InPipe.Impl`1.Fill()\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass5_1.<ConsolidateCore>b__2()\r\n```\r\n### Source code / logs\r\nMy code example\r\n```\r\n   IDataView trainingDataView = mlContext.Data.LoadFromTextFile<TaxiTrip>(TrainDataPath, hasHeader: true, separatorChar: ',');\r\n   var dataProcessPipeline = mlContext.Transforms.CopyColumns(outputColumnName: DefaultColumnNames.Label, inputColumnName: nameof(TaxiTrip.FareAmount))\r\n                            .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: VendorIdEncoded, inputColumnName: nameof(TaxiTrip.VendorId)))\r\n                            .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: RateCodeEncoded, inputColumnName: nameof(TaxiTrip.RateCode)))\r\n                            .Append(mlContext.Transforms.Categorical.OneHotEncoding(outputColumnName: PaymentTypeEncoded, inputColumnName: nameof(TaxiTrip.PaymentType)))\r\n                            .Append(mlContext.Transforms.Normalize(outputColumnName: nameof(TaxiTrip.PassengerCount), mode: NormalizingEstimator.NormalizerMode.MeanVariance))\r\n                            .Append(mlContext.Transforms.Normalize(outputColumnName: nameof(TaxiTrip.TripTime), mode: NormalizingEstimator.NormalizerMode.MeanVariance))\r\n                            .Append(mlContext.Transforms.Normalize(outputColumnName: nameof(TaxiTrip.TripDistance), mode: NormalizingEstimator.NormalizerMode.MeanVariance))\r\n                            .Append(mlContext.Transforms.Concatenate(DefaultColumnNames.Features, VendorIdEncoded, RateCodeEncoded, PaymentTypeEncoded, nameof(TaxiTrip.PassengerCount)\r\n                            , nameof(TaxiTrip.TripTime), nameof(TaxiTrip.TripDistance)));\r\n\r\n   var trainer = mlContext.Regression.Trainers.LightGbm(labelColumnName: DefaultColumnNames.Label, featureColumnName: DefaultColumnNames.Features);\r\n   var trainingPipeline = dataProcessPipeline.Append(trainer);\r\n\r\n   var trainedModel = trainingPipeline.Fit(trainingDataView);\r\n   IDataView predictions = trainedModel.Transform(testDataView);\r\n\r\n   var featureContributionCalculation = mlContext.Model.Explainability.FeatureContributionCalculation(trainedModel.LastTransformer.Model);\r\n   var featureContributionData = featureContributionCalculation.Fit(predictions).Transform(predictions);\r\n   var contributions = featureContributionData.GetColumn<float[]>(mlContext, DefaultColumnNames.FeatureContributions).ToList();\r\n```\r\nI used standard data from \"taxi-fare-train.csv\" file from ML.Net examples.\r\n\r\n- **Note** Issue can't be reproduced If i remove OneHotEncoding from pipeline or change trainer to FastTree for example.","Url":"https://github.com/dotnet/machinelearning/issues/3272","RelatedDescription":"Open issue \"Exception on using LightGBM trainer with FeatureContributionCalculation and OneHotEncoding\" (#3272)"},{"Id":"431606555","IsPullRequest":false,"CreatedAt":"2019-04-10T16:46:49","Actor":"CESARDELATORRE","Number":"3271","RawContent":null,"Title":"Default NuGet page goes to older preview instead the latest version (RC)","State":"open","Body":"At the NuGet site, when you try to go to https://www.nuget.org/packages/Microsoft.ML/\r\nit redirects to an older version (0.11) instead of the latest version (1.0.0-preview).\r\n\r\n![image](https://user-images.githubusercontent.com/1712635/55897527-8a3c0000-5b75-11e9-8b22-e68206f393b2.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3271","RelatedDescription":"Open issue \"Default NuGet page goes to older preview instead the latest version (RC)\" (#3271)"},{"Id":"431421527","IsPullRequest":false,"CreatedAt":"2019-04-10T10:19:13","Actor":"Pieter-1337","Number":"3270","RawContent":null,"Title":"Expected vector<R4> Got R4","State":"open","Body":"Hi, I am currently trying to create a Model with a regression trainer\r\n\r\nHowever it seems I am loading my data incorrectly how should I proceed to load my \"YearsExperience\" as a Vector<R4> instead of a regular R4\r\n\r\nSample of data: \r\nYearsExperience;Salary\r\n1.1;39343.00\r\n\r\nThe way I load the data as an IDataView object\r\n`   IDataView trainingDataView = mlContext.Data.LoadFromTextFile<SalaryData>\r\n               (\r\n                   path: \"Data/SalaryData.csv\", hasHeader: true, separatorChar: ';'\r\n               );\r\n`\r\n\r\nAlso I wonder is my pipeline correctly built? I am not sure about the mlContext.Transforms.Normalize(\"YearsOfExperience\") at the start\r\n\r\n`var pipeline = mlContext.Transforms.Normalize(\"YearsExperience\")\r\n                    .Append(mlContext.Transforms.Concatenate\r\n                    (\r\n                      \"Features\", \"YearsExperience\"  \r\n                    ))\r\n                    .AppendCacheCheckpoint(mlContext)\r\n                    .Append(mlContext.Regression.Trainers.StochasticDualCoordinateAscent(labelColumnName: \"Salary\", featureColumnName: \"YearsExperience\"));\r\n`","Url":"https://github.com/dotnet/machinelearning/issues/3270","RelatedDescription":"Open issue \"Expected vector<R4> Got R4\" (#3270)"},{"Id":"431390219","IsPullRequest":false,"CreatedAt":"2019-04-10T09:11:26","Actor":"PeterPann23","Number":"3269","RawContent":null,"Title":"Reading data files is possibly to restrictive","State":"open","Body":"### Issue\r\nReading a input file blocks a file from other processes from reading the same file.\r\n\r\nI'd suggest that the framework uses minimum restriction as to the codes least obtrusive available option. At the moment the interface does not allow the user to specify locking intention.\r\n\r\nThis may cause issues with those that train/ Analyse in parallel when there is no need for it. \r\n\r\n### Source code / logs\r\nA simle search shows FileStream Read locks without having specified the locking intend using the FileShare enumerator.\r\n\r\n\r\n```\r\n\\src\\Microsoft.ML.Core\\CommandLine\\CmdParser.cs(979):                using (FileStream file = new FileStream(fileName, FileMode.Open, FileAccess.Read))\r\n\\src\\Microsoft.ML.Core\\CommandLine\\CmdParser.cs(1050):                using (FileStream file = new FileStream(path, FileMode.Open, FileAccess.Read))\r\n\\src\\Microsoft.ML.Core\\Data\\IFileHandle.cs(192):                var stream = new FileStream(_fullPath, FileMode.Open, FileAccess.Read);\r\n\\src\\Microsoft.ML.Core\\Data\\Repository.cs(507):                stream = new FileStream(pathAbs, FileMode.Open, FileAccess.Read);\r\n\\src\\Microsoft.ML.Core\\Data\\Repository.cs(527):                    stream = new FileStream(pathTemp, FileMode.Open, FileAccess.Read);\r\n\\src\\Microsoft.ML.Core\\Utilities\\HybridMemoryStream.cs(166):            _overflowStream = new FileStream(overflowPath, FileMode.Open, FileAccess.ReadWrite,\r\n\\src\\Microsoft.ML.Data\\Utilities\\StreamUtils.cs(20):            return new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.Read);\r\n\\src\\Microsoft.ML.ResultProcessor\\ResultProcessor.cs(468):                    using (Stream strm = new FileStream(testArgs.InputModelFile, FileMode.Open, FileAccess.Read))\r\n\\src\\Microsoft.ML.FastTree\\Dataset\\FileObjectStore.cs(105):            this.objectCacheMemoryMappedFile = MemoryMappedFile.CreateFromFile(this.fileStreamName, FileMode.OpenOrCreate);\r\n\\src\\Microsoft.ML.FastTree\\Dataset\\FileObjectStore.cs(219):            this.objectCacheFileStream = new FileStream(this.fileStreamName, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite);\r\n\\src\\Microsoft.ML.FastTree\\TreeEnsembleFeaturizer.cs(583):                    using (Stream strm = new FileStream(args.TrainedModelFile, FileMode.Open, FileAccess.Read))\r\n\\src\\Microsoft.ML.TensorFlow\\TensorflowTransform.cs(667):                        using (var fs = new FileStream(fullPath, FileMode.Open))\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3269","RelatedDescription":"Open issue \"Reading data files is possibly to restrictive\" (#3269)"},{"Id":"431225574","IsPullRequest":true,"CreatedAt":"2019-04-09T23:02:17","Actor":"codemzs","Number":"3267","RawContent":null,"Title":"Remove Microsoft.ML prefix from namespaces in samples binary.","State":"closed","Body":"fixes #3266\r\nfixes #3205","Url":"https://github.com/dotnet/machinelearning/pull/3267","RelatedDescription":"Closed or merged PR \"Remove Microsoft.ML prefix from namespaces in samples binary.\" (#3267)"},{"Id":"431225243","IsPullRequest":false,"CreatedAt":"2019-04-09T23:02:17","Actor":"codemzs","Number":"3266","RawContent":null,"Title":"Remove Microsoft.ML prefix from namespaces in Samples binary","State":"closed","Body":"This forces the samples to include Microsoft.ML namespace.","Url":"https://github.com/dotnet/machinelearning/issues/3266","RelatedDescription":"Closed issue \"Remove Microsoft.ML prefix from namespaces in Samples binary\" (#3266)"},{"Id":"431219234","IsPullRequest":true,"CreatedAt":"2019-04-09T22:12:24","Actor":"sfilipi","Number":"3264","RawContent":null,"Title":"Release cherry picks for ","State":"open","Body":"Cherry picking the following PRs:\r\n\r\nhttps://github.com/dotnet/machinelearning/pull/3211\r\nhttps://github.com/dotnet/machinelearning/pull/3187\r\nhttps://github.com/dotnet/machinelearning/pull/3223\r\nhttps://github.com/dotnet/machinelearning/pull/3167","Url":"https://github.com/dotnet/machinelearning/pull/3264","RelatedDescription":"Open PR \"Release cherry picks for \" (#3264)"},{"Id":"431205203","IsPullRequest":true,"CreatedAt":"2019-04-09T21:29:12","Actor":"wschin","Number":"3263","RawContent":null,"Title":"Get back images as C# objects","State":"open","Body":"Fix #3162 by considering image type in our bridge code.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3263","RelatedDescription":"Open PR \"Get back images as C# objects\" (#3263)"},{"Id":"431083732","IsPullRequest":true,"CreatedAt":"2019-04-09T18:11:19","Actor":"codemzs","Number":"3259","RawContent":null,"Title":"Fix SDCA sample runtime exception.","State":"closed","Body":"fixes #3258","Url":"https://github.com/dotnet/machinelearning/pull/3259","RelatedDescription":"Closed or merged PR \"Fix SDCA sample runtime exception.\" (#3259)"},{"Id":"431083614","IsPullRequest":false,"CreatedAt":"2019-04-09T18:11:19","Actor":"codemzs","Number":"3258","RawContent":null,"Title":"Fix runtime exception in SDCA sample","State":"closed","Body":"Throws exception because it cannot find features and probability column. ","Url":"https://github.com/dotnet/machinelearning/issues/3258","RelatedDescription":"Closed issue \"Fix runtime exception in SDCA sample\" (#3258)"},{"Id":"431096074","IsPullRequest":false,"CreatedAt":"2019-04-09T17:47:17","Actor":"markusweimer","Number":"3260","RawContent":null,"Title":"Add a .vsconfig file","State":"open","Body":"Visual Studio 2019 allows for a new mechanism to communicate requirements for the build: `.vsconfig` files. They contain information about which workloads and features of Visual Studio must be installed for a given project. You can tread more about them in ths [this blog post](https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/).\r\n\r\nIt would be nice to have such a file in the ML.NET repository to make it easier for people to check out & build the code.","Url":"https://github.com/dotnet/machinelearning/issues/3260","RelatedDescription":"Open issue \"Add a .vsconfig file\" (#3260)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-11T05:30:40.2746171Z","RunDurationInMilliseconds":583}