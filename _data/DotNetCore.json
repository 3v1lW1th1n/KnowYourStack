{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null},{"Title":"January 2018 Preview of Quality Rollup","PublishedOn":"2018-01-27T00:52:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the January 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. ASP.NET Behavior change of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/26/january-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7148376542","Type":"IssuesEvent","CreatedAt":"2018-01-25T06:31:53","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/54","RelatedDescription":"Opened issue \"January 2018 Security and Quality Updates\" (#54) at dotnet/announcements","RelatedBody":"# January 2018 Security and Quality Updates\r\n\r\nThe following Security and Quality Updates were released this month. Known issues and resolved CVEs are also listed.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/)\r\n* [.NET Framework January 2018 Monthly Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications](https://github.com/dotnet/announcements/issues/53)\r\n* [CVE-2018-0786](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0786) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-0764) – Denial of Service when parsing XML documents\r\n\r\n## .NET Core\r\n\r\n* [.NET Core January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation\r\n* [CVE-2018-0764](https://github.com/dotnet/announcements/issues/52) – Denial of Service when parsing XML documents\r\n\r\n## .NET for UWP\r\n\r\n* [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/)\r\n* [CVE-2018-0786](https://github.com/dotnet/announcements/issues/51) – Security Feature Bypass in X509 Certificate Validation"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7327083099","Type":"PullRequestEvent","CreatedAt":"2018-03-04T05:00:43","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16672","RelatedDescription":"Merged pull request \"Update TraceLogging to use NULL-terminated strings instead of counted strings\" (#16672) at dotnet/coreclr","RelatedBody":"Contributes to #11939.\r\n\r\nWithin EventSource, TraceLogging events write counted strings while manifest-based events write NULL-terminated strings.  This change converts TraceLogging to write NULL-terminated strings so that only one format needs to be supported when writing events to EventPipe."},{"Id":"7327078874","Type":"PullRequestEvent","CreatedAt":"2018-03-04T04:56:44","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16704","RelatedDescription":"Merged pull request \"Fix Use of EventPipeConfiguration After it has Been Freed on Shutdown\" (#16704) at dotnet/coreclr","RelatedBody":"Fixes #16388."},{"Id":"7327078868","Type":"IssuesEvent","CreatedAt":"2018-03-04T04:56:44","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16388","RelatedDescription":"Closed issue \"UAF in EventPipe::Enabled during shutdown\" (#16388) at dotnet/coreclr","RelatedBody":"Following example triggers uaf in `EventPipe::Enabled` (with asan):\r\n```cs\r\nusing System;\r\nusing System.Threading.Tasks;\r\nusing System.Threading;\r\n\r\nnamespace race\r\n{\r\n    class Program\r\n    {\r\n        private static Task<string> DataLoadTask = null;\r\n\r\n        private static string DoWork()\r\n        {\r\n            Thread.Sleep(3000);\r\n            return \"abc\";\r\n        }\r\n\r\n        private static async void TestAsync()\r\n        {\r\n            DataLoadTask = Task.Factory.StartNew(DoWork);\r\n            var ret = await DataLoadTask;\r\n            Console.WriteLine(\"result string : \" + ret);\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            TestAsync();\r\n        }\r\n    }\r\n}\r\n```\r\nAsan report:\r\n```\r\n$ while [ 1 ] ; do ASAN_OPTIONS=\"symbolize=0 alloc_dealloc_mismatch=0 abort_on_error=1 detect_leaks=0\" ./corerun race.dll ; done\r\n==2166==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000013218 at pc 0x7f02a647de17 bp 0x7f02a1be1e30 sp 0x7f02a1be1e28\r\nREAD of size 1 at 0x604000013218 thread T5\r\n    #0 0x7f02a647de16 in bool VolatileLoad<bool>(bool const*) /media/kbaladurin/data/dotnet/forked/coreclr/src/inc/volatile.h:153:13\r\n    #1 0x7f02a66e0737 in EventPipe::Enabled() /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/eventpipe.cpp:433:30\r\n    #2 0x7f02a690c6c1 in Module::NotifyEtwLoadFinished(int) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/ceeload.cpp:319:9\r\n    #3 0x7f02a69a9ca4 in DomainAssembly::DeliverSyncEvents() /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/domainfile.cpp:2141:25\r\n    #4 0x7f02a69a327b in DomainFile::DoIncrementalLoad(FileLoadLevel) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/domainfile.cpp:549:9\r\n    #5 0x7f02a68d32c9 in AppDomain::TryIncrementalLoad(DomainFile*, FileLoadLevel, Wrapper<FileLoadLock*, &(void DoNothing<FileLoadLock*>(FileLoadLock*)), &FileLoadLock::HolderLeave, 0ul, &(int CompareDefault<FileLoadLock*>(FileLoadLock*, FileLoadLock*)), (HolderStackValidation)2, true>&) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/appdomain.cpp:5847:31\r\n    #6 0x7f02a68d1c49 in AppDomain::LoadDomainFile(FileLoadLock*, FileLoadLevel) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/appdomain.cpp:5779:21\r\n    #7 0x7f02a68d22ea in AppDomain::LoadDomainAssemblyInternal(AssemblySpec*, PEAssembly*, FileLoadLevel) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/appdomain.cpp:5609:40\r\n    #8 0x7f02a68c63e0 in AppDomain::LoadDomainAssembly(AssemblySpec*, PEAssembly*, FileLoadLevel) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/appdomain.cpp:5496:19\r\n    #9 0x7f02a6922638 in Module::LoadAssembly(AppDomain*, unsigned int, char const*, char const*) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/ceeload.cpp:5614:43\r\n    #10 0x7f02a68f9e9e in Assembly::FindModuleByTypeRef(Module*, unsigned int, Loader::LoadFlag, int*) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/assembly.cpp:1267:57\r\n    #11 0x7f02a69563e8 in ClassLoader::LoadTypeDefOrRefThrowing(Module*, unsigned int, ClassLoader::NotFoundAction, ClassLoader::PermitUninstantiatedFlag, unsigned int, ClassLoadLevel) /media/kbaladurin/data/dotnet/forked/coreclr/src/vm/clsload.cpp:3003:36\r\n```\r\nSeems like during `EventPipe::Shutdown` another thread calls `EventPipe::Enabled` after `s_pConfig` was deleted but before it will become `NULL`:\r\n```c++\r\nbool EventPipe::Enabled()\r\n{\r\n    LIMITED_METHOD_CONTRACT;\r\n\r\n    bool enabled = false;\r\n    if(s_pConfig != NULL)\r\n    {\r\n        enabled = s_pConfig->Enabled();\r\n    }\r\n\r\n    return enabled;\r\n}\r\n```\r\n`EventPipe::Shutdown:`\r\n```c++\r\nvoid EventPipe::Shutdown()\r\n{\r\n    CONTRACTL\r\n    {\r\n        NOTHROW;\r\n        GC_TRIGGERS;\r\n        MODE_ANY;\r\n    }\r\n    CONTRACTL_END;\r\n\r\n    // We are shutting down, so if diasabling EventPipe throws, we need to move along anyway\r\n    EX_TRY\r\n    {\r\n        Disable();\r\n    }\r\n    EX_CATCH { }\r\n    EX_END_CATCH(SwallowAllExceptions);\r\n\r\n    if(s_pConfig != NULL)\r\n    {\r\n        delete(s_pConfig);\r\n        s_pConfig = NULL;\r\n    }\r\n    if(s_pBufferManager != NULL)\r\n    {\r\n        delete(s_pBufferManager);\r\n        s_pBufferManager = NULL;\r\n    }\r\n}\r\n```\r\nMaybe we should use lock in `EventPipe::Enabled` and `EventPipe::Shutdown`.\r\n\r\n@jkotas @janvorli @brianrob"},{"Id":"7327014693","Type":"PullRequestEvent","CreatedAt":"2018-03-04T03:57:07","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16740","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to preview2-26304-02, preview2-26304-01, respectively (master)\" (#16740) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7326988707","Type":"PullRequestEvent","CreatedAt":"2018-03-04T03:32:43","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16739","RelatedDescription":"Merged pull request \"Update CoreClr to preview2-26304-01 (master)\" (#16739) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7326923100","Type":"PullRequestEvent","CreatedAt":"2018-03-04T02:32:07","Actor":"RussKeldorph","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16737","RelatedDescription":"Merged pull request \"Disable tests that fail to build\" (#16737) at dotnet/coreclr","RelatedBody":"These are failing with VS2017 Preview 1.0 [27502.1.d15.7].  Only the\r\nJIT\\Performance\\CodeQuality\\Span tests are failing in the official builds,\r\nbut the others fail for a reason I don't understand with VS Preview, so\r\nI'm including them here.\r\n\r\nFixes #16734"},{"Id":"7326883493","Type":"PullRequestEvent","CreatedAt":"2018-03-04T01:57:56","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16739","RelatedDescription":"Opened pull request \"Update CoreClr to preview2-26304-01 (master)\" (#16739) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7326880876","Type":"PullRequestEvent","CreatedAt":"2018-03-04T01:55:33","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16732","RelatedDescription":"Merged pull request \"Fix MemoryDebugView and override Memory.ToString similar to Span\" (#16732) at dotnet/coreclr","RelatedBody":"**TODO:** Mirror into corefx ~and add back ToString() to the ref + add tests.~\r\n\r\nRelated PR in corefx: https://github.com/dotnet/corefx/pull/27694\r\n\r\ncc @jkotas, @KrzysztofCwalina, @stephentoub, @pakrym, @khellang "},{"Id":"7326872268","Type":"PullRequestEvent","CreatedAt":"2018-03-04T01:48:08","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16718","RelatedDescription":"Merged pull request \"Remove StringSpanHelpers and start using MemoryExtensions\" (#16718) at dotnet/coreclr","RelatedBody":"cc @stephentoub, @jkotas, @tarekgh, @benaadams \r\n\r\nIgnore the change to src/jit/hwintrinsiclistxarch.h (it's from https://github.com/dotnet/coreclr/pull/16715)"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7325729112","Type":"IssuesEvent","CreatedAt":"2018-03-03T12:48:29","Actor":"kj415j45","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8721","RelatedDescription":"Opened issue \"Unable to build .NET 4.6 project with .NET Core 2.1.4 SDK\" (#8721) at dotnet/cli","RelatedBody":"A simular issue with #7494\r\n\r\n## Steps to reproduce\r\n1. Clone osupink/osu-download\r\n2. Open in VS Code\r\n3. In `Internal Terminal`, I run `dotnet build`\r\n## Expected  behavior\r\n~~Build Success~~\r\n## Actual behavior\r\nThe no locale version maybe: \r\n```\r\nMicrosoft.Common.CurrentVersion.targets(1124,5):\r\nerror MSB3644: The reference assemblies for framework \".NETFramework,Version=v4.6\" were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK or Targeting Pack installed. Note that assemblies will be resolved from the Global Assembly Cache (GAC) and will be used in place of reference assemblies. Therefore your assembly may not be correctly targeted for the framework you intend.\r\n```\r\n\r\nlocale(zh-cn) version:\r\n```\r\nPS C:\\Users\\91981\\Desktop\\osu-download> dotnet build\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 15.5.180.51428\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  Nothing to do. None of the projects specified contain packages to restore.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.4\\Microsoft.Common.CurrentVersion.targets(1124,5): error MSB3644: 未找到框架“.NETFramework,Version=v4.6”的引用程序集\r\n。若要解决此问题，请安装此框架版本的 SDK 或 Targeting Pack，或将应用程序的目标重新指向已装有 SDK 或 Targeting Pack 的框架版本。请注意，将从全局程序集缓存(GAC)解析程序集，并将使用这些程序集替换引用程序集。因此，程序集的目标可能未正确指向您所预期的框架。 [C:\\Users\\91981\\Desktop\\osu-download\\osu-download\\osu-download.csproj]\r\n\r\n生成失败。\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.4\\Microsoft.Common.CurrentVersion.targets(1124,5): error MSB3644: 未找到框架“.NETFramework,Version=v4.6”的引用程序集\r\n。若要解决此问题，请安装此框架版本的 SDK 或 Targeting Pack，或将应用程序的目标重新指向已装有 SDK 或 Targeting Pack 的框架版本。请注意，将从全局程序集缓存(GAC)解析程序集，并将使用这些程序集替换引用程序集。因此，程序集的目标可能未正确指向您所预期的框架。 [C:\\Users\\91981\\Desktop\\osu-download\\osu-download\\osu-download.csproj]\r\n    0 个警告\r\n    1 个错误\r\n\r\n已用时间 00:00:00.36\r\n```\r\n## Environment data\r\n```\r\n.NET 命令行工具 (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n\r\n```\r\n\r\n\r\n"},{"Id":"7325247667","Type":"IssuesEvent","CreatedAt":"2018-03-03T06:16:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8718","RelatedDescription":"Closed issue \"dotnet fail to publish\" (#8718) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1.I want to publish my company's asp.net core 2.0 project on linux centos 7.2.\r\n2.so the 2.0.3 sdk is installed by following the offical guidline.\r\n2.I execute \"dotnet publish '/data/companyproject.csproj' -c release -f netcoreapp2.0 -o '/out/dir' \" \r\n\r\n## Expected  behavior\r\npublish success, and I can see the files published in the '/out/dir' \r\n\r\n## Actual behavior\r\nan error shows at the end of the shell:\r\n**It was not possible to find any compatible framework version\r\n  The specified framework 'Microsoft.NETCore.App', version '1.0.0' was not found.\r\n    - Check application dependencies and target a framework version installed at:\r\n        /\r\n    - Alternatively, install the framework version '1.0.0'.**\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.0.3)\r\nProduct Information:\r\n Version:            2.0.3\r\n Commit SHA-1 hash:  eb1d5ee318\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.3/\r\nMicrosoft .NET Core Shared Framework Host\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\r\n\r\n\r\n\r\ninvestigation:\r\nafter the .net core sdk installed, I use \"dotnet new mvc\" ->\"dotnet restore\"->\"dotnet build\"->\"dotnet publish\", all of them work fine.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7325012533","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:07:48","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8720","RelatedDescription":"Opened issue \"Installing a final version of an SDK should remove preview versions\" (#8720) at dotnet/cli","RelatedBody":"@onovotny commented on [Fri Mar 02 2018](https://github.com/dotnet/core-setup/issues/3770)\n\nSee this thread:\r\n\r\nhttps://twitter.com/DamianEdwards/status/969762795926429696\r\n\r\nIssue is that after a while, users wind up with tons of preview SDK's (either due to direct install or by being chained into a VS Preview channel update). They never get uninstalled.\r\n\r\nInstalling the final version of an SDK should remove the corresponding preview versions as it's very unlikely that a user would intend on having the older previews alongside.\r\n\r\n/cc @nickcraver\r\n\n\n"},{"Id":"7324739923","Type":"IssuesEvent","CreatedAt":"2018-03-03T00:32:34","Actor":"rakeshsinghranchi","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8714","RelatedDescription":"Closed issue \"dotnet store command fails when --output path has whitespace \" (#8714) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create manifest csproj file as below : ( packages.csproj)\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n  </ItemGroup>\r\n</Project>\r\n2. Run command : \r\ndotnet store --manifest packages.csproj --runtime win10-x64 --framework netcoreapp2.1 --framework-version 2.1.0-preview1-26216-03 --output \"C:\\**Program Files**\\dotnet\\store\"\r\n\r\n## Expected  behavior\r\ndotnet store command executes successfully and provisions the nuget packages under c:\\program files\\dotnet\\\r\n\r\n## Actual behavior\r\ndotnet store command fails to execute : \r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ComposeStore.targets(269,5): error MSB3191: Unable to create directory \"C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\\". Access to the path 'C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.1\\' is denied. [C:\\Users\\raksingh\\packages.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.300-preview1-008174)\r\n\r\nProduct Information:\r\n Version:            2.1.300-preview1-008174\r\n Commit SHA-1 hash:  b8df89a54f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26216-03\r\n  Build    : f2c3216183d20416568a4bbf5bb7d153e826f153\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7325652191","Type":"IssuesEvent","CreatedAt":"2018-03-03T11:48:55","Actor":"isaac2004","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/544","RelatedDescription":"Closed issue \"DotNet Standard 2.0 Project downgraded to 1.6 and cannot update\" (#544) at dotnet/standard","RelatedBody":"I have a CL that was Standard 2.0 and after installing the 2.1 SDK it got downgraded somehow to 1.6 (.csproj still says 2.0). The application fails on build because of namespaces not available. When I try to upgrade through VS, I get this\r\n\r\n![capture](https://user-images.githubusercontent.com/8878502/31841261-baa2e134-b5b6-11e7-856d-2f8eeac5d88b.PNG)\r\n \r\nI am blocked to upgrade the package. If I try to upgrade via CLI, I get\r\n\r\n````\r\nPS C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper> dotnet add package NETStandard.Library --version 2.0.0\r\n  Writing C:\\Users\\Isaac\\AppData\\Local\\Temp\\tmp5E87.tmp\r\ninfo : Adding PackageReference for package 'NETStandard.Library' into project 'C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper\\YahooFantasyWrapper.csproj'.\r\nlog  : Restoring packages for C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper\\YahooFantasyWrapper.csproj...\r\ninfo : Package 'NETStandard.Library' is compatible with all the specified frameworks in project 'C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper\\YahooFantasyWrapper.csproj'.\r\nerror: Error while performing Update for package 'NETStandard.Library'. Cannot edit items in imported files -\r\nerror:   Item 'PackageReference' for 'NETStandard.Library' in Imported file 'C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.Sdk.DefaultItems.props'.\r\n````\r\nI imagine this has to do with me upgrading to 2.1, but I am unable to rollback in anyway. Do I need to uninstall 2.1 to have 2.0.0 work?\r\n\r\nHere is version and info output\r\n\r\n````\r\nPS C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper> dotnet --version\r\n2.1.0-preview1-007228\r\nPS C:\\Development\\YahooFantasyWrapper\\src\\YahooFantasyWrapper> dotnet --info\r\n.NET Command Line Tools (2.1.0-preview1-007228)\r\n\r\nProduct Information:\r\n Version:            2.1.0-preview1-007228\r\n Commit SHA-1 hash:  28a1f7e9d6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007228\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-25719-04\r\n  Build    : b5c917c0b24171ae27c7cfcfd2617b1088d41c11\r\n````"},{"Id":"7325056263","Type":"IssuesEvent","CreatedAt":"2018-03-03T03:40:33","Actor":"mperdeck","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/663","RelatedDescription":"Opened issue \"When running ASP.NET Core web site targeting net47 in IIS, dotnet.exe does not appear in process list\" (#663) at dotnet/standard","RelatedBody":"I just converted a large legacy site to Net Core. Because of some old code, I have to target net47 instead of netcoreapp2.0 / netstandard2.0.\r\n\r\nProblem is that when I run the site in IIS, it starts up correctly, but then I cannot attach the debugger. The process list (Debug | Attach to process) does not show the dotnet.exe process at all.\r\n\r\nTo investigate this:\r\n* I created a new ASP.NET Core web application in Visual Studio 2017 targeting netcoreapp2.0, \r\n* published it (dotnet publish) and \r\n* pointed my IIS web site to the published directory. \r\n\r\nAfter hitting the site, I was able to attach to the dotnet.exe process ok.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe shows up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\nI then retargeted it to net47 because that is what my site uses. \r\n* Because Microsoft.AspNetCore.All does not support net47, I replaced it with enough individual packages to make the site compile. \r\n* Published it (dotnet publish -f net47). \r\n* Pointed the IIS site to the new net47 published directory. \r\n\r\nI could load the site ok and navigate around. However, dotnet.exe no longer appeared in the process list.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe does NOT show up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>net47</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.0.*\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\n\r\nIs there any way I can debug a site running in IIS that targets the Net Framework?\r\n\r\n"},{"Id":"7314708657","Type":"IssuesEvent","CreatedAt":"2018-03-01T08:29:09","Actor":"abdullahsalem","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/662","RelatedDescription":"Opened issue \"Standardizing XLIFF\" (#662) at dotnet/standard","RelatedBody":"I share @valdisiljuconoks this interest: https://github.com/Microsoft/XLIFF2-Object-Model/issues/28, and I think it's a good direction to support this standardized file format for a localization process.\r\n"},{"Id":"7312130000","Type":"PullRequestEvent","CreatedAt":"2018-02-28T19:57:32","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/661","RelatedDescription":"Opened pull request \"Update BuildTools to preview2-02528-05 (master)\" (#661) at dotnet/standard","RelatedBody":""},{"Id":"7312017249","Type":"IssuesEvent","CreatedAt":"2018-02-28T19:36:13","Actor":"mwilton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/660","RelatedDescription":"Opened issue \"TimeZoneInfo for Samoa Standard Time doesn't match online documentation\" (#660) at dotnet/standard","RelatedBody":"Here are the properties of the Samoa Standard Time TimeZoneInfo object (+13):\r\n![image](https://user-images.githubusercontent.com/7872394/36808900-502351dc-1c7b-11e8-89ea-b0d9addaa71a.png)\r\n\r\nAnd here is Microsoft's online documentation (-11):\r\n![image](https://user-images.githubusercontent.com/7872394/36808960-75af3d62-1c7b-11e8-9e79-60ee13c891c5.png)\r\n\r\nWhich comes from:\r\nhttps://msdn.microsoft.com/en-us/library/ms912053(v=winembedded.10).aspx\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7327077885","Type":"PullRequestEvent","CreatedAt":"2018-03-04T04:55:46","Actor":"brianrob","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27622","RelatedDescription":"Merged pull request \"Use BuildTools Defaults for Nuget Versions\" (#27622) at dotnet/corefx","RelatedBody":"This removes manually specified Nuget required versions for the following packages:\r\n\r\n - System.Diagnostics.DiagnosticSource\r\n - System.Reflection.Metadata\r\n - System.Threading.Tasks.Dataflow\r\n\r\nThese packages don't install successfully with Nuget 2.8.6 because they have a netstandard dependency which is not supported on Nuget 2.8.6.  Per comments in #23843, we are going with the simple fix of increasing the required version to 2.12 which is the BuildTools default.  Thus, the actual code change is to use the default rather than specify 2.12 directly.\r\n\r\nFixes #23843."},{"Id":"7327077884","Type":"IssuesEvent","CreatedAt":"2018-03-04T04:55:46","Actor":"brianrob","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23843","RelatedDescription":"Closed issue \"DiagnosticSource does not install with nuget 2.8.6\" (#23843) at dotnet/corefx","RelatedBody":"DiagnosticSource [pkgproj](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/pkg/System.Diagnostics.DiagnosticSource.pkgproj#L6)  sets MinClientVersion to 2.8.6\r\n\r\n```\r\n  <PropertyGroup>\r\n    <!-- we need to be supported on pre-nuget-3 platforms (Dev12, Dev11, etc) -->\r\n    <MinClientVersion>2.8.6</MinClientVersion>\r\n  </PropertyGroup>\r\n```\r\n\r\nHowever nuget 2.8.6 does not support packages with netstandard target.: https://github.com/NuGet/Home/issues/3131\r\n\r\nMinimum version that supports them is 2.12.\r\n\r\nThe same problem is relevant for other packages that have 2.8.6 specified: https://github.com/dotnet/corefx/search?q=minClientVersion&type=Code&utf8=%E2%9C%93\r\n\r\nPlease advise what is the best way to fix that. Is there some default setting for minClientVersion?\r\n\r\n"},{"Id":"7327070397","Type":"PullRequestEvent","CreatedAt":"2018-03-04T04:48:20","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27651","RelatedDescription":"Merged pull request \"ValueTask adoption in System.IO.Pipelines\" (#27651) at dotnet/corefx","RelatedBody":"- Use the new IValueTaskSource support added to corefx\r\n- Implement IValueTaskSource on the defualt PipeReader and PipeWriter implementations.\r\n- Handle the case where there is a sync context and allow turning this behavior off to favor the specified schedulers\r\n\r\n\r\n/cc @pakrym @stephentoub \r\n\r\n~PS: I couldn't get it compiling so I assume that something was wrong with my build locally or the ref in corefx (I didn't try hard enough yet). I'm sending this out as a WIP so it can be reviewed. I still need to update tests accordingly~"},{"Id":"7327040446","Type":"PullRequestEvent","CreatedAt":"2018-03-04T04:21:23","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27699","RelatedDescription":"Opened pull request \"Added argument name to the exception\" (#27699) at dotnet/corefx","RelatedBody":"Fixes #27357 \r\n"},{"Id":"7327014914","Type":"PullRequestEvent","CreatedAt":"2018-03-04T03:57:18","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27698","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to preview2-26304-02, preview2-26304-01, respectively (master)\" (#27698) at dotnet/corefx","RelatedBody":""},{"Id":"7326980154","Type":"PullRequestEvent","CreatedAt":"2018-03-04T03:25:06","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27696","RelatedDescription":"Merged pull request \"Update CoreClr to preview2-26304-01 (master)\" (#27696) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7326265205","Type":"PullRequestEvent","CreatedAt":"2018-03-03T18:33:45","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25203","RelatedDescription":"Opened pull request \"Simplify the assert in BoundInterpolatedStringExpression\" (#25203) at dotnet/roslyn","RelatedBody":"Associated Issue #22869"},{"Id":"7325958059","Type":"PullRequestEvent","CreatedAt":"2018-03-03T15:25:33","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25151","RelatedDescription":"Merged pull request \"Enable integration tests\" (#25151) at dotnet/roslyn","RelatedBody":"Fixes #17631\r\nFixes #17634\r\nFixes #18295\r\n\r\nCloses #6587\r\nCloses #17640\r\nCloses #19232\r\nCloses #20219\r\n"},{"Id":"7325785380","Type":"IssuesEvent","CreatedAt":"2018-03-03T13:30:29","Actor":"Neme12","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25202","RelatedDescription":"Opened issue \"'Use block body' is broken with async\" (#25202) at dotnet/roslyn","RelatedBody":"```c#\r\nusing System.Threading.Tasks;\r\n\r\nclass C\r\n{\r\n    async Task M() => await Task.Yield();\r\n}\r\n```\r\n\r\nexpected behavior:\r\n```c#\r\n    async Task M()\r\n    {\r\n        await Task.Yield();\r\n    }\r\n```\r\n\r\nactual behavior:\r\n```c#\r\n    async Task M()\r\n    {\r\n        return await Task.Yield();\r\n    }\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7327034968","Type":"PullRequestEvent","CreatedAt":"2018-03-04T04:16:06","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5491","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5491) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324921588","Type":"PullRequestEvent","CreatedAt":"2018-03-03T02:08:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5490","RelatedDescription":"Merged pull request \"Update dependencies\" (#5490) at dotnet/corert","RelatedBody":""},{"Id":"7324825500","Type":"PullRequestEvent","CreatedAt":"2018-03-03T01:12:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5490","RelatedDescription":"Opened pull request \"Update dependencies\" (#5490) at dotnet/corert","RelatedBody":""},{"Id":"7324823065","Type":"PullRequestEvent","CreatedAt":"2018-03-03T01:11:26","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5489","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324796022","Type":"PullRequestEvent","CreatedAt":"2018-03-03T00:58:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5482","RelatedDescription":"Merged pull request \"Update buildtools\" (#5482) at dotnet/corert","RelatedBody":"Official build have been [failing](https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1433923) since the last buildtools update with\r\n\r\n```\r\n##[error]Required: 'SymbolServerType' input\r\n```\r\n\r\nI tried looking for `SymbolServerType` in CoreFX, buildtools, and in CoreFX build definitions, but found nothing so far. Going with a theory that this is something that existed, but doesn't anymore, and matching buildtoolsversion of CoreFX will fix that. If it won't, I have some more digging to do..."},{"Id":"7324660737","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:59:57","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5489","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5489) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324618913","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:43:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5485","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5485) at dotnet/corert","RelatedBody":""},{"Id":"7324618445","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:43:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5488","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5488) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7324496091","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:01:06","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5488","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5488) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7320572920","Type":"PullRequestEvent","CreatedAt":"2018-03-02T08:00:50","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2017","RelatedDescription":"Opened pull request \"Merge release/2.1 to release/2.1.1xx\" (#2017) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1 into release/2.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1-to-release/2.1.1xx\ngit reset --hard upstream/release/2.1.1xx\ngit merge upstream/release/2.1\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1-to-release/2.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7319493536","Type":"PullRequestEvent","CreatedAt":"2018-03-02T01:08:10","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2016","RelatedDescription":"Opened pull request \"Port fix for mismatched NuGet versions to release/2.1.1xx.\" (#2016) at dotnet/sdk","RelatedBody":"This commit ports the fix for the mismatched NuGet version numbers used by the\r\nSDK.\r\n\r\nSee https://github.com/dotnet/sdk/pull/1831 for the change into master."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"969672659385700354","CreatedAt":"2018-03-02T20:35:52+00:00","UserScreenname":"dotnet","Text":"It's not too late... Happening now: Miguel de Icaza's Developer Tools Reddit AMA. Ask him anything ab out what we'v… https://t.co/Ct6QA3l0FL","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":20,"FavoriteCount":11,"RawContent":null},{"Id":"968893314832285697","CreatedAt":"2018-02-28T16:59:02+00:00","UserScreenname":"dotnet","Text":"And by \"check out\" @terrajobst really means: please subscribe :-) https://t.co/O2IOMK3aAU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-03-04T05:30:18.7560217Z","RunDurationInMilliseconds":7612}