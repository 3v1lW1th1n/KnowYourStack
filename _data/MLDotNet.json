{"Data":{"GitHub":{"Issues":[{"Id":"561328863","IsPullRequest":true,"CreatedAt":"2020-02-07T04:56:30","Actor":"Lynx1820","Number":"4805","RawContent":null,"Title":"TokenizingByCharacters export to Onnx","State":"closed","Body":"- Transformer that tokenizes by character and returns the characters (as uint16)\r\n- Since there's not a comparable onnx operator, a label encoder is used to map a string token to it's corresponding character value.  This will unfortunately make the model much larger, since 65535 values have to be saved as a mapping guide for label encoder. ","Url":"https://github.com/dotnet/machinelearning/pull/4805","RelatedDescription":"Closed or merged PR \"TokenizingByCharacters export to Onnx\" (#4805)"},{"Id":"561360837","IsPullRequest":true,"CreatedAt":"2020-02-07T01:05:14","Actor":"gvashishtha","Number":"4806","RawContent":null,"Title":"Add link to February survey","State":"open","Body":"Adds a link to ML.NET survey for February\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4806","RelatedDescription":"Open PR \"Add link to February survey\" (#4806)"},{"Id":"561023816","IsPullRequest":true,"CreatedAt":"2020-02-06T23:03:41","Actor":"sharwell","Number":"4793","RawContent":null,"Title":"Enable VSTHRD105 (Avoid method overloads that assume TaskScheduler.Current)","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4793","RelatedDescription":"Closed or merged PR \"Enable VSTHRD105 (Avoid method overloads that assume TaskScheduler.Current)\" (#4793)"},{"Id":"561022883","IsPullRequest":true,"CreatedAt":"2020-02-06T23:03:27","Actor":"sharwell","Number":"4791","RawContent":null,"Title":"Enable VSTHRD100 (Avoid async void methods)","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4791","RelatedDescription":"Closed or merged PR \"Enable VSTHRD100 (Avoid async void methods)\" (#4791)"},{"Id":"561281068","IsPullRequest":true,"CreatedAt":"2020-02-06T23:03:02","Actor":"sharwell","Number":"4802","RawContent":null,"Title":"Extract IsTestMethod to a shared analyzer helper","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4802","RelatedDescription":"Closed or merged PR \"Extract IsTestMethod to a shared analyzer helper\" (#4802)"},{"Id":"561320990","IsPullRequest":true,"CreatedAt":"2020-02-06T23:01:47","Actor":"pieths","Number":"4804","RawContent":null,"Title":"Fix issue with the onnx export string initializer in OptionalColumnTransform","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4804","RelatedDescription":"Open PR \"Fix issue with the onnx export string initializer in OptionalColumnTransform\" (#4804)"},{"Id":"561235457","IsPullRequest":true,"CreatedAt":"2020-02-06T21:57:59","Actor":"Lynx1820","Number":"4797","RawContent":null,"Title":"Fix for KeyToValue Onnx export ","State":"closed","Body":"- Like for ValueToKey,  mapping int64 -> int64 needs casting\r\n- Cast float values back to doubles, when the valuetype is expected to be a double \r\n\r\nThe current KeyToValue test makes it hard to test different value types, so I added KeyToValue to the ValueToKey pipeline, which is more flexible. Comparing the keys checks ValueToKey and comparing the value output checks KeyToValue. If this test is ok, I can remove the current KeyToValue test. Otherwise, I can modify the KeyToValue test to follow a similar format.   ","Url":"https://github.com/dotnet/machinelearning/pull/4797","RelatedDescription":"Closed or merged PR \"Fix for KeyToValue Onnx export \" (#4797)"},{"Id":"561282487","IsPullRequest":true,"CreatedAt":"2020-02-06T21:32:51","Actor":"sharwell","Number":"4803","RawContent":null,"Title":"Implement MSML_RelaxTestNaming suppressor for VSTHRD200","State":"open","Body":"ðŸš§ Builds on #4801 and #4802.\r\n\r\nAllow asynchronous test methods to omit the 'Async' suffix.","Url":"https://github.com/dotnet/machinelearning/pull/4803","RelatedDescription":"Open PR \"Implement MSML_RelaxTestNaming suppressor for VSTHRD200\" (#4803)"},{"Id":"561279039","IsPullRequest":true,"CreatedAt":"2020-02-06T21:26:02","Actor":"sharwell","Number":"4801","RawContent":null,"Title":"Enable RS1026 (Enable concurrent execution)","State":"open","Body":"ðŸš§ Builds on #4800","Url":"https://github.com/dotnet/machinelearning/pull/4801","RelatedDescription":"Open PR \"Enable RS1026 (Enable concurrent execution)\" (#4801)"},{"Id":"561278295","IsPullRequest":true,"CreatedAt":"2020-02-06T21:24:27","Actor":"sharwell","Number":"4800","RawContent":null,"Title":"Enable RS1025 (Configure generated code analysis)","State":"open","Body":"ðŸš§ Builds on #4799","Url":"https://github.com/dotnet/machinelearning/pull/4800","RelatedDescription":"Open PR \"Enable RS1025 (Configure generated code analysis)\" (#4800)"},{"Id":"561277741","IsPullRequest":true,"CreatedAt":"2020-02-06T21:23:16","Actor":"sharwell","Number":"4799","RawContent":null,"Title":"Enable RS1024 (Compare symbols correctly)","State":"open","Body":"ðŸš§ Builds on #4798","Url":"https://github.com/dotnet/machinelearning/pull/4799","RelatedDescription":"Open PR \"Enable RS1024 (Compare symbols correctly)\" (#4799)"},{"Id":"561277395","IsPullRequest":true,"CreatedAt":"2020-02-06T21:22:35","Actor":"sharwell","Number":"4798","RawContent":null,"Title":"Update to Microsoft.CodeAnalysis 3.3.1","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4798","RelatedDescription":"Open PR \"Update to Microsoft.CodeAnalysis 3.3.1\" (#4798)"},{"Id":"561010856","IsPullRequest":true,"CreatedAt":"2020-02-06T20:24:17","Actor":"sharwell","Number":"4790","RawContent":null,"Title":"Install threading analyzers","State":"closed","Body":"Rules with existing violations have been disabled.","Url":"https://github.com/dotnet/machinelearning/pull/4790","RelatedDescription":"Closed or merged PR \"Install threading analyzers\" (#4790)"},{"Id":"560072070","IsPullRequest":true,"CreatedAt":"2020-02-06T19:35:45","Actor":"frank-dong-ms","Number":"4782","RawContent":null,"Title":"fix some Baselinetest and add missing Done()","State":"closed","Body":"1. add missing baseline file for compare\r\n2. use allow mismatch in certain tests that only intend compare value and return result but not fail test\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4782","RelatedDescription":"Closed or merged PR \"fix some Baselinetest and add missing Done()\" (#4782)"},{"Id":"561209093","IsPullRequest":false,"CreatedAt":"2020-02-06T19:04:07","Actor":"gvashishtha","Number":"4796","RawContent":null,"Title":"See also xref  is broken","State":"open","Body":"The xref under \"See also\" appears as plaintext, incorrectly\n\n---\n#### Document Details\n\nâš  *Do not edit this section. It is required for docs.microsoft.com âžŸ GitHub issue linking.*\n\n* ID: 16bcaa45-114e-32f9-c72c-61339bf5aa65\n* Version Independent ID: 28a14833-c964-a8ef-aabe-7118e0ffe48c\n* Content: [ApproximatedKernelMappingEstimator Class (Microsoft.ML.Transforms)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.approximatedkernelmappingestimator?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms/ApproximatedKernelMappingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms/ApproximatedKernelMappingEstimator.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4796","RelatedDescription":"Open issue \"See also xref  is broken\" (#4796)"},{"Id":"560078228","IsPullRequest":true,"CreatedAt":"2020-02-06T18:57:28","Actor":"michaelgsharp","Number":"4783","RawContent":null,"Title":"Onnx Export change to allow for multiple rows","State":"closed","Body":"Changed ONNX export from always exporting the dimensions as 1 to -1. This lets ONNX Runtime determine the dimension when the data is passed to it, allowing for batching to be done if desired. ML.NET doesn't support batching, but this allows the model to be run directly in ORT using batching while still supporting the streaming approach that ML.NET uses.","Url":"https://github.com/dotnet/machinelearning/pull/4783","RelatedDescription":"Closed or merged PR \"Onnx Export change to allow for multiple rows\" (#4783)"},{"Id":"559501086","IsPullRequest":true,"CreatedAt":"2020-02-06T18:02:14","Actor":"frank-dong-ms","Number":"4776","RawContent":null,"Title":"build and test failure due to download resource fail","State":"closed","Body":"facing build and test failure due to download resource fail:\r\nhttps://microsoft.sharepoint.com/teams/ML.NET/_layouts/OneNote.aspx?id=%2Fteams%2FML.NET%2FSiteAssets%2FML.NET%20Notebook&wd=target%28Tests.one%7C5E713C2E-6DCF-4AA3-9071-69CBBAF48985%2FTest%20Network%20Issue%7CDBE36B97-0518-43C2-8C3F-A7D2A461FBDE%2F%29\r\n\r\n\r\nthis fix including:\r\n1. add retry and delay for resource downloading when run test\r\n2. disable parallel when restore nuget package, this can prevent restore consume too much connections from vm and cause the following download to hanging, restore itself has retry already\r\n3. add retry for download resource from Internet when build, if disable parallel when restore can prevent the network glitch this can possibility be unnecessary\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4776","RelatedDescription":"Closed or merged PR \"build and test failure due to download resource fail\" (#4776)"},{"Id":"561109542","IsPullRequest":false,"CreatedAt":"2020-02-06T16:02:45","Actor":"patmaasridharan","Number":"4795","RawContent":null,"Title":"Microsoft.ML.OnnxRuntime.OnnxRuntimeException: 1 : FAIL : Failed to find kernel for Neg","State":"open","Body":"### System information\r\nWindows 10\r\nMicrosoft.ML v.15.0/preview\r\nMicrosoft.Ml.OnnxRuntime v1.1.1\r\n.NET Framework 4.8\r\n\r\n### Issue\r\nI amtrying to run prediction engine using a pretrained .onnx model in ML.net.  The Onnx model is Unet architecture and I used latest master build of ONNX and ONNXRUNTIME for creating .onnx file.\r\n\r\nOn calling \"mlContext.Transforms.ApplyOnnxModel\" i get RuntimeException (refer to figure attached)\r\n\r\n![mlerror](https://user-images.githubusercontent.com/54295010/73954140-b1806c80-4901-11ea-95b3-8fd3a19143ed.PNG)\r\n\r\nI had the same error in Onnxrumtime beacuse of int64 support unavailability. Now they have added this support. Refer to these links \r\nhttps://github.com/microsoft/onnxruntime/issues/2875\r\nhttps://github.com/microsoft/onnxruntime/pull/2945\r\n\r\n\r\nI am not sure if its same problem. Any leads on this will be appreciable :)\r\n\r\nThank you.","Url":"https://github.com/dotnet/machinelearning/issues/4795","RelatedDescription":"Open issue \"Microsoft.ML.OnnxRuntime.OnnxRuntimeException: 1 : FAIL : Failed to find kernel for Neg\" (#4795)"},{"Id":"561024392","IsPullRequest":true,"CreatedAt":"2020-02-06T13:48:34","Actor":"sharwell","Number":"4794","RawContent":null,"Title":"Enable VSTHRD200 (Use \"Async\" suffix for async methods)","State":"open","Body":"This rule remains disabled in test code to avoid requiring test methods to be renamed.\r\n\r\nðŸš§ Builds on #4793\r\n\r\nBlocked on #4803","Url":"https://github.com/dotnet/machinelearning/pull/4794","RelatedDescription":"Open PR \"Enable VSTHRD200 (Use \"Async\" suffix for async methods)\" (#4794)"},{"Id":"561023379","IsPullRequest":true,"CreatedAt":"2020-02-06T13:46:47","Actor":"sharwell","Number":"4792","RawContent":null,"Title":"Enable VSTHRD103 (Call async methods when in an async method)","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4792","RelatedDescription":"Open PR \"Enable VSTHRD103 (Call async methods when in an async method)\" (#4792)"},{"Id":"561008224","IsPullRequest":false,"CreatedAt":"2020-02-06T13:20:25","Actor":"mstfbl","Number":"4789","RawContent":null,"Title":"BaseTestPredictorsMaml.Run_Test() is broken","State":"open","Body":"I am trying to test a previously saved LightGBM model to see if it outputs expected baseline figures. However, the baseline that `Run_Test()` generates is as follows:\r\n\r\n> ***** Unexpected failure. Please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n> \r\n> ***** Error log has been saved to 'C:\\Users\\mubal\\AppData\\Local\\Temp\\TLC\\Error_20200206_193056_51208d31-0f5c-4ff9-b7a8-7f853d81fc14.log', please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n> \r\n> ===== Begin detailed dump =====\r\n> \r\n> (1) Unexpected exception: Assert failed: Assertion Failed\r\n> \r\n> Expected: True\r\n> \r\n> Actual:   False, 'Xunit.Sdk.TrueException'\r\n> \r\n>    at Xunit.Assert.True(Nullable`1 condition, String userMessage) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\BooleanAsserts.cs:line 95\r\n> \r\n>    at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.AssertHandler(String msg, IExceptionContext ectx) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.TestFramework\\GlobalBase.cs:line 71\r\n> \r\n>    at Microsoft.ML.Runtime.Contracts.DbgFailCore(String msg, IExceptionContext ctx) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 781\r\n> \r\n>    at Microsoft.ML.Runtime.Contracts.DbgFail(IExceptionContext ctx) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 790\r\n> \r\n>    at Microsoft.ML.Runtime.Contracts.Assert(Boolean f) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 839\r\n> \r\n>    at Microsoft.ML.Runtime.ComponentCatalog.ParseArguments(IHostEnvironment env, Object args, String settings, String name) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 1067\r\n> \r\n>    at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes](IHostEnvironment env, Type signatureType, TRes& result, String name, String options, Object[] extra) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 1036\r\n> \r\n>    at Microsoft.ML.Runtime.ComponentCatalog.TryCreateInstance[TRes,TSig](IHostEnvironment env, TRes& result, String name, String options, Object[] extra) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\ComponentModel\\ComponentCatalog.cs:line 993\r\n> \r\n>    at Microsoft.ML.Tools.Maml.MainCore(IHostEnvironment env, String args, Boolean alwaysPrintStacktrace) in C:\\Users\\mubal\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Maml\\MAML.cs:line 129\r\n> \r\n> ====== End detailed dump =====\r\n\r\n\r\nMy code where this happens is:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/0ea84a6f3fb2cde29f70ec638c3f06317028225e/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs#L489-L511\r\n\r\nI've confirmed that my model and and baseline files exist, and that my model is valid.\r\n\r\nPerhaps this issue was known to previous ML.NET developers as Run_Test() and its dependent Run_TrainSaveTest() are not used anywhere in the codebase. However, this is the only way (as far as I know) i n which one can test the baseline output of a model with `TestDatasets` and `TestLearners`.\r\n\r\nBecause Run_Test() is broken, Run_TrainSaveTest() is also broken.\r\n\r\nPS: I discovered this while trying to add a unit test in my PR #4695  to check the run-time behavior of LightGBM does not change by modifying the flags used by LightGBM with CursOpt.AllFeatures, and that this change does not affect the features extracted during validation. ","Url":"https://github.com/dotnet/machinelearning/issues/4789","RelatedDescription":"Open issue \"BaseTestPredictorsMaml.Run_Test() is broken\" (#4789)"},{"Id":"560786071","IsPullRequest":false,"CreatedAt":"2020-02-06T05:19:48","Actor":"frank-dong-ms","Number":"4788","RawContent":null,"Title":"Enable parallelism in Windows test agent if parallelism not causing network issue","State":"open","Body":"Related to this PR: https://github.com/dotnet/machinelearning/pull/4776 \r\n\r\nWe met download/restore timeout issue on some build agent, one possible reason cause this is restore consuming too much connections and affected the network performance.\r\n\r\nIn this PR we are trying to disable parallelism in all test agents to see if we mitigate the issue, otherwise we should enable parallelism again in windows test agent as according to @sharwell 's experience parallelism should not cause problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4788","RelatedDescription":"Open issue \"Enable parallelism in Windows test agent if parallelism not causing network issue\" (#4788)"},{"Id":"560706894","IsPullRequest":true,"CreatedAt":"2020-02-06T00:22:14","Actor":"harishsk","Number":"4787","RawContent":null,"Title":"Release notes for v1.5.0-preview2","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4787","RelatedDescription":"Open PR \"Release notes for v1.5.0-preview2\" (#4787)"},{"Id":"560603758","IsPullRequest":true,"CreatedAt":"2020-02-05T21:26:05","Actor":"ganik","Number":"4786","RawContent":null,"Title":"Fix onnx output name for GcnTransform","State":"closed","Body":"Fixed typo in GcnTransform SaveAsOnnx(..) where input column name is used instead of output one.","Url":"https://github.com/dotnet/machinelearning/pull/4786","RelatedDescription":"Closed or merged PR \"Fix onnx output name for GcnTransform\" (#4786)"},{"Id":"560528538","IsPullRequest":true,"CreatedAt":"2020-02-05T17:43:08","Actor":"mstfbl","Number":"4785","RawContent":null,"Title":"Added baselines for the TestDatasets.breastCancerPipeMissing dataset, and their unit tests","State":"open","Body":"Related to Issue #4681 and PR #4695. \r\n\r\nThis PR adds the baseline figures for the `TestDatasets.breastCancerPipeMissing` dataset (which is the  same dataset as `TestDatasets.breastCancerPipe` but without missing values due to the `NAHandle` transformer), and adds these baseline figures to the required tests in `TestPredictors.cs`.\r\n\r\nThe tests that these baselines satisfy are: \r\n\r\n- `LightGBMClassificationTest`, \r\n- `GossLightGBMTest`, \r\n- `DartLightGBMTest`, \r\n- `FastTreeBinaryClassificationTest`, \r\n- `FastTreeHighMinDocsTest`\r\n- `MulticlassNaiveBayes ` \r\n\r\nThese tests are also originally the only unit tests that utilize `TestDatasets.breastCancerPipe`.\r\n\r\nSince the `TestDatasets.breastCancerPipeMissing` dataset does not contain missing `?` values, the change in PR #4695 of allowing `CursOpt.AllFeatures` will not impact the test cases mentioned above.\r\n\r\n**Edit: ** In the last sentence above, I mean that since there are no missing values in `TestDatasets.breastCancerPipeMissing`, these datasets are better suited to test these LightGbm tests as `CursOpt.AllFeatures` combined with the `HandleMissingValues` flag in `LightGbmTrainerBase.cs` introduce multiple modifiers to the case of handling missing values, which this `TestDatasets.breastCancerPipeMissing` dataset is **not** impacted by.","Url":"https://github.com/dotnet/machinelearning/pull/4785","RelatedDescription":"Open PR \"Added baselines for the TestDatasets.breastCancerPipeMissing dataset, and their unit tests\" (#4785)"},{"Id":"559978194","IsPullRequest":true,"CreatedAt":"2020-02-05T06:25:56","Actor":"sharwell","Number":"4780","RawContent":null,"Title":"Enable cnr test","State":"closed","Body":"This is a test to demonstrate correct baselines in #4569 ","Url":"https://github.com/dotnet/machinelearning/pull/4780","RelatedDescription":"Closed or merged PR \"Enable cnr test\" (#4780)"},{"Id":"560012292","IsPullRequest":true,"CreatedAt":"2020-02-04T22:17:05","Actor":"Lynx1820","Number":"4781","RawContent":null,"Title":"TextNormalizing export to Onnx ","State":"open","Body":"- can, at the moment, only handle case changing options\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4781","RelatedDescription":"Open PR \"TextNormalizing export to Onnx \" (#4781)"},{"Id":"559928923","IsPullRequest":true,"CreatedAt":"2020-02-04T20:07:03","Actor":"sharwell","Number":"4779","RawContent":null,"Title":"Fix incorrect SynchronizationContext use in TestSweeper","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4779","RelatedDescription":"Closed or merged PR \"Fix incorrect SynchronizationContext use in TestSweeper\" (#4779)"},{"Id":"559827625","IsPullRequest":false,"CreatedAt":"2020-02-04T16:19:13","Actor":"gartangh","Number":"4778","RawContent":null,"Title":"Re-training an ImageClassificationTrainer","State":"open","Body":"### System information\r\n\r\n- **OS version**: Windows 10 Pro 18363\r\n- **.NET version**: Core 2.1\r\n- **Platform**: x64\r\n- **ML.NET version**: 0.15-preview\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI started working from [this example](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.visioncatalog.imageclassification?view=ml-dotnet#Microsoft_ML_VisionCatalog_ImageClassification_Microsoft_ML_MulticlassClassificationCatalog_MulticlassClassificationTrainers_Microsoft_ML_Vision_ImageClassificationTrainer_Options_), to perform multiclass classification using transfer learning.\r\nTraining, saving, loading, and consuming the model works as intended.\r\nNow I am trying to train further on that trained model (re-training), using these 2 steps:\r\n  * [Extract pre-trained model parameters](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net#re-train-model)\r\n  * [Re-train model](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net#re-train-model)\r\n\r\n  Similar to those steps, I came up with this piece of code:\r\n\r\n```csharp\r\n // Extract trained model parameters\r\nImageClassificationModelParameters originalParameters = ((ISingleFeaturePredictionTransformer<object>)trainedModel).Model as ImageClassificationModelParameters;\r\n// Retrain model\r\nMulticlassPredictionTransformer<ImageClassificationModelParameters> trainedModelFurther = mlContext.MulticlassClassification.Trainers.ImageClassification().Fit(trainImages, originalParameters);\r\n```\r\n\r\n- **What happened?**\r\nAt the end of the last line, the method `Fit(IDataView, ImageClassificationModelParameters)` does not exist ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.vision.imageclassificationtrainer?view=ml-dotnet#methods)).\r\n\r\n- **What did you expect?**\r\n  * First of all, I expected a similar method as `Fit(IDataView, LinearModelParameters)` in `OnlineGradientDescentTrainer` ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.onlinelineartrainer-2.fit?view=ml-dotnet#Microsoft_ML_Trainers_OnlineLinearTrainer_2_Fit_Microsoft_ML_IDataView_Microsoft_ML_Trainers_LinearModelParameters_)), `Fit(IDataView, MaximumEntropyModelParameters)` in `LbfgsMaximumEntropyMulticlassTrainer` ([docs](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.lbfgsmaximumentropymulticlasstrainer.fit?view=ml-dotnet#Microsoft_ML_Trainers_LbfgsMaximumEntropyMulticlassTrainer_Fit_Microsoft_ML_IDataView_Microsoft_ML_Trainers_MaximumEntropyModelParameters_)), or other trainers to exist.\r\nI believe the `ImageClassificationTrainer` makes use of an `LbfgsMaximumEntropyMulticlassTrainer` behind the scenes, to classify the extracted features from the images.\r\n\r\n  * Secondly (unrelated), the method `Fit(IDataView, IDataView)` in `ImageClassificationTrainer` seems unnecessary, as you can already specify the validation set (or a fraction of the training set to use for validation) in `ImageClassificationTrainer.Options`.\r\n\r\n### Question\r\n\r\nIs it possible to re-train this model on new data, maybe using some extra steps to convert the `ImageClassificationTrainer` to an `LbfgsMaximumEntropyMulticlassTrainer`? If not, when is this functionality expected?","Url":"https://github.com/dotnet/machinelearning/issues/4778","RelatedDescription":"Open issue \"Re-training an ImageClassificationTrainer\" (#4778)"},{"Id":"559700004","IsPullRequest":false,"CreatedAt":"2020-02-04T12:52:23","Actor":"Vijay27anand","Number":"4777","RawContent":null,"Title":"How to determine optimal number of clusters with K-Mean","State":"open","Body":"### System information\r\n\r\nML.NET 1.4.0\r\n\r\n### Issue\r\n\r\nI need to know how to find optimal number of clusters for K-Mean for the dataset, there are some methods that can be used like Silhouette Method or Gap analysis or Elbow methods. Does ML.NET have any API that i can use for identifying optimal K for the dataset or any way i can find.  Attaching my dataset also. It will be very helpful for my use case.\r\n\r\n[InputforClustering.xlsx](https://github.com/dotnet/machinelearning/files/4153355/InputforClustering.xlsx)\r\n\r\n\r\n### Source code / logs\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4777","RelatedDescription":"Open issue \"How to determine optimal number of clusters with K-Mean\" (#4777)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-07T05:30:41.7455048Z","RunDurationInMilliseconds":871}