{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7781981177","Type":"PullRequestEvent","CreatedAt":"2018-06-06T03:40:13","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18188","RelatedDescription":"Merged pull request \"Add instructions for making idl file changes\" (#18188) at dotnet/coreclr","RelatedBody":"@davmason - do these instructions look accurate? I think you were the last person to do this operation in the profiler space\r\n\r\ncc @bobuva @dotnet/dotnet-diag "},{"Id":"7781841496","Type":"PullRequestEvent","CreatedAt":"2018-06-06T02:47:52","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18322","RelatedDescription":"Opened pull request \"Allow ILCodeVersion to fallback to default IL\" (#18322) at dotnet/coreclr","RelatedBody":"For compat with profilers that used our APIs in unexpected ways we can allow\r\nthe ILCodeVersion to fallback to the default IL code when no IL was explicitly\r\ngiven.\r\n\r\nIssue: https://github.com/dotnet/core/issues/1622\r\n\r\nPTAL @kouvel \r\n\r\n"},{"Id":"7781553101","Type":"IssuesEvent","CreatedAt":"2018-06-06T00:59:29","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18321","RelatedDescription":"Opened issue \"setup-stress-dependencies.cmd failing\" (#18321) at dotnet/coreclr","RelatedBody":"This is causing x86 GCStress testing to fail.\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x86_checked_windows_nt_gcstress0xc/\r\n\r\ne.g.,\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x86_checked_windows_nt_gcstress0xc/83/consoleText\r\n```\r\nDownloading CoreDisTools package\r\n\"D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\..\\Tools\\dotnetcli\\dotnet.exe \" restore \"D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\\\src\\Common\\stress_dependencies\\stress_dependencies.csproj\" --source https://dotnet.myget.org/F/dotnet-core/ --packages \"D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\..\\Packages\"\r\n  Restoring packages for D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\src\\Common\\stress_dependencies\\stress_dependencies.csproj...\r\n  Installing Microsoft.NETCore.CoreDisTools 1.0.1-prerelease-00003.\r\n  Generating MSBuild file D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\src\\Common\\stress_dependencies\\obj\\stress_dependencies.csproj.nuget.g.props.\r\n  Generating MSBuild file D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\src\\Common\\stress_dependencies\\obj\\stress_dependencies.csproj.nuget.g.targets.\r\n  Restore completed in 1.38 sec for D:\\j\\workspace\\x86_checked_w---e5963ece\\tests\\src\\Common\\stress_dependencies\\stress_dependencies.csproj.\r\nLocating coredistools.dll\r\nCoreDisTools library path: \r\nFailed to locate the downloaded library: \r\n```\r\n"},{"Id":"7781549853","Type":"PullRequestEvent","CreatedAt":"2018-06-06T00:58:23","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18313","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#18313) at dotnet/coreclr","RelatedBody":null},{"Id":"7781482066","Type":"PullRequestEvent","CreatedAt":"2018-06-06T00:31:32","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18303","RelatedDescription":"Merged pull request \"Use the actual type of LOCKADD's data operand\" (#18303) at dotnet/coreclr","RelatedBody":"The data operand can theoretically be a small int so we need to use its actual type to determine instruction size.\r\n\r\nIn practice this issue does not seem to happen as the importer is pretty insistent in spilling interlocked arguments to lclvars that have the proper type. Even when the data argument is already a small int lclvar (e.g. short method argument) this still doesn't cause problems because there's a cast between the method argument and LOCKADD."},{"Id":"7781480635","Type":"IssuesEvent","CreatedAt":"2018-06-06T00:31:00","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14557","RelatedDescription":"Closed issue \"Modify interlocked nodes to take an indirection\" (#14557) at dotnet/coreclr","RelatedBody":"The op1 of an interlocked instruction is an address. The instructions implicitly do an indirection. This makes sense because interlocked instructions are fundamentally operands on  memory locations. However, this complicates codegen. First, because op1 doesn't hold the type of the memory location (see issues #14539), the type must either be on the interlocked instruction, which is problematic if the node isn't actually producing a value, OR we must use the type of op2 (which is what is currently done for XARCH). Second, because `emitter::emitInsBinary()` expects to see an indirection, we create one to pass to that method (https://github.com/dotnet/coreclr/blob/master/src/jit/codegenxarch.cpp#L3703).\r\nIt would probably be better to simply redefine these nodes to take a value (i.e. an indirection of a memory location) instead of an address."},{"Id":"7781446711","Type":"IssuesEvent","CreatedAt":"2018-06-06T00:18:02","Actor":"jeremymeng","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18314","RelatedDescription":"Closed issue \"[perfcollect] better way to download crossgen to resolve symbols\" (#18314) at dotnet/coreclr","RelatedBody":"Currently users have to manually download and patch their Linux system before running perfcollect script.  It involves multiple steps as described at https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/linux-performance-tracing.md#resolving-framework-symbols.\r\n\r\nIt would be great if a matching crossgen can be downloaded automatically before attempting to run crossgen."},{"Id":"7781438483","Type":"PullRequestEvent","CreatedAt":"2018-06-06T00:14:54","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18320","RelatedDescription":"Opened pull request \"Moved Mutex.cs From src to shared\" (#18320) at dotnet/coreclr","RelatedBody":"Related PR \r\n\r\nCoreClr:- Implementation of mutex is almost same for unix and windows.\r\n\r\n"},{"Id":"7781419961","Type":"IssuesEvent","CreatedAt":"2018-06-06T00:07:58","Actor":"vancem","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18319","RelatedDescription":"Opened issue \"Classic EventSources don't work in Release builds using .NET Native (UWP)\" (#18319) at dotnet/coreclr","RelatedBody":"Michael Taron  reported this on 6/5/2018 via E-mail to @vancem and @brianrob \r\n\r\nTo repro, using VS create the 'Blank UWP app' and add the following EventSource\r\n```\r\n[EventSource(Name = \"Microsoft-StickyNotes\")]\r\npublic class NoteEventSource : EventSource\r\n{\r\n      public static readonly NoteEventSource Log = new NoteEventSource();\r\n      private NoteEventSource()\r\n      {\r\n      }\r\n      public void AppConstructed() { WriteEvent(1); }\r\n      public void AppSuspended() { WriteEvent(2); }\r\n      public void BootStart() { WriteEvent(3); }\r\n      public void BootStop() { WriteEvent(4); }\r\n}\r\n```\r\nThen add NoteEventSource.Log.AppConstructed() or the other methods to the OnLaunched method.\r\nUse \r\n\r\nPerfView /Providers=*Microsoft-StickyNotes collect\r\n\r\nto collect a trace.  You will find that the manifest information is not generated IF YOU USE THE RELEASE BUILD (works OK on debug build).  \r\n```\r\nEvent Name | Time MSec | Process Name | Rest\r\nProvider(b8642b6a-9359-532e-c9dc-fccbe92b98b0)/EventID(1) | 2,945.520 | TestUWPApp (34364) | ThreadID=\"42,024\" ProcessorNumber=\"6\"\r\nProvider(b8642b6a-9359-532e-c9dc-fccbe92b98b0)/EventID(3) | 2,945.757 | TestUWPApp (34364) | ThreadID=\"42,024\" ProcessorNumber=\"6\"\r\nProvider(b8642b6a-9359-532e-c9dc-fccbe92b98b0)/EventID(4) | 2,949.862 | TestUWPApp (34364) | ThreadID=\"42,024\" ProcessorNumber=\"4\"   DURATION_MSEC=\"4.105\"\r\n```\r\n\r\nNote that I tried using \r\n```\r\n        public NoteEventSource() : base(EventSourceSettings.EtwSelfDescribingEventFormat) { }\r\n```\r\nTo make the EventSource use self-describing events, but that causes a Exception to be thrown (**this seems like an independent but that is also worth fixing**).  \r\n\r\nThis bug is meant to track this issue (Note it is a .NET Native issue, not a .NET Core issue\r\n@brianrob \r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7781595545","Type":"PullRequestEvent","CreatedAt":"2018-06-06T01:15:53","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9422","RelatedDescription":"Opened pull request \"Removing target dependency to SetBadgeProps on publish targets.\" (#9422) at dotnet/cli","RelatedBody":"Removing target dependency to SetBadgeProps on publish targets. That's not needed on the repo-refactored CLI."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7781750882","Type":"PullRequestEvent","CreatedAt":"2018-06-06T02:14:55","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30161","RelatedDescription":"Opened pull request \"Update CoreFx to preview1-26606-01 (master)\" (#30161) at dotnet/corefx","RelatedBody":""},{"Id":"7781697148","Type":"PullRequestEvent","CreatedAt":"2018-06-06T01:55:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30160","RelatedDescription":"Merged pull request \"Update CoreClr, CoreSetup to preview1-26606-01, preview1-26605-03, respectively (master)\" (#30160) at dotnet/corefx","RelatedBody":""},{"Id":"7781507646","Type":"PullRequestEvent","CreatedAt":"2018-06-06T00:41:48","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30160","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26606-01, preview1-26605-03, respectively (master)\" (#30160) at dotnet/corefx","RelatedBody":""},{"Id":"7781421943","Type":"IssuesEvent","CreatedAt":"2018-06-06T00:08:42","Actor":"jimcarley","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29940","RelatedDescription":"Closed issue \"Test System.Transactions.Tests.AsyncTransactionScopeTests.VerifyNestedTxScope failed in CI.\" (#29940) at dotnet/corefx","RelatedBody":"Test: System.Transactions.Tests.AsyncTransactionScopeTests.VerifyNestedTxScope has failed.\r\n\r\nMESSAGE:\r\nAssert.Equal() Failure\\nExpected: (null)\\nActual: CommittableTransaction { IsolationLevel = Serializable, PromoterType = 00000000-0000-0000-0000-000000000000, TransactionInformation = TransactionInformation { CreationTime = 2018-05-26T22:01:32.6788934, DistributedIdentifier = 00000000-0000-0000-0000-000000000000, LocalIdentifier = \\\"66c9483a-cdcb-4cc9-bacb-9f35c47cdf13:34\\\", Status = Committed } }\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\nat System.Transactions.Tests.AsyncTransactionScopeTests.VerifyNestedTxScope(TransactionScopeOption parentScopeOption, TransactionScopeAsyncFlowOption parentAsyncFlowOption, TransactionScopeOption childScopeOption, TransactionScopeAsyncFlowOption childAsyncFlowOption) in /mnt/resource/j/workspace/dotnet_corefx/master/rhel7.2_release/src/System.Transactions.Local/tests/AsyncTransactionScopeTests.cs:line 850\r\n\r\nDetails: https://ci.dot.net/job/dotnet_corefx/job/master/job/rhel7.2_release/6062/testReport/System.Transactions.Tests/AsyncTransactionScopeTests/VerifyNestedTxScope_parentScopeOption__Required__parentAsyncFlowOption__Suppress__childScopeOption__Required__childAsyncFlowOption__Enabled_/"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7782188917","Type":"IssuesEvent","CreatedAt":"2018-06-06T05:06:40","Actor":"IanKemp","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/27512","RelatedDescription":"Opened issue \"Restore.cmd fails with \"Unable to load the service index for source...\" if NuGet proxy is required but not specified\" (#27512) at dotnet/roslyn","RelatedBody":"```\r\nC:\\Working\\github\\dotnet\\roslyn [master ≡]> .\\Restore.cmd\r\nRepo Dir C:\\Working\\github\\dotnet\\roslyn\r\nBinaries Dir C:\\Working\\github\\dotnet\\roslyn\\Binaries\r\nDownloading vswhere\r\nC:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\sdk\\2.1.300-rtm-008866\\NuGet.targets(114,5): error : Unable to load the service index for source https://dotnet.myget.org/F/dotnet-coreclr/api/v3/index.json. [C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj]\r\nC:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\sdk\\2.1.300-rtm-008866\\NuGet.targets(114,5): error :   No connection could be made because the target machine actively refused it [C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj]\r\nDownloading RoslynTools.MSBuild\r\nC:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\sdk\\2.1.300-rtm-008866\\NuGet.targets(114,5): error : Unable to load the service index for source https://dotnet.myget.org/F/dotnet-coreclr/api/v3/index.json. [C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj]\r\nC:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\sdk\\2.1.300-rtm-008866\\NuGet.targets(114,5): error :   No connection could be made because the target machine actively refused it [C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj]\r\nCommand failed to execute: C:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\dotnet.exe restore --verbosity quiet --configfile C:\\Working\\github\\dotnet\\roslyn\\nuget.config C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj\r\nSystem.Management.Automation.RuntimeException: Command failed to execute: C:\\Working\\github\\dotnet\\roslyn\\Binaries\\Tools\\dotnet\\dotnet.exe restore --verbosity quiet --configfile C:\\Working\\github\\dotnet\\roslyn\\nuget.config C:\\Working\\github\\dotnet\\roslyn\\build\\ToolsetPackages\\RoslynToolset.csproj\r\nat Exec-CommandCore, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 68\r\nat Exec-Console, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 100\r\nat Restore-Project, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 406\r\nat Ensure-BasicTool, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 175\r\nat Get-MSBuildDirXCopy, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 326\r\nat Get-MSBuildKindAndDir, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 320\r\nat Ensure-MSBuild, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build-utils.ps1: line 184\r\nat <ScriptBlock>, C:\\Working\\github\\dotnet\\roslyn\\build\\scripts\\build.ps1: line 768\r\n```\r\n\r\nI had to edit `%appdata%\\NuGet\\NuGet.config` and add the `http_proxy` and `http_proxy.user` settings to make this work. It would make sense to add some info around this to the [\"Building, Debugging and Testing on Windows\"](https://github.com/dotnet/roslyn/blob/master/docs/contributing/Building,%20Debugging,%20and%20Testing%20on%20Windows.md) page - maybe a link to the [official NuGet docs on the same](https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#config-section)."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7781439106","Type":"PullRequestEvent","CreatedAt":"2018-06-06T00:15:08","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5902","RelatedDescription":"Opened pull request \"[JustForView]Moved Mutex.cs From src to shared\" (#5902) at dotnet/corert","RelatedBody":"Related PR:- https://github.com/dotnet/coreclr/pull/18320\r\n\r\nCorert:- Implementation varies a lot for windows and unix. Windows implementation  matches the Coreclr Implementation.\r\nMerged Mutex.cs and Mutex.Windows.cs\r\nMoved Mutex.cs to Shared"},{"Id":"7780614544","Type":"PullRequestEvent","CreatedAt":"2018-06-05T20:37:37","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5900","RelatedDescription":"Merged pull request \"Fix CI-breaking change\" (#5900) at dotnet/corert","RelatedBody":"Fixes a bug introduced by a rename in #5864 "},{"Id":"7780278603","Type":"IssuesEvent","CreatedAt":"2018-06-05T19:31:12","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5901","RelatedDescription":"Opened issue \"C# Exceptions in CoreFX Jenkins CI jobs do not report crashes correctly\" (#5901) at dotnet/corert","RelatedBody":"https://ci.dot.net/job/dotnet_corert/job/master/job/debug_windows_nt_corefx_prtest/115/console - a file was not found, but the test runs reported success."},{"Id":"7780264908","Type":"PullRequestEvent","CreatedAt":"2018-06-05T19:28:28","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5900","RelatedDescription":"Opened pull request \"Fix breaking change\" (#5900) at dotnet/corert","RelatedBody":"Fixes a rename introduced with #5864 "},{"Id":"7779467494","Type":"IssuesEvent","CreatedAt":"2018-06-05T16:54:58","Actor":"sensboston","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5899","RelatedDescription":"Opened issue \"Corrupted Guid stored to database (using Entity framework) via LINQ to SQL with .NET native toolchain\" (#5899) at dotnet/corert","RelatedBody":"Recently we've found an issue when Guid stored to database (we're using Entity Framework, and LINQ to SQL) become corrupted in the our UWP application built in Release mode (i.e. with the .NET Native toolchain). It looks like some pointer corruption 'cause value stored in database has a part of original Guid, for example, original guid visible via debugging in release mode:\r\nD4E4301C**A88EEE4A8591699604370085**\r\nStored value: **A88EEE4A8591699604370085**00000000\r\n\r\nOne more time, without .NET native toolchain everything is working as expected, it's happened in Release mode only!\r\n\r\nWe've found a temporarily workaround, changing Guid to string, but will be good if you can fix this bug ASAP!"},{"Id":"7779070519","Type":"PullRequestEvent","CreatedAt":"2018-06-05T15:44:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5898","RelatedDescription":"Merged pull request \"[ARM] Fix exception handling asm\" (#5898) at dotnet/corert","RelatedBody":"@dotnet/arm32-corert-contrib please review"},{"Id":"7778000463","Type":"PullRequestEvent","CreatedAt":"2018-06-05T13:02:23","Actor":"BredPet","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5898","RelatedDescription":"Opened pull request \"[ARM] Fix exception handling asm\" (#5898) at dotnet/corert","RelatedBody":"@dotnet/arm32-corert-contrib please review"},{"Id":"7776933895","Type":"PullRequestEvent","CreatedAt":"2018-06-05T09:35:29","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5861","RelatedDescription":"Merged pull request \"Switch back to SC_NPROCESSORS_ONLN for WebAssembly\" (#5861) at dotnet/corert","RelatedBody":"Switch back to SC_NPROCESSORS_ONLN for WebAssembly because SC_NPROCESSORS_CONF isn't implemented in Emscripten. Fixes an assert on startup."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1004145068381331456","CreatedAt":"2018-06-05T23:36:55+00:00","UserScreenname":"dotnet","Text":"Cool retro game built with #dotnet #monogame. Clone the repo, play the game, and you could win some serious money!… https://t.co/iHu2MQ1bME","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1001877224096649216","CreatedAt":"2018-05-30T17:25:18+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 https://t.co/HyKnPLqfwy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":1286,"FavoriteCount":901,"RawContent":null},{"Id":"1001877112469438464","CreatedAt":"2018-05-30T17:24:52+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0 now available https://t.co/Q5x6kghf6W","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":301,"FavoriteCount":203,"RawContent":null},{"Id":"1001876975982526466","CreatedAt":"2018-05-30T17:24:19+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 https://t.co/8so4DdNQDl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":259,"FavoriteCount":174,"RawContent":null}]}},"RunOn":"2018-06-06T05:30:32.9859812Z","RunDurationInMilliseconds":7520}