{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.7","PublishedOn":"2018-05-08T18:22:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We’re excited to share updates about changes to F# and F# tools which shipped with the Visual Studio 2017 version 15.7 release. Let’s dive in! Type Providers now support .NET Standard For those who...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/f-language-and-tools-update-for-visual-studio-2017-version-15-7/","RawContent":null},{"Title":"Introducing ML.NET: Cross-platform, Proven and Open Source Machine Learning Framework","PublishedOn":"2018-05-08T00:41:28+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"Today at //Build 2018, we are excited to announce the preview of ML.NET, a cross-platform, open source machine learning framework. ML.NET will allow .NET developers to develop their own models and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 RC 1","PublishedOn":"2018-05-07T18:00:05+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are excited to announce that the first release candidate of EF Core 2.1 is available, alongside .NET Core 2.1 RC 1 and ASP.NET Core 2.1 RC 1, for broad testing, and now also for production...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-entity-framework-core-2-1-rc-1/","RawContent":null},{"Title":".NET Core 3 and Support for Windows Desktop Applications","PublishedOn":"2018-05-07T15:40:04+00:00","CommentsCount":289,"FacebookCount":0,"Summary":"At Microsoft Build Live today, we are sharing a first look at our plans for .NET Core 3. The highlight of .NET Core 3 is support for Windows desktop applications, specifically Windows Forms, Windows...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/","RawContent":null},{"Title":"Announcing .NET Core 2.1 RC 1","PublishedOn":"2018-05-07T15:39:20+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 2.1 Release Candidate 1 (RC 1). The .NET Core 2.1 RC 1 is now ready for broad testing and for production use. Our quality, reliability, and performance testing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7660843516","Type":"IssuesEvent","CreatedAt":"2018-05-11T12:12:46","Actor":"Longvimol","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/69","RelatedDescription":"Opened issue \"Dotnet / announcement \" (#69) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\n"},{"Id":"7644965785","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:03:40","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to ASP.NET Core 2.0.8.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to 2.0.8 to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_"},{"Id":"7619224203","Type":"IssuesEvent","CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Opened issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65) at dotnet/announcements","RelatedBody":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n"},{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7714533765","Type":"PullRequestEvent","CreatedAt":"2018-05-23T02:38:45","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18092","RelatedDescription":"Merged pull request \"fix desktop build.\" (#18092) at dotnet/coreclr","RelatedBody":"PTAL @dotnet/jit-contrib "},{"Id":"7714463008","Type":"PullRequestEvent","CreatedAt":"2018-05-23T02:13:21","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18089","RelatedDescription":"Merged pull request \"Remove -Rebuild option from build scripts\" (#18089) at dotnet/coreclr","RelatedBody":"Fixes #18042.\r\n\r\nRemoves -Rebuild option from build scripts after discussion on #18042.\r\n\r\n"},{"Id":"7714462994","Type":"IssuesEvent","CreatedAt":"2018-05-23T02:13:21","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18042","RelatedDescription":"Closed issue \"CoreCLR failed when build with MSVC on Windows\" (#18042) at dotnet/coreclr","RelatedBody":"Hello,\r\n\r\nI tried to build CoreCLR on Windows with VS2017 Update2. It failed to build due to the error CS2001: Source file 'D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\System.Private.CoreLib\\..\\eventing\\DotNETRuntimeEventSource.cs' could not be found. This issue is caused by master branch revision [0fbd0f5](https://github.com/dotnet/coreclr/commit/0fbd0f535e566bcde591701adc2de51ee0f020af). Could you please help take a look at this? Thank you!\r\n\r\n**You can repro this issue as the steps below:**\r\n1. git clone https://github.com/dotnet/coreclr D:\\CoreCLR\\src\r\n2. Open a clean x86 prompt (C:\\windows\\syswow64\\cmd.exe) and browse to D:\\CoreCLR\\src\r\n3. build x86 release -Rebuild -- /clp:ShowCommandLine\r\n\r\n**Error info:**\r\nCSC : error CS2001: Source file 'D:\\CoreCLR\\src\\bin\\obj\\Windows_NT.x86.Release\\System.Private.CoreLib\\..\\eventing\\DotNETRuntimeEventSource.cs' could not be found. [D:\\CoreCLR\\src\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]"},{"Id":"7714361836","Type":"PullRequestEvent","CreatedAt":"2018-05-23T01:36:16","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18093","RelatedDescription":"Opened pull request \"Fix parallel spmi return code.\" (#18093) at dotnet/coreclr","RelatedBody":"Sort and merge child return codes for the parallel spmi runs.\r\nFound after #17997; our internal system reports exit code 0x3 (missing values) even if there are actual errors (0x1).\r\n\r\ncc @dotnet/jit-contrib "},{"Id":"7714320824","Type":"PullRequestEvent","CreatedAt":"2018-05-23T01:20:39","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18092","RelatedDescription":"Opened pull request \"fix desktop build.\" (#18092) at dotnet/coreclr","RelatedBody":"PTAL @dotnet/jit-contrib "},{"Id":"7714232614","Type":"PullRequestEvent","CreatedAt":"2018-05-23T00:47:44","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18021","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#18021) at dotnet/coreclr","RelatedBody":null}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7713238279","Type":"IssuesEvent","CreatedAt":"2018-05-22T20:23:23","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/737","RelatedDescription":"Closed issue \"Misc build failures in 'official/standard/master/' - '20180517.01'\" (#737) at dotnet/standard","RelatedBody":"@dotnet-mc-bot commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build?_a=summary&buildId=1696522\r\n  - **Agent:** DDVSOWINAGE021\r\n  - **Error log:** ##[error]Process completed with exit code 1....\r\n\r\n@jcagme, @markwilkie\r\n\n\n---\n\n@weshaggard commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507#issuecomment-389922476)\n\n@wtgodbe this looks like your issue. Apparently calling Tools/msbuild.cmd directly will not work because that doesn't initialize VS. You would need to make sure you go through run.cmd which does initialize VS. \n\n---\n\n@jcagme commented on [Thu May 17 2018](https://github.com/dotnet/core-eng/issues/3507#issuecomment-389925626)\n\nMoving this to standard repo\n\n"},{"Id":"7713136600","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:26","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/752","RelatedDescription":"Merged pull request \"Get access to build.common.targets in publish.msbuild in 2.0.0\" (#752) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the SignFiles target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713135711","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:16","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/752","RelatedDescription":"Opened pull request \"Get access to build.common.targets in publish.msbuild in 2.0.0\" (#752) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the SignFiles target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713134617","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:03:03","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/751","RelatedDescription":"Merged pull request \"Get access to build.common.targets in publish.msbuild in master\" (#751) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the `SignFiles` target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7713133002","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:02:45","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/751","RelatedDescription":"Opened pull request \"Get access to build.common.targets in publish.msbuild in master\" (#751) at dotnet/standard","RelatedBody":"Without this, builds fail in signing because they don't have access to the `SignFiles` target. Importing dir.targets gets us build.common.targets from buildtools, which we need to run the Signing targets. Pattern here matches what is already in the other repos."},{"Id":"7712974928","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:31:13","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/750","RelatedDescription":"Merged pull request \" Rename config.json task to avoid confusing run.cmd\" (#750) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712974322","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:31:07","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/749","RelatedDescription":"Merged pull request \"Rename config.json task to avoid confusing run.cmd in master\" (#749) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712973222","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:30:53","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/750","RelatedDescription":"Opened pull request \" Rename config.json task to avoid confusing run.cmd\" (#750) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7712971919","Type":"PullRequestEvent","CreatedAt":"2018-05-22T19:30:38","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/749","RelatedDescription":"Opened pull request \"Rename config.json task to avoid confusing run.cmd in master\" (#749) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707967463","Type":"PullRequestEvent","CreatedAt":"2018-05-22T02:00:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/748","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02822-01 (master)\" (#748) at dotnet/standard","RelatedBody":""},{"Id":"7707663750","Type":"IssuesEvent","CreatedAt":"2018-05-22T00:02:21","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/740","RelatedDescription":"Closed issue \"After updating to NetStandard.Library 2.0.3 I receive a missing file error.\" (#740) at dotnet/standard","RelatedBody":"\r\nError:\r\n\r\n\"This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is ..\\..\\packages\\NETStandard.Library.2.0.1\\build\\NETStandard.Library.targets.\"\r\n\r\n\r\n"},{"Id":"7707605355","Type":"PullRequestEvent","CreatedAt":"2018-05-21T23:41:19","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/733","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02817-01 (master)\" (#733) at dotnet/standard","RelatedBody":""},{"Id":"7707581273","Type":"IssuesEvent","CreatedAt":"2018-05-21T23:32:39","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/742","RelatedDescription":"Closed issue \"Why nuget restore generates Nuget folder under CI?\" (#742) at dotnet/standard","RelatedBody":"Hi! \r\n\r\nI believe my question is similar to [#433](https://github.com/dotnet/standard/issues/433)\r\n\r\nI have a private git-server, which has post-receive hook. \r\nThis hook simply invokes kinda **build.cmd**\r\nWhich calls **nuget restore** inside solution folder:\r\nMySln.sln\r\n\\src\\Projects\\*.csproj\r\n\r\nSomehow, under this CI routine, I am getting the **.nuget** and **NuGet** folders, so solution wont build.\r\nBut when I call **build.cmd** directly (double-click), I am getting the **packages** folder, and solution will be built.\r\n\r\nI dont understand, whats the difference? \r\nI tried with and without argument \"solution name\"\r\n\r\nBest regards"},{"Id":"7707440583","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:45:44","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/747","RelatedDescription":"Merged pull request \"Remove workingFolder from build.cmd invocation in signing packages in 2.0.0\" (#747) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"},{"Id":"7707440025","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:45:33","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/747","RelatedDescription":"Opened pull request \"Remove workingFolder from build.cmd invocation in signing packages in 2.0.0\" (#747) at dotnet/standard","RelatedBody":"For https://github.com/dotnet/standard/issues/737"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7714934217","Type":"PullRequestEvent","CreatedAt":"2018-05-23T05:16:29","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29864","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-26523-00, beta-26523-00, respectively (master)\" (#29864) at dotnet/corefx","RelatedBody":""},{"Id":"7714932844","Type":"IssuesEvent","CreatedAt":"2018-05-23T05:15:57","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29863","RelatedDescription":"Opened issue \"Add UAP tests to CI\" (#29863) at dotnet/corefx","RelatedBody":"Apparently few people run them locally as they keep regressing. They aren't that slow -- seems like we could have them in CI now. @safern @joperezr do you know why we don't? Maybe CI didn't have RS3 then?\r\n\r\nThey are close to 100% passing now."},{"Id":"7714736447","Type":"IssuesEvent","CreatedAt":"2018-05-23T03:55:06","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25655","RelatedDescription":"Closed issue \"Please add RememberMe to NetworkCredentials\" (#25655) at dotnet/corefx","RelatedBody":"### Suggestion\r\n\r\nWould be nice to have a `RemeberMe` property in the `NetworkCredentials` class, to make it easier to use as a standard username and password DTO unit.\r\n\r\n### Proposed API\r\n\r\nAdd a `bool` or `bool?` property named `RememberMe` to the `NetworkCredential` class, to make it easier to attach this piece of info with the request.\r\n\r\n### Motive\r\n\r\nIn the client side it will make it easier to use the `NetworkCredential` class as a DTO from the UI/ViewModel or some other high layer in the app down to the DAL and embedded in the request, and in the server side to be able to store cookies accordingly.\r\nNot something that will always be used, but something that's many times worth sitting there."},{"Id":"7714708879","Type":"IssuesEvent","CreatedAt":"2018-05-23T03:44:23","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26078","RelatedDescription":"Closed issue \"ManagedWebSocket.ReceiveAsyncPrivate: Object reference not set to an instance of an object.\" (#26078) at dotnet/corefx","RelatedBody":"Running on ASP.NET Core 2.0.3 under IIS.\r\n\r\nI'm not sure of the exact repo that's causing this but I'm seeing a few hundred of these exceptions and figured I'd report it :).. I can link to the code that calls receive if required..\r\n\r\n```\r\nSystem.OperationCanceledException: Aborted\r\n ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\nat System.Net.WebSockets.ManagedWebSocket.<ReceiveAsyncPrivate>d__61.MoveNext() at offset 276\r\n--- End of inner exception stack trace ---\r\nat System.Net.WebSockets.ManagedWebSocket.<ReceiveAsyncPrivate>d__61.MoveNext() at offset 1611\r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at offset 12\r\nat System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task) at offset 68\r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task) at offset 40\r\n```\r\n\r\n```cs\r\n\r\n        private async Task Receive(WebSocket socket, Action<WebSocketReceiveResult, string> handleMessage) {\r\n            var buffer = new ArraySegment<byte>(new byte[1024 * 4]);\r\n            var result = await socket.ReceiveAsync(buffer, CancellationToken.None);\r\n//....\r\n        }\r\n```"},{"Id":"7714634861","Type":"IssuesEvent","CreatedAt":"2018-05-23T03:16:05","Actor":"Sunny-pu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29862","RelatedDescription":"Opened issue \"Test System.Net.Sockets.Tests.SendReceiveMemoryNativeTask.SendRecvPollSync_TcpListener_Socket(listenAt: ::1, pollBeforeOperation: True) failed in CI.\" (#29862) at dotnet/corefx","RelatedBody":"Test: System.Net.Sockets.Tests.SendReceiveMemoryNativeTask.SendRecvPollSync_TcpListener_Socket(listenAt: ::1, pollBeforeOperation: True) has failed.\r\n\r\nMESSAGE:\r\nAssert.Equal() Failure\\nExpected: 123456\\nActual: 123455\r\n+++++++++++++++++++\r\nSTACK TRACE:\r\nat System.Net.Sockets.Tests.SendReceive`1.SendRecvPollSync_TcpListener_Socket(IPAddress listenAt, Boolean pollBeforeOperation) in /mnt/j/workspace/dotnet_corefx/master/outerloop_netcoreapp_ubuntu16.04_debug/src/System.Net.Sockets/tests/FunctionalTests/SendReceive.cs:line 630 --- End of stack trace from previous location where exception was thrown ---\r\n\r\nDetails:\r\nhttps://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netcoreapp_ubuntu16.04_debug/403/testReport/System.Net.Sockets.Tests/SendReceiveMemoryNativeTask/SendRecvPollSync_TcpListener_Socket_listenAt____1__pollBeforeOperation__True_/"},{"Id":"7714582513","Type":"PullRequestEvent","CreatedAt":"2018-05-23T02:56:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29860","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26523-01, preview1-26523-01, respectively (master)\" (#29860) at dotnet/corefx","RelatedBody":""},{"Id":"7714432382","Type":"PullRequestEvent","CreatedAt":"2018-05-23T02:02:18","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29859","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#29859) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7714363233","Type":"IssuesEvent","CreatedAt":"2018-05-23T01:36:47","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29861","RelatedDescription":"Opened issue \"System.Numerics.Vectors partialfacades error: Invalid local constant signature: 'epsilon' \" (#29861) at dotnet/corefx","RelatedBody":"1. Run `build.cmd` on a clean clone of the repo.\r\n2. Observe partialfacade errors.\r\n\r\nThis issue might have been exposed by recent buildtools changes, specifically https://github.com/dotnet/buildtools/pull/2038, but I am not sure.\r\n\r\nLooking at the list of recent [commits to master](https://github.com/dotnet/corefx/commits/master), the corefx repo builds successfully from yesterday's last commit, prior to the dependencies update: aa73b08881ccc2a438947c19d60a6665008bcc08\r\n\r\nThe error appears after https://github.com/dotnet/corefx/pull/29836 got merged (i.e. e693ef593b152fc9f92049b63afed967f167cf6f).\r\n\r\n```text\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600001F: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000020: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003B: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003C: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600003C: Invalid local constant signature: 'minAngle' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000059: Invalid local constant signature: 'EPSILON' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x06000072: Invalid local constant signature: 'FLT_EPSILON' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\nD:\\GitHub\\Fork\\corefx\\Tools\\partialfacades.task.targets(64,5): error : PDB0018: token 0x0600008B: Invalid local constant signature: 'epsilon' [D:\\GitHub\\Fork\\corefx\\src\\System.Numerics.Vectors\\src\\System.Numerics.Vectors.csproj]\r\n```\r\n\r\ncc @eerhardt, @ViktorHofer, @danmosemsft, @stephentoub  "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7714774734","Type":"PullRequestEvent","CreatedAt":"2018-05-23T04:10:35","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5845","RelatedDescription":"Opened pull request \"Add WebAssembly to CI\" (#5845) at dotnet/corert","RelatedBody":"Add WebAssembly to CI. This uses a set of machines that have been set up with the right tooling."},{"Id":"7714621896","Type":"PullRequestEvent","CreatedAt":"2018-05-23T03:11:13","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5714","RelatedDescription":"Closed pull request \"Conservative GC reporting test review\" (#5714) at dotnet/corert","RelatedBody":"This is the test used to test #5585 . The code path is reliably hit in a Debug build, but in a Release build the GC stack lower bound is not set in `StackFrameIterator`, which causes the upper bound calculation to not be called. \r\nTo emulate a Release build, I tested the changes above assuming no frame pointer. \r\nAny feedback or suggestions on a better approach would be welcome.\r\n\r\n@sergiy-k - this is the simple test I mentioned offline"},{"Id":"7714559661","Type":"IssuesEvent","CreatedAt":"2018-05-23T02:48:15","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5843","RelatedDescription":"Opened issue \"Compiling System.Collections.Tests fails when Debug Symbols are turned on\" (#5843) at dotnet/corert","RelatedBody":"Compiling CoreFX's System.Collections.Tests.dll results in a CodeGenerationError caused by a NullReferenceException.\r\n\r\nThis is likely due to a symbol generation size constraint, hit by L31 of https://github.com/dotnet/corefx/blob/master/src/System.Collections/tests/Generic/Dictionary/HashCollisionScenarios/InputData.cs \r\n\r\n"},{"Id":"7714503065","Type":"IssuesEvent","CreatedAt":"2018-05-23T02:28:04","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5842","RelatedDescription":"Opened issue \"wasm: typeof(T) fails at runtime\" (#5842) at dotnet/corert","RelatedBody":"Adding the following to the HelloWasm program.cs:\r\n\r\n```\r\n        var g = new Gen<char>();\r\n        g.TestTypeOf();\r\n```\r\nWhere `Gen` is:\r\n```\r\n    private class Gen<T>\r\n    {\r\n        internal void TestTypeOf()\r\n        {\r\n            var t = typeof(T);\r\n        }\r\n    }\r\n```\r\nGives the following at runtime\r\n```\r\nexception thrown: abort() at jsStackTrace@http://localhost:6931/HelloWasm.js:1008:13\r\nstackTrace@http://localhost:6931/HelloWasm.js:1025:12\r\nabort@http://localhost:6931/HelloWasm.js:6860:44\r\n_abort@http://localhost:6931/HelloWasm.js:5627:7\r\n__Z6AssertPKcS0_jS0_@http://localhost:6931/HelloWasm.js:10379573:1\r\n__ZN6Thread22SetupHackPInvokeTunnelEv@http://localhost:6931/HelloWasm.js:11387200:1\r\n_RhpGetCurrentThreadStackTrace@http://localhost:6931/HelloWasm.js:11419892:1\r\n_S_P_CoreLib_System_Runtime_RuntimeExports__RhGetCurrentThreadStackTrace@http://localhost:6931/HelloWasm.js:451563:1\r\n_RhGetCurrentThreadStackTrace@http://localhost:6931/HelloWasm.js:451691:1\r\n_S_P_CoreLib_System_Diagnostics_StackTrace__InitializeForThreadFrameIndex@http://localhost:6931/HelloWasm.js:802776:1\r\n_S_P_CoreLib_System_Diagnostics_StackTrace___ctor_2@http://localhost:6931/HelloWasm.js:572896:1\r\n_S_P_CoreLib_System_Diagnostics_Debug__Assert_1@http://localhost:6931/HelloWasm.js:536725:1\r\n_S_P_CoreLib_System_Diagnostics_Debug__Assert_0@http://localhost:6931/HelloWasm.js:430748:1\r\n_S_P_CoreLib_System_Collections_Concurrent_ConcurrentUnifierW_2_IntPtr__S_P_CoreLib_System_Type___GetOrAdd@http://localhost:6931/HelloWasm.js:731304:1\r\n_S_P_CoreLib_Internal_Reflection_Core_NonPortable_RuntimeTypeUnifier__GetTypeForRuntimeTypeHandle@http://localhost:6931/HelloWasm.js:929688:1\r\n_S_P_CoreLib_System_Type__GetTypeFromHandle@http://localhost:6931/HelloWasm.js:675007:1\r\n_S_P_Reflection_Execution_Internal_Reflection_Execution_ReflectionExecutionDomainCallbacksImplementation__GetBetterDiagnosticInfoIfAvailable@http://localhost:6931/HelloWasm.js:5226864:1\r\n_S_P_CoreLib_System_RuntimeTypeHandle__get_LastResortToString@http://localhost:6931/HelloWasm.js:4230043:1\r\n_S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__GetLastResortString@http://localhost:6931/HelloWasm.js:3576035:1\r\n_S_P_Reflection_Execution_Internal_Reflection_Execution_ExecutionEnvironmentImplementation__GetLastResortString@http://localhost:6931/HelloWasm.js:3575941:1\r\n_S_P_Reflection_Core_System_Reflection_Runtime_General_Helpers__LastResortString@http://localhost:6931/HelloWasm.js:2689325:1\r\n_S_P_Reflection_Core_System_Reflection_Runtime_TypeInfos_RuntimeBlockedTypeInfo__ToString@http://localhost:6931/HelloWasm.js:2693034:1\r\n_S_P_Reflection_Core_System_Reflection_Runtime_TypeInfos_RuntimeTypeInfo__EstablishDebugName@http://localhost:6931/HelloWasm.js:1851229:1\r\n_S_P_Reflection_Core_System_Reflection_Runtime_TypeInfos_RuntimeBlockedTypeInfo__GetRuntimeBlockedTypeInfo@http://localhost:6931/HelloWasm.js:1486321:1\r\n_S_P_Reflection_Core_Internal_Reflection_Core_Execution_ExecutionDomain__GetNamedTypeForHandle@http://localhost:6931/HelloWasm.js:1278549:1\r\n_S_P_Reflection_Execution_Internal_Reflection_Execution_ReflectionExecutionDomainCallbacksImplementation__GetNamedTypeForHandle@http://localhost:6931/HelloWasm.js:1277546:1\r\n_S_P_CoreLib_Internal_Reflection_Core_NonPortable_RuntimeTypeUnifier_RuntimeTypeHandleToTypeCache__Factory@http://localhost:6931/HelloWasm.js:1057354:1\r\n_S_P_CoreLib_System_Collections_Concurrent_ConcurrentUnifierW_2_IntPtr__S_P_CoreLib_System_Type___GetOrAdd@http://localhost:6931/HelloWasm.js:732756:1\r\n_S_P_CoreLib_Internal_Reflection_Core_NonPortable_RuntimeTypeUnifier__GetTypeForRuntimeTypeHandle@http://localhost:6931/HelloWasm.js:929688:1\r\n_S_P_CoreLib_System_Type__GetTypeFromHandle@http://localhost:6931/HelloWasm.js:675007:1\r\n_HelloWasm_Program_Gen_1_Char___TestTypeOf@http://localhost:6931/HelloWasm.js:667059:1\r\n_HelloWasm_Program__Main@http://localhost:6931/HelloWasm.js:495176:1\r\n_HelloWasm__Module___MainMethodWrapper@http://localhost:6931/HelloWasm.js:480586:1\r\n_StartupCodeMain@http://localhost:6931/HelloWasm.js:479278:1\r\n___managed__Main@http://localhost:6931/HelloWasm.js:10379491:1\r\ndynCall_iii@http://localhost:6931/HelloWasm.js:11536097:1\r\nModule.dynCall_iii@http://localhost:6931/HelloWasm.js:6559:10\r\ninvoke_iii@http://localhost:6931/HelloWasm.js:6161:12\r\n_main@http://localhost:6931/HelloWasm.js:11452521:1\r\nModule._main@http://localhost:6931/HelloWasm.js:6479:10\r\ncallMain@http://localhost:6931/HelloWasm.js:6729:15\r\ndoRun@http://localhost:6931/HelloWasm.js:6787:42\r\nrun/<@http://localhost:6931/HelloWasm.js:6798:7\r\n```"},{"Id":"7714426132","Type":"IssuesEvent","CreatedAt":"2018-05-23T02:00:12","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5841","RelatedDescription":"Opened issue \"SerializationException in Generic Collections \" (#5841) at dotnet/corert","RelatedBody":"Tests implementing the method below - https://github.com/dotnet/corefx/blob/5a7d3f8f473095065768671247730796715b6038/src/Common/tests/System/Collections/IEnumerable.Generic.Serialization.Tests.cs#L15 \r\nfail with a SerializationException . \r\n\r\nTo repro remove any test with a name containing IGenericSharedAPI_SerializeDeserialize from https://github.com/dotnet/corert/blob/master/tests/TopN.CoreFX.issues.json and run\r\n\r\n.\\tests\\runtest.cmd /corefx"},{"Id":"7714406845","Type":"IssuesEvent","CreatedAt":"2018-05-23T01:53:05","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5840","RelatedDescription":"Opened issue \"Missing Metadata Exception on IDictionary_NonGeneric_IDictionaryEnumerator_Current_ReturnsSameValueOnRepeatedCalls\" (#5840) at dotnet/corert","RelatedBody":"Tests which implement/extend the partial class IDictionary_NonGeneric_Tests https://github.com/dotnet/corefx/blob/master/src/Common/tests/System/Collections/IDictionary.NonGeneric.Tests.cs fail with a MissingMetadataException\r\n\r\nTo repro remove any test with a name containing IDictionary_NonGeneric_IDictionaryEnumerator_Current_ReturnsSameValueOnRepeatedCalls from https://github.com/dotnet/corert/blob/master/tests/TopN.CoreFX.issues.json and run\r\n\r\n.\\tests\\runtest.cmd /corefx\r\n\r\nMight have the the same root cause as #5839 ."},{"Id":"7714391518","Type":"IssuesEvent","CreatedAt":"2018-05-23T01:47:14","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5059","RelatedDescription":"Closed issue \"Run CoreFX tests on CoreRT\" (#5059) at dotnet/corert","RelatedBody":"We need scripts to do that easily."},{"Id":"7714309134","Type":"IssuesEvent","CreatedAt":"2018-05-23T01:16:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5833","RelatedDescription":"Closed issue \"ML.NET Support.\" (#5833) at dotnet/corert","RelatedBody":"HI! Thanks for the great job you are doing with the .NET platform!\r\n\r\nI have been playing with the new ML.NET framework for a few hours and I decided to compile my testing program using CoreRT, However, the program is crashing when I actually run it!. \r\n\r\nI compiled it using this: \r\n\r\n`dotnet publish -r win-x64 -c release`\r\n\r\nStacktrace: \r\n`Unhandled Exception: System.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at MLTest!<BaseAddress>+0x16663c\r\n   at Microsoft.ML.Runtime.ComponentCatalog.CacheLoadedAssemblies() + 0x2c1\r\n   at Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses[TSig]() + 0xe\r\n   at Microsoft.ML.Runtime.EntryPoints.ModuleCatalog..ctor(IExceptionContext) + 0x87\r\n   at Microsoft.ML.Runtime.EntryPoints.ModuleCatalog.CreateInstance(IExceptionContext) + 0x30\r\n   at Microsoft.ML.Runtime.Experiment..ctor(IHostEnvironment) + 0x1a\r\n   at Microsoft.ML.LearningPipeline.Train[TInput, TOutput]() + 0xf7\r\n   at MLTest.Program.Main(String[]) + 0x2a1\r\n   at MLTest!<BaseAddress>+0x3cad16`\r\n\r\nI know that this is in alpha but I wanted to contribute with this error!\r\n\r\nThanks! "},{"Id":"7714169984","Type":"PullRequestEvent","CreatedAt":"2018-05-23T00:23:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5837","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5837) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7714057590","Type":"IssuesEvent","CreatedAt":"2018-05-22T23:44:26","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5839","RelatedDescription":"Opened issue \"MissingMetadataException on ICollection_NonGeneric_CopyTo_ArrayOfEnumType\" (#5839) at dotnet/corert","RelatedBody":"Tests which inherit from https://github.com/dotnet/corefx/blob/master/src/Common/tests/System/Collections/ICollection.NonGeneric.Tests.cs fail with a `MissingMetadataException`\r\n\r\nTo repro remove any test with a name containing ICollection_NonGeneric_CopyTo_ArrayOfEnumType from https://github.com/dotnet/corert/blob/master/tests/TopN.CoreFX.issues.json and run \r\n\r\n`.\\tests\\runtest.cmd /corefx`"},{"Id":"7714022900","Type":"IssuesEvent","CreatedAt":"2018-05-22T23:32:36","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5838","RelatedDescription":"Opened issue \"System.Collections.Tests - Blocked from Reflection\" (#5838) at dotnet/corert","RelatedBody":"Multiple tests in System.Collections.Tests fail with a $BlockedFromReflection_0_5b449e4c. \r\n\r\nTo reproduce - remove any test from https://github.com/dotnet/corert/blob/master/tests/TopN.CoreFX.issues.json with `$BlockedFromReflection_0_5b449e4c.` as a reason for failure and `run ./tests/runtest.sh /corefx`"},{"Id":"7713955715","Type":"PullRequestEvent","CreatedAt":"2018-05-22T23:11:16","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5837","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5837) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7713771291","Type":"PullRequestEvent","CreatedAt":"2018-05-22T22:18:21","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5836","RelatedDescription":"Opened pull request \"Update Testing Documentation and scripts\" (#5836) at dotnet/corert","RelatedBody":"Update CoreRT's testing documentation to reflect current features and allow repro-ing of failed CoreFX tests"},{"Id":"7713711151","Type":"PullRequestEvent","CreatedAt":"2018-05-22T22:03:01","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5823","RelatedDescription":"Merged pull request \" Add additional support to CoreFX testing for CI \" (#5823) at dotnet/corert","RelatedBody":"Main changes supporting the staging commit at #5817 .\r\n\r\nThe changes add support for RSP files and add some additional stabilization to CoreFX testing so running the tests in CI is stable and returns correct error values.\r\n\r\nThe test exclusions below are very broad and will be changed as soon as possible to reflect opened issues pertaining to the failures.\r\n\r\nLinux and OSX tests still have some instability in running System.Threading.Tasks.Tests. Once the issue is fixed, CoreFX testing in CI can be enabled for them as well.\r\n"},{"Id":"7713251171","Type":"PullRequestEvent","CreatedAt":"2018-05-22T20:25:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5835","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5835) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7712655916","Type":"PullRequestEvent","CreatedAt":"2018-05-22T18:30:05","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5835","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5835) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"998698514065510400","CreatedAt":"2018-05-21T22:54:15+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update) https://t.co/a0E1oZkvk2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"997182076645294080","CreatedAt":"2018-05-17T18:28:28+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 https://t.co/ltD4a6NwFJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"996461470748622848","CreatedAt":"2018-05-15T18:45:02+00:00","UserScreenname":"dotnet","Text":".NET Framework May 2018 Preview of Quality Rollup https://t.co/z5jUANGS1A","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-05-23T05:30:22.9696738Z","RunDurationInMilliseconds":7193}