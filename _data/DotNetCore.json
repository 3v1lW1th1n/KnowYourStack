{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 1)","PublishedOn":"2019-06-10T15:22:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Olia recently wrote a post about how to port a WinForms app from .NET Framework to .NET Core. Today, I&#8217;d like to follow that up by walking through the steps to migrate a sample WPF app to .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-1/","RawContent":null},{"Title":"Supporting the community with WF and WCF OSS projects","PublishedOn":"2019-06-07T17:06:06+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"At the Build conference in May 2019, we mentioned that, after we add WinForms, WPF and Entity Framework 6 to .NET Core 3.0, we do not plan to add any more of the technologies from .NET Framework to...","Href":"https://devblogs.microsoft.com/dotnet/supporting-the-community-with-wf-and-wcf-oss-projects/","RawContent":null},{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9857477545","Type":"IssuesEvent","CreatedAt":"2019-06-20T02:55:18","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25273","RelatedDescription":"Opened issue \"Test failed: JIT_superpmi._superpmicollect_superpmicollect_._superpmicollect_superpmicollect_sh\" (#25273) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190618.1/workItem/JIT/analysis/xunit/JIT_superpmi._superpmicollect_superpmicollect_~2F_superpmicollect_superpmicollect_sh\r\n\r\n**Failed tests:**\r\nJIT_superpmi._superpmicollect_superpmicollect_._superpmicollect_superpmicollect_sh\r\n\r\n**Log:**\r\n```\r\nStack overflow.\r\n/root/helix/work/workitem/JIT/superpmi/superpmicollect/superpmicollect.sh: line 266:    85 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/JIT/superpmi/Reports/JIT.superpmi/superpmicollect/superpmicollect.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun superpmicollect.exe ''\r\nSuperPMI collection and playback - BEGIN\r\nSetting environment variables:\r\n    SuperPMIShimLogPath=/tmp/wnwrrstv.4i2SPMI\r\n    SuperPMIShimPath=/root/helix/work/correlation/libclrjit.so\r\n    COMPlus_AltJit=*\r\n    COMPlus_AltJitName=libsuperpmi-shim-collector.so\r\nRunning: /usr/bin/perl -pi -e 's/\\\\r\\\r\n|\\\r\n|\\\\r/\\\r\n/g' \\\"/root/helix/work/workitem/JIT/superpmi/superpmicollect/Bytemark.sh\\\"\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/JIT/superpmi/superpmicollect/superpmicollect.sh\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9857393694","Type":"IssuesEvent","CreatedAt":"2019-06-20T02:32:49","Actor":"xiangzhai","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25272","RelatedDescription":"Opened issue \"[AArch64/Linux] coreclr-2.1 MANAGED EXCEPTION THROWN for AspNetCore-2.1\" (#25272) at dotnet/coreclr","RelatedBody":"Hi,\r\n\r\ncoreclr-2.1 [release-2.1](https://github.com/dotnet/coreclr/tree/release/2.1) branch, native buidl on AArch64, failed to work for AspNetCore-2.1:\r\n\r\n```\r\nexport CORE_LIBRARIES=/home/loongson/zhaixinag/corefx-2.1-Linux.arm64.Debug:/home/loongson/zhaixinag/dotnet-sdk-2.1.700-linux-x64/shared/Microsoft.AspNetCore.App/2.1.11\r\n\r\nexport COMPlus_LogEnable=1\r\nexport COMPlus_LogToConsole=1\r\nexport COMPlus_LogLevel=10\r\nexport COMPlus_JitFunctionTrace=1\r\n\r\n\r\n$ file bin/Product/Linux.arm64.Debug/corerun \r\nbin/Product/Linux.arm64.Debug/corerun: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=f5af84e6dbc202feb0252b13ae3057543b1f2f82, not stripped\r\n\r\n\r\n$ ./bin/Product/Linux.arm64.Debug/corerun HelloWeb.dll\r\n\r\n...\r\nTID 4e0c: In PreStubWorker for System.Text.StringBuilder::.ctor\r\nTID 4e0c: Prestubworker: method 0000007EFF325FF0M\r\nTID 4e0c:     In PrepareILBasedCode, calling JitCompileCode\r\nTID 4e0c: JitCompileCode( 0000007e`ff325ff0 , FALSE) for System.Text.StringBuilder:.ctor\r\nTID 4e0c: ConstructCrst with this:0xef53860\r\nTID 4e0c: { Jitting method (0000007EFF325FF0) System.Text.StringBuilder..ctor(System.Text.StringBuilder) instance void *(class System.Text.StringBuilder)\r\nTID 4e0c: CallCompileMethodWithSEHWrapper called...\r\nTID 4e0c: D::gV: cVars=0, extendOthers=1\r\nTID 4e0c: CLFLG_MINOPT set for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: IL Code Size,Instr   76,  28, Basic Block count   2, Local Variable Num,Ref count   2, 12 for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: IL Code Size,Instr   76,  28, Basic Block count   2, Local Variable Num,Ref count   2, 12 for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b91c to 0000007e`ff206a30 ,  delta is 0xfffcb114\r\nTID 4e0c: Using JumpStub at 0000007e`ff2056e8 that jumps to 0000007f`79059068 \r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b958 to 0000007f`79059068 ,  delta is 0xfffc9d90\r\nTID 4e0c: Using JumpStub at 0000007e`ff2056e8 that jumps to 0000007f`79059068 \r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b96c to 0000007f`79059068 ,  delta is 0xfffc9d7c\r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b984 to 0000007e`ff21e670 ,  delta is 0xfffe2cec\r\nTID 4e0c: D::JITComplete: md:0xff325ff0 (System.Text.StringBuilder::.ctor), address:0xff23b908.\r\nTID 4e0c: JitComplete completed successfully\r\nTID 4e0c: Got through CallCompile MethodWithSEHWrapper\r\nTID 4e0c: Done Jitting method System.Text.StringBuilder::.ctor  instance void *(class System.Text.StringBuilder) }\r\nTID 4e0c: Jitted Entry at 0000007e`ff23b908 method System.Text.StringBuilder::.ctor instance void *(class System.Text.StringBuilder)\r\nTID 4e0c: Deleting 0xef53860\r\nTID 4e0c: In PreStubWorker for System.Text.StringBuilder::ThreadSafeCopy\r\nTID 4e0c: Prestubworker: method 0000007EFF325E28M\r\nTID 4e0c:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4e0c: CreateHandle: 0000007F771C11A0, type=2\r\nTID 4e0c: in CLRException::SetThrowableHandle: obj = 771c11a0\r\nTID 4e0c: UNWIND_AND_CONTINUE caught and will rethrow\r\nTID 4e0c: UNWIND_AND_CONTINUE got throwable 0000007ED8053978\r\nTID 4e0c: CLRException::~CLRException destroying throwable: obj = 771c11a0\r\nTID 4e0c: in CLRException::SetThrowableHandle: obj = 0\r\nTID 4e0c: DestroyHandle: *0000007F771C11A0->0000007ED8053978\r\nTID 4e0c: ******* MANAGED EXCEPTION THROWN: Object thrown: 0000007ED8053978 MT 0000007EFF40C888T rethrow 0\r\nTID 4e0c: Exception HRESULT = 0x8007000b Message String 0x0000007ED8062470 (db will display) InnerException 0000000000000000 MT 0000000000000000T\r\nTID 4e0c: in Thread::SetLastThrownObject: obj = 0000007ED8053978\r\nTID 4e0c: CreateHandle: 0000007F771C11A0, type=2\r\nTID 4e0c: COMPlusCooprativeTransitionHandler unwinding\r\nTID 4e0c: EX_CATCH /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/prestub.cpp line 843\r\nTID 4e0c: EX_RETHROW /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/prestub.cpp line 861\r\nTID 4e0c: Deleting 0xef35130\r\n\r\n```\r\n\r\nDetailed [arm64.debug.log](https://github.com/dotnet/coreclr/files/3308511/arm64.debug.log)\r\n\r\n\r\nBut it is able to work for NetCore-2.1:\r\n\r\n```\r\n$ ./bin/Product/Linux.arm64.Debug/corerun HelloWorld.dll\r\n\r\n...\r\nHello World!\r\nTID 4ee3: In PreStubWorker for System.Runtime.InteropServices.SafeHandle::get_IsClosed\r\nTID 4ee3: Prestubworker: method 0000007F2D943C68M\r\nTID 4ee3:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4ee3: In PreStubWorker for System.IO.ConsoleStream::Flush\r\nTID 4ee3: Prestubworker: method 0000007F2D60C318M\r\nTID 4ee3:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4ee3: SetBackground obtain lock\r\nTID 4ee3: Locking thread store\r\nTID 4ee3: Locked thread store\r\nTID 4ee3: Unlocking thread store\r\nTID 4ee3: WaitForOtherThreads obtain lock\r\nTID 4ee3: Locking thread store\r\nTID 4ee3: Locked thread store\r\nTID 4ee3: Unlocking thread store\r\nTID 4ee3: EEShutDown entered unloading = 0Signalling finalizer to quit...***** Calling Finalizers\r\nTID 4ee3: Waiting for finalizer to quit...ENTER_DOMAIN(RaiseOneExitProcessEvent_Wrapper, /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/appdomain.cpp, 7444): NOP\r\nTID 4eeb: LEAVE_DOMAIN(RaiseOneExitProcessEvent_Wrapper, /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/appdomain.cpp, 7446)\r\nTID 4ee3: D::Lock aquire attempt by 0x4ee3\r\nTID 4ee3: D::Lock aquired by 0x4ee3\r\nTID 4ee3: D::Unlock released by 0x4ee3\r\nTID 4ee3: Deleting 0xa8053998\r\nTID 4ee3: Deleting 0xa80538b0\r\n```\r\n\r\nBackup:\r\n\r\n* [Cross compile](https://github.com/dotnet/coreclr/blob/master/Documentation/building/cross-building.md#build-systemprivatecorelib-on-ubuntu) `System.Private.CoreLib` for AArch64  https://github.com/dotnet/coreclr/issues/24659#issuecomment-501536184\r\n\r\n* [Cross compile](https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md) corefx-2.1 for AArch64\r\n\r\n* Failed to build AspNetCore-2.1 for X86  https://github.com/aspnet/AspNetCore/issues/11309\r\n\r\nThanks,\r\nLeslie Zhai\r\n"},{"Id":"9857391402","Type":"IssuesEvent","CreatedAt":"2019-06-20T02:32:13","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25271","RelatedDescription":"Opened issue \"Test failed: baseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_._regressions_whidbeybeta2_366085_366085_366085_cmd\" (#25271) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190619.37/workItem/PayloadGroup0/analysis/xunit/baseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_~2F_regressions_whidbeybeta2_366085_366085_366085_cmd\r\n\r\n**Failed tests:**\r\nbaseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_._regressions_whidbeybeta2_366085_366085_366085_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Work\\\\94782cb1-9504-4ac8-b1c5-fc4485042de4\\\\Exec\\\\baseservices\\\\exceptions\\\\Reports\\\\baseservices.exceptions\\\\regressions\\\\whidbeybeta2\\\\366085\\\\366085\\\\366085.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Payload\\\\corerun.exe\\\" 366085.exe \r\nCaught ArgumentNullException\r\nValue cannot be null. (Parameter 's')\r\nTest FAILED\r\nExpected: 100\r\nActual: 99\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Work\\\\94782cb1-9504-4ac8-b1c5-fc4485042de4\\\\Exec\\\\baseservices\\\\exceptions\\\\regressions\\\\whidbeybeta2\\\\366085\\\\366085\\\\366085.cmd\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9857254692","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:53:14","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25045","RelatedDescription":"Closed pull request \"Show nested exceptions more clearly\" (#25045) at dotnet/coreclr","RelatedBody":"Possible fix for https://github.com/dotnet/corefx/issues/37816\r\n\r\n### Changes made\r\n1. Put messages from nested inner exceptions on their own line. This is to avoid the 600 char+ lines.\r\n1. Format inner exceptions in a central place. This also fixes a bug in AggregateException where it would output one inner exception twice.\r\n1. Indent output from inner exceptions. This is to make it clear which contain which.\r\n1. Remove dividing markers for compactness. This is because indent makes them unnecessary.\r\n\r\n### Did not change\r\n1. Existing message content. This means that AggregateException's message still aggregates all interior messages to whatever length. (I did tweak ArgumentException message to be a single line though)\r\n1. Existing ordering of outer->inner messages followed by inner->outer stacks. In the deepest part of the indentation the innermost exception message and stack are still together.\r\n\r\n### Examples\r\n\r\nShould change [this](https://github.com/dotnet/corefx/issues/37815#issue-446260820) from #37815 into more like [this](https://gist.github.com/danmosemsft/bd374185bec6db4ebaaa7092ed73f239) which removes duplication and draws the eye to the innermost exception, which in this case is the root cause.\r\n\r\nAlso [this](https://gist.github.com/danmosemsft/7f40cd33d91d55602403f2d383096e33) from #38293 to [this](https://gist.github.com/danmosemsft/536a74c5516328c9ecad2a5272182fbd). Again, half as long and it's easy to see which stack goes with which message.\r\n\r\nOutput of [this test program](https://gist.github.com/danmosemsft/03f6c6086f2d6937790bd8800cbee4f4) was [this](https://gist.github.com/danmosemsft/c24a671ce7d3623ad616e7fd94929042) is now [this](https://gist.github.com/danmosemsft/aeb8488430e9c30136ae3b799f545c80).\r\n\r\nThoughts?"},{"Id":"9857251911","Type":"IssuesEvent","CreatedAt":"2019-06-20T01:52:26","Actor":"fadimounir","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/12599","RelatedDescription":"Closed issue \"Test failure: JIT_opt._virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_/_virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_cmd\" (#12599) at dotnet/coreclr","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `JIT_opt._virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_/_virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_cmd` has failed.\n\n\n    \n    Return code:      1\n    Raw output file:      C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Work\\3a67ba0b-ced6-4f1c-b281-1005f6eb8b9c\\Unzip\\Reports\\JIT.opt\\virtualstubdispatch\\bigvtbl\\bigvtbl_cs_do\\bigvtbl_cs_do.output.txt\n    Raw output:\n    BEGIN EXECUTION\\r\n            1 file(s) copied.\\r\n    \" C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Payload\\crossgen.exe\" /Platform_Assemblies_Paths C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Payload;C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Work\\3a67ba0b-ced6-4f1c-b281-1005f6eb8b9c\\Unzip\\virtualstubdispatch\\bigvtbl\\bigvtbl_cs_do\\IL;C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Work\\3a67ba0b-ced6-4f1c-b281-1005f6eb8b9c\\Unzip\\virtualstubdispatch\\bigvtbl\\bigvtbl_cs_do /in bigvtbl_cs_do.org /out bigvtbl_cs_do.exe\\r\n    Microsoft (R) CoreCLR Native Image Generator - Version 4.5.22220.0\\r\n    Copyright (c) Microsoft Corporation.  All rights reserved.\\r\n    \\r\n    Native image bigvtbl_cs_do.exe generated successfully.\\r\n     \"C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Payload\\corerun.exe\" bigvtbl_cs_do.exe \\r\n    Expected: 100\\r\n    Actual: -1073741819\\r\n    END EXECUTION - FAILED\\r\n    FAILED\\r\n    Test Harness Exitcode is : 1\\r\n    \n    To run the test:\n    > set CORE_ROOT=C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Payload\n    > C:\\dotnetbuild\\work\\24244547-d132-4d61-9d92-6789b1cdd5eb\\Work\\3a67ba0b-ced6-4f1c-b281-1005f6eb8b9c\\Unzip\\virtualstubdispatch\\bigvtbl\\bigvtbl_cs_do\\bigvtbl_cs_do.cmd\n    \\r\n    Expected: True\\r\n    Actual:   False\n\n        Stack Trace:\n\n           at JIT_opt._virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_._virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_cmd()\nBuild : Master - 20170702.02 (Ready-To-Run Tests)\nFailing configurations:\n- windows.10.arm64\n  - arm\n- windows.10.amd64\n  - x64\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/test~2Ffunctional~2Fr2r~2Fcli~2F/build/20170702.02/workItem/JIT.opt.XUnitWrapper/analysis/xunit/JIT_opt._virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_~2F_virtualstubdispatch_bigvtbl_bigvtbl_cs_do_bigvtbl_cs_do_cmd"},{"Id":"9857188790","Type":"IssuesEvent","CreatedAt":"2019-06-20T01:33:50","Actor":"fadimounir","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/13331","RelatedDescription":"Closed issue \"Test failure: Regressions_coreclr._0198_CompEx_CompEx_/_0198_CompEx_CompEx_cmd\" (#13331) at dotnet/coreclr","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `Regressions_coreclr._0198_CompEx_CompEx_/_0198_CompEx_CompEx_cmd` has failed.\n\nError compiling CompEx.org: Out Of Memory\\r\n    Error: compilation failed for \"CompEx.org\" (0x8007000e)\\r\n    \n    \n    Return code:      1\n    Raw output file:      C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Work\\a3ca9241-ec7f-4006-895a-6f8bb86326a0\\Unzip\\Reports\\Regressions.coreclr\\0198\\CompEx\\CompEx.output.txt\n    Raw output:\n    BEGIN EXECUTION\\r\n            1 file(s) copied.\\r\n    \" C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Payload\\crossgen.exe\" /Platform_Assemblies_Paths C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Payload;C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Work\\a3ca9241-ec7f-4006-895a-6f8bb86326a0\\Unzip\\0198\\CompEx\\IL;C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Work\\a3ca9241-ec7f-4006-895a-6f8bb86326a0\\Unzip\\0198\\CompEx /in CompEx.org /out CompEx.exe\\r\n    Microsoft (R) CoreCLR Native Image Generator - Version 4.5.22220.0\\r\n    Copyright (c) Microsoft Corporation.  All rights reserved.\\r\n    \\r\n    Crossgen failed with exitcode - -2147024882\\r\n    Test Harness Exitcode is : 1\\r\n    \n    To run the test:\n    > set CORE_ROOT=C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Payload\n    > C:\\dotnetbuild\\work\\2c50c34d-bd3f-42bc-ab0a-b4e984fe2d49\\Work\\a3ca9241-ec7f-4006-895a-6f8bb86326a0\\Unzip\\0198\\CompEx\\CompEx.cmd\n    \\r\n    Expected: True\\r\n    Actual:   False\n\n        Stack Trace:\n\n        \nBuild : Master - 20170811.01 (Ready-To-Run Tests)\nFailing configurations:\n- Windows.7.Amd64\n  - x64\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcoreclr~2Fmaster~2F/type/test~2Ffunctional~2Fr2r~2Fcli~2F/build/20170811.01/workItem/Regressions.coreclr.XUnitWrapper/analysis/xunit/Regressions_coreclr._0198_CompEx_CompEx_~2F_0198_CompEx_CompEx_cmd"},{"Id":"9857109675","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:10:04","Actor":"tommcdon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25257","RelatedDescription":"Merged pull request \"Store ARM volatile registers when populating RegDisplay\" (#25257) at dotnet/coreclr","RelatedBody":"Porting ARM stepping fix from uwp6.2 to uwp6.1 branch.  \r\ncherry-pick fab34e2b5cc6a9f07bdefcf18b6bc83fc4738f4f"},{"Id":"9857101900","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:07:54","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25270","RelatedDescription":"Opened pull request \"Disable 4 System.IO.FileSystem.Tests that are slow on Checked\" (#25270) at dotnet/coreclr","RelatedBody":""},{"Id":"9857069610","Type":"IssuesEvent","CreatedAt":"2019-06-20T00:57:49","Actor":"tommcdon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25258","RelatedDescription":"Closed issue \"Investigate if event pipe sample profiling is not disabled when the client disconnects\" (#25258) at dotnet/coreclr","RelatedBody":"Per https://github.com/dotnet/diagnostics/issues/189#issuecomment-502841560: the sample provider is not disabled when dotnet-trace exits. "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9856440633","Type":"PullRequestEvent","CreatedAt":"2019-06-19T22:10:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11591","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11591) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190619.3\r\n- **Date Produced**: 6/19/2019 8:03 PM\r\n- **Commit**: 2df72072ad5bf4d40c1e20d96500593cd801b557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19319.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9856321822","Type":"PullRequestEvent","CreatedAt":"2019-06-19T21:46:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11587","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#11587) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n"},{"Id":"9856163774","Type":"PullRequestEvent","CreatedAt":"2019-06-19T21:18:22","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11583","RelatedDescription":"Merged pull request \"Update MSBuild to 16.2.0-preview-19318-05\" (#11583) at dotnet/cli","RelatedBody":""},{"Id":"9856162327","Type":"PullRequestEvent","CreatedAt":"2019-06-19T21:18:08","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11582","RelatedDescription":"Merged pull request \"Update MSBuild to 16.2.0-preview-19318-05\" (#11582) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9853924234","Type":"IssuesEvent","CreatedAt":"2019-06-19T15:42:32","Actor":"mokhabadi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1264","RelatedDescription":"Closed issue \"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed\" (#1264) at dotnet/standard","RelatedBody":""},{"Id":"9853354411","Type":"IssuesEvent","CreatedAt":"2019-06-19T14:37:54","Actor":"mokhabadi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1264","RelatedDescription":"Opened issue \"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed\" (#1264) at dotnet/standard","RelatedBody":"i have read all of docs but i can't solve problem. i don't get notified when a client connects.        \r\n\r\n        private void host()\r\n        {\r\n            WriteLog(\"Waiting fo incomming connection...\");\r\n            listener = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n            listener.Bind(new IPEndPoint(IPAddress.Any, host_port));\r\n            listener.Listen(1);\r\n            socketAsyncEventArgs = new SocketAsyncEventArgs();\r\n            socketAsyncEventArgs.SetBuffer(null, 0, 0);\r\n            socketAsyncEventArgs.Completed += new EventHandler<SocketAsyncEventArgs>(SocketAsyncEventArgs_Completed);\r\n            bool res = listener.AcceptAsync(socketAsyncEventArgs);\r\n            WriteLog(res.ToString());\r\n            //listener.Accept();\r\n\r\n        }\r\n\r\n        private void SocketAsyncEventArgs_Completed(object sender, SocketAsyncEventArgs e)\r\n        {\r\n            WriteLog(\"111\");\r\n            if (e.SocketError == SocketError.Success)\r\n                WriteLog(\"Incoming connection accepted!\");\r\n            else\r\n                WriteLog(\"Host Error: \" + e.SocketError.ToString());\r\n        }\r\n\r\n        private void join()\r\n        {\r\n            WriteLog(\"Attempt to connect...\");\r\n            socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\r\n            socket.Bind(new IPEndPoint(IPAddress.Any, join_port));\r\n            socket.Connect(IPAddress.Loopback, join_port);\r\n            WriteLog(\"Connected successfully!\");\r\n        }\r\n\r\n\r\nit is a Windows Forms app and .net 4.6 and VS 2017 in windows 10 . `AcceptAsync` return true. when i connect with another instance of app on same machine, it connect successfully but the host instance doesn't notify incoming connection."},{"Id":"9852637632","Type":"PullRequestEvent","CreatedAt":"2019-06-19T13:17:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1263","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1263) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:48 AM\r\n- **Commit**: 721a570b005c53a839947603dcf76f8a3e5fc56a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9852554928","Type":"PullRequestEvent","CreatedAt":"2019-06-19T13:07:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1263","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1263) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:48 AM\r\n- **Commit**: 721a570b005c53a839947603dcf76f8a3e5fc56a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"9852159445","Type":"PullRequestEvent","CreatedAt":"2019-06-19T12:14:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1262","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1262) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9852090738","Type":"PullRequestEvent","CreatedAt":"2019-06-19T12:04:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1262","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1262) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"9851928317","Type":"IssuesEvent","CreatedAt":"2019-06-19T11:39:36","Actor":"GammaFour","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1261","RelatedDescription":"Opened issue \"Expression.Call exception on sorting with .NET native tool chain.\" (#1261) at dotnet/standard","RelatedBody":"I have an extension method which sorts an ObservableCollection<T> using a dynamic property.  Here's the original code:\r\n\r\n`        public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n`\r\nThis works great in my debug build, but crashes when I set 'Compile with .Net Native tool chain' with the message: \r\n\r\n> No generic method 'OrderBy' on type 'System.Linq.Queryable' is compatible with the supplied type arguments and arguments. No type arguments should be provided if the method is non-generic.\r\n\r\nFurther testing showed that if I called the method explicitly, rather than dynamically, it would work with the .Net Native tool chain setting.  So I distilled the method down to this (this is not a fix, this just illustrates the problem):\r\n\r\n`        public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // [HACK] This fixes it so that the call to Expression.Call doesn't crash.\r\n            IQueryable<T> queryable1 = new ObservableCollection<T>().AsQueryable();\r\n            Queryable.OrderBy<T, int>(queryable1, p => p.GetHashCode());\r\n            Queryable.OrderByDescending<T, int>(queryable1, p => p.GetHashCode());\r\n\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n`"},{"Id":"9847276869","Type":"PullRequestEvent","CreatedAt":"2019-06-18T20:10:07","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/1260","RelatedDescription":"Closed pull request \"[automated] Merge branch 'master' => 'release/3.0'\" (#1260) at dotnet/standard","RelatedBody":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"9847274376","Type":"PullRequestEvent","CreatedAt":"2019-06-18T20:09:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1260","RelatedDescription":"Opened pull request \"[automated] Merge branch 'master' => 'release/3.0'\" (#1260) at dotnet/standard","RelatedBody":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9857933920","Type":"PullRequestEvent","CreatedAt":"2019-06-20T05:09:52","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38699","RelatedDescription":"Merged pull request \"updates to packaging APIs and fixes\" (#38699) at dotnet/corefx","RelatedBody":"## Issue 36707\r\nAdding back `PackUriHelper.GetPartUri` which was an API that exists in .NET Fx in the implementation contained in WindowsBase. There was no reason this wasn't added as part of #36493, it was just missed.\r\n\r\nFixes #36707\r\n\r\n## Issue 36794\r\nThe checks that exist in the `Package.Open` API that takes a string are more restrictive then they should be. These checks were brought over from the implementation in WindowsBase and we don't need to restrict on only having `FileAccess.ReadWrite`  being passed in when `FileMode.Create` or `FileMode.CreateNew` are specified.\r\n\r\nFixes #36794\r\n\r\n"},{"Id":"9857933909","Type":"IssuesEvent","CreatedAt":"2019-06-20T05:09:52","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/36794","RelatedDescription":"Closed issue \"Package.Open(string, ...) is more restrictive than Package.Open(stream, ...)\" (#36794) at dotnet/corefx","RelatedBody":"We unnecessarily throw on many combinations of FileAccess for Package.Open(string, …).\r\n\r\nSee https://github.com/dotnet/corefx/blob/5023c2420a4145bcb560c4b8c57f4bb60cd6973f/src/System.IO.Packaging/src/System/IO/Packaging/Package.cs#L838-L849\r\n\r\nThe .NETCore implementation of System.IO.Packaging permits the write-only case due to the way that System.IO.Compression maintains the ZIP data in memory before writing out.  We should unblock more of these cases.\r\n\r\nIn the meantime, the workaround is to open the file one-self and call Package.Open(stream, …)\r\nhttps://github.com/dotnet/corefx/blob/5023c2420a4145bcb560c4b8c57f4bb60cd6973f/src/System.IO.Packaging/src/System/IO/Packaging/ZipPackage.cs#L270\r\n\r\n/cc @stevenbrix @miguep "},{"Id":"9857933904","Type":"IssuesEvent","CreatedAt":"2019-06-20T05:09:52","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/36707","RelatedDescription":"Closed issue \"S.IO.Packaging's PackUriHelper is missing GetPartUri method\" (#36707) at dotnet/corefx","RelatedBody":"PR [36493](https://github.com/dotnet/corefx/pull/36493) added some PackUriHelper methods to CoreFx, but GetPartUri seems to be missing, and it no longer is available in WindowsBase"},{"Id":"9857795646","Type":"IssuesEvent","CreatedAt":"2019-06-20T04:29:30","Actor":"xcaptain","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38712","RelatedDescription":"Opened issue \"JsonSerializer.Parse<DataTable> failed\" (#38712) at dotnet/corefx","RelatedBody":"Convert an object into json string and then convert into DataTable is an easy way to generate `DataTable`, but this approach fails in `dotnet core 3 preview5`\r\n\r\nI have created a working dotnet core 2 code snippet at [https://dotnetfiddle.net/cD6NFD](https://dotnetfiddle.net/cD6NFD)\r\n\r\ndotnetfiddle doesn't support dotnet core 3 yet, so my dotnet core 3 code example see below:\r\n\r\n```csharp\r\nusing System.Text.Json.Serialization;\r\n\r\npublic class UserDetails\r\n{\r\n    public string Id { get; set; }\r\n    public string Name { get; set; }\r\n    public string City { get; set; }\r\n    public string Country { get; set; }\r\n}\r\n\r\nList<UserDetails> persons = new List<UserDetails>()\r\n{\r\n    new UserDetails() {Id=\"1001\", Name=\"ABCD\", City =\"City1\", Country=\"USA\"},\r\n    new UserDetails() {Id=\"1002\", Name=\"PQRS\", City =\"City2\", Country=\"INDIA\"},\r\n    new UserDetails() {Id=\"1003\", Name=\"XYZZ\", City =\"City3\", Country=\"CHINA\"},\r\n    new UserDetails() {Id=\"1004\", Name=\"LMNO\", City =\"City4\", Country=\"UK\"},\r\n};\r\nvar table = JsonSerializer.Parse<DataTable>(JsonSerializer.ToString(persons));\r\n```\r\n\r\nbelow are the error log:\r\n```\r\nCLR/System.Text.Json.JsonReaderException 'The JSON value from [System.Data.DataTable] could not be converted to System.Object.'\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9857973208","Type":"IssuesEvent","CreatedAt":"2019-06-20T05:20:40","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36608","RelatedDescription":"Opened issue \"IDE offers refactoring to convert switch statement to expression\" (#36608) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n3.2.0-beta4-19312-10\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nusing System;\r\npublic class C {\r\n    public enum Kind {\r\n        Created,\r\n        Moved,\r\n    }\r\n    \r\n    class EventArgs1 : EventArgs {}\r\n    class EventArgs2 : EventArgs {}\r\n    \r\n    event EventHandler<EventArgs1> Created;\r\n    event EventHandler<EventArgs2> Moved;\r\n    \r\n\tpublic object GetHandler(Kind kind)\r\n    {\r\n        switch (kind)\r\n        {\r\n            case Kind.Created:\r\n                return Created;\r\n            case Kind.Moved:\r\n        \treturn Moved;\r\n            default:\r\n                throw new InvalidOperationException();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nIDE offers to convert to \r\n\r\n**Actual Behavior**:\r\n"},{"Id":"9857587399","Type":"PullRequestEvent","CreatedAt":"2019-06-20T03:26:09","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36607","RelatedDescription":"Opened pull request \"Set focus to editor before finding text\" (#36607) at dotnet/roslyn","RelatedBody":"Closes #36401"},{"Id":"9857463229","Type":"IssuesEvent","CreatedAt":"2019-06-20T02:51:29","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36606","RelatedDescription":"Opened issue \"show progress in task center for solution crawler\" (#36606) at dotnet/roslyn","RelatedBody":"right now, task center solution crawler progress uses an indeterministic progress bar. that makes it hard for users to know how much works are left in the queue.\r\n\r\nchange it so that it shows \"m out of n\" progress so that it is easier for users to know when BG work will finish."},{"Id":"9857280083","Type":"PullRequestEvent","CreatedAt":"2019-06-20T02:00:35","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36594","RelatedDescription":"Merged pull request \"Merge release/dev16.2-preview3 to master\" (#36594) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9857279127","Type":"PullRequestEvent","CreatedAt":"2019-06-20T02:00:20","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36599","RelatedDescription":"Merged pull request \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36599) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9857179682","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:31:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36596","RelatedDescription":"Merged pull request \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36596) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9857179136","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:30:55","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36597","RelatedDescription":"Merged pull request \"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps\" (#36597) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into release/dev16.2-preview3-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps\ngit reset --hard upstream/release/dev16.2-preview3-vs-deps\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9857178596","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:30:46","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36598","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#36598) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9856954953","Type":"PullRequestEvent","CreatedAt":"2019-06-20T00:22:35","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7531","RelatedDescription":"Merged pull request \"Initial support for R2RDump in SuperIlc\" (#7531) at dotnet/corert","RelatedBody":"I have added initial minimalistic support for R2RDump to SuperIlc.\r\nUsing the new switch -r2r <path> we can specify the path to the\r\nR2RDump tool and SuperIlc will use it to disassemble each\r\nsuccessfully compiled assembly in the \"naked\" and \"raw\" mode\r\n(from a completely selfish point of view these are the modes I'm\r\nusing most of the time). These dumps make it much easier to compare\r\nCPAOT and Crossgen output when analyzing the remaining failing\r\ntests.\r\n\r\nAs a caveat this cannot be yet added to automated testing because\r\nof the known backlog item \"R2RDump build doesn't publish\r\nCoreDisTools.dll it requires\" (even though the library is available\r\nin the build outputs and just copying it next to R2RDump fixes the\r\nproblem - that's what I've been doing since the very beginning).\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9855543503","Type":"PullRequestEvent","CreatedAt":"2019-06-19T19:41:07","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7436","RelatedDescription":"Merged pull request \"SuperIlc fixes for building the entire Pri#1 suite\" (#7436) at dotnet/corert","RelatedBody":"After adding support for the issues.targets file I became\r\nable to run the entire Pri# 1 test suite using SuperIlc.\r\nThis change fixes issues uncovered by this more extensive\r\ntesting.\r\n\r\n1) We need to slightly special-case the Core_Root folder\r\nas it technically lies under the CoreCLR\\bin\\tests\\(cfg)\r\nfolder; when building this entire folder, SuperIlc used to\r\npick it up as one of the folders to compile and was\r\nsubsequently racing between the build of this folder and\r\nof the tests that refer to it in CPAOT framework mode.\r\n\r\n2) BuildFolder construction was collecting test references\r\ntoo early i.e. before the framework was built. I came to\r\nthe conclusion that this is a general problem stemming from\r\nthe fact that ProcessInfo was an arbitrary mixture of the\r\nprocess parameters and the state machine used during the\r\nactual build. I have cleaned this up by separating the\r\nparameter file into a new class ProcessParameters; this let\r\nme add logic for constructing the actual paramterers later.\r\n\r\n3) I have added new options to specify explicit compilation\r\nand execution timeouts to add at least minimum support for\r\nlong-building and long-running tests.\r\n\r\n4) I have parallelized folder deletion and subtree lookup\r\nto improve their performance.\r\n\r\n5) I have added caching to the check for managed assemblies.\r\nPreviously, in the Pri# 1 tests we used to open framework\r\nassemblies about 3 million times just for the purpose of\r\nthis lookup.\r\n\r\n6) I have reduced the batch size for running ETW processes\r\nfrom 100 to 10 as the larger number of events collected\r\nwithin a single session was apparently slowing down test\r\nexecution.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9853991765","Type":"IssuesEvent","CreatedAt":"2019-06-19T15:50:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7539","RelatedDescription":"Closed issue \"There is a IL2CPP compiler on tap\" (#7539) at dotnet/corert","RelatedBody":"The origin maintainer of the compiler has abandoned this project，so I fork it and made some small changes。\r\nIt's dependency is still .NET Framework and its built-in clang and llvm-linker should be updated to 8.0.\r\nPlease see this and hope your reply。\r\nhttps://github.com/forestbat/il2cpp"},{"Id":"9851916750","Type":"IssuesEvent","CreatedAt":"2019-06-19T11:37:53","Actor":"hhblaze","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7537","RelatedDescription":"Closed issue \"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204\" (#7537) at dotnet/corert","RelatedBody":"```\r\nosboxes@osboxes:~/Documents/HelloWorld$ export CppCompilerAndLinker=clang-6.0\r\nosboxes@osboxes:~/Documents/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 123.17 ms for /home/osboxes/Documents/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/osboxes/Documents/HelloWorld/bin/release/netcoreapp2.2/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-6.0\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/osboxes/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/HelloWorld.ilc.rsp\"\" exited with code 1. [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ uname -a\r\nLinux osboxes 5.0.0-13-generic #14-Ubuntu SMP Mon Apr 15 14:59:14 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nldd /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so\r\nldd: /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so: No such file or directory\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ ls /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools\r\ncreatedump\r\nilc\r\nilc.deps.json\r\nilc.dll\r\nILCompiler.Compiler.dll\r\nILCompiler.CppCodeGen.dll\r\nILCompiler.DependencyAnalysisFramework.dll\r\nILCompiler.MetadataTransform.dll\r\nILCompiler.MetadataWriter.dll\r\nILCompiler.ReadyToRun.dll\r\nILCompiler.RyuJit.dll\r\nILCompiler.TypeSystem.dll\r\nILCompiler.WebAssembly.dll\r\nilc.runtimeconfig.json\r\njitinterface.so\r\nlibclrjitilc.so\r\nlibclrjit.so\r\nlibcoreclr.so\r\nlibcoreclrtraceptprovider.so\r\nlibdbgshim.so\r\nlibhostfxr.so\r\nlibhostpolicy.so\r\nlibLLVM.so\r\nlibmscordaccore.so\r\nlibmscordbi.so\r\nlibobjwriter.so\r\nlibsosplugin.so\r\nlibsos.so\r\nLLVMSharp.dll\r\nMicrosoft.CSharp.dll\r\nMicrosoft.DiaSymReader.dll\r\nMicrosoft.VisualBasic.dll\r\nMicrosoft.Win32.Primitives.dll\r\nMicrosoft.Win32.Registry.dll\r\nmscorlib.dll\r\nnetstandard.dll\r\nsosdocsunix.txt\r\nSOS.NETCore.dll\r\nSystem.AppContext.dll\r\nSystem.Buffers.dll\r\nSystem.Collections.Concurrent.dll\r\nSystem.Collections.dll\r\nSystem.Collections.Immutable.dll\r\nSystem.Collections.NonGeneric.dll\r\nSystem.Collections.Specialized.dll\r\nSystem.CommandLine.dll\r\nSystem.ComponentModel.Annotations.dll\r\nSystem.ComponentModel.DataAnnotations.dll\r\nSystem.ComponentModel.dll\r\nSystem.ComponentModel.EventBasedAsync.dll\r\nSystem.ComponentModel.Primitives.dll\r\nSystem.ComponentModel.TypeConverter.dll\r\nSystem.Configuration.dll\r\nSystem.Console.dll\r\nSystem.Core.dll\r\nSystem.Data.Common.dll\r\nSystem.Data.dll\r\nSystem.Diagnostics.Contracts.dll\r\nSystem.Diagnostics.Debug.dll\r\nSystem.Diagnostics.DiagnosticSource.dll\r\nSystem.Diagnostics.FileVersionInfo.dll\r\nSystem.Diagnostics.Process.dll\r\nSystem.Diagnostics.StackTrace.dll\r\nSystem.Diagnostics.TextWriterTraceListener.dll\r\nSystem.Diagnostics.Tools.dll\r\nSystem.Diagnostics.TraceSource.dll\r\nSystem.Diagnostics.Tracing.dll\r\nSystem.dll\r\nSystem.Drawing.dll\r\nSystem.Drawing.Primitives.dll\r\nSystem.Dynamic.Runtime.dll\r\nSystem.Globalization.Calendars.dll\r\nSystem.Globalization.dll\r\nSystem.Globalization.Extensions.dll\r\nSystem.Globalization.Native.so\r\nSystem.IO.Compression.Brotli.dll\r\nSystem.IO.Compression.dll\r\nSystem.IO.Compression.FileSystem.dll\r\nSystem.IO.Compression.Native.a\r\nSystem.IO.Compression.Native.so\r\nSystem.IO.Compression.ZipFile.dll\r\nSystem.IO.dll\r\nSystem.IO.FileSystem.AccessControl.dll\r\nSystem.IO.FileSystem.dll\r\nSystem.IO.FileSystem.DriveInfo.dll\r\nSystem.IO.FileSystem.Primitives.dll\r\nSystem.IO.FileSystem.Watcher.dll\r\nSystem.IO.IsolatedStorage.dll\r\nSystem.IO.MemoryMappedFiles.dll\r\nSystem.IO.Pipes.AccessControl.dll\r\nSystem.IO.Pipes.dll\r\nSystem.IO.UnmanagedMemoryStream.dll\r\nSystem.Linq.dll\r\nSystem.Linq.Expressions.dll\r\nSystem.Linq.Parallel.dll\r\nSystem.Linq.Queryable.dll\r\nSystem.Memory.dll\r\nSystem.Native.a\r\nSystem.Native.so\r\nSystem.Net.dll\r\nSystem.Net.Http.dll\r\nSystem.Net.HttpListener.dll\r\nSystem.Net.Http.Native.a\r\nSystem.Net.Http.Native.so\r\nSystem.Net.Mail.dll\r\nSystem.Net.NameResolution.dll\r\nSystem.Net.NetworkInformation.dll\r\nSystem.Net.Ping.dll\r\nSystem.Net.Primitives.dll\r\nSystem.Net.Requests.dll\r\nSystem.Net.Security.dll\r\nSystem.Net.Security.Native.a\r\nSystem.Net.Security.Native.so\r\nSystem.Net.ServicePoint.dll\r\nSystem.Net.Sockets.dll\r\nSystem.Net.WebClient.dll\r\nSystem.Net.WebHeaderCollection.dll\r\nSystem.Net.WebProxy.dll\r\nSystem.Net.WebSockets.Client.dll\r\nSystem.Net.WebSockets.dll\r\nSystem.Numerics.dll\r\nSystem.Numerics.Vectors.dll\r\nSystem.ObjectModel.dll\r\nSystem.Private.CoreLib.dll\r\nSystem.Private.DataContractSerialization.dll\r\nSystem.Private.Uri.dll\r\nSystem.Private.Xml.dll\r\nSystem.Private.Xml.Linq.dll\r\nSystem.Reflection.DispatchProxy.dll\r\nSystem.Reflection.dll\r\nSystem.Reflection.Emit.dll\r\nSystem.Reflection.Emit.ILGeneration.dll\r\nSystem.Reflection.Emit.Lightweight.dll\r\nSystem.Reflection.Extensions.dll\r\nSystem.Reflection.Metadata.dll\r\nSystem.Reflection.Primitives.dll\r\nSystem.Reflection.TypeExtensions.dll\r\nSystem.Resources.Reader.dll\r\nSystem.Resources.ResourceManager.dll\r\nSystem.Resources.Writer.dll\r\nSystem.Runtime.CompilerServices.Unsafe.dll\r\nSystem.Runtime.CompilerServices.VisualC.dll\r\nSystem.Runtime.dll\r\nSystem.Runtime.Extensions.dll\r\nSystem.Runtime.Handles.dll\r\nSystem.Runtime.InteropServices.dll\r\nSystem.Runtime.InteropServices.RuntimeInformation.dll\r\nSystem.Runtime.InteropServices.WindowsRuntime.dll\r\nSystem.Runtime.Loader.dll\r\nSystem.Runtime.Numerics.dll\r\nSystem.Runtime.Serialization.dll\r\nSystem.Runtime.Serialization.Formatters.dll\r\nSystem.Runtime.Serialization.Json.dll\r\nSystem.Runtime.Serialization.Primitives.dll\r\nSystem.Runtime.Serialization.Xml.dll\r\nSystem.Security.AccessControl.dll\r\nSystem.Security.Claims.dll\r\nSystem.Security.Cryptography.Algorithms.dll\r\nSystem.Security.Cryptography.Cng.dll\r\nSystem.Security.Cryptography.Csp.dll\r\nSystem.Security.Cryptography.Encoding.dll\r\nSystem.Security.Cryptography.Native.OpenSsl.a\r\nSystem.Security.Cryptography.Native.OpenSsl.so\r\nSystem.Security.Cryptography.OpenSsl.dll\r\nSystem.Security.Cryptography.Primitives.dll\r\nSystem.Security.Cryptography.X509Certificates.dll\r\nSystem.Security.dll\r\nSystem.Security.Principal.dll\r\nSystem.Security.Principal.Windows.dll\r\nSystem.Security.SecureString.dll\r\nSystem.ServiceModel.Web.dll\r\nSystem.ServiceProcess.dll\r\nSystem.Text.Encoding.dll\r\nSystem.Text.Encoding.Extensions.dll\r\nSystem.Text.RegularExpressions.dll\r\nSystem.Threading.dll\r\nSystem.Threading.Overlapped.dll\r\nSystem.Threading.Tasks.Dataflow.dll\r\nSystem.Threading.Tasks.dll\r\nSystem.Threading.Tasks.Extensions.dll\r\nSystem.Threading.Tasks.Parallel.dll\r\nSystem.Threading.Thread.dll\r\nSystem.Threading.ThreadPool.dll\r\nSystem.Threading.Timer.dll\r\nSystem.Transactions.dll\r\nSystem.Transactions.Local.dll\r\nSystem.ValueTuple.dll\r\nSystem.Web.dll\r\nSystem.Web.HttpUtility.dll\r\nSystem.Windows.dll\r\nSystem.Xml.dll\r\nSystem.Xml.Linq.dll\r\nSystem.Xml.ReaderWriter.dll\r\nSystem.Xml.Serialization.dll\r\nSystem.Xml.XDocument.dll\r\nSystem.Xml.XmlDocument.dll\r\nSystem.Xml.XmlSerializer.dll\r\nSystem.Xml.XPath.dll\r\nSystem.Xml.XPath.XDocument.dll\r\nWindowsBase.dll\r\n\r\n```\r\n\r\n"},{"Id":"9849306355","Type":"PullRequestEvent","CreatedAt":"2019-06-19T04:11:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7504","RelatedDescription":"Merged pull request \"Fixed errors when targeting ARM64 on Linux.\" (#7504) at dotnet/corert","RelatedBody":"Fixed several compilation errors found while trying to compile for ARM64 under Linux via cross-compilation.\r\n\r\nRelated to: #7500"},{"Id":"9848496262","Type":"PullRequestEvent","CreatedAt":"2019-06-19T00:16:53","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Merged pull request \"Update dependencies\" (#7540) at dotnet/corert","RelatedBody":""},{"Id":"9848228891","Type":"PullRequestEvent","CreatedAt":"2019-06-18T23:03:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Opened pull request \"Update dependencies\" (#7540) at dotnet/corert","RelatedBody":""},{"Id":"9847771230","Type":"PullRequestEvent","CreatedAt":"2019-06-18T21:27:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7536","RelatedDescription":"Merged pull request \"Ensure ObjectWriter package does not get used on ObjWriterBuild mode\" (#7536) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9857594050","Type":"PullRequestEvent","CreatedAt":"2019-06-20T03:28:03","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3344","RelatedDescription":"Merged pull request \"Fix crash in case of fallback from package cache to memory\" (#3344) at dotnet/sdk","RelatedBody":""},{"Id":"9857207133","Type":"PullRequestEvent","CreatedAt":"2019-06-20T01:39:21","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3345","RelatedDescription":"Opened pull request \"Fix dotnet store for netcoreapp3.0\" (#3345) at dotnet/sdk","RelatedBody":"Also fix msbuild batching error that caused O(N^2) redundant work, and flakiness due to race conditions between the redundant workers.\r\n\r\nThis is the \"minimal fix\" for 3.0. I am still working on a major re-design and simplification of dotnet store, but that will not likely be ready for 3.0 preview 7 and we want to have these issues fixed before then.\r\n\r\nIt is also not clear yet if we would be able to use the simplified design for all TFMs or only on netcoreapp3.0. That is because the crux of the re-design is to use the new PublishReadyToRun code as the foundation."},{"Id":"9857006215","Type":"PullRequestEvent","CreatedAt":"2019-06-20T00:37:57","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3344","RelatedDescription":"Opened pull request \"Fix crash in case of fallback from package cache to memory\" (#3344) at dotnet/sdk","RelatedBody":""},{"Id":"9856907704","Type":"PullRequestEvent","CreatedAt":"2019-06-20T00:08:39","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3343","RelatedDescription":"Opened pull request \"add wpf and winform large perf tests\" (#3343) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"458309840","IsPullRequest":false,"CreatedAt":"2019-06-20T02:55:18","Actor":"VincentBu","Number":"25273","RawContent":null,"Title":"Test failed: JIT_superpmi._superpmicollect_superpmicollect_._superpmicollect_superpmicollect_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190618.1/workItem/JIT/analysis/xunit/JIT_superpmi._superpmicollect_superpmicollect_~2F_superpmicollect_superpmicollect_sh\r\n\r\n**Failed tests:**\r\nJIT_superpmi._superpmicollect_superpmicollect_._superpmicollect_superpmicollect_sh\r\n\r\n**Log:**\r\n```\r\nStack overflow.\r\n/root/helix/work/workitem/JIT/superpmi/superpmicollect/superpmicollect.sh: line 266:    85 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/JIT/superpmi/Reports/JIT.superpmi/superpmicollect/superpmicollect.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun superpmicollect.exe ''\r\nSuperPMI collection and playback - BEGIN\r\nSetting environment variables:\r\n    SuperPMIShimLogPath=/tmp/wnwrrstv.4i2SPMI\r\n    SuperPMIShimPath=/root/helix/work/correlation/libclrjit.so\r\n    COMPlus_AltJit=*\r\n    COMPlus_AltJitName=libsuperpmi-shim-collector.so\r\nRunning: /usr/bin/perl -pi -e 's/\\\\r\\\r\n|\\\r\n|\\\\r/\\\r\n/g' \\\"/root/helix/work/workitem/JIT/superpmi/superpmicollect/Bytemark.sh\\\"\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/JIT/superpmi/superpmicollect/superpmicollect.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25273","RelatedDescription":"Open issue \"Test failed: JIT_superpmi._superpmicollect_superpmicollect_._superpmicollect_superpmicollect_sh\" (#25273)"},{"Id":"458305234","IsPullRequest":false,"CreatedAt":"2019-06-20T02:32:48","Actor":"xiangzhai","Number":"25272","RawContent":null,"Title":"[AArch64/Linux] coreclr-2.1 MANAGED EXCEPTION THROWN for AspNetCore-2.1","State":"open","Body":"Hi,\r\n\r\ncoreclr-2.1 [release-2.1](https://github.com/dotnet/coreclr/tree/release/2.1) branch, native buidl on AArch64, failed to work for AspNetCore-2.1:\r\n\r\n```\r\nexport CORE_LIBRARIES=/home/loongson/zhaixinag/corefx-2.1-Linux.arm64.Debug:/home/loongson/zhaixinag/dotnet-sdk-2.1.700-linux-x64/shared/Microsoft.AspNetCore.App/2.1.11\r\n\r\nexport COMPlus_LogEnable=1\r\nexport COMPlus_LogToConsole=1\r\nexport COMPlus_LogLevel=10\r\nexport COMPlus_JitFunctionTrace=1\r\n\r\n\r\n$ file bin/Product/Linux.arm64.Debug/corerun \r\nbin/Product/Linux.arm64.Debug/corerun: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0, BuildID[sha1]=f5af84e6dbc202feb0252b13ae3057543b1f2f82, not stripped\r\n\r\n\r\n$ ./bin/Product/Linux.arm64.Debug/corerun HelloWeb.dll\r\n\r\n...\r\nTID 4e0c: In PreStubWorker for System.Text.StringBuilder::.ctor\r\nTID 4e0c: Prestubworker: method 0000007EFF325FF0M\r\nTID 4e0c:     In PrepareILBasedCode, calling JitCompileCode\r\nTID 4e0c: JitCompileCode( 0000007e`ff325ff0 , FALSE) for System.Text.StringBuilder:.ctor\r\nTID 4e0c: ConstructCrst with this:0xef53860\r\nTID 4e0c: { Jitting method (0000007EFF325FF0) System.Text.StringBuilder..ctor(System.Text.StringBuilder) instance void *(class System.Text.StringBuilder)\r\nTID 4e0c: CallCompileMethodWithSEHWrapper called...\r\nTID 4e0c: D::gV: cVars=0, extendOthers=1\r\nTID 4e0c: CLFLG_MINOPT set for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: IL Code Size,Instr   76,  28, Basic Block count   2, Local Variable Num,Ref count   2, 12 for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: IL Code Size,Instr   76,  28, Basic Block count   2, Local Variable Num,Ref count   2, 12 for method System.Text.StringBuilder:.ctor(ref):this\r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b91c to 0000007e`ff206a30 ,  delta is 0xfffcb114\r\nTID 4e0c: Using JumpStub at 0000007e`ff2056e8 that jumps to 0000007f`79059068 \r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b958 to 0000007f`79059068 ,  delta is 0xfffc9d90\r\nTID 4e0c: Using JumpStub at 0000007e`ff2056e8 that jumps to 0000007f`79059068 \r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b96c to 0000007f`79059068 ,  delta is 0xfffc9d7c\r\nTID 4e0c: Encoded a BRANCH26 at 0000007e`ff23b984 to 0000007e`ff21e670 ,  delta is 0xfffe2cec\r\nTID 4e0c: D::JITComplete: md:0xff325ff0 (System.Text.StringBuilder::.ctor), address:0xff23b908.\r\nTID 4e0c: JitComplete completed successfully\r\nTID 4e0c: Got through CallCompile MethodWithSEHWrapper\r\nTID 4e0c: Done Jitting method System.Text.StringBuilder::.ctor  instance void *(class System.Text.StringBuilder) }\r\nTID 4e0c: Jitted Entry at 0000007e`ff23b908 method System.Text.StringBuilder::.ctor instance void *(class System.Text.StringBuilder)\r\nTID 4e0c: Deleting 0xef53860\r\nTID 4e0c: In PreStubWorker for System.Text.StringBuilder::ThreadSafeCopy\r\nTID 4e0c: Prestubworker: method 0000007EFF325E28M\r\nTID 4e0c:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4e0c: CreateHandle: 0000007F771C11A0, type=2\r\nTID 4e0c: in CLRException::SetThrowableHandle: obj = 771c11a0\r\nTID 4e0c: UNWIND_AND_CONTINUE caught and will rethrow\r\nTID 4e0c: UNWIND_AND_CONTINUE got throwable 0000007ED8053978\r\nTID 4e0c: CLRException::~CLRException destroying throwable: obj = 771c11a0\r\nTID 4e0c: in CLRException::SetThrowableHandle: obj = 0\r\nTID 4e0c: DestroyHandle: *0000007F771C11A0->0000007ED8053978\r\nTID 4e0c: ******* MANAGED EXCEPTION THROWN: Object thrown: 0000007ED8053978 MT 0000007EFF40C888T rethrow 0\r\nTID 4e0c: Exception HRESULT = 0x8007000b Message String 0x0000007ED8062470 (db will display) InnerException 0000000000000000 MT 0000000000000000T\r\nTID 4e0c: in Thread::SetLastThrownObject: obj = 0000007ED8053978\r\nTID 4e0c: CreateHandle: 0000007F771C11A0, type=2\r\nTID 4e0c: COMPlusCooprativeTransitionHandler unwinding\r\nTID 4e0c: EX_CATCH /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/prestub.cpp line 843\r\nTID 4e0c: EX_RETHROW /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/prestub.cpp line 861\r\nTID 4e0c: Deleting 0xef35130\r\n\r\n```\r\n\r\nDetailed [arm64.debug.log](https://github.com/dotnet/coreclr/files/3308511/arm64.debug.log)\r\n\r\n\r\nBut it is able to work for NetCore-2.1:\r\n\r\n```\r\n$ ./bin/Product/Linux.arm64.Debug/corerun HelloWorld.dll\r\n\r\n...\r\nHello World!\r\nTID 4ee3: In PreStubWorker for System.Runtime.InteropServices.SafeHandle::get_IsClosed\r\nTID 4ee3: Prestubworker: method 0000007F2D943C68M\r\nTID 4ee3:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4ee3: In PreStubWorker for System.IO.ConsoleStream::Flush\r\nTID 4ee3: Prestubworker: method 0000007F2D60C318M\r\nTID 4ee3:     In PreStubWorker, method already jitted, backpatching call point\r\nTID 4ee3: SetBackground obtain lock\r\nTID 4ee3: Locking thread store\r\nTID 4ee3: Locked thread store\r\nTID 4ee3: Unlocking thread store\r\nTID 4ee3: WaitForOtherThreads obtain lock\r\nTID 4ee3: Locking thread store\r\nTID 4ee3: Locked thread store\r\nTID 4ee3: Unlocking thread store\r\nTID 4ee3: EEShutDown entered unloading = 0Signalling finalizer to quit...***** Calling Finalizers\r\nTID 4ee3: Waiting for finalizer to quit...ENTER_DOMAIN(RaiseOneExitProcessEvent_Wrapper, /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/appdomain.cpp, 7444): NOP\r\nTID 4eeb: LEAVE_DOMAIN(RaiseOneExitProcessEvent_Wrapper, /home/loongson/zhaixinag/coreclr-release-2.1/src/vm/appdomain.cpp, 7446)\r\nTID 4ee3: D::Lock aquire attempt by 0x4ee3\r\nTID 4ee3: D::Lock aquired by 0x4ee3\r\nTID 4ee3: D::Unlock released by 0x4ee3\r\nTID 4ee3: Deleting 0xa8053998\r\nTID 4ee3: Deleting 0xa80538b0\r\n```\r\n\r\nBackup:\r\n\r\n* [Cross compile](https://github.com/dotnet/coreclr/blob/master/Documentation/building/cross-building.md#build-systemprivatecorelib-on-ubuntu) `System.Private.CoreLib` for AArch64  https://github.com/dotnet/coreclr/issues/24659#issuecomment-501536184\r\n\r\n* [Cross compile](https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md) corefx-2.1 for AArch64\r\n\r\n* Failed to build AspNetCore-2.1 for X86  https://github.com/aspnet/AspNetCore/issues/11309\r\n\r\nThanks,\r\nLeslie Zhai\r\n","Url":"https://github.com/dotnet/coreclr/issues/25272","RelatedDescription":"Open issue \"[AArch64/Linux] coreclr-2.1 MANAGED EXCEPTION THROWN for AspNetCore-2.1\" (#25272)"},{"Id":"458305098","IsPullRequest":false,"CreatedAt":"2019-06-20T02:32:12","Actor":"VincentBu","Number":"25271","RawContent":null,"Title":"Test failed: baseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_._regressions_whidbeybeta2_366085_366085_366085_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190619.37/workItem/PayloadGroup0/analysis/xunit/baseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_~2F_regressions_whidbeybeta2_366085_366085_366085_cmd\r\n\r\n**Failed tests:**\r\nbaseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_._regressions_whidbeybeta2_366085_366085_366085_cmd\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Work\\\\94782cb1-9504-4ac8-b1c5-fc4485042de4\\\\Exec\\\\baseservices\\\\exceptions\\\\Reports\\\\baseservices.exceptions\\\\regressions\\\\whidbeybeta2\\\\366085\\\\366085\\\\366085.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Payload\\\\corerun.exe\\\" 366085.exe \r\nCaught ArgumentNullException\r\nValue cannot be null. (Parameter 's')\r\nTest FAILED\r\nExpected: 100\r\nActual: 99\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\92434049-1cc5-4d45-b521-4a71bc8ab0b9\\\\Work\\\\94782cb1-9504-4ac8-b1c5-fc4485042de4\\\\Exec\\\\baseservices\\\\exceptions\\\\regressions\\\\whidbeybeta2\\\\366085\\\\366085\\\\366085.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25271","RelatedDescription":"Open issue \"Test failed: baseservices_exceptions._regressions_whidbeybeta2_366085_366085_366085_._regressions_whidbeybeta2_366085_366085_366085_cmd\" (#25271)"},{"Id":"458058523","IsPullRequest":true,"CreatedAt":"2019-06-20T01:10:03","Actor":"tommcdon","Number":"25257","RawContent":null,"Title":"Store ARM volatile registers when populating RegDisplay","State":"closed","Body":"Porting ARM stepping fix from uwp6.2 to uwp6.1 branch.  \r\ncherry-pick fab34e2b5cc6a9f07bdefcf18b6bc83fc4738f4f","Url":"https://github.com/dotnet/coreclr/pull/25257","RelatedDescription":"Closed or merged PR \"Store ARM volatile registers when populating RegDisplay\" (#25257)"},{"Id":"458288614","IsPullRequest":true,"CreatedAt":"2019-06-20T01:07:53","Actor":"BruceForstall","Number":"25270","RawContent":null,"Title":"Disable 4 System.IO.FileSystem.Tests that are slow on Checked","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25270","RelatedDescription":"Open PR \"Disable 4 System.IO.FileSystem.Tests that are slow on Checked\" (#25270)"},{"Id":"458103388","IsPullRequest":false,"CreatedAt":"2019-06-20T00:57:48","Actor":"tommcdon","Number":"25258","RawContent":null,"Title":"Investigate if event pipe sample profiling is not disabled when the client disconnects","State":"closed","Body":"Per https://github.com/dotnet/diagnostics/issues/189#issuecomment-502841560: the sample provider is not disabled when dotnet-trace exits. ","Url":"https://github.com/dotnet/coreclr/issues/25258","RelatedDescription":"Closed issue \"Investigate if event pipe sample profiling is not disabled when the client disconnects\" (#25258)"},{"Id":"458282575","IsPullRequest":false,"CreatedAt":"2019-06-20T00:34:59","Actor":"echesakovMSFT","Number":"25269","RawContent":null,"Title":"System.Linq.Expressions.Tests is long-running with Checked coreclr","State":"open","Body":"**System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds** alone takes 14 minutes to finish on Linux/x64 with Checked coreclr.\r\n```\r\n$CORE_ROOT/corerun xunit.console.dll System.Linq.Expressions.Tests.dll -method System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds -maxthreads 2\r\nMicrosoft.DotNet.XUnitConsoleRunner v2.5.0 (64-bit .NET Core 3.0.0-dev.19319.1)\r\n  Discovering: System.Linq.Expressions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Linq.Expressions.Tests (found 1 of 5641 test case)\r\n  Starting:    System.Linq.Expressions.Tests (parallel test collections = on, max threads = 2)\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:03:58\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:05:58\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:07:58\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:09:58\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:11:58\r\n   System.Linq.Expressions.Tests: [Long Running Test] 'System.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds', Elapsed: 00:13:58\r\n  Finished:    System.Linq.Expressions.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Linq.Expressions.Tests  Total: 4176, Errors: 0, Failed: 0, Skipped: 0, Time: 861.244s\r\n```\r\n\r\nEven with this test disabled the remaining tests of the assembly take 20 minutes on Windows/x64 and 70 minutes on Linux/x64 to finish - still prohibitive for running against PRs.\r\n\r\n```\r\nC:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Work\\91ffc885-6e89-446d-9bca-70acb188ddf8\\Exec>set COMPlus \r\nEnvironment variable COMPlus not defined\r\n\r\nC:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Work\\91ffc885-6e89-446d-9bca-70acb188ddf8\\Exec>call RunTests.cmd -r C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload --rsp-file C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload\\CoreFX.issues.rsp  \r\n----- start Wed 06/19/2019 21:37:26.02 ===============  To repro directly: ===================================================== \r\npushd C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Work\\91ffc885-6e89-446d-9bca-70acb188ddf8\\Exec\\\r\n\"C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload\\dotnet.exe\" xunit.console.dll System.Linq.Expressions.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload\\CoreFX.issues.rsp\r\npopd\r\n===========================================================================================================\r\nC:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Work\\91ffc885-6e89-446d-9bca-70acb188ddf8\\Exec>\"C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload\\dotnet.exe\" xunit.console.dll System.Linq.Expressions.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\d19e7e4c-256d-4b38-945a-37efd93debc7\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Linq.Expressions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Linq.Expressions.Tests (found 5631 of 5641 test cases)\r\n  Starting:    System.Linq.Expressions.Tests (parallel test collections = on, max threads = 2)\r\n  Finished:    System.Linq.Expressions.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Linq.Expressions.Tests  Total: 31035, Errors: 0, Failed: 0, Skipped: 0, Time: 1220.368s\r\n----- end Wed 06/19/2019 21:58:05.41 ----- exit code 0 ----------------------------------------------------------\r\n```\r\n\r\n```\r\n+ printenv\r\n+ grep COMPlus\r\n+ ./RunTests.sh -r /home/helixbot/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Payload --rsp-file /home/helixbot/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Payload/CoreFX.issues.rsp\r\n----- start Wed Jun 19 21:47:20 UTC 2019 =============== To repro directly: =====================================================\r\npushd .\r\n/home/helixbot/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Payload/dotnet xunit.console.dll System.Linq.Expressions.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=OuterLoop -notrait category=failing @/home/helixbot/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Payload/CoreFX.issues.rsp\r\npopd\r\n===========================================================================================================\r\n~/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Work/d1c6129b-efe4-4034-a693-62a9c7aaae3c/Exec ~/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Work/d1c6129b-efe4-4034-a693-62a9c7aaae3c/Exec\r\n  Discovering: System.Linq.Expressions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Linq.Expressions.Tests (found 5631 of 5641 test cases)\r\n  Starting:    System.Linq.Expressions.Tests (parallel test collections = on, max threads = 2)\r\n  Finished:    System.Linq.Expressions.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Linq.Expressions.Tests  Total: 31035, Errors: 0, Failed: 0, Skipped: 0, Time: 4202.212s\r\n~/work/38902c0c-6c84-49a6-bd91-32a489a5b504/Work/d1c6129b-efe4-4034-a693-62a9c7aaae3c/Exec\r\n----- end Wed Jun 19 22:58:04 UTC 2019 ----- exit code 0 ----------------------------------------------------------\r\n```\r\n\r\nAt some point, we can consider re-enabling the test assembly in outerloop jobs.","Url":"https://github.com/dotnet/coreclr/issues/25269","RelatedDescription":"Open issue \"System.Linq.Expressions.Tests is long-running with Checked coreclr\" (#25269)"},{"Id":"458261372","IsPullRequest":true,"CreatedAt":"2019-06-19T23:39:17","Actor":"BruceForstall","Number":"25265","RawContent":null,"Title":"Update run-corefx-tests.py for new 3.0.0 directory name","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25265","RelatedDescription":"Closed or merged PR \"Update run-corefx-tests.py for new 3.0.0 directory name\" (#25265)"},{"Id":"458270679","IsPullRequest":true,"CreatedAt":"2019-06-19T23:38:32","Actor":"trylek","Number":"25267","RawContent":null,"Title":"Initial check-in of R2R format documentation","State":"open","Body":"In this initial commit I have converted Jan Kotas' R2R format doc\r\nfrom an internal Word document to the md format and I removed some\r\nreferences to other internal docs. I plan to follow up by updating\r\nthe description to the current format version (e.g. apparently the\r\ndescription doesn't yet include the instance entrypoint table) and\r\nby adding specific extensions for the composite R2R format.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. This is my first attempt at a md documentation PR so please\r\ndon't hesitate to steer my efforts if I happen to not be sticking\r\nto any doc coding standards I might be unaware of.","Url":"https://github.com/dotnet/coreclr/pull/25267","RelatedDescription":"Open PR \"Initial check-in of R2R format documentation\" (#25267)"},{"Id":"458268854","IsPullRequest":true,"CreatedAt":"2019-06-19T23:29:36","Actor":"BruceForstall","Number":"25266","RawContent":null,"Title":"Add pipeline schedules to YAML file","State":"open","Body":"Schedules can no longer be specified in the UI; they must be\r\nspecified in the YAML file.\r\n\r\nExtremely minimal documentation is here: https://docs.microsoft.com/en-us/azure/devops/release-notes/2019/sprint-153-update#use-cron-syntax-to-specify-schedules-in-a-yaml-file","Url":"https://github.com/dotnet/coreclr/pull/25266","RelatedDescription":"Open PR \"Add pipeline schedules to YAML file\" (#25266)"},{"Id":"457806313","IsPullRequest":true,"CreatedAt":"2019-06-19T23:21:04","Actor":"CarolEidt","Number":"25247","RawContent":null,"Title":"Restrict copyprop if address-taken","State":"closed","Body":"Fix #25231","Url":"https://github.com/dotnet/coreclr/pull/25247","RelatedDescription":"Closed or merged PR \"Restrict copyprop if address-taken\" (#25247)"},{"Id":"458260760","IsPullRequest":true,"CreatedAt":"2019-06-19T22:55:36","Actor":"jkoritzinsky","Number":"25264","RawContent":null,"Title":"Remove dead code related to copy-constructors and intercept stubs","State":"open","Body":"We don't use an intercept stub to handle copy-constructor marshalling on x86 (the copy constructor marshaler is like any other marshaler), so we don't need any of the code tracking if copy-constructor marshalling is used on the MethodDesc.\r\n\r\nWhile taking a look at this, I noticed that we don't actually use any intercept stubs at all on CoreCLR, so this PR also removes the handling for intercept stubs.","Url":"https://github.com/dotnet/coreclr/pull/25264","RelatedDescription":"Open PR \"Remove dead code related to copy-constructors and intercept stubs\" (#25264)"},{"Id":"458258457","IsPullRequest":false,"CreatedAt":"2019-06-19T22:46:35","Actor":"echesakovMSFT","Number":"25263","RawContent":null,"Title":"[JitStress][TieredCompilation] Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection Failures","State":"open","Body":"**Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey** - Linux/x64\r\n\r\n**Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey** - Linux/x64 and Windows_NT/x64\r\n\r\nFail with **COMPlus_TieredCompilation=1 COMPlus_JitStress=2**\r\n\r\n```\r\n+ printenv\r\n+ grep COMPlus\r\nCOMPlus_TieredCompilation=1\r\nCOMPlus_JitStress=2\r\n+ ./RunTests.sh -r /home/helixbot/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Payload --rsp-file /home/helixbot/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Payload/CoreFX.issues.rsp\r\n----- start Wed Jun 19 21:26:22 UTC 2019 =============== To repro directly: =====================================================\r\npushd .\r\n/home/helixbot/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Payload/dotnet xunit.console.dll System.Collections.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=OuterLoop -notrait category=failing @/home/helixbot/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Payload/CoreFX.issues.rsp\r\npopd\r\n===========================================================================================================\r\n~/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Work/0cf47e1d-da0c-4f32-9322-ca796953339e/Exec ~/work/2c8571c5-4b43-472b-a177-a1d5f40adc83/Work/0cf47e1d-da0c-4f32-9322-ca796953339e/Exec\r\n  Discovering: System.Collections.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Collections.Tests (found 5093 of 6940 test cases)\r\n  Starting:    System.Collections.Tests (parallel test collections = on, max threads = 2)\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(comparerType: null) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(54,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(comparerType: typeof(Generic.Dictionary.CustomEqualityComparerInt32ValueType)) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(54,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(comparerType: null) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(78,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(comparerType: typeof(Generic.Dictionary.CustomEqualityComparerDummyRefType)) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(78,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n  Finished:    System.Collections.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Collections.Tests  Total: 30466, Errors: 0, Failed: 4, Skipped: 0, Time: 510.676s\r\n```\r\nAnd with **COMPlus_TieredCompilation=1 COMPlus_JitStress=1**\r\n\r\n```\r\n+ printenv\r\n+ grep COMPlus\r\nCOMPlus_TieredCompilation=1\r\nCOMPlus_JitStress=1\r\n+ ./RunTests.sh -r /home/helixbot/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Payload --rsp-file /home/helixbot/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Payload/CoreFX.issues.rsp\r\n----- start Wed Jun 19 20:53:04 UTC 2019 =============== To repro directly: =====================================================\r\npushd .\r\n/home/helixbot/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Payload/dotnet xunit.console.dll System.Collections.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=OuterLoop -notrait category=failing @/home/helixbot/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Payload/CoreFX.issues.rsp\r\npopd\r\n===========================================================================================================\r\n~/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Work/2e934c2e-c938-4070-b83c-0887fd44759e/Exec ~/work/37dfcdfe-33ac-4b33-ad6b-6d56df606265/Work/2e934c2e-c938-4070-b83c-0887fd44759e/Exec\r\n  Discovering: System.Collections.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Collections.Tests (found 5093 of 6940 test cases)\r\n  Starting:    System.Collections.Tests (parallel test collections = on, max threads = 2)\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(comparerType: typeof(Generic.Dictionary.CustomEqualityComparerInt32ValueType)) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(54,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ValueTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n    Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(comparerType: typeof(Generic.Dictionary.CustomEqualityComparerDummyRefType)) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(78,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(Type comparerType)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n  Finished:    System.Collections.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Collections.Tests  Total: 30466, Errors: 0, Failed: 2, Skipped: 0, Time: 525.847s\r\n```\r\n\r\n```\r\nC:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Work\\b9db74d2-31b9-45de-9b2f-81f94e635e09\\Exec>set COMPlus \r\nCOMPlus_JitStress=1\r\nCOMPlus_TieredCompilation=1\r\n\r\nC:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Work\\b9db74d2-31b9-45de-9b2f-81f94e635e09\\Exec>call RunTests.cmd -r C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload --rsp-file C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload\\CoreFX.issues.rsp  \r\n\r\n----- start Wed 06/19/2019 20:50:17.26 ===============  To repro directly: ===================================================== \r\n\r\npushd C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Work\\b9db74d2-31b9-45de-9b2f-81f94e635e09\\Exec\\\r\n\"C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload\\dotnet.exe\" xunit.console.dll System.Collections.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload\\CoreFX.issues.rsp\r\npopd\r\n\r\n===========================================================================================================\r\n\r\nC:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Work\\b9db74d2-31b9-45de-9b2f-81f94e635e09\\Exec>\"C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload\\dotnet.exe\" xunit.console.dll System.Collections.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\f3d1277a-b9b3-44c6-8527-045e7225b65f\\Payload\\CoreFX.issues.rsp \r\n\r\n  Discovering: System.Collections.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Collections.Tests (found 5093 of 6940 test cases)\r\n  Starting:    System.Collections.Tests (parallel test collections = on, max threads = 2)\r\n  Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(comparerType: typeof(Generic.Dictionary.CustomEqualityComparerDummyRefType)) [FAIL]\r\n      Assert.True() Failure\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(38,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection[TKey,TValue](Dictionary`2 dictionary, Boolean isValueType, Object comparer, Action`1 add, Action`1 get, Action`1 remove, Action`1 removeOutParam)\r\n        /_/src/System.Collections/tests/Generic/Dictionary/Dictionary.Generic.Tests.ConcurrentAccessDetection.netcoreapp.cs(78,0): at Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection_ReferenceTypeKey(Type comparerType)\r\n\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n\r\n  Finished:    System.Collections.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n\r\n   System.Collections.Tests  Total: 30466, Errors: 0, Failed: 1, Skipped: 0, Time: 232.333s\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25263","RelatedDescription":"Open issue \"[JitStress][TieredCompilation] Generic.Dictionary.DictionaryConcurrentAccessDetectionTests.DictionaryConcurrentAccessDetection Failures\" (#25263)"},{"Id":"458171400","IsPullRequest":true,"CreatedAt":"2019-06-19T18:46:16","Actor":"kouvel","Number":"25261","RawContent":null,"Title":"Fix GCStress modes that do code instrumentation to work with code versioning","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/17646","Url":"https://github.com/dotnet/coreclr/pull/25261","RelatedDescription":"Open PR \"Fix GCStress modes that do code instrumentation to work with code versioning\" (#25261)"},{"Id":"458156653","IsPullRequest":true,"CreatedAt":"2019-06-19T18:23:04","Actor":"briansull","Number":"25260","RawContent":null,"Title":"Fix Issue #25134 - AssertionProp incorrectly removes cast from uint","State":"open","Body":"Add additional check for the GT_UNSIGNED flag","Url":"https://github.com/dotnet/coreclr/pull/25260","RelatedDescription":"Open PR \"Fix Issue #25134 - AssertionProp incorrectly removes cast from uint\" (#25260)"},{"Id":"458104875","IsPullRequest":true,"CreatedAt":"2019-06-19T16:15:54","Actor":"MichalStrehovsky","Number":"25259","RawContent":null,"Title":"JitBench: Run PowerShell with an execution policy","State":"open","Body":"PowerShell is useless without this argument in default Windows configurations.","Url":"https://github.com/dotnet/coreclr/pull/25259","RelatedDescription":"Open PR \"JitBench: Run PowerShell with an execution policy\" (#25259)"},{"Id":"457996765","IsPullRequest":true,"CreatedAt":"2019-06-19T12:54:34","Actor":"dotnet-maestro[bot]","Number":"25255","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 11:48 AM\r\n- **Commit**: 1dd06341a5455ac4bdcf3a30b2fa05e329811658\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190619.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190619.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25255","RelatedDescription":"Open PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25255)"},{"Id":"457990750","IsPullRequest":true,"CreatedAt":"2019-06-19T12:42:07","Actor":"dotnet-maestro[bot]","Number":"25254","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190619.02\r\n- **Date Produced**: 6/19/2019 11:55 AM\r\n- **Commit**: 5b96a74985ecd8f0390a356538440a69304d5ede\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27819-02\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25254","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#25254)"},{"Id":"457981977","IsPullRequest":true,"CreatedAt":"2019-06-19T12:23:20","Actor":"dotnet-maestro[bot]","Number":"25253","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25253","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#25253)"},{"Id":"458014670","IsPullRequest":false,"CreatedAt":"2019-06-19T12:10:00","Actor":"jnm2","Number":"25256","RawContent":null,"Title":"ParameterInfo.DefaultValue returns the raw value if the enum is nullable","State":"open","Body":"Given the following method parameters, the first ParameterInfo's DefaultValue returns `SomeEnum.A`, unlike the RawDefaultValue parameter. The second ParameterInfo's DefaultValue returns `0`, just like the RawDefaultValue parameter:\r\n\r\n```cs\r\nenum SomeEnum { A, B }\r\n\r\nclass Foo\r\n{\r\n    public void Bar(SomeEnum x = SomeEnum.A, SomeEnum? y = SomeEnum.A)\r\n    {\r\n    }\r\n}\r\n\r\npublic static class Program\r\n{\r\n    public static void Main()\r\n    {\r\n        foreach (var parameter in typeof(Foo).GetMethod(nameof(Foo.Bar)).GetParameters())\r\n        {\r\n            var defaultValue = parameter.DefaultValue;\r\n            Console.WriteLine($\"{defaultValue} ({defaultValue.GetType()})\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nA (SomeEnum)\r\n0 (System.Int32)\r\n```\r\n\r\nTo work around the problems this was causing, you can replace all calls to ParameterInfo.DefaultValue with a call to this method:\r\n\r\n```cs\r\nprivate static object GetDefaultValue(ParameterInfo parameter)\r\n{\r\n    if (parameter.DefaultValue != null)\r\n    {\r\n        var underlyingType = Nullable.GetUnderlyingType(parameter.ParameterType);\r\n\r\n        if (underlyingType != null && underlyingType.IsEnum)\r\n        {\r\n            return Enum.ToObject(underlyingType, parameter.DefaultValue);\r\n        }\r\n    }\r\n\r\n    return parameter.DefaultValue;\r\n}\r\n```\r\n\r\nSomeone suggested that I file this in case this is something you would consider changing in a future major version.","Url":"https://github.com/dotnet/coreclr/issues/25256","RelatedDescription":"Open issue \"ParameterInfo.DefaultValue returns the raw value if the enum is nullable\" (#25256)"},{"Id":"457863537","IsPullRequest":false,"CreatedAt":"2019-06-19T09:25:09","Actor":"slepmog","Number":"25250","RawContent":null,"Title":"StringComparers may return different HashCodes for equal string values","State":"closed","Body":"The problem: currently some `StringComparer`s may return different hash codes for strings which they themselves declare to be `Equal()`.\r\n\r\nThis breaks the fundamental principle that any two equal objects must have same hash, and makes it impossible to safely pass collections of strings to LINQ operators that group and sort them.\r\n\r\nThe problem was first raised on StackOverflow: https://stackoverflow.com/q/54243461/11683,  \r\nthen reported at https://developercommunity.visualstudio.com/content/problem/430327/stringcomparers-may-return-different-hashcodes-for.html.\r\n\r\nIt was then closed as wontfix because for backward compatibility reasons hash values need to remain the same.\r\n\r\nWhile I understand that reasoning, I also believe that it was documented somewhere that hash codes *may* specifically be different between \"very major\" versions of .NET, so one should not rely on them staying the same between those.  \r\nBuilding on that, I believe it would be important **use the upcoming .NET 5 release as an opportunity to fix this hash code issue and change the hash code generation** so that strings that are `Equal()` do have same hash codes like they should.\r\n\r\n---\r\nCode to reproduce the issue (also found at the links above):\r\n\r\n```cs\r\nstatic void Main(string[] args)\r\n{\r\n    string s1 = \"\";\r\n    string s2 = \"\\0\\0\\0\"; // Can be any number of \\0's\r\n\r\n    Test(nameof(StringComparer.CurrentCulture), StringComparer.CurrentCulture, s1, s2);\r\n    Test(nameof(StringComparer.CurrentCultureIgnoreCase), StringComparer.CurrentCultureIgnoreCase, s1, s2);\r\n    Test(nameof(StringComparer.InvariantCulture), StringComparer.InvariantCulture, s1, s2);\r\n    Test(nameof(StringComparer.InvariantCultureIgnoreCase), StringComparer.InvariantCultureIgnoreCase, s1, s2);\r\n\r\n    Console.ReadLine();\r\n}\r\n\r\nprivate static void Test(string comparer_name, StringComparer sc, string s1, string s2)\r\n{\r\n    Console.WriteLine(comparer_name); // cs.GetType().Name does not return that, unfortunately\r\n    Console.WriteLine(\"Hash 1: {0}\", sc.GetHashCode(s1));\r\n    Console.WriteLine(\"Hash 2: {0}\", sc.GetHashCode(s2));\r\n    Console.WriteLine(\"Strings equal: {0}\", sc.Equals(s1, s2));\r\n    Console.WriteLine();\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25250","RelatedDescription":"Closed issue \"StringComparers may return different HashCodes for equal string values\" (#25250)"},{"Id":"457884360","IsPullRequest":false,"CreatedAt":"2019-06-19T08:47:25","Actor":"Tragetaschen","Number":"25252","RawContent":null,"Title":"Consistent SIGSEGV in sweep_large_objects on linux-arm","State":"open","Body":"I have migrated my .NET Core 2.2 app to the 3.0 Preview 6 bits. I publish on Windows using `-c Release -r linux-arm`. Now quite early during startup, my application crashes with a SIGSEGV.\r\n\r\nI have attached a gdb and the stack trace consistently is\r\n```\r\n#0  0xb6956afc in WKS::gc_heap::sweep_large_objects() () from …/libcoreclr.so\r\n#1  0xb694c712 in WKS::gc_heap::plan_phase(int) () from …/libcoreclr.so\r\n#2  0xb69484e8 in WKS::gc_heap::gc1() () from …/libcoreclr.so\r\n#3  0xb694f9b4 in WKS::gc_heap::garbage_collect(int) () from …/libcoreclr.so\r\n#4  0xb6944b5c in WKS::GCHeap::GarbageCollectGeneration(unsigned int, gc_reason) () from _/libcoreclr.so\r\n#5  0xb6946860 in WKS::gc_heap::try_allocate_more_space(alloc_context*, unsigned int, unsigned int, int) () from …/libcoreclr.so\r\n#6  0xb695fcd8 in WKS::GCHeap::Alloc(gc_alloc_context*, unsigned int, unsigned int) () from …/libcoreclr.so\r\n#7  0xb6806ab6 in AllocateObject(MethodTable*) () from …/libcoreclr.so\r\n#8  0xb680ef06 in JIT_New(CORINFO_CLASS_STRUCT_*) () from …/libcoreclr.so\r\n#9  0xb19f7698 in ?? ()\r\n```\r\n\r\nThe only changes besides `netcoreapp2.2 -> netcoreapp3.0` are the introduction of some server-side Blazor code, but the application doesn't even come close to the point of running any of that.","Url":"https://github.com/dotnet/coreclr/issues/25252","RelatedDescription":"Open issue \"Consistent SIGSEGV in sweep_large_objects on linux-arm\" (#25252)"},{"Id":"457880812","IsPullRequest":true,"CreatedAt":"2019-06-19T08:39:37","Actor":"AndyAyersMS","Number":"25251","RawContent":null,"Title":"JIT: use register indirect for indirect jumps","State":"open","Body":"If we are jumping to another method via an indirection cell, the cell address\r\nmay be too far from the jump to address via a RIP-relative indirection. So\r\ninstead, load the target address into RAX and jump register indirect.\r\n\r\nFixes #22342.","Url":"https://github.com/dotnet/coreclr/pull/25251","RelatedDescription":"Open PR \"JIT: use register indirect for indirect jumps\" (#25251)"},{"Id":"457850802","IsPullRequest":true,"CreatedAt":"2019-06-19T07:28:47","Actor":"davmason","Number":"25249","RawContent":null,"Title":"Mark the profiler attach thread during attach","State":"open","Body":"Fixes #25225","Url":"https://github.com/dotnet/coreclr/pull/25249","RelatedDescription":"Open PR \"Mark the profiler attach thread during attach\" (#25249)"},{"Id":"457843167","IsPullRequest":false,"CreatedAt":"2019-06-19T07:08:25","Actor":"msedi","Number":"25248","RawContent":null,"Title":"Provide a way for casting a datatype to another datatype","State":"open","Body":"Coming from this issue: [#25175](https://github.com/dotnet/coreclr/issues/25175)\r\n\r\nIn need to deal with a lot of data and there are many occasions where the data needs to be stored internally with the most memory saving datatype. In many cases I need to store the datatype as byte or int (doesn't matter if unsigned or not). The data type is variable at runtime so I cannot bind myself to a specific datatype.\r\n\r\nFor algorithms it's sometimes necessary though that I work with floats, for two reasons:\r\n\r\n1. Because otherwise I would have to write code for any datatype\r\n2. There is no numeric support on generics in C#\r\n\r\nFor that reason, any time an algorithm needs to work on the data, the data is cast upfront to float and then the algorithms works on this data, but of course I have an additional cost of allocating new data and casting the data.\r\n\r\nSo my idea was to write some sort of a view on the data, the implicitly does a `reinterpret_cast`.\r\nBut there are two problems.\r\n\r\n1. I cannot cast\r\n2. The unmanaged type is returned by value\r\n\r\n```\r\n    public class ArrayView<Tin, Tout> where Tin : struct where Tout : unmanaged\r\n    {\r\n        private Tin[] array;\r\n\r\n        public ArrayView(Tin[] array_in)\r\n        {\r\n            array = array_in;\r\n        }\r\n\r\n        public Tout this[int index] => (Tout)array[index];\r\n    }\r\n```\r\n\r\nLooking at a \"typed\" version it works, of course, but still the problem of the \"by value\" return\r\n\r\n```\r\n  public class ArrayView\r\n    {\r\n        private readonly int[] array;\r\n\r\n        public ArrayView(int[] array_in)\r\n        {\r\n            array = array_in;\r\n        }\r\n\r\n        public float this[int index] => (float)array[index];\r\n    }\r\n```\r\n\r\nSo my proposal would be following:\r\n\r\n1. Provide a way to have some sort of reinterpret_cast\r\n2. Provide a possibility to not return the cast value as \"by value\", but rather return it directly (somehow). Obviously ref returns are not possible here.\r\n3. Make the runtime recognize the indexer and perform some optimization.\r\n\r\nI'm really open for discussions on this, because I'm not sure if I understood the components of the runtime that are necessary to perform this task. I'm also not really able to do benchmarks since it's currently not possible in C#. I'm thinking of a generic implementation in IL.","Url":"https://github.com/dotnet/coreclr/issues/25248","RelatedDescription":"Open issue \"Provide a way for casting a datatype to another datatype\" (#25248)"},{"Id":"457778269","IsPullRequest":false,"CreatedAt":"2019-06-19T02:38:31","Actor":"RickStrahl","Number":"25246","RawContent":null,"Title":"InitializeCoreClr() and multiple calls","State":"open","Body":"I have an application that hosts the .NET Core runtime, which can effectively clear out memory - it's a host IDE and it has the ability to basically clear memory. When this happens it effectively releases all the state in my host DLL including the `hostHandle` and `domainId` that the `initializerCoreClr()` delegate generates.\r\n\r\nI use a few global variables to cache the runtime specific values:\r\n\r\n```cpp\r\nvoid* hostHandle;\r\nunsigned int domainId = 0;\r\n```\r\n\r\nand on subsequent requests check if these exist and then reuse. \r\n\r\n```cpp\r\n       if (domainId == 0)\r\n       {\r\n               coreclr_initialize_ptr initializeCoreClr = (coreclr_initialize_ptr)GetProcAddress(coreClr, \"coreclr_initialize\");\r\n\r\n                // This function both starts the .NET Core runtime and creates\r\n\t\t// the default (and only) AppDomain\r\n\t\tHRESULT hr = initializeCoreClr(\r\n\t\t\truntimePath,        // App base path\r\n\t\t\tappDomainName,\r\n\t\t\tsizeof(propertyKeys) / sizeof(char*),   // Property count\r\n\t\t\tpropertyKeys,       // Property names\r\n\t\t\tpropertyValues,     // Property values\r\n\t\t\t&hostHandle,        // Host handle\r\n\t\t\t&domainId);         // AppDomain ID\r\n       }\r\n```\r\n\r\nThis works fine for standard operation - multiple calls call the init once, and then just re-use the hostHandle and domainId for the actual invocation to create a proxy. \r\n\r\nBut if the host clears memory the domainId goes away and neither it or hostHandle are available for the required delegate invokations later. If I call the delegate a second time  I get an 'Invalid Operation' error.\r\n\r\nI think it would be useful to allow for this API to return the one and only **existing** runtime reference and repopulate the hostHandle and domainId if this is called subsequent times.\r\n\r\nEither that or provide some way to attach to find an existing (or rather the only one) runtime and re-populate the hostHandle and domainId.\r\n\r\nClassic .NET hosting allowed for this and simply returned the existing default AppDomain which seems to be a good alternative.\r\n\r\nI realize _this is a bit of a special case_ (releasing all memory) but I've not found a way around this issue, which is kind of a deal breaker for using .NET Core (over classic .NET Framework) on a technicality. \r\n","Url":"https://github.com/dotnet/coreclr/issues/25246","RelatedDescription":"Open issue \"InitializeCoreClr() and multiple calls\" (#25246)"},{"Id":"457771509","IsPullRequest":false,"CreatedAt":"2019-06-19T02:06:44","Actor":"VincentBu","Number":"25245","RawContent":null,"Title":"Test failed: JIT_jit64._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190617.1/workItem/JIT.jit64.opt/analysis/xunit/JIT_jit64._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_~2F_opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_sh\r\n\r\n**Failed tests:**\r\nJIT_jit64._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_sh\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      /datadisks/disk1/work/008d0f9c-767e-4400-b1f7-04862694c6ba/Work/f12f573f-8b1f-4062-868b-c339cea75cbc/Exec/JIT/jit64/Reports/JIT.jit64/opt/rngchk/ArrayWithThread_o/ArrayWithThread_o.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/datadisks/disk1/work/008d0f9c-767e-4400-b1f7-04862694c6ba/Payload/corerun ArrayWithThread_o.exe ''\r\nTest 1 Failed\r\nTest 2 Passed\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/datadisks/disk1/work/008d0f9c-767e-4400-b1f7-04862694c6ba/Payload\r\n> /datadisks/disk1/work/008d0f9c-767e-4400-b1f7-04862694c6ba/Work/f12f573f-8b1f-4062-868b-c339cea75cbc/Exec/JIT/jit64/opt/rngchk/ArrayWithThread_o/ArrayWithThread_o.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25245","RelatedDescription":"Open issue \"Test failed: JIT_jit64._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_._opt_rngchk_ArrayWithThread_o_ArrayWithThread_o_sh\" (#25245)"},{"Id":"457768469","IsPullRequest":false,"CreatedAt":"2019-06-19T01:51:45","Actor":"VincentBu","Number":"25244","RawContent":null,"Title":"Assert failure: HasPerInstInfo()","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190616.1/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_~2F_CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_cmd\r\n\r\n**Failed tests:**\r\nJIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 4460 [0x0000116c], Thread: 3048 [0x0be8]): HasPerInstInfo()\r\n\r\n<no module>! <no symbol> + 0x0 (0x00000000)\r\n    File: f:\\\\workspace\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\methodtable.h Line: 2955\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\d612e967-3739-4ea0-bbcf-da077764d85b\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\d612e967-3739-4ea0-bbcf-da077764d85b\\\\Work\\\\e39edb3b-c408-480c-a752-84aca6598fdc\\\\Exec\\\\JIT\\\\Performance\\\\Reports\\\\JIT.Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-5\\\\regex-redux-5.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\d612e967-3739-4ea0-bbcf-da077764d85b\\\\Payload\\\\corerun.exe\\\" regex-redux-5.exe \r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\d612e967-3739-4ea0-bbcf-da077764d85b\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\d612e967-3739-4ea0-bbcf-da077764d85b\\\\Work\\\\e39edb3b-c408-480c-a752-84aca6598fdc\\\\Exec\\\\JIT\\\\Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-5\\\\regex-redux-5.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25244","RelatedDescription":"Open issue \"Assert failure: HasPerInstInfo()\" (#25244)"},{"Id":"458272610","IsPullRequest":false,"CreatedAt":"2019-04-24T02:29:31","Actor":"noahfalk","Number":"25268","RawContent":null,"Title":"Not all dotnet-trace profiles should have Rundown and Sampling","State":"open","Body":"I assume the current implementation of the 'None' profile still does Rundown at the end, and probably the gc profiles too. Rundown can be very time consuming and large so it may not be what the user wanted. Tasks:\r\n\r\n- [ ] Figure out which of our hard coded profiles should have rundown included\r\n- [ ] Implement some mechanism that allows the trace client to configure rundown rather than having the runtime assume that rundown always happens.\r\n\r\n[EDIT]: Also added sampling which is roughly same issue as rundown","Url":"https://github.com/dotnet/coreclr/issues/25268","RelatedDescription":"Open issue \"Not all dotnet-trace profiles should have Rundown and Sampling\" (#25268)"},{"Id":"458228555","IsPullRequest":false,"CreatedAt":"2019-04-23T12:30:30","Actor":"noahfalk","Number":"25262","RawContent":null,"Title":"EventCounter multi-session support","State":"open","Body":"Once we have runtime multi-session support, we need to handle the case where multiple clients are each requesting different refresh rates from EventCounters. My proposal in our earlier design discussions is that we emit a series of counter data for every requested interval. In the future we might filter it so that each client's request only goes to their session, but that requires work from [#20917](https://github.com/dotnet/coreclr/issues/20917) which we aren't doing yet. In the meantime we will let all clients observe the requests from all other clients and they can pick out the series they are interested in. \r\n\r\nWe need to do work in EventSource/EventCounters to maintain distinct requests from each client and to compute statistics/emit events corresponding to those intervals.","Url":"https://github.com/dotnet/coreclr/issues/25262","RelatedDescription":"Open issue \"EventCounter multi-session support\" (#25262)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"458201859","IsPullRequest":true,"CreatedAt":"2019-06-19T22:10:19","Actor":"dotnet-maestro[bot]","Number":"11591","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190619.3\r\n- **Date Produced**: 6/19/2019 8:03 PM\r\n- **Commit**: 2df72072ad5bf4d40c1e20d96500593cd801b557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19319.3\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11591","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11591)"},{"Id":"457973899","IsPullRequest":true,"CreatedAt":"2019-06-19T21:46:30","Actor":"dotnet-maestro[bot]","Number":"11587","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11587","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11587)"},{"Id":"457705721","IsPullRequest":true,"CreatedAt":"2019-06-19T21:18:21","Actor":"livarcocc","Number":"11583","RawContent":null,"Title":"Update MSBuild to 16.2.0-preview-19318-05","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11583","RelatedDescription":"Closed or merged PR \"Update MSBuild to 16.2.0-preview-19318-05\" (#11583)"},{"Id":"457704645","IsPullRequest":true,"CreatedAt":"2019-06-19T21:18:07","Actor":"livarcocc","Number":"11582","RawContent":null,"Title":"Update MSBuild to 16.2.0-preview-19318-05","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11582","RelatedDescription":"Closed or merged PR \"Update MSBuild to 16.2.0-preview-19318-05\" (#11582)"},{"Id":"457942388","IsPullRequest":true,"CreatedAt":"2019-06-19T18:36:54","Actor":"dotnet-maestro[bot]","Number":"11586","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190619.2\r\n- **Date Produced**: 6/19/2019 6:06 PM\r\n- **Commit**: 9ea20ddef331b786141b5e52cd03a91bff4c401f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19319.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11586)"},{"Id":"458045253","IsPullRequest":false,"CreatedAt":"2019-06-19T14:23:36","Actor":"rcl4444","Number":"11590","RawContent":null,"Title":"some problem with dotnet publish","State":"open","Body":"## Steps to reproduce\r\nI have a project,SplitPackage.Web.Host reference SplitPackage.Web.Core, SplitPackage.Web.Core  reference SplitPackage.Application.SplitPackage.Web.Host 's publish need SplitPackage.Application.xml and SplitPackage.Web.Core.xml in the SwaggerXml folder.\r\nwhen I excuting command `dotnet publish` in dotnet sdk 2.1.505, it do well.when I upgrade to 2.2.300.The result is not as expected\r\nSplitPackage.Web.Host.csproj 's content below\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n    <AssemblyName>SplitPackage.Web.Host</AssemblyName>\r\n    <OutputType>Exe</OutputType>\r\n    <PackageId>SplitPackage.Web.Host</PackageId>\r\n    <UserSecretsId>AbpCompanyName-SplitPackage-56C2EF2F-ABD6-4EFC-AAF2-2E81C34E8FB1</UserSecretsId>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n    <DockerComposeProjectPath>..\\..\\docker-compose.dcproj</DockerComposeProjectPath>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <DocumentationFile></DocumentationFile>\r\n    <NoWarn>1701;1702;</NoWarn>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Remove=\"wwwroot\\index.html\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <EmbeddedResource Include=\"SwaggerIndex.html\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <None Include=\"app.config\" />\r\n    <None Update=\"Dockerfile\">\r\n      <CopyToOutputDirectory>Never</CopyToOutputDirectory>\r\n    </None>\r\n    <None Update=\"log4net.config\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n    <None Update=\"wwwroot\\**\\*\">\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n    <None Include=\"SplitPackageRules\\**\\*\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"SwaggerXml\\**\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Web.Core\\SplitPackage.Web.Core.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.0\">\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Castle.LoggingFacility.MsLogging\" Version=\"3.1.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Abp.Castle.Log4Net\" Version=\"4.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Content Update=\"Configure\\log4net.config\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nSplitPackage.Web.Core.csproj's content below\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <VersionPrefix>1.0.0.0</VersionPrefix>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <AssemblyName>SplitPackage.Web.Core</AssemblyName>\r\n    <PackageId>SplitPackage.Web.Core</PackageId>\r\n    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>\r\n    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>\r\n    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>\r\n    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>\r\n    <RootNamespace>SplitPackage</RootNamespace>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <NoWarn>1701;1702;1591</NoWarn>\r\n<DocumentationFile>../SplitPackage.Web.Host/SwaggerXml/SplitPackage.Web.Core.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Application\\SplitPackage.Application.csproj\" />\r\n    <ProjectReference Include=\"..\\SplitPackage.EntityFrameworkCore\\SplitPackage.EntityFrameworkCore.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ValueTuple\" Version=\"4.5.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Owin\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"4.0.1\" />\r\n    <PackageReference Include=\"Abp.AspNetCore\" Version=\"4.0.2\" />\r\n    <PackageReference Include=\"Abp.ZeroCore\" Version=\"4.0.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Abp.AspNetCore.SignalR\" Version=\"4.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"Authentication\\UmsAuth\\System\\\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nSplitPackage.Application.csproj's context below:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <VersionPrefix>1.0.0.0</VersionPrefix>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <AssetTargetFallback>$(AssetTargetFallback);portable-net45+win8+wp8+wpa81;</AssetTargetFallback>\r\n    <AssemblyName>SplitPackage.Application</AssemblyName>\r\n    <PackageId>SplitPackage.Application</PackageId>\r\n    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>\r\n    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>\r\n    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>\r\n    <RootNamespace>SplitPackage</RootNamespace>\r\n    <DebugType>portable</DebugType>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <DefineConstants>FEATURE_SIGNALR_ASPNETCORE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n<DocumentationFile>../SplitPackage.Web.Host/SwaggerXml/SplitPackage.Application.xml</DocumentationFile>\r\n    <NoWarn>1701;1702;1591;1570;1571;1572;1573</NoWarn>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\SplitPackage.Core\\SplitPackage.Core.csproj\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"Business\\NumFreights\\\" />\r\n    <Folder Include=\"Business\\WeightFreights\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"DeepCloner\" Version=\"0.10.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n## Expected  behavior\r\nSplitPackage.Application.xml and SplitPackage.Web.Core.xml copy in the SwaggerXml folder.\r\n![image](https://user-images.githubusercontent.com/19640490/59772775-01f97a00-92df-11e9-9032-08a5e2dfe7fc.png)\r\n\r\n\r\n## Actual behavior\r\nSplitPackage.Application.xml and SplitPackage.Web.Core.xml not copy in the SwaggerXml folder.\r\n![image](https://user-images.githubusercontent.com/19640490/59773005-7502f080-92df-11e9-9ceb-3ff617ff6be3.png)\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11590","RelatedDescription":"Open issue \"some problem with dotnet publish\" (#11590)"},{"Id":"457976842","IsPullRequest":true,"CreatedAt":"2019-06-19T12:47:38","Actor":"dotnet-maestro[bot]","Number":"11589","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190618.1\r\n- **Date Produced**: 6/18/2019 12:50 PM\r\n- **Commit**: 84d778990198681b27f4a9b2eeea6efaeeb431a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19318.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11589)"},{"Id":"457974081","IsPullRequest":true,"CreatedAt":"2019-06-19T12:36:21","Actor":"dotnet-maestro[bot]","Number":"11588","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190618.4\r\n- **Date Produced**: 6/19/2019 6:31 AM\r\n- **Commit**: 7aa2004792850f672c70181820c86e88b8963992\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19318.4\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11588","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11588)"},{"Id":"457921502","IsPullRequest":false,"CreatedAt":"2019-06-19T10:04:17","Actor":"YunWeiaa","Number":"11585","RawContent":null,"Title":"Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build.","State":"open","Body":"## Steps to reproduce\r\n1. Install 16.3.0 [29018.65.master]([Release Channel](https://vsdrop.corp.microsoft.com/file/v1/Products/DevDiv/VS/710819d747beda09ce59cbbbf69a82db4090fcab/258a92b4-1d34-4fee-88e3-fbb419f25336%3bchannels/internal/Release/bootstrappers/fixed/Enterprise/vs_Enterprise.exe))\r\n2. Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via VS. Build and run\r\n\r\n## Expected  behavior\r\nBuild and run succeeded\r\n\r\n\r\n## Actual behavior\r\n![image](https://user-images.githubusercontent.com/33921754/59756414-3e67ae80-92bc-11e9-8ada-345ff0663665.png)\r\nOutput info:\r\nerror  : The project file cannot be opened by the project system, because it is missing some critical imports or the referenced SDK cannot be found.\r\n\r\nDetailed Information:\r\nUnable to locate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the installed version.\r\n\r\nNote: Open an existing .NET Core 2.1/2.2 console application with reference to a .NET Standard class lib via CLI. Build and run succeeded.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012323\r\n Commit:    46c4932822\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012323\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27809-09\r\n  Commit:  b2a369fb53\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview7-012323 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19307.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27809-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27809-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11585","RelatedDescription":"Open issue \"Current 3.0 Preview 7 SDK can't build projects targeting lower SDK versions in the 16.3 Release channel build.\" (#11585)"},{"Id":"457890869","IsPullRequest":true,"CreatedAt":"2019-06-19T09:36:36","Actor":"dotnet-maestro[bot]","Number":"11584","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190618.5\r\n- **Date Produced**: 6/19/2019 9:00 AM\r\n- **Commit**: 51919cb631f62040506266b46b19bc7a4d241d43\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19318.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11584)"},{"Id":"457619529","IsPullRequest":false,"CreatedAt":"2019-06-18T18:00:36","Actor":"peterhuene","Number":"11581","RawContent":null,"Title":"Implement improvements for SDK resolution in global.json.","State":"open","Body":"Tracking issue for implementing backwards-compatible improvements to global.json for .NET Core SDK resolution.\n\nThis feature will give users more flexibility in determining how SDKs are resolved by the command line tools.\n\nCurrently, a SDK version specified in `global.json` will always use the specified version or roll-forward to a compatible patch level if not found.\n\nThe improvement will allow users to prevent rolling-forward or given more control over how the roll-forward is performed.\n\nTODO: link to public design document once available.","Url":"https://github.com/dotnet/cli/issues/11581","RelatedDescription":"Open issue \"Implement improvements for SDK resolution in global.json.\" (#11581)"},{"Id":"456378466","IsPullRequest":false,"CreatedAt":"2019-06-18T17:37:42","Actor":"peterhuene","Number":"11564","RawContent":null,"Title":"'Dotnet.exe publish' silently creates bad format for mis-matching architectures","State":"closed","Body":"@jjxtra commented on [Thu Jun 13 2019](https://github.com/dotnet/core/issues/2869)\n\nWhen using `dotnet.exe publish` for specific runtimes, say win-x86, if using the 64 bit dotnet.exe, this runs without error, but when running the result executable, a `BadImageFormatException `is thrown. Same with target win-x64 from 32 bit dotnet.exe\r\n\r\nIt should be an error to create a runtime with the wrong 32 bit or 64 bit dotnet.exe, there should be an exception clearly stating that you need to run the dotnet.exe with the same architecture as the runtime you are targetting.\r\n\r\nAfter two days of pain, I finally realized I had to fully qualify the path to dotnet.exe as I had both 32 bit and 64 bit sdk installed. So now for my 32 bit runtime targets, I use the 32 bit dotnet.exe, for the 64 bit targets, the 64 bit dotnet.exe. All run fine without errors.\r\n\r\nPlease add this as an error condition and save many, many people a lot of pain, headaches and frustration.\r\n\r\nExample that fixes the problem in powershell:\r\n\r\n```powershell\r\n& \"c:/program files/dotnet/dotnet.exe\" publish Project.csproj -f netcoreapp2.2 -o package/linux-x64 -c Release -r linux-x64\r\n& \"c:/program files (x86)/dotnet/dotnet.exe\" publish Project.csproj -f netcoreapp2.2 -o package/win-x86 -c Release -r win-x86\r\n```\n\n---\n\n@karelz commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213331)\n\n@livarcocc @nguerrera does it belong to CLI or core-setup?\n\n---\n\n@livarcocc commented on [Fri Jun 14 2019](https://github.com/dotnet/core/issues/2869#issuecomment-502213616)\n\nCLI would be a good starting point. We can move it to core-setup if the issue was in the production of the apphost.\r\n\r\ncc @peterhuene \n\n","Url":"https://github.com/dotnet/cli/issues/11564","RelatedDescription":"Closed issue \"'Dotnet.exe publish' silently creates bad format for mis-matching architectures\" (#11564)"},{"Id":"457441420","IsPullRequest":true,"CreatedAt":"2019-06-18T17:34:53","Actor":"dotnet-maestro[bot]","Number":"11576","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190618.2\r\n- **Date Produced**: 6/18/2019 8:19 AM\r\n- **Commit**: dc538a29793fd56618d0fa3186e2388d47d00c19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19318.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11576)"},{"Id":"457432436","IsPullRequest":false,"CreatedAt":"2019-06-18T17:16:52","Actor":"chrisbecke","Number":"11575","RawContent":null,"Title":"dotnet publish recursivly publishes its own output","State":"closed","Body":"## Steps to reproduce\r\ncreate a new dotnet core application, and publish it multiple times using the -o option\r\n\r\n```\r\nmkdir aspnetpublishtest\r\ncd aspnetpublishtest\r\ndotnet publish -o publish\r\ndotnet publish -o publish\r\n```\r\n\r\n## Expected  behavior\r\nThe publish folder should be unaltered on the 2nd call to publish\r\n\r\n## Actual behavior\r\nThe publish folder contains a copy of the publish folder for each call to publish.\r\n\r\n## Discussion\r\nWhile the problem doesn't occur in the default (bin/) output location, this seems an easy situation to end up in as it seems a common practice in CI/CD to use a folder with a stable name in the project tp publish to.","Url":"https://github.com/dotnet/cli/issues/11575","RelatedDescription":"Closed issue \"dotnet publish recursivly publishes its own output\" (#11575)"},{"Id":"457583974","IsPullRequest":false,"CreatedAt":"2019-06-18T17:08:31","Actor":"basbossink","Number":"11580","RawContent":null,"Title":"dotnet nuget push --no-symbols requires option value while documented as switch","State":"closed","Body":"## Steps to reproduce\r\n\r\nRun \r\n```\r\ndotnet nuget push *.nupkg --api-key api-key --source https://api.nuget.org/v3/index.json --no-symbols\r\n```\r\n\r\n## Expected  behavior\r\nPackages successfully pushed to NuGet.\r\n\r\n## Actual behavior\r\n`dotnet nuget push` returns:\r\n```\r\nMissing value for option 'no-symbols'\r\n```\r\nChanging the above command to:\r\n```\r\ndotnet nuget push *.nupkg --api-key api-key --source https://api.nuget.org/v3/index.json --no-symbols true\r\n```\r\ngives the expected result.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   2.2.300\r\nCommit:    73efd5bd87\r\n\r\nRuntime Environment:\r\nOS Name:     Windows\r\nOS Version:  10.0.17134\r\nOS Platform: Windows\r\nRID:         win10-x64\r\nBase Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n Version: 2.2.5\r\n Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n 2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n 2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n 2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11580","RelatedDescription":"Closed issue \"dotnet nuget push --no-symbols requires option value while documented as switch\" (#11580)"},{"Id":"457540685","IsPullRequest":false,"CreatedAt":"2019-06-18T15:11:48","Actor":"Jaygem","Number":"11579","RawContent":null,"Title":"Feature Request : dotnet add file -lang [C#/F#] [MyClass/MyScript]","State":"open","Body":"Context : \r\n\r\nadding a class file/script file to the project. I'm currently using Ionide for F# and a 3rd party extension of VsCode to add a C# class file. Else i'm forced to add the file manually and rewrite the boilerplate code (usings and namespaces)\r\n\r\nPossible use : \r\n\r\nC#\r\n```powershell\r\ndotnet add file -lang C# MyClass\r\n```\r\n\r\nF#\r\n```powershell\r\ndotnet add file -lang F# MyScript\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11579","RelatedDescription":"Open issue \"Feature Request : dotnet add file -lang [C#/F#] [MyClass/MyScript]\" (#11579)"},{"Id":"457540344","IsPullRequest":false,"CreatedAt":"2019-06-18T15:11:08","Actor":"daniefer","Number":"11578","RawContent":null,"Title":"dotnet pack fails because command builds project into wrong target directory","State":"open","Body":"Using this simple repo: https://github.com/daniefer/dotnetcliissue\r\nWhen the `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>` project attribute is specified and the project has not been built with `dotnet build` before hand, the build will target netcoreapp2.2 instead of the target framework specified with the `<TargetFramework>netstandard2.0</TargetFramework>` attribute.  When this happens running `dotnet pack` will build the project into the `bin/Debug/netcoreapp2.2` folder instead of `bin/Debug/netstandard2.0` and the pack command will fail with the below error:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.2.300\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(199,5): error NU5026: The file 'C:\\Repos\\dotnetcliissue\\bin\\Debug\\netstandard2.0\\testing.dll' to be packed was not found on disk. [C:\\Repos\\dotnetcliissue\\testing.csproj]\r\n```\r\n\r\n## Steps to reproduce\r\nClone https://github.com/daniefer/dotnetcliissue\r\nEnsure bin/Debug is empty\r\nRun `dotnet pack` from project directory or by providing path the `*.csproj`\r\n\r\n## Expected  behavior\r\nShould pack project.\r\n\r\n## Actual behavior\r\ndotnet pack fails with below error:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.2.300\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(199,5): error NU5026: The file 'C:\\Repos\\dotnetcliissue\\bin\\Debug\\netstandard2.0\\testing.dll' to be packed was not found on disk. [C:\\Repos\\dotnetcliissue\\testing.csproj]\r\n```\r\n\r\n## Environment data\r\nglobal.json file (location - C:\\Repos):\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.2.300\"\r\n  }\r\n}\r\n```\r\n\r\n`dotnet --info` output:\r\n```\r\nPS C:\\Repos\\dotnetcliissue> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11578","RelatedDescription":"Open issue \"dotnet pack fails because command builds project into wrong target directory\" (#11578)"},{"Id":"457441642","IsPullRequest":true,"CreatedAt":"2019-06-18T12:36:57","Actor":"dotnet-maestro[bot]","Number":"11577","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190617.2\r\n- **Date Produced**: 6/17/2019 8:02 PM\r\n- **Commit**: a604702d687ad3ccdc5e0be45300588921cd7a51\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19317.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11577","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11577)"},{"Id":"456531276","IsPullRequest":true,"CreatedAt":"2019-06-17T23:14:20","Actor":"dotnet-maestro[bot]","Number":"11567","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190615.2\r\n- **Date Produced**: 6/15/2019 4:13 PM\r\n- **Commit**: aa4285be7fab64e2b6e62e4d5688ea50931c407c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19315.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11567","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11567)"},{"Id":"456897753","IsPullRequest":true,"CreatedAt":"2019-06-17T21:10:22","Actor":"dotnet-maestro[bot]","Number":"11572","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190616.1\r\n- **Date Produced**: 6/16/2019 7:58 PM\r\n- **Commit**: 77d6311a5dd7e519e6b496e97e93085bf2d3beb4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19316.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11572","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11572)"},{"Id":"457044414","IsPullRequest":false,"CreatedAt":"2019-06-17T20:14:42","Actor":"vsccarl","Number":"11574","RawContent":null,"Title":"‘Dotnet new‘ shows WPF template for VB only","State":"closed","Body":"## Steps to reproduce\r\nUsing CLI:\r\n\r\n1. Run dotnet new help \r\n```\r\ndotnet new -h\r\n```\r\n\r\n## Expected  behavior\r\nTemplate for C# is included\r\n\r\n## Actual behavior\r\n![wpfVBonly](https://user-images.githubusercontent.com/12900364/59622778-5cc88100-90e7-11e9-9ed5-fe97f16c1056.jpg)\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\nCLI\\SDK: 3.0.100-preview7-012422 (runtime-3.0.0-preview7-27816-02)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11574","RelatedDescription":"Closed issue \"‘Dotnet new‘ shows WPF template for VB only\" (#11574)"},{"Id":"456899046","IsPullRequest":true,"CreatedAt":"2019-06-17T18:32:56","Actor":"dotnet-maestro[bot]","Number":"11573","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190616.1\r\n- **Date Produced**: 6/16/2019 12:45 PM\r\n- **Commit**: 88feb5983d2b7bce61bcf8dff10ba74231f876f6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19316.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11573","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11573)"},{"Id":"456371598","IsPullRequest":true,"CreatedAt":"2019-06-17T18:32:39","Actor":"livarcocc","Number":"11562","RawContent":null,"Title":"Updating SDK to 2.1.800-preview-64213-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11562","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.1.800-preview-64213-01\" (#11562)"},{"Id":"456372012","IsPullRequest":true,"CreatedAt":"2019-06-17T17:05:33","Actor":"livarcocc","Number":"11563","RawContent":null,"Title":"Update SDK to 2.2.400-preview-64213-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11563","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.400-preview-64213-02\" (#11563)"},{"Id":"456689630","IsPullRequest":true,"CreatedAt":"2019-06-16T22:39:41","Actor":"wli3","Number":"11571","RawContent":null,"Title":"ToolManifestEditor catches FormatException","State":"open","Body":"Fix https://github.com/dotnet/cli/issues/11482\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11571","RelatedDescription":"Open PR \"ToolManifestEditor catches FormatException\" (#11571)"},{"Id":"456634619","IsPullRequest":true,"CreatedAt":"2019-06-16T12:45:27","Actor":"dotnet-maestro[bot]","Number":"11570","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190615.1\r\n- **Date Produced**: 6/15/2019 12:48 PM\r\n- **Commit**: c561d7deb8e1a7ff7a73d0fd5abec8556dae922b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19315.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11570","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11570)"},{"Id":"456531818","IsPullRequest":true,"CreatedAt":"2019-06-15T12:46:30","Actor":"dotnet-maestro[bot]","Number":"11569","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190614.1\r\n- **Date Produced**: 6/14/2019 12:48 PM\r\n- **Commit**: 15694b8f9d762edfe94551c45cb5a3d9b73ca3f6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19314.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11569","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11569)"},{"Id":"456531309","IsPullRequest":true,"CreatedAt":"2019-06-15T12:35:50","Actor":"dotnet-maestro[bot]","Number":"11568","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190614.1\r\n- **Date Produced**: 6/15/2019 12:47 AM\r\n- **Commit**: 1157aa7da48528f15a090fe49a0259e10b5a2163\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19314.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11568","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11568)"},{"Id":"456517057","IsPullRequest":false,"CreatedAt":"2019-06-15T09:03:06","Actor":"mallikarjunpatala","Number":"11566","RawContent":null,"Title":"Cannot find project info.... This can indicate a missing project reference , C:\\Program Files\\dotnet\\sdk\\2.1.505\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets","State":"open","Body":"## Steps to reproduce\r\nOne PCL class is referencing another PCL classs\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11566","RelatedDescription":"Open issue \"Cannot find project info.... This can indicate a missing project reference , C:\\Program Files\\dotnet\\sdk\\2.1.505\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets\" (#11566)"},{"Id":"456458650","IsPullRequest":true,"CreatedAt":"2019-06-14T22:16:05","Actor":"dotnet-bot","Number":"11565","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11565","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11565)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"458053294","IsPullRequest":false,"CreatedAt":"2019-06-19T15:42:32","Actor":"mokhabadi","Number":"1264","RawContent":null,"Title":"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1264","RelatedDescription":"Closed issue \"socket.AcceptAsync doesn't trigger socketAsyncEventArgs.Completed\" (#1264)"},{"Id":"458003284","IsPullRequest":true,"CreatedAt":"2019-06-19T13:17:26","Actor":"dotnet-maestro[bot]","Number":"1263","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:48 AM\r\n- **Commit**: 721a570b005c53a839947603dcf76f8a3e5fc56a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19319.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19319.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1263","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1263)"},{"Id":"457973212","IsPullRequest":true,"CreatedAt":"2019-06-19T12:14:09","Actor":"dotnet-maestro[bot]","Number":"1262","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19319.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1262","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1262)"},{"Id":"457962610","IsPullRequest":false,"CreatedAt":"2019-06-19T11:39:36","Actor":"GammaFour","Number":"1261","RawContent":null,"Title":"Expression.Call exception on sorting with .NET native tool chain.","State":"open","Body":"I have an extension method which sorts an **ObservableCollection&lt;T&gt;** using a dynamic property.  Here's the original code:\r\n\r\n```\r\n       public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```\r\nThis works great in my debug build, but crashes when I set '**Compile with .Net Native tool chain**' with the message: \r\n\r\n> No generic method 'OrderBy' on type 'System.Linq.Queryable' is compatible with the supplied type arguments and arguments. No type arguments should be provided if the method is non-generic.\r\n\r\nFurther testing showed that if I called the 'OrderBy' methods explicitly, rather than dynamically, before I performed the dynamic '**Expression.Call**' it would work with the **.Net Native tool chain** setting.  So I distilled the method down to this (this is not a fix, this just illustrates the problem):\r\n\r\n```\r\n        public static List<T> OrderByField<T>(this ObservableCollection<T> observableCollection, string sortField, string sortDirection)\r\n        {\r\n            // [HACK] This fixes it so that the call to Expression.Call doesn't crash.\r\n            IQueryable<T> queryable1 = new ObservableCollection<T>().AsQueryable();\r\n            Queryable.OrderBy<T, int>(queryable1, p => p.GetHashCode());\r\n            Queryable.OrderByDescending<T, int>(queryable1, p => p.GetHashCode());\r\n\r\n            // Sort the collection based on the name of the parameter.\r\n            IQueryable<T> queryable = observableCollection.AsQueryable();\r\n            string method = sortDirection == \"Asc\" ? \"OrderBy\" : \"OrderByDescending\";\r\n            var parameter = Expression.Parameter(queryable.ElementType, \"p\");\r\n            var property = Expression.Property(parameter, sortField);\r\n            var expression = Expression.Lambda(property, parameter);\r\n            Type[] types = new Type[] { queryable.ElementType, expression.Body.Type };\r\n            var methodCallExpression = Expression.Call(typeof(Queryable), method, types, queryable.Expression, expression);\r\n            return queryable.Provider.CreateQuery<T>(methodCallExpression).ToList();\r\n        }\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1261","RelatedDescription":"Open issue \"Expression.Call exception on sorting with .NET native tool chain.\" (#1261)"},{"Id":"457672725","IsPullRequest":true,"CreatedAt":"2019-06-18T20:10:06","Actor":"dotnet-maestro-bot","Number":"1260","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1260","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1260)"},{"Id":"457468774","IsPullRequest":true,"CreatedAt":"2019-06-18T13:13:08","Actor":"dotnet-maestro[bot]","Number":"1259","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190618.1\r\n- **Date Produced**: 6/18/2019 9:46 AM\r\n- **Commit**: 1fca079ddec2aabf56e256dab03e39b31b5036c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19318.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19318.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1259","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1259)"},{"Id":"457440540","IsPullRequest":true,"CreatedAt":"2019-06-18T12:14:19","Actor":"dotnet-maestro[bot]","Number":"1258","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190618.2\r\n- **Date Produced**: 6/18/2019 8:19 AM\r\n- **Commit**: dc538a29793fd56618d0fa3186e2388d47d00c19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19318.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19318.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1258","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1258)"},{"Id":"456916169","IsPullRequest":true,"CreatedAt":"2019-06-17T12:58:44","Actor":"dotnet-maestro[bot]","Number":"1257","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190617.2\r\n- **Date Produced**: 6/17/2019 11:31 AM\r\n- **Commit**: 7acfe7156497d667fc39bc1cdb5a7e95d12f5dca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19317.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19317.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19317.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1257","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1257)"},{"Id":"456638679","IsPullRequest":true,"CreatedAt":"2019-06-16T13:06:10","Actor":"dotnet-maestro[bot]","Number":"1256","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190615.6\r\n- **Date Produced**: 6/16/2019 6:29 AM\r\n- **Commit**: 23faf5d032feef556f5399b46a92a6e4aef7d84a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19315.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19315.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19315.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1256","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1256)"},{"Id":"456634075","IsPullRequest":true,"CreatedAt":"2019-06-16T12:13:48","Actor":"dotnet-maestro[bot]","Number":"1255","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190615.2\r\n- **Date Produced**: 6/15/2019 4:13 PM\r\n- **Commit**: aa4285be7fab64e2b6e62e4d5688ea50931c407c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19315.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19315.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1255","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1255)"},{"Id":"456535222","IsPullRequest":true,"CreatedAt":"2019-06-15T13:06:53","Actor":"dotnet-maestro[bot]","Number":"1254","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190614.4\r\n- **Date Produced**: 6/15/2019 3:37 AM\r\n- **Commit**: 5fa3d3b8f89302202091993681391c9b356755a7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19314.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19314.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19314.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1254","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1254)"},{"Id":"456531161","IsPullRequest":true,"CreatedAt":"2019-06-15T12:13:52","Actor":"dotnet-maestro[bot]","Number":"1253","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190614.27\r\n- **Date Produced**: 6/15/2019 1:53 AM\r\n- **Commit**: 372249cafc24384ae3488aab4e815e54c2ff3938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19314.27\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19314.27\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1253","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1253)"},{"Id":"456237914","IsPullRequest":true,"CreatedAt":"2019-06-14T13:22:47","Actor":"dotnet-maestro[bot]","Number":"1252","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190613.10\r\n- **Date Produced**: 6/14/2019 8:01 AM\r\n- **Commit**: c3f4524c785a226bae79cc82a96f7525460e2b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19313.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19313.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19313.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1252","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1252)"},{"Id":"456212743","IsPullRequest":true,"CreatedAt":"2019-06-14T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1251","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190613.18\r\n- **Date Produced**: 6/13/2019 11:28 PM\r\n- **Commit**: 8952b877fa6bca387cd4321b33dcdf6778e31240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19313.18\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19313.18\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1251","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1251)"},{"Id":"456107920","IsPullRequest":false,"CreatedAt":"2019-06-14T07:46:44","Actor":"marzim","Number":"1250","RawContent":null,"Title":"Expose System.ServiceModel.ServiceHost in .NET Standard 2.0","State":"open","Body":"Currently we can't access the ServiceHost under the System.ServiceModel.\r\nIs there a way that we can access the ServiceHost under the NET Standard 2.0?\r\n\r\n\r\nAny inputs are much appreciated.\r\n\r\nThanks,\r\n-Marvin","Url":"https://github.com/dotnet/standard/issues/1250","RelatedDescription":"Open issue \"Expose System.ServiceModel.ServiceHost in .NET Standard 2.0\" (#1250)"},{"Id":"455732093","IsPullRequest":true,"CreatedAt":"2019-06-13T13:18:52","Actor":"dotnet-maestro[bot]","Number":"1249","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190612.7\r\n- **Date Produced**: 6/13/2019 7:43 AM\r\n- **Commit**: cc8137ede09cdf16811767a6fb262fb498d85e67\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19312.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19312.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19312.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1249","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1249)"},{"Id":"455728018","IsPullRequest":false,"CreatedAt":"2019-06-13T13:00:29","Actor":"SebastianStruct","Number":"1248","RawContent":null,"Title":"Multiple DLLs from referenced .NET Standard projects","State":"open","Body":"I've created three .NET Standard 2.0 class library C# projects with Visual Studio 2017 (default settings).\r\n\r\n**Projects:**\r\n\r\n- MainProject (no dependencies)\r\n- TimeProject -> Dependencies -> Projects -> MainProject\r\n- ClockProject -> Dependencies -> Projects -> TimeProject\r\n\r\nEach of them have its own output directory. The DLL file should and is placed that output directory but the problem is that the referenced project DLLs are also placed in each output directory.\r\n\r\n**Output directories and files:**\r\n- Projects\\Build\\MainProject\r\n  - MainProject.dll\r\n- Projects\\Build\\TimeProject \r\n  - TimeProject.dll\r\n- Projects\\Build\\ClockProject \r\n  - ClockProject.dll\r\n  - MainProject.dll <-- my problem\r\n\r\n**Example of ProjectReference in ClockProject.csproj file:**\r\n\r\n```\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\TimeProject\\TimeProject.csproj\">\r\n    <Private>false</Private>\r\n  </ProjectReference>\r\n</ItemGroup>\r\n```\r\n\r\nThe ClockProject referencing the TimeProject which referencing the MainProject.\r\n\r\nI want to prevent that the ClockProject creates a MainProject.dll in its output directory because the MainProject.dll already exists in the output directory of the MainProject.","Url":"https://github.com/dotnet/standard/issues/1248","RelatedDescription":"Open issue \"Multiple DLLs from referenced .NET Standard projects\" (#1248)"},{"Id":"455701722","IsPullRequest":true,"CreatedAt":"2019-06-13T12:14:50","Actor":"dotnet-maestro[bot]","Number":"1247","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190612.21\r\n- **Date Produced**: 6/13/2019 7:23 AM\r\n- **Commit**: e5cd71926eaa13aba3138c14cd80def0ccfebb30\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19312.21\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19312.21\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1247","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1247)"},{"Id":"455203364","IsPullRequest":true,"CreatedAt":"2019-06-12T13:17:20","Actor":"dotnet-maestro[bot]","Number":"1246","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.10\r\n- **Date Produced**: 6/12/2019 9:52 AM\r\n- **Commit**: f5399d9d24536697a3bc36339e13ba085fc28938\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1246","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1246)"},{"Id":"455174207","IsPullRequest":true,"CreatedAt":"2019-06-12T12:14:57","Actor":"dotnet-maestro[bot]","Number":"1245","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190611.2\r\n- **Date Produced**: 6/11/2019 12:55 PM\r\n- **Commit**: dfc41299b9aadb1ca98093d660df81811eca901b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19311.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19311.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1245)"},{"Id":"454680960","IsPullRequest":true,"CreatedAt":"2019-06-11T13:19:14","Actor":"dotnet-maestro[bot]","Number":"1244","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190611.1\r\n- **Date Produced**: 6/11/2019 11:00 AM\r\n- **Commit**: a78bd7308555926f88aad3d0ecaaebae0f9204cc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19311.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19311.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1244","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1244)"},{"Id":"454649658","IsPullRequest":true,"CreatedAt":"2019-06-11T12:15:00","Actor":"dotnet-maestro[bot]","Number":"1243","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190610.24\r\n- **Date Produced**: 6/11/2019 12:59 AM\r\n- **Commit**: f268510de7a7bcf800a6966830f8d11ff8d24e0d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19310.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19310.24\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1243","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1243)"},{"Id":"454251339","IsPullRequest":false,"CreatedAt":"2019-06-10T16:19:02","Actor":"vixisoft","Number":"1242","RawContent":null,"Title":"ExcludeFromCodeCoverageAttribute should have Justification property","State":"open","Body":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?","Url":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Open issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242)"},{"Id":"454161356","IsPullRequest":true,"CreatedAt":"2019-06-10T13:16:44","Actor":"dotnet-maestro[bot]","Number":"1241","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.5\r\n- **Date Produced**: 6/10/2019 12:19 AM\r\n- **Commit**: 7e56d8bd8b224d834b782a98bfd7035f71c3f547\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1241","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1241)"},{"Id":"454137194","IsPullRequest":true,"CreatedAt":"2019-06-10T12:14:25","Actor":"dotnet-maestro[bot]","Number":"1240","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1240","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1240)"},{"Id":"453895716","IsPullRequest":true,"CreatedAt":"2019-06-09T13:13:58","Actor":"dotnet-maestro[bot]","Number":"1239","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 11:19 AM\r\n- **Commit**: 48c3adf8ad0256689375060437c2e6262d5e805a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1239","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1239)"},{"Id":"453891137","IsPullRequest":true,"CreatedAt":"2019-06-09T12:09:21","Actor":"dotnet-maestro[bot]","Number":"1238","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:50 PM\r\n- **Commit**: 747a1bdf2a74a486fb075045cb2384fa89a7983c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19308.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1238","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1238)"},{"Id":"453791889","IsPullRequest":true,"CreatedAt":"2019-06-08T13:12:04","Actor":"dotnet-maestro[bot]","Number":"1237","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190607.10\r\n- **Date Produced**: 6/8/2019 7:24 AM\r\n- **Commit**: 20ba99aaf60ba91180f304211b096e1147564a7c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19307.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1237","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1237)"},{"Id":"453787233","IsPullRequest":true,"CreatedAt":"2019-06-08T12:14:16","Actor":"dotnet-maestro[bot]","Number":"1236","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190607.62\r\n- **Date Produced**: 6/8/2019 3:43 AM\r\n- **Commit**: 29999b2846623e2d96733577165968d09bc2bcc1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19307.62\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1236)"},{"Id":"453504450","IsPullRequest":true,"CreatedAt":"2019-06-07T13:16:47","Actor":"dotnet-maestro[bot]","Number":"1235","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.9\r\n- **Date Produced**: 6/7/2019 5:48 AM\r\n- **Commit**: de1da50fc5f972348aba2fa40ff14e1cbadb13de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1235","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1235)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"458230476","IsPullRequest":true,"CreatedAt":"2019-06-20T05:09:51","Actor":"stevenbrix","Number":"38699","RawContent":null,"Title":"updates to packaging APIs and fixes","State":"closed","Body":"## Issue 36707\r\nAdding back `PackUriHelper.GetPartUri` which was an API that exists in .NET Fx in the implementation contained in WindowsBase. There was no reason this wasn't added as part of #36493, it was just missed.\r\n\r\nFixes #36707\r\n\r\n## Issue 36794\r\nThe checks that exist in the `Package.Open` API that takes a string are more restrictive then they should be. These checks were brought over from the implementation in WindowsBase and we don't need to restrict on only having `FileAccess.ReadWrite`  being passed in when `FileMode.Create` or `FileMode.CreateNew` are specified.\r\n\r\nFixes #36794\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38699","RelatedDescription":"Closed or merged PR \"updates to packaging APIs and fixes\" (#38699)"},{"Id":"458339029","IsPullRequest":false,"CreatedAt":"2019-06-20T04:29:30","Actor":"xcaptain","Number":"38712","RawContent":null,"Title":"JsonSerializer.Parse<DataTable> failed","State":"open","Body":"Convert an object into json string and then convert into DataTable is an easy way to generate `DataTable`, but this approach fails in `dotnet core 3 preview5`\r\n\r\nI have created a working dotnet core 2 code snippet at [https://dotnetfiddle.net/cD6NFD](https://dotnetfiddle.net/cD6NFD)\r\n\r\ndotnetfiddle doesn't support dotnet core 3 yet, so my dotnet core 3 code example see below:\r\n\r\n```csharp\r\nusing System.Data;\r\nusing System.Text.Json.Serialization;\r\n\r\npublic class UserDetails\r\n{\r\n    public string Id { get; set; }\r\n    public string Name { get; set; }\r\n    public string City { get; set; }\r\n    public string Country { get; set; }\r\n}\r\n\r\nList<UserDetails> persons = new List<UserDetails>()\r\n{\r\n    new UserDetails() {Id=\"1001\", Name=\"ABCD\", City =\"City1\", Country=\"USA\"},\r\n    new UserDetails() {Id=\"1002\", Name=\"PQRS\", City =\"City2\", Country=\"INDIA\"},\r\n    new UserDetails() {Id=\"1003\", Name=\"XYZZ\", City =\"City3\", Country=\"CHINA\"},\r\n    new UserDetails() {Id=\"1004\", Name=\"LMNO\", City =\"City4\", Country=\"UK\"},\r\n};\r\nvar table = JsonSerializer.Parse<DataTable>(JsonSerializer.ToString(persons));\r\n```\r\n\r\nbelow are the error log:\r\n```\r\nCLR/System.Text.Json.JsonReaderException 'The JSON value from [System.Data.DataTable] could not be converted to System.Object.'\r\n```","Url":"https://github.com/dotnet/corefx/issues/38712","RelatedDescription":"Open issue \"JsonSerializer.Parse<DataTable> failed\" (#38712)"},{"Id":"458073079","IsPullRequest":true,"CreatedAt":"2019-06-20T03:18:56","Actor":"CoffeeFlux","Number":"38687","RawContent":null,"Title":"Remove extended option in System.Reflection.AssemblyNameTests.FullName","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/38615","Url":"https://github.com/dotnet/corefx/pull/38687","RelatedDescription":"Closed or merged PR \"Remove extended option in System.Reflection.AssemblyNameTests.FullName\" (#38687)"},{"Id":"458309847","IsPullRequest":false,"CreatedAt":"2019-06-20T02:55:20","Actor":"JamesNK","Number":"38711","RawContent":null,"Title":"HTTP2: Http2Stream ObjectDisposedException","State":"open","Body":"1. git clone https://github.com/grpc/grpc-dotnet.git\r\n2. examples/server -> dotnet run\r\n3. examples/clients/mailer -> dotnet run\r\n4. Press ESC\r\n\r\n```\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'Http2Stream'.\r\n   at System.Net.Http.Http2Connection.Http2Stream.TryReadFromBuffer(Span`1 buffer)\r\n   at System.Net.Http.Http2Connection.Http2Stream.ReadDataAsync(Memory`1 buffer, CancellationToken cancellationToken)\r\n   at Grpc.Net.Client.StreamExtensions.ReadMessageCoreAsync[TResponse](Stream responseStream, ILogger logger, Func`2 deserializer, CancellationToken cancellationToken, Boolean canBeEmpty, Boolean singleMessage) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\StreamExtensions.cs:line 61\r\n   at Grpc.Net.Client.Internal.HttpContentClientStreamReader`2.MoveNextCore(CancellationToken cancellationToken) in C:\\Development\\Source\\grpc-dotnet\\src\\Grpc.Net.Client\\Internal\\HttpContentClientStreamReader.cs:line 123\r\n   at Sample.Clients.Program.<>c__DisplayClass0_0.<<Main>b__0>d.MoveNext() in C:\\Development\\Source\\grpc-dotnet\\examples\\Clients\\Mailer\\Program.cs:line 50\r\n```\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012518\r\n Commit:    da94a8cc8d\r\n```","Url":"https://github.com/dotnet/corefx/issues/38711","RelatedDescription":"Open issue \"HTTP2: Http2Stream ObjectDisposedException\" (#38711)"},{"Id":"458300873","IsPullRequest":true,"CreatedAt":"2019-06-20T02:11:45","Actor":"danmosemsft","Number":"38709","RawContent":null,"Title":"Add path to FillAttributeInfo assert","State":"open","Body":"To help investigate https://github.com/dotnet/corefx/issues/35665","Url":"https://github.com/dotnet/corefx/pull/38709","RelatedDescription":"Open PR \"Add path to FillAttributeInfo assert\" (#38709)"},{"Id":"458258387","IsPullRequest":true,"CreatedAt":"2019-06-20T01:56:11","Actor":"danmosemsft","Number":"38703","RawContent":null,"Title":"Update unix-instructions.md","State":"closed","Body":"Add workaround for https://github.com/dotnet/corefx/issues/38608","Url":"https://github.com/dotnet/corefx/pull/38703","RelatedDescription":"Closed or merged PR \"Update unix-instructions.md\" (#38703)"},{"Id":"458280429","IsPullRequest":false,"CreatedAt":"2019-06-20T00:25:06","Actor":"safern","Number":"38708","RawContent":null,"Title":"System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2.InboundWindowSize_Exceeded_Throw failing on CI","State":"open","Body":"> System.Net.Http.HttpRequestException : An error occurred while sending the request.\\n---- System.Net.Http.Http2ProtocolException : The HTTP/2 request failed with protocol error 'FLOW_CONTROL_ERROR' (0x3).\r\n\r\n```\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 1449\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/HttpConnectionPool.cs:line 539\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/RedirectHandler.cs:line 33\r\n   at System.Net.Http.HttpClient.FinishSendAsyncUnbuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts) in /_/src/System.Net.Http/src/System/Net/Http/HttpClient.cs:line 528\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.<>c__DisplayClass56_0.<<InboundWindowSize_Exceeded_Throw>b__0>d.MoveNext() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 1576\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks, Int32 millisecondsTimeout) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 71\r\n   at System.Net.Test.Common.Http2LoopbackServer.CreateClientAndServerAsync(Func`2 clientFunc, Func`2 serverFunc, Int32 timeout) in /_/src/Common/tests/System/Net/Http/Http2LoopbackServer.cs:line 728\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.InboundWindowSize_Exceeded_Throw() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 1572\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace -----\r\n   at System.Net.Http.Http2Connection.Http2Stream.OnResponseData(ReadOnlySpan`1 buffer, Boolean endStream) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Stream.cs:line 365\r\n   at System.Net.Http.Http2Connection.ProcessDataFrame(FrameHeader frameHeader) in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 401\r\n   at System.Net.Http.Http2Connection.ProcessIncomingFramesAsync() in /_/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Connection.cs:line 227\r\n```\r\n\r\nFailed on: https://github.com/dotnet/corefx/pull/38288\r\n\r\n@scalablecory @krwq it seems this test was added today and then modified in: https://github.com/dotnet/corefx/pull/38561\r\n\r\ncc: @ViktorHofer @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/38708","RelatedDescription":"Open issue \"System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2.InboundWindowSize_Exceeded_Throw failing on CI\" (#38708)"},{"Id":"458167446","IsPullRequest":true,"CreatedAt":"2019-06-20T00:15:40","Actor":"steveharter","Number":"38693","RawContent":null,"Title":"Add additional deserialization array tests","State":"closed","Body":"These tests now fail as expected due to the recent custom converter feature.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/38485\r\n","Url":"https://github.com/dotnet/corefx/pull/38693","RelatedDescription":"Closed or merged PR \"Add additional deserialization array tests\" (#38693)"},{"Id":"458277613","IsPullRequest":true,"CreatedAt":"2019-06-20T00:11:40","Actor":"ViktorHofer","Number":"38707","RawContent":null,"Title":"Fix sequencing of MakeCommonResourcesPriFile","State":"open","Body":"Requires https://github.com/dotnet/arcade/pull/3102\r\n\r\nThis also makes the allconfigurations leg faster as it disables binplacing and pri generation on it.","Url":"https://github.com/dotnet/corefx/pull/38707","RelatedDescription":"Open PR \"Fix sequencing of MakeCommonResourcesPriFile\" (#38707)"},{"Id":"458245556","IsPullRequest":true,"CreatedAt":"2019-06-19T23:57:43","Actor":"steveharter","Number":"38700","RawContent":null,"Title":"Add back KeyValuePair functionality","State":"closed","Body":"The custom converter [PR](https://github.com/dotnet/corefx/pull/38578) removed the KeyValuePair Functionality. This adds it back with a much cleaner implementation using a converter.","Url":"https://github.com/dotnet/corefx/pull/38700","RelatedDescription":"Closed or merged PR \"Add back KeyValuePair functionality\" (#38700)"},{"Id":"458273887","IsPullRequest":true,"CreatedAt":"2019-06-19T23:54:10","Actor":"steveharter","Number":"38706","RawContent":null,"Title":"Enforce JsonSerializerOptions.MaxDepth on write","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/36510\r\n\r\nIt appears the `Utf8JsonWriter` now has an upper limit of 1,000 so we would never get a `StackOverflowException`.","Url":"https://github.com/dotnet/corefx/pull/38706","RelatedDescription":"Open PR \"Enforce JsonSerializerOptions.MaxDepth on write\" (#38706)"},{"Id":"458268101","IsPullRequest":true,"CreatedAt":"2019-06-19T23:26:18","Actor":"Anipik","Number":"38705","RawContent":null,"Title":"Supporting duplicate properties using hashsets","State":"open","Body":"Related to https://github.com/dotnet/corefx/issues/38528","Url":"https://github.com/dotnet/corefx/pull/38705","RelatedDescription":"Open PR \"Supporting duplicate properties using hashsets\" (#38705)"},{"Id":"458262032","IsPullRequest":true,"CreatedAt":"2019-06-19T23:00:38","Actor":"tannergooding","Number":"38704","RawContent":null,"Title":" Fixing up HandleNull in JsonSerializer.Read to reset the property for dictionaries.","State":"open","Body":"This resolves #38565 ","Url":"https://github.com/dotnet/corefx/pull/38704","RelatedDescription":"Open PR \" Fixing up HandleNull in JsonSerializer.Read to reset the property for dictionaries.\" (#38704)"},{"Id":"458257567","IsPullRequest":true,"CreatedAt":"2019-06-19T22:43:10","Actor":"JeremyKuhne","Number":"38702","RawContent":null,"Title":"String enum converter","State":"open","Body":"Adds public converter for converting enums to strings and vice-versa.","Url":"https://github.com/dotnet/corefx/pull/38702","RelatedDescription":"Open PR \"String enum converter\" (#38702)"},{"Id":"458248498","IsPullRequest":true,"CreatedAt":"2019-06-19T22:10:07","Actor":"Gnbrkm41","Number":"38701","RawContent":null,"Title":"Enable xUnit analyzer for `System.Memory.Tests` project","State":"open","Body":"Addresses part of https://github.com/dotnet/corefx/issues/38677.\r\n\r\nStill have about three more errors to address. Following up on comments.","Url":"https://github.com/dotnet/corefx/pull/38701","RelatedDescription":"Open PR \"Enable xUnit analyzer for `System.Memory.Tests` project\" (#38701)"},{"Id":"458218628","IsPullRequest":true,"CreatedAt":"2019-06-19T21:28:20","Actor":"ViktorHofer","Number":"38698","RawContent":null,"Title":"Update sln configurations","State":"closed","Body":"Reacting to the test configuration changes","Url":"https://github.com/dotnet/corefx/pull/38698","RelatedDescription":"Closed or merged PR \"Update sln configurations\" (#38698)"},{"Id":"458196006","IsPullRequest":true,"CreatedAt":"2019-06-19T21:27:12","Actor":"ViktorHofer","Number":"38697","RawContent":null,"Title":"Manual darc update from build '20190619.8'","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/38697","RelatedDescription":"Closed or merged PR \"Manual darc update from build '20190619.8'\" (#38697)"},{"Id":"458172556","IsPullRequest":true,"CreatedAt":"2019-06-19T20:30:06","Actor":"krwq","Number":"38694","RawContent":null,"Title":"Fix http2 tests (SettingsFrame does not propagate flags)","State":"closed","Body":"Recently we have added this line\r\nhttps://github.com/dotnet/corefx/blob/master/src/Common/tests/System/Net/Http/Http2LoopbackServer.cs#L160\r\n\r\nbut SettingsFrame does not propagate flags when using ReadFrom which is causing following to loop forever:\r\nhttps://github.com/dotnet/corefx/blob/3863ec17c8ea61e72ef2240f23e4518788a2e8ae/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs#L95-L102","Url":"https://github.com/dotnet/corefx/pull/38694","RelatedDescription":"Closed or merged PR \"Fix http2 tests (SettingsFrame does not propagate flags)\" (#38694)"},{"Id":"457999119","IsPullRequest":false,"CreatedAt":"2019-06-19T20:26:02","Actor":"onovotny","Number":"38682","RawContent":null,"Title":"error CS1069: The type name 'Icon' could not be found","State":"closed","Body":".NET Core Version: `3.0.100-preview7-012503`\r\n\r\nLooks like a type `Icon` was moved to a new assembly, `System.Drawing.Common`, but that assembly isn't referenced by default by the SDK targets:\r\n\r\n```\r\n3>Utilities\\FileHelper.cs(314,23,314,27): error CS1069: The type name 'Icon' could not be found in the namespace 'System.Drawing'. This type has been forwarded to assembly 'System.Drawing.Common, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' Consider adding a reference to that assembly.\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/38682","RelatedDescription":"Closed issue \"error CS1069: The type name 'Icon' could not be found\" (#38682)"},{"Id":"458191666","IsPullRequest":true,"CreatedAt":"2019-06-19T19:38:01","Actor":"tannergooding","Number":"38696","RawContent":null,"Title":"Adding tests covering the scenario listed in #38643","State":"open","Body":"This resolves #38643","Url":"https://github.com/dotnet/corefx/pull/38696","RelatedDescription":"Open PR \"Adding tests covering the scenario listed in #38643\" (#38696)"},{"Id":"458188579","IsPullRequest":false,"CreatedAt":"2019-06-19T19:36:45","Actor":"stephentoub","Number":"38695","RawContent":null,"Title":"EncryptDecrypt_Array.RsaCryptRoundtrip_OaepSHA256 failed in CI","State":"closed","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38686~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190619.21/workItem/System.Security.Cryptography.Cng.Tests/analysis/xunit/System.Security.Cryptography.Rsa.Tests.EncryptDecrypt_Array~2FRsaCryptRoundtrip_OaepSHA256\r\n```\r\nWindows.Nano.1803.Amd64.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\r\nMessage :\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Unknown error (0xc0000001)\r\nStack Trace :\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, ReadOnlySpan`1 input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, Boolean encrypt) in /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs:line 245\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, Boolean encrypt) in /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs:line 119\r\n   at System.Security.Cryptography.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding) in /_/src/Common/src/System/Security/Cryptography/RSACng.EncryptDecrypt.cs:line 30\r\n   at System.Security.Cryptography.Rsa.Tests.EncryptDecrypt_Array.Decrypt(RSA rsa, Byte[] data, RSAEncryptionPadding padding) in /_/src/Common/tests/System/Security/Cryptography/AlgorithmImplementations/RSA/EncryptDecrypt.cs:line 15\r\n   at System.Security.Cryptography.Rsa.Tests.EncryptDecrypt.RsaCryptRoundtrip(RSAEncryptionPadding paddingMode, Boolean expectSuccess) in /_/src/Common/tests/System/Security/Cryptography/AlgorithmImplementations/RSA/EncryptDecrypt.cs:line 333\r\n   at System.Security.Cryptography.Rsa.Tests.EncryptDecrypt.RsaCryptRoundtrip_OaepSHA256() in /_/src/Common/tests/System/Security/Cryptography/AlgorithmImplementations/RSA/EncryptDecrypt.cs:line 307\r\n```\r\ncc: @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/38695","RelatedDescription":"Closed issue \"EncryptDecrypt_Array.RsaCryptRoundtrip_OaepSHA256 failed in CI\" (#38695)"},{"Id":"458064995","IsPullRequest":true,"CreatedAt":"2019-06-19T19:30:36","Actor":"dotnet-maestro[bot]","Number":"38686","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190619.2\r\n- **Date Produced**: 6/19/2019 1:33 PM\r\n- **Commit**: 282fd3bcfbe4c33a1adb4b7c9b4e6322772aec16\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19319.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#38686)"},{"Id":"458152343","IsPullRequest":true,"CreatedAt":"2019-06-19T18:12:33","Actor":"safern","Number":"38692","RawContent":null,"Title":"Update StringTests for Span.ToLower/Upper with null culture","State":"open","Body":"Depends on: https://github.com/dotnet/coreclr/pull/25214\r\n\r\ncc: @stephentoub @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/38692","RelatedDescription":"Open PR \"Update StringTests for Span.ToLower/Upper with null culture\" (#38692)"},{"Id":"458144099","IsPullRequest":true,"CreatedAt":"2019-06-19T17:52:11","Actor":"joperezr","Number":"38691","RawContent":null,"Title":"Updating System.Text.Json package description","State":"open","Body":"fixes #38624\r\n\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/38691","RelatedDescription":"Open PR \"Updating System.Text.Json package description\" (#38691)"},{"Id":"458119366","IsPullRequest":true,"CreatedAt":"2019-06-19T16:50:09","Actor":"Gnbrkm41","Number":"38690","RawContent":null,"Title":"Fix multiple remarks in System.Text.Json Xml docs","State":"open","Body":"Fixes #38666.","Url":"https://github.com/dotnet/corefx/pull/38690","RelatedDescription":"Open PR \"Fix multiple remarks in System.Text.Json Xml docs\" (#38690)"},{"Id":"458112820","IsPullRequest":false,"CreatedAt":"2019-06-19T16:34:03","Actor":"Gnbrkm41","Number":"38689","RawContent":null,"Title":"A few long running tests in `System.Drawing.Printing.Tests`","State":"open","Body":"I noticed a few tests were running for a long time, ranging from two minutes to about 23 minutes; wondering if this is related to relatively new changes since I didn't experience this last time. Technically they didn't fail... I'm just wondering why it took so long.\r\n\r\n### Build Environment\r\n* Windows 10 Home x64, Insiders Build (Fast ring), Build No. 18917\r\n* Surface Pro 4\r\n  * (One thing that has changed since last time I ran the test is internet connection; I'm on some extremely slow network at the moment, and by slow, about 4~6Mbps)\r\n\r\n```cs\r\nSystem.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.GetHdevmode_PageSettings_ReturnsExpected', Elapsed: 00:02:01\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:12:22\r\n     System.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.GetHdevmode_PageSettings_ReturnsExpected', Elapsed: 00:04:01\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:14:22\r\n     System.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.ToString_ReturnsExpected', Elapsed: 00:02:02\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:16:58\r\n     System.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.ToString_ReturnsExpected', Elapsed: 00:04:02\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:18:58\r\n     System.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.ToString_ReturnsExpected', Elapsed: 00:06:02\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:20:58\r\n     System.Drawing.Common.Tests: [Long Running Test] 'System.Drawing.Printing.Tests.PrinterSettingsTests.ToString_ReturnsExpected', Elapsed: 00:08:02\r\n  [Long Running Test] 'System.Drawing.Printing.Tests.PrintDocumentTests.PrintPage_SetValue_ReturnsExpected', Elapsed: 00:22:58\r\n```","Url":"https://github.com/dotnet/corefx/issues/38689","RelatedDescription":"Open issue \"A few long running tests in `System.Drawing.Printing.Tests`\" (#38689)"},{"Id":"458084962","IsPullRequest":false,"CreatedAt":"2019-06-19T15:35:32","Actor":"ericstj","Number":"38688","RawContent":null,"Title":"Should test restore be part of build or build-tests?","State":"open","Body":"With the test project restore work test projects need to be individually restored before building.\r\n\r\nToday this was added to the overall build.cmd, but this is not a necessary step for build and lengthens the time it takes for a build to complete.  On my machine an incremental build with no work to do, this is taking 2 minutes for a no-op restore of the test projects on my notebook.\r\n\r\nCan we consider moving this to the build-tests phase?  So long as an un-restored test project still errors correctly when trying to build without restoring it seems like a reasonable optimization.  \r\n\r\nThoughts @stephentoub @safern @wtgodbe @ViktorHofer?  Anyone else have numbers here?","Url":"https://github.com/dotnet/corefx/issues/38688","RelatedDescription":"Open issue \"Should test restore be part of build or build-tests?\" (#38688)"},{"Id":"458003528","IsPullRequest":true,"CreatedAt":"2019-06-19T14:53:56","Actor":"dotnet-maestro[bot]","Number":"38683","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 12:28 PM\r\n- **Commit**: 6f74559e236f534e3f9d630e00ea290cb885f80f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19319.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#38683)"},{"Id":"458017703","IsPullRequest":false,"CreatedAt":"2019-06-19T13:34:42","Actor":"steveharter","Number":"38684","RawContent":null,"Title":"Avoid copy of buffer in implementation of JsonSerializer.ReadValue","State":"open","Body":"The implementation of `JsonSerializer.ReadValue` makes an [unnecessary copy of the buffer and has unnecessary processing](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcorefx%2Fpull%2F38088%23discussion_r289494963&data=02%7C01%7CSteve.Harter%40microsoft.com%7Cc7214f0ab8a74c70223008d6f469483e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636965130348037357&sdata=aHXnbclS4ChAhARJDLgOH%2Fuy6CYVmXJDedkvtiTNoDk%3D&reserved=0) and should be fixed to call into the normal serialization loop.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38684","RelatedDescription":"Open issue \"Avoid copy of buffer in implementation of JsonSerializer.ReadValue\" (#38684)"},{"Id":"458308882","IsPullRequest":false,"CreatedAt":"2019-06-18T14:47:10","Actor":"IvanovNiko","Number":"38710","RawContent":null,"Title":"Can not to select .net core application instance in perfmon.exe","State":"open","Body":"Hi.\r\n\r\nI am using perfmon.exe for view my custom performance counters. It's working fine for .net framework applications but for .net core applications, application instance for my custom counters always absent and i can not to view my custom counters in perfmon.exe.  I reference Windows Compatibility Pack for .NET Core but it is useless.\r\n\r\nIs it performance counters limitations that they can use only with .net framework but not with .net core?\r\n\r\n![image](https://user-images.githubusercontent.com/31622591/59694569-8372de80-91f1-11e9-806e-229e2ca7a8f4.png)\r\n","Url":"https://github.com/dotnet/corefx/issues/38710","RelatedDescription":"Open issue \"Can not to select .net core application instance in perfmon.exe\" (#38710)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"458351854","IsPullRequest":false,"CreatedAt":"2019-06-20T05:20:40","Actor":"Therzok","Number":"36608","RawContent":null,"Title":"IDE offers refactoring to convert switch statement to expression","State":"open","Body":"**Version Used**: \r\n3.2.0-beta4-19312-10\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\npublic class C {\r\n    public enum Kind {\r\n        Created,\r\n        Moved,\r\n    }\r\n    \r\n    class EventArgs1 : EventArgs {}\r\n    class EventArgs2 : EventArgs {}\r\n    \r\n    event EventHandler<EventArgs1> Created;\r\n    event EventHandler<EventArgs2> Moved;\r\n    \r\n    public object GetHandler(Kind kind)\r\n    {\r\n        switch (kind)\r\n        {\r\n            case Kind.Created:\r\n                return Created;\r\n            case Kind.Moved:\r\n        \treturn Moved;\r\n            default:\r\n                throw new InvalidOperationException();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nIDE offers to convert to switch statement and gets it right (adds object casts) or doesn't offer the refactoring.\r\n\r\n**Actual Behavior**:\r\nRefactors the code to this, which doesn't build:\r\n\r\n```csharp\r\nstatic object GetHandler (Kind kind)\r\n{\r\n\treturn kind switch\r\n\t{\r\n\t\tKind.Created => Created,\r\n\t\tKind.Copied => Copied,\r\n\t\t_ => throw new InvalidOperationException (),\r\n\t};\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36608","RelatedDescription":"Open issue \"IDE offers refactoring to convert switch statement to expression\" (#36608)"},{"Id":"458325859","IsPullRequest":true,"CreatedAt":"2019-06-20T03:26:08","Actor":"sharwell","Number":"36607","RawContent":null,"Title":"Set focus to editor before finding text","State":"open","Body":"Closes #36401","Url":"https://github.com/dotnet/roslyn/pull/36607","RelatedDescription":"Open PR \"Set focus to editor before finding text\" (#36607)"},{"Id":"458309026","IsPullRequest":false,"CreatedAt":"2019-06-20T02:51:29","Actor":"heejaechang","Number":"36606","RawContent":null,"Title":"show progress in task center for solution crawler","State":"open","Body":"right now, task center solution crawler progress uses an indeterministic progress bar. that makes it hard for users to know how much works are left in the queue.\r\n\r\nchange it so that it shows \"m out of n\" progress so that it is easier for users to know when BG work will finish.","Url":"https://github.com/dotnet/roslyn/issues/36606","RelatedDescription":"Open issue \"show progress in task center for solution crawler\" (#36606)"},{"Id":"458275178","IsPullRequest":true,"CreatedAt":"2019-06-20T02:00:35","Actor":"dotnet-bot","Number":"36594","RawContent":null,"Title":"Merge release/dev16.2-preview3 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36594","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview3 to master\" (#36594)"},{"Id":"458275513","IsPullRequest":true,"CreatedAt":"2019-06-20T02:00:20","Actor":"dotnet-bot","Number":"36599","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36599","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36599)"},{"Id":"458275353","IsPullRequest":true,"CreatedAt":"2019-06-20T01:31:04","Actor":"dotnet-bot","Number":"36596","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36596","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36596)"},{"Id":"458275458","IsPullRequest":true,"CreatedAt":"2019-06-20T01:30:55","Actor":"dotnet-bot","Number":"36597","RawContent":null,"Title":"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into release/dev16.2-preview3-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps\ngit reset --hard upstream/release/dev16.2-preview3-vs-deps\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36597","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps\" (#36597)"},{"Id":"458275481","IsPullRequest":true,"CreatedAt":"2019-06-20T01:30:45","Actor":"dotnet-bot","Number":"36598","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36598","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36598)"},{"Id":"458275560","IsPullRequest":true,"CreatedAt":"2019-06-20T01:30:30","Actor":"dotnet-bot","Number":"36600","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36600","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36600)"},{"Id":"458275589","IsPullRequest":true,"CreatedAt":"2019-06-20T01:30:20","Actor":"dotnet-bot","Number":"36601","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36601","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36601)"},{"Id":"458289298","IsPullRequest":true,"CreatedAt":"2019-06-20T01:11:25","Actor":"jasonmalinowski","Number":"36605","RawContent":null,"Title":"Add some nullability tests for Generate Type and fix one bug","State":"open","Body":"Closes https://github.com/dotnet/roslyn/issues/30316","Url":"https://github.com/dotnet/roslyn/pull/36605","RelatedDescription":"Open PR \"Add some nullability tests for Generate Type and fix one bug\" (#36605)"},{"Id":"458278615","IsPullRequest":false,"CreatedAt":"2019-06-20T00:16:42","Actor":"jcouv","Number":"36604","RawContent":null,"Title":"Adjust the NullableAttribute type emitted by the compiler","State":"open","Body":"The corefx API review process yielded some minor tweaks, even though the type won't be included in Core 3.\r\n\r\nHere's the final API shape is documented [here](https://github.com/dotnet/corefx/issues/36222#issue-423989497).","Url":"https://github.com/dotnet/roslyn/issues/36604","RelatedDescription":"Open issue \"Adjust the NullableAttribute type emitted by the compiler\" (#36604)"},{"Id":"458275639","IsPullRequest":true,"CreatedAt":"2019-06-20T00:02:38","Actor":"dotnet-bot","Number":"36603","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36603","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36603)"},{"Id":"458275621","IsPullRequest":true,"CreatedAt":"2019-06-20T00:02:31","Actor":"dotnet-bot","Number":"36602","RawContent":null,"Title":"Merge master to demos/records","State":"open","Body":"\nThis is an automatically generated pull request from master into demos/records.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-demos/records\ngit reset --hard upstream/demos/records\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-demos/records --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36602","RelatedDescription":"Open PR \"Merge master to demos/records\" (#36602)"},{"Id":"458275209","IsPullRequest":true,"CreatedAt":"2019-06-20T00:00:40","Actor":"dotnet-bot","Number":"36595","RawContent":null,"Title":"Merge master to release/dev16.3-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.3-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36595","RelatedDescription":"Open PR \"Merge master to release/dev16.3-preview1\" (#36595)"},{"Id":"458273082","IsPullRequest":false,"CreatedAt":"2019-06-19T23:50:18","Actor":"drognanar","Number":"36593","RawContent":null,"Title":"Instrumenting a lambda makes it unserializable","State":"open","Body":"Creating this on behalf of a developer community issue https://developercommunity.visualstudio.com/content/problem/590695/live-unit-test-report-error-on-a-correct-statement.html.\r\n\r\nIt looks like the type generated by the compiler to represent a lambda is serializable without instrumentation but isn't with instrumentation. The expected behaviour is that the serialization property of a lambda should be preserved with and without instrumentation.\r\n\r\nAs for the example, I tried to compile the sample code below and by inpecting the dll the serializable property is lost after the code is compiled with instrumentation. It seems that the instrumentation generates a payload in the method body and uses that within the `fi` lambda. Because of this `fi` needs to capture this payload, making it non-serializable.\r\n\r\nNote that this seems to be related to another bug https://github.com/dotnet/roslyn/issues/25355 which discusses the serializable property of lambdas.\r\n\r\n```csharp\r\npublic static void Test()\r\n{\r\n    Func<int> fi = () =>\r\n    {\r\n        return 12;\r\n    }\r\n\r\n    using (var ms = new MemoryStream())\r\n    {\r\n        var b = new BinaryFormatter();\r\n        b.Serialize(ms, fi);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36593","RelatedDescription":"Open issue \"Instrumenting a lambda makes it unserializable\" (#36593)"},{"Id":"458271880","IsPullRequest":true,"CreatedAt":"2019-06-19T23:44:18","Actor":"petrroll","Number":"36592","RawContent":null,"Title":"[WIP] Fix refactorings not available when selection is used ","State":"open","Body":"WIP on fixing low-hanging fruits from #35180\r\n\r\nIncludes some new Helpers for determining whether current position/span is desirable for refactoring.","Url":"https://github.com/dotnet/roslyn/pull/36592","RelatedDescription":"Open PR \"[WIP] Fix refactorings not available when selection is used \" (#36592)"},{"Id":"458268184","IsPullRequest":false,"CreatedAt":"2019-06-19T23:26:42","Actor":"RikkiGibson","Number":"36591","RawContent":null,"Title":"Nullable analysis should learn from calls to well-known Equals methods","State":"open","Body":"From @jcouv:\r\n\r\nUpdate the null-state at the end of an invocation of a recognized method\r\nhttps://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md#equality-postconditions\r\n\r\nComparison with null literal (or null constant): `object.Equals(x, null)`\r\n- learn that `x` is null in when-true branch\r\n- learn that `x` is not-null in when-false branch\r\n\r\nComparison with a not-null expression: `object.Equals(x, notNull)`\r\n- learn that `x` is not-null in when-true branch\r\n- for `object.Equals(x?.y, notNull)`, learn that x was not-null (the same as `x?.y == notNull`)\r\n\r\n`object.Equals(x, maybeNull)`\r\n- learn nothing about x\r\n\r\nOpen question: what are all the methods we recognize? So far:\r\n\r\n- `Object.ReferenceEquals`\r\n- `Object.Equals` \r\n- `IEqualityComparer<T>.Equals` \r\n- `EqualityComparer<T>.Equals` \r\n- `IEquatable<T>.Equals`\r\n\r\n\r\nAlso add some tests around user-defined `==` (we learn the same thing regardless of if it's builtin or user-defined)","Url":"https://github.com/dotnet/roslyn/issues/36591","RelatedDescription":"Open issue \"Nullable analysis should learn from calls to well-known Equals methods\" (#36591)"},{"Id":"458265114","IsPullRequest":false,"CreatedAt":"2019-06-19T23:13:44","Actor":"333fred","Number":"36590","RawContent":null,"Title":"Unify EnumerableExtensions Classes","State":"open","Body":"https://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/Portable/Collections/EnumerableExtensions.cs\r\nhttps://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/Portable/InternalUtilities/EnumerableExtensions.cs\r\n\r\nSame static class, different namespaces. We shouldn't have two of these.","Url":"https://github.com/dotnet/roslyn/issues/36590","RelatedDescription":"Open issue \"Unify EnumerableExtensions Classes\" (#36590)"},{"Id":"458241623","IsPullRequest":false,"CreatedAt":"2019-06-19T21:48:21","Actor":"AlekseyTs","Number":"36589","RawContent":null,"Title":"Unexpected default formatting for multi-line switch exprtessions","State":"open","Body":"Type the following code (IDE will format it as follows):\r\n```\r\n            var i = 3;\r\n            var str = i switch\r\n            {\r\n                1 => \"1\",\r\n                2 => \"2\",\r\n                3 => \"3\",\r\n            };\r\n```\r\n\r\nExpected: The body of the expression should be indented to the right.\r\nLike this:\r\n```\r\n            var str = i switch\r\n                {\r\n                    1 => \"1\",\r\n                    2 => \"2\",\r\n                    3 => \"3\",\r\n                };\r\n```\r\n\r\nOr even better like this:\r\n```\r\n            var i = 3;\r\n            var str = i switch\r\n                      {\r\n                          1 => \"1\",\r\n                          2 => \"2\",\r\n                          3 => \"3\",\r\n                      };\r\n```\r\n\r\nMotivation - improved readability.","Url":"https://github.com/dotnet/roslyn/issues/36589","RelatedDescription":"Open issue \"Unexpected default formatting for multi-line switch exprtessions\" (#36589)"},{"Id":"458216053","IsPullRequest":false,"CreatedAt":"2019-06-19T20:39:39","Actor":"RikkiGibson","Number":"36588","RawContent":null,"Title":"Usage of flow analysis attributes should warn outside of annotation context","State":"open","Body":"From [LDM notes on 15th May](https://github.com/dotnet/csharplang/blob/a2d95c7debf0c3e48bc491b744977f0c9d88b929/meetings/2019/LDM-2019-05-15.md):\r\n\r\n> The attributes count as “nullable annotations” (with the exception of the Flow attributes that aren’t directly related to nullability) and yield a warning if applied where the annotation context is disabled.\r\n\r\nThe implementation doesn't appear to do this today.\r\n\r\n```cs\r\n#nullable disable\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\ninternal class C<T> where T : class\r\n{\r\n    // 'out T value' should warn, but doesn't\r\n    public bool TryGetValue([MaybeNullWhen(false)] out T value)\r\n    {\r\n        value = default!;\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwD4GIB2BXANliwtwAEAJgJZR4ECwAULQAIAMh9AjAHQAipEA5mgHtYpAMZR2AYQHE4AQTQQsATyjkA3LVoKwcKAAcIIomy49+QmKPFSZ8xSvK0A3rUJvCAbVkwYCUsAx4AFUKXjgACm9ff0C4ABUIBDCYcQAFRIgdeAQAGkJZHAEAdwBZbEs9AkIAXkIAM0UoOABKAF1Xd3oAZkImxThiFgAmQhKIJWA4ADlsLAB1AAs4NCi/APhCEHyfNdiOtxcad2OWHrGJ6dnF5dWY+HDgAQEsQiKltGbCJ0IAX33f2h/Og0UhobIKF70EYSAA8cQAfK8lggiHFNsNnP9uoRHs9CHEEEoAOJwGAANUUGAiHnOkxmOGuaHCDSwTTahAEgXxhAAbpSWv9Did3HysFSaiQ4A1ygBCDRHYUsADs9UacHlxyBPyAA==","Url":"https://github.com/dotnet/roslyn/issues/36588","RelatedDescription":"Open issue \"Usage of flow analysis attributes should warn outside of annotation context\" (#36588)"},{"Id":"458129646","IsPullRequest":true,"CreatedAt":"2019-06-19T19:48:20","Actor":"chborl","Number":"36586","RawContent":null,"Title":"Fix stack overflow error in Complete Statement ","State":"closed","Body":"Fixes [AB#923157](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/923157)","Url":"https://github.com/dotnet/roslyn/pull/36586","RelatedDescription":"Closed or merged PR \"Fix stack overflow error in Complete Statement \" (#36586)"},{"Id":"458192313","IsPullRequest":false,"CreatedAt":"2019-06-19T19:39:46","Actor":"RikkiGibson","Number":"36587","RawContent":null,"Title":"Should some synthesized methods be marked as readonly?","State":"open","Body":"Migrated from #32911 ([discussion](https://github.com/dotnet/roslyn/pull/34260#issuecomment-474994280))\r\n\r\n> @jcouv: something to consider for a follow-up: I see that we're only adding the IsReadOnlyAttribute for source method symbols. I wonder if there are other method symbols we should consider (some synthesized ones in particular). \r\n\r\n> @RikkiGibson: Not certain. There's a few requirements for this to provide a benefit:\r\n>\r\n> 1. must be an instance method on a struct type\r\n> 2. must be called on a `ref readonly`/`in` variable\r\n>\r\n> Might be useful to enumerate any cases where (1) is true and then determine if (2) could be true for it.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36587","RelatedDescription":"Open issue \"Should some synthesized methods be marked as readonly?\" (#36587)"},{"Id":"458074198","IsPullRequest":false,"CreatedAt":"2019-06-19T15:15:43","Actor":"sharwell","Number":"36585","RawContent":null,"Title":"Automatically dismiss \"Find Source\" dialog if it appears during tests","State":"open","Body":"Sometimes the following dialog appears during integration tests:\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/59777586-91b90d00-927a-11e9-8ba1-58dfa36a6a7b.png)\r\n\r\nWhen the **Find Source** dialog appears, it should be automatically dismissed to avoid cascading test failures. The test which triggered the dialog should report a test failure.\r\n\r\n📝 Currently the most common cause of this dialog is a product bug where documents fail to save (e.g. https://github.com/dotnet/roslyn/issues/34637#issuecomment-478657402). However, the test improvement to address this will be a good overall reliability improvement.","Url":"https://github.com/dotnet/roslyn/issues/36585","RelatedDescription":"Open issue \"Automatically dismiss \"Find Source\" dialog if it appears during tests\" (#36585)"},{"Id":"458057375","IsPullRequest":false,"CreatedAt":"2019-06-19T15:09:22","Actor":"abhijitparkhi1983","Number":"36583","RawContent":null,"Title":"Runtime Exception : Unable to cast object of type 'Microsoft.VisualStudio.ComponentModelHost.ComponentModel' to type 'Microsoft.VisualStudio.ComponentModelHost.IComponentModel'.","State":"closed","Body":"**Version Used:**\r\n3.1.0\r\n\r\n **Visual Studios Version Used  :** \r\nVisual Studios 2017 Community Version 15.9.13\r\n\r\n\r\n**Steps to Reproduce:**\r\n\r\nCreate a .VSIX project using Visual Studios 2017 Community Version 15.9.13\r\n\r\nAdd Nuget References to following:\r\n```\r\nMicrosoft.CodeAnalysis (3.1.0.0)\r\nMicrosoft.VisualStudio.LanguageServices(3.1.0.0)\r\nMicrosoft.VisualStudio.ComponentModelHost (16.0.0.0)\r\n```\r\n\r\nFollowing code is used for getting the current solution instance:\r\n```\r\nvar componentModel = (Microsoft.VisualStudio.ComponentModelHost.IComponentModel)Microsoft.VisualStudio.Shell.Package.GetGlobalService(typeof(Microsoft.VisualStudio.ComponentModelHost.SComponentModel));\r\nVisualStudioWorkspace workspace = componentModel.GetService<VisualStudioWorkspace>();\r\n```\r\n\r\nWhen we run the .VSIX package in debug mode and try to run the above code an exception is thrown : **System.InvalidCastException\r\n  HResult=0x80004002\r\n  Message=Unable to cast object of type 'Microsoft.VisualStudio.ComponentModelHost.ComponentModel' to type 'Microsoft.VisualStudio.ComponentModelHost.IComponentModel'.**\r\n\r\n**Important points:**\r\n\r\n**I am trying to build a .vsix for VS 2017**.\r\nI am having Visual Studios 2015 Update 3 Community version, Visual Studios 2017 Community Version 15.9.13 and Visual Studios 2019 (2) Version 16.1.1 installed on my machine.\r\n\r\nThe Microsoft.VisualStudio.LanguageServices dll and Microsoft.VisualStudio.ComponentModelHost.dll  has Copy Local option set to True.\r\n\r\nThe GAC entries that i can see are as below:\r\n\r\n  ```\r\nMicrosoft.VisualStudio.ComponentModelHost, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\r\n  Microsoft.VisualStudio.ComponentModelHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\r\n  Microsoft.VisualStudio.ComponentModelHost.Implementation, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\r\n  Microsoft.VisualStudio.ComponentModelHost.Implementation, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL\r\n```\r\n\r\n**Expected Behavior:**\r\nThe current Solution should be loaded in the VisualStudioWorkspace reference.\r\n\r\n**Actual Behavior:**\r\nSystem.InvalidCastException\r\n  HResult=0x80004002\r\n  Message=Unable to cast object of type 'Microsoft.VisualStudio.ComponentModelHost.ComponentModel' to type 'Microsoft.VisualStudio.ComponentModelHost.IComponentModel'.","Url":"https://github.com/dotnet/roslyn/issues/36583","RelatedDescription":"Closed issue \"Runtime Exception : Unable to cast object of type 'Microsoft.VisualStudio.ComponentModelHost.ComponentModel' to type 'Microsoft.VisualStudio.ComponentModelHost.IComponentModel'.\" (#36583)"},{"Id":"458064271","IsPullRequest":true,"CreatedAt":"2019-06-19T14:57:17","Actor":"sharwell","Number":"36584","RawContent":null,"Title":"Use IFeatureServiceFactory to disable async completion","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36584","RelatedDescription":"Open PR \"Use IFeatureServiceFactory to disable async completion\" (#36584)"},{"Id":"457972662","IsPullRequest":true,"CreatedAt":"2019-06-19T13:30:25","Actor":"dotnet-bot","Number":"36579","RawContent":null,"Title":"Merge master to demos/records","State":"closed","Body":"\nThis is an automatically generated pull request from master into demos/records.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-demos/records\ngit reset --hard upstream/demos/records\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-demos/records --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36579","RelatedDescription":"Closed or merged PR \"Merge master to demos/records\" (#36579)"},{"Id":"457972707","IsPullRequest":true,"CreatedAt":"2019-06-19T13:30:11","Actor":"dotnet-bot","Number":"36580","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36580","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36580)"},{"Id":"458009902","IsPullRequest":true,"CreatedAt":"2019-06-19T13:20:13","Actor":"mavasani","Number":"36582","RawContent":null,"Title":"Fix diagnostic suppressor feature for compiler warnings in presence o…","State":"open","Body":"…f /warnaserror\r\n\r\nFollow up to #36067\r\nFixes #36215","Url":"https://github.com/dotnet/roslyn/pull/36582","RelatedDescription":"Open PR \"Fix diagnostic suppressor feature for compiler warnings in presence o…\" (#36582)"},{"Id":"457979284","IsPullRequest":true,"CreatedAt":"2019-06-19T12:17:24","Actor":"dotnet-maestro[bot]","Number":"36581","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190619.1\r\n- **Date Produced**: 6/19/2019 9:34 AM\r\n- **Commit**: 209388b8a700bb99690ae7fbbabe7e55f1999a8f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19319.1\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/36581","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#36581)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"456580659","IsPullRequest":true,"CreatedAt":"2019-06-20T00:22:34","Actor":"trylek","Number":"7531","RawContent":null,"Title":"Initial support for R2RDump in SuperIlc","State":"closed","Body":"I have added initial minimalistic support for R2RDump to SuperIlc.\r\nUsing the new switch -r2r <path> we can specify the path to the\r\nR2RDump tool and SuperIlc will use it to disassemble each\r\nsuccessfully compiled assembly in the \"naked\" and \"raw\" mode\r\n(from a completely selfish point of view these are the modes I'm\r\nusing most of the time). These dumps make it much easier to compare\r\nCPAOT and Crossgen output when analyzing the remaining failing\r\ntests.\r\n\r\nAs a caveat this cannot be yet added to automated testing because\r\nof the known backlog item \"R2RDump build doesn't publish\r\nCoreDisTools.dll it requires\" (even though the library is available\r\nin the build outputs and just copying it next to R2RDump fixes the\r\nproblem - that's what I've been doing since the very beginning).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7531","RelatedDescription":"Closed or merged PR \"Initial support for R2RDump in SuperIlc\" (#7531)"},{"Id":"457614786","IsPullRequest":false,"CreatedAt":"2019-06-19T15:50:46","Actor":"forestbat","Number":"7539","RawContent":null,"Title":"There is a IL2CPP compiler on tap","State":"closed","Body":"The origin maintainer of the compiler has abandoned this project，so I fork it and made some small changes。\r\nIt's dependency is still .NET Framework and its built-in clang and llvm-linker should be updated to 8.0.\r\nPlease see this and hope your reply。\r\nhttps://github.com/forestbat/il2cpp","Url":"https://github.com/dotnet/corert/issues/7539","RelatedDescription":"Closed issue \"There is a IL2CPP compiler on tap\" (#7539)"},{"Id":"457362196","IsPullRequest":false,"CreatedAt":"2019-06-19T11:37:53","Actor":"hhblaze","Number":"7537","RawContent":null,"Title":"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204","State":"closed","Body":"```\r\nosboxes@osboxes:~/Documents/HelloWorld$ export CppCompilerAndLinker=clang-6.0\r\nosboxes@osboxes:~/Documents/HelloWorld$ dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 123.17 ms for /home/osboxes/Documents/HelloWorld/HelloWorld.csproj.\r\n  HelloWorld -> /home/osboxes/Documents/HelloWorld/bin/release/netcoreapp2.2/linux-x64/HelloWorld.dll\r\n  /usr/bin/clang-6.0\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/osboxes/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/build/Microsoft.NETCore.Native.targets(248,5): error MSB3073: The command \"\"/home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/ilc\" @\"obj/release/netcoreapp2.2/linux-x64/native/HelloWorld.ilc.rsp\"\" exited with code 1. [/home/osboxes/Documents/HelloWorld/HelloWorld.csproj]\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ uname -a\r\nLinux osboxes 5.0.0-13-generic #14-Ubuntu SMP Mon Apr 15 14:59:14 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nldd /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so\r\nldd: /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools/objwriter.so: No such file or directory\r\n\r\nosboxes@osboxes:~/Documents/HelloWorld$ ls /home/osboxes/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27817-01/tools\r\ncreatedump\r\nilc\r\nilc.deps.json\r\nilc.dll\r\nILCompiler.Compiler.dll\r\nILCompiler.CppCodeGen.dll\r\nILCompiler.DependencyAnalysisFramework.dll\r\nILCompiler.MetadataTransform.dll\r\nILCompiler.MetadataWriter.dll\r\nILCompiler.ReadyToRun.dll\r\nILCompiler.RyuJit.dll\r\nILCompiler.TypeSystem.dll\r\nILCompiler.WebAssembly.dll\r\nilc.runtimeconfig.json\r\njitinterface.so\r\nlibclrjitilc.so\r\nlibclrjit.so\r\nlibcoreclr.so\r\nlibcoreclrtraceptprovider.so\r\nlibdbgshim.so\r\nlibhostfxr.so\r\nlibhostpolicy.so\r\nlibLLVM.so\r\nlibmscordaccore.so\r\nlibmscordbi.so\r\nlibobjwriter.so\r\nlibsosplugin.so\r\nlibsos.so\r\nLLVMSharp.dll\r\nMicrosoft.CSharp.dll\r\nMicrosoft.DiaSymReader.dll\r\nMicrosoft.VisualBasic.dll\r\nMicrosoft.Win32.Primitives.dll\r\nMicrosoft.Win32.Registry.dll\r\nmscorlib.dll\r\nnetstandard.dll\r\nsosdocsunix.txt\r\nSOS.NETCore.dll\r\nSystem.AppContext.dll\r\nSystem.Buffers.dll\r\nSystem.Collections.Concurrent.dll\r\nSystem.Collections.dll\r\nSystem.Collections.Immutable.dll\r\nSystem.Collections.NonGeneric.dll\r\nSystem.Collections.Specialized.dll\r\nSystem.CommandLine.dll\r\nSystem.ComponentModel.Annotations.dll\r\nSystem.ComponentModel.DataAnnotations.dll\r\nSystem.ComponentModel.dll\r\nSystem.ComponentModel.EventBasedAsync.dll\r\nSystem.ComponentModel.Primitives.dll\r\nSystem.ComponentModel.TypeConverter.dll\r\nSystem.Configuration.dll\r\nSystem.Console.dll\r\nSystem.Core.dll\r\nSystem.Data.Common.dll\r\nSystem.Data.dll\r\nSystem.Diagnostics.Contracts.dll\r\nSystem.Diagnostics.Debug.dll\r\nSystem.Diagnostics.DiagnosticSource.dll\r\nSystem.Diagnostics.FileVersionInfo.dll\r\nSystem.Diagnostics.Process.dll\r\nSystem.Diagnostics.StackTrace.dll\r\nSystem.Diagnostics.TextWriterTraceListener.dll\r\nSystem.Diagnostics.Tools.dll\r\nSystem.Diagnostics.TraceSource.dll\r\nSystem.Diagnostics.Tracing.dll\r\nSystem.dll\r\nSystem.Drawing.dll\r\nSystem.Drawing.Primitives.dll\r\nSystem.Dynamic.Runtime.dll\r\nSystem.Globalization.Calendars.dll\r\nSystem.Globalization.dll\r\nSystem.Globalization.Extensions.dll\r\nSystem.Globalization.Native.so\r\nSystem.IO.Compression.Brotli.dll\r\nSystem.IO.Compression.dll\r\nSystem.IO.Compression.FileSystem.dll\r\nSystem.IO.Compression.Native.a\r\nSystem.IO.Compression.Native.so\r\nSystem.IO.Compression.ZipFile.dll\r\nSystem.IO.dll\r\nSystem.IO.FileSystem.AccessControl.dll\r\nSystem.IO.FileSystem.dll\r\nSystem.IO.FileSystem.DriveInfo.dll\r\nSystem.IO.FileSystem.Primitives.dll\r\nSystem.IO.FileSystem.Watcher.dll\r\nSystem.IO.IsolatedStorage.dll\r\nSystem.IO.MemoryMappedFiles.dll\r\nSystem.IO.Pipes.AccessControl.dll\r\nSystem.IO.Pipes.dll\r\nSystem.IO.UnmanagedMemoryStream.dll\r\nSystem.Linq.dll\r\nSystem.Linq.Expressions.dll\r\nSystem.Linq.Parallel.dll\r\nSystem.Linq.Queryable.dll\r\nSystem.Memory.dll\r\nSystem.Native.a\r\nSystem.Native.so\r\nSystem.Net.dll\r\nSystem.Net.Http.dll\r\nSystem.Net.HttpListener.dll\r\nSystem.Net.Http.Native.a\r\nSystem.Net.Http.Native.so\r\nSystem.Net.Mail.dll\r\nSystem.Net.NameResolution.dll\r\nSystem.Net.NetworkInformation.dll\r\nSystem.Net.Ping.dll\r\nSystem.Net.Primitives.dll\r\nSystem.Net.Requests.dll\r\nSystem.Net.Security.dll\r\nSystem.Net.Security.Native.a\r\nSystem.Net.Security.Native.so\r\nSystem.Net.ServicePoint.dll\r\nSystem.Net.Sockets.dll\r\nSystem.Net.WebClient.dll\r\nSystem.Net.WebHeaderCollection.dll\r\nSystem.Net.WebProxy.dll\r\nSystem.Net.WebSockets.Client.dll\r\nSystem.Net.WebSockets.dll\r\nSystem.Numerics.dll\r\nSystem.Numerics.Vectors.dll\r\nSystem.ObjectModel.dll\r\nSystem.Private.CoreLib.dll\r\nSystem.Private.DataContractSerialization.dll\r\nSystem.Private.Uri.dll\r\nSystem.Private.Xml.dll\r\nSystem.Private.Xml.Linq.dll\r\nSystem.Reflection.DispatchProxy.dll\r\nSystem.Reflection.dll\r\nSystem.Reflection.Emit.dll\r\nSystem.Reflection.Emit.ILGeneration.dll\r\nSystem.Reflection.Emit.Lightweight.dll\r\nSystem.Reflection.Extensions.dll\r\nSystem.Reflection.Metadata.dll\r\nSystem.Reflection.Primitives.dll\r\nSystem.Reflection.TypeExtensions.dll\r\nSystem.Resources.Reader.dll\r\nSystem.Resources.ResourceManager.dll\r\nSystem.Resources.Writer.dll\r\nSystem.Runtime.CompilerServices.Unsafe.dll\r\nSystem.Runtime.CompilerServices.VisualC.dll\r\nSystem.Runtime.dll\r\nSystem.Runtime.Extensions.dll\r\nSystem.Runtime.Handles.dll\r\nSystem.Runtime.InteropServices.dll\r\nSystem.Runtime.InteropServices.RuntimeInformation.dll\r\nSystem.Runtime.InteropServices.WindowsRuntime.dll\r\nSystem.Runtime.Loader.dll\r\nSystem.Runtime.Numerics.dll\r\nSystem.Runtime.Serialization.dll\r\nSystem.Runtime.Serialization.Formatters.dll\r\nSystem.Runtime.Serialization.Json.dll\r\nSystem.Runtime.Serialization.Primitives.dll\r\nSystem.Runtime.Serialization.Xml.dll\r\nSystem.Security.AccessControl.dll\r\nSystem.Security.Claims.dll\r\nSystem.Security.Cryptography.Algorithms.dll\r\nSystem.Security.Cryptography.Cng.dll\r\nSystem.Security.Cryptography.Csp.dll\r\nSystem.Security.Cryptography.Encoding.dll\r\nSystem.Security.Cryptography.Native.OpenSsl.a\r\nSystem.Security.Cryptography.Native.OpenSsl.so\r\nSystem.Security.Cryptography.OpenSsl.dll\r\nSystem.Security.Cryptography.Primitives.dll\r\nSystem.Security.Cryptography.X509Certificates.dll\r\nSystem.Security.dll\r\nSystem.Security.Principal.dll\r\nSystem.Security.Principal.Windows.dll\r\nSystem.Security.SecureString.dll\r\nSystem.ServiceModel.Web.dll\r\nSystem.ServiceProcess.dll\r\nSystem.Text.Encoding.dll\r\nSystem.Text.Encoding.Extensions.dll\r\nSystem.Text.RegularExpressions.dll\r\nSystem.Threading.dll\r\nSystem.Threading.Overlapped.dll\r\nSystem.Threading.Tasks.Dataflow.dll\r\nSystem.Threading.Tasks.dll\r\nSystem.Threading.Tasks.Extensions.dll\r\nSystem.Threading.Tasks.Parallel.dll\r\nSystem.Threading.Thread.dll\r\nSystem.Threading.ThreadPool.dll\r\nSystem.Threading.Timer.dll\r\nSystem.Transactions.dll\r\nSystem.Transactions.Local.dll\r\nSystem.ValueTuple.dll\r\nSystem.Web.dll\r\nSystem.Web.HttpUtility.dll\r\nSystem.Windows.dll\r\nSystem.Xml.dll\r\nSystem.Xml.Linq.dll\r\nSystem.Xml.ReaderWriter.dll\r\nSystem.Xml.Serialization.dll\r\nSystem.Xml.XDocument.dll\r\nSystem.Xml.XmlDocument.dll\r\nSystem.Xml.XmlSerializer.dll\r\nSystem.Xml.XPath.dll\r\nSystem.Xml.XPath.XDocument.dll\r\nWindowsBase.dll\r\n\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7537","RelatedDescription":"Closed issue \"\"Hello World\" compilation fails: Ubuntu 19.04 Clang-6.0 .NetCore 2.2.204\" (#7537)"},{"Id":"457733189","IsPullRequest":true,"CreatedAt":"2019-06-19T00:16:53","Actor":"jkotas","Number":"7540","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7540","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7540)"},{"Id":"457279660","IsPullRequest":true,"CreatedAt":"2019-06-18T21:27:44","Actor":"jkotas","Number":"7536","RawContent":null,"Title":"Ensure ObjectWriter package does not get used on ObjWriterBuild mode","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7536","RelatedDescription":"Closed or merged PR \"Ensure ObjectWriter package does not get used on ObjWriterBuild mode\" (#7536)"},{"Id":"457470464","IsPullRequest":false,"CreatedAt":"2019-06-18T13:35:21","Actor":"hhblaze","Number":"7538","RawContent":null,"Title":"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)","State":"closed","Body":"Content of HelloWorld.csproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Google.Cloud.Datastore.V1\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nCompilation output\r\n\r\n```\r\nH:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld>dotnet publish -r win-x64 -c release\r\nMicrosoft (R) Build Engine 16.1.76+g14b0a930a7 для .NET Core\r\n(C) (Microsoft Corporation). \r\n\r\n  Restore completed в 1,7 sec для H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj.\r\n  HelloWorld -> H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\bin\\release\\netcoreapp2.2\\win-x64\\HelloWorld.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : Method `[System.Interactive.Async]System.Linq.AsyncEnumerable+CatchAsyncIterator`2+<MoveNextCore>d__7<System.__Canon,System.__Canon>.MoveNext()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramDefault: [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlopen [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nHelloWorld.obj : error LNK2001: unresolved external symbol dlsym [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nbin\\release\\netcoreapp2.2\\win-x64\\native\\HelloWorld.exe : fatal error LNK1120: 2 unresolved externals [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\nC:\\Users\\blaze\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27818-01\\build\\Microsoft.NETCore.Native.targets(342,5): error MSB3073: comand output \"\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\release\\netcoreapp2.2\\win-x64\\native\\link.rsp\"\" wit code 1120. [H:\\c\\blaze_svn\\Projects\\blaze\\_Tests\\CoreDatastore\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7538","RelatedDescription":"Closed issue \"Win10, NetCore 2.2, simple \"HelloWorld\" with Google.Cloud.Datastore.V1 dependency fails to compile (with Firestore all is good)\" (#7538)"},{"Id":"456464202","IsPullRequest":true,"CreatedAt":"2019-06-18T00:18:12","Actor":"jkotas","Number":"7525","RawContent":null,"Title":"Update libunwind to latest","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7525","RelatedDescription":"Closed or merged PR \"Update libunwind to latest\" (#7525)"},{"Id":"457178956","IsPullRequest":true,"CreatedAt":"2019-06-18T00:18:01","Actor":"Dotnet-GitSync-Bot","Number":"7535","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @jkotas @tarekgh @sywhang @marek-safar @adamsitnik @benaadams @ViktorHofer","Url":"https://github.com/dotnet/corert/pull/7535","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7535)"},{"Id":"456690465","IsPullRequest":true,"CreatedAt":"2019-06-17T22:24:37","Actor":"trylek","Number":"7533","RawContent":null,"Title":"More precise handling of instantiating stubs according to CoreCLR","State":"closed","Body":"I have found a few places in ceeInfoGetCallInfo where I originally\r\ndidn't fully understand the intent of the CoreCLR code so\r\nI converted it imprecisely. This change fixes two such imprecisions\r\nregarding instantiating stubs and, in doing so, fixes about\r\n300 more CoreCLR classloader Pri#1 tests.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7533","RelatedDescription":"Closed or merged PR \"More precise handling of instantiating stubs according to CoreCLR\" (#7533)"},{"Id":"456800818","IsPullRequest":true,"CreatedAt":"2019-06-17T13:32:28","Actor":"MichalStrehovsky","Number":"7534","RawContent":null,"Title":"Port GC changes from coreclr","State":"closed","Body":"Porting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.","Url":"https://github.com/dotnet/corert/pull/7534","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr\" (#7534)"},{"Id":"456684435","IsPullRequest":true,"CreatedAt":"2019-06-17T01:40:50","Actor":"MichalStrehovsky","Number":"7532","RawContent":null,"Title":"Do not generate object array thunk for byref-returning delegates","State":"closed","Body":"Object array thunks are the weird thunks we make for delegates for the LINQ expression interpreter that dispatch to a method that takes an object array and returns object. There's no way to turn object returned from that method into a byref so we shouldn't try to make the thunks.\r\n\r\nAlso hit an assert in dynamic invoke method thunk, so fixed that too.\r\n\r\nFixes #7526.","Url":"https://github.com/dotnet/corert/pull/7532","RelatedDescription":"Closed or merged PR \"Do not generate object array thunk for byref-returning delegates\" (#7532)"},{"Id":"456480061","IsPullRequest":false,"CreatedAt":"2019-06-17T01:40:50","Actor":"kvittokonito","Number":"7526","RawContent":null,"Title":"Compilation error when using \"ref\" returns ","State":"closed","Body":"I am getting the following error:\r\n```csharp\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [Path/To/Project/With/Confidential/Class.csproj]\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: SomeConfidentialClass ByRef, ? [Path/To/Project/With/Confidential/Class.csproj]\r\n  Internal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: SomeConfidentialClass ByRef, ?\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateConstructedTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.InstantiateDependencies(NodeFactory factory, Instantiation typeInstantiation, Instantiation methodInstantiation)\r\n     at ILCompiler.DependencyAnalysis.ShadowConcreteMethodNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nWhen using \"ref\" returns like this:\r\n```csharp\r\nprivate ITransform _transform;\r\npublic ref ITransform TransformByRef => ref _transform;\r\n```\r\n\r\nIs this feature not supported in CoreRT?","Url":"https://github.com/dotnet/corert/issues/7526","RelatedDescription":"Closed issue \"Compilation error when using \"ref\" returns \" (#7526)"},{"Id":"456575788","IsPullRequest":true,"CreatedAt":"2019-06-16T15:45:55","Actor":"MichalStrehovsky","Number":"7530","RawContent":null,"Title":"Implement obsolete Marshal.Read APIs","State":"closed","Body":"If there's a bad obsolete API we added to .NET Core, chances are WinForms uses it.","Url":"https://github.com/dotnet/corert/pull/7530","RelatedDescription":"Closed or merged PR \"Implement obsolete Marshal.Read APIs\" (#7530)"},{"Id":"456568649","IsPullRequest":true,"CreatedAt":"2019-06-16T15:43:39","Actor":"MichalStrehovsky","Number":"7527","RawContent":null,"Title":"Fix CharSet on GetProcAddress","State":"closed","Body":"This flavor is used in NativeLibrary.GetSymbol so we didn't hit this before.","Url":"https://github.com/dotnet/corert/pull/7527","RelatedDescription":"Closed or merged PR \"Fix CharSet on GetProcAddress\" (#7527)"},{"Id":"456568694","IsPullRequest":true,"CreatedAt":"2019-06-16T05:16:48","Actor":"MichalStrehovsky","Number":"7529","RawContent":null,"Title":"Scan for `Marshal.SizeOf(Type)` usage","State":"closed","Body":"WinForms codebase is full of this pattern and there's no reason we couldn't misuse the reflection method body scanner to scan for this too.","Url":"https://github.com/dotnet/corert/pull/7529","RelatedDescription":"Closed or merged PR \"Scan for `Marshal.SizeOf(Type)` usage\" (#7529)"},{"Id":"456568676","IsPullRequest":true,"CreatedAt":"2019-06-16T04:27:48","Actor":"MichalStrehovsky","Number":"7528","RawContent":null,"Title":"Implement generation of function pointer metadata","State":"closed","Body":"Hit this while accidentally compiling WPF, but might as well just implement this.","Url":"https://github.com/dotnet/corert/pull/7528","RelatedDescription":"Closed or merged PR \"Implement generation of function pointer metadata\" (#7528)"},{"Id":"456373747","IsPullRequest":false,"CreatedAt":"2019-06-14T18:14:20","Actor":"christianscheuer","Number":"7524","RawContent":null,"Title":"Finalize Alpine Linux / linux-musl-x64 support","State":"open","Body":"Thanks to @janvorli's fix in #7522 we can now build the objwriter package on Alpine Linux (in the Docker image from https://github.com/dotnet/corert/issues/7510#issuecomment-501516667 - mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.6-WithNode-cfdd435-20190521001804), by invoking:\r\n\r\n```\r\n./build.sh objwriter Release\r\n```\r\n\r\nHowever, even while the ObjectWriter package itself builds, CoreRT does not pick it up. CoreRT expects to find a published ObjectWriter package, musl edition, in the nuget feed. The error message when invoking the above is therefore (after having successfully built the native components of CoreRT + objwriter):\r\n\r\n```\r\n Restoring packages for /corertalpine/src/ILCompiler/ObjectWriter/ObjectWriter.depproj...\r\n  Installing Microsoft.DotNet.ObjectWriter 1.0.0-alpha-27619-05.\r\n/corertalpine/src/ILCompiler/ObjectWriter/ObjectWriter.depproj : error NU1101: Unable to find package runtime.linux-musl-x64.Microsoft.DotNet.ObjectWriter. No packages exist with this id in source(s): dotnetfeed dotnet-core, dotnetfeed dotnet-coreclr, myget.org dotnet-buildtools, myget.org dotnet-core, myget.org dotnet-corefxlab, myget.org system-commandline, nuget.org\r\n  Generating MSBuild file /corertalpine/bin/obj/Linux.x64.Release/ObjectWriter/ObjectWriter.depproj.nuget.g.props.\r\n  Generating MSBuild file /corertalpine/bin/obj/Linux.x64.Release/ObjectWriter/ObjectWriter.depproj.nuget.g.targets.\r\n```\r\n\r\n### Proper fix: Publish linux-musl-x64 packages\r\nI suspect the best longtime fix would be for CoreRT to publish linux-musl-x64 packages by adding a linux-musl-x64 flavor to the `eng/platform-matrix.yml`, if I'm understanding the infrastructure correctly.\r\nIf this is the way going forward, would it then be as simple as just adding it there, or do things need to be changed in other places too?\r\nSince CoreCLR builds musl flavors and we can now build those manually for CoreRT with janvorli's fix, I suspect this should be a pretty simple change, right?\r\n\r\n### Workaround for now: Patch CoreRT to pick up the built objwriter package\r\nFor now I'm fine with having to build CoreRT myself on Alpine Linux, even if we need to do some manual patches to the tree to allow CoreRT to pick up the built objwriter package.\r\nBut, how should I patch it so that it does that? I'm assuming the ObjectWriter.depproj is part of the solution (or the problem).\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7524","RelatedDescription":"Open issue \"Finalize Alpine Linux / linux-musl-x64 support\" (#7524)"},{"Id":"455898750","IsPullRequest":true,"CreatedAt":"2019-06-13T23:26:35","Actor":"janvorli","Number":"7522","RawContent":null,"Title":"Fix build with clang on Alpine Linux","State":"closed","Body":"On Alpine Linux (and some other Linuxes as well), there versioned\r\nfile name for clang exists only for clang and not clang++. So\r\nthere is e.g. clang-5.0, clang and clang++. This makes build to\r\npick only the C compiler, but leaves the C++ unspecified, so\r\ncmake picks g++ and the build fails.\r\n\r\nThis change fixes it by ensuring that we pick both clang and clang++\r\neither unversioned or versioned.","Url":"https://github.com/dotnet/corert/pull/7522","RelatedDescription":"Closed or merged PR \"Fix build with clang on Alpine Linux\" (#7522)"},{"Id":"455960432","IsPullRequest":true,"CreatedAt":"2019-06-13T23:17:23","Actor":"Dotnet-GitSync-Bot","Number":"7523","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7523","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7523)"},{"Id":"454944688","IsPullRequest":true,"CreatedAt":"2019-06-13T18:54:32","Actor":"trylek","Number":"7516","RawContent":null,"Title":"Method call info cleanup pt. 1 - wrong method called","State":"closed","Body":"This change fixes about 280 Pri#1 Loader/classloader tests where\r\npreviously we were using slightly incorrect method info. This\r\ncorresponds to the biggest error bucket \"wrong method called\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7516","RelatedDescription":"Closed or merged PR \"Method call info cleanup pt. 1 - wrong method called\" (#7516)"},{"Id":"455716021","IsPullRequest":false,"CreatedAt":"2019-06-13T12:36:12","Actor":"BaCtr0x","Number":"7521","RawContent":null,"Title":"VS Code 2019 cannot open file 'kernel32.lib'","State":"open","Body":"I reinstallt everything and checked my SDK version.\r\nThe testprogram is a simple hello world program.\r\nThe error promt is:\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.21.27702.2 for x86\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\nhello.cpp\r\nMicrosoft (R) Incremental Linker Version 14.21.27702.2\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n/out:hello.exe\r\nhello.obj\r\nLINK : fatal error LNK1104: cannot open file 'kernel32.lib'","Url":"https://github.com/dotnet/corert/issues/7521","RelatedDescription":"Open issue \"VS Code 2019 cannot open file 'kernel32.lib'\" (#7521)"},{"Id":"455490633","IsPullRequest":true,"CreatedAt":"2019-06-13T04:20:34","Actor":"jkotas","Number":"7519","RawContent":null,"Title":"Delete unnecessary code","State":"closed","Body":"Fixes some errors while building with clang5.0","Url":"https://github.com/dotnet/corert/pull/7519","RelatedDescription":"Closed or merged PR \"Delete unnecessary code\" (#7519)"},{"Id":"455496226","IsPullRequest":true,"CreatedAt":"2019-06-13T04:20:10","Actor":"Dotnet-GitSync-Bot","Number":"7520","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @stephentoub @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7520","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7520)"},{"Id":"455223188","IsPullRequest":true,"CreatedAt":"2019-06-13T01:37:18","Actor":"Dotnet-GitSync-Bot","Number":"7518","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7518","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7518)"},{"Id":"454961949","IsPullRequest":true,"CreatedAt":"2019-06-12T02:02:06","Actor":"Suchiman","Number":"7517","RawContent":null,"Title":"Unify GC sources and implement GetGCMemoryInfo","State":"closed","Body":"The first commit copies everything from coreclr (mainly formatting differences).\r\n\r\nThe second commit implements `GC.GetGCMemoryInfo` for #5680.\r\nI don't know how to test it though, the simple tests in corert yield\r\n> 'GC' does not contain a definition for 'GetGCMemoryInfo'\r\n\r\nand the [instructions](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) are failing for me because\r\n> error MSB4064: The \"DotNetAppHostExecutableName\" parameter is not supported by the \"ComputeManagedAssemblies\" task. Verify the parameter exists on the task, and it is a settable public instance property","Url":"https://github.com/dotnet/corert/pull/7517","RelatedDescription":"Closed or merged PR \"Unify GC sources and implement GetGCMemoryInfo\" (#7517)"},{"Id":"454902237","IsPullRequest":true,"CreatedAt":"2019-06-11T23:01:35","Actor":"Dotnet-GitSync-Bot","Number":"7515","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @kouvel","Url":"https://github.com/dotnet/corert/pull/7515","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7515)"},{"Id":"454726423","IsPullRequest":true,"CreatedAt":"2019-06-11T17:57:05","Actor":"Suchiman","Number":"7513","RawContent":null,"Title":"Port GC changes from coreclr - 17","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7512\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/141926d90c54bb358cfe8d9eb641c88e94639a8c):**\r\n- https://github.com/dotnet/coreclr/commit/2832f54a6602cd4c0dff4fa65163345ab3ad953c (already merged)\r\n- https://github.com/dotnet/coreclr/commit/5a34da317e3f8cef7895d6d4ad6ed75f3a79d38e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/f143d0e3e1aff6fc5c3470a3a6e2d0732c23b7ce (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/b271aff1fa54c1385143f3b45c1bf3af01c901cd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/e985b20260631c98a09f08cb67e93d690a6ffd0b (not applicable)\r\n- https://github.com/dotnet/coreclr/commit/67c83438bad8cd8f0ba20b370e4cace746ef57d1 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/934d73fea95b4c479b67fee0ff53caea4a325ee5 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/718598334310f6ad331ba2893ee4557beffaa74c (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bdb995987178231ba541f22143cb3cab56309daa (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2a175563b5c1b04083da6841f84a991ac576446a (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b676246c1dd880b7290a1313cdac309fe020aa6f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3489e56c875c6144c729b51063300c7d60b1ae31 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4ca032d49b0718eb40f2105f94db2b243cf94957 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/476dc1cb88a0dcedd891a0ef7a2e05d5c2f94f68 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4c82068adb046eee3573984392a0d1e774062ae0 (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7513","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 17\" (#7513)"},{"Id":"454781157","IsPullRequest":true,"CreatedAt":"2019-06-11T17:56:14","Actor":"Dotnet-GitSync-Bot","Number":"7514","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7514","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7514)"},{"Id":"454599070","IsPullRequest":true,"CreatedAt":"2019-06-11T14:07:29","Actor":"Suchiman","Number":"7512","RawContent":null,"Title":"Port GC changes from coreclr - 16","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7511\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee):**\r\n- https://github.com/dotnet/coreclr/commit/cee1a8c9d9c6669318d1567c85457fbcd642587d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3c07febf02b67c4c5f8eef846d5aa581372e454e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/fe355a617ff5e56c8607c2b12c650c3b95c5cfbd (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/77bd2c4aab50f84d2a0a94275072ee52f295757c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b56d39c5812db4780c818140083cf753aca8ca5a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/473993d3b9b1a50931392c7689872d4f16f140f7 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/577f8b84113fdf5ff001732b93da6733842123ec (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bef5dd6507f2e8ac163941646ef9936d6ced3715 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0d9114b1f5d0b125f04f1ec17064a761fb26ba66 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4029007b7edd290c236901a246ef48ac3e9de4b6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3f21a0f6cc8e0036ad536c791d7877a35d22cd01 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c2dacd2025145c586a5569408c1427899a3767cc (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a9b6851ad1a9551f3f654b654b094147b50e5999 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/8d93bd9080f47efd87dc5420a6e600f8dc432659 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/9733c30b27ca90d3eeb07928df6e6e5861c203bb (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/141926d90c54bb358cfe8d9eb641c88e94639a8c (gc only port)","Url":"https://github.com/dotnet/corert/pull/7512","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 16\" (#7512)"},{"Id":"454427739","IsPullRequest":true,"CreatedAt":"2019-06-11T08:59:13","Actor":"Suchiman","Number":"7511","RawContent":null,"Title":"Port GC changes from coreclr - 15","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7508\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a):**\r\n- https://github.com/dotnet/coreclr/commit/dacab04a17e0cd4ed2b321be936f233cf75bb7e8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c1801e85024add717f518feb6a9caed60d54500f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/5a97d8e9f14763a4ff90d14d045f0173e8d4b944 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/23fbf7e7ab231876b9d54b52bac044cdde159118 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/66009329a187634dc432854cdd7c893d972156eb (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/07f9f2f101754c38570ed75ce9a7083090769a0f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/6100a9faf1c29b06aed3ad5bef00ce905880309d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cf887c943bf1dee978bc863b7481686ecee8ad83 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cc14e6cecf6984c991fe906c9fe4b327b4f93f96 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67f1116cea421ebbe516fafc963e213cc6f0e117 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/94359a5208206be08ff44a1fc14e0334e2af2071 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb8b829fd3717acc2688025341f822e4097cf5c5 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/dd80afe98f969e3a309917643c0e45e83aaa37bf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6e629e9ccd58be36fcc858d357cdf0811bdcb380 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/98d2b480ff9fc207f568ed2ac8dcbcb7c9d6a719 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2c6c6c9ffe6ef40320dfce3c6e53e953485f21a6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d33f73f69051d2861454081bb3211615413d8ed0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee (manual port)","Url":"https://github.com/dotnet/corert/pull/7511","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 15\" (#7511)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"458283215","IsPullRequest":true,"CreatedAt":"2019-06-20T03:28:03","Actor":"nguerrera","Number":"3344","RawContent":null,"Title":"Fix crash in case of fallback from package cache to memory","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3344","RelatedDescription":"Closed or merged PR \"Fix crash in case of fallback from package cache to memory\" (#3344)"},{"Id":"458294573","IsPullRequest":true,"CreatedAt":"2019-06-20T01:39:21","Actor":"nguerrera","Number":"3345","RawContent":null,"Title":"Fix dotnet store for netcoreapp3.0","State":"open","Body":"Also fix msbuild batching error that caused O(N^2) redundant work, and flakiness due to race conditions between the redundant workers.\r\n\r\nAnd replace ContinueOnError=WarnAndContinue with just ignoring standard error format on exec of crossgen. crossgen prior to 3.0 is notorious for spewing noise and the only thing that is reliable is the exit code. The previous approach around it was way too big of a hammer.\r\n\r\nThis is the \"minimal fix\" for 3.0. I am still working on a major re-design and simplification of dotnet store, but that will not likely be ready for 3.0 preview 7 and we want to have these issues fixed before then.\r\n\r\nIt is also not clear yet if we would be able to use the simplified design for all TFMs or only on netcoreapp3.0. That is because the crux of the re-design is to use the new PublishReadyToRun code as the foundation.","Url":"https://github.com/dotnet/sdk/pull/3345","RelatedDescription":"Open PR \"Fix dotnet store for netcoreapp3.0\" (#3345)"},{"Id":"458276977","IsPullRequest":true,"CreatedAt":"2019-06-20T00:08:38","Actor":"wli3","Number":"3343","RawContent":null,"Title":"add wpf and winform large perf tests","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3343","RelatedDescription":"Open PR \"add wpf and winform large perf tests\" (#3343)"},{"Id":"458091414","IsPullRequest":true,"CreatedAt":"2019-06-19T15:47:58","Actor":"rainersigwald","Number":"3342","RawContent":null,"Title":"Use preserialized resources to target Core 3","State":"open","Body":"Opts into the new System.Resources.Extensions approach to resource\r\nserialization when targeting .NET Core 3.0+/.NET Standard 2.1+.\r\n\r\nRespects project setting if the project explicitly sets the property, to\r\nallow opting .NET Framework-targeting applications to opt in.\r\n\r\nThis is my stake-in-the ground proposal: light this up automatically for the folks who definitely need it. Happy to have discussion about other times when we should set this.\r\n\r\nImportant factors include:\r\n* TF of the project, including whether that TF has S.R.Extensions guaranteed\r\n* runtime of the building MSBuild (Core MSBuild can't support the legacy approach needed for targeting full without adding the S.R.Extensions reference to the project)\r\n\r\n@nguerrera @livarcocc @ericstj @merriemcgaw @dreddy-work\r\n\r\n(this property does nothing but is harmless until it runs in conjunction with https://github.com/microsoft/msbuild/pull/4420; posting this now to review in parallel)","Url":"https://github.com/dotnet/sdk/pull/3342","RelatedDescription":"Open PR \"Use preserialized resources to target Core 3\" (#3342)"},{"Id":"457991662","IsPullRequest":false,"CreatedAt":"2019-06-19T12:44:05","Actor":"onovotny","Number":"3341","RawContent":null,"Title":"Incorrect warning about WindowsDesktop SDK","State":"open","Body":"I have a project that has some libraries/exe that use WPF and some that don't. The ones that do use the WindowsDesktop SDK. The ones that don't use the default SDK to prevent accidental WPF references.\r\n\r\nI have a directory.build.props file that sets `UseWPF` to `true` so that I don't need them in all places.\r\n\r\nIn Preview 7, I now get this warning:\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012503\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets(340,5): warning NETSDK1107: Microsoft.NET.Sdk.WindowsDesktop is required to build Windows desktop applications. 'UseWpf' and 'UseWindowsForms' are not supported by the current SDK.\r\n```\r\n\r\nThat's coming from `Microsoft.NET.Sdk.DefaultItems.targets`. The check is being too aggressive.","Url":"https://github.com/dotnet/sdk/issues/3341","RelatedDescription":"Open issue \"Incorrect warning about WindowsDesktop SDK\" (#3341)"},{"Id":"457688407","IsPullRequest":true,"CreatedAt":"2019-06-19T04:40:21","Actor":"nguerrera","Number":"3340","RawContent":null,"Title":"Fix small build issues","State":"closed","Body":"Three separate small issues in three commits:\r\n\r\n\r\n1. Fix incremental build in VS when only target files change. This had been driving me crazy causing tests to run without my targets changes. Fixed the other two while I was playing around nearby.\r\n\r\n2. Remove outdated workaround\r\n\r\n3. Auto-bump version of task assemblies. Fix #2953. Follows [Arcade recommendation](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/Versioning.md#recommanded-settings). ","Url":"https://github.com/dotnet/sdk/pull/3340","RelatedDescription":"Closed or merged PR \"Fix small build issues\" (#3340)"},{"Id":"456008150","IsPullRequest":true,"CreatedAt":"2019-06-19T00:11:56","Actor":"dsplaisted","Number":"3331","RawContent":null,"Title":"Preserve metadata from Reference items","State":"closed","Body":"Fix #2254 ","Url":"https://github.com/dotnet/sdk/pull/3331","RelatedDescription":"Closed or merged PR \"Preserve metadata from Reference items\" (#3331)"},{"Id":"455368499","IsPullRequest":true,"CreatedAt":"2019-06-18T22:48:11","Actor":"nguerrera","Number":"3326","RawContent":null,"Title":"Support PublishReadyToRun for framework-dependent deployment","State":"closed","Body":"Fix #3110 ","Url":"https://github.com/dotnet/sdk/pull/3326","RelatedDescription":"Closed or merged PR \"Support PublishReadyToRun for framework-dependent deployment\" (#3326)"},{"Id":"455469527","IsPullRequest":true,"CreatedAt":"2019-06-18T18:02:52","Actor":"nguerrera","Number":"3327","RawContent":null,"Title":"Reduce verbosity of conflict resolution","State":"closed","Body":"Also:\r\n* Reduce line noise in preview message\r\n* Log info about arbitrary copy-local choice in conflict resolution\r\n\r\nFix #2468 \r\nFix #3319 ","Url":"https://github.com/dotnet/sdk/pull/3327","RelatedDescription":"Closed or merged PR \"Reduce verbosity of conflict resolution\" (#3327)"},{"Id":"454842931","IsPullRequest":false,"CreatedAt":"2019-06-18T18:02:52","Actor":"nguerrera","Number":"3319","RawContent":null,"Title":"Issues with conflict resolution logging","State":"closed","Body":"1. At normal verbosity, there are unactionable messages about things that happen in very common cases. For example, every core WPF project has a conflict between WindowsBase in netcore app. Importance should be lowered so that you can still see in binlog/diag, but not otherwise. We regularly get questions about what to do about a conflict, when there is nothing to do.\r\n\r\n2. It is quite noisy to have codes associated with non-error, non-warnings. We should refactor to not bother having codes for messages. Related: https://github.com/dotnet/sdk/issues/2468\r\n\r\n3. We are concatenating strings, so we end up with a code inside a code. NETSDKXXXX: Encountered conflict yada, yada.  NETSDKYYYY. Choosing Foo.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3319","RelatedDescription":"Closed issue \"Issues with conflict resolution logging\" (#3319)"},{"Id":"457564494","IsPullRequest":false,"CreatedAt":"2019-06-18T17:34:22","Actor":"lzganec","Number":"3338","RawContent":null,"Title":"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects","State":"closed","Body":"Having a dependency to Microsoft.CodeCoverage (which comes from Microsoft.NET.Test.Sdk) leaves Microsoft.VisualStudio.TraceDataCollector.resources.dll localized resource satellite assembly in the publish output using .NET Core version 2.2.","Url":"https://github.com/dotnet/sdk/issues/3338","RelatedDescription":"Closed issue \"SatelliteResourceLanguages property doesn't filter all resources when publishing test projects\" (#3338)"},{"Id":"457573123","IsPullRequest":false,"CreatedAt":"2019-06-18T16:12:55","Actor":"vitek-karas","Number":"3339","RawContent":null,"Title":"Add ability to differentiate framework assemblies in self-contained apps","State":"open","Body":"In .NET Core 3.0 we're introducing `AssemblyDependencyResolver` which is a managed API to basically parse and process a `.deps.json` for a component (think plugin). The API uses existing algorithms in `hostpolicy` which are executed during application startup to process the `.deps.json` for the app.\r\n\r\nApps are allowed to contain assemblies which are also part of a framework which the app relies on. As an example app which relies on ASP.NET framework can also have a package reference for `System.Threading.Channels` (assembly which is part of the ASP.NET framework). The current behavior is:\r\n* For self-contained apps, the SDK will pick the higher version of the two and copy it into the app (so if the package reference is higher it overwrites the one in the framework, otherwise the one from framework wins).\r\n* For framework-dependent apps, the SDK will make the package assembly part of the app and it will write the assembly and file versions into the `.deps.json`. At runtime `hostpolicy` uses the version information to compare the assembly from the app against the one in the framework and it picks the one with the higher version.\r\n\r\nApplying this logic to dynamically loaded components means that we would want the \"framework dependent\" behavior for components as well (we don't support self-contained components - that sort of doesn't make sense). Note that during component dependency resolution we intentionally ignore the assemblies from the app itself (this is to enable component isolation), but we do want to consider the frameworks (as frameworks are assumed to always be shared between the app and the components).\r\n\r\nIf the component is loaded into a framework dependent app, this is easy to solve as `hostpolicy` will apply the exact same logic and compare assembly and file versions for framework assemblies.\r\n\r\nThe problem is if the component is loaded into a self-contained app, there's no way to tell which assemblies are from a framework and which belong to the app itself. As noted above we want to consider the framework assemblies, but ignore the app assemblies.\r\n\r\nThe ask here is to add some information somewhere such that the dependency resolution could always tell which assemblies are framework assemblies, even in self-contained apps. For the hosting layer, putting this information into `.deps.json` would make a lot of sense, but if it makes sense to put it elsewhere, it might work as well.\r\n\r\nThe problem is also discussed here: https://github.com/dotnet/core-setup/issues/6826\r\n\r\nWe would be OK for this to not be solved in 3.0 as we probably don't have enough time to make the necessary hosting changes to support the new information coming from the SDK.","Url":"https://github.com/dotnet/sdk/issues/3339","RelatedDescription":"Open issue \"Add ability to differentiate framework assemblies in self-contained apps\" (#3339)"},{"Id":"457161990","IsPullRequest":false,"CreatedAt":"2019-06-17T21:42:34","Actor":"fadimounir","Number":"3337","RawContent":null,"Title":"App host not published correctly after a previous PublishSingleFile","State":"open","Body":"To repro:\r\n1) dotnet new console\r\n2) dotnet publish -r win-x64 /p:PublishSingleFile\r\n3) dotnet publish -r win-x64\r\n\r\nAfter step 2, there will be a single app.exe (+pdb) file in the publish folder. Approx size is ~70 MB.\r\nStep 3 correctly copies all dlls and other files to the publish folder, but fails to overwrite app.exe with the non-bundled version of the file (should be around ~150 KB). The large single-file bundle is still there in the publish folder.\r\n\r\nNot sure if we can do something about it. This falls in the \"clean publish\" category of bugs, but I thing at least we should overwrite the app.exe in the publish folder with the correct one.","Url":"https://github.com/dotnet/sdk/issues/3337","RelatedDescription":"Open issue \"App host not published correctly after a previous PublishSingleFile\" (#3337)"},{"Id":"457128227","IsPullRequest":false,"CreatedAt":"2019-06-17T20:15:30","Actor":"fadimounir","Number":"3336","RawContent":null,"Title":"Unable to use ReadyToRun on Debian 8 due to incorrect runtime bits resolution by SDK","State":"open","Body":"Original bug: https://github.com/dotnet/coreclr/issues/24565\r\n\r\nRepro app is here: https://github.com/wieslawsoltes/Draw2D. To repro, clone and run this command:\r\n``` console\r\ndotnet publish ./src/Draw2D/Draw2D.csproj -f netcoreapp3.0 -c Release -r debian.8-x64 -o Draw2D_netcoreapp3.0_debian.8-x64\r\n```\r\n\r\nRunning the application throws a `Failed to initialize CoreCLR,, HRESULT: 0x80131500` error.\r\n\r\nLooking at the msbuild verbose logs, you can see that the SDK is copying the runtime bits from the runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64 package, which is incorrect.\r\n\r\nOn Debian9 targets, the runtime bits are copied correctly (version 3). On Debian8, the SDK doesn't resolve correctly. Here's an example error I got: \r\n\r\n``` console\r\n/home/fadi/dotnet_preview5/sdk/3.0.100-preview5-011569/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.ConflictResolution.targets(39,5): message NETSDK1041: Encountered conflict between 'CopyLocal:/home/fadi/.nuget/packages/runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64/native/libcoreclr.so' and 'CopyLocal:/home/fadi/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/3.0.0-preview5-27709-08/runtimes/linux-x64/native/libcoreclr.so'.  NETSDK1037: Could not determine winner due to equal file and assembly versions. [/home/fadi/git/Draw2D/src/Draw2D/Draw2D.csproj]\r\n```\r\n\r\nAlso, it ends up copying the runtime bits from the 1.0.7 runtime package. Example:\r\n\r\n``` console\r\nCopying file from \"/home/fadi/.nuget/packages/runtime.debian.8-x64.microsoft.netcore.runtime.coreclr/1.0.7/runtimes/debian.8-x64/native/libcoreclr.so\" to \"/home/fadi/git/Draw2D/src/Draw2D/bin/Release/netcoreapp3.0/debian.8-x64/libcoreclr.so\".\r\n```","Url":"https://github.com/dotnet/sdk/issues/3336","RelatedDescription":"Open issue \"Unable to use ReadyToRun on Debian 8 due to incorrect runtime bits resolution by SDK\" (#3336)"},{"Id":"454964340","IsPullRequest":true,"CreatedAt":"2019-06-17T18:56:57","Actor":"dsplaisted","Number":"3324","RawContent":null,"Title":"Use runtime pack manifest","State":"closed","Body":"Use runtime pack manifest instead of using conventions and scanning folders.\r\n\r\nResources are still handled using conventions, we need updates to the runtime pack manifest in order to be able to consume them from it: https://github.com/dotnet/core-setup/issues/6768","Url":"https://github.com/dotnet/sdk/pull/3324","RelatedDescription":"Closed or merged PR \"Use runtime pack manifest\" (#3324)"},{"Id":"456910488","IsPullRequest":false,"CreatedAt":"2019-06-17T12:35:44","Actor":"ViktorHofer","Number":"3335","RawContent":null,"Title":"What is the expected path for ResolvePackageFileConflicts to work with repositories that build their own platforms","State":"open","Body":"CoreFx doesn't use the Microsoft.NETCore.App.Ref targeting pack as we build the refs ourselves. Without that targeting pack the `ResolvePackageFileConflicts` task seems to not be able to handle conflicts between package runtime assemblies and the live built ones.\r\n\r\nComparing an example project with a test project in CoreFx I can see the following differences:\r\n- PlatformManifests: not set, points to a manifest file on disk which contains all the platform assemblies\r\n- PreferredPackages: not set, a list of packages that are preferred?\r\n\r\nConflicts as such are therefore missing in CoreFx:\r\n\r\n`Encountered conflict between 'Platform:System.Xml.XDocument.dll' and 'CopyLocal:C:\\Users\\vihofer\\.nuget\\packages\\system.xml.xdocument\\4.0.11\\lib\\netstandard1.3\\System.Xml.XDocument.dll'.  NETSDK1033: Choosing 'Platform:System.Xml.XDocument.dll' because AssemblyVersion '4.1.1.0' is greater than '4.0.11.0'.`\r\n\r\nThe impact of this is that dependencies that come via packages are copied to the output directory and are preferred over the live built ones.\r\n\r\nWhat is the expected path for repositories that live build platforms?\r\n\r\nEDIT: Attaching the binlog of the corefx test project: [msbuild.zip](https://github.com/dotnet/sdk/files/3297026/msbuild.zip)\r\n\r\ncc @ericstj @dsplaisted @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3335","RelatedDescription":"Open issue \"What is the expected path for ResolvePackageFileConflicts to work with repositories that build their own platforms\" (#3335)"},{"Id":"456547388","IsPullRequest":false,"CreatedAt":"2019-06-15T15:19:55","Actor":"MeikTranel","Number":"3334","RawContent":null,"Title":"Hide or Move generated *.designer.cs to obj directory","State":"open","Body":"When using .RESX files for localization the sdk currently compiles this file at design time / build time to be able to reference it as static properties from any csharp code (or xaml for that matter).\r\n\r\nThe generated file probably should not be put under version control, so my preferred way would be moving the output file of the generator into the obj directory, where it would fall under common gitignore rules.\r\n","Url":"https://github.com/dotnet/sdk/issues/3334","RelatedDescription":"Open issue \"Hide or Move generated *.designer.cs to obj directory\" (#3334)"},{"Id":"455826747","IsPullRequest":false,"CreatedAt":"2019-06-15T03:39:50","Actor":"amh1979","Number":"3329","RawContent":null,"Title":"NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized","State":"closed","Body":"SDK: 3.0.0-preview6-27804-01\r\nMicrosoft.NET.Sdk.TargetingPackResolution.targets(185,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized","Url":"https://github.com/dotnet/sdk/issues/3329","RelatedDescription":"Closed issue \"NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\" (#3329)"},{"Id":"456439257","IsPullRequest":true,"CreatedAt":"2019-06-14T23:25:37","Actor":"dsplaisted","Number":"3333","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Replaces #3332, hopefully fixing test failures","Url":"https://github.com/dotnet/sdk/pull/3333","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3333)"},{"Id":"456342176","IsPullRequest":true,"CreatedAt":"2019-06-14T21:04:49","Actor":"wli3","Number":"3332","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3332","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3332)"},{"Id":"455914987","IsPullRequest":true,"CreatedAt":"2019-06-14T00:19:59","Actor":"dsplaisted","Number":"3330","RawContent":null,"Title":"Don't hash DesignTimeBould for ResolvePackageAssets","State":"closed","Body":"Fixes #3313 ","Url":"https://github.com/dotnet/sdk/pull/3330","RelatedDescription":"Closed or merged PR \"Don't hash DesignTimeBould for ResolvePackageAssets\" (#3330)"},{"Id":"454941152","IsPullRequest":true,"CreatedAt":"2019-06-13T19:44:06","Actor":"nugetlurker","Number":"3321","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3321","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3321)"},{"Id":"454941165","IsPullRequest":true,"CreatedAt":"2019-06-13T18:55:43","Actor":"nugetlurker","Number":"3322","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3322","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3322)"},{"Id":"455480612","IsPullRequest":false,"CreatedAt":"2019-06-13T05:12:14","Actor":"heejaechang","Number":"3328","RawContent":null,"Title":"use different assembly version for different build task","State":"closed","Body":"a lot of times, I get something like this whenever I do branch switch and restore and open solution in VS\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/59394912-5d06fc00-8d36-11e9-81c1-d2f0ad724168.png)\r\n\r\nand I believe that is happening because different dll that has same assembly version is already loaded in the msbuild which got reused.\r\n\r\ncan we make different build task dll to use different assembly version so that we don't get into this problem?","Url":"https://github.com/dotnet/sdk/issues/3328","RelatedDescription":"Closed issue \"use different assembly version for different build task\" (#3328)"},{"Id":"454819855","IsPullRequest":true,"CreatedAt":"2019-06-12T19:59:06","Actor":"wli3","Number":"3318","RawContent":null,"Title":"Collect crash exception","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3318","RelatedDescription":"Closed or merged PR \"Collect crash exception\" (#3318)"},{"Id":"455273191","IsPullRequest":false,"CreatedAt":"2019-06-12T15:14:24","Actor":"dsplaisted","Number":"3325","RawContent":null,"Title":"Supply RuntimeIdentifier graph to NuGet","State":"open","Body":"Once this NuGet feature is implemented: https://github.com/NuGet/Client.Engineering/pull/96\r\n\r\nWe will need to set the appropriate property to supply the SDKs graph to NuGet, as well as remove the infrastructure that implicitly references Microsoft.NETCore.App.","Url":"https://github.com/dotnet/sdk/issues/3325","RelatedDescription":"Open issue \"Supply RuntimeIdentifier graph to NuGet\" (#3325)"},{"Id":"454848287","IsPullRequest":true,"CreatedAt":"2019-06-12T03:09:18","Actor":"nguerrera","Number":"3320","RawContent":null,"Title":"Fix duplicate resolved files to publish","State":"closed","Body":"Fix #3257 \r\n\r\nThere were two issues.\r\n\r\n1. A misunderstanding of msbuild batching rules and unqualified metadata caused satellite assemblies to be included twice (from same source location) into the publish list. (See https://github.com/microsoft/msbuild/issues/4429)\r\n2. There are assemblies with the same name and version in multiple frameworks. We have to choose one arbitrarily.\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3320","RelatedDescription":"Closed or merged PR \"Fix duplicate resolved files to publish\" (#3320)"},{"Id":"454941183","IsPullRequest":true,"CreatedAt":"2019-06-11T23:05:54","Actor":"nugetlurker","Number":"3323","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6045 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6045 into sdk master branch","Url":"https://github.com/dotnet/sdk/pull/3323","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6045 into sdk\" (#3323)"},{"Id":"454317577","IsPullRequest":true,"CreatedAt":"2019-06-11T00:58:34","Actor":"dsplaisted","Number":"3316","RawContent":null,"Title":"Remove old deps file generation logic","State":"closed","Body":"No need to keep both old and new copies anymore.\r\n\r\nThis ends up deleting some of the DependencyContextBuilder unit test coverage, as with the new design the builder depends on the output of ResolvePackageAssets, which isn't so easy to mock.","Url":"https://github.com/dotnet/sdk/pull/3316","RelatedDescription":"Closed or merged PR \"Remove old deps file generation logic\" (#3316)"},{"Id":"454341820","IsPullRequest":false,"CreatedAt":"2019-06-10T19:50:29","Actor":"crummel","Number":"3317","RawContent":null,"Title":"Source-build patch removal for SDK.","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/sdk.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\nsdk/0001-Upgrade-to-netcoreapp2.1.patch | ToolCompat | Unknown | source-build | May go away with SDK uptake.  Otherwise needs investigation similar to   nuget-client/0001\r\nsdk/0002-Add-missing-PlatformAbstractions-reference.patch | Bug | Incorporate | Repo |  \r\nsdk/0003-Consolidate-versions.patch | Coherence | Incorporate | Repo |  \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3317","RelatedDescription":"Open issue \"Source-build patch removal for SDK.\" (#3317)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"1141074032273453056","CreatedAt":"2019-06-18T20:03:44+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core https://t.co/modbwJLbCR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":298,"FavoriteCount":148,"RawContent":null},{"Id":"1139464997086515200","CreatedAt":"2019-06-14T09:30:00+00:00","UserScreenname":"dotnet","Text":"In this episode of On .NET, @merrie_mcgaw and @dcampbell share some interesting insights on the work that's going i… https://t.co/lk13vbgcLT","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"1138862091987800064","CreatedAt":"2019-06-12T17:34:16+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 6 https://t.co/33ez5lSv95","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":373,"FavoriteCount":200,"RawContent":null},{"Id":"1138808172397899781","CreatedAt":"2019-06-12T14:00:00+00:00","UserScreenname":"dotnet","Text":"Announcing ML .NET 1.1 and Model Builder updates (Machine Learning for .NET)\nhttps://t.co/XN6b6HRpSP https://t.co/3pmcAPxoN9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":39,"RawContent":null},{"Id":"1138490776495697920","CreatedAt":"2019-06-11T16:58:47+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"1138476484010446848","CreatedAt":"2019-06-11T16:02:00+00:00","UserScreenname":"dotnet","Text":"Find out what the @aspnet team has been working to add better support for building microservices in… https://t.co/kDZY18RslQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":17,"RawContent":null},{"Id":"1138214322503426048","CreatedAt":"2019-06-10T22:40:16+00:00","UserScreenname":"dotnet","Text":"On this week's #ASPNET Community Standup, we'll be talking to @danroth27 about the Blazing Pizza demo he showed at… https://t.co/EoPKEmeHPX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":59,"FavoriteCount":23,"RawContent":null},{"Id":"1137047014795911168","CreatedAt":"2019-06-07T17:21:48+00:00","UserScreenname":"dotnet","Text":"We're happy to support Core WF and Core WCF open source projects https://t.co/4hjysrl1X8 https://t.co/JWwVvdv01f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":141,"FavoriteCount":73,"RawContent":null}]}},"RunOn":"2019-06-20T05:30:37.4160071Z","RunDurationInMilliseconds":12506}