{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7054932052","Type":"PullRequestEvent","CreatedAt":"2018-01-04T04:35:56","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15711","RelatedDescription":"Merged pull request \"Check for null in ReflectionTypeLoadException Message/ToString\" (#15711) at dotnet/coreclr","RelatedBody":"For https://github.com/dotnet/coreclr/issues/15710\r\n\r\n@jkotas PTAL\r\n\r\n@sdmaclea how can I run the Arm64 tests that were failing previously?"},{"Id":"7054894551","Type":"PullRequestEvent","CreatedAt":"2018-01-04T04:15:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15714","RelatedDescription":"Merged pull request \"Fix typo in docstring\" (#15714) at dotnet/coreclr","RelatedBody":"Fix missing word in the HashTable docstring."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7054900571","Type":"PullRequestEvent","CreatedAt":"2018-01-04T04:18:31","Actor":"schneems","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8326","RelatedDescription":"Opened pull request \"[ci skip] Get more Open Source Helpers\" (#8326) at dotnet/cli","RelatedBody":"[CodeTriage](https://www.codetriage.com/) is an app I have maintained\nfor the past 4-5 years with the goal of getting people involved in\nOpen Source projects like this one. The app sends subscribers a random\nopen issue for them to help \"triage\". For some languages you can also\nsuggested areas to add documentation.\n\nThe initial approach was inspired by seeing the work of the small\ncore team spending countless hours asking \"what version was\nthis in\" and \"can you give us an example app\". The idea is to\noutsource these small interactions to a huge team of volunteers\nand let the core team focus on their work.\n\nI want to add a badge to the README of this project. The idea is to\nprovide an easy link for people to get started contributing to this\nproject. A badge indicates the number of people currently subscribed\nto help the repo. The color is based off of open issues in the project.\n\nHere are some examples of other projects that have a badge in their\nREADME:\n\n- https://github.com/crystal-lang/crystal\n- https://github.com/rails/rails\n- https://github.com/codetriage/codetriage\n\nThanks for building open source software, I would love to help you find some helpers."},{"Id":"7054875215","Type":"PullRequestEvent","CreatedAt":"2018-01-04T04:04:40","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8325","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-26104-04 (master)\" (#8325) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7054373613","Type":"PullRequestEvent","CreatedAt":"2018-01-04T00:18:07","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8323","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.6.0-rtm-4782 into cli\" (#8323) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4782 into cli master branch"},{"Id":"7054344480","Type":"PullRequestEvent","CreatedAt":"2018-01-04T00:06:10","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8310","RelatedDescription":"Closed pull request \"Merge release/2.0.0 to release/2.1\" (#8310) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20180102-080036\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20180102-080036 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7054343319","Type":"PullRequestEvent","CreatedAt":"2018-01-04T00:05:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8320","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-26103-03 (master)\" (#8320) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7054312235","Type":"PullRequestEvent","CreatedAt":"2018-01-03T23:53:17","Actor":"steveharter","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8324","RelatedDescription":"Opened pull request \"Add help for list-sdks and list-runtimes\" (#8324) at dotnet/cli","RelatedBody":"Add help for `--list-sdks` and `--list-runtimes` which is shown via `dotnet --help` or `dotnet --h` when the SDK is installed.\r\n\r\nThis matches the help previously added to core-setup when just doing a `dotnet`, or when `dotnet --help` or `dotnet --h` is used without the SDK being present.\r\n\r\nFixes https://github.com/dotnet/core-setup/issues/3503\r\n\r\n@nguerrera assuming we want this for preview1, do I need to create a PR in that branch, or are we doing mass syncing of master to preview1?"},{"Id":"7054231238","Type":"IssuesEvent","CreatedAt":"2018-01-03T23:22:40","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8321","RelatedDescription":"Closed issue \"dotnet publish and the ASPNETCORE_ENVIRONMENT \" (#8321) at dotnet/cli","RelatedBody":"I bet this has been covered but I am stumped as to what the best way to publish to multiple environments. It appears I can update ASPNETCORE_ENVIRONMENT  in the web.config which is the best solution for me, not requiring server env changes or requirements. But there is not transformation support. IS there another best practice way to do this?\r\n\r\nI have multiple build configurations and publish configurations... and 1 profile per environment which works great locally. \r\n\r\n\r\n## Steps to reproduce\r\ndotnet publish \r\n\r\n## Expected  behavior\r\nexpecting the web.config to transform the ASPNETCORE_ENVIRONMENT\r\n\r\n## Actual behavior\r\ndotnet publish recreated the web.config \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7054223907","Type":"PullRequestEvent","CreatedAt":"2018-01-03T23:20:06","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8323","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-rtm-4782 into cli\" (#8323) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4782 into cli master branch"},{"Id":"7053950590","Type":"IssuesEvent","CreatedAt":"2018-01-03T21:57:31","Actor":"javiercn","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8322","RelatedDescription":"Opened issue \"Issue installing tools using a custom feed\" (#8322) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```\r\ndotnet install tool dotnet-dev-certs --configfile ./nuget.config\r\n```\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <add key=\"aspnet-dev\" value=\"https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\" />\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n </packageSources>\r\n</configuration>\r\n```\r\n## Expected  behavior\r\nThe tool gets intalled\r\n\r\n## Actual behavior\r\nInstall fails due to a restore failure.\r\n\r\n```\r\nInstall failed. Failed to download package:\r\nNuGet returned:\r\n\r\nFailed to restore package. \r\nWorkingDirectory: \r\nArguments: restore /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj --configfile /Users/jacalvar/work/nuget.config --runtime osx.10.13-x64 /p:BaseIntermediateOutputPath=\\\"/Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl\\\"\r\nOutput:   Restoring packages for /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj...\r\n/var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj : error NU1100: Unable to resolve 'dotnet-dev-certs ' for '.NETCoreApp,Version=v2.1'.\r\n/var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj : error NU1100: Unable to resolve 'dotnet-dev-certs ' for '.NETCoreApp,Version=v2.1/osx.10.13-x64'.\r\n  Generating MSBuild file /Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl/piuqzyde.eyk.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl/piuqzyde.eyk.csproj.nuget.g.targets.\r\n  Restore failed in 70.2 ms for /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj.\r\n```\r\n## Environment data\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007796)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007796\r\n Commit SHA-1 hash:  3ac579997c\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /Users/jacalvar/.dotnet/sdk/2.2.0-preview1-007796/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26016-05\r\n  Build    : aa54e8822fa635a865bc63e1132628c6d8d5d00a\r\n\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7053824137","Type":"IssuesEvent","CreatedAt":"2018-01-03T21:24:17","Actor":"dougwittner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8321","RelatedDescription":"Opened issue \"dotnet publish and the ASPNETCORE_ENVIRONMENT \" (#8321) at dotnet/cli","RelatedBody":"I bet this has been covered but I am stumped as to what the best way to publish to multiple environments. It appears I can update ASPNETCORE_ENVIRONMENT  in the web.config which is the best solution for me, not requiring server env changes or requirements. But there is not transformation support. IS there another best practice way to do this?\r\n\r\nI have multiple build configurations and publish configurations... and 1 profile per environment which works great locally. \r\n\r\n\r\n## Steps to reproduce\r\ndotnet publish \r\n\r\n## Expected  behavior\r\nexpecting the web.config to transform the ASPNETCORE_ENVIRONMENT\r\n\r\n## Actual behavior\r\ndotnet publish recreated the web.config \r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7053617875","Type":"IssuesEvent","CreatedAt":"2018-01-03T20:29:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8307","RelatedDescription":"Closed issue \"dotnet build resx error\" (#8307) at dotnet/cli","RelatedBody":"When building a project from the command line on OSX using the dotnet build tools I get this error:\r\n\r\n`error MSB3103: Invalid Resx file. Length cannot be less than zero.`\r\n\r\nThe resx files are not empty and they do work when building on Visual Studio 2017 on Windows. I can also build on Mac using Mono version of MSBuild without errors, but then the resources doesn't get build.\r\n\r\n## Expected  behavior\r\nSuccessful build and compiled resources.\r\n\r\n## Actual behavior\r\nError MSB3103: Invalid Resx file.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.4\r\n  Build    : 7f262f453d8c8479b9af91d34c013b3aa05bc1ff\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7054495904","Type":"PullRequestEvent","CreatedAt":"2018-01-04T01:09:14","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/617","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02403-01 (master)\" (#617) at dotnet/standard","RelatedBody":""},{"Id":"7054119223","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:46:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/617","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02403-01 (master)\" (#617) at dotnet/standard","RelatedBody":""},{"Id":"7053032329","Type":"IssuesEvent","CreatedAt":"2018-01-03T18:01:03","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/605","RelatedDescription":"Closed issue \"NETStandard 2.0 Project Template not working properly.\" (#605) at dotnet/standard","RelatedBody":"I've an issue when creating project template in VS 2017 15.5.1 version.\r\n\r\nWhen i create a project template and use it to create a project. There is no file existed in there regarding my project templates have many files.\r\n\r\nSteps to re-produce the bug:\r\n- Create a NETStandard2 class library in VS 2017.\r\n- Create multiple files in there.\r\n- Export Template for that projects.\r\n- Copy that template into: C:\\Users\\{Username}\\Documents\\Visual Studio 2017\\Templates\\ProjectTemplates \r\n- Create a project base on that template.\r\n\r\nAnyone have any idea for this one?"},{"Id":"7053021857","Type":"IssuesEvent","CreatedAt":"2018-01-03T17:58:34","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/613","RelatedDescription":"Closed issue \"Issue with referencing a .NET Standard 2.0 project with an classic ASP.NET project targeting .NET Framework 4.6.1\" (#613) at dotnet/standard","RelatedBody":"I refer to my original issue submitted to Autofac [here](https://github.com/autofac/Autofac.WebApi/issues/32). I originally thought it was an Autofac issue but turns out it is not as I can reproduce it without Autofac.\r\n\r\n# Summary\r\n`MissingMethodException` is thrown when resolving for a component through a delegate that returns a type defined in a .NET Standard 2.0 library, under the context of an classic ASP.NET Web API project.\r\n\r\n# Environment\r\n- Windows 10 (Version 10.0.16299)\r\n- Visual Studio 2017 15.5.2\r\n- .NET Core SDK 2.1.3 (64-bit) installed\r\n\r\n# Steps to reproduce\r\n1. Create two projects as follows\r\n    - A .NET Standard 2.0 library\r\n    - A classic ASP.NET Web API project targeting .NET Framework 4.6.1\r\n2. Define an interface and an implementing class pair in the .NET standard library as follows:\r\n```c#\r\npublic interface IFoo { void DoSomething(); }\r\n\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo(HttpClient httpClient) => _httpClient = httpClient;\r\n\r\n    public void DoSomething() { /* No-op */ }\r\n}\r\n```\r\n3. Reference the .NET Standard library from the ASP.NET Web API project\r\n4. Implement a dummy controller that initialises the `IFoo` private field\r\n\r\n\r\n```c#\r\npublic class DummyController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public DummyController() => _foo = new Foo(new HttpClient);\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n\r\nNote that I have a parameterless contructor for `DummyController`.\r\n\r\n5. Run the ASP.NET Web API application and visit `/api/dummy/test`.\r\n\r\n# Expected behaviour\r\n`\"a\"` is returned.\r\n\r\n# Actual behaviour\r\n`InvalidOpeartionException` is thrown with the inner exception `MissingMethodException`.\r\n\r\nStack trace:\r\n<pre>\r\nAn error has occurred.An error occurred when trying to create a controller of type 'DummyController'. Make sure that the controller has a parameterless public constructor.System.InvalidOperationException   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n   at System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(HttpRequestMessage request)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()An error has occurred.Method not found: 'Void AutofacNetStandara.Library.Foo..ctor(System.Net.Http.HttpClient)'.System.MissingMethodException   at AutofacNetStandard.Web.Controllers.DummyController..ctor()\r\n   at lambda_method(Closure )\r\n   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n</pre>\r\n---------\r\n# Additional things I have tried\r\n\r\n## Reference the same .NET Standard project from a .NET Framework 4.6.1 **Console** project, with the `Main` method initailizing `Foo`:\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var foo = new Foo(new HttpClient());\r\n\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\nNo runtime exceptions are thrown and `foo` variable is initialised correctly.\r\n\r\n## Moving the initialisation of `Foo._httpClient` to the default constructor of `Foo` and call the empty constructor from the web project instead, like:\r\n```c#\r\n// In the .NET Standard 2.0 library\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo() => _httpClient = new HttpClient();\r\n\r\n    public void DoSomething() { }\r\n}\r\n\r\n// In the ASP.NET project, targeting .NET 4.6.1\r\npublic class ValuesController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public ValuesController() => _foo = new Foo();\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n`\"a\"` is returned as expected when visiting the route `/api/values/test`.\r\n"},{"Id":"7052970315","Type":"PullRequestEvent","CreatedAt":"2018-01-03T17:45:56","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/610","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02402-04 (master)\" (#610) at dotnet/standard","RelatedBody":""},{"Id":"7048275369","Type":"IssuesEvent","CreatedAt":"2018-01-02T16:59:29","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/598","RelatedDescription":"Closed issue \"SslStream.ShutdownAsync available?\" (#598) at dotnet/standard","RelatedBody":"In .NET Core, we can use SslStream.ShutdownAsync to properly shut down an SSL stream. But this API is not present in .NET Standard. Will this API be added to .NET Standard? Or how can we correctly shutdown an SSL stream?"},{"Id":"7046686948","Type":"IssuesEvent","CreatedAt":"2018-01-02T09:29:25","Actor":"srungta","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/616","RelatedDescription":"Opened issue \"Different implementations for different frameworks\" (#616) at dotnet/standard","RelatedBody":"I have a .NetStandard2.0 class library that has the following setup.\r\n\r\nInterface: \r\n`IConfigProvider`\r\n\r\nImplementations:\r\n`NetCoreConfigProvider` -to be used in  .net core 2 apps\r\n`NetFrameworkConfigProvider` - intends to target .net framework 4.6.1\r\n\r\nIn my `.csproj` file i have specified \r\n`<TargetFrameworks>netstandard2.0;net461</TargetFrameworks>`\r\n\r\n`NetCoreConfigProvider` uses packages which is not `4.6.1` compatible.\r\n\r\nMy initial `.csproj` file looked like \r\n\r\n`   <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.AzureKeyVault\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Azure.KeyVault\" Version=\"2.3.2\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Clients.ActiveDirectory\" Version=\"3.17.3\" />\r\n    <PackageReference Include=\"System.Configuration.ConfigurationManager\" Version=\"4.4.1\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.3\" />\r\n     </ItemGroup>`\r\n\r\nI changed this to \r\n`<ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.AzureKeyVault\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Azure.KeyVault\" Version=\"2.3.2\" />\r\n    <PackageReference Include=\"Microsoft.IdentityModel.Clients.ActiveDirectory\" Version=\"3.17.3\" />\r\n    <PackageReference Include=\"System.Configuration.ConfigurationManager\" Version=\"4.4.1\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.3\" />\r\n  </ItemGroup>`\r\n\r\nand added macros like `#if NETSTANDARD2_0` in my `NetCoreConfigProvider`\r\n\r\nIs there a better way to set up the project than this?\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7054997575","Type":"IssuesEvent","CreatedAt":"2018-01-04T05:12:11","Actor":"eyalsk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26148","RelatedDescription":"Opened issue \"A question about PipeOptions.Asynchronous and async/await\" (#26148) at dotnet/corefx","RelatedBody":"I'm not sure but it seems like `PipeOptions.Asynchronous` should only be used with the old async APIs Begin* and End* pair, is this correct? because from my tests using an example I wrote for an issue I had at [SO ](https://stackoverflow.com/questions/48059410/using-namedpipeserverstream-and-namedpipeclientstream-asynchronously/48074144#48074144) (at the bottom of the page) it hangs if it isn't set to `PipeOptions.None` but otherwise it certainly possible that I'm doing something wrong. "},{"Id":"7054847859","Type":"PullRequestEvent","CreatedAt":"2018-01-04T03:50:37","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26138","RelatedDescription":"Merged pull request \"Update BuildTools, CoreSetup to prerelease-02403-01, preview1-26103-03, respectively (master)\" (#26138) at dotnet/corefx","RelatedBody":""},{"Id":"7054707417","Type":"PullRequestEvent","CreatedAt":"2018-01-04T02:43:58","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26137","RelatedDescription":"Merged pull request \"WMI: PNSE requesting .NET Fx update if native dll too old\" (#26137) at dotnet/corefx","RelatedBody":"Fixes #26081 - not actually \"fixing\" it but rather giving a better error message. We don't want to try to work without the two functions for 2 reasons:\r\n* Limited test coverage from CI since we don't run against any Fx with this issue\r\n* The original issue is actually related to an exploit so better not to have to deal with it at all\r\n\r\n\r\n\r\n"},{"Id":"7054707409","Type":"IssuesEvent","CreatedAt":"2018-01-04T02:43:58","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26081","RelatedDescription":"Closed issue \"System.Management not initializing on some Server SKUs\" (#26081) at dotnet/corefx","RelatedBody":"Copied from https://github.com/dotnet/corefx/pull/24719\r\n\r\n@jianxuanbing commented on Nov 16\r\nHello,I have a questin.I use examples\r\n```\r\nManagementClass diskClass = new ManagementClass(\"Win32_LogicalDisk\");\r\ndiskClass.Get();\r\nOutput.WriteLine(\"Logical Disk class has \" + diskClass.Properties.Count + \" properties\");\r\nbut is not ok,throw exception\r\n\r\nSystem.TypeInitializationException : The type initializer for 'System.Management.WmiNetUtilsHelper' threw an exception.\r\n---- System.NullReferenceException : Object reference not set to an instance of an object.\r\n   at System.Management.MTAHelper.IsNoContextMTA()\r\n   at System.Management.MTAHelper.CreateInMTA(Type type)\r\n   at System.Management.ManagementPath.CreateWbemPath(String path)\r\n   at System.Management.ManagementClass..ctor(String path)\r\n```\r\n @pjanotti\r\n     Member\r\npjanotti commented on Nov 16\r\nHi, thanks for reporting it. I can't repro the issue. Please, provide the details and a small repro - feel free to open a separate issue with those details.\r\n\r\nNotice that System.Management namespace is intended for legacy code only.\r\n\r\n @jianxuanbing\r\n     \r\njianxuanbing commented on Nov 16\r\nHi,I changed the compter,the result is normal.\r\nI will try again.\r\n\r\n @jianxuanbing\r\n     \r\njianxuanbing commented on Nov 19\r\nI use the same code. But at home when the computer tests is throw Exception.\r\nBut at company when the computer tests is ok.\r\n```\r\n        public static string GetName()\r\n        {\r\n            using (ManagementClass mc = new ManagementClass(WmiPathConst.Processor))\r\n            {\r\n                ManagementObjectCollection moc = mc.GetInstances();\r\n                return moc.OfType<ManagementObject>()\r\n                    .Select(mo => mo[ManagementObjectConst.Name].ToString())\r\n                    .FirstOrDefault();\r\n            }\r\n        }\r\n```\r\n\r\n @STRATZ-Ken\r\n     \r\nSTRATZ-Ken commented 5 days ago •  edited \r\nSame issue as @jianxuanbing except I am trying for the NetworkAdapaters.\r\n\r\nI am running it on Windows 2012 R2 in a Hyper-V VM in 64 Bit. If any of this helps.\r\n\r\n @wspait\r\n     \r\nwspait commented a day ago\r\nWe are also having the same issue as @jianxuanbing. We are using version 4.5.0-preview1-25914-04. This code works fine locally (Windows 10), but not when run from a clean Server 2012 R2 or Server 2016 Windows image.\r\n```\r\nstatic void Main(string[] args)\r\n {\r\n        try\r\n        {\r\n            Console.WriteLine(\"Calling System.Management code\");\r\n            ManagementObjectSearcher searcher = new ManagementObjectSearcher(@\"root\\CIMV2\", \"SELECT * FROM Win32_SystemEnclosure\");\r\n            Console.WriteLine(\"Application complete\");\r\n        }\r\n        catch(Exception ex)\r\n        {\r\n            Console.WriteLine(ex);\r\n        }     \r\n}\r\n```\r\nThis is the output:\r\n```\r\nCalling System.Management code\r\nSystem.TypeInitializationException: The type initializer for 'System.Management.\r\nWmiNetUtilsHelper' threw an exception. ---> System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Management.WmiNetUtilsHelper..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.MTAHelper.IsNoContextMTA()\r\n   at System.Management.MTAHelper.CreateInMTA(Type type)\r\n   at System.Management.ManagementPath.CreateWbemPath(String path)\r\n   at System.Management.ManagementObjectSearcher..ctor(String scope, String queryString)\r\n   at WmiNetUtilsHelperTest.Program.Main(String[] args)\r\n```\r\n @danmosemsft\r\n     Member\r\ndanmosemsft commented 20 hours ago\r\n@wspait the S.Management package requires a native binary that is included in the full.NET Framework 4.x. The error message could be clearer (please open a new issue). Meanwhile please add 4.x to your images.\r\n\r\n @STRATZ-Ken\r\n     \r\nSTRATZ-Ken commented 10 hours ago\r\n@danmosemsft All of my machines have .Net 4.6.1 installed as that is what I use to run my program on. So it should have that dependency. I cant seem to make the error bigger either, myself.\r\n\r\n @danmosemsft\r\n     Member\r\ndanmosemsft commented 3 hours ago\r\nLooks like if .NET 4.x is not found it would have bailed out cleanly. It gets further. It could be here:\r\n```\r\n                procAddr = Interop.Kernel32.GetProcAddress(loadLibrary, \"Initialize\");\r\n                if( procAddr != IntPtr.Zero)\r\n                {\r\n                    Initialize_f  =(Initialize) Marshal.GetDelegateForFunctionPointer(procAddr, typeof(Initialize));\r\n                }\r\n\r\n        Initialize_f(CompatSwitches.AllowIManagementObjectQI);\r\n```\r\nThe Initialize_f call is accidentally outside of the braces.\r\n\r\nAlthough I would expect problems after this point anyway -- if the LL/GPA is failing.\r\n\r\n @danmosemsft\r\n     Member\r\ndanmosemsft commented a minute ago\r\nI set up a Server 2012 R2 machine (which has 4.7:2117.0 which I think is 4.7.1) and your code works fine.\r\n\r\n@STRATZ-Ken @wspait are either of you willing to debug? Symbols and sources should be available. The code to put a breakpoint on is the static constructor of WmiNetUtilsHelper."},{"Id":"7054650706","Type":"PullRequestEvent","CreatedAt":"2018-01-04T02:18:21","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26147","RelatedDescription":"Opened pull request \"[Port 2.0] Enable ECDH cipher suites as preferred cipher for key agreement.\" (#26147) at dotnet/corefx","RelatedBody":"fixes #24648 \r\n\r\nMaster PR: #25985 \r\n\r\ncc @bartonjs @morganbr @karelz "},{"Id":"7054631321","Type":"PullRequestEvent","CreatedAt":"2018-01-04T02:09:42","Actor":"Priya91","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/25985","RelatedDescription":"Merged pull request \"Enable ECDH cipher suites as preferred cipher for key agreement.\" (#25985) at dotnet/corefx","RelatedBody":"cc @bartonjs Do you know of any test servers for TLS that has tools to see which cipher was chosen during handshake for validating this change? \r\n\r\n@morganbr How did you find this bug, if you used some test app, can you share it?\r\n\r\naddresses #24648 \r\n\r\ncc @karelz Should a separate issue be opened for tracking to port this to 2.0?"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7054908754","Type":"IssuesEvent","CreatedAt":"2018-01-04T04:23:08","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24036","RelatedDescription":"Opened issue \"\"keyword\"\" (#24036) at dotnet/roslyn","RelatedBody":"Thats all the exception tells me. \n\nWhy?\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/52762/keyword.html\nVSTS ticketId: 431114_\n_These are the original issue comments:_\n\nMatthew Gertz on 5/8/2017, 08:33 AM (240 days ago): <p>Thank you for your feedback! For us to investigate this further, could you please provide us with the repro steps that caused this \"keyword\" error to appear? We look forward to hearing from you!</p>\n\nAndrew Stanton on 5/23/2017, 03:36 AM (225 days ago): <p>I did, but the feedback tool ate the attachment.  It looked like one of the generated and marginally useful Roslyn  `throw new ArgumentNullException(nameof(keyword))`-like statements</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054821242","Type":"IssuesEvent","CreatedAt":"2018-01-04T03:37:39","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23126","RelatedDescription":"Closed issue \"VB incomplete assignment gets parsed and compiled successfully\" (#23126) at dotnet/roslyn","RelatedBody":"Using VB .Net 2017\n\nThe lines does not produce any errors:\n\n        dim tl_x, br_x as integer\n        dim tl_y, br_y as integer\n        ' top-left\n        tl_x =  tvCfgCon.Location.X + tvCfgCon.Size.Width   + 5\n        tl_y = pnlHeader.Location.Y + pnlHeader.Size.Height + 5\n        ' bottom-right\n        br_x = pnlBottom.location.X + ' second addend is missed!\n        br_y = pnlBottom.location.Y\n\nThe second addend is missed in the 7th line ( the line with the br_x assignment ), but the compiler does not produce any error!\nThe last line is interpreted as a CONDITION : it is evaluated and the result (BOOLEAN VALUE) is added to pnlBottom.location.X!!\nSo the first parser failure is: the second addend is missed but it has not been checked.\nSecond parser failure: WITHOUT any continuation character the expression parser has continued on the next line: if You remove the last line, the compiler generates (correctly) an error.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/100766/expression-parser-fails.html\nVSTS ticketId: 484645_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054775288","Type":"IssuesEvent","CreatedAt":"2018-01-04T03:15:35","Actor":"yaakov-h","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24035","RelatedDescription":"Opened issue \"Visual Studio Code-Fix for generating GetHashCore results in OverflowException in checked assembly\" (#24035) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.5.2\r\n\r\n**Steps to Reproduce**:\r\n1. Create a new project with \"Check for arithmetic overflow/underflow\" enabled in the project Build settings\r\n2. Add the following class:\r\n\r\n```cs\r\nclass Foo\r\n{\r\n    object bar;\r\n    string baz;\r\n}\r\n```\r\n3. Place the cursor immediately after `Foo`\r\n. Press Ctrl+. (period)\r\n5. Select \"Generate Equals and GetHashCode()...\"\r\n6. Create a new `Foo` object and call `GetHashCode()`\r\n\r\nFull code:\r\n\r\n```cs\r\nusing System.Collections.Generic;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            new Foo().GetHashCode();\r\n        }\r\n    }\r\n\r\n    class Foo\r\n    {\r\n        object bar;\r\n        string baz;\r\n\r\n        public override bool Equals(object obj)\r\n        {\r\n            var foo = obj as Foo;\r\n            return foo != null &&\r\n                   EqualityComparer<object>.Default.Equals(bar, foo.bar) &&\r\n                   baz == foo.baz;\r\n        }\r\n\r\n        public override int GetHashCode()\r\n        {\r\n            var hashCode = -1438245972;\r\n            hashCode = hashCode * -1521134295 + EqualityComparer<object>.Default.GetHashCode(bar);\r\n            hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(baz);\r\n            return hashCode;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nThe compiled program exits with code 0, printing no output.\r\n\r\n**Actual Behavior**:\r\n\r\nThe compiled program crashes with a `System.OverflowException`:\r\n\r\n```\r\nSystem.OverflowException\r\n  HResult=0x80131516\r\n  Message=Arithmetic operation resulted in an overflow.\r\n  Source=ConsoleApp1\r\n  StackTrace:\r\n   at ConsoleApp1.Foo.GetHashCode() in C:\\temp\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 29\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\temp\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 9\r\n```\r\n\r\nI expect that the IDE code-fix should wrap the method body in an `unchecked` block when the assembly is checked."},{"Id":"7054771697","Type":"IssuesEvent","CreatedAt":"2018-01-04T03:13:50","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24034","RelatedDescription":"Opened issue \"\"Use explicit type instead of 'var'\" should opt for adding a \"using\" instead of fully qualifying\" (#24034) at dotnet/roslyn","RelatedBody":"Use explicit type will fully qualify a type if there is not already a using in scope. This is annoying if you never want a fully qualified type.\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/34548978-57cac930-f159-11e7-863b-f61b9203fc46.png)\r\n\r\nThis in contrast to the spell checker, which does opt for a using vs fully qualifying:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/34548999-756fdf66-f159-11e7-94c0-39950936b657.png)"},{"Id":"7054700225","Type":"IssuesEvent","CreatedAt":"2018-01-04T02:40:40","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24033","RelatedDescription":"Opened issue \"Extract Method give inconsistents results\" (#24033) at dotnet/roslyn","RelatedBody":"Extract Method give inconsistents results when a local function is within extracted code (used or described)\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/148551/extract-method-give-inconsistents-results.html\nVSTS ticketId: 523482_\n_These are the original issue comments:_\n\nJinu Joseph [MSFT] on ‎11‎/‎13‎/‎2017, 01:34 AM (51 days ago): <p>Thanks for pointing out the difference , opening this back for consideration.</p><p>Thanks for the feedback.</p>\n\n_These are the original issue solutions:_\n\nJinu Joseph [MSFT] solved on ‎11‎/‎13‎/‎2017, 00:37 AM (51 days ago), 0 votes: <p>Thank you for your feedback! This issue appears to be similar  to <a target='_blank' href=\"https://github.com/dotnet/roslyn/issues/22550\">https://github.com/dotnet/roslyn/issues/22550</a>  We recommend that you follow the reported issue for updates and fix notifications, also feel free to add your specific example in there</p>\n\n\nChristophe MOMMER on ‎11‎/‎13‎/‎2017, 01:28 AM (51 days ago): \n<p>From my perspective, it seems not be the same issue. I've posted a video attached to this ticket to demonstrate my issue but here's some code :</p>class Program \\{ static void Main(string[] args) \\{ var list = new List&lt;LittleObject&gt;(); list.Add(new LittleObject \\{ AValue = &quot;a&quot; });\n \n<pre><code>        var firstA = list.FirstOrDefault(o =&amp;gt; o.AValue == &quot;a&quot;);\n        if(firstA != null)\n        \\{\n\n     //Extract from here \n            bool areEquals(LittleObject a, LittleObject b)\n            \\{\n                return a.AValue == b.AValue;\n            };\n \n            var secondA = list.FirstOrDefault(o =&amp;gt; areEquals(o, firstA));\n\n     //To here\n        }\n \n    }\n</code></pre> \n<p> }</p> \n<p> class LittleObject \\{ public string AValue \\{ get; set; } }</p>\n<p>When I try to extract what is within the if statement, I get an inconsistent extraction proposed by visual studio (neither list of FirstA are passed as parameters to the new method, which brokes compilation).</p>\n<p>Also, please note that it DOES BREAK the compilation (whereas Github issue mention that compilation is not broken). And finally, the roslyn team added the &quot;area-IDE&quot;, which seems to mean that is a visual studio issue instead of roslyn.</p>\n<p>Please note I added my example to the Github thread for more informations to roslyn team.</p> \n"},{"Id":"7054623191","Type":"IssuesEvent","CreatedAt":"2018-01-04T02:06:10","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24032","RelatedDescription":"Opened issue \"Hard to see cursor when using in-place rename refactoring\" (#24032) at dotnet/roslyn","RelatedBody":"I use dark VS theme (don't know if its relevant)\nI press Ctrl+R, Ctrl+R on identifier to start Rename refactoring.\nText cursor vanishes.\nIt is super annoying because I don't understand what will happen when I press something. It returns after finishing Rename\n\nhttps://s.mail.ru/4u6Z/MoifoRM1f\n\nCan you do something about it? It should be easy fix (I hope) and it will dramatically improve my daily usage of VS\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/153970/hard-to-see-cursor-when-using-in-place-rename-refa.html\nVSTS ticketId: 527771_\n_These are the original issue comments:_\n\nJinu Joseph [MSFT] on ‎12‎/‎3‎/‎2017, 04:27 AM (31 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054621462","Type":"IssuesEvent","CreatedAt":"2018-01-04T02:05:21","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24031","RelatedDescription":"Opened issue \"VS2017express C#, tabs replaced with spaces\" (#24031) at dotnet/roslyn","RelatedBody":"Hello,\n\nunder the following circumstances, VS2017express replaces tabs with spaces even though I deactivated that feature in the options:\n- I am working on a C# file\n- I am pasting a tab from my clipboard into a line of code, but not at the end, e.g. &quot;int i = 0; // init i&quot;. If I want more space between the command and the comment and I use my tab key, then tabs get inserted properly, but if I put a tab into my clipboard and insert it with Ctrl-V, then ALL tabs get replaced with spaces.\n\nThis problem does not occur in C++ files of the same solution, even though I set the tab configuration identical for all languages.\n\nCheers\nPeter\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/154651/vs2017express-c-tabs-replaced-with-spaces.html\nVSTS ticketId: 528589_\n_These are the original issue comments:_\n\nPeter Meier on ‎11‎/‎23‎/‎2017, 02:27 AM (41 days ago): <p>Also I just found out that if I hit the auto format keys (Ctrl-K, Ctrl-D), all the tabs I inserted between the command and the comment are replaced with spaces again. I searched through Tools/Options/Text Editor/C#/Code Style/Formatting, but I found no way to change this annoying behavior. I don't understand why C# won't let me align my comments the way I want them to be when it's no problem for C++.</p>\n\nJinu Joseph [MSFT] on ‎12‎/‎20‎/‎2017, 02:48 AM (14 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054608843","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:59:48","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24030","RelatedDescription":"Opened issue \"Options ... Naming Style dialog unusable with Dark theme\" (#24030) at dotnet/roslyn","RelatedBody":"When VS is configured to use Dark theme, &quot;Naming Style&quot; dialog is unusable - text is white on light background (yet input boxes have dark background), see screenshot attached.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/155718/options-naming-style-dialog-unusable-with-dark-the.html\nVSTS ticketId: 529630_\n_These are the original issue comments:_\n\nJinu Joseph [MSFT] on ‎12‎/‎3‎/‎2017, 04:48 AM (31 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054601087","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:56:15","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24029","RelatedDescription":"Opened issue \"Line break options ignored in C# editor\" (#24029) at dotnet/roslyn","RelatedBody":"I just noticed that the C# editor is formatting my code with line breaks after curly braces, contrary to my Text Editor/C#/Code Style/Formatting/New Line options settings. This is *extremely* annoying. Appreciate a bug fix ASAP.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/155722/line-break-options-ignored-in-c-editor.html\nVSTS ticketId: 529634_\n_These are the original issue comments:_\n\nJinu Joseph [MSFT] on ‎11‎/‎27‎/‎2017, 03:40 AM (37 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7054592843","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:52:25","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24028","RelatedDescription":"Opened issue \"One missing closing bracket creates dozens of errors\" (#24028) at dotnet/roslyn","RelatedBody":"Say I type the following:\n\nMessageBox.Show(&quot;test\n\nNow a huge list of errors will appear in the error list and all code below the above line is marked in red.\n\nOf course, the closing bracket is still missing, but that should only create one error in the list, not dozens, and dozens of wavy red underlines. \n\nHowever, on my PC all code below the above line is marked in red and most of the code (but not all) has wavy red lines underneath.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/157014/one-missing-closing-bracket-creates-dozens-of-erro.html\nVSTS ticketId: 530270_\n_These are the original issue comments:_\n\nAgustin Paroli on ‎11‎/‎28‎/‎2017, 02:57 PM (36 days ago): <p>When you forget to put a parenthesis (and also a quote, as in your example), the compiler interprets all the code that follows it as if it should be inside the parenthesis, and as what you put inside the parentheses is not valid in that method / object, many errors will be shown depending on the code that continues it. </p><p>It is not a bug, it is the normal and expected behavior of the IDE.</p>\n\nMarc Enzler on ‎11‎/‎29‎/‎2017, 02:17 AM (35 days ago): <p>Dear Augustin,</p><p>Thank you for your reply. </p><p>I need to clarifiy: it is not the missing closing bracket that causes the errors but the missing closing quote.</p><p>If I type: </p><p>MessageBox.Show(\"</p><p>the moment I enter the quote dozens of errors appear in the error list and everything below this line gets red. It is very confusing and distracts me massively. After all, I am still typing so it's obvious the statement is uncomplete.</p><p>Please note that I am using Visual Basic, not Java, and in Visual Basic semantics only this one line contains an error, all other lines are perfectly sound.</p><p>I have now checked with my VS2012 installation which I have been using until a few weeks ago, and there the behavior is differently and as I would expect, no error is show as long as I do not move the focus away from the incomplete line and when I do only one error is shown indicating there is something missing on that line.</p><p>If this is not a bug, where might I change this behavior of the error list? It is extremely annoying.</p><p>Thanks!<br></p>\n\nJinu Joseph [MSFT] on ‎12‎/‎3‎/‎2017, 05:02 AM (31 days ago): <p>We appreciate you taking the time to report this problem. We are currently prioritizing problems that are impacting a broad set of our customers, so we may not be able to investigate this one immediately. We know this problem is important to you, so we will continue to monitor it.</p>\n\n_These are the original issue solutions:_\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7054933007","Type":"PullRequestEvent","CreatedAt":"2018-01-04T04:36:28","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5196","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5196) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7054807509","Type":"IssuesEvent","CreatedAt":"2018-01-04T03:31:02","Actor":"tonerdo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5195","RelatedDescription":"Opened issue \"Native static library should be entirely self contained\" (#5195) at dotnet/corert","RelatedBody":"Currently a static library (Windows `.lib`, Unix `.a`) built with CoreRT only contains the user's own (exported) code. A developer is still required to link that static library with the runtime libs for all symbols to be resolved. It is preferable for the CoreRT built native static library to include the runtime (and anything else it needs) so there's no extra linking step, except with the developer's own code.\r\n\r\nParent issue: #1285 "},{"Id":"7054020058","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:16:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5194","RelatedDescription":"Merged pull request \"Put the WebApi sample RD.XML on a diet\" (#5194) at dotnet/corert","RelatedBody":"These were leftovers from when we didn't have a type loader. I confirmed the app still works with these lines removed."},{"Id":"7054018736","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:16:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5193","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5193) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7053486952","Type":"PullRequestEvent","CreatedAt":"2018-01-03T19:55:48","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5194","RelatedDescription":"Opened pull request \"Put the WebApi sample RD.XML on a diet\" (#5194) at dotnet/corert","RelatedBody":"These were leftovers from when we didn't have a type loader. I confirmed the app still works with these lines removed."},{"Id":"7053316006","Type":"PullRequestEvent","CreatedAt":"2018-01-03T19:13:08","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5140","RelatedDescription":"Merged pull request \"Add sample app and guide\" (#5140) at dotnet/corert","RelatedBody":"Add a sample app to demonstrate use of the ILCompiler NuGet package now that we publish it for all target runtimes. \r\nThis doesn't work under non-Windows platforms - we don't yet statically link to CoreFX libraries (with the exception of System.Native). When we do, this can be merged.\r\n"},{"Id":"7053229378","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:51:14","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5192","RelatedDescription":"Merged pull request \"Remove unused exclude\" (#5192) at dotnet/corert","RelatedBody":"The exclude is unnecessary - the element adds a specific file"},{"Id":"7053208184","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:45:59","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5193","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5193) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7054748329","Type":"IssuesEvent","CreatedAt":"2018-01-04T03:02:48","Actor":"dasMulli","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1375","RelatedDescription":"Closed issue \"$(DefaultItemExcludes) in targets contains double slashes\" (#1375) at dotnet/sdk","RelatedBody":"I just stumbled on some weird behaviour trying to add generated compile files in a target:\r\n\r\non macOS, having only a `Program.cs.template` file as an example (remove `Program.cs` after each build) and a leftover assembly info file in a RID specific path in `obj/` from a previous RID-specific publish:\r\n\r\n```xml\r\n  <Target Name=\"GenerateSomeFiles\" BeforeTargets=\"BeforeBuild\">\r\n    <Exec Command=\"cp Program.cs.template Program.cs\" />\r\n    <Message Importance=\"high\" Text=\"DefaultItemExcludes: $(DefaultItemExcludes)\" />\r\n    <Message Importance=\"high\" Text=\"Exclude: $(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Compile)\" />\r\n    <ItemGroup>\r\n      <Compile Include=\"**/*$(DefaultLanguageSourceExtension)\"\r\n               Exclude=\"$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Compile)\" />\r\n    </ItemGroup>\r\n    <Message Importance=\"high\" Text=\"Compile: @(Compile)\" />\r\n  </Target>\r\n```\r\n\r\nprints:\r\n\r\n```\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 15.3.388.41745 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  DefaultItemExcludes: ;bin/Debug//**;obj/Debug//**;bin//**;obj//**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;packages/**\r\n  Exclude: ;bin/Debug//**;obj/Debug//**;bin//**;obj//**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;packages/**;;**/.*/**;\r\n  Compile: obj/Debug/netcoreapp2.0/osx.10.12-x64/dasmulli.sample.application.AssemblyInfo.cs;obj/Debug/netcoreapp2.0/osx.10.12-x64/sampleapp.AssemblyInfo.cs;obj/Debug/netcoreapp2.0/sampleapp.AssemblyInfo.cs;Program.cs\r\n```\r\n\r\nand then fails because an old assembly info file was included in `@(Compile)` (might as well have been from switching between Debug and Release configurations).\r\n\r\nThe interesting part here is that these parts have double slashes in them:\r\n```\r\nbin/Debug//**;obj/Debug//**;bin//**;obj//**\r\n```\r\n\r\nwhich seem to originate from [being defined like `$(BaseIntermediateOutputPath)/**`](https://github.com/dotnet/sdk/blob/30baeae0a60f26214ffad743ddbbe4851375b4a2/src/Tasks/Microsoft.NET.Build.Tasks/build/Microsoft.NET.Sdk.DefaultItems.targets#L29-L32).\r\n\r\nIf I add `$(BaseIntermediateOutputPath)**;$(BaseOutputPath)**` to the `Exclude` attribute, the directories are excluded as expected.\r\n\r\nHowever, I'd expect `$(DefaultItemExcludes)` to give me a safe value in all targets because the SDK should know which directories should be excluded and not require target authors to fix missing directories that only work during static evaluation. Is there anything that could be done to avoid this problem?\r\n\r\ncc @dsplaisted "},{"Id":"7054399074","Type":"PullRequestEvent","CreatedAt":"2018-01-04T00:28:27","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1840","RelatedDescription":"Merged pull request \"Updating repo-toolset to 1.0.0-beta-62503-02 \" (#1840) at dotnet/sdk","RelatedBody":"This fast tracks the change from release/2.1"},{"Id":"7054043256","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:23:34","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1840","RelatedDescription":"Opened pull request \"Updating repo-toolset to 1.0.0-beta-62503-02 \" (#1840) at dotnet/sdk","RelatedBody":"This fast tracks the change from release/2.1"},{"Id":"7054036888","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:21:40","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1839","RelatedDescription":"Merged pull request \"Updating repo-toolset to 1.0.0-beta-62503-02 \" (#1839) at dotnet/sdk","RelatedBody":"Fast tracking the change to release/2.1 from release/2.0.0"},{"Id":"7053785944","Type":"PullRequestEvent","CreatedAt":"2018-01-03T21:14:25","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1839","RelatedDescription":"Opened pull request \"Updating repo-toolset to 1.0.0-beta-62503-02 \" (#1839) at dotnet/sdk","RelatedBody":"Fast tracking the change to release/2.1 from release/2.0.0"},{"Id":"7053627111","Type":"PullRequestEvent","CreatedAt":"2018-01-03T20:32:16","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1838","RelatedDescription":"Merged pull request \"Updating repo-toolset to 1.0.0-beta-62503-02\" (#1838) at dotnet/sdk","RelatedBody":""},{"Id":"7052828536","Type":"PullRequestEvent","CreatedAt":"2018-01-03T17:12:21","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1838","RelatedDescription":"Opened pull request \"Updating repo-toolset to 1.0.0-beta-62503-02\" (#1838) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"943234846079496192","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/Xm2utapspg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null},{"Id":"942039735144452097","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/UjBOoFqFp5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":18,"RawContent":null},{"Id":"941295101212549121","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/qJHWFDaUGf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2018-01-04T05:30:20.7724297Z","RunDurationInMilliseconds":7708}