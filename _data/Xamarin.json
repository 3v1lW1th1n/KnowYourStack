{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7867613040","Type":"IssuesEvent","CreatedAt":"2018-06-23T11:03:41","Actor":"yinyue200","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1879","RelatedDescription":"Opened issue \"error CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced\" (#1879) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build it\r\n\r\nRepro project: https://github.com/yinyue200/taskextest/tree/v2\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nBuild successful\r\n\r\n### Actual Behavior\r\n\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7865487916","Type":"PullRequestEvent","CreatedAt":"2018-06-22T17:49:43","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1878","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] clean intermediates if NuGets change\" (#1878) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1741\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1828\r\n\r\nPR #1741 is a good attempt at fixing this, but...\r\n- It is a little heavy handed and basically \"nukes the world\".\r\n- It does not reproduce an issue in a test and \"fix it\", it fixes an\r\n  \"unknown\" #deletebinobj problem.\r\n\r\nI also have a few nitpicks about PR #1741:\r\n- It only comes into effect if `BuildingInsideVisualStudio` is `True`.\r\n  We should also fix command-line builds.\r\n- The `$(ProjectLockFile).stamp` file isn't added to `FileWrites`.\r\n\r\nSo let's improve on #1741! As it had some good ideas, we just need to\r\nnarrow its focus.\r\n\r\nFirst, I reproduced a real issue in a test with the following\r\nscenario:\r\n- Create a Xamarin.Forms 2.3.4 app that uses the 25.4.x support\r\n  libraries\r\n- Build it\r\n- Update the NuGets to Xamarin.Forms 3.0.x and the 27.x support\r\n  libraries\r\n- Build again\r\n- Stuff breaks... namely the following message:\r\n\r\n```\r\n    bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2153,3): error MSB4018: The \"GenerateJavaStubs\" task failed unexpectedly.\r\n        System.IO.FileNotFoundException: Could not load assembly 'System.IO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Perhaps it doesn't exist in the Mono for Android profile?\r\n        File name: 'System.IO.dll'\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\DirectoryAssemblyResolver.cs:line 241\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\DirectoryAssemblyResolver.cs:line 191\r\n        at Mono.Cecil.MetadataResolver.Resolve(TypeReference type) in external\\mono\\external\\cecil\\Mono.Cecil\\MetadataResolver.cs:line 101\r\n        at Mono.Cecil.ModuleDefinition.Resolve(TypeReference type) in external\\mono\\external\\cecil\\Mono.Cecil\\ModuleDefinition.cs:line 774\r\n        at Mono.Cecil.TypeReference.Resolve() in external\\mono\\external\\cecil\\Mono.Cecil\\TypeReference.cs:line 280\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.GetBaseType(TypeDefinition type) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 14\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.<GetTypeAndBaseTypes>d__1.MoveNext() in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 21\r\n        at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.IsSubclassOf(TypeDefinition type, String typeName) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 55\r\n        at Java.Interop.Tools.JavaCallableWrappers.JavaTypeScanner.AddJavaTypes(List`1 javaTypes, TypeDefinition type) in external\\Java.Interop\\src\\Java.Interop.Tools.JavaCallableWrappers\\Java.Interop.Tools.JavaCallableWrappers\\JavaTypeScanner.cs:line 46\r\n        at Java.Interop.Tools.JavaCallableWrappers.JavaTypeScanner.GetJavaTypes(IEnumerable`1 assemblies, IAssemblyResolver resolver) in external\\Java.Interop\\src\\Java.Interop.Tools.JavaCallableWrappers\\Java.Interop.Tools.JavaCallableWrappers\\JavaTypeScanner.cs:line 36\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Run(DirectoryAssemblyResolver res) in src\\Xamarin.Android.Build.Tasks\\Tasks\\GenerateJavaStubs.cs:line 138\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Execute() in src\\Xamarin.Android.Build.Tasks\\Tasks\\GenerateJavaStubs.cs:line 91\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [bin\\TestDebug\\temp\\BuildAfterUpgradingNuget\\UnnamedProject.csproj]\r\n```\r\n\r\nThe real problem here though is that many of the intermediate files in\r\n`obj\\Debug\\lp` (among others) are out of sync. Namely we can see\r\nmessages like this from the `ResolveLibraryProjectImports` MSBuild\r\ntask in the build log:\r\n\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.animated.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Animated.Vector.Drawable.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.annotations\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Annotations.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Compat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.ui\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.UI.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.utils\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.Utils.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.design\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Design.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.fragment\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Fragment.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.media.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Media.Compat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.transition\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Transition.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v4\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v4.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.appcompat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.AppCompat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.cardview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.CardView.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.mediarouter\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.MediaRouter.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.palette\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.Palette.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.recyclerview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.RecyclerView.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Vector.Drawable.dll: extracted files are up to date\r\n\r\nThese are *bad*, since the extracted files were from the 25.4.x\r\nsupport libraries! It is happening because the timestamps of these\r\nsystem-wide `%UserProfile%\\.nuget` NuGet packages are quite old.\r\n\r\nSo a solution for now, based on #1741:\r\n- When NuGet packages change\r\n- Clean some subset of files/directories -- not a full `Clean`\r\n\r\nI borrowed the logic for calculating `$(_NuGetAssetsFile)` from #1741,\r\nsince it was working pretty well. I added a\r\n`_CleanIntermediateIfNuGetsChange` MSBuild target that runs the\r\n`_CleanMonoAndroidIntermediateDir` target as this was the smallest\r\ndeletion I could figure out that fixes the problem. At first I tried\r\ndeleting other subsets of files/directories, but couldn't find a\r\ncombination that worked.\r\n\r\nThis change does have some impact on build times, when\r\n`_CleanIntermediateIfNuGetsChange` runs and deletes files, it takes\r\n1-2 seconds on my machine for the test case. There will also be\r\nfurther build time taken from other targets that run because files\r\nwere deleted. However, we would likely prefer a slightly slower,\r\ncorrect build, than a faster incorrect one... It is certaining going\r\nto be faster than the `Build`, error message, `Rebuild` cycle -- or\r\nnuking `bin` and `obj`.\r\n\r\nDown the road, we could consider some other change to refactor how\r\n`obj\\Debug\\lp` is generated and make it resilient to NuGet changes."},{"Id":"7864087588","Type":"PullRequestEvent","CreatedAt":"2018-06-22T13:14:40","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1873","RelatedDescription":"Merged pull request \"[tests] fix failing MultiDex test on Windows\" (#1873) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build?buildId=1793969\r\n\r\nOur VSTS builds on Windows have had one failing unit test for a while\r\n(but the build was otherwise broken in general).\r\n\r\n    Xamarin.Android.Build.Tests.BuildTest.BuildMultiDexApplication(False,\"v7.1\")\r\n        multidex-ed classes.zip exists\r\n        Expected: True\r\n        But was: False\r\n    at Xamarin.Android.Build.Tests.BuildTest.BuildMultiDexApplication(Boolean useJackAndJill, String fxVersion)\r\n        in E:\\A\\_work\\2\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.Android.Build.Tests\\BuildTest.cs:line 544\r\n\r\n1589dff3 was a good attempt at handling our new\r\n`AppendTargetFrameworkToIntermediateOutputPath` logic in this test.\r\n\r\nHowever, it was using `TargetFrameworkMoniker` *before* this line:\r\n\r\n    proj.TargetFrameworkVersion = b.LatestTargetFrameworkVersion ();\r\n\r\nAnd so, it was using an incorrect `TargetFrameworkMoniker` for\r\nassertions later in the test.\r\n\r\nMoving the usage of `TargetFrameworkMoniker` *after*\r\n`TargetFrameworkVersion` is set should fix this test and get the\r\nWindows build green again."},{"Id":"7861288625","Type":"IssuesEvent","CreatedAt":"2018-06-21T23:28:49","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1877","RelatedDescription":"Opened issue \"\"make framework-assemblies\" should not fail by broken framework lookup\" (#1877) at xamarin/xamarin-android","RelatedBody":"`make framework-assemblies` is to get all the frameworks and mono runtimes for each ABI and it need to run successfully (at least to build product). However it has been broken for months and it's never fixed:\r\n\r\n```\r\n\"/sources/xamarin-android/src/Mono.Android/Mono.Android.csproj\" (default target) (1) ->\r\n(GetReferenceAssemblyPaths target) -> \r\n  /devel/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(1140,5): error MSB3644: The reference assemblies for framework \"MonoAndroid,Version=v1.0\" were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK or Targeting Pack installed. Note that assemblies will be resolved from the Global Assembly Cache (GAC) and will be used in place of reference assemblies. Therefore your assembly may not be correctly targeted for the framework you intend. [/sources/xamarin-android/src/Mono.Android/Mono.Android.csproj]\r\n```\r\n\r\n`make framework-assemblies` internally runs make and msbuild many times, and the verbose build log for the most relevant msbuild execution can be found at: https://gist.github.com/atsushieno/1b8861f733c2562953b47f7f59e3527c"},{"Id":"7861046927","Type":"PullRequestEvent","CreatedAt":"2018-06-21T22:14:25","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1876","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] prevent build logs locking up IDEs\" (#1876) at xamarin/xamarin-android","RelatedBody":"When running tests in Visual Studio's test runner UI (Windows and\r\nmacOS), a test failure causes an unpleasant experience...\r\n\r\nSince the entire MSBuild diagnostic log is contained in\r\n`FailedBuildException`, the UI will hang anywhere from 30 seconds to 1\r\nminute while it tries to render the exception details in the IDE.\r\n\r\nThe solution here is to:\r\n- Detect if the unit test is running inside an IDE\r\n- Don't include the build log in the exception details in this case\r\n\r\nOn Windows, we can detect the test running by the process name, which\r\nis either `testhost.x86` or `testhost.x64`.\r\n\r\nOn macOS, we can detect VS for Mac by looking for the\r\n`MONO_GAC_PREFIX` environment variable, which points to\r\n`/Applications/Visual Studio.app/Contents/Resources` by default.\r\n\r\nIf neither of these cases are met, such as command line, the exception\r\nremains unchanged."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7870758225","Type":"IssuesEvent","CreatedAt":"2018-06-25T04:04:02","Actor":"DennisWeluDts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3138","RelatedDescription":"Opened issue \"WebView Navigating event does not work for server redirects on MacOS\" (#3138) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe Navigating event for a WebView on MacOS only ever fires once even if the server redirects the request to another url. Other platforms will re-trigger the Navigating event.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a WebView to a form on the MacOS platform\r\n2. Set the source to a server URL that has a redirect, e.g. \"insights.xamarin.com\" (which redirects to https://appcenter.ms/apps).\r\n3. Add a handler for the Navigating event.\r\n4. Run the form and see that the event only triggers once\r\n\r\n### Expected Behavior\r\nThe Navigating event should be raised for each new url that is redirected\r\n\r\n### Actual Behavior\r\nThe navigating event is only raised for the initial url\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms Mac 3.1\r\n- Last known good version: N/A\r\n- IDE: Any\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - MacOS:  10.13.4\r\n\r\n### Workaround\r\nI was able to workaround this by extending WebView and customizing the WebViewRenderer (https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.MacOS/Renderers/WebViewRenderer.cs). By commenting out the \"_sentNavigating\" on line 16 and all guards that checked it, the behavior was more as expected. However I don't know why that field was added and if that is going to break something else. (see attached file)\r\n[WebViewExRenderer.zip](https://github.com/xamarin/Xamarin.Forms/files/2131679/WebViewExRenderer.zip)\r\n"},{"Id":"7869751918","Type":"IssuesEvent","CreatedAt":"2018-06-24T17:33:27","Actor":"anirugu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3137","RelatedDescription":"Opened issue \"breakpoint doesn't hit when I use .net standard\" (#3137) at xamarin/Xamarin.Forms","RelatedBody":"Here is the code for test and reproduce https://github.com/anirugu/CameraTesting\r\n\r\nI am trying to make a app, in app a button clicked and camera opened. camera clicked and files saved.\r\n\r\nI write the code, debug it. it was hitting the c# code breakpoint in first few run, later on stop hitting the breakpoint.\r\n\r\nI run same code with shared project, it's working but it doesn't execute the code, maybe static method can't opened camera.\r\n\r\nplease check the code, I made it in 3.0 and later on I make it in 2.4 to make sure nothing is wrong with version 3.0. \r\n\r\nit's not running, I got exception, the c# code doesn't match the code currently running. I spent few hours working on it. still not finished with this.\r\n\r\n"},{"Id":"7869503684","Type":"IssuesEvent","CreatedAt":"2018-06-24T14:44:29","Actor":"EmilAlipiev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3136","RelatedDescription":"Opened issue \"Breaking Xaml changes on XF 3.1\" (#3136) at xamarin/Xamarin.Forms","RelatedBody":"I just wanted to inform you that if you upgrade on XF 3.1 version, you may get xaml errors telling that \"member names cannot be the same as their enclosing type\". this is a well known C# error if parent and child types have same name\r\n\r\nreason for that is code below works in versions before XF 3.1 but returns error on XF 3.1 ... I am not sure if that is supposed to be a bug or a fix of a bug all the time?\r\n```\r\n\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n\r\n             x:Class=\"myApp.TestPage\"  x:Name=\"TestPage\" > \r\n\r\n  <ContentPage.Content>\r\n\r\n            <c:cwTest x:Name=\"cwTest\"  VerticalOptions=\"FillAndExpand\"  HorizontalOptions=\"FillAndExpand\"/>\r\n\r\n  </ContentPage.Content>\r\n</ContentPage>\r\n```"},{"Id":"7869298993","Type":"PullRequestEvent","CreatedAt":"2018-06-24T12:17:07","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3135","RelatedDescription":"Opened pull request \"[GTK] Added Editor Placeholder and PlaceholderColor\" (#3135) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplemented Editor Placeholder and PlaceholderColor in GTK.\r\n![gtk-editor-placeholder](https://user-images.githubusercontent.com/6755973/41818975-357c7022-77b9-11e8-9a1f-ebcb8c718e5f.gif)\r\n\r\n### Platforms Affected ###\r\n\r\n- GTK\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7868703814","Type":"IssuesEvent","CreatedAt":"2018-06-24T02:45:52","Actor":"Timothy-Liu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3134","RelatedDescription":"Opened issue \"Is Version 3.1.0 Released?\" (#3134) at xamarin/Xamarin.Forms","RelatedBody":"In the document https://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-3.1/3.1.0/, it looks the version 3.1.0 is released. But the lasted build is marked as RC. Is the version 3.1.0 released?"},{"Id":"7868388918","Type":"IssuesEvent","CreatedAt":"2018-06-23T21:05:23","Actor":"rraallvv","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3133","RelatedDescription":"Opened issue \"Relative constraints modifies the parent dimensions in unexpected way.\" (#3133) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nThe parent RelativeLayout changes its height and top position if a child is placed at the top right corner and another child at the bottom right corner using constraints relative to the parent.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create the following layout in new Xamarin Forms project for **MainPage.xaml**:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:views=\"clr-namespace:Test.Views\" x:Class=\"Test.Views.MainPage\">\r\n    <StackLayout VerticalOptions=\"FillAndExpand\">\r\n        <BoxView Color=\"Yellow\" HeightRequest=\"25\" VerticalOptions=\"Start\"></BoxView>\r\n        <RelativeLayout x:Name=\"mainView\" BackgroundColor=\"Red\" VerticalOptions=\"StartAndExpand\">\r\n            <BoxView x:Name=\"boxA\" Color=\"Blue\" WidthRequest=\"50\" HeightRequest=\"50\"\r\n                RelativeLayout.XConstraint=\"{Binding BoxAXConstraint}\"\r\n                RelativeLayout.YConstraint=\"{Binding BoxAYConstraint}\">\r\n            </BoxView>\r\n            <BoxView x:Name=\"boxB\" Color=\"Green\" WidthRequest=\"50\" HeightRequest=\"50\"\r\n                RelativeLayout.XConstraint=\"{Binding BoxBXConstraint}\"\r\n                RelativeLayout.YConstraint=\"{Binding BoxBYConstraint}\">\r\n            </BoxView>\r\n        </RelativeLayout>\r\n    </StackLayout>\r\n</ContentPage>\r\n```\r\n\r\n2. Replace the code-behind with the following for **MainPage.xaml.cs**:\r\n\r\n```\r\npublic partial class MainPage : ContentPage\r\n{\r\n    public Constraint BoxAXConstraint { get; set; }\r\n    public Constraint BoxAYConstraint { get; set; }\r\n    public Constraint BoxBXConstraint { get; set; }\r\n    public Constraint BoxBYConstraint { get; set; }\r\n\r\n    public MainPage()\r\n    {\r\n        InitializeComponent();\r\n\r\n        BoxAXConstraint = Constraint.RelativeToParent(parent => mainView.Width - boxA.WidthRequest);\r\n        BoxAYConstraint = Constraint.RelativeToParent(parent => 0);\r\n        BoxBXConstraint = Constraint.RelativeToParent(parent => mainView.Width - boxB.WidthRequest);\r\n        BoxBYConstraint = Constraint.RelativeToParent(parent => mainView.Height - boxB.HeightRequest);\r\n\r\n        BindingContext = this;\r\n    }\r\n}\r\n```\r\n\r\n3. Run the app on both Android and iOS.\r\n\r\n### Expected Behavior\r\n\r\nThese are edited images showing how the layout should look like:\r\n\r\n![6on94](https://user-images.githubusercontent.com/1840524/41813542-ff5c6aaa-7705-11e8-867b-60e835ef5cd9.png)\r\n\r\n![v0nii](https://user-images.githubusercontent.com/1840524/41813544-03e68416-7706-11e8-8ca3-0ad7623efaa6.png)\r\n\r\n### Actual Behavior\r\n\r\nThis is what I got instead:\r\n\r\n![](https://i.stack.imgur.com/6ON94.png)\r\n![](https://i.stack.imgur.com/v0nIi.png)\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.0.0.482510\r\n- Last known good version: Haven't tried other versions.\r\n- IDE: Visual Studio for Mac 7.5.3.7\r\n- Platform Target Frameworks:\r\n  - iOS:  11.4\r\n  - Android: 5.0.1\r\n  - UWP: Didn't try UWP\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages: None besides those in a newly created project\r\n- Affected Devices: iOS simulator and Acer iconia b1-770\r\n\r\n### Reproduction Link\r\n\r\n[This](https://www.dropbox.com/s/p5wlwam8bvk4ba6/test.zip?dl=0) is a test project that reproduces the issue."},{"Id":"7867676077","Type":"IssuesEvent","CreatedAt":"2018-06-23T11:55:33","Actor":"rzakirov","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3132","RelatedDescription":"Opened issue \"Android 4.1 exception: Java.Lang.NoSuchMethodError: no method with name='isInLayout' signature='()Z' in class Landroid/view/ViewGroup;\" (#3132) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.1.\r\n- Last known good version: XF3.0\r\n- IDE: VS2017\r\n \r\n- Sln: https://github.com/rzakirov/XF31-API16-Excpetion\r\n"},{"Id":"7867527531","Type":"IssuesEvent","CreatedAt":"2018-06-23T09:54:37","Actor":"ncarandini","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3131","RelatedDescription":"Opened issue \"Add Selected event to Maps.Pin object\" (#3131) at xamarin/Xamarin.Forms","RelatedBody":"##Summary\r\nI'd like to have a `Selected ` event on `Xamarin.Forms.Maps.Pin` class that fires when the user tap the pin.\r\n\r\n##API Changes\r\nAdd `public event EventHandler Clicked;` to the `Xamarin.Forms.Maps.Pin.cs` file (and implement it on platforms code).\r\n\r\n##Intended Use Case\r\nWe already have the `Clicked` event,  but it actually fires when the user, after tapping the pin, then taps the pin label. This is a double action that is not related to the pin itself, but the label of the pin.\r\n\r\nI do understand that changing the semantic of `Clicked` and eventually adding a `LabelClicked` event would be a breaking change on existent Xamarin.Forms code, so I'm asking for the `Selected` event that can solve the issue without breaking existing code.\r\n\r\nThis can be useful at least in this scenario:\r\n\r\n1. Suppose I want to show something related to the pin in the same page where the Map is shown, whenever the user tap a pin:\r\n  ![image](https://user-images.githubusercontent.com/139274/41808135-74750964-76d9-11e8-954b-627896991822.png)\r\n\r\n  As you can see the user has to tap twice to get the Clicked event fired, one for selecting the pin and get the pin label shown, the other when tapping the label to fire the clicked event.\r\n"},{"Id":"7867408932","Type":"PullRequestEvent","CreatedAt":"2018-06-23T08:16:02","Actor":"knocte","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3130","RelatedDescription":"Opened pull request \"README.md: clarify NuGet.config info\" (#3130) at xamarin/Xamarin.Forms","RelatedBody":""}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7869116373","Type":"IssuesEvent","CreatedAt":"2018-06-24T09:43:40","Actor":"skyvolga","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4331","RelatedDescription":"Opened issue \"IOS debug application with Tabs is crashed after sleep\" (#4331) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  run in debug mode IOS application with tabs \r\n2. Enter sleep mode on iPhone\r\n3. Wakeup device\r\n4. Change tab several times \r\n\r\n### Expected Behavior\r\nContinue working\r\n\r\n### Actual Behavior\r\nFreeze application, sometimes It even freezes entire iPhone\r\n\r\n### Environment\r\n\r\nVisual Studio Professional 2017 for Mac\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: 838f5ee1-ccfc-43fe-8649-fffbb4ffa45b\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Version: 2.1.301\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\nXamarin.Android\r\nVersion: 8.3.3.2 (Visual Studio Professional)\r\nAndroid SDK: /Users/azapara/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.0.1\r\nSDK Platform Tools Version: 25.0.5\r\nSDK Build Tools Version: 25.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nXamarin.Mac\r\nVersion: 4.4.1.193 (Visual Studio Professional)\r\n\r\nXamarin.iOS\r\nVersion: 11.12.0.4 (Visual Studio Professional)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\nBuild Information\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\nOperating System\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/skyvolga/421cdd33a2770c5ca49dd014ca3a1d73\r\n\r\n### Application Output\r\n\r\nhttps://gist.github.com/skyvolga/da763c94e2d163282dfeda86e60a92ec\r\n\r\n### Example Project (If Possible)\r\n\r\nIt was reproduced on xamarin-forms-samples/Navigation/TabbedPage"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":32,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":17,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":65,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-06-25T05:30:57.6325475Z","RunDurationInMilliseconds":4170}