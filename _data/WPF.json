{"Data":{"GitHub":{"Issues":[{"Id":"475984414","IsPullRequest":false,"CreatedAt":"2019-08-02T03:55:33","Actor":"skanvk15","Number":"1503","RawContent":null,"Title":"System.Windows.Forms.FolderBrowserDialog no longer compiles in WPF app","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Windows version: (`winver`)\r\nWindows 10\r\n\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\nN/A\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nI used to be able to use the Win Forms folder dialog in .NET Core 3.0 Preview version WPF app, like this:\r\n`System.Windows.Forms.FolderBrowserDialog folderBrowserDialog;`\r\nBut with latest .NET Core 3.0 Preview version I get compiler error.\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n I get this compiler error:\r\nerror CS0234: The type or namespace name 'Forms' does not exist in the namespace 'System.Windows' (are you missing an assembly reference?)\r\n\r\n **Expected behavior:**\r\nNo error\r\n \r\n **Minimal repro:**\r\n Create new .NET Core WPF app and update MainWindow constructor like this:\r\n`public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            System.Windows.Forms.FolderBrowserDialog folderBrowserDialog;\r\n        }`\r\n","Url":"https://github.com/dotnet/wpf/issues/1503","RelatedDescription":"Open issue \"System.Windows.Forms.FolderBrowserDialog no longer compiles in WPF app\" (#1503)"},{"Id":"475923393","IsPullRequest":true,"CreatedAt":"2019-08-01T22:56:45","Actor":"ojhad","Number":"1502","RawContent":null,"Title":"Removed HandleTwoWayBindingToPropertyWithNonPublicSetter compat flag","State":"open","Body":"Issue number: 1379\r\n\r\nTwo-way binding to properties with non-public setters was being allowed because we took on behavior that was caused by a bug in .NET Framework 4.5. Back then, a compatibility flag was introduced due to this 4.5 bug. We no longer want to support this scenario because we want correct behavior in .NET Core and we want the behavior to be on parity with net472/8. So there is no longer need for the compat flag.\r\n\r\nRan a full DRT pass against this change and it was successful.","Url":"https://github.com/dotnet/wpf/pull/1502","RelatedDescription":"Open PR \"Removed HandleTwoWayBindingToPropertyWithNonPublicSetter compat flag\" (#1502)"},{"Id":"475863837","IsPullRequest":true,"CreatedAt":"2019-08-01T20:02:33","Actor":"arpitmathur","Number":"1501","RawContent":null,"Title":"WIP PR: Fixing hit detection in controls in system aware dialogs in mi…","State":"open","Body":"This is a WIP PR for an issue that was reported with bad hit detection in system aware dialogs hosted in mixed mode DPI","Url":"https://github.com/dotnet/wpf/pull/1501","RelatedDescription":"Open PR \"WIP PR: Fixing hit detection in controls in system aware dialogs in mi…\" (#1501)"},{"Id":"475409255","IsPullRequest":false,"CreatedAt":"2019-08-01T17:21:53","Actor":"vatsan-madhavan","Number":"1495","RawContent":null,"Title":"Workaround for build-failures caused by ResXCodeFileGenerator regression in dotnet-wpf-int","State":"closed","Body":"Related: #1492 \r\n\r\n> WPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n> \r\n> ```\r\n>   <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n>     <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n>   </data>\r\n> ```\r\n> \r\n> It generates getters that should look like this:\r\n> \r\n> ```cs\r\n>         internal static System.Drawing.Bitmap Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((System.DrawingBitmap)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Suddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`).\r\n> \r\n> ```cs\r\n>         /// <summary>\r\n>         ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n>         /// </summary>\r\n>         internal static object Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((object)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Here is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview).\r\n> \r\n> After building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types.\r\n> \r\n> [resx-codegen-issue.zip](https://github.%60com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)\r\n\r\n\r\n\r\n> WPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n> \r\n> ```\r\n>   <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n>     <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n>   </data>\r\n> ```\r\n> \r\n> It generates getters that should look like this:\r\n> \r\n> ```cs\r\n>         internal static System.Drawing.Bitmap Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((System.DrawingBitmap)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Suddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`).\r\n> \r\n> ```cs\r\n>         /// <summary>\r\n>         ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n>         /// </summary>\r\n>         internal static object Invalid_35x35 {\r\n>             get {\r\n>                 object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n>                 return ((object)(obj));\r\n>             }\r\n>         }\r\n> ```\r\n> \r\n> Here is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview).\r\n> \r\n> After building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types.\r\n> \r\n> [resx-codegen-issue.zip](https://github.%60com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1495","RelatedDescription":"Closed issue \"Workaround for build-failures caused by ResXCodeFileGenerator regression in dotnet-wpf-int\" (#1495)"},{"Id":"475698487","IsPullRequest":true,"CreatedAt":"2019-08-01T14:16:30","Actor":"dotnet-maestro[bot]","Number":"1500","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190801.2\r\n- **Date Produced**: 8/1/2019 1:18 PM\r\n- **Commit**: 1a7ac6bb28432654e258440aae39377ac7c79ba1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19401.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1500","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1500)"},{"Id":"475669511","IsPullRequest":true,"CreatedAt":"2019-08-01T13:46:21","Actor":"dotnet-maestro[bot]","Number":"1499","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190801.1\r\n- **Date Produced**: 8/1/2019 12:21 PM\r\n- **Commit**: fd9df08ba6eb47f8ddae2c287631ece88376684a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19401.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1499","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1499)"},{"Id":"475663800","IsPullRequest":true,"CreatedAt":"2019-08-01T13:29:22","Actor":"dotnet-maestro[bot]","Number":"1498","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190801.2\r\n- **Date Produced**: 8/1/2019 10:23 AM\r\n- **Commit**: 86e0387f31bd3ed165cce42b13279cb1a9e96439\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19401.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1498","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1498)"},{"Id":"475645636","IsPullRequest":true,"CreatedAt":"2019-08-01T12:58:40","Actor":"dotnet-maestro[bot]","Number":"1497","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190731.19\r\n- **Date Produced**: 8/1/2019 12:27 AM\r\n- **Commit**: 48787606d809963cc800151cbfbefe0a74ae74b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19381.19\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1497","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1497)"},{"Id":"475539448","IsPullRequest":false,"CreatedAt":"2019-08-01T08:13:31","Actor":"jdbriaris","Number":"1496","RawContent":null,"Title":"System.Windows.Point not available in System.Windows","State":"open","Body":"* .NET Core Version: 3.0.100-preview7-012821\r\n* Windows version: Windows 10, Version 1903, Build 18362.239\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nI have a separate \"pure\" .NET Core 3 library (i.e. no reference to Microsoft.WindowsDesktop.App) that I'm using to define my View Models. Within that library I have access to the geometry classes, e.g. [ArcSegment](https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.arcsegment?view=netframework-4.8), available in the `System.Windows.Media namespace`. However, if I then attempt to create an [ArcSegment](https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.arcsegment?view=netframework-4.8) by defining its [ArcSegment.Point](https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.arcsegment.point?view=netframework-4.8) property, I get the build error\r\n\r\n`Error\tCS0234\tThe type or namespace name 'Point' does not exist in the namespace 'System.Windows' (are you missing an assembly reference?)`\r\n\r\nBoth the docs for [ArcSegment.Point](https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.arcsegment?view=netframework-4.8) suggest that it applies to .NET Core Preview 7, but the docs for [Point](https://docs.microsoft.com/en-us/dotnet/api/system.windows.point?view=netframework-4.8) does not suggest such support.\r\n\r\nIf I reference the package `Microsoft.WindowsDesktop.App` I have access to [Point](https://docs.microsoft.com/en-us/dotnet/api/system.windows.point?view=netframework-4.8) and can successfully build. However, I'd want to keep this a pure .NET Core 3 library.\r\n\r\nFurther explanation on this [SO question](https://stackoverflow.com/questions/57295940/net-core-3-wpf-and-paths).\r\n \r\n **Expected behavior:**\r\nI'd expect to be able to use the geometry classes specified in `System.Windows.Media` in a .NET Core 3 library.\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/1496","RelatedDescription":"Open issue \"System.Windows.Point not available in System.Windows\" (#1496)"},{"Id":"475365891","IsPullRequest":true,"CreatedAt":"2019-08-01T00:07:35","Actor":"vatsan-madhavan","Number":"1493","RawContent":null,"Title":"Embed Commit SHA as a string resource in native DLLs","State":"closed","Body":"Fixes #1491 \r\n\r\nEmbeds a new RC file containing a string table for any native DLL or EXE project. This string table will contain **two** pieces of information:\r\n- Commit SHA\r\n- Repo name that built this assembly. \r\n\r\n![image](https://user-images.githubusercontent.com/20246435/62249278-dfa75180-b39e-11e9-97b6-81c88652c539.png)\r\n\r\n![image](https://user-images.githubusercontent.com/20246435/62249303-efbf3100-b39e-11e9-96af-155879c82c11.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1493","RelatedDescription":"Closed or merged PR \"Embed Commit SHA as a string resource in native DLLs\" (#1493)"},{"Id":"475259085","IsPullRequest":false,"CreatedAt":"2019-08-01T00:07:34","Actor":"grubioe","Number":"1491","RawContent":null,"Title":"Add SHA in native assemblies resource files","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/1491","RelatedDescription":"Closed issue \"Add SHA in native assemblies resource files\" (#1491)"},{"Id":"475377357","IsPullRequest":false,"CreatedAt":"2019-07-31T22:40:09","Actor":"acemod13","Number":"1494","RawContent":null,"Title":"Missing PlatformTarget tags breaks Ready2Run","State":"closed","Body":"* .NET Core Version: 3.0.100-preview7-012821\r\n* Windows version: Windows 10 (1903, Build 18362.267)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nI noticed an issue where if the <PlatformTarget> tag is missing for one of the build configurations in the csproj file (usually, it's on projects that migrated from .NET Framework by hand) will break the Publishing Ready2Run option. An example of how it could cause it is attempting to make a self-contained win-x64 package (with the <PublishReady2Run> tag set to true) using the Release | Any CPU build configuration. If the PlatformTarget tag is missing, it assumes that it has to compile to x86. This causes an issue where 32-bit binaries have the wrong R2R image (the Ahead-Of-Time compiler requires that the binary and the image to match, so 32-bit binary must have a 32-bit R2R image), causing a crash.\r\n \r\n **Actual behavior:**\r\nThe app will start, taking up some RAM, but the usage will go to 1MB (or lower) before closing.\r\n \r\n **Expected behavior:**\r\nThe app loads up as normal.\r\n \r\n **Minimal repro:**\r\nI have a repo that is affected by the bug and it's pretty small (it's a small wrapper for a compiler): https://github.com/acemod13/RMMVCookTool\r\n\r\nI'll see if I can make an even smaller repro app.\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/1494","RelatedDescription":"Closed issue \"Missing PlatformTarget tags breaks Ready2Run\" (#1494)"},{"Id":"475356330","IsPullRequest":false,"CreatedAt":"2019-07-31T21:03:10","Actor":"vatsan-madhavan","Number":"1492","RawContent":null,"Title":"dotnet-wpf-int builds fail due to ResXCodeFileGenerator regression in recent dev16.3p2 builds","State":"open","Body":"\r\nWPF uses `ResXFileCodeGenerator `it its builds. We have a resx with entries like this (Documents.resx)\r\n\r\n```xml\r\n  <data name=\"Invalid_35x35\" type=\"System.Resources.ResXFileRef, System.Windows.Forms\">\r\n    <value>Invalid_35x35.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>\r\n  </data>\r\n```\r\n\r\nIt generates getters that should look like this: \r\n\r\n``` C#\r\n        internal static System.Drawing.Bitmap Invalid_35x35 {\r\n            get {\r\n                object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n                return ((System.DrawingBitmap)(obj));\r\n            }\r\n        }\r\n```\r\n\r\nSuddenly, as of some recent VS build, `ResXFileCodeGenerator `is starting to emit files with getters that are instead like this (not the return type – they are plain `object`). \r\n\r\n``` C#\r\n        /// <summary>\r\n        ///   Looks up a localized resource of type System.Object similar to Microsoft.Build.Tasks.ResourceHandling.LiveObjectResource.\r\n        /// </summary>\r\n        internal static object Invalid_35x35 {\r\n            get {\r\n                object obj = ResourceManager.GetObject(\"Invalid_35x35\", resourceCulture);\r\n                return ((object)(obj));\r\n            }\r\n        }\r\n```\r\n\r\nHere is a standalone repro that illustrates the problem. Build with commandline msbuild (not `dotnet`, use `msbuild`, VS version dev16.3p2 29128.8.master, Int Preview). \r\n\r\nAfter building, open `obj\\Debug\\netcoreapp3.0\\MS.Internal.Documents.Resources.cs` and you can see getters that return `object` instead of specifc types. \r\n\r\n[resx-codegen-issue.zip](https://github.`com/dotnet/wpf/files/3453868/resx-codegen-issue.zip)","Url":"https://github.com/dotnet/wpf/issues/1492","RelatedDescription":"Open issue \"dotnet-wpf-int builds fail due to ResXCodeFileGenerator regression in recent dev16.3p2 builds\" (#1492)"},{"Id":"475258354","IsPullRequest":false,"CreatedAt":"2019-07-31T17:05:10","Actor":"grubioe","Number":"1490","RawContent":null,"Title":"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Screenreader: The options present in the \"StickyNote Style\" combo box is not announced to the screen reader users.","State":"open","Body":"Copied from VSO [957351](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/957351)\r\n\r\n\r\nEnvironment Details:\r\nApplication Name: .NET Core 3.0 (WPF)\r\n\r\n\r\nApplication version: VS 2019 Preview 4.7.03190\r\n\r\nWindows Version: Windows10\r\n\r\nScreenReader Version: Narrator, NVDA 2019.1.1\r\n\r\n\r\n\r\n\r\nPre-requisite:\r\n\r\n1) Download the latest .NET Core 3 daily build by going to this link.\r\n2) Install Windows (x86 or x64) versions of sdk listed under Master (3.0.x Runtime) by clicking \"Installer\" link.\r\n\r\n\r\nRepro Steps:\r\n\r\n\r\n1) Run exe file for \"AnnotationsStyling\" from the build app folder provided.\r\n2) Main Window for \"AnnotationsStyling\" solution will appear.\r\n3) Start screen reader.\r\n4) Navigate to the \"StickyNote Style\" combo box and navigate through it's options.\r\n5) Listen how are they announced.\r\n\r\n\r\nActual:\r\n\r\nWhen screen reader users navigates through the options of the  \"StickyNote Style\" combo box and the option names are not announced as per it's visual appearance on the screen. \r\n\r\n\r\n\r\nThe same issue is observed using the both the screen readers i.e. Narrator and NVDA.\r\n\r\n\r\n\r\nExpected:\r\n\r\nThe options of the  \"StickyNote Style\" combo box should be announced properly to the screen reader users as per it's visual appearance.\r\n\r\n\r\n\r\nUser Impact:\r\n\r\nIf the options of a combo box is not announced correctly to the screen reader users then they might not understand which option should be selected and they will also get confused whether the option which they are selecting is correct or not.\r\n\r\n\r\n\r\n\r\nRecommendations:\r\n\r\nPlease refer to below URL which is repository for accessibility bug fixes.\r\n\r\nhttps://microsoft.sharepoint.com/teams/msenable/Pages/Home.aspx\r\n\r\n\r\n\r\n\r\nMAS Reference:\r\n\r\nMAS 1.3.1\r\n\r\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}","Url":"https://github.com/dotnet/wpf/issues/1490","RelatedDescription":"Open issue \"A11y_.NETCore3.0(WPF)_WPFAnnotationsStyling_Screenreader: The options present in the \"StickyNote Style\" combo box is not announced to the screen reader users.\" (#1490)"},{"Id":"475191589","IsPullRequest":true,"CreatedAt":"2019-07-31T15:11:11","Actor":"dotnet-maestro[bot]","Number":"1489","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.3\r\n- **Date Produced**: 7/31/2019 2:40 PM\r\n- **Commit**: 733090b305bc66e34affe64e938dfe3c08dcaa03\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1489","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1489)"},{"Id":"475152033","IsPullRequest":true,"CreatedAt":"2019-07-31T14:01:05","Actor":"dotnet-maestro[bot]","Number":"1488","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.2\r\n- **Date Produced**: 7/31/2019 12:58 PM\r\n- **Commit**: 3a383a329c1f785a981997c16105ed5816e8d25e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1488","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1488)"},{"Id":"475105395","IsPullRequest":true,"CreatedAt":"2019-07-31T12:54:09","Actor":"dotnet-maestro[bot]","Number":"1487","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190730.3\r\n- **Date Produced**: 7/30/2019 6:57 PM\r\n- **Commit**: def377f94747dac91482aad67b33a1c011ffc770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19380.3\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1487","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1487)"},{"Id":"475099931","IsPullRequest":true,"CreatedAt":"2019-07-31T12:41:20","Actor":"dotnet-maestro[bot]","Number":"1486","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190731.1\r\n- **Date Produced**: 7/31/2019 11:48 AM\r\n- **Commit**: bc832c4ad6ad4729dac716d4486f9f2fd4c99e64\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19381.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1486","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1486)"},{"Id":"474929253","IsPullRequest":false,"CreatedAt":"2019-07-31T04:27:13","Actor":"Berrysoft","Number":"1485","RawContent":null,"Title":"Feature: new WPF style for Windows 10","State":"open","Body":"The WPF style now used on Windows 10 doesn't match the legacy controls, which is created by WinForms. Here is a screenshot to compare some of them:\r\n\r\n![image](https://user-images.githubusercontent.com/37586447/62183882-73245680-b38e-11e9-9975-84a097a38be2.png)\r\n\r\nI suggest we should write a set of new style to match Windows 10 WinForms style, and also another new style for dark mode in Windows 10.","Url":"https://github.com/dotnet/wpf/issues/1485","RelatedDescription":"Open issue \"Feature: new WPF style for Windows 10\" (#1485)"},{"Id":"474812673","IsPullRequest":true,"CreatedAt":"2019-07-30T21:16:45","Actor":"dotnet-maestro[bot]","Number":"1484","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.7\r\n- **Date Produced**: 7/30/2019 8:02 PM\r\n- **Commit**: 3621a26c7f0e62d798cedc4d19299509416f7f5c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1484","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1484)"},{"Id":"474799174","IsPullRequest":true,"CreatedAt":"2019-07-30T20:38:59","Actor":"dotnet-maestro[bot]","Number":"1483","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.6\r\n- **Date Produced**: 7/30/2019 8:00 PM\r\n- **Commit**: 1a147e1081cc5f172ff6bb60e66e0d997cd6e8ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.6\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1483","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1483)"},{"Id":"474742714","IsPullRequest":false,"CreatedAt":"2019-07-30T18:29:47","Actor":"vsfeedback","Number":"1482","RawContent":null,"Title":"MSBuilds fail from BC2012 error.. Can't open file for writing: Access to the path … is denied.","State":"open","Body":"<p>VSF_TYPE_MARKDOWNI’ve put up with this error for over a year now because I couldn’t fix it but I could work around it. However, now that the error is happening on the Build Server it is essential that I get a remedy. There are a lot of discussions on the forums about this, including mine. None of the recommended solutions have worked for me.</p><p>What happens is that when I run a clean-and-build or a rebuild the error happens. However, a subsequent build will work. That’s how I worked around it all that time; I just pressed Ctrl-Shift-B over and over until all the offending errors went away. I can’t do that repetitive build scheme on the build server, so this needs to be addressed.</p><p>It only happens with projects that contain xaml files, but not all projects that contain xaml files are affected. It may be due to the first pass of the markup compiler locking the DLL such that the second pass can’t unlock it. There seems to be a correspondence between projects that produce a [[name]_[random]_wpftmp.[proj]](https://developercommunity.visualstudio.com/content/problem/210156/msbuild-is-adding-a-random-hash-and-wpftmp-to-my-a.html) file.  It happens in both VS 2017 and VS 2019. I attached a simple single project solution that will reproduce it; just do a **re**build each time. Additionally, the diagnostic build log is attached.</p><p>Mark</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/549296/msbuiilds-fail-from-bc2012-error-cant-open-file-fo.html\nVSTS ticketId: 857501_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/28/2019, 01:51 AM (93 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/1482","RelatedDescription":"Open issue \"MSBuilds fail from BC2012 error.. Can't open file for writing: Access to the path … is denied.\" (#1482)"},{"Id":"474685062","IsPullRequest":true,"CreatedAt":"2019-07-30T16:51:21","Actor":"dotnet-maestro[bot]","Number":"1481","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.5\r\n- **Date Produced**: 7/30/2019 3:50 PM\r\n- **Commit**: 1fb126fad97d5293b71c1c8d64f643aa4a00cfff\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.5\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1481","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1481)"},{"Id":"474671114","IsPullRequest":true,"CreatedAt":"2019-07-30T16:14:29","Actor":"dotnet-maestro[bot]","Number":"1478","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.4\r\n- **Date Produced**: 7/30/2019 3:49 PM\r\n- **Commit**: f8c3968d5cc0602e4f6e3343d334d585da468fb3\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview8.19380.4\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-preview8-28379-05 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1478","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1478)"},{"Id":"474674931","IsPullRequest":false,"CreatedAt":"2019-07-30T16:09:01","Actor":"grubioe","Number":"1480","RawContent":null,"Title":"Port LocBaml WPF application localization tool to .NET core","State":"open","Body":"Transferred from WPF Samples Repo [#85](https://github.com/microsoft/WPF-Samples/issues/85)\r\n\r\nhe LocBaml tool is now available in the Wpf-Samples repo: https://github.com/Microsoft/WPF-Samples/tree/master/Tools/LocBaml. The current version of the source matches the .NET Framework version, with additional code sanitziation, header updates, and a new SDK-style project file. The tool still needs to be ported to .NET core, and the project file sould be updated to target both netcoreapp3.0 and net472.\r\n\r\nCc: @ryalanms @vatsan-madhavan ","Url":"https://github.com/dotnet/wpf/issues/1480","RelatedDescription":"Open issue \"Port LocBaml WPF application localization tool to .NET core\" (#1480)"},{"Id":"474673678","IsPullRequest":false,"CreatedAt":"2019-07-30T16:06:24","Actor":"Thraka","Number":"1479","RawContent":null,"Title":"Thickness should support ctor of all three common ways to create a thickness.","State":"open","Body":"Related to https://github.com/dotnet/dotnet-api-docs/pull/2569\r\n\r\nSince the ThicknessConverter is one of the most common ways of creating a Thickness object, the Thickness object should support the 3 types of conversion on the ctor.\r\n\r\n| | |\r\n| --- | --- |\r\n| `int` | same value for all four sides |\r\n| `int, int` | values for leftright and topbottom |\r\n| `int, int, int, int` | values for each individual side |","Url":"https://github.com/dotnet/wpf/issues/1479","RelatedDescription":"Open issue \"Thickness should support ctor of all three common ways to create a thickness.\" (#1479)"},{"Id":"474604141","IsPullRequest":true,"CreatedAt":"2019-07-30T14:22:15","Actor":"dotnet-maestro[bot]","Number":"1477","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.1\r\n- **Date Produced**: 7/30/2019 1:05 PM\r\n- **Commit**: 54a8123b18fa83469961269ea30fb20f478a3392\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1477)"},{"Id":"474581638","IsPullRequest":true,"CreatedAt":"2019-07-30T13:57:00","Actor":"dotnet-maestro[bot]","Number":"1476","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190730.2\r\n- **Date Produced**: 7/30/2019 1:09 PM\r\n- **Commit**: 8844ce90338c5c637f5d59722e8de250f2cd71c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview9.19380.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#1476)"},{"Id":"474566605","IsPullRequest":true,"CreatedAt":"2019-07-30T13:36:49","Actor":"dotnet-maestro[bot]","Number":"1475","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190729.20\r\n- **Date Produced**: 7/29/2019 7:21 PM\r\n- **Commit**: 5661e1f6587b4793365a4762dbda973a6547ad17\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview9.19379.20\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#1475)"},{"Id":"474546599","IsPullRequest":true,"CreatedAt":"2019-07-30T13:03:34","Actor":"dotnet-maestro[bot]","Number":"1474","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190729.29\r\n- **Date Produced**: 7/29/2019 10:51 PM\r\n- **Commit**: 84d9a013b66c3e14a67ace0a99ae84e6eb8b6a7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19379.29\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1474","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1474)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-02T05:30:57.172087Z","RunDurationInMilliseconds":844}