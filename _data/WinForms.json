{"Data":{"GitHub":{"Issues":[{"Id":"600739947","IsPullRequest":false,"CreatedAt":"2020-04-16T04:49:55","Actor":"Yoopex","Number":"3068","RawContent":null,"Title":"Winform Designer is not available","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No --> No\r\n\r\n**Problem description:**\r\n\r\nVS version:16.15.4 Community\r\n\r\n-----\r\n\r\nWhen I update vs to 16.15.1, the winform designer runs normally.\r\n\r\nAfter a few days, I found it's not available when I try to create a new winform project or open a exist winform project. When I click the \"Show Designer Shift+F7\", it always show me the codes, even if the codes is opened yet.\r\n\r\nI just wanna know if there is a bug or i made a wrong configuration, and how to solve it?\r\n\r\nThanks\r\n","Url":"https://github.com/dotnet/winforms/issues/3068","RelatedDescription":"Closed issue \"Winform Designer is not available\" (#3068)"},{"Id":"600704301","IsPullRequest":false,"CreatedAt":"2020-04-16T02:38:04","Actor":"lonitra","Number":"3067","RawContent":null,"Title":"Push for Adding Collapse Support to ListViewGroup","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!--\r\n    A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n  -->\r\nAs of now, there's not an option for a user to hide items under a `ListViewGroup` that they aren't interested in seeing at the time, similar to what windows like File Explorer provide. This could result in endless scrolling if there are many ListViewGroups and many items under each group. As #2623 suggested, a collapsible/collapse property would be a nice touch to give users flexibility and can especially be useful for clutter management purposes.\r\n\r\n\r\n**Describe the solution you'd like**\r\n<!--\r\n    A clear and concise description of what you want to happen. This includes:\r\n    - Description of what API need to be added or changed.\r\n    - Code that shows the surface area of the API.\r\n    - Code that shows real world scenarios, and how they would otherwise be handled.\r\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\r\n    - Any other context or screenshots about the feature request here.\r\n\r\n    :exclamation: Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md for more details\r\n\r\n  -->\r\nAdd the ability for users to make items in a group collapsible.\r\n\r\nAPI:\r\n```\r\npublic class ListViewGroup {\r\n    .\r\n    .\r\n    public bool Collapsible { get; set; }\r\n    public bool Collapsed { get; set; }\r\n    .\r\n    .\r\n}\r\n```\r\n\r\nExample:\r\n```\r\nvar lvGroup = new ListViewGroup {\r\n    Collapsible = true,\r\n    Collapsed = false\r\n};\r\n```\r\n**Note:** The original issue has excellent visualization of what this might look like (#2623)\r\n\r\n\r\n**Will this feature affect UI controls?**\r\n<!--\r\n    Yes / No\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n        - What impact will it have on accessibility?\r\n        - Will this feature need to be localized or be localizable?\r\n  -->\r\nYes. \r\n\r\n**Will VS Designer need to support the feature?**\r\nIt would be nice. I would imagine the Designer would have an area carved out in the ListViewGroup Collection Editor where Collapsible/Collapsed can be toggled. Something like so:\r\n![designerex](https://user-images.githubusercontent.com/30007367/79377765-0d263200-7f11-11ea-8a98-965984c03343.png)\r\n\r\nI also imagine that the changes would immediately visible to the user in the designer, again similar to what is shown in the original issue.\r\n\r\n**What impact will it have on accessibility?**\r\n I'm not quite sure here. \r\n\r\n**Will this feature need to be localized or be localizable?**\r\nAside from some work relating to accessibility namely perhaps what a talkback would use to describe the property, no I do not think this needs to be localized/localizable.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3067","RelatedDescription":"Open issue \"Push for Adding Collapse Support to ListViewGroup\" (#3067)"},{"Id":"600693186","IsPullRequest":true,"CreatedAt":"2020-04-16T02:22:23","Actor":"dotnet-maestro[bot]","Number":"3066","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200415.10\r\n- **Date Produced**: 4/16/2020 1:07 AM\r\n- **Commit**: 5395b14eb4b924419b3d4732582a22ac72571d9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20215.6 to 5.0.0-preview.4.20215.10\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3066)","Url":"https://github.com/dotnet/winforms/pull/3066","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3066)"},{"Id":"600540417","IsPullRequest":true,"CreatedAt":"2020-04-15T21:39:52","Actor":"dotnet-maestro[bot]","Number":"3065","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200415.6\r\n- **Date Produced**: 4/15/2020 6:31 PM\r\n- **Commit**: 2eef5a3dc0f9afeb07a1aada1c5312fc013b7871\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.CodeDom**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Drawing.Common**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Security.Permissions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20214.3 to 5.0.0-preview.4.20215.6\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3065)","Url":"https://github.com/dotnet/winforms/pull/3065","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3065)"},{"Id":"600077750","IsPullRequest":true,"CreatedAt":"2020-04-15T07:19:43","Actor":"RussKie","Number":"3064","RawContent":null,"Title":"Fix test decorations","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3064)","Url":"https://github.com/dotnet/winforms/pull/3064","RelatedDescription":"Open PR \"Fix test decorations\" (#3064)"},{"Id":"600013652","IsPullRequest":false,"CreatedAt":"2020-04-15T04:35:45","Actor":"Lydia-Shi","Number":"3063","RawContent":null,"Title":"Cursor flicker when hovering the pointer on the selected text in RichTextBox","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1.300-preview-015095\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Minimal repro:**\r\n1.\tCreate a new Winforms Core application\r\n2.\tDrag and drop a RichTextBox to the form designer\r\n3.\tBuild and run this application\r\n4.\tType some words in the RichTextBox and select some text \r\n5.\tHover the pointer on the select text and observer the cursor\r\n \r\nOr \r\nRun the attached project [CursorFlickerPrj.zip](https://github.com/dotnet/winforms/files/4479150/CursorFlickerPrj.zip) and repeat step4 & step5.\r\n\r\n**Expected behavior:**\r\nThe cursor is not flicker.\r\n\r\n**Actual behavior:**\r\nThe cursor is flicker. \r\n![Flicker333](https://user-images.githubusercontent.com/54019172/79296351-c7b43580-7f0d-11ea-9fd2-afb2e717510c.gif)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3063","RelatedDescription":"Open issue \"Cursor flicker when hovering the pointer on the selected text in RichTextBox\" (#3063)"},{"Id":"600013505","IsPullRequest":false,"CreatedAt":"2020-04-15T04:35:23","Actor":"RussKie","Number":"3062","RawContent":null,"Title":"Construction of `AccessibleObject` forces creation of `Handle`","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5 P4\r\n\r\n\r\n**Problem description:**\r\n\r\nMultiple code paths involving a construction or an interaction with an `AccessibleObject` on a control that hasn't had its `Handle` created cause the creation of the `Handle`.\r\nThis may lead to undesired side-effects like described in https://github.com/dotnet/winforms/issues/2797.\r\n\r\n**Expected behavior:**\r\n\r\nNone of `AccessibleObject` events must be raised if an owner control doesn't have a valid `Handle.\r\nhttps://github.com/dotnet/winforms/blob/b666dc7a94d8ac87a7d300cfb4fa86332fb79bae/src/System.Windows.Forms/src/System/Windows/Forms/AccessibleObject.cs#L2227-L2294\r\n\r\n\r\n**Minimal repro:**\r\n\r\nRun the following test:\r\nhttps://github.com/dotnet/winforms/blob/b666dc7a94d8ac87a7d300cfb4fa86332fb79bae/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ToolStripItemTests.cs#L14005-L14022\r\n\r\nLine:14014 will cause `ToolStripItem.Handle` to be created.\r\n\r\n```\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.CreateHandle() Line 4912\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.Handle.get() Line 2464\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.ControlAccessibleObject.ControlAccessibleObject(System.Windows.Forms.Control ownerControl = {System.Windows.Forms.ToolStrip}) Line 32\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStrip.ToolStripAccessibleObject.ToolStripAccessibleObject(System.Windows.Forms.ToolStrip owner = {System.Windows.Forms.ToolStrip}) Line 5016\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStrip.CreateAccessibilityInstance() Line 4985\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Control.AccessibilityObject.get() Line 498\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItem.ToolStripItemAccessibleObject.FragmentRoot.get() Line 364\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.AccessibleObject.Interop.UiaCore.IRawElementProviderFragment.FragmentRoot.get() Line 819\tC#\tSymbols loaded.\r\n \t[Native to Managed Transition]\t\tAnnotated Frame\r\n \t[Managed to Native Transition]\t\tAnnotated Frame\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.AccessibleObject.RaiseAutomationEvent(Interop.UiaCore.UIA eventId = AutomationFocusChangedEventId) Line 2267\tC#\tSymbols loaded.\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItem.ToolStripItemAccessibleObject.RaiseFocusChanged() Line 481\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItem.Select() Line 3094\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.Tests.dll!System.Windows.Forms.Tests.ToolStripItemTests.ToolStripItem_Select_InvokeWithParent_Success() Line 14017\tC#\tSymbols loaded.\r\n```","Url":"https://github.com/dotnet/winforms/issues/3062","RelatedDescription":"Open issue \"Construction of `AccessibleObject` forces creation of `Handle`\" (#3062)"},{"Id":"599506376","IsPullRequest":true,"CreatedAt":"2020-04-15T01:00:10","Actor":"KindDragon","Number":"3061","RawContent":null,"Title":"Fixed minor typo in AxHostTests","State":"closed","Body":"Just typo\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3061)","Url":"https://github.com/dotnet/winforms/pull/3061","RelatedDescription":"Closed or merged PR \"Fixed minor typo in AxHostTests\" (#3061)"},{"Id":"599422959","IsPullRequest":true,"CreatedAt":"2020-04-15T00:59:24","Actor":"dotnet-maestro[bot]","Number":"3060","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200414.3\r\n- **Date Produced**: 4/14/2020 7:58 PM\r\n- **Commit**: 4335c82b7b6e4932ae12e79b302bbe4200732744\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20213.10 to 5.0.0-preview.4.20214.3 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3060)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3060","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3060)"},{"Id":"599158204","IsPullRequest":true,"CreatedAt":"2020-04-15T00:08:27","Actor":"RussKie","Number":"3055","RawContent":null,"Title":"fix: Hide icon when `ShowIcon = false`","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3022\r\n\r\n\r\n## Proposed changes\r\n\r\n- Correct a regression introduced in #695 when a condition was flipped that stopped setting form's [extended style flag `WS_EX_DLGMODALFRAME`](https://docs.microsoft.com/en-us/windows/win32/winmsg/extended-window-styles).\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomers now able to hide form's icon at runtime by setting `myform.ShowIcon = false`.\r\nWorkarounds involve either \r\n* setting an icon on a form to a transparent blank icon, or \r\n* performing an interop call to hide the icon _before_ hiding the icon:\r\n    ```cs\r\n    if (myform.ShowIcon)\r\n    {\r\n        int extendedStyle = (int)User32.GetWindowLong(myform.Handle, User32.GWL.EXSTYLE);\r\n        User32.SetWindowLong(myform.Handle, User32.GWL.EXSTYLE, (IntPtr)(extendedStyle | (int)User32.WS_EX.DLGMODALFRAME));\r\n    }\r\n\r\n    myform.ShowIcon =false;\r\n    ```\r\n\r\n## Regression? \r\n\r\n- Yes, introduced in .NET Core 3.0\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual tests in the integration test app\r\n- unit tests\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3055)","Url":"https://github.com/dotnet/winforms/pull/3055","RelatedDescription":"Closed or merged PR \"fix: Hide icon when `ShowIcon = false`\" (#3055)"},{"Id":"599273400","IsPullRequest":true,"CreatedAt":"2020-04-14T23:52:33","Actor":"RussKie","Number":"3056","RawContent":null,"Title":"Take screenshots on build agents during tests","State":"closed","Body":"\r\n## Proposed changes\r\n\r\n- While tests are running capture screenshots every 3 minutes to try to gain visibility as to why tests are currently stalling.\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/79185217-9ed26880-7e59-11ea-9eb2-41952342c3f1.png)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3056)","Url":"https://github.com/dotnet/winforms/pull/3056","RelatedDescription":"Closed or merged PR \"Take screenshots on build agents during tests\" (#3056)"},{"Id":"599356190","IsPullRequest":false,"CreatedAt":"2020-04-14T07:26:57","Actor":"Vino-Wang","Number":"3059","RawContent":null,"Title":"[Accessibility]MAS 1.4.11: The color contrast of the focus dot line on each selection items for LitView/CheckedListBox is below 3:1","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n.NET SDK 5.0.100-PREVIEW.4.20213.26 + Latest VS2019\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nYes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nOn navigating to each row using arrow keys (down/up) the focus has a color contrast below 3:1. The ratio is 2.4:1. Low vision users will face difficulty in knowing that there is focus on the rows.\r\nListView\r\n![ListView](https://user-images.githubusercontent.com/18568603/79197388-389f1300-7e64-11ea-903d-dce0d0838d25.png)\r\n\r\nCheckedListBox![CheckedListBox](https://user-images.githubusercontent.com/18568603/79197232-f83f9500-7e63-11ea-8817-17d52ac4fbd6.png)\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n**Expected behavior:**\r\nWhen the tab navigation is moved to each row the focus on them should be at a ratio of 3:1 or greater than 3:1.\r\n\r\n**Minimal repro:**\r\n1.\tOpen the attached project, build and run it.\r\n[Non_Text_Contrast_for_focus_dotline.zip](https://github.com/dotnet/winforms/files/4473732/Non_Text_Contrast_for_focus_dotline.zip)\r\n2.\tSelect one row of ListView or one item of checkedBoxList.\r\n3.\tLaunch the Accessibility Insights for windows tool, and open the Color Contrast analyzer.\r\n4.\tSelect the color of the focus dot line.","Url":"https://github.com/dotnet/winforms/issues/3059","RelatedDescription":"Open issue \"[Accessibility]MAS 1.4.11: The color contrast of the focus dot line on each selection items for LitView/CheckedListBox is below 3:1\" (#3059)"},{"Id":"599315800","IsPullRequest":false,"CreatedAt":"2020-04-14T05:55:31","Actor":"Vino-Wang","Number":"3058","RawContent":null,"Title":"UIA navigation to move backwards/forwards through AIWin(Accessibility Insights For Windows) keyboard combination Shift+Ctrl+F5/F6/F7/F8/F9 doesn't work with the TabControl","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n.NET SDK 5.0.100-Preview.4.20209.25 + latest VS2019\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nYes\r\n\r\n**Problem description:**\r\nAIWin can’t move backwards/forwards correctly through the set of sibling tab items. This issue also can reproduce when targeting .NET Core 3.1.\r\n\r\nPlease see the attached repro video: \r\n[AIWinKeyboard_function_issue_with_Winforms TabControl.zip](https://github.com/dotnet/winforms/files/4473414/AIWinKeyboard_function_issue_with_Winforms.TabControl.zip)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nAIWin should be able to move backwards/forwards through the tab items.\r\nPlease see the attached repro video:\r\n[NotReproWithOtherElements.zip](https://github.com/dotnet/winforms/files/4473417/NotReproWithOtherElements.zip)\r\n\r\n**Minimal repro:**\r\n1.\tBuild a new .NET Core WinForms app with a tab control that have a few tab items. Or open the attached app. \r\n[WinFormsTabTest_AIWinKeyboardIssue.zip](https://github.com/dotnet/winforms/files/4473408/WinFormsTabTest_AIWinKeyboardIssue.zip)\r\n2.\tRun the app, and launch the Accessibility Insights For Windows (AIWin) tool at it. Verify that the UIA hierarchy seems reasonable. \r\n3.\tUse the AIWin keyboard shortcuts of Shift+Ctrl+F5/F6/F7/F8/F9 to move AIWin around the UIA tree particular ‘tab’ tree. For more details about the shortcuts behavior please visit https://accessibilityinsights.io/docs/en/windows/reference/keyboard.\r\n","Url":"https://github.com/dotnet/winforms/issues/3058","RelatedDescription":"Open issue \"UIA navigation to move backwards/forwards through AIWin(Accessibility Insights For Windows) keyboard combination Shift+Ctrl+F5/F6/F7/F8/F9 doesn't work with the TabControl\" (#3058)"},{"Id":"599273578","IsPullRequest":true,"CreatedAt":"2020-04-14T04:01:26","Actor":"dotnet-maestro[bot]","Number":"3057","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200413.10\r\n- **Date Produced**: 4/14/2020 2:46 AM\r\n- **Commit**: 13dce8d53393a7b839f9401ffa827e7046d71ce0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20210.10 to 5.0.0-preview.4.20213.10 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3057)","Url":"https://github.com/dotnet/winforms/pull/3057","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3057)"},{"Id":"597212197","IsPullRequest":true,"CreatedAt":"2020-04-14T02:38:52","Actor":"dotnet-maestro[bot]","Number":"3052","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200410.10\r\n- **Date Produced**: 4/11/2020 5:47 AM\r\n- **Commit**: 38c2d5513ce8cf584ef53b9971daec2763797169\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NetCore.ILAsm)\r\n- **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NETCore.App)\r\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.4.20205.13 to 5.0.0-preview.4.20210.10 (parent: Microsoft.NetCore.ILAsm)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3052)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3052","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3052)"},{"Id":"594872402","IsPullRequest":true,"CreatedAt":"2020-04-14T01:33:22","Actor":"RussKie","Number":"3040","RawContent":null,"Title":"fix: Hide icon when `ShowIcon = false`","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3022\r\n\r\n\r\n## Proposed changes\r\n\r\n- Correct a regression introduced in #695 when a condition was flipped that stopped setting form's [extended style flag `WS_EX_DLGMODALFRAME`](https://docs.microsoft.com/en-us/windows/win32/winmsg/extended-window-styles).\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomers now able to hide form's icon at runtime by setting `myform.ShowIcon = false`.\r\nWorkarounds involve either \r\n* setting an icon on a form to a transparent blank icon, or \r\n* performing an interop call to hide the icon _before_ hiding the icon:\r\n    ```cs\r\n    if (myform.ShowIcon)\r\n    {\r\n        int extendedStyle = (int)User32.GetWindowLong(myform.Handle, User32.GWL.EXSTYLE);\r\n        User32.SetWindowLong(myform.Handle, User32.GWL.EXSTYLE, (IntPtr)(extendedStyle | (int)User32.WS_EX.DLGMODALFRAME));\r\n    }\r\n\r\n    myform.ShowIcon =false;\r\n    ```\r\n\r\n## Regression? \r\n\r\n- Yes, introduced in .NET Core 3.0\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual tests in the integration test app\r\n- unit tests\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3040)","Url":"https://github.com/dotnet/winforms/pull/3040","RelatedDescription":"Closed or merged PR \"fix: Hide icon when `ShowIcon = false`\" (#3040)"},{"Id":"595279358","IsPullRequest":true,"CreatedAt":"2020-04-13T22:39:41","Actor":"vladimir-krestov","Number":"3041","RawContent":null,"Title":"[Regression] Fixing MonthCalendar NRE when MinDate is set","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3034 \r\nFixes #2475\r\nRelated PR #2975\r\n\r\n## Proposed changes\r\n\r\n- Add null-protection and conditions to avoid NullReferenceException throwing\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Correct work of MonthCalendar without crashes\r\n\r\n## Regression? \r\n\r\n- Yes, from 3.0\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI\r\n- Manual UI testing\r\n- Unit tests\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net Core 3.1.300-preview-015069\r\n- Microsoft Windows [Version 10.0.18363.720]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3041)","Url":"https://github.com/dotnet/winforms/pull/3041","RelatedDescription":"Closed or merged PR \"[Regression] Fixing MonthCalendar NRE when MinDate is set\" (#3041)"},{"Id":"598374649","IsPullRequest":true,"CreatedAt":"2020-04-11T23:47:19","Actor":"OliaG","Number":"3054","RawContent":null,"Title":"Update roadmap.md","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3054)","Url":"https://github.com/dotnet/winforms/pull/3054","RelatedDescription":"Open PR \"Update roadmap.md\" (#3054)"},{"Id":"598234703","IsPullRequest":false,"CreatedAt":"2020-04-11T10:04:57","Actor":"harborsiem","Number":"3053","RawContent":null,"Title":"Control.Margin values inside a TableLayoutPanel incorrect","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nLaufzeitumgebung:\r\n\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n  No \r\n\r\n**Problem description:**\r\n\r\nSome controls in groupBox1 are misaligned. The TableLayoutPanel inside the GroupBox should align all controls. The controls textBox4 and numericUpDown2 should have same Margin values to the Left and Right, because both have default Margin values.\r\nWhy the Margin.Top, Margin.Bottom differ to Margin.Left, Margin.Right ?\r\n\r\n\r\n**Expected behavior:**\r\nMargin values should have the Default values in this case.\r\n\r\n**Minimal repro:**\r\nSee Project TestControls.zip\r\n[TestControls.zip](https://github.com/dotnet/winforms/files/4464385/TestControls.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3053","RelatedDescription":"Open issue \"Control.Margin values inside a TableLayoutPanel incorrect\" (#3053)"},{"Id":"597081506","IsPullRequest":true,"CreatedAt":"2020-04-09T09:11:09","Actor":"v-chmart","Number":"3051","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200409","State":"closed","Body":"Localization update\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3051)","Url":"https://github.com/dotnet/winforms/pull/3051","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20200409\" (#3051)"},{"Id":"596911644","IsPullRequest":true,"CreatedAt":"2020-04-08T22:57:12","Actor":"paul1956","Number":"3050","RawContent":null,"Title":"Single instance","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2056\r\n\r\n## Proposed changes\r\nUse NamedPipes to support VB Single Instance\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nVB needs to support Single Instance applications, this supports existing Framework features including passing command line arguments from additional launches back to first instance.\r\n\r\n## Regression? \r\n- Yes I am fixing a regression\r\n\r\n## Risk\r\nNo automated tests are included until design review (it was tested manually). Also I only write tests in VB and all the tests here are written in C#.\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\nManual not ready to Merge. The logic is from Reference Source and Microsoft NamedPipes documentation examples.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft.WindowsDesktop.App 5.0.0-preview.1.20127.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3050)","Url":"https://github.com/dotnet/winforms/pull/3050","RelatedDescription":"Open PR \"Single instance\" (#3050)"},{"Id":"596476952","IsPullRequest":false,"CreatedAt":"2020-04-08T10:33:16","Actor":"John-Qiao","Number":"3049","RawContent":null,"Title":"String Collection Editor dialog is incorrect for PropertiesToLoad property in DirectorySearcher control","State":"open","Body":"**.NET Core Version:**\r\n\r\n5.0.100-preview.4.20202.8\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\n\r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen edit the PropertiesToLoad property for a DirectorySearcher control in PropertyGrid, the incorrect String Collection Editor dialog be opened.\r\n![SCE1](https://user-images.githubusercontent.com/45864985/79202365-18735200-7e6c-11ea-9f9a-9152d47297ab.png)\r\n\r\n**More info:**\r\n\r\nThis issue occurs in .NET Core 3.1 too.\r\n\r\n**Expected behavior:**\r\n\r\nThe correct String Collection Editor dialog should be opened.\r\n![Framework](https://user-images.githubusercontent.com/45864985/78774362-26862600-79c7-11ea-9ba8-71365e7d51b6.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Launch the attached project in VS and run it.\r\n2. Click the … edit button for PropertiesToLoad property in PropertyGrid.\r\n[WindowsFormsApp4.zip](https://github.com/dotnet/winforms/files/4449907/WindowsFormsApp4.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3049","RelatedDescription":"Open issue \"String Collection Editor dialog is incorrect for PropertiesToLoad property in DirectorySearcher control\" (#3049)"},{"Id":"596457084","IsPullRequest":false,"CreatedAt":"2020-04-08T09:59:26","Actor":"John-Qiao","Number":"3047","RawContent":null,"Title":"An error dialog pop-up when edit the DefaultCellStyle property in DataGridView control ","State":"open","Body":"**.NET Core Version:**\r\n\r\n5.0.100-preview.4.20202.8\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\n\r\nNo\r\n\r\n**Problem description:**\r\nWhen edit the cell style properties for a DataGridView control in PropertyGrid, an error dialog pop-up.  \r\n![5 0](https://user-images.githubusercontent.com/45864985/78771231-70b8d880-79c2-11ea-9df5-be1bcc110dde.png)\r\n\r\n\r\n**More info:**\r\n\r\n1. This issue occurs in all cell style properties: AlternatingRowsDefaultCellStyle, ColumnHeadersDefaultCellStyle, DefaultCellStyle, RowHeadersDefaultCellStyle and RowDefaultCellStyle.\r\n2. If target .NET Core project to 3.1, these proprties are grey and cannot edit. \r\n![3 1](https://user-images.githubusercontent.com/45864985/78771317-9219c480-79c2-11ea-9952-38cdd3716eec.png)\r\n\r\n**Expected behavior:**\r\n\r\nThe CellStyle Builder dialog should be opened.\r\n![Framework](https://user-images.githubusercontent.com/45864985/78771263-7b736d80-79c2-11ea-8300-1031325441fe.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Launch the attached project in VS and run it.\r\n2. Click the … edit button for AlternatingRowsDefaultCellStyle property in PropertyGrid.\r\n[Core5.0-TestApp.zip](https://github.com/dotnet/winforms/files/4474006/Core5.0-TestApp.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3047","RelatedDescription":"Open issue \"An error dialog pop-up when edit the DefaultCellStyle property in DataGridView control \" (#3047)"},{"Id":"595480545","IsPullRequest":true,"CreatedAt":"2020-04-08T05:25:51","Actor":"RussKie","Number":"3042","RawContent":null,"Title":"Update docs pertaining to feature requests","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3042)","Url":"https://github.com/dotnet/winforms/pull/3042","RelatedDescription":"Closed or merged PR \"Update docs pertaining to feature requests\" (#3042)"},{"Id":"596196642","IsPullRequest":true,"CreatedAt":"2020-04-07T23:48:35","Actor":"vatsan-madhavan","Number":"3045","RawContent":null,"Title":"Re-enable flow from dotnet/runtime","State":"closed","Body":"- Updates dependencies from `dotnet/runtime`\r\n- Includes a miscellaneous fix for how ILAsm tools are used. Without this, nuget restore failures happen. \r\n  - Defines `$(MicrosoftNETCoreILAsmVersion)` required by `Microsoft.NET.SDK.IL.targets`\r\n- Disables a couple of tests. \r\n  - Opened https://github.com/dotnet/winforms/issues/3046 to track this. \r\n\r\nThis is Part 1 (of 4) of changes needed to ingest updated runtime bits in WindowsDesktop. Once WinForms publishes to .NET 5 Dev channel, more changes are needed in dotnet/wpf and dotnet-wpf-int, and dotnet/windowsdesktop. \r\n\r\nIn addition to this, I've re-enabled the subscription from `dotnet/runtime` to `dotnet/winforms`\r\n```\r\nλ darc get-subscriptions --source-repo dotnet/runtime --target-repo dotnet/winforms\r\nhttps://github.com/dotnet/runtime (.NET 5 Dev) ==> 'https://github.com/dotnet/winforms' ('master')\r\n  - Id: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n  - Update Frequency: EveryBuild\r\n  - Enabled: True  ***** UPDATED  *****\r\n  - Batchable: False\r\n  - Merge Policies:\r\n    Standard\r\n```\r\n\r\n/cc @dotnet/wpf-developers \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3045)","Url":"https://github.com/dotnet/winforms/pull/3045","RelatedDescription":"Closed or merged PR \"Re-enable flow from dotnet/runtime\" (#3045)"},{"Id":"596212310","IsPullRequest":false,"CreatedAt":"2020-04-07T23:34:45","Actor":"vatsan-madhavan","Number":"3046","RawContent":null,"Title":"Fix and re-enable tests disabled by #3045","State":"open","Body":"https://github.com/dotnet/winforms/pull/3045 has disabled two tests. \r\n\r\nSome exception types seem to be thrown unwound - so instead of receiving `TargetInvocationExeption` the inner-exception type is directly observed. \r\n\r\nThese tests need to be investigated, fixed and re-enabled. \r\n\r\n/cc @RussKie, @AdamYoblick, @merriemcgaw, @dotnet/dotnet-winforms ","Url":"https://github.com/dotnet/winforms/issues/3046","RelatedDescription":"Open issue \"Fix and re-enable tests disabled by #3045\" (#3046)"},{"Id":"595612267","IsPullRequest":false,"CreatedAt":"2020-04-07T05:57:48","Actor":"Jessie-Zhang01","Number":"3043","RawContent":null,"Title":"[Accessibility]MAS 1.4.11: Luminosity contrast ratio of the border lines of the DataGridView control are less than 3:1","State":"open","Body":"* .NET Core Version:\r\n.Net Core 5.0.100-preview.4.20202.8 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?:\r\nYes\r\n\r\n**More Info:**\r\nThis issue cannot reproduce for text of DataGridView.\r\n\r\n**Minimal repro:**\r\n\r\n1. Install the Accessibility Insights from https://accessibilityinsights.io/en/downloads\r\n2. Open the attached ‘WindowsFormsApp3’ application in VS, then build and run it.\r\n3. Open the Accessibility Insights and select the Contrast of the directory on the left.Image\r\n4. Click on the color picker under Color1 and focus it to the border lines of the DataGridView.\r\n5. Click on the color picker under Color2 and focus it to the background of the DataGridView.\r\n\r\n**Actual behavior:**\r\nLuminosity contrast ratio of the border lines of the DataGridView control are less than 3:1.\r\n![image](https://user-images.githubusercontent.com/45864649/78634891-90bf9d80-78d7-11ea-8f89-c8b229512f33.png)\r\n\r\n**Expected behavior:**\r\nLuminosity contrast ratio of the border lines of the DataGridView control are greater than 3:1.","Url":"https://github.com/dotnet/winforms/issues/3043","RelatedDescription":"Open issue \"[Accessibility]MAS 1.4.11: Luminosity contrast ratio of the border lines of the DataGridView control are less than 3:1\" (#3043)"},{"Id":"594491364","IsPullRequest":true,"CreatedAt":"2020-04-05T14:42:53","Actor":"weltkante","Number":"3039","RawContent":null,"Title":"Fix DataObject.GetData issues","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3025\r\nContributes to #1268\r\n\r\n## Proposed changes\r\n\r\n- use ReleaseStgMedium for ownership handling as suggested by win32 docs\r\n- do not assume third party implementations of IDataObject.GetData return the medium which was asked for (Office sometimes ignores the medium the caller asks for and always returns the medium it happens to be using internally). Since Windows/OLE does not pose constraints on what the DataObject source returns WinForms needs to be robust and handle this case instead of crashing the whole process.\r\n- clean up dead code related to metafiles, most code supporting them is already gone\r\n\r\n## Customer Impact\r\n\r\n- no more crashing when asking Office for \"EnhancedMetafile\"\r\n\r\n## Regression? \r\n\r\n- Yes (earlier Desktop Framework versions which still supported metafiles did not crash; latest Desktop Framework however also crashes the whole process)\r\n\r\n## Risk\r\n\r\n- low\r\n  * For the scenario crashing the process there is no risk, (almost) nothing is worse than crashing the process\r\n  * Metafile support was already removed and did not work anyways. Removing dead code related to metafiles should not be a problem since it was not possible to retrieve them.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual test of scenario #3025 by copy/pasting a metafile from Word to .NET Core, ensuring it no longer crashes the process and instead properly delivers no content as expected.\r\n- Unit test which exercises the code path which was previously crashing\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3039)","Url":"https://github.com/dotnet/winforms/pull/3039","RelatedDescription":"Open PR \"Fix DataObject.GetData issues\" (#3039)"},{"Id":"596069316","IsPullRequest":false,"CreatedAt":"2020-04-05T10:50:44","Actor":"15092368540","Number":"3044","RawContent":null,"Title":"Can not find the file \"alg.exe\" with OpenFileDialog","State":"open","Body":"App with x86 build, then running in x64 System, OpenFileDialog's Filter properties don't work either,\r\nand can not find the file \"alg.exe\"\r\n\r\n.Net Framework and .Net Core have same problem\r\n\r\n[Test.zip](https://github.com/dotnet/core/files/4433456/Test.zip)\r\n\r\n![X86OpenFileDialog](https://user-images.githubusercontent.com/49462433/78472808-4f5fae80-776e-11ea-90c6-cbeb2fe1d8d3.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/3044","RelatedDescription":"Open issue \"Can not find the file \"alg.exe\" with OpenFileDialog\" (#3044)"},{"Id":"593360930","IsPullRequest":true,"CreatedAt":"2020-04-03T12:52:55","Actor":"Ryuugamine","Number":"3038","RawContent":null,"Title":"Fixing DataGridView's scrollbars shouldn't include their control type in their accessible names","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2965\r\n\r\n\r\n## Proposed changes\r\n\r\n- Added Accessible objects with a correct accessible name for ScrollBar classes\r\n- Added unit tests\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- With the fix available customer will be able to get correct information about the control using accessibility client apps.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n![image](https://user-images.githubusercontent.com/29531443/78363142-f18f6300-75c3-11ea-830c-60b8c8eaa132.png)\r\n\r\n### Before\r\n\r\n- \"Vertical scroll bar\" scroll bar\r\n\r\n### After\r\n\r\n- \"Vertical\" scroll bar\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect and Narrator\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- DotNet version: 5.0.0-preview.4.20180.8\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3038)","Url":"https://github.com/dotnet/winforms/pull/3038","RelatedDescription":"Open PR \"Fixing DataGridView's scrollbars shouldn't include their control type in their accessible names\" (#3038)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-16T05:30:52.1372998Z","RunDurationInMilliseconds":1095}