{"Data":{"GitHubIssues":{"Issues":[{"Id":"339103562","IsPullRequest":true,"CreatedAt":"2018-07-07T00:39:57","Actor":"rynowak","Number":"1092","RawContent":null,"Title":"Add startup for client/mono Blazor","State":"open","Body":"This change adds a host builder, and the startup pattern for client-side\r\nBlazor apps running in mono/wasm. This will help us align better with\r\nserver side Blazor.","Url":"https://github.com/aspnet/Blazor/pull/1092","RelatedDescription":"Open PR \"Add startup for client/mono Blazor\" (#1092)"},{"Id":"339034867","IsPullRequest":false,"CreatedAt":"2018-07-06T18:34:07","Actor":"FIVIL","Number":"1091","RawContent":null,"Title":"File upload","State":"open","Body":"Hi, i was wondering if it is possible to bind a input tag with type of file to a C# IFromFile in order to get a file for upload?\r\nand if not then how i should get a file from user and do some client side process on file and upload the result to server","Url":"https://github.com/aspnet/Blazor/issues/1091","RelatedDescription":"Open issue \"File upload\" (#1091)"},{"Id":"338835685","IsPullRequest":false,"CreatedAt":"2018-07-06T14:45:25","Actor":"doga6488","Number":"1088","RawContent":null,"Title":"How Can i trigger a child component's event from parent","State":"closed","Body":"Hi, I am working on version 0.4.0\r\nI know we can handle child component event's from its parent. But I am wondering that if can I do the opposite.Is there a way of function to do this?\r\nThanks in advance","Url":"https://github.com/aspnet/Blazor/issues/1088","RelatedDescription":"Closed issue \"How Can i trigger a child component's event from parent\" (#1088)"},{"Id":"338936828","IsPullRequest":true,"CreatedAt":"2018-07-06T13:20:14","Actor":"SteveSandersonMS","Number":"1090","RawContent":null,"Title":"Refactoring to prepare for remote rendering.","State":"open","Body":"This PR takes the parts of the `bots` branch that I think are clean and can exist separately from remote rendering, and will put them in `dev` so that the remaining remote rendering work becomes simpler.\r\n\r\n- Prepare for building multiple entrypoint variants of the .js library\r\n- Use async interop more consistently for rendering and event handling\r\n- Add binary serializer for RenderBatch with tests","Url":"https://github.com/aspnet/Blazor/pull/1090","RelatedDescription":"Open PR \"Refactoring to prepare for remote rendering.\" (#1090)"},{"Id":"338908449","IsPullRequest":false,"CreatedAt":"2018-07-06T11:43:13","Actor":"simonziegler","Number":"1089","RawContent":null,"Title":"Informational: Blazor works on iOS 12","State":"open","Body":"For future reference, I installed the iOS 12 beta on my iPad and Blazor no longer crashes in either Safari or Edge.","Url":"https://github.com/aspnet/Blazor/issues/1089","RelatedDescription":"Open issue \"Informational: Blazor works on iOS 12\" (#1089)"},{"Id":"338614233","IsPullRequest":true,"CreatedAt":"2018-07-06T10:56:22","Actor":"SteveSandersonMS","Number":"1085","RawContent":null,"Title":"Initial debugger support","State":"closed","Body":"This integrates with the debugger support that @kumpera has been working on. Although it looks like a big changeset, it's not really as big as it looks at first, because:\r\n\r\n 1. This PR also includes a Mono upgrade, which touches many .dlls\r\n 2. This PR also includes the Mono ws-proxy (debugging proxy) sources\r\n\r\n### How to use\r\n\r\n* Build a Blazor app in `Debug` configuration (i.e., the default for non-published apps)\r\n* Run it in Chrome\r\n* With the keyboard focus on the app (not in the dev tools, which you should probably close as it's less confusing that way), press the hotkey:\r\n    * Shift+Alt+D on Windows/Linux\r\n    * Shift+Cmd+D on macOS\r\n\r\nThis will open a debugger tab. After a couple of seconds, the debugger's *Sources* tab will show a list of the .NET assemblies in the app. You can expand these and find the `.cs`/`.cshtml` source files you want to debug. You can then set breakpoints, switch back to your app's tab, and cause the breakpoints to be hit. You can then single-step (F10) or resume (F8).\r\n\r\nYou have to be running Chrome with the debug port open. If you aren't doing so, it will detect that and give you instructions for fixing it.\r\n\r\n### Caveats\r\n\r\n**The debugger capabilities are very limited!** You can:\r\n\r\n * Single-step through the current method (F10) or resume (F8)\r\n * In the *Locals* display, observe the values of any local variables of type `int`/`string`/`bool`\r\n * See the call stack, including call chains that go from JS into .NET and vice-versa\r\n\r\n... but for now that is all! You *cannot* step into child methods (i.e., F11), observe the values of any locals that aren't an `int`/`string`/`bool`, observe the values of any class properties or fields, hover over variables to see their values, evaluate expressions in the console, step across async calls, or basically anything else.\r\n\r\n@kumpera has done some great work on tackling some of the hardest technical problems to enable source viewing, breakpoints, and stepping, but please be patient as completing the long tail of debugger features remains a significant task.\r\n\r\n### Issues\r\n\r\nAfter a minute left idle, the debugger will disconnect and you'll have to click \"Reconnect\" to continue. I know @kumpera was doing something to fix that. Not sure how close this is to being resolved.\r\n\r\n### Not implemented\r\n\r\nAny E2E test for launching and using the debugger. I started on one, but realised that WebDriver itself is using the Chrome debug port to automate the browser, so we can't also use it to control the debugger via ws-proxy. Maybe there is some way to hack both on at once, but it's not clear.","Url":"https://github.com/aspnet/Blazor/pull/1085","RelatedDescription":"Closed or merged PR \"Initial debugger support\" (#1085)"},{"Id":"337467558","IsPullRequest":false,"CreatedAt":"2018-07-05T18:28:57","Actor":"uazo","Number":"1068","RawContent":null,"Title":"Blazor Language Service extension: System.InvalidOperationException 'Sequence contains more than one element'","State":"closed","Body":"Lastest  Blazor Language Service extension\r\nDotNet Version: 2.1.300-rtm-008823\r\nVisual Studio 2017 15.7.4\r\n\r\n\r\nwriting:\r\n\r\n```\r\n<input type=\"text\" bind=\"@this.ModelState.Bind(x=>\" />\r\n```\r\n\r\nthrow exception\r\n\r\n```\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(TagHelperPropertyIntermediateNode node)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(IntermediateNode parent, TagHelperPropertyIntermediateNode node)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(RazorCodeDocument codeDocument, DocumentIntermediateNode documentNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(RazorCodeDocument codeDocument, DocumentIntermediateNode documentNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(RazorProjectItem projectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser.BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\nthe error is in BindLoweringPass.cs\r\n\r\n```\r\n        private static IntermediateToken GetAttributeContent(TagHelperPropertyIntermediateNode node)\r\n        {\r\n            if (node.Children[0] is HtmlContentIntermediateNode htmlContentNode)\r\n            {\r\n                // This case can be hit for a 'string' attribute. We want to turn it into\r\n                // an expression.\r\n                var content = \"\\\"\" + ((IntermediateToken)htmlContentNode.Children.Single()).Content + \"\\\"\";\r\n                return new IntermediateToken() { Kind = TokenKind.CSharp, Content = content };\r\n            }\r\n            else if (node.Children[0] is CSharpExpressionIntermediateNode cSharpNode)\r\n            {\r\n                // This case can be hit when the attribute has an explicit @ inside, which\r\n                // 'escapes' any special sugar we provide for codegen.\r\n                return ((IntermediateToken)cSharpNode.Children.Single());    * <--- HERE! *\r\n            }\r\n            else\r\n            {\r\n                // This is the common case for 'mixed' content\r\n                return ((IntermediateToken)node.Children.Single());\r\n            }\r\n        }\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1068","RelatedDescription":"Closed issue \"Blazor Language Service extension: System.InvalidOperationException 'Sequence contains more than one element'\" (#1068)"},{"Id":"338674311","IsPullRequest":true,"CreatedAt":"2018-07-05T18:28:55","Actor":"rynowak","Number":"1087","RawContent":null,"Title":"Fix #1068","State":"closed","Body":"This changes the bind lowering pass to be more tolerant of unexpected\r\nand invalid content.","Url":"https://github.com/aspnet/Blazor/pull/1087","RelatedDescription":"Closed or merged PR \"Fix #1068\" (#1087)"},{"Id":"337844308","IsPullRequest":false,"CreatedAt":"2018-07-05T16:17:05","Actor":"anirudhagupta","Number":"1074","RawContent":null,"Title":"Blazor support removed, if you do this in installer.","State":"closed","Body":"I assume you have installed the blazor extension and asp.net workload in visual studio.\r\n\r\nnow go to  setup: \r\n\r\nuncheck the asp.net and check the asp.net extension again, Blazor is gone.","Url":"https://github.com/aspnet/Blazor/issues/1074","RelatedDescription":"Closed issue \"Blazor support removed, if you do this in installer.\" (#1074)"},{"Id":"338622890","IsPullRequest":true,"CreatedAt":"2018-07-05T16:15:02","Actor":"rynowak","Number":"1086","RawContent":null,"Title":"Fix #954 - use weak typing for 'event handlers'","State":"closed","Body":"This change introduces a mechanism for bypassing type checking and then\r\nuses for the 'event handlers'. The event handler tag helpers have some\r\nideosyncratic behaviors and rely on overloading at the render tree\r\nbuilder level.","Url":"https://github.com/aspnet/Blazor/pull/1086","RelatedDescription":"Closed or merged PR \"Fix #954 - use weak typing for 'event handlers'\" (#1086)"},{"Id":"338595832","IsPullRequest":false,"CreatedAt":"2018-07-05T15:29:25","Actor":"brunohbrito","Number":"1084","RawContent":null,"Title":"DOM Content ready","State":"closed","Body":"When the DOM Content  is ready for javascript code, the content from Blazor is still loading.\r\n\r\nThere is any kinda feature to monitor when the Blazor content was loaded from Javascript or from Blazor itself? \r\n\r\nFor better compatibility with js api's.\r\n\r\nI made a Workaround to create an example:\r\n\r\n```\r\nprotected override void OnAfterRender()\r\n{\r\n      RegisteredFunction.Invoke<bool>(\"DocumentReady\");\r\n}\r\n```\r\n\r\nat a js file:\r\n```\r\nBlazor.registerFunction(\"DocumentReady\", function () {\r\n    if (document.getElementById('someItem') == null)\r\n        return;\r\n   ......\r\n});\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1084","RelatedDescription":"Closed issue \"DOM Content ready\" (#1084)"},{"Id":"338132263","IsPullRequest":false,"CreatedAt":"2018-07-05T15:28:02","Actor":"StevenTCramer","Number":"1077","RawContent":null,"Title":"Render when state changes","State":"closed","Body":"I have simple component that shows the `UserName`.  Another authentication js library displays an IFrame and in the `OnLogin` Method I update the `UserName`.  But because no event in the UI triggers this, the component does not Re-Render.\r\n\r\nHow can I get this to re-render when the state changes?\r\n\r\nJust to confirm to myself the UserName was set I added the button which when clicking will trigger a re-render and properly show the UserName.\r\n```\r\n@inherits AppHeaderModel\r\n<header class=\"top-row px-4\">\r\n  <span class=\"ml-md-auto\">@UserName</span>\r\n  <button class=\"btn btn-primary\" onclick=\"@StateHasChanged\">Click me</button>\r\n</header>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1077","RelatedDescription":"Closed issue \"Render when state changes\" (#1077)"},{"Id":"338579689","IsPullRequest":false,"CreatedAt":"2018-07-05T15:27:16","Actor":"BernhardGlueck","Number":"1083","RawContent":null,"Title":"Mono execution mode","State":"closed","Body":"Quick question: As to my knowledge WebAssembly does not allow emitting code at runtime to be compiled, i am assuming that Mono is running in Interpreter mode on the client side ? \r\n\r\nThis would mean bascially that for CPU bound code this would be about 10-100x slower than \"native\" JIT compiled javascript correct ? ","Url":"https://github.com/aspnet/Blazor/issues/1083","RelatedDescription":"Closed issue \"Mono execution mode\" (#1083)"},{"Id":"338545295","IsPullRequest":true,"CreatedAt":"2018-07-05T12:13:29","Actor":"SteveSandersonMS","Number":"1081","RawContent":null,"Title":"Update to Mono Linker d18d497","State":"closed","Body":"Prerequisite for integrating with debugger, because the updated linker knows how to emit symbol files.","Url":"https://github.com/aspnet/Blazor/pull/1081","RelatedDescription":"Closed or merged PR \"Update to Mono Linker d18d497\" (#1081)"},{"Id":"338376413","IsPullRequest":false,"CreatedAt":"2018-07-05T12:12:42","Actor":"tylerhartwig","Number":"1078","RawContent":null,"Title":"DllNotFoundException: libc on SignalR connection creation","State":"closed","Body":"I'm attempting to use SignalR with Blazor (I know this might be unexplored territory).\r\n\r\nI'm getting a `DllNotFoundException: libc` in trying to create a SignalR `HubConnection`.\r\n\r\nit looks like this issue has already come up previously, and been solved in [#515](https://github.com/aspnet/Blazor/issues/515).\r\n\r\nI have created a minimal example to display this as well: \r\n[TestSignalR.zip](https://github.com/aspnet/Blazor/files/2164330/TestSignalR.zip)\r\n\r\nI have attempted to use the Blazor HttpMessageHandler in the example, previously I did not setup SignalR with that, and got the same exception.\r\n\r\nI'm running 0.4.0 for Blazor, .NET Core 2.1.301, OS X High Sierra, and Chrome.\r\n\r\nHappy to provide further details, I hope I've covered relevant information.\r\n\r\n\r\nEdit: just noticed #20, which may be relevant to this as well, if this issue will be covered by that, I can simply close this","Url":"https://github.com/aspnet/Blazor/issues/1078","RelatedDescription":"Closed issue \"DllNotFoundException: libc on SignalR connection creation\" (#1078)"},{"Id":"338462735","IsPullRequest":false,"CreatedAt":"2018-07-05T12:12:07","Actor":"doga6488","Number":"1079","RawContent":null,"Title":"Blazor.MonoRuntime.targets throws error while compiling (after reference a dll)","State":"closed","Body":"Hi, I am using Blazor version 0.4.0.\r\nI add a reference( a .dll file) to my project and compiler throws that error:\r\nThe command \"dotnet\"C:\\Users\\Hp\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.1.0\\targets\\Blazor.MonoRuntime.targets(429,5): error MSB3073: The command \"dotnet \"C:\\Users\\Hp\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/illink/illink.dll\" -c link -u link -t --verbose -d \"C:\\Users\\Hp\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/mono/bcl/\" -d \"C:\\Users\\Hp\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.4.0\\targets\\../tools/mono/bcl/Facades/\"\r\n....\r\n\r\nthis is not the whole part of error message.Rest of the error messages are just like that.Thanks in advance","Url":"https://github.com/aspnet/Blazor/issues/1079","RelatedDescription":"Closed issue \"Blazor.MonoRuntime.targets throws error while compiling (after reference a dll)\" (#1079)"},{"Id":"338546220","IsPullRequest":false,"CreatedAt":"2018-07-05T12:10:05","Actor":"frcom","Number":"1082","RawContent":null,"Title":"FluentValidation fails to peform in browser","State":"closed","Body":"FluentValidation fails - https://www.nuget.org/packages/FluentValidation/7.6.103\r\n\r\nWhen you invoke Validate method you've got null refference exception error!!!\r\n\r\nModel:\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace ThirdBlazor.Shared.Models\r\n{\r\n    public class FeedbackItem: BaseEntity<long>\r\n    {\r\n        public string Title { get; set; }\r\n        public string Body { get; set; }\r\n        public DateTime Date { get; set; }\r\n    }\r\n}\r\n\r\nValidator:\r\n\r\nusing FluentValidation;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing ThirdBlazor.Shared.Models;\r\n\r\nnamespace ThirdBlazor.Shared.Validators\r\n{\r\n    public class FeedBackItemValidator: AbstractValidator<FeedbackItem>\r\n    {\r\n        public FeedBackItemValidator()\r\n        {\r\n            RuleFor(x => x.Title).NotEmpty().WithMessage(\"Please specify the title\");\r\n            RuleFor(x => x.Body).NotEmpty().WithMessage(\"Please fill the body\");\r\n\r\n        }\r\n    }\r\n}\r\n\r\nPage:\r\n\r\n...\r\n\r\n@functions\r\n{\r\n    private string Title { get; set; } = \"\";\r\n    private string Body { get; set; } = \"\";\r\n    private IList<ValidationFailure> failures = new List<ValidationFailure>();\r\n    private IEnumerable<FeedbackItem> Feedbacks { get; set; } = new List<FeedbackItem>();\r\n\r\n    private async Task SaveFeedBack()\r\n    {\r\n        var feedBackItem = new FeedbackItem() { Title = Title, Body = Body, Date = DateTime.Now };\r\n        if (IsValid(feedBackItem))\r\n        {\r\n            await _feedBackRepository.Create(feedBackItem);\r\n            Feedbacks = await GetFeedbacks();\r\n            Title = null;\r\n            Body = null;\r\n        }\r\n\r\n    }\r\n\r\n    private bool IsValid(FeedbackItem feedbackItem)\r\n    {\r\n        var validator = new FeedBackItemValidator();\r\n        ValidationResult results = validator.Validate(feedbackItem); // **Exception raises error !!!**\r\n        bool success = results.IsValid;\r\n        failures = results.Errors;\r\n\r\n        return success;\r\n\r\n    }\r\n\r\n    private async Task<IEnumerable<FeedbackItem>> GetFeedbacks()\r\n    {\r\n        return (await _feedBackRepository.GetItems()).OrderBy(f => f.Date).Where(f => !String.IsNullOrWhiteSpace(f.Title));\r\n    }\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        Feedbacks = await GetFeedbacks();\r\n    }\r\n}\r\n\r\nstack trace:\r\n\r\nWASM: ********* try validate **********\r\nMonoPlatform.ts:202 WASM: [System.NullReferenceException] Object reference not set to an instance of an object.\r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Interpreter.LightLambda.MakeRunDelegateCtor (System.Type delegateType) <0x1e5e7d8 + 0x00284> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Interpreter.LightLambda.GetRunDelegateCtor (System.Type delegateType) <0x1e57650 + 0x00048> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Interpreter.LightLambda.MakeDelegate (System.Type delegateType) <0x1e574c8 + 0x0000e> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate (System.Runtime.CompilerServices.IStrongBox[] closure) <0x1e56b98 + 0x00024> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Interpreter.LightDelegateCreator.CreateDelegate () <0x1e56a28 + 0x0000a> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Expression`1[TDelegate].Compile (System.Boolean preferInterpretation) <0x2066478 + 0x00018> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Linq.Expressions.Expression`1[TDelegate].Compile () <0x2066440 + 0x0000a> in <4dfa26dc32414d839d6b2edcd296561e>:0 \r\nMonoPlatform.ts:202 WASM:   at FluentValidation.Internal.AccessorCache`1+<>c__DisplayClass1_0`1[T,TProperty].<GetCachedAccessor>b__0 (FluentValidation.Internal.AccessorCache`1+Key[T] k) <0x2066378 + 0x00014> in <1d7771a908a5449eb77180bf881ed568>:0 \r\nMonoPlatform.ts:202 WASM:   at System.Collections.Concurrent.ConcurrentDictionary`2[TKey,TValue].GetOrAdd (TKey key, System.Func`2[T,TResult] valueFactory) <0x2065b18 + 0x00074> in <2bc39ea8f14c400fb27e28b5063ad8dc>:0 \r\nMonoPlatform.ts:202 WASM:   at FluentValidation.Internal.AccessorCache`1[T].GetCachedAccessor[TProperty] (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression`1[TDelegate] expression) <0x2035918 + 0x0006e> in <1d7771a908a5449eb77180bf881ed568>:0 \r\nMonoPlatform.ts:202 WASM:   at FluentValidation.Internal.PropertyRule.Create[T,TProperty] (System.Linq.Expressions.Expression`1[TDelegate] expression, System.Func`1[TResult] cascadeModeThunk) <0x202aab8 + 0x00018> in <1d7771a908a5449eb77180bf881ed568>:0 \r\nMonoPlatform.ts:202 WASM:   at FluentValidation.AbstractValidator`1[T].RuleFor[TProperty] (System.Linq.Expressions.Expression`1[TDelegate] expression) <0x202a790 + 0x0002a> in <1d7771a908a5449eb77180bf881ed568>:0 \r\nMonoPlatform.ts:202 WASM:   at ThirdBlazor.Shared.Validators.FeedBackItemValidator..ctor () <0x200c0d0 + 0x0005c> in <2071bd57f77b400a970ddeb8c80697c2>:0 \r\nMonoPlatform.ts:202 WASM:   at ThirdBlazor.Client.Pages.Feedback.IsValid (ThirdBlazor.Shared.Models.FeedbackItem feedbackItem) <0x1b89668 + 0x00016> in <0c27d62d698e481bb8eb0c0d37409510>:0 \r\nMonoPlatform.ts:202 WASM:   at ThirdBlazor.Client.Pages.Feedback.SaveFeedBack () <0x1fbb9b0 + 0x00096> in <0c27d62d698e481bb8eb0c0d37409510>:0 \r\n﻿\r\n\r\n​\r\n","Url":"https://github.com/aspnet/Blazor/issues/1082","RelatedDescription":"Closed issue \"FluentValidation fails to peform in browser\" (#1082)"},{"Id":"338463387","IsPullRequest":false,"CreatedAt":"2018-07-05T12:08:14","Actor":"danieldegtyarev","Number":"1080","RawContent":null,"Title":"Remove bind- prefix","State":"closed","Body":"The proposition is to change this ugly\r\n\r\n``` html\r\n   ...\r\n   <Slider bind-Start=@From bind-End=@To />\r\n   ...\r\n```\r\n\r\nTo obvious and clear\r\n\r\n``` html\r\n   ...\r\n   <Slider Start=@From End=@To />\r\n   ...\r\n```\r\n\r\nBlazor should automaticaly bind / set it depending on existance `StartChanged` / `EndChanged` events and setters of `From` / `To` properties.","Url":"https://github.com/aspnet/Blazor/issues/1080","RelatedDescription":"Closed issue \"Remove bind- prefix\" (#1080)"},{"Id":"338018998","IsPullRequest":false,"CreatedAt":"2018-07-04T20:39:23","Actor":"chamikasandamal","Number":"1076","RawContent":null,"Title":"Tree shaking","State":"closed","Body":"Please have a look on how angular tree shaking works and how it work in angular ivy. that will help to reduce the framework size.","Url":"https://github.com/aspnet/Blazor/issues/1076","RelatedDescription":"Closed issue \"Tree shaking\" (#1076)"},{"Id":"337980375","IsPullRequest":false,"CreatedAt":"2018-07-04T05:59:45","Actor":"AnkitSharma-007","Number":"1075","RawContent":null,"Title":"Sending data from Javascript function to blazor method","State":"closed","Body":"While invoking a C# method from javascript using \"Blazor.invokeDotNetMethod\" , how can we pass a data ( preferably JSON) from Javascript method to a C# method.\r\n\r\nThis method signature do not have a place for any arguments.\r\n\r\n`Blazor.invokeDotNetMethod({  \r\n     type: {  \r\n         assembly: 'abc',  \r\n         name:   'abc.xyz' \r\n     },  \r\n     method: {  \r\n         name: 'foo'  \r\n     }  \r\n }) `\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1075","RelatedDescription":"Closed issue \"Sending data from Javascript function to blazor method\" (#1075)"},{"Id":"337806721","IsPullRequest":false,"CreatedAt":"2018-07-03T09:03:05","Actor":"SteveSandersonMS","Number":"1073","RawContent":null,"Title":"Enable control over event propagation and default actions","State":"open","Body":"There are lots of scenarios where this is needed. See descriptions in #715.\r\n\r\nSince we don't want to rely on synchronous APIs, the solution will probably be a variation on event registration syntax, e.g.,\r\n\r\n    <button onclick=@MyHandler onclick-stop-propagation=\"true\" />\r\n\r\nWe still need to design what terminology to use (e.g., \"propagation\" vs \"bubbling\") and what features to include (e.g., whether there is also control over \"preventDefault\").","Url":"https://github.com/aspnet/Blazor/issues/1073","RelatedDescription":"Open issue \"Enable control over event propagation and default actions\" (#1073)"},{"Id":"337599332","IsPullRequest":false,"CreatedAt":"2018-07-03T08:56:46","Actor":"uazo","Number":"1071","RawContent":null,"Title":"Incorrect values in disposeComponent (BrowserRenderer.ts)","State":"closed","Body":"Some strange value after last commit (I think #1052)\r\n\r\n![browserrenderer ts error](https://user-images.githubusercontent.com/29201891/42177132-e663a630-7e2b-11e8-9d85-11e435585c8c.png)\r\n\r\nRenderer.RenderInExistingBatch seems correct, but SharedMemoryRenderBatch.disposedComponentIdsEntry returns invalid values.","Url":"https://github.com/aspnet/Blazor/issues/1071","RelatedDescription":"Closed issue \"Incorrect values in disposeComponent (BrowserRenderer.ts)\" (#1071)"},{"Id":"337670511","IsPullRequest":true,"CreatedAt":"2018-07-03T08:56:03","Actor":"uazo","Number":"1072","RawContent":null,"Title":"Fix for #1071","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1072","RelatedDescription":"Closed or merged PR \"Fix for #1071\" (#1072)"},{"Id":"337456964","IsPullRequest":false,"CreatedAt":"2018-07-02T15:02:25","Actor":"doga6488","Number":"1067","RawContent":null,"Title":"How can I pass a value to a  razor page which is generated by another razor page","State":"closed","Body":"Hi I'm new with Blazor.I am using v.0.4.0.Here are 2 screenshots that may describe my question better.\r\n\r\n\r\n<img width=\"758\" alt=\"adsiz2\" src=\"https://user-images.githubusercontent.com/26219239/42157751-4745d444-7df7-11e8-8ad3-f10f5726a630.png\">\r\n\r\nAt the back of the page I create an object with the value of textboxes,comboxes etc. and append it to the list via addtolist() method which is triggered when a button is clicked.\r\n@functions{\r\n\r\n\r\n    public List<Myclass> mylist = new List<Myclass>();\r\n    \r\n    private String Name;\r\n    private String Coordinate;\r\n    /* ... other attributes .. */\r\n    public void {    \r\n            _myclass nloc = new Myclass(Name, Coordinate/* other attributes*/);\r\n     }\r\n\r\nAfter that I want to list  the list of that classes(mylist) from another razor page like that\r\n\r\n<img width=\"777\" alt=\"adsiz\" src=\"https://user-images.githubusercontent.com/26219239/42158128-455e5b3c-7df8-11e8-8792-af496d655934.png\">\r\n\r\nIs there a way or a funtion to do this or ,I know Razor pages may have parameters in blazor, is there such a thing like return value or something?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1067","RelatedDescription":"Closed issue \"How can I pass a value to a  razor page which is generated by another razor page\" (#1067)"},{"Id":"337554328","IsPullRequest":true,"CreatedAt":"2018-07-02T14:59:13","Actor":"uazo","Number":"1070","RawContent":null,"Title":"[WIP] ModelState/DataAnnotation library","State":"open","Body":"I've written a form validation library that use the standard ComponentModel.DataAnnotation and I've added a test page in StandaloneApp.\r\n\r\nthe library it's very simple and allow sharing models with dataannotations between blazor and backend (ref #17).\r\n\r\nall the logic is in the ``ModelStateDictionary<T>`` class (so isn't in the form, as #970) and allow code like this\r\n\r\n````\r\n    var ModelState = new ModelStateDictionary<TestModel>(new TestModel())\r\n\r\n\r\n        <div class=\"col-md-8 col-sm-8\">\r\n            <input type=\"text\" bind=\"@ModelState[x => x.TextValue]\" class=\"form-control\" />\r\n            <span class=\"text-danger\">@ModelState.ValidationFor(x=> x.TextValue)</span>\r\n        </div>\r\n\r\n        <button onclick=\"@(() => this.UpdateModel())\">Update model</button>\r\n\r\n\r\n    protected virtual void UpdateModel()\r\n    {\r\n        this.ValidateModel();\r\n        if (this.ModelState.IsValid)\r\n        {\r\n            this.ModelState.Update();\r\n        }\r\n    }\r\n````\r\n\r\nSince `<input>` tag values are always strings, ModelStateDictionary does an automatic type conversion of all values using `TypeConverter` (since it's available in netstandard2.0): putting an invalid value (like a non convertible string into number) will show an error automatically.\r\nFor now it's support short, int, long, datetime, float, double and nullable\r\n\r\nModelStateDictionary can update the Model via `Update(T model)` function.\r\n\r\nThe library support custom validation (with virtual `OnCustomValidateModel` and `AddModelError`).\r\n\r\nIt's a starting point (no xml comments or test cases), but seems work.","Url":"https://github.com/aspnet/Blazor/pull/1070","RelatedDescription":"Open PR \"[WIP] ModelState/DataAnnotation library\" (#1070)"},{"Id":"337321427","IsPullRequest":false,"CreatedAt":"2018-07-02T14:36:27","Actor":"simonziegler","Number":"1064","RawContent":null,"Title":"Question: getting component with no parameters to render on update","State":"closed","Body":"Hi I have a custom component that can pull all its data from the state object, meaning that I call it like this:\r\n\r\n`<div> <MyComponent /> </div>`\r\n\r\nI have added `state.OnUserChange += StateHasChanged;` to the Component's `OnInit` function, however when `StateHasChanged()` is called, MyComponent does not render. Within MyComponent I display properties held within the `state` class that were updated prior to calling `StateHasChanged()`.\r\n\r\nI can force an update by passing an otherwise pointless parameter to MyComponent, but this is a bit clunky. Any ideas?\r\n\r\nMany thanks,     Simon","Url":"https://github.com/aspnet/Blazor/issues/1064","RelatedDescription":"Closed issue \"Question: getting component with no parameters to render on update\" (#1064)"},{"Id":"337487837","IsPullRequest":false,"CreatedAt":"2018-07-02T11:56:23","Actor":"floreseken","Number":"1069","RawContent":null,"Title":"Combine MVC razor pages with Blazor pages","State":"open","Body":"I guess lots of us are now developing MVC applications and at some point want to convert those to Blazor.\r\n\r\nI think I would be convenient if Blazor supports some sort of migration path by making it possible to combine Blazor and MVC pages. This will make it possible to gradually migrate your app, page by page.\r\n\r\nCurrently if there is no route registered with a Blazor component, Blazor will throw an exception, if the router would then try to just load the url I think we are almost there.. Would this be feasible?\r\n\r\nI've got some sort of workaround running with iframes in a razorpage loading the MVC page, but that just feels dirty..\r\n\r\nAll ideas welcome..","Url":"https://github.com/aspnet/Blazor/issues/1069","RelatedDescription":"Open issue \"Combine MVC razor pages with Blazor pages\" (#1069)"},{"Id":"337329567","IsPullRequest":false,"CreatedAt":"2018-07-02T08:51:25","Actor":"ghidello","Number":"1065","RawContent":null,"Title":"Removing any IDisposable component from a list triggers the disposal of the last item of the list","State":"closed","Body":"Hi, I have a component implementing the IDisposable interface that receives an ID parameter and logs it to the console during the disposal process. \r\nI tried to use it in a foreach loop where an instance of the component is added for every element of a list. Adding a single item and removing it works fine and the correct ID is shown in the console. \r\nWhen more than one item is present, removing one of them correctly hides it from the UI but the console will always report the ID of the last element in the list as the disposed one.\r\n\r\nI pushed a sample project [here](https://github.com/ghidello/IDisposableTest) but to reproduce the behaviour you can use this component:\r\n```csharp\r\n  // DisposableComponent.cshtml\r\n  @implements IDisposable\r\n  \r\n  <li>@Id</li>\r\n  \r\n  @functions\r\n  {\r\n    [Parameter]\r\n    int Id { get; set; }\r\n  \r\n    public void Dispose()\r\n    {\r\n      Console.WriteLine($\"Disposing item {Id}\");\r\n    }\r\n  }\r\n```\r\nAnd use it in a page:\r\n```csharp\r\n  @page \"/\"\r\n  <p>\r\n    <button class=\"btn btn-primary\" onclick=\"@Add\">Add</button>\r\n    <button class=\"btn btn-primary\" onclick=\"@Remove\">Remove first</button>\r\n  </p>\r\n  <ul>\r\n    @foreach (var item in Items)\r\n    {\r\n      <DisposableComponent Id=\"@item\" />\r\n    }\r\n  </ul>\r\n  \r\n  @functions\r\n  {\r\n      private int counter = 5;\r\n      public IList<int> Items = new List<int> {1, 2, 3, 4, 5};\r\n  \r\n      public void Add() => Items.Add(++counter);\r\n  \r\n      public void Remove()\r\n      {\r\n        if (Items.Count == 0) return;\r\n        Console.WriteLine($\"Removing item {Items[0]}\");\r\n        Items.RemoveAt(0);\r\n      }\r\n  }\r\n```\r\nPressing the remove button you'll see the first item disappear but the number 5 will be logged in the console by the dispose method.\r\n\r\nAm I doing something odd?\r\n\r\nAnyway, thank you so much for this amazing and refreshing technology!","Url":"https://github.com/aspnet/Blazor/issues/1065","RelatedDescription":"Closed issue \"Removing any IDisposable component from a list triggers the disposal of the last item of the list\" (#1065)"},{"Id":"337410151","IsPullRequest":false,"CreatedAt":"2018-07-02T08:50:17","Actor":"FIVIL","Number":"1066","RawContent":null,"Title":"Partial view","State":"closed","Body":"Hi, is it possible to use razor partial views in blazor??","Url":"https://github.com/aspnet/Blazor/issues/1066","RelatedDescription":"Closed issue \"Partial view\" (#1066)"},{"Id":"337284936","IsPullRequest":false,"CreatedAt":"2018-07-01T11:47:15","Actor":"montyclt","Number":"1063","RawContent":null,"Title":"Firing onchange before painting on input","State":"open","Body":"Hello everyone,\r\n\r\nI have an input that I need that the user only writes in upper case.\r\n\r\nI tried to do the following:\r\n\r\n```\r\n<input value=\"@Name\" onchange=\"@ChangeName\" />\r\n```\r\n\r\n```\r\nvoid ChangeName(UIChangeEventArgs e)\r\n{\r\n    var value = (string)e.Value;\r\n\r\n    Name = value.ToUpper();\r\n}\r\n```\r\n\r\nThe result:\r\n\r\nThe user writes in lowercase and when the user left focus, then the content transform to upper.\r\n\r\nI tried too a hardcode value of Name property and left ChangeName method in blank like this:\r\n\r\n```\r\n<input class=\"form-control\" value=\"@Name\"/>\r\n```\r\n\r\n```\r\nstring Name = \"Foo\";\r\n\r\nvoid ChangeName(UIChangeEventArgs e)\r\n{\r\n    // \r\n} \r\n```\r\n\r\nI expected the original value of input return to \"Foo\", but when I leave the focus, the changed value stayed in the input.\r\n\r\nIs possible make the value of input doesn't change if the value of `value` property doesn't change even if user type letters? (like `readonly` property)\r\n\r\nIs possible to fire the onchange method before painting the input value to get in the input the value directly transformed while writing instead on lose focus? (like ReactJS)","Url":"https://github.com/aspnet/Blazor/issues/1063","RelatedDescription":"Open issue \"Firing onchange before painting on input\" (#1063)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-07T05:30:02.7758323Z","RunDurationInMilliseconds":1269}