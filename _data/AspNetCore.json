{"Data":{"Blog":{"FeedItems":[{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null},{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null},{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6821524919","Type":"IssuesEvent","CreatedAt":"2017-11-07T16:59:56","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2272","RelatedDescription":"Opened issue \"Kestrel startup issue - address already in use\" (#2272) at aspnet/Home","RelatedBody":"@istvanko filed this here: https://github.com/dotnet/core/issues/1062\r\n\r\nWe host some microservices in Azure using ASP.Net Core 2.0 framework and as we noticed, after some days, the services are recycled automatically although Always on is turned on, but the restart doesn't work all the time and our services remain stopped.\r\n\r\nWe enabled the logging in Azure and we found the below log entry:\r\n\r\n`2017-11-06 23:27:28.337 +00:00 [Critical] Microsoft.AspNetCore.Server.Kestrel: **Unable to start Kestrel.**\r\nSystem.IO.IOException: **Failed to bind to address http://127.0.0.1:3119: address already in use.** ---> Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.AddressInUseException: Error -4091 EADDRINUSE address already in use ---> Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -4091 EADDRINUSE address already in use\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getsockname(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetSockIPEndPoint()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.ListenTcp(Boolean useFileHandle)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.CreateListenSocket()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.<>c.<StartAsync>b__8_0(Listener listener)\r\n   at 'Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.CallbackAdapter'1.<>c.<.cctor>b__3_1(Object callback, Object state)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n--- End of stack trace from previous location where exception was thrown ---`\r\n\r\nDetailed stack trace available in the document:\r\n[69a2cc3935e9dc939ab7e2d17b47888fef8e50149a09de2203f3b52f2432e924_applicationLog.txt](https://github.com/dotnet/core/files/1450091/69a2cc3935e9dc939ab7e2d17b47888fef8e50149a09de2203f3b52f2432e924_applicationLog.txt)\r\n\r\nThe issue is quite annoying since it happens in the production system once every week.\r\n\r\nWe noticed another issue last week, when the dotnet command received invalid arguments which might have connection with this issue. \r\n\r\nIn general these issues happen in case of Azure infrastructure maintenance or in case of remote file storage unavailability, etc.\r\n\r\n![image](https://user-images.githubusercontent.com/33455058/32497034-8565c63a-c3cb-11e7-8010-699fdbe1a375.png)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6816633207","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:18:18","Actor":"bigswede74","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2271","RelatedDescription":"Opened issue \"Predefined type 'System.ValueTuple is not defined or imported\" (#2271) at aspnet/Home","RelatedBody":"ASP.NET Core Web Application targeting .net 4.7.1 cannot use System.ValueTuple.\r\n\r\nRepro:\r\n\r\n1. Create a new ASP.NET Core Web Application that targets .net 4.7.1\r\n2. Add a class that has a tuple\r\n3. Observe errors.\r\n-Cannot define a class or member that utilizes tuples because the compiler required type 'System.Runtime.CompilerServices.TupleElementNamesAttribute' cannot be found. Are you missing a reference?\r\n-Predefined type 'System.ValueTuple`2' is not defined or imported\r\n\r\n"},{"Id":"6815564029","Type":"IssuesEvent","CreatedAt":"2017-11-06T16:39:39","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2268","RelatedDescription":"Closed issue \"Precompiled views not happening for self-contained apps\" (#2268) at aspnet/Home","RelatedBody":"I noticed startup time was absolutely terrible for my self-contained mvc application. I created a empty mvc project to try to repro. \r\n\r\n`dotnet new mvc`\r\n\r\nWhen I `dotnet publish` I get a folder with a PrecompiledViews.dll and the app starts really fast.\r\nWhen I `dotnet publish -r win-x64` I don't see the PrecompiledViews.dll and my app takes 3-4 seconds to start each time.\r\n\r\nWhat do I need to do to get precompiled views for my self contained mvc application?\r\n\r\nI tried adding:\r\n\r\n```\r\n<MvcRazorCompileOnPublish>true</MvcRazorCompileOnPublish>\r\n<PreserveCompilationContext>true</PreserveCompilationContext>\r\n```\r\n\r\nTo my project and that didn't seem to have any effect."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6829265664","Type":"IssuesEvent","CreatedAt":"2017-11-08T23:35:54","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1096","RelatedDescription":"Closed issue \"How to Configure SignalR with Azure Redis Backplane\" (#1096) at aspnet/SignalR","RelatedBody":"Hi there,\r\n\r\nthis might not be the right forum but i dont know here else to ask this quesiton. I am using asp.net core with SignalR alpha 2. my web app is hosted in Azure and trying to use Azure Redis Cache for backplane. So far i have only found the following:\r\n\r\nservices.AddSignalR().AddRedis();\r\n\r\nNo idea how to add the Azure Redis cache connection string.  without the connection string i get (on console window)\r\ninfo: Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager[0]\r\n      Connecting to redis endpoints:\r\n\r\nAnd exception on route.MapHub<myhub>(\"myhub\");\r\n\r\nStackExchange.Redis.RedisConnectionException: 'It was not possible to connect to the redis server(s); to create a disconnected multiplexer, disable AbortOnConnectFail. SocketFailure on PING'\r\n\r\nplease help :("},{"Id":"6829104022","Type":"IssuesEvent","CreatedAt":"2017-11-08T22:51:17","Actor":"MarkOMeara123","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1099","RelatedDescription":"Opened issue \"SignalR .net Client HubConnection memory leak\" (#1099) at aspnet/SignalR","RelatedBody":"Hello\r\n\r\nThere appears a memory leak in the HubConnection.cs. Review line 35 : \r\n`private readonly CancellationTokenSource _connectionActive = new CancellationTokenSource();`\r\n\r\nThis is not disposed in the DisposeAsyncCore() method (line 126).\r\n\r\nTo replicate, the below code in a loop and review the accumulation of CancellationTokenSource objects in memory.\r\n\r\n```\r\n var connection = new HubConnectionBuilder()\r\n               .WithUrl(URL)\r\n               .WithConsoleLogger()\r\n               .Build();\r\n\r\nvar connection.DisposeAsync().Wait(1000); \r\n```\r\nCan this be corrected please, or a workaround offered?\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6829048486","Type":"IssuesEvent","CreatedAt":"2017-11-08T22:37:20","Actor":"Grauenwolf","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7036","RelatedDescription":"Opened issue \"Allow the use of exceptions instead of IActionResult - Needed for Swagger, RAML, etc.\" (#7036) at aspnet/Mvc","RelatedBody":"Here is an example of problematic code:\r\n\r\n        public async Task<IActionResult> DoSomething(Contract contract)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n\r\n                var updatedContract = await _Service.SaveAsync(contract);\r\n             return Ok(updatedContract);\r\n        }\r\n\r\nBecause the return type is a generic value instead of a specific one there is no way for IDL generators such as Swagger or RAML to determine what the response format will be. \r\n\r\nFurthermore, this eliminates type checking of the return value. If updatedContract is the wrong type, the compiler won't catch the error.\r\n"},{"Id":"6827885606","Type":"IssuesEvent","CreatedAt":"2017-11-08T18:30:51","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7035","RelatedDescription":"Opened issue \"Support new HTML5 input types\" (#7035) at aspnet/Mvc","RelatedBody":"The following [HTML5 input types](https://www.w3schools.com/html/html_form_input_types.asp) are currently not handled \r\n- [ ] 1. color\r\n- [ ] 2. number (with input restrictions like min, max, required etc.) - @dougbu Can you confirm that this is the case?\r\n- [ ] 3. range\r\n- [ ] 4. search\r\n\r\n\r\n\r\n"},{"Id":"6827706025","Type":"IssuesEvent","CreatedAt":"2017-11-08T17:54:18","Actor":"jbagga","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7034","RelatedDescription":"Opened issue \"Support input type \"week\"\" (#7034) at aspnet/Mvc","RelatedBody":"Similar to #6615 \r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6829501012","Type":"PullRequestEvent","CreatedAt":"2017-11-09T00:48:33","Actor":"tmerkel","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1499","RelatedDescription":"Opened pull request \"Password validation failure does not propagate\" (#1499) at aspnet/Identity","RelatedBody":"If validation fails, but no errors were returned in the Errors collection, add a default so the failure result propagates."},{"Id":"6828381404","Type":"IssuesEvent","CreatedAt":"2017-11-08T20:12:39","Actor":"AfkAtm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1498","RelatedDescription":"Opened issue \"Using Azure Active Directory OAuth with Identity ASP.NET Core 2.0\" (#1498) at aspnet/Identity","RelatedBody":"As part of the built in libraries that comes with ASP.NET Core 2.0 there is the ability to add OAuth using Microsoft accounts into the identity model.  The same way you can add Facebook, Google or Twitter.  I've used these before without issues and they are really easy to set up.  However, I've ran into no end of trouble trying to implement Azure Active Directory OAuth tying into the Identity model.  \r\n\r\nI'm not sure what I'm doing wrong as I've modeled my custom classes off of other OAuth providers and have done a great deal of research into AAD OAuth and interacting with it.  However, no matter what I do my ClaimsIdentity ends up being empty and SigninManager returns null when trying to pick up ExternalLogin information.  \r\n\r\nI've given more details on my issue over on Stack Overflow as I'm not sure if there is some misunderstanding of how this code should work on my end or if there is an issue with identity and playing with Azure Active Directory (which is why I'm adding this issue).  \r\nhttps://stackoverflow.com/questions/47188066/using-azure-active-directory-oauth-with-identity-model-in-asp-net-core-2-0"},{"Id":"6828315862","Type":"IssuesEvent","CreatedAt":"2017-11-08T19:59:06","Actor":"Triwaters","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1497","RelatedDescription":"Opened issue \"multipe nvarchar(450) fields unsuitable for clustered index / primary key\" (#1497) at aspnet/Identity","RelatedBody":"The worst offender is dbo.AspNetUserLogins, with three (3) nvarchar(450) fields making up the primary key. SQL Server balks at this and it's a design flaw that contents that can legally fit in these fields could (together) make the record unsavable, due to a violation of the 900-byte maximum length for clustered indexes.\r\n\r\nI can imagine this is all rather baked into the system at this point, but it's a design flaw in two ways:\r\n1) it can lead to legal record data-wise not being saved due to index violations, and\r\n2) For larger sets of data, it's horribly inefficient\r\n\r\nAll that having been said, I suppose in practice \"this will never be a problem\" with regard to (1), since the fields in practice are populated with relatively small guids, and \"this will never be a problem\" with regard to (2) because most systems don't have more than a few thousand logins, and often fewer than 100, I suppose.\r\n\r\nThe other two tables affected by this (as in, SQL Server throws a fit when you try to create the index) are:\r\ndbo.AspNetUserRoles (requesting 1,800 bytes in index space per record)\r\ndbo.AspNetUserTokens (requesting 1,800 bytes in index space per record)\r\n\r\nMy recommended solution is that fields be reduced to more ordinary sizes, going forward, and primary keys be defaulted to integers."},{"Id":"6818347076","Type":"IssuesEvent","CreatedAt":"2017-11-07T04:53:28","Actor":"mkArtak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1496","RelatedDescription":"Opened issue \"[Question] HttpContext?.User?.Identity?.Name casing differs when run on Mac OS vs Windows\" (#1496) at aspnet/Identity","RelatedBody":"Hi.\r\n\r\nI have a controller action, which uses current user's name internally. While running on Windows, I got used to getting the result of HttpContext?.User?.Identity?.Name in uppercase. However, just discovered, that the same API returns the value in lowercase on Mac.\r\n\r\nThe project runs on the latest ASPNET Core framework.\r\n\r\nIs this by design ?\r\n\r\nThanks,\r\nArtak"},{"Id":"6817205366","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:23:45","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1494","RelatedDescription":"Closed issue \"GenerateChangePhoneNumberTokenAsync too long!\" (#1494) at aspnet/Identity","RelatedBody":"I am use identity add a phone number, and generate an token, but when I send sms, the supplier told me the token it's too long! \r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431720-7f0b35c0-c30f-11e7-8873-d7b637c15451.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/20808494/32431770-a8b9438a-c30f-11e7-9f12-9128f52f746d.png)\r\n\r\nCould provide a method it can generate some  number code ?\r\n\r\n\r\n"},{"Id":"6817199822","Type":"IssuesEvent","CreatedAt":"2017-11-06T22:22:26","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1467","RelatedDescription":"Closed issue \"Add alternative ASP.NET Identity RavenDB Provider to the README file\" (#1467) at aspnet/Identity","RelatedBody":"What's the process for adding an alternative provider? There already is a RavenDB Provider listed in the repository description, I'd like to list my package [https://github.com/maqduni/AspNetCore.Identity.RavenDb](https://github.com/maqduni/AspNetCore.Identity.RavenDb) there as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nShould I list it in parenthesis by the existing link? like,\r\n\r\n- ASP.NET Identity RavenDB Provider ([alternative provider by Maqduni](https://github.com/maqduni/AspNetCore.Identity.RavenDb))"},{"Id":"6817198534","Type":"PullRequestEvent","CreatedAt":"2017-11-06T22:22:08","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1486","RelatedDescription":"Merged pull request \"Add alternative RavenDB provider by maqduni.\" (#1486) at aspnet/Identity","RelatedBody":"There already is a RavenDB Provider listed in the repository description, I'd like to list my package https://github.com/maqduni/AspNetCore.Identity.RavenDb there as well, it's also the most downloaded and complete RavenDB provider.\r\n\r\nRelated issue https://github.com/aspnet/Identity/issues/1467"},{"Id":"6815233098","Type":"IssuesEvent","CreatedAt":"2017-11-06T15:42:45","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1495","RelatedDescription":"Opened issue \"Email Confirmation Checked Before Password Issue\" (#1495) at aspnet/Identity","RelatedBody":"If I require an email to be confirmed before logging in, this check happens before the password is validated, and if the Email is not confirmed then it shortcircuits the password check [here](https://github.com/aspnet/Identity/blob/52dfb0217597ae18efd5958e380fe8e56cde3163/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L138).\r\n\r\nThis has me a little nervous about a small account enumeration risk.  If we have a decent number of users who have not confirmed their email (for who knows what reason), then someone can just start bruteforcing usernames and Identity will return back that the email needs to be confirmed first.  Then the attacker knows that they have a valid user.  Sure they still can't login, until the user confirms their email, but it still lets them grab hold of a valid username.\r\n\r\nWhat I really want to happen is to return that \"Email is not confirmed\" message *only* if the password they entered was correct.  Otherwise, I just want to return back the default \"Invalid Login\" message to not expose the account they hit was a valid user."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6829800974","Type":"IssuesEvent","CreatedAt":"2017-11-09T02:28:25","Actor":"robbieknuth","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2153","RelatedDescription":"Opened issue \"Consider including a way to override the IHttpRequestIdentifierFeature implementation\" (#2153) at aspnet/KestrelHttpServer","RelatedBody":"It would be easiest to use Kestrel's identifier, but we already have a well formatted request identifier, so changing to a new format isn't an option. Setting the trace identifier on the HttpContext isn't particularly helpful for logging because the request start scope was started before any middleware is called, so all logs use the traceidentifer set by Kestrel. We have to wrap our requests with a using and a logging scope to get the correlation we need. This doesn't always work, though, if there are errors before that part of the pipeline is reached.\r\n\r\nI've not been able to figure out how to tell Kestrel to use a different implementation. It's possible that I'm missing something obvious but I've looked through the code for a while and tried a bunch of different things, no dice.\r\n\r\nI would prefer not to fork and hack it. I think this feature would be generally useful, it can probably be done in a way that doesn't impacg perf, as the existing implementation is already pay-to-play."},{"Id":"6829145734","Type":"PullRequestEvent","CreatedAt":"2017-11-08T23:01:58","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2152","RelatedDescription":"Merged pull request \"Put Libuv.FunctionalTests into a separate test group\" (#2152) at aspnet/KestrelHttpServer","RelatedBody":"Preparation for https://github.com/aspnet/BuildTools/pull/417 - \"Execute test assemblies in parallel\".\r\n\r\nLibUv.FunctionalTests fails when run in parallel with other test assemblies. Here are some examples of failures:\r\n\r\nA handful of address binding tests fail with EACCESS.\r\n```\r\nFailed   RegisterAddresses_IPv4Port80_Success(addressInput: \"http://localhost\", testUrl: \"http://127.0.0.1\")\r\nError Message:\r\n System.IO.IOException : Failed to bind to address http://localhost:80.\r\n---- System.AggregateException : One or more errors occurred.\r\n-------- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4092 EACCES permission denied\r\n-------- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4092 EACCES permission denied\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindLocalhostAsync>d__6.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\AddressBinder.cs:line 174\r\n```\r\n\r\nEINVAL\r\n```\r\nFailed   CanListenToOpenTcpSocketHandle\r\nError Message:\r\n System.Exception : Unexpected critical error.\r\n---- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4071 EINVAL invalid argument\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Testing.TestApplicationErrorLogger.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter) in C:\\dev\\aspnet\\KestrelHttpServer\\test\\shared\\TestApplicationErrorLogger.cs:line 51\r\n```\r\n\r\nOn .NET Core\r\n```\r\nThe active test run was aborted. Reason: FailFast: ThreadId is incorrect\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvMemory.Validate(Boolean closed) in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\UvMemory.cs:line 84\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.loop_close(UvLoopHandle handle) in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\LibuvFunctions.cs:line 111\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle.ReleaseHandle() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\UvLoopHandle.cs:line 48\r\n```"},{"Id":"6828883426","Type":"PullRequestEvent","CreatedAt":"2017-11-08T21:59:54","Actor":"natemcmaster","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2152","RelatedDescription":"Opened pull request \"Put Libuv.FunctionalTests into a separate test group\" (#2152) at aspnet/KestrelHttpServer","RelatedBody":"Preparation for https://github.com/aspnet/BuildTools/pull/417 - \"Execute test assemblies in parallel\".\r\n\r\nLibUv.FunctionalTests fails when run in parallel with other test assemblies. Here are some examples of failures:\r\n\r\nA handful of address binding tests fail with EACCESS.\r\n```\r\nFailed   RegisterAddresses_IPv4Port80_Success(addressInput: \"http://localhost\", testUrl: \"http://127.0.0.1\")\r\nError Message:\r\n System.IO.IOException : Failed to bind to address http://localhost:80.\r\n---- System.AggregateException : One or more errors occurred.\r\n-------- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4092 EACCES permission denied\r\n-------- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4092 EACCES permission denied\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.<BindLocalhostAsync>d__6.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\AddressBinder.cs:line 174\r\n```\r\n\r\nEINVAL\r\n```\r\nFailed   CanListenToOpenTcpSocketHandle\r\nError Message:\r\n System.Exception : Unexpected critical error.\r\n---- Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException : Error -4071 EINVAL invalid argument\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Testing.TestApplicationErrorLogger.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter) in C:\\dev\\aspnet\\KestrelHttpServer\\test\\shared\\TestApplicationErrorLogger.cs:line 51\r\n```\r\n\r\nOn .NET Core\r\n```\r\nThe active test run was aborted. Reason: FailFast: ThreadId is incorrect\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvMemory.Validate(Boolean closed) in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\UvMemory.cs:line 84\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.loop_close(UvLoopHandle handle) in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\LibuvFunctions.cs:line 111\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle.ReleaseHandle() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Transport.Libuv\\Internal\\Networking\\UvLoopHandle.cs:line 48\r\n```"},{"Id":"6825543550","Type":"IssuesEvent","CreatedAt":"2017-11-08T10:52:01","Actor":"npehrsson","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2151","RelatedDescription":"Opened issue \"BadHttpRequestException at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.RejectRequestLine\" (#2151) at aspnet/KestrelHttpServer","RelatedBody":"We're experiencing some strange behavior a couple of times per day.\r\n\r\nThe behavior is that we are receiving exceptions about bad requests somewhere in the core when it tries to parse the Http Method.\r\n\r\nWe see it from both an integration and from random web UI requests.\r\nGood to know is that these errors are always occurring during higher load (from the integration) and in bursts.\r\n\r\nWe have not been able to reproduce it, the burst of errors occur 1-2 a day and almost every day.\r\n\r\nThe integration is using HttpClient.PostAsync, we have tried to resend one of those requests (the integration is logging what it sends) that have failed, but we couldn't reproduce it that way.\r\n\r\nStack\r\n```\r\n0\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.RejectRequestLine\",\"level\":0,\"line\":0}\r\n1\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.GetUnknownMethod\",\"level\":1,\"line\":0}\r\n2\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine\",\"level\":2,\"line\":0}\r\n3\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser`1.ParseRequestLine\",\"level\":3,\"line\":0}\r\n4\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.TakeStartLine\",\"level\":4,\"line\":0}\r\n5\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame.ParseRequest\",\"level\":5,\"line\":0}\r\n6\r\n{\"assembly\":\"Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\"method\":\"Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext\",\"level\":6,\"line\":0}\r\n```\r\n\r\nSome examples of exception messages:\r\n```\r\nConnection id \"0HL95LTL4S3HH\" bad request data: \"Invalid request line: '0UNION%20RIDGE%20RD.&Customer%20Address%20State=KY&Customer%20Address%20Zip%20Code=40601&Customer%20Gender=M&Customer%20Name=WIL...'\"\r\n\r\nConnection id \"0HL95LTL4S3HL\" bad request data: \"Invalid request line: 'ustomer%20Address%20Line%201=3733%20KIESTCREST%20ST&Customer%20Address%20State=TX&Customer%20Address%20Zip%20Code=75233&Customer...'\"\r\n\r\n-- This is typical from the UI this is probably apart of an cookie we expect\r\nConnection id \"0HL95LTL4S3HQ\" bad request data: \"Invalid request line: 'zk61GfzMxephxR0aOpKFPEmm0WmhhqWqYuJdxQ-O2Odb5PMgh2r4ClOE8X5Zke511b8r4yvAp_E2NFcNTZ6c9oZzDfBh253Z_Y-fiBCEofO_P3wZUz9X6Al-Ey-m8jCI...'\"\r\n```\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6830094866","Type":"PullRequestEvent","CreatedAt":"2017-11-09T04:23:29","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1759","RelatedDescription":"Opened pull request \"[Design] Added TagHelper discovery to Razor project systen\" (#1759) at aspnet/Razor","RelatedBody":"#1744 \r\n\r\n@rynowak @NTaylorMullen \r\n\r\nPending:\r\n- Need to add the `OnBuildComplete` trigger for the project system.\r\n- React to these changes on WTE\r\n- Tests"},{"Id":"6828428168","Type":"PullRequestEvent","CreatedAt":"2017-11-08T20:22:54","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1758","RelatedDescription":"Opened pull request \"Move away from WPF text view connection listener.\" (#1758) at aspnet/Razor","RelatedBody":"- Had to add a new NuGet feed to access latest VS bits.\r\n- Updated tests to react to new ITextViewConnectionListener.\r\n\r\n#1735"},{"Id":"6827789837","Type":"IssuesEvent","CreatedAt":"2017-11-08T18:11:32","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1700","RelatedDescription":"Closed issue \"IntelliSense not working in razor views in different output folders than \"bin\"\" (#1700) at aspnet/Razor","RelatedBody":"I have many projects in my solution, and to improve the build performance, I changed all output projects to a folder that I created. However, the IntelliSense from razor views stopped to work. I spent many hours to discovery the issue, and is because the IntelliSense only work with the output project setting to the \"bin\" folder. I would like to know if it a bug or if exists something to do in this case.\r\n\r\nI'm using VS 2015."},{"Id":"6820418080","Type":"IssuesEvent","CreatedAt":"2017-11-07T13:52:06","Actor":"strich","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1757","RelatedDescription":"Opened issue \"Razor View NullReferenceException Stacktraces are very unhelpful\" (#1757) at aspnet/Razor","RelatedBody":"This is based upon an issue I originally raised over on the EFCore repo: https://github.com/aspnet/EntityFrameworkCore/issues/10221#issuecomment-342475957\r\n\r\nThe following line of code had a nullref exception in it that caused the view to fail to present me with a stacktrace view:\r\n```c#\r\n@Model.Logins.Count [<a asp-controller=\"Manage\" asp-action=\"ExternalLogins\">Manage</a>]\r\n```\r\n\r\nStacktrace:\r\n```\r\nfail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n      Connection id \"0HL955T12F4U6\", Request id \"0HL955T12F4U6:0000000E\": An unhandled exception was thrown by the application.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at AspNetCore._Views_Manage_Index_cshtml.<ExecuteAsync>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderPageCoreAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderPageAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.<ExecuteAsync>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.<ExecuteAsync>d__21.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResultFilterAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.<Invoke>d__11.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()\r\n```\r\n\r\nThis is a debug enabled build with developer exceptions turned on. This stacktrace was incredibly unhelpful in directing me to the root cause. In my original issue someone noted that there is an open issue to improve the readability of stacktraces (https://github.com/aspnet/Common/pull/274), but AFAIK it doesn't help actually point to that line of code in question."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6762343502","Type":"IssuesEvent","CreatedAt":"2017-10-25T07:30:40","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Opened issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6780432155","Type":"IssuesEvent","CreatedAt":"2017-10-29T14:10:51","Actor":"smitpatel","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Closed issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi @javiercn, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6779929600","Type":"IssuesEvent","CreatedAt":"2017-10-29T07:24:18","Actor":"searus","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6777426880","Type":"IssuesEvent","CreatedAt":"2017-10-27T22:12:32","Actor":"javiercn","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/275","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications\" (#275) at aspnet/Announcements","RelatedBody":"# Improved end to end testing support for MVC applications\r\n\r\nIn this release we have created a new package Microsoft.AspNetCore.Mvc.Testing to help streamline\r\nend to end testing of MVC applications using TestServer.\r\n\r\nThis package takes care of some of the typical pitfalls users run into when trying to test MVC applications\r\nusing TestServer.\r\n* It copies the .deps file from your project into the test assembly bin folder.\r\n* It sets the content root the application's project root so that static files and views can be found.\r\n* It provides a class `WebApplicationTestFixture<TStartup>` that streamlines the bootstrapping of your app on\r\nTestServer.\r\n\r\n## Sample end to end in memory test using xUnit\r\n\r\n```csharp\r\nusing Xunit;\r\n\r\nnamespace MyApplication.FunctionalTests\r\n{\r\n    public class MyApplicationFunctionalTests : IClassFixture<WebApplicationTestFixture<Startup>>\r\n    {\r\n        public TempDataInSessionTest(WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Fact]\r\n        public async Task GetHomePage()\r\n        {\r\n            // Arrange & Act\r\n            var response = await Client.GetAsync(\"/\");\r\n\r\n            // Assert\r\n            Assert.Equal(HttpStatusCodes.OK, response.StatusCode);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Important notes\r\n\r\n### Shadow copying needs to be disabled\r\nFor end to end in-memory tests to work properly, shadow copying needs to be disabled on your test framework of choice, as it causes the tests to execute in a different folder than the output folder.\r\nFor instructions on how to do this on xUnit see https://xunit.github.io/docs/configuring-with-json.html.\r\n\r\n### Your app needs to have a CreateWebHostBuilderMethod on the Program class\r\nBy convention our ```WebApplicationTestFixture<TStartup>``` tries to find a method with the signature ```public static IWebHostBuilder CreateWebHostBuilder(string [] args)``` on the entry point class of the assembly where Startup is located. (Typically your Program class) If you don't have this method ```WebApplicationTestFixture<TStartup>``` won't be able to initialize your app in the same way it is done on a normal run. You can configure the WebHostBuilder yourself by overriding CreateWebHostBuilder on ```WebApplicationTestFixture<TStartup>```.\r\n\r\n### The test infrastructure needs to know the content root of the application under test\r\nTo set the content root for your app, ```WebApplicationTestFixture<TStartup>``` first locate your solution file ```(.sln)``` and then make a guess about where project might be. The Content Root of the application is defined by convention as ```<<SolutionFolder>>/<<ProjectAssemblyName>>```. For example, based on the folder structure defined below, the content root of the application is defined as ```c:\\work\\MyApp```. This is important because if not set correctly to the root folder of your application under test all views and static files will not be found.\r\n\r\n```\r\nc:/work/\r\n    MyApp.sln\r\n    MyApp/MyApp.csproj\r\n    MyApp.FunctionalTests/MyApp.FunctionalTests.csproj\r\n```\r\n\r\nThe process for determining the folder to use as the content root when running the tests is the following:\r\n* ```WebApplicationTestFixture<TStartup>``` starts on the bin folder of the test project, in the example above ```c:/work/MyApp.FunctionalTests/MyApp.FunctionalTests/bin/<<Configuration>>/<<Framework>>```\r\n* It navigates to the parent folder until it finds a ```.sln``` file.\r\n* It appends ```<<AssemblyName>>``` to the folder in which it found the ```.sln``` file and set that as the content root.\r\n\r\nIf you happen to be using a different convention for the layout of your projects, you can inherit from WebApplicationTestFixture and pass in the relative path from your solution to the application under test when calling the constructor. For example ```\"/src/MyApp\"```\r\n\r\n```csharp\r\npublic class MyAppTestFixture<TStartup> : WebApplicationTestFixture<TStartup> where TStartup : class\r\n{\r\n    public MyAppTestFixture(string solutionRelativePath)\r\n        : base(\"/src/MyApp\") { }\r\n}\r\n```"},{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-11-09T05:30:10.3590386Z","RunDurationInMilliseconds":8433}