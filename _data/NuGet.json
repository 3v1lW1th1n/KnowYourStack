{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11185296134","Type":"IssuesEvent","CreatedAt":"2020-01-01T00:07:53","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7794","RelatedDescription":"Opened issue \"Permission system does n+1 queries to fetch users' organizations\" (#7794) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nThis line performs n+1 SQL queriers, where n is the number of organizations the user is in:\r\n\r\nhttps://github.com/NuGet/NuGetGallery/blob/90f8fbea00217db2e5d918e140621c0aea0ca12d/src/NuGetGallery.Services/Permissions/ActionRequiringEntityPermissions.cs#L79\r\n\r\nFor example, if I am a user in two organizations, the following SQL queries will be generated:\r\n\r\n```sql\r\n// Get my memberships\r\nexec sp_executesql N'SELECT \r\n    [Extent1].[OrganizationKey] AS [OrganizationKey], \r\n    [Extent1].[MemberKey] AS [MemberKey], \r\n    [Extent1].[IsAdmin] AS [IsAdmin]\r\n    FROM [dbo].[Memberships] AS [Extent1]\r\n    WHERE [Extent1].[MemberKey] = @EntityKeyValue1',N'@EntityKeyValue1 int',@EntityKeyValue1=1\r\n\r\n// Load the first organization\r\nexec sp_executesql N'SELECT \r\n    ''0X0X'' AS [C1], \r\n    [Extent1].[Key] AS [Key], \r\n    [Extent2].[EmailAddress] AS [EmailAddress], \r\n    [Extent2].[UnconfirmedEmailAddress] AS [UnconfirmedEmailAddress], \r\n    [Extent2].[Username] AS [Username], \r\n    [Extent2].[EmailAllowed] AS [EmailAllowed], \r\n    [Extent2].[IsDeleted] AS [IsDeleted], \r\n    [Extent2].[EnableMultiFactorAuthentication] AS [EnableMultiFactorAuthentication], \r\n    [Extent2].[NotifyPackagePushed] AS [NotifyPackagePushed], \r\n    [Extent2].[EmailConfirmationToken] AS [EmailConfirmationToken], \r\n    [Extent2].[PasswordResetToken] AS [PasswordResetToken], \r\n    [Extent2].[PasswordResetTokenExpirationDate] AS [PasswordResetTokenExpirationDate], \r\n    [Extent2].[CreatedUtc] AS [CreatedUtc], \r\n    [Extent2].[LastFailedLoginUtc] AS [LastFailedLoginUtc], \r\n    [Extent2].[FailedLoginCount] AS [FailedLoginCount]\r\n    FROM  [dbo].[Organizations] AS [Extent1]\r\n    INNER JOIN [dbo].[Users] AS [Extent2] ON [Extent1].[Key] = [Extent2].[Key]\r\n    WHERE [Extent1].[Key] = @EntityKeyValue1',N'@EntityKeyValue1 int',@EntityKeyValue1=3\r\n\r\n//Load the second organization\r\nexec sp_executesql N'SELECT \r\n    ''0X0X'' AS [C1], \r\n    [Extent1].[Key] AS [Key], \r\n    [Extent2].[EmailAddress] AS [EmailAddress], \r\n    [Extent2].[UnconfirmedEmailAddress] AS [UnconfirmedEmailAddress], \r\n    [Extent2].[Username] AS [Username], \r\n    [Extent2].[EmailAllowed] AS [EmailAllowed], \r\n    [Extent2].[IsDeleted] AS [IsDeleted], \r\n    [Extent2].[EnableMultiFactorAuthentication] AS [EnableMultiFactorAuthentication], \r\n    [Extent2].[NotifyPackagePushed] AS [NotifyPackagePushed], \r\n    [Extent2].[EmailConfirmationToken] AS [EmailConfirmationToken], \r\n    [Extent2].[PasswordResetToken] AS [PasswordResetToken], \r\n    [Extent2].[PasswordResetTokenExpirationDate] AS [PasswordResetTokenExpirationDate], \r\n    [Extent2].[CreatedUtc] AS [CreatedUtc], \r\n    [Extent2].[LastFailedLoginUtc] AS [LastFailedLoginUtc], \r\n    [Extent2].[FailedLoginCount] AS [FailedLoginCount]\r\n    FROM  [dbo].[Organizations] AS [Extent1]\r\n    INNER JOIN [dbo].[Users] AS [Extent2] ON [Extent1].[Key] = [Extent2].[Key]\r\n    WHERE [Extent1].[Key] = @EntityKeyValue1',N'@EntityKeyValue1 int',@EntityKeyValue1=5\r\n```\r\n\r\n### Expected behavior\r\nThe user's organizations should be fetched with a single SQL query.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"11179954302","Type":"PullRequestEvent","CreatedAt":"2019-12-30T19:28:23","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7793","RelatedDescription":"Merged pull request \"[Token Scanning] Fix typo in emails\" (#7793) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11179789509","Type":"PullRequestEvent","CreatedAt":"2019-12-30T18:51:30","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7793","RelatedDescription":"Opened pull request \"[Token Scanning] Fix typo in emails\" (#7793) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11178136610","Type":"IssuesEvent","CreatedAt":"2019-12-30T13:15:49","Actor":"gsscoder","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7792","RelatedDescription":"Opened issue \"A new version of a package shows previous icon\" (#7792) at NuGet/NuGetGallery","RelatedBody":"I've recently pushed a release with a new icon, but I still se the previous one on NuGet.org.\r\n\r\n**package link**:\r\nhttps://www.nuget.org/packages/CSharpx/1.2.3-rc2\r\n\r\n**github of the project**:\r\nhttps://github.com/gsscoder/csharpx\r\n\r\nI had to use deprecated `PackageIconUrl` because, it's seem impossible to point a file with `PackageIcon`.\r\n\r\nThanks in advance."},{"Id":"11168712951","Type":"PullRequestEvent","CreatedAt":"2019-12-27T23:14:12","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7791","RelatedDescription":"Opened pull request \"Remove unnecessary SQL query\" (#7791) at NuGet/NuGetGallery","RelatedBody":"The display package page gets data through lazy loading. One such lazily loaded queries was a repeat:\r\n\r\n1. Eagerly load all versions of a package: https://github.com/NuGet/NuGetGallery/blob/90f8fbea00217db2e5d918e140621c0aea0ca12d/src/NuGetGallery/Controllers/PackagesController.cs#L800\r\n1. Lazily load all versions of a package: https://github.com/NuGet/NuGetGallery/blob/90f8fbea00217db2e5d918e140621c0aea0ca12d/src/NuGetGallery/Helpers/ViewModelExtensions/DisplayPackageViewModelFactory.cs#L63\r\n\r\nGiven that the second query is redundant, I piped the data from the first query down to the view model factory.\r\n\r\nPart of https://github.com/NuGet/Engineering/issues/2910"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11184817192","Type":"IssuesEvent","CreatedAt":"2019-12-31T20:24:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8204","RelatedDescription":"Closed issue \"Clearing cache\" (#8204) at NuGet/Home","RelatedBody":"There is a button \"Clear All Nuget Cache(s)\" in the NuGet Package Manager options dialog. By clicking on it all packages are removed from cache. But in most of cases we need remove only previous versions of each package. Could you add an extra button with desired behavior?"},{"Id":"11183697893","Type":"IssuesEvent","CreatedAt":"2019-12-31T14:34:06","Actor":"daveaglick","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8983","RelatedDescription":"Opened issue \"GeneratePackageOnBuild is transitive through ProjectReference\" (#8983) at NuGet/Home","RelatedBody":"It appears that `GeneratePackageOnBuild` is transitive through a `ProjectReference`. For example,\r\n- Given a project A with `GeneratePackageOnBuild`, `a.nupkg` will be generated in the output folder of A\r\n- Given a project B with a `ProjectReference` to A, `a.nupkg` will _also_ be generated in the output folder of B\r\n\r\nThis seems like a bug (though maybe it's by design?). It's particularly problematic in CI scenarios where you want to build all projects and then crawl for packages to push. Because of this behavior, all your test project outputs will have the packages of the projects they're testing. Likewise, you'll end up with multiple copies of packages if any projects reference other projects.\r\n\r\nIn my opinion the behavior should be to generate and output a package only for the project that contains `GeneratePackageOnBuild`. Maybe I'm missing a way to disable that behavior?"},{"Id":"11181434210","Type":"IssuesEvent","CreatedAt":"2019-12-31T02:52:13","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8846","RelatedDescription":"Closed issue \"nuget pack process loses file attributes\" (#8846) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet.exe\r\n\r\nNuGet version (3.4.4.1321):\r\n\r\nOS version win10 v1607 (14393.321):\r\n\r\nWorked before? Not sure maybe it was always like this:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a file with read-only attributes\r\n\r\n2. Pack it into a nuget package using nuget pack (and a valid nuspec file)\r\n\r\n3. Extract the file out of the nupkg \r\n\r\n4. Check the file attributes and see that the read-only attribute is gone\r\n\r\nWhy does the packing process lose the read-only file attribute?"},{"Id":"11181376158","Type":"IssuesEvent","CreatedAt":"2019-12-31T02:29:33","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8147","RelatedDescription":"Closed issue \"Cryptic 'Key not valid for use in specified state.' message for stored API key after user password change\" (#8147) at NuGet/Home","RelatedBody":"After changing the (Windows) user password on our CI build server the stored API key was no longer working. The error message from NuGet.exe was `Key not valid for use in specified state.`, which doesn't point to the cause of the problem. After setting the API key using `NuGet.exe SetApiKey ...` the encrypted value has changed.\r\n\r\nI suspect NuGet derives the encrypted API key from the user password, a sensible message when the key fails to load would've saved me a couple of hours searching for the cause of this issue (the password was changed due to other infrastructure changes, so who'd expect the password change to be the cause of this problem?)\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.exe\r\n\r\nNuGet version (x.x.x.xxx):\r\n4.5.1.4879\r\n\r\ndotnet.exe --version (if appropriate):\r\nNA\r\n\r\nVS version (if appropriate):\r\nNA\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nWindows 8.1 Pro Build 9600\r\n\r\nWorked before? If so, with which NuGet version:\r\nProbably not, but unsure.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Set an API key for a source using `NuGet.exe SetApiKey ...`\r\n2. Verify the key works for the source (`NuGet.exe push` / `NuGet.exe delete`)\r\n3. Change the Windows user password\r\n4. Verify the key no longer works and NuGet.exe gives the specified error message"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-02T05:30:47.8494169Z","RunDurationInMilliseconds":2196}