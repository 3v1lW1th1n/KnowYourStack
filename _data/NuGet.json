{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10761951357","Type":"PullRequestEvent","CreatedAt":"2019-10-31T22:04:12","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7663","RelatedDescription":"Merged pull request \"Add GitHubVulnerabilities2Db Job\" (#7663) at NuGet/NuGetGallery","RelatedBody":"Part of https://github.com/nuget/nugetgallery/issues/7648\r\n\r\nThis PR adds the GitHubVulnerabilities2Db job itself, which primarily consists of querying GitHub's GraphQL API and then converting the response into our DB entities."},{"Id":"10761862828","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:49:09","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7666","RelatedDescription":"Merged pull request \"RI dev-merge to master\" (#7666) at NuGet/NuGetGallery","RelatedBody":"Cherry picking the auditing changes, since we do not want @scottbommarito's package vulnerabilities changes to go to PROD.\r\n"},{"Id":"10761816171","Type":"IssuesEvent","CreatedAt":"2019-10-31T21:41:40","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/267","RelatedDescription":"Closed issue \"Trying to upload while another upload is incomplete gives a blank page with \"The page was not displayed because there was a conflict.\"\" (#267) at NuGet/NuGetGallery","RelatedBody":"1. Tab A go to https://preview.nuget.org/packages/upload\n2. Tab B go to https://preview.nuget.org/packages/upload\n3. Tab A, upload a package, don't verify/cancel\n4. Tab B, Upload a package \n\nBlank page with text :\n\n\"The page was not displayed because there was a conflict.\"\n\nLow pri but the blank page is not so nice, could just redirect to the first package to finish.\n"},{"Id":"10761764536","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:33:30","Actor":"robertmuehsig","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7667","RelatedDescription":"Opened pull request \"Removes the height differences when switching to the organization page\" (#7667) at NuGet/NuGetGallery","RelatedBody":"I was browsing through the NuGet UI and notices a UI glitch on the organization page:\r\n\r\n![before](https://user-images.githubusercontent.com/756703/67987512-e2c80d00-fc2d-11e9-8a84-ad7dad5efcb4.gif)\r\n\r\nThe \"divider\" is using the \"ms-font-xxl\", which enlarges the complete navigation bread crumb area. With a smaller version it keeps the same size as similar pages. \r\n\r\n![after](https://user-images.githubusercontent.com/756703/67987637-36d2f180-fc2e-11e9-8d4c-3d64e158701d.gif)\r\n\r\nBe aware:\r\nThere are (at least) two other pages with this xxl dividers, but they have some other controls on the same line, so... it would be more complicated to fix those.\r\n\r\n![image](https://user-images.githubusercontent.com/756703/67987679-510ccf80-fc2e-11e9-87a8-45fb66eb57cc.png)\r\n\r\n![image](https://user-images.githubusercontent.com/756703/67987717-67b32680-fc2e-11e9-9bce-b65277d9cf6e.png)\r\n\r\nHope this helps :)\r\n\r\n"},{"Id":"10761637765","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:14:54","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7666","RelatedDescription":"Opened pull request \"RI dev-merge to master\" (#7666) at NuGet/NuGetGallery","RelatedBody":"Cherry picking the auditing changes, since we do not want @scottbommarito's package vulnerabilities changes to go to PROD.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10762519360","Type":"IssuesEvent","CreatedAt":"2019-10-31T23:59:06","Actor":"ashishnegi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8785","RelatedDescription":"Opened issue \"Nupkg structure for multi framework (45 - 471) support + net standard ( Github Issue : https://github.com/NuGet/Home/issues/6739 )\" (#8785) at NuGet/Home","RelatedBody":"I have a c# library. It has some different apis in netstandard than net47.\n\nI want to generate a nupkg which should be usable from both .net specific framework and .net coreclr projects. So, if someone creates a fullframework net46/net47 project Or coreclr project targeting netcoreapp2.0 or net47, it should pick up dll based on its version. Also, for .net standard, since it targets multiple platform, I have `Linux` and `win` specific dll.\n\nHow should I structure my nupkg so that during compilation and packaging, it takes the right dll ?\n\nI have the following structure of nupkg :\n\n```\nmy_lib.NUPKG\n|   my_lib.nuspec\n|   [Content_Types].xml\n|\n+---lib\n|   \\---net45\n|           my_lib.dll\n|           my_lib.xml\n|\n+---package\n|   \\---services\n|       \\---metadata\n|           \\---core-properties\n|                   f173822ccbd74dfb9a5338af5508d1b6.psmdcp\n|\n+---ref\n|   \\---netstandard2.0\n|           my_lib.dll\n|\n+---runtimes\n|   +---linux\n|   |   \\---lib\n|   |       \\---netstandard2.0\n|   |               my_lib.dll\n|   |\n|   \\---win\n|       \\---lib\n|           +---net461\n|           |       my_lib.dll\n|           |\n|           +---net462\n|           |       my_lib.dll\n|           |\n|           +---net47\n|           |       my_lib.dll\n|           |\n|           +---net471\n|           |       my_lib.dll\n|           |\n|           \\---netstandard2.0\n|                   my_lib.dll  // this is different from above my_lib.dll\n|\n\\---_rels\n        .rels\n\n```\n\nThis is working for most cases.\n\nHowever, when user creates a .net sdk coreclr project targeting net471 using dotnet cli :\n```\n<Project Sdk=\"Microsoft.NET.Sdk\">\n<PropertyGroup>\n  <TargetFramework>net47</TargetFramework>\n</PropertyGroup>\n```\nduring compilation, it refers to netstandard2.0 dll and fails to compile. If I comment out the incompatible apis, in the generated build, it has right net47 `my_lib.dll`. This means that during compilation `only`, it is referring to netstandard2.0 dll.  \n\nI think that their might be something wrong with how I have structured my nupkg.\nWhat is the right way for this ? Can you point me to some documentation around this ?\n\n## Details about Problem\n\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\n\nNuGet version (x.x.x.xxx): \n```\nNuGet.exe help\nNuGet Version: 3.4.3.855\n```\n\ndotnet.exe --version (if appropriate):\n```\n.NET Command Line Tools (2.0.3)\n\nProduct Information:\n Version:            2.0.3\n Commit SHA-1 hash:  12f0c7efcc\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.16299\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.3\\\n\nMicrosoft .NET Core Shared Framework Host\n\n  Version  : 2.0.3\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df\n```\nVS version (if appropriate): `15.4.5`\n\nOS version : `win 10 enterprise v1709 16299.309`\n\n\n\n---\n#### Document Details\n\nâš  *Do not edit this section. It is required for docs.microsoft.com âžŸ GitHub issue linking.*\n\n* ID: f1482e18-5f1f-3a8a-3321-66af52879ec5\n* Version Independent ID: d70bd2f5-c04b-9207-62a0-4ecb6e8e5ca6\n* Content: [Multi-targeting for NuGet Packages](https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks)\n* Content Source: [docs/create-packages/Supporting-Multiple-Target-Frameworks.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/create-packages/Supporting-Multiple-Target-Frameworks.md)\n* Service: **unspecified**\n* Product: **nuget**\n* GitHub Login: @kraigb\n* Microsoft Alias: **kraigb**"},{"Id":"10762323574","Type":"IssuesEvent","CreatedAt":"2019-10-31T23:15:51","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6007","RelatedDescription":"Closed issue \"ngen nuget DLLs in the client vsix and build tools vsix\" (#6007) at NuGet/Home","RelatedBody":"Figure out the right set of DLLs to ngen, measure JIT time and see if it Ngen'ing has any advantages, run it by the VS Perf and Reliability team.\r\n\r\n"},{"Id":"10762285429","Type":"IssuesEvent","CreatedAt":"2019-10-31T23:07:49","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8762","RelatedDescription":"Closed issue \"Test:  improve signing certificate V1/V2 testing\" (#8762) at NuGet/Home","RelatedBody":""},{"Id":"10762215715","Type":"IssuesEvent","CreatedAt":"2019-10-31T22:53:56","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8137","RelatedDescription":"Closed issue \"Nuget 5.0.2 fails to find msbuild assemblies in debian stretch\" (#8137) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nI'm trying to package a csharp project in Linux using nuget+mono. Specifically the OS is a debian stretch: Linux dc1e45079844 4.9.0-3-amd64 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux\r\n\r\nIt's been working fine with NuGet 4.6.2, but since updating to 5.0.2 when running `nuget restore project.sln` I get the following error:\r\n\r\nMSBuild auto-detection: using msbuild version '' from '/usr/bin'.\r\nError parsing solution file at /project_folder/project.sln: Could not load file or assembly '/usr/bin/Microsoft.Build.dll' or one of its dependencies\r\nNuGet.CommandLine.CommandLineException: Error parsing solution file at /project_folder/project.sln: Could not load file or assembly '/usr/bin/Microsoft.Build.dll' or one of its dependencies\r\n\r\nIt seems that with the new version the Msbuild auto-detection is failing to find the correct paths, given that the Microsoft.Build.dll  is located in /usr/lib/mono/xbuild/14.0/bin/ but nuget seems to be looking for it in /usr/bin. \r\n\r\nThanks\r\n\r\n"},{"Id":"10762032363","Type":"IssuesEvent","CreatedAt":"2019-10-31T22:18:55","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8784","RelatedDescription":"Opened issue \"Investigate DiagnosticsSource for protocol diagnostics\" (#8784) at NuGet/Home","RelatedBody":"System.Net.Http.HttpClient emits events though DiagnosticSource: https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/HttpDiagnosticsGuide.md\r\n\r\nNote, it works on both .NET Framework and .NET Core, but the event names are different (probably because the event datastructure is different), so if we use it, it's important to test both runtimes. Also, check what happens on mono.\r\n\r\nThis will let us get much more detailed information, if we want it, but depending on what we want, it might also not give us the level of information we want."},{"Id":"10761972832","Type":"IssuesEvent","CreatedAt":"2019-10-31T22:08:08","Actor":"bmajik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8783","RelatedDescription":"Opened issue \"vs/nuget/nugetaction doesn't log the packages added, removed, or updated\" (#8783) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\nVS version (if appropriate): 16.4.0 preview 3.0\r\nOS version (i.e. win10 v1607 (14393.321)): win10 1909 build 18363.418\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Launch VS. Open C# console app. Manage nuget packages for project. Use fiddler or another tool to examine VS telemetry leaving the machine.\r\n2. select a nuget package to install\r\n3. click install\r\n4. accept all the installation prompts\r\n5. find the vs/nuget/nugetaction event in the telemetry monitor\r\n\r\nExpected: information about which packages were added, updated, or removed from the project\r\nActual: no package information\r\n\r\n"},{"Id":"10761938224","Type":"IssuesEvent","CreatedAt":"2019-10-31T22:01:53","Actor":"bmajik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8782","RelatedDescription":"Opened issue \"vs/nuget/nugetaction telemetry doesn't adequately capture cancellation\" (#8782) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used VS UI\r\n\r\nNuGet version (x.x.x.xxx): \r\n\r\nVS version (if appropriate): 16.4.0 preview 3.0 \r\n\r\nOS version (i.e. win10 v1607 (14393.321)): win10 1909 build 18363.418\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Launch VS.  Open C# console app.  Manage nuget packages for project.  Use fiddler or another tool to examine VS telemetry leaving the machine.\r\n\r\n2. select a nuget package to install\r\n3. click install\r\n4. at one of the various promps, choose \"cancel\" instead of continue\r\n5. Look for the vs/nuget/nugetaction event\r\n\r\nExpected: install state doesn't indicate \"Success\"\r\nActual: event suggests that packages were actually installed\r\n\r\nWhen the user cancels for some reason, the event should indicate that they cancelled, and should give additional reasons on why/where they cancelled.\r\n\r\n"},{"Id":"10761905476","Type":"IssuesEvent","CreatedAt":"2019-10-31T21:56:18","Actor":"wpanduka","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8781","RelatedDescription":"Opened issue \"retryingFindpackagesbyIdAsynccore issue in visual studio 2019\" (#8781) at NuGet/Home","RelatedBody":"I am working fine with one windows 10 machinewith grial UI kit for xamarin by using visual studio 2019, but one windows 10 machine making poblems with the retryingFindpackagesbyIdAsynccore and trying to download nuget packages but it fails to restore packages, wich leads to so many build errors, it also says in the out put that issue with \"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tSuppression State Error\tNETSDK1004\tC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t234\t\"tried cleaning the solution and rebuilding the solution it keeps giving errors .\r\nThank you in-advance for your support \t\r\n"},{"Id":"10761902974","Type":"IssuesEvent","CreatedAt":"2019-10-31T21:55:52","Actor":"Allann","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8780","RelatedDescription":"Opened issue \"How to include additional files in lib\" (#8780) at NuGet/Home","RelatedBody":"I have a .Net Core project that contains additional project referenced dlls and these are not added to the nuget package.  \r\n``` xml\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\CodeGen.Generator\\CodeGen.Generator.csproj\" />\r\n    <ProjectReference Include=\"..\\CodeGen.Interfaces\\CodeGen.Interfaces.csproj\" />\r\n    <ProjectReference Include=\"..\\CodeGen.Loaders\\CodeGen.Loaders.csproj\" />\r\n  </ItemGroup>\r\n```\r\nThe question then is how can I add these dependent dlls into the the package? \r\n\r\n1. I tried the `ProjectGroup.IncludeBuiltProjectOutputGroup` but mustn't be using the correct value if that is the solution. \r\n1. I tried adding a nuspec file but that did not help, i assume since VS creates it's own.\r\n1. I notice the ItemGroup has a Content for adding \"other\" files into the content folder of the package, is there an equivalent Lib?  I couldn't see it, if it does.\r\n\r\nWhen I loaded the nuget package in the Nuget Package Explorer and output the metadata as a nuspec file I received the following:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n  <metadata>\r\n    <id>OurPresence.CodeGen</id>\r\n    <version>1.0.0</version>\r\n    <authors>Allan Nielsen</authors>\r\n    <owners>Allan Nielsen</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <projectUrl>https://github.com/allann/codegen</projectUrl>\r\n    <description>Code generator using model files and compiled template components</description>\r\n    <copyright>Copyright 2019</copyright>\r\n    <tags>code generator c#</tags>\r\n    <repository type=\"git\" url=\"https://github.com/allann/codegen\" />\r\n    <dependencies>\r\n      <group targetFramework=\".NETCoreApp2.1\">\r\n        <dependency id=\"CodeGen.Generator\" version=\"1.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"CodeGen.Interfaces\" version=\"1.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"CodeGen.Loaders\" version=\"1.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"McMaster.Extensions.CommandLineUtils\" version=\"2.4.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"McMaster.Extensions.Hosting.CommandLine\" version=\"2.4.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Configuration.EnvironmentVariables\" version=\"2.2.4\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Configuration.Json\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.DependencyInjection\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Hosting\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Hosting.Abstractions\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Logging.Console\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Logging.Debug\" version=\"2.2.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Serilog.AspNetCore\" version=\"3.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Serilog.Sinks.Console\" version=\"3.1.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Serilog.Sinks.File\" version=\"4.0.0\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"lib\\netcoreapp2.1\\codegen.dll\" target=\"lib\\netcoreapp2.1\\codegen.dll\" />\r\n    <file src=\"lib\\netcoreapp2.1\\codegen.runtimeconfig.json\" target=\"lib\\netcoreapp2.1\\codegen.runtimeconfig.json\" />\r\n  </files>\r\n</package>\r\n```\r\nThe CodeGen.*.dll files need to be included as files and NOT dependencies because they dont exist as NuGet packages (and shouldn't be).\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\nâš  *Do not edit this section. It is required for docs.microsoft.com âžŸ GitHub issue linking.*\r\n\r\n* ID: 18071970-cf13-78af-ac1d-9adefefdb693\r\n* Version Independent ID: 3bf15a5c-8b3e-0e69-0bf6-03b44654970c\r\n* Content: [Create and publish a .NET Standard NuGet package - Visual Studio on Windows](https://docs.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-visual-studio?tabs=netcore-cli#feedback)\r\n* Content Source: [docs/quickstart/create-and-publish-a-package-using-visual-studio.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/quickstart/create-and-publish-a-package-using-visual-studio.md)\r\n* Product: **nuget**\r\n* GitHub Login: @karann-msft\r\n* Microsoft Alias: **karann**"},{"Id":"10761890870","Type":"IssuesEvent","CreatedAt":"2019-10-31T21:53:53","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8779","RelatedDescription":"Opened issue \"NuGet Package Add Content Files to VS Project - TargetsForTfmSpecificContentInPackage\" (#8779) at NuGet/Home","RelatedBody":"@marqdouj commented on [Mon Oct 21 2019](https://github.com/NuGet/docs.microsoft.com-nuget/issues/1748)\n\nIf I am reading this page correctly, using TargetsForTfmSpecificContentInPackage in the *.csproj file is how I can create a nuget package that will add the content files to a *.csproj when it references that package?\n\nI has created a .NET Standard 2.0 library project and was able to get the content files included in the nuget package using TargetsForTfmSpecificContentInPackage.\nI then added the package to a local feed. However, when I reference the nuget package in a new project I was expecting it to add \"AddFilesWithNuGet.lng\" to the root of the project and create a new folder in the project \"CSCommon\" and add the \"TestClass.cs\" file.\nThis did not happen. Are my assumptions correct and that this should work or what am I missing here?\n\n//*.nuspec file\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\"&gt;\n  &lt;metadata&gt;\n\t...\n    &lt;dependencies&gt;\n      &lt;group targetFramework=\".NETStandard2.0\" /&gt;\n    &lt;/dependencies&gt;\n    &lt;contentFiles&gt;\n      &lt;files include=\"CSCommon/TestClass.cs\" buildAction=\"C# compiler\" /&gt;\n      &lt;files include=\"AddFilesWithNuGet.lng\" buildAction=\"None\" /&gt;\n    &lt;/contentFiles&gt;\n  &lt;/metadata&gt;\n&lt;/package&gt;\n\n\n//*.csproj file\n  &lt;PropertyGroup&gt;\n    &lt;TargetsForTfmSpecificContentInPackage&gt;$(TargetsForTfmSpecificContentInPackage);CustomContentTarget&lt;/TargetsForTfmSpecificContentInPackage&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;Target Name=\"CustomContentTarget\"&gt;\n    &lt;ItemGroup&gt;\n      &lt;TfmSpecificPackageFile Include=\"ContentFiles/TestClass.cs\"&gt;\n        &lt;PackagePath&gt;contentFiles/CSCommon&lt;/PackagePath&gt;\n        &lt;BuildAction&gt;C# compiler&lt;/BuildAction&gt;\n      &lt;/TfmSpecificPackageFile&gt;  \n      &lt;TfmSpecificPackageFile Include=\"ContentFiles/AddFilesWithNuGet.lng\"&gt;\n        &lt;PackagePath&gt;contentFiles&lt;/PackagePath&gt;\n        &lt;BuildAction&gt;none&lt;/BuildAction&gt;\n        &lt;CopyToOutput&gt;true&lt;/CopyToOutput&gt; //This did nothing; I was hoping it would add this to the files reference.\n      &lt;/TfmSpecificPackageFile&gt;  \n    &lt;/ItemGroup&gt;\n  &lt;/Target&gt;\n  \n\n\n---\n#### Document Details\n\nâš  *Do not edit this section. It is required for docs.microsoft.com âžŸ GitHub issue linking.*\n\n* ID: 099102e8-c320-ef50-6821-57519684dc98\n* Version Independent ID: 1523dac4-419d-613d-2497-4062f9efd358\n* Content: [NuGet pack and restore as MSBuild targets](https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets)\n* Content Source: [docs/reference/msbuild-targets.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/reference/msbuild-targets.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**\n\n"},{"Id":"10761669252","Type":"IssuesEvent","CreatedAt":"2019-10-31T21:19:24","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8552","RelatedDescription":"Closed issue \"VS:  add additional telemetry for package install/restore\" (#8552) at NuGet/Home","RelatedBody":""},{"Id":"10761380914","Type":"IssuesEvent","CreatedAt":"2019-10-31T20:39:35","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8778","RelatedDescription":"Opened issue \"--skip-duplicate support for dotnet nuget push\" (#8778) at NuGet/Home","RelatedBody":"As part of the work for adding option --skip-duplicate to `dotnet nuget push` (https://github.com/NuGet/Home/issues/8100), the dotnet parser also needs to be updated in order to support <tab> auto-completion and telemetry.\r\n\r\n"},{"Id":"10761025994","Type":"IssuesEvent","CreatedAt":"2019-10-31T19:52:02","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8642","RelatedDescription":"Closed issue \"Xamarin projects in Visual Studio do not use .targets in NuGet package references\" (#8642) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: VS2019 UI\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a new Xamarin.iOS or Xamarin.tvOS application from the template.\r\n\r\n2. Reference a NuGet package that uses a custom .targets file located in `\\build`\r\n\r\nIt appears Xamarin projects in Visual Studio ignore the `.targets` file that ships with a NuGet package reference. Furthermore it is not possible to use `GeneratePathProperty` on the `PackageReference` to workaround this by manually importing the .targets file, since the path is not generated:\r\n\r\n```xml\r\n <ItemGroup>\r\n    <!-- GeneratePathProperty is ignored -->\r\n    <PackageReference Include=\"fnalibs\" GeneratePathProperty=\"true\">\r\n      <Version>19.9.0-pre</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\Xamarin\\TVOS\\Xamarin.TVOS.CSharp.targets\" />\r\n  <!-- .targets file is not used by Xamarin projects in VS (and this workaround doesn't work) -->\r\n  <Import Project=\"$(Pkgfnalibs)build\\fnalibs.targets\" />\r\n```"},{"Id":"10758921244","Type":"PullRequestEvent","CreatedAt":"2019-10-31T15:45:26","Actor":"oQuantumDecayo","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/8777","RelatedDescription":"Opened pull request \"NuGet Restore Manager spec images\" (#8777) at NuGet/Home","RelatedBody":""},{"Id":"10754510681","Type":"IssuesEvent","CreatedAt":"2019-10-31T06:34:58","Actor":"Roemer","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8776","RelatedDescription":"Opened issue \"Interop Assembly in NuGet for Standard and Framework with EmbedInteropTypes = false\" (#8776) at NuGet/Home","RelatedBody":"Hi all\r\n\r\nI am trying to create a NuGet package with just an interop assembly inside.\r\nThis package will be used in .NET Standard, Core and Framework projects.\r\nThe package should make sure that `EmbedInteropTypes` is in all cases set to `false`.\r\nI'm having a hard time achieving this. I tried to do it like the sample `https://github.com/NuGet/Samples/tree/master/NuGet.Samples.Interop` and just adjusting the `true` to `false` but I do not see anything added regarding `EmbedInteropTypes` in the csproj file. Neither on .NET Core nor on .NET Framework.\r\n\r\nI don't really understand when the target file is needed and when it will work. Will it also work for .NET Framework? Or do I need an `install.ps` there which disables the `EmbedInteropTypes` for those types of projects and the `.target` only for .NET Standard/Core?\r\n\r\nThe project where I am trying to achieve this is: https://github.com/Roemer/UIAutomation-Interop\r\nAny help would be greatly appreciated.\r\n\r\nThanks\r\nRoman"},{"Id":"10752004498","Type":"IssuesEvent","CreatedAt":"2019-10-30T21:30:45","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8671","RelatedDescription":"Closed issue \"Support for OptProfV2 CI runs in Escrow mode\" (#8671) at NuGet/Home","RelatedBody":"In https://github.com/NuGet/Home/issues/8578 , we disabled OptProfV2 related CI tasks to unblock the NuGet 5.3 release on VS. Now, we want to re-enable them to provide training data for 16.4 release, even when escrow mode is on course.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?â€¦ https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-11-01T05:30:46.264884Z","RunDurationInMilliseconds":3000}