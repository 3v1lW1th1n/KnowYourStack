{"Data":{"Blog":{"FeedItems":[{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7476389000","Type":"IssuesEvent","CreatedAt":"2018-04-04T02:49:26","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17404","RelatedDescription":"Opened issue \"jit x86: possible issue with preserved register set for CORINFO_HELP_INIT_PINVOKE_FRAME\" (#17404) at dotnet/coreclr","RelatedBody":"The [x86 jitstress1 gcstress0xC failure](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x86_checked_windows_nt_gcstress0xc_jitstress1_prtest/28/) in baseservices_threading._commitstackonlyasneeded_DefaultStackCommit seems to be a problem with `CORINFO_HELP_INIT_PINVOKE_FRAME` claiming to kill gc refs in `EDX` when it doesn't.\r\n\r\nProblematic method is `<>c:<RunTest>b__9_3(ref):this` which has disassembly (annotated w/ GC info):\r\n```asm\r\n058258f8 55              push    ebp\r\n058258f9 8bec            mov     ebp,esp\r\n058258fb 57              push    edi\r\n058258fc 56              push    esi\r\n058258fd 53              push    ebx\r\n058258fe 83ec1c          sub     esp,1Ch\r\n;; end prolog\r\n05825901 8d7ddc          lea     edi,[ebp-24h]   +EDX\r\n05825904 e85fdd5efb      call    CORINFO_HELP_INIT_PINVOKE_FRAME (00e13668)  +EDI\r\n05825909 8bcd            mov     ecx,ebp   -EDX ?? -EDI\r\n0582590b 894df0          mov     dword ptr [ebp-10h],ecx\r\n0582590e 8bca            mov     ecx,edx\r\n>>> 05825910 ff15b85c280b    call    dword ptr ds:[0B285CB8h] (StackCommitTest.Finalizer.CreateUnreferencedObject(System.Action), mdToken: 06000011)\r\n```\r\nAs you can see `EDX` is killed for GC after the first call when it is clearly live down to the move before the second call.\r\n\r\nThe root cause seems to be that `CORINFO_HELP_INIT_PINVOKE_FRAME` is not special cased in `Compiler::compNoGCHelperCallKillSet` and so reports the default set of callee killed registers, which includes `EDX`.\r\n\r\nAdding a special case for this for x86 fixes the gc stress regression.\r\n\r\nSeems like we could assert that the set of GC kills at a call is a subset of the set of regular kills maybe?\r\n\r\nSplitting this one off from #17027 / #17330.\r\n\r\ncc @RussKeldorph  @dotnet/jit-contrib \r\n"},{"Id":"7476227305","Type":"PullRequestEvent","CreatedAt":"2018-04-04T01:50:46","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17372","RelatedDescription":"Merged pull request \"Tighten arm32/arm64 write barrier kill reg sets\" (#17372) at dotnet/coreclr","RelatedBody":"The JIT write barrier helpers have a custom calling convention that\r\navoids killing most registers. The JIT was not taking advantage of\r\nthis, and thus was killing unnecessary registers when a write barrier\r\nwas necessary. In particular, some integer callee-trash registers\r\nare unaffected by the write barriers, and no floating-point register\r\nis affected.\r\n\r\nAlso, I got rid of the `FEATURE_WRITE_BARRIER` define, which is always\r\nset. I also put some code under `LEGACY_BACKEND` for easier cleanup\r\nlater. I removed some unused defines in target.h for some platforms."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7476610349","Type":"PullRequestEvent","CreatedAt":"2018-04-04T04:14:32","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8886","RelatedDescription":"Merged pull request \"Fix failure to add tools path on restricted Windows environments.\" (#8886) at dotnet/cli","RelatedBody":"On environments where registry access is disabled, the first run experience\r\nfails because it could not add the tools path to the user's environment.\r\n\r\nThis fix properly handles the security exception by printing a warning and\r\ncontinuing.  Users will have to manually add the PATH environment variable to\r\ntheir environments to prevent `dotnet tool install` from printing PATH\r\ninstructions.\r\n\r\nFixes #8874."},{"Id":"7476259102","Type":"IssuesEvent","CreatedAt":"2018-04-04T02:02:18","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8989","RelatedDescription":"Closed issue \"\"dotnet new\" fails to install a new template with \"node_modules\" with \"Error: Value cannot be null\" message\" (#8989) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create a new `dotnet new` SPA project, `react`.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new react -n ThisFails\r\nThe template \"ASP.NET Core with React.js\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\n...\r\nManual instructions: Run \"npm install\"\r\n```\r\n2. Go to the newly created project.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> cd ThisFails\r\n```\r\n3. Install NPM packages.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> npm install\r\nnpm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but npm-shrinkwrap.json was generated for lockfileVersion@0. I'll try to do my best with it!\r\n...\r\nadded 546 packages in 136.886s\r\n```\r\n4. Add a new template folder, `.template.config` and a new configuration file, `template.json`.\r\n5. Copy the following configuration to `template.json` file.\r\n```javascript\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/template\",\r\n  \"author\": \"Sung Kim\",\r\n  \"classifications\": [\"Web\"],\r\n  \"name\": \"BadTemplate\",\r\n  \"identity\": \"BadTemplate\",\r\n  \"shortName\": \"badtemplate\",\r\n  \"tags\": {\r\n    \"language\": \"C#\",\r\n    \"type\": \"project\"\r\n  },\r\n  \"sourceName\": \"BadTemplate\",\r\n  \"preferNameDirectory\": true\r\n}\r\n```\r\n6. Go up one directory.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> cd ..\r\n```\r\n7. Install the template, `ThisFails`.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new -i .\\ThisFails\r\nError: Could not install \".\\ThisFails\".\r\nError: Value cannot be null.\r\nParameter name: key\r\n...\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new mstest\r\n    dotnet new --help\r\n```\r\n## Expected  behavior\r\nGo to the `ThisFails` folder and delete `node_modules` folder.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> cd ThisFails\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> rmdir /S /Q node_modules\r\n```\r\nGo up one directory\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> cd ..\r\n```\r\nInstalling works without an error.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new -i .\\ThisFails\r\nTemplates                                         Short Name       Language          Tags\r\n--------------------------------------------------------------------------------------------------------\r\n...\r\nBadTemplate                                       badtemplate      [C#]              Web\r\n...\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new console\r\n    dotnet new --help\r\n```\r\n\r\n## Actual behavior\r\nFails with following error message.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github                                                                \r\n> dotnet new -i .\\ThisFails                                                                             \r\nError: Could not install \".\\ThisFails\".                                                                 \r\nError: Value cannot be null.                                                                            \r\nParameter name: key                                                                                     \r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nBadTemplate                                       badtemplate      [C#]              Web                \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET        \r\n                                                                                                        \r\n                                                                                                        \r\nExamples:                                                                                               \r\n    dotnet new mvc --auth Individual                                                                    \r\n    dotnet new mstest                                                                                   \r\n    dotnet new --help                                                                                   \r\n```\r\n\r\n## Environment data\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails   \r\n> dotnet --info                                      \r\n.NET Command Line Tools (2.0.2)                      \r\n                                                     \r\nProduct Information:                                 \r\n Version:            2.0.2                           \r\n Commit SHA-1 hash:  a04b4bf512                      \r\n                                                     \r\nRuntime Environment:                                 \r\n OS Name:     Windows                                \r\n OS Version:  10.0.16299                             \r\n OS Platform: Windows                                \r\n RID:         win10-x64                              \r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\     \r\n                                                     \r\nMicrosoft .NET Core Shared Framework Host            \r\n                                                     \r\n  Version  : 2.0.0                                   \r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```"},{"Id":"7476187622","Type":"IssuesEvent","CreatedAt":"2018-04-04T01:36:24","Actor":"dance2die","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8989","RelatedDescription":"Opened issue \"\"dotnet new\" fails to install a new template with \"node_modules\" with \"Error: Value cannot be null\" message\" (#8989) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create a new `dotnet new` SPA project, `react`.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new react -n ThisFails\r\nThe template \"ASP.NET Core with React.js\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\n...\r\nManual instructions: Run \"npm install\"\r\n```\r\n2. Go to the newly created project.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> cd ThisFails\r\n```\r\n3. Install NPM packages.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> npm install\r\nnpm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but npm-shrinkwrap.json was generated for lockfileVersion@0. I'll try to do my best with it!\r\n...\r\nadded 546 packages in 136.886s\r\n```\r\n4. Add a new template folder, `.template.config` and a new configuration file, `template.json`.\r\n5. Copy the following configuration to `template.json` file.\r\n```javascript\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/template\",\r\n  \"author\": \"Sung Kim\",\r\n  \"classifications\": [\"Web\"],\r\n  \"name\": \"BadTemplate\",\r\n  \"identity\": \"BadTemplate\",\r\n  \"shortName\": \"badtemplate\",\r\n  \"tags\": {\r\n    \"language\": \"C#\",\r\n    \"type\": \"project\"\r\n  },\r\n  \"sourceName\": \"BadTemplate\",\r\n  \"preferNameDirectory\": true\r\n}\r\n```\r\n6. Go up one directory.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> cd ..\r\n```\r\n7. Install the template, `ThisFails`.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new -i .\\ThisFails\r\nError: Could not install \".\\ThisFails\".\r\nError: Value cannot be null.\r\nParameter name: key\r\n...\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new mstest\r\n    dotnet new --help\r\n```\r\n## Expected  behavior\r\nGo to the `ThisFails` folder and delete `node_modules` folder.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> cd ThisFails\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> rmdir /S /Q node_modules\r\n```\r\nGo up one directory\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails\r\n> cd ..\r\n```\r\nInstalling works without an error.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\r\n> dotnet new -i .\\ThisFails\r\nTemplates                                         Short Name       Language          Tags\r\n--------------------------------------------------------------------------------------------------------\r\n...\r\nBadTemplate                                       badtemplate      [C#]              Web\r\n...\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new console\r\n    dotnet new --help\r\n```\r\n\r\n## Actual behavior\r\nFails with following error message.\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github                                                                \r\n> dotnet new -i .\\ThisFails                                                                             \r\nError: Could not install \".\\ThisFails\".                                                                 \r\nError: Value cannot be null.                                                                            \r\nParameter name: key                                                                                     \r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nBadTemplate                                       badtemplate      [C#]              Web                \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET        \r\n                                                                                                        \r\n                                                                                                        \r\nExamples:                                                                                               \r\n    dotnet new mvc --auth Individual                                                                    \r\n    dotnet new mstest                                                                                   \r\n    dotnet new --help                                                                                   \r\n```\r\n\r\n## Environment data\r\n```bash\r\ndance2die@LELOUCH c:\\misc\\sources\\github\\ThisFails   \r\n> dotnet --info                                      \r\n.NET Command Line Tools (2.0.2)                      \r\n                                                     \r\nProduct Information:                                 \r\n Version:            2.0.2                           \r\n Commit SHA-1 hash:  a04b4bf512                      \r\n                                                     \r\nRuntime Environment:                                 \r\n OS Name:     Windows                                \r\n OS Version:  10.0.16299                             \r\n OS Platform: Windows                                \r\n RID:         win10-x64                              \r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\     \r\n                                                     \r\nMicrosoft .NET Core Shared Framework Host            \r\n                                                     \r\n  Version  : 2.0.0                                   \r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n## Notes\r\nError does not occur for other types (non SPA) templates."},{"Id":"7475988535","Type":"PullRequestEvent","CreatedAt":"2018-04-04T00:22:30","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8988","RelatedDescription":"Opened pull request \"Update to aspnet 2.0.7 build 230\" (#8988) at dotnet/cli","RelatedBody":"Updates aspnetcore to latest build for 2.0.7"},{"Id":"7475966507","Type":"PullRequestEvent","CreatedAt":"2018-04-04T00:14:23","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8987","RelatedDescription":"Opened pull request \"Disabling msbuild node reuse for unix.\" (#8987) at dotnet/cli","RelatedBody":"This is to improve our CI build perf due to https://github.com/dotnet/corefx/issues/28791"},{"Id":"7475943712","Type":"PullRequestEvent","CreatedAt":"2018-04-04T00:06:28","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8984","RelatedDescription":"Closed pull request \"Disable apphosttemplate fallback folder\" (#8984) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"7475821236","Type":"IssuesEvent","CreatedAt":"2018-04-03T23:25:07","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8986","RelatedDescription":"Closed issue \"Unhandled Exception when trying to Build/Run on Arch Linux\" (#8986) at dotnet/cli","RelatedBody":"Environment data\r\n\r\ndotnet --info output:\r\n.NET Command Line Tools (2.1.103)\r\n\r\nProduct Information:\r\nVersion: 2.1.103\r\nCommit SHA-1 hash: 60218cecb5\r\n\r\nRuntime Environment:\r\nOS Name: arch\r\nOS Version:\r\nOS Platform: Linux\r\nRID: linux-x64\r\nBase Path: /opt/dotnet/sdk/2.1.103/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\nVersion : 2.0.6\r\nBuild : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n\r\nVS Code version: Version 1.21.1\r\nC# Extension version: 1.14.0\r\nSteps to reproduce\r\n\r\nCreate a C# project in dotnet core on 4.15.13-1-ARCH linux kernel by using the command:\r\ndotnet new console -n \"ProjectName\"\r\nThen after all plugins on the C# VSCode page are installed, try running the debugger and look at output from build task. I am aware it says Permission denied to modify the '/opt/dotnet/sdk/NuGetFallbackFolder' folder but I am able to build/restore/run from the terminal commands:\r\ndotnet restore\r\ndotnet build\r\ndotnet run\r\n\r\nThe package I have installed for dotnet core on arch is the package dotnet-sdk from the AUR.\r\nExpected behavior\r\n\r\nBuild normally\r\nActual behavior\r\n\r\nWhat the build task outputs:\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nPermission denied to modify the '/opt/dotnet/sdk/NuGetFallbackFolder' folder.\r\nHere are some options to fix this error:\r\n\r\n    Re-run this command with elevated access.\r\n    Disabled the first run experience by setting the environment variable DOTNET_SKIP_FIRST_TIME_EXPERIENCE to true.\r\n    Copy the .NET Core SDK to a non-protected location and use it from there.\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it."},{"Id":"7475817423","Type":"IssuesEvent","CreatedAt":"2018-04-03T23:23:49","Actor":"KaspireFX","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8986","RelatedDescription":"Opened issue \"Unhandled Exception when trying to Build/Run on Arch Linux\" (#8986) at dotnet/cli","RelatedBody":"Environment data\r\n\r\ndotnet --info output:\r\n.NET Command Line Tools (2.1.103)\r\n\r\nProduct Information:\r\nVersion: 2.1.103\r\nCommit SHA-1 hash: 60218cecb5\r\n\r\nRuntime Environment:\r\nOS Name: arch\r\nOS Version:\r\nOS Platform: Linux\r\nRID: linux-x64\r\nBase Path: /opt/dotnet/sdk/2.1.103/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\nVersion : 2.0.6\r\nBuild : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n\r\nVS Code version: Version 1.21.1\r\nC# Extension version: 1.14.0\r\nSteps to reproduce\r\n\r\nCreate a C# project in dotnet core on 4.15.13-1-ARCH linux kernel by using the command:\r\ndotnet new console -n \"ProjectName\"\r\nThen after all plugins on the C# VSCode page are installed, try running the debugger and look at output from build task. I am aware it says Permission denied to modify the '/opt/dotnet/sdk/NuGetFallbackFolder' folder but I am able to build/restore/run from the terminal commands:\r\ndotnet restore\r\ndotnet build\r\ndotnet run\r\n\r\nThe package I have installed for dotnet core on arch is the package dotnet-sdk from the AUR.\r\nExpected behavior\r\n\r\nBuild normally\r\nActual behavior\r\n\r\nWhat the build task outputs:\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nPermission denied to modify the '/opt/dotnet/sdk/NuGetFallbackFolder' folder.\r\nHere are some options to fix this error:\r\n\r\n    Re-run this command with elevated access.\r\n    Disabled the first run experience by setting the environment variable DOTNET_SKIP_FIRST_TIME_EXPERIENCE to true.\r\n    Copy the .NET Core SDK to a non-protected location and use it from there.\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n    Executing task: dotnet build /home/kas/Documents/CodeProjects/CSharp/CSharp.csproj <\r\n\r\nMSBUILD : error MSB1025: An internal failure occurred while running MSBuild.\r\nSystem.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 527\r\n\r\nUnhandled Exception: System.InvalidOperationException: The terminfo database is invalid.\r\nat System.TermInfo.Database..ctor(String term, Byte[] data)\r\nat System.TermInfo.Database.ReadDatabase(String term, String directoryPath)\r\nat System.TermInfo.Database.ReadDatabase(String term)\r\nat System.TermInfo.Database.ReadActiveDatabase()\r\nat System.ConsolePal.TerminalFormatStrings.<>c.<.cctor>b__27_0()\r\nat System.Lazy1.ViaFactory(LazyThreadSafetyMode mode) at System.Lazy1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\nat System.Lazy`1.CreateValue()\r\nat System.ConsolePal.EnsureInitializedCore()\r\nat System.ConsolePal.ControlCHandlerRegistrar.Register()\r\nat System.Console.add_CancelKeyPress(ConsoleCancelEventHandler value)\r\nat Microsoft.Build.CommandLine.MSBuildApp.Execute(String[] commandLine) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 755\r\nat Microsoft.Build.CommandLine.MSBuildApp.Main(String[] args) in E:\\A_work\\82\\s\\src\\MSBuild\\XMake.cs:line 216\r\nThe terminal process terminated with exit code: 134\r\n\r\nTerminal will be reused by tasks, press any key to close it."},{"Id":"7475811373","Type":"PullRequestEvent","CreatedAt":"2018-04-03T23:21:50","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8985","RelatedDescription":"Merged pull request \"Producing an empty commit to trigger a rebuild of the CLI\" (#8985) at dotnet/cli","RelatedBody":"The runtime had to spin in place and as such we need a \"fake\" commit to trigger a CLI rebuild using the new runtime bits.\r\n\r\nskip ci please"},{"Id":"7475810055","Type":"PullRequestEvent","CreatedAt":"2018-04-03T23:21:25","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8985","RelatedDescription":"Opened pull request \"Producing an empty commit to trigger a rebuild of the CLI\" (#8985) at dotnet/cli","RelatedBody":"The runtime had to spin in place and as such we need a \"fake\" commit to trigger a CLI rebuild using the new runtime bits.\r\n\r\nskip ci please"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7467609091","Type":"PullRequestEvent","CreatedAt":"2018-04-02T15:55:55","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/699","RelatedDescription":"Opened pull request \"Don't fail trimming on missing files\" (#699) at dotnet/standard","RelatedBody":"Instead, warn if that file happens to be included in the closure.\r\n\r\nFixes #697\r\n\r\nIt's still not clear to me this is required, but we can add it.  It may even be more appropriate to error."},{"Id":"7462410593","Type":"IssuesEvent","CreatedAt":"2018-03-31T15:52:06","Actor":"metadings","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/698","RelatedDescription":"Closed issue \"New Version Hell\" (#698) at dotnet/standard","RelatedBody":"Look. I thought .NET would solve this problem.\r\n\r\nNow you do have .NET Framework 2.0, 4.0, 4.5, .NET Standard 1.x, 2.x, .NET Core 1.x, 2.x - you could compile once for all of them, but you've decided to use stupid `#if NETSTANDARD1_x` directives without value (like [this](https://github.com/metadings/Blake2B.cs/pull/2/files)). You do have a lot of DLLs again and no way to detect which platform is running (`readonly static bool IsMono = Type.GetType(\"Mono.Runtime\") != null`).\r\n\r\nI want you to cancel .NET standard; in favor of just .NET framework (and mono)."},{"Id":"7462024550","Type":"IssuesEvent","CreatedAt":"2018-03-31T11:14:43","Actor":"metadings","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/698","RelatedDescription":"Opened issue \"New Version Hell\" (#698) at dotnet/standard","RelatedBody":"Look. I thought .NET would solve this problem.\r\n\r\nNow you do have .NET Framework 2.0, 4.0, 4.5, .NET Standard 1.x, 2.x, .NET Core 1.x, 2.x - you could compile for all of them, but you've decided to use stupid #if directives. You do have a lot of DLLs again and no way to detect which platform is running (IsMono = Type.GetType(\"Mono.Runtime\") != null).\r\n\r\nI want you to cancel .NET core and standard; in favor of just .NET and mono."},{"Id":"7460346731","Type":"IssuesEvent","CreatedAt":"2018-03-30T19:16:00","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/697","RelatedDescription":"Opened issue \"Trimmer tries to run when assemblies are missing\" (#697) at dotnet/standard","RelatedBody":"When project B depends on project A and something causes project A to stop compiling, this appears for project B:\r\n\r\n> Error MSB4018 The \"TrimFiles\" task failed unexpectedly. System.IO.FileNotFoundException: Could not find file 'ProjectA\\bin\\Debug\\ProjectA.exe'.\r\n\r\n```\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at Microsoft.DotNet.Build.Tasks.FileNode.PopulateDependenciesInternal(IDictionary`2 allFiles, Boolean preferNativeImage, ILog log, Stack`1 stack)\r\n   at Microsoft.DotNet.Build.Tasks.FileNode.PopulateDependencies(IDictionary`2 allFiles, Boolean preferNativeImage, ILog log)\r\n   at Microsoft.DotNet.Build.Tasks.TrimFiles.GetFiles(IDictionary`2 packages)\r\n   at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n(build\\Microsoft.Packaging.Tools.Trimming.targets, line 71)\r\n\r\nI don't know if this is the whole picture, but when I ran into this I added `Condition=\"Exists(@(IntermediateAssembly))\"` to the main trimming target which had `AfterTargets=\"CoreCompile\"`.\r\n\r\n/cc @ericstj \r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7476603990","Type":"IssuesEvent","CreatedAt":"2018-04-04T04:11:42","Actor":"sdmaclea","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/28804","RelatedDescription":"Opened issue \"System.Linq.Expressions.Tests is 2nd longest running corefx test suite\" (#28804) at dotnet/corefx","RelatedBody":"@VSadov @OmarTawfik System.Linq.Expressions.Tests is currently the 2nd longest test suite.  This will make it difficult to run on `arm` & `arm64`.  It would be good to find some mechanism to shorten the tests.\r\n\r\nOptions:\r\n- Split the test into multiple smaller tests\r\n- Move longest running tests to `[OuterLoop]`\r\n\r\nThere are current 35K tests in this test suite.  Recent run took ~10 minutes.  Unfortunately all test cases are less than 3s.  This makes it difficult to drop longest tests.\r\n\r\ncc/ @BruceForstall \r\n\r\nFor reference here is the list of the 121 longest running test cases (>1s)\r\n```\r\nSystem.Dynamic.Tests.InvokeBinderTests.DynamicIsArgumentToDynamicFunc [FINISHED] Time: 1.9927431s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableDoubleTest(useInterpreter: False) [FINISHED] Time: 2.6220056s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableDoubleTest(useInterpreter: True) [FINISHED] Time: 1.4480124s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableDecimalTest(useInterpreter: False) [FINISHED] Time: 1.1120327s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableFloatTest(useInterpreter: False) [FINISHED] Time: 2.5895489s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableFloatTest(useInterpreter: True) [FINISHED] Time: 1.401616s\r\nSystem.Linq.Expressions.Tests.LambdaDivideNullableTests.LambdaDivideNullableLongTest(useInterpreter: False) [FINISHED] Time: 1.0264536s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyTests.LambdaMultiplyDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3915122s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyTests.LambdaMultiplyDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1614593s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyTests.LambdaMultiplyFloatTest(useInterpreter: False) [FINISHED] Time: 1.316251s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyTests.LambdaMultiplyFloatTest(useInterpreter: True) [FINISHED] Time: 1.1372815s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableIntTest(useInterpreter: False) [FINISHED] Time: 1.0346104s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableDecimalTest(useInterpreter: False) [FINISHED] Time: 1.1554815s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableLongTest(useInterpreter: False) [FINISHED] Time: 1.0448469s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableShortTest(useInterpreter: False) [FINISHED] Time: 1.0223084s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableDoubleTest(useInterpreter: False) [FINISHED] Time: 2.7074477s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableDoubleTest(useInterpreter: True) [FINISHED] Time: 1.4980895s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableFloatTest(useInterpreter: False) [FINISHED] Time: 2.6610229s\r\nSystem.Linq.Expressions.Tests.LambdaModuloNullableTests.LambdaModuloNullableFloatTest(useInterpreter: True) [FINISHED] Time: 1.4657023s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractNullableTests.LambdaSubtractNullableFloatTest(useInterpreter: False) [FINISHED] Time: 2.6371953s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractNullableTests.LambdaSubtractNullableFloatTest(useInterpreter: True) [FINISHED] Time: 1.4622449s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractNullableTests.LambdaSubtractNullableDoubleTest(useInterpreter: False) [FINISHED] Time: 2.682758s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractNullableTests.LambdaSubtractNullableDoubleTest(useInterpreter: True) [FINISHED] Time: 1.4946114s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractNullableTests.LambdaSubtractNullableDecimalTest(useInterpreter: False) [FINISHED] Time: 1.1522046s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractTests.LambdaSubtractDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3416014s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractTests.LambdaSubtractDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1645089s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractTests.LambdaSubtractFloatTest(useInterpreter: False) [FINISHED] Time: 1.3175548s\r\nSystem.Linq.Expressions.Tests.LambdaSubtractTests.LambdaSubtractFloatTest(useInterpreter: True) [FINISHED] Time: 1.1273936s\r\nSystem.Linq.Expressions.Tests.LambdaTests.ExcessiveArity(useInterpreter: False) [FINISHED] Time: 2.3608711s\r\nSystem.Linq.Expressions.Tests.LambdaTests.ExcessiveArity(useInterpreter: True) [FINISHED] Time: 1.3606387s\r\nSystem.Linq.Expressions.Tests.LambdaModuloTests.LambdaModuloFloatTest(useInterpreter: False) [FINISHED] Time: 1.3668078s\r\nSystem.Linq.Expressions.Tests.LambdaModuloTests.LambdaModuloFloatTest(useInterpreter: True) [FINISHED] Time: 1.1461919s\r\nSystem.Linq.Expressions.Tests.LambdaModuloTests.LambdaModuloDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3960017s\r\nSystem.Linq.Expressions.Tests.LambdaModuloTests.LambdaModuloDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1892877s\r\nSystem.Linq.Expressions.Tests.LambdaDivideTests.LambdaDivideDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3794243s\r\nSystem.Linq.Expressions.Tests.LambdaDivideTests.LambdaDivideDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1771129s\r\nSystem.Linq.Expressions.Tests.LambdaDivideTests.LambdaDivideFloatTest(useInterpreter: False) [FINISHED] Time: 1.3489094s\r\nSystem.Linq.Expressions.Tests.LambdaDivideTests.LambdaDivideFloatTest(useInterpreter: True) [FINISHED] Time: 1.1596047s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(byte), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0007739s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(decimal), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0119496s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(decimal), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0177818s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(double), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0046248s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(double), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0009539s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(float), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0006454s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(int), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0070851s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(int), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0025827s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(long), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0000184s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.S), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.S, useInterpreter: False) [FINISHED] Time: 1.6549509s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.S), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.S, useInterpreter: True) [FINISHED] Time: 1.6549248s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(sbyte), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0026864s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(sbyte), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0044783s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sc), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Sc, useInterpreter: False) [FINISHED] Time: 1.6694606s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sc), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Sc, useInterpreter: True) [FINISHED] Time: 1.6692207s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Scs), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Scs, useInterpreter: False) [FINISHED] Time: 1.6637216s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Scs), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Scs, useInterpreter: True) [FINISHED] Time: 1.6713975s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sp), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Sp, useInterpreter: False) [FINISHED] Time: 1.6610284s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sp), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Sp, useInterpreter: True) [FINISHED] Time: 1.6613443s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Ss), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Ss, useInterpreter: False) [FINISHED] Time: 1.6618458s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Ss), size: 65535, sizeType: typeof(ushort), defaultValue: System.Linq.Expressions.Tests.Ss, useInterpreter: True) [FINISHED] Time: 1.6603889s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(uint), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0055382s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(uint), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0037829s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(ulong), size: 65535, sizeType: typeof(ushort), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0030334s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort), defaultValue: Red, useInterpreter: False) [FINISHED] Time: 1.0042197s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort), defaultValue: Red, useInterpreter: True) [FINISHED] Time: 1.0100877s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort), defaultValue: A, useInterpreter: False) [FINISHED] Time: 1.004383s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort), defaultValue: A, useInterpreter: True) [FINISHED] Time: 1.0036753s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(byte), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0018124s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(decimal), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0133267s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(decimal), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0161646s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(double), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0000325s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(double), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0029968s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(float), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0056955s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(float), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0039203s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(int), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0006488s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(int), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0010372s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(long), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0037126s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(long), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0010061s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.S), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.S, useInterpreter: False) [FINISHED] Time: 1.6586109s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.S), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.S, useInterpreter: True) [FINISHED] Time: 1.6555746s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(sbyte), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0089532s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(sbyte), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0055057s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sc), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Sc, useInterpreter: False) [FINISHED] Time: 1.6742109s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sc), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Sc, useInterpreter: True) [FINISHED] Time: 1.6729866s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Scs), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Scs, useInterpreter: False) [FINISHED] Time: 1.6696599s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Scs), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Scs, useInterpreter: True) [FINISHED] Time: 1.6700531s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(short), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0003105s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sp), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Sp, useInterpreter: False) [FINISHED] Time: 1.6609774s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Sp), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Sp, useInterpreter: True) [FINISHED] Time: 1.662776s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Ss), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Ss, useInterpreter: False) [FINISHED] Time: 1.6581185s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.Ss), size: 65535, sizeType: typeof(ushort?), defaultValue: System.Linq.Expressions.Tests.Ss, useInterpreter: True) [FINISHED] Time: 1.656928s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(uint), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0018986s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(uint), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0032793s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(ulong), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0030178s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(ulong), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: True) [FINISHED] Time: 1.0026698s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(ushort), size: 65535, sizeType: typeof(ushort?), defaultValue: 0, useInterpreter: False) [FINISHED] Time: 1.0011971s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort?), defaultValue: Red, useInterpreter: False) [FINISHED] Time: 1.0064563s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort?), defaultValue: Red, useInterpreter: True) [FINISHED] Time: 1.005413s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort?), defaultValue: A, useInterpreter: False) [FINISHED] Time: 1.0058091s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort?), defaultValue: A, useInterpreter: True) [FINISHED] Time: 1.0065211s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddFloatTest(useInterpreter: False) [FINISHED] Time: 1.346114s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddFloatTest(useInterpreter: True) [FINISHED] Time: 1.1513913s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3791379s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1976306s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableIntTest(useInterpreter: False) [FINISHED] Time: 1.0012336s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort?), defaultValue: Red, useInterpreter: False) [FINISHED] Time: 1.0064563s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.E), size: 65535, sizeType: typeof(ushort?), defaultValue: Red, useInterpreter: True) [FINISHED] Time: 1.005413s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort?), defaultValue: A, useInterpreter: False) [FINISHED] Time: 1.0058091s\r\nSystem.Linq.Expressions.Tests.ArrayBoundsTests.NewArrayBounds(arrayType: typeof(System.Linq.Expressions.Tests.El), size: 65535, sizeType: typeof(ushort?), defaultValue: A, useInterpreter: True) [FINISHED] Time: 1.0065211s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddFloatTest(useInterpreter: False) [FINISHED] Time: 1.346114s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddFloatTest(useInterpreter: True) [FINISHED] Time: 1.1513913s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddDoubleTest(useInterpreter: False) [FINISHED] Time: 1.3791379s\r\nSystem.Linq.Expressions.Tests.LambdaAddTests.LambdaAddDoubleTest(useInterpreter: True) [FINISHED] Time: 1.1976306s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableIntTest(useInterpreter: False) [FINISHED] Time: 1.0012336s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableDoubleTest(useInterpreter: False) [FINISHED] Time: 2.7587455s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableDoubleTest(useInterpreter: True) [FINISHED] Time: 1.5430051s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableDecimalTest(useInterpreter: False) [FINISHED] Time: 1.1739072s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableLongTest(useInterpreter: False) [FINISHED] Time: 1.0561617s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableShortTest(useInterpreter: False) [FINISHED] Time: 1.0096696s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableFloatTest(useInterpreter: False) [FINISHED] Time: 2.7147567s\r\nSystem.Linq.Expressions.Tests.LambdaMultiplyNullableTests.LambdaMultiplyNullableFloatTest(useInterpreter: True) [FINISHED] Time: 1.510102s\r\nSystem.Linq.Expressions.Tests.Compiler_Tests.Conversions(useInterpreter: False) [FINISHED] Time: 1.076697s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableShortTest(useInterpreter: False) [FINISHED] Time: 1.0230902s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableDecimalTest(useInterpreter: False) [FINISHED] Time: 1.1832455s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableDoubleTest(useInterpreter: False) [FINISHED] Time: 2.762005s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableDoubleTest(useInterpreter: True) [FINISHED] Time: 1.548007s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableIntTest(useInterpreter: False) [FINISHED] Time: 1.0042689s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableLongTest(useInterpreter: False) [FINISHED] Time: 1.0556087s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableFloatTest(useInterpreter: False) [FINISHED] Time: 2.732079s\r\nSystem.Linq.Expressions.Tests.LambdaAddNullableTests.LambdaAddNullableFloatTest(useInterpreter: True) [FINISHED] Time: 1.4986741s\r\nSystem.Linq.Expressions.Tests  Total: 35203, Errors: 0, Failed: 0, Skipped: 5, Time: 548.012s\r\n(END)\r\n\r\n```\r\n\r\n\r\n"},{"Id":"7476530450","Type":"IssuesEvent","CreatedAt":"2018-04-04T03:42:02","Actor":"sdmaclea","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/28803","RelatedDescription":"Opened issue \"LongRunning System.Xml.RW.XmlConvert.Tests should move to [OuterLoop]\" (#28803) at dotnet/corefx","RelatedBody":"@krwq, @pjanotti The following 13 tests cases account for 50% of the runtime and should probably move to `[OuterLoop]` to make it practical to run the tests on `arm` and `arm64`\r\n\r\ncc/ @BruceForstall \r\n\r\n```\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.First character in name 4e) [FINISHED] Time: 13.8790109s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.First character in name 4e) [FINISHED] Time: 13.0096413s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.Second+ character in name) [FINISHED] Time: 13.2175263s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.Second+ character in name) [FINISHED] Time: 13.6542781s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.Last character in name 4e) [FINISHED] Time: 13.2407663s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.Last character in name 4e) [FINISHED] Time: 13.6679933s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.First character in name 4e) [FINISHED] Time: 13.4624409s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.First character in name 4e) [FINISHED] Time: 12.9977075s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.Second+ character in name) [FINISHED] Time: 13.1753466s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.Second+ character in name) [FINISHED] Time: 13.6162156s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyPublicId.Last character in name 4e) [FINISHED] Time: 13.1865029s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyWhitespace.Last character in name 4e) [FINISHED] Time: 13.6110529s\r\nSystem.Xml.RW.XmlConvert.Tests  Total: 3850, Errors: 0, Failed: 0, Skipped: 0, Time: 283.471s\r\n```\r\n\r\nThese 18 case represent most of the rest of the test time.  They should also be considered for `[OuterLoop]`\r\n\r\n```\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.First character in name 4e) [FINISHED] Time: 6.1850147s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.First character in name 4e) [FINISHED] Time: 6.1989619s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.First character in name 4e) [FINISHED] Time: 6.2320107s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.Second+ character in name) [FINISHED] Time: 6.2666702s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.Second+ character in name) [FINISHED] Time: 6.2939609s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.Second+ character in name) [FINISHED] Time: 6.4437674s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.Last character in name 4e) [FINISHED] Time: 6.2723406s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.Last character in name 4e) [FINISHED] Time: 6.3052928s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.Last character in name 4e) [FINISHED] Time: 6.4434619s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.First character in name 4e) [FINISHED] Time: 6.175689s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.First character in name 4e) [FINISHED] Time: 6.1956739s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.First character in name 4e) [FINISHED] Time: 6.2329536s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.Second+ character in name) [FINISHED] Time: 6.2512034s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.Second+ character in name) [FINISHED] Time: 6.2722299s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.Second+ character in name) [FINISHED] Time: 6.4219281s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyName.Last character in name 4e) [FINISHED] Time: 6.2474646s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNCName.Last character in name 4e) [FINISHED] Time: 6.2710313s\r\nSystem.Xml.Tests.XmlConvertTests.RunTests(testCase: VerifyNMTOKEN.Last character in name 4e) [FINISHED] Time: 6.4074677s\r\n```\r\n"},{"Id":"7476476490","Type":"IssuesEvent","CreatedAt":"2018-04-04T03:21:26","Actor":"sdmaclea","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/28802","RelatedDescription":"Opened issue \"LongRunning System.IO.FileSystem.Tests should be [OuterLoop]\" (#28802) at dotnet/corefx","RelatedBody":"@JeremyKuhne, @pjanotti System.IO.FileSystem.Tests runtime is dominated by the following 10 testcases.  These should move to `[OuterLoop]` to make it practical to run on `arm` and `arm64`  \r\n\r\ncc/ @BruceForstall \r\n\r\n```\r\nSystem.IO.Tests.File_Copy_str_str_b.CopyFileWithData_MemberData(data: ['~', 'z', 'c', 'v', '_', ...], readOnly: True) [FINISHED] Time: 198.2043799s\r\nSystem.IO.Tests.File_Copy_str_str_b.CopyFileWithData_MemberData(data: [0x0013, 0x0097, 'd', '\\\\v', 'i', ...], readOnly: False) [FINISHED] Time: 197.4694043s\r\nSystem.IO.Tests.DirectoryInfo_GetSetTimes.TimesIncludeMillisecondPart_Linux [FINISHED] Time: 37.1263451s\r\nSystem.IO.Tests.FileInfo_CopyTo_str.CopyFileWithData_MemberData(data: [0x0093, 0x00bd, 'º', '\\\\0', 'Ü', ...], readOnly: True) [FINISHED] Time: 197.1910868s\r\nSystem.IO.Tests.FileInfo_CopyTo_str.CopyFileWithData_MemberData(data: [0x008b, 'h', 0x007f, '6', 0x0086, ...], readOnly: False) [FINISHED] Time: 197.2375303s\r\nSystem.IO.Tests.FileInfo_CopyTo_str_b.CopyFileWithData_MemberData(data: ['a', 'î', 0x0017, 0x0099, 0x009f, ...], readOnly: True) [FINISHED] Time: 198.8310579s\r\nSystem.IO.Tests.FileInfo_CopyTo_str_b.CopyFileWithData_MemberData(data: ['â', 'ä', 0x0095, 0x008d, 'ô', ...], readOnly: False) [FINISHED] Time: 198.4708644s\r\nSystem.IO.Tests.Directory_GetSetTimes.TimesIncludeMillisecondPart_Linux [FINISHED] Time: 37.0714579s\r\nSystem.IO.Tests.File_Copy_str_str.CopyFileWithData_MemberData(data: ['F', '7', 'ú', 'Ê', 0x00bd, ...], readOnly: True) [FINISHED] Time: 198.5802235s\r\nSystem.IO.Tests.File_Copy_str_str.CopyFileWithData_MemberData(data: ['H', 'p', 'Ð', '§', 'Q', ...], readOnly: False) [FINISHED] Time: 198.5611659s\r\nSystem.IO.Tests.File_GetSetTimes.TimesIncludeMillisecondPart_Linux [FINISHED] Time: 37.0320029s\r\nSystem.IO.Tests.FileInfo_GetSetTimes.TimesIncludeMillisecondPart_Linux [FINISHED] Time: 37.0344144s\r\nSystem.IO.FileSystem.Tests  Total: 3992, Errors: 0, Failed: 0, Skipped: 0, Time: 1803.294s\r\n```"},{"Id":"7476388120","Type":"IssuesEvent","CreatedAt":"2018-04-04T02:49:06","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/28801","RelatedDescription":"Closed issue \"https://www.account.microsoft.com\" (#28801) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7476622203","Type":"PullRequestEvent","CreatedAt":"2018-04-04T04:19:18","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25916","RelatedDescription":"Opened pull request \"Handle lock statement in control flow graph\" (#25916) at dotnet/roslyn","RelatedBody":""},{"Id":"7476089609","Type":"PullRequestEvent","CreatedAt":"2018-04-04T01:00:20","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25538","RelatedDescription":"Merged pull request \"UseDefaultLiteral and RemoveUnnecessaryCast shouldn't introduce invalid default literal in pattern or case label\" (#25538) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nType `case default(bool):`, or `case (bool)default:`, or `b is default(bool)`, or `b is (bool)default`.\r\nIn all those cases, no code fix should be offered to simplify to the `default` literal, as this results in a compilation error.\r\n\r\n### Bugs this fixes\r\nfixes #25456 \r\n\r\n### Risk\r\n### Performance impact\r\nLow. A few syntax checks were added to the logic that verifies if a change results in different semantics.\r\n\r\n### Is this a regression from a previous update?\r\nNo\r\n\r\n### Root cause analysis\r\nAt least for the `is` case, it was allowed for a short while, then we made a language change to reserve `default` for use in C# 8 `match` expressions. For `case`, I don't remember.\r\n\r\n### How was the bug found?\r\nReported internally."},{"Id":"7476089587","Type":"IssuesEvent","CreatedAt":"2018-04-04T01:00:20","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25456","RelatedDescription":"Closed issue \"\"Simplify Default Expression\" produces bad constant pattern.\" (#25456) at dotnet/roslyn","RelatedBody":"In this code under a recent language version\r\n\r\n``` c#\r\nclass Program\r\n{\r\n    public static void Main()\r\n    {\r\n        object o = null;\r\n        int i = 1;\r\n        char c = '\\0';\r\n\r\n        if (o is default(object)) { }\r\n        if (i is default(int)) { }\r\n        if (c is default(char)) { }\r\n    }\r\n}\r\n```\r\n\r\nThe IDE offers to simplify things to\r\n\r\n``` c#\r\n        if (o is default) { }\r\n        if (i is default) { }\r\n        if (c is default) { }\r\n```\r\n\r\nHowever, that is not correct and causes a compile-time error. `default` cannot be used as a pattern.\r\n\r\nThe IDE should instead offer to simplify things to\r\n\r\n``` c#\r\n        if (o is null) { }\r\n        if (i is 0) { }\r\n        if (c is '\\0') { }\r\n```\r\n\r\nGenerally speaking, this fixer should offer `null` as a simplification of `default(T)` when `T` is a reference type or nullable value type, `0m` when `T` is `decimal`, `0` when `T` is another numeric type, `false` if `T` is `bool`, and `'\\0'` if T is `char`. That covers all of the situations you can use in a pattern, so it is fine to offer `default` for other types.\r\n"},{"Id":"7476073280","Type":"PullRequestEvent","CreatedAt":"2018-04-04T00:54:11","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25133","RelatedDescription":"Merged pull request \"Adding missing completion for switch when clause\" (#25133) at dotnet/roslyn","RelatedBody":"fixes #25084 \r\nfixes #25293"},{"Id":"7476073273","Type":"IssuesEvent","CreatedAt":"2018-04-04T00:54:11","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25293","RelatedDescription":"Closed issue \"Annoying completion when adding pattern conditional in front of expression\" (#25293) at dotnet/roslyn","RelatedBody":"When inserting some code into an existing expression, I find it common to get an annoying completion when trying to type `null`.\r\nFor example, if you want to make a declaration into a conditional (from `var x = z;` to `var x = something is null ? y : z;`), `null` is not offered.\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/37071882-9b13422c-2173-11e8-8ff0-062696253561.png)\r\n\r\nTagging @Neme12 who is fixing some other completion issues with patterns."},{"Id":"7476073269","Type":"IssuesEvent","CreatedAt":"2018-04-04T00:54:11","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25084","RelatedDescription":"Closed issue \"Missing completion in switch 'when' clause\" (#25084) at dotnet/roslyn","RelatedBody":"Version used: Visual Studio 15.6 Preview 6 (same behavior in latest master bits)\r\n\r\nSample code:\r\n```c#\r\nclass C\r\n{\r\n    void M()\r\n    {\r\n        var condition = true;\r\n\r\n        switch (true)\r\n        {\r\n            case true\r\n        }\r\n    }\r\n}\r\n```\r\nAfter `case true`, start typing `when`.\r\nExpected behavior: `when` is offered and selected\r\nActual behavior: it's not offered at all\r\n\r\n![image](https://user-images.githubusercontent.com/11444821/36731831-33f8c6ae-1bcc-11e8-948b-91a7b218fe9a.png)\r\n\r\nAfter `when`, start typing `condition`. No completion whatsoever:\r\n![image](https://user-images.githubusercontent.com/11444821/36731918-7718473e-1bcc-11e8-9603-bffcaf684667.png)\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7475770070","Type":"IssuesEvent","CreatedAt":"2018-04-03T23:08:49","Actor":"zpodlovics","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5648","RelatedDescription":"Opened issue \"F# HelloWorld fails with ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'Microsoft.FSharp.Core.FSharpFunc`2<Microsoft.FSharp.Core.Unit, System.__Canon>' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\" (#5648) at dotnet/corert","RelatedBody":"I have modified the HelloWorld [1] example to F# and tried to compile it with CoreRT. \r\n[helloworld.zip](https://github.com/dotnet/corert/files/1873738/helloworld.zip)\r\n\r\n\r\nThe ILCompiler fails with the following message:\r\n\r\n```\r\ndotnet publish -c Release -r linux-x64\r\nMicrosoft (R) Build Engine version 15.5.180.51428 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for /tmp/helloworld/helloworld.fsproj...\r\n  Generating MSBuild file /tmp/helloworld/obj/helloworld.fsproj.nuget.g.props.\r\n  Restore completed in 1.77 sec for /tmp/helloworld/helloworld.fsproj.\r\n  helloworld -> /tmp/helloworld/bin/Release/netcoreapp2.0/linux-x64/helloworld.dll\r\n  /usr/bin/clang-3.9\r\n  Generating native code\r\nEXEC : error : Code generation failed [/tmp/helloworld/helloworld.fsproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'Microsoft.FSharp.Core.FSharpFunc`2<Microsoft.FSharp.Core.Unit, System.__Canon>' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO& pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO& pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(IMethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/zpodlovics/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-26403-02/build/Microsoft.NETCore.Native.targets(171,5): error MSB3073: The command \"\"/home/zpodlovics/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-26403-02/tools/ilc\" @\"obj/Release/netcoreapp2.0/linux-x64/native/helloworld.ilc.rsp\"\" exited with code 1. [/tmp/helloworld/helloworld.fsproj]\r\n```\r\n\r\nUsing a more recent version (4.3.*) of F# dependency have the same problem (by modifying the fsproj file):\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Core\" Version=\"4.3.*\" />\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```\r\n\r\nThe exception seems to raised from here:\r\nhttps://github.com/dotnet/corert/blob/master/src/ILCompiler.Compiler/src/Compiler/ILScanner.cs#L155\r\n\r\n[1] https://github.com/dotnet/corert/tree/master/samples/HelloWorld"},{"Id":"7473066773","Type":"IssuesEvent","CreatedAt":"2018-04-03T14:25:14","Actor":"xoofx","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5647","RelatedDescription":"Opened issue \"Assembly.Location returns null\" (#5647) at dotnet/corert","RelatedBody":"From a discussion  #5017:\r\n\r\n> @MichalStrehovsky\r\n>> Update Benchmark.NET to call Assembly.Location instead?\r\n>\r\n> We throw from that too :).\r\n>\r\n>Assembly.Location is really difficult to support in an AOT compiled app because:\r\n>\r\n> The original assembly doesn't exist in the filesystem. There's only a virtualized version of it present somewhere in the native executable that we use in reflection to pretend everything is in it's right place.\r\nEven the mapping from logical assembly to native executable is 1:n (1 managed assembly can be spread into multiple native executables - think a shared library that has some commonly used types from e.g. System.Private.CoreLib in it, and an app EXE that needs a less common type from CoreLib)\r\n> Whatever we pretend is not going to help Benchmark.NET to accomplish what it's trying to do anyway.\r\n\r\nI'm typically using `Assembly.Location` to load resources (e.g native shared lib/dll) that are collocated with the assembly... \r\nI understand that returning a location for an assembly that doesn't exist would be more troublesome, so it seems that using `AppDomain.CurrentDomain.BaseDirectory` would give a rough similar behavior (not strictly equal, but at least to get something working across .NET platforms)... \r\nI'm fine with this workaround, just wanted to make sure that it is the preferred way for doing such things, in case you recommend something more adequate?"},{"Id":"7467807339","Type":"PullRequestEvent","CreatedAt":"2018-04-02T16:41:22","Actor":"BredPet","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5646","RelatedDescription":"Opened pull request \"Fix cmake toolchain compile flags loop\" (#5646) at dotnet/corert","RelatedBody":"\t- fix https://github.com/dotnet/corert/issues/5093\r\n\t- cmake toolchain refactoring\r\n"},{"Id":"7463996183","Type":"IssuesEvent","CreatedAt":"2018-04-01T13:15:44","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5645","RelatedDescription":"Opened issue \"Method not found: System.ReadOnlyMemory`1<Byte>.Retain(Boolean) -> System.Buffers.MemoryHandle \" (#5645) at dotnet/corert","RelatedBody":"I'm hitting a `MissingMethodException` in the `ReadOnlyMemory<T>` class when using a HttpClient. I suspect this might be a case of mismatching dependencies / the API change for Span/Memory that hasn't completely solidified yet. Is there a workaround for this or will it resolve itself when the dependencies get in sync?\r\n\r\n\r\n```\r\nSystem.MissingMethodException: Method not found: 'System.Buffers.MemoryHandle System.ReadOnlyMemory`1<Byte>.Retain(Boolean)'.\r\n   at test!<BaseAddress>+0x521d1f\r\n   at Internal.Runtime.CompilerHelpers.ThrowHelpers.ThrowMissingMethodException(ExceptionStringID, String) + 0x5\r\n   at System.Net.Security.SslStreamPal.EncryptMessage(SafeDeleteContext, ReadOnlyMemory`1, Int32, Int32, Byte[]&, Int32&) + 0x11\r\n   at System.Net.Security.SecureChannel.Encrypt(ReadOnlyMemory`1, Byte[]&, Int32&) + 0xeb\r\n   at System.Net.Security.SslStreamInternal.WriteSingleChunk[TWriteAdapter](TWriteAdapter, ReadOnlyMemory`1) + 0x193\r\n   at System.Net.Security.SslStreamInternal.WriteAsyncInternal[TWriteAdapter](TWriteAdapter, ReadOnlyMemory`1) + 0x13b\r\n   at System.Net.Security.SslStream.WriteAsync(ReadOnlyMemory`1, CancellationToken) + 0xbc\r\n   at System.Net.Http.HttpConnection.WriteToStreamAsync(ReadOnlyMemory`1) + 0x17c\r\n   at System.Net.Http.HttpConnection.FlushAsync() + 0xa7\r\n   at System.Net.Http.HttpConnection.<SendAsyncCore>d__59.MoveNext() + 0x35ee\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x30\r\n   at System.Net.Http.HttpConnectionPool.<SendWithRetryAsync>d__36.MoveNext() + 0x3e4\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x30\r\n   at test!<BaseAddress>+0x5036f2\r\n   at System.Net.Http.RedirectHandler.<SendAsync>d__4.MoveNext() + 0x13c\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x30\r\n   at test!<BaseAddress>+0x5036f2\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__62.MoveNext() + 0x42f\r\n```\r\n"},{"Id":"7463985669","Type":"PullRequestEvent","CreatedAt":"2018-04-01T13:08:07","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5644","RelatedDescription":"Opened pull request \"Add gss as NativeFramework on OSX to support System.Net.Security.Native.a linking\" (#5644) at dotnet/corert","RelatedBody":"When using features from CoreFX that rely on System.Net.Security.Native.a, the 'gss' Framework needs to be linked in on OSX.\r\nI'm not sure if this should go here automatically, but I guess there shouldn't be any downsides to providing the Framework link if it isn't used."},{"Id":"7462130052","Type":"PullRequestEvent","CreatedAt":"2018-03-31T12:39:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5643","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5643) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7461748066","Type":"PullRequestEvent","CreatedAt":"2018-03-31T07:32:29","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5643","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5643) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7461202402","Type":"PullRequestEvent","CreatedAt":"2018-03-31T00:07:38","Actor":"ahsonkhan","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5642","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5642) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7460989580","Type":"PullRequestEvent","CreatedAt":"2018-03-30T22:31:31","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5642","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5642) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7459227263","Type":"IssuesEvent","CreatedAt":"2018-03-30T14:26:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5604","RelatedDescription":"Closed issue \"Net Native compilation fails with Out of Memory (Xamarin/UWP)\" (#5604) at dotnet/corert","RelatedBody":"_From @sebastianfilke on March 22, 2018 13:54_\n\nWe have a big problem with the net native compilation in a relative big project.\r\nThe release build only works if we disable the option “Compile with .NET Native tool chain” or “Optimize code”.\r\nOtherwise the build takes up to 10 minutes and ends with an out of memory error.\r\n\r\nThe build log file is attached: [build.log](https://github.com/dotnet/core/files/1837784/build.log)\r\n\r\nThere is also an ilcRepro.zip file attached:\r\nhttps://drive.google.com/file/d/1bhEwZco0fugxxRDxj0hi86jnb9eJIpOV/view?usp=sharing\r\n\r\nWe tried several different settings in the Default.rd.xml, but nothing worked yet.\r\n\r\n•\tWe comment out the application assembly tag\r\n<!-- <Assembly Name=\"*Application*\" Dynamic=\"Required All\" DoNotOptimize=\"true\"/> -->\r\n•\tWe also tried to add an extra assembly tag for every assembly and with DoNotOptimize\r\n\r\nBut neither worked. \r\n\r\nPlease give me an advice or another solution. I don’t know if this is a bug or an assembly doesn’t worked or is not ready for net native.\r\n\n\n_Copied from original issue: dotnet/core#1372_"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7476453879","Type":"IssuesEvent","CreatedAt":"2018-04-04T03:13:05","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2110","RelatedDescription":"Closed issue \"Multi-TFM netcoreapp2.1 and net461 can't find packages\" (#2110) at dotnet/sdk","RelatedBody":"Using build x64:\r\n[latest 2.1](https://github.com/dotnet/versions/tree/master/build-info/dotnet/product/cli/release/2.1) \r\n\r\nSteps:\r\n1. In CLI or VS create a new .net core console app.\r\n2. Change frameworks to `<TargetFrameworks>netcoreapp2.1;net461</TargetFrameworks>` or any installed full fx framework.\r\n3. Restore/Build solution\r\n\r\n```\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2>dotnet build\r\nMicrosoft (R) Build Engine version 15.7.143.38429 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj...\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.App with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostPolicy with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostResolver with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetAppHost with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n  Generating MSBuild file C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\obj\\t2.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\obj\\t2.csproj.nuget.g.targets.\r\n  Restore failed in 440.42 ms for C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.App with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostPolicy with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostResolver with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetAppHost with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n    0 Warning(s)\r\n    4 Error(s)\r\n\r\nTime Elapsed 00:00:01.47\r\n```"},{"Id":"7475847365","Type":"PullRequestEvent","CreatedAt":"2018-04-03T23:33:41","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2111","RelatedDescription":"Opened pull request \"Add support for /t:Publish /p:NoBuild=true\" (#2111) at dotnet/sdk","RelatedBody":"dotnet/sdk half of https://github.com/dotnet/cli/issues/5331\r\n\r\nAfter this, we just need to wire --no-build to /p:NoBuild=true in dotnet/cli"},{"Id":"7475704106","Type":"IssuesEvent","CreatedAt":"2018-04-03T22:49:22","Actor":"vsccarl","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2110","RelatedDescription":"Opened issue \"Multi-TFM netcoreapp2.1 and net461 can't find packages\" (#2110) at dotnet/sdk","RelatedBody":"Using build x64:\r\n[latest 2.1](https://github.com/dotnet/versions/tree/master/build-info/dotnet/product/cli/release/2.1) \r\n\r\nSteps:\r\n1. In CLI or VS create a new .net core console app.\r\n2. Change frameworks to `<TargetFrameworks>netcoreapp2.1;net461</TargetFrameworks>` or any installed full fx framework.\r\n3. Restore/Build solution\r\n\r\n```\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2>dotnet build\r\nMicrosoft (R) Build Engine version 15.7.143.38429 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj...\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.App with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostPolicy with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostResolver with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetAppHost with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n  Generating MSBuild file C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\obj\\t2.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\obj\\t2.csproj.nuget.g.targets.\r\n  Restore failed in 440.42 ms for C:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.App with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostPolicy with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetHostResolver with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102: Unable to find package runtime.win-x86.Microsoft.NETCore.DotNetAppHost with version (>= 2.1.0-preview2-26330-03)\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 8 version(s) in nuget.org [ Nearest version: 2.1.0-preview1-26216-03 ]\r\nC:\\Users\\v-sccarl\\Documents\\testing2\\t2\\t2.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n    0 Warning(s)\r\n    4 Error(s)\r\n\r\nTime Elapsed 00:00:01.47\r\n```"},{"Id":"7475586574","Type":"PullRequestEvent","CreatedAt":"2018-04-03T22:16:17","Actor":"KevinRansom","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2109","RelatedDescription":"Opened pull request \" Fix F# typo, add smoke tests, Fix behaviour for implicit defines\" (#2109) at dotnet/sdk","RelatedBody":"This Fixes: \r\n1.  a typo in the FSharp targets files:   https://github.com/dotnet/sdk/compare/master...KevinRansom:addtests?expand=1#diff-28f8d0028b86867ebcdb1cc7ecc55a3cR26\r\n2.  Adds smoke tests for building F# .dll's and .exe's\r\n\r\n3.  Also fixes an issue with implicit #defines\r\n\r\nThanks\r\n\r\nKevin\r\n\r\n/cc @livarcocc @nguerrera \r\n\r\n"},{"Id":"7475396370","Type":"PullRequestEvent","CreatedAt":"2018-04-03T21:30:49","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2101","RelatedDescription":"Merged pull request \"Allow dotnet host path to be overridden via DOTNET_INSTALL_DIR environment variable\" (#2101) at dotnet/sdk","RelatedBody":"Fixes #2098"},{"Id":"7475287755","Type":"PullRequestEvent","CreatedAt":"2018-04-03T21:07:16","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2097","RelatedDescription":"Merged pull request \"Merge release/2.1.3xx to master\" (#2097) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7474994564","Type":"IssuesEvent","CreatedAt":"2018-04-03T20:10:04","Actor":"daveaglick","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2108","RelatedDescription":"Opened issue \"Question about Microsoft.NET.Build.Tasks references in preview SDKs\" (#2108) at dotnet/sdk","RelatedBody":"I noticed the preview SDK doesn't include the assemblies that Microsoft.NET.Build.Tasks.dll depends on in the tools folder any more. At least they're not there in 2.1.300-preview1-008174, though it does look like they were there in 2.1.200-preview-007474.\r\n\r\n![2018-04-03_15h44_18](https://user-images.githubusercontent.com/1020407/38272677-e5be13fc-3757-11e8-93ae-9b3e4d19eb0b.png)\r\n\r\nI also noticed the target for the SDK tools in 2.1.300-preview1-008174 switched to netcoreapp2.0 from netcoreapp1.0 which might have something to do with it.\r\n\r\nI curious, but also this is causing some problems for me. When building with the MSBuild APIs, builds are failing whenever the preview is installed with:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018: The \"ReportAssetsLogMessages\" task failed unexpectedly.\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018: System.IO.FileNotFoundException: Could not load file or assembly 'NuGet.Common, Version=4.7.0.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018: File name: 'NuGet.Common, Version=4.7.0.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35'\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.NET.Build.Tasks.LockFileCache.LoadLockFile\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.NET.Build.Tasks.LockFileCache.GetLockFile\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ReportAssetsLogMessages.get_LockFile\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ReportAssetsLogMessages.ExecuteCore()\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in E:\\A\\_work\\82\\s\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 631\r\n    C:\\Program Files\\dotnet\\sdk\\2.1.300-preview1-008174\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.PackageDependencyResolution.targets(337,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__25.MoveNext() in E:\\A\\_work\\82\\s\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 787\r\n```\r\n\r\nI suspect that's because Microsoft.NET.Build.Tasks.dll can no longer find NuGet.Common.dll next to it. Builds do succeed when not using the MSBuild API and instead using `dotnet build` or VS directly, which makes me wonder if there's an extra MSBuild property or something I should be setting.\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"977245582724022272","CreatedAt":"2018-03-23T18:07:57+00:00","UserScreenname":"dotnet","Text":"Calling all Desktop Developers: how should UI development be improved? https://t.co/lKHACsK0Sv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":75,"RawContent":null}]}},"RunOn":"2018-04-04T05:30:21.101541Z","RunDurationInMilliseconds":8061}