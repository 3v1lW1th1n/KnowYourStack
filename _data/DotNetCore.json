{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January Preview of Quality Rollup","PublishedOn":"2020-01-23T22:48:37+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Preview of Quality Rollup Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1","PublishedOn":"2020-01-14T20:21:23+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2020 Update. These updates also contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are...","Href":"https://devblogs.microsoft.com/dotnet/net-core-january-2020/","RawContent":null},{"Title":".NET Framework January Security and Quality Rollup","PublishedOn":"2020-01-14T19:13:47+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-0605, CVE-2020-0606, CVE-2020-0646 – .NET Framework Remote Code Execution\nA remote...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/","RawContent":null},{"Title":"Collecting and analyzing memory dumps","PublishedOn":"2020-01-13T21:14:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Building upon the diagnostics improvements introduced in .NET Core 3.1, we&#8217;ve introduced a new tool for collecting heap dumps from a running .NET Core process.\nIn a previous blog post we...","Href":"https://devblogs.microsoft.com/dotnet/collecting-and-analyzing-memory-dumps/","RawContent":null},{"Title":"An Introduction to DataFrame","PublishedOn":"2019-12-16T16:00:04+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Last month, we announced .NET support for Jupyter notebooks, and showed how to use them to work with .NET for Apache Spark and ML.NET. Today, we&#8217;re announcing the preview of a DataFrame type for...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-dataframe/","RawContent":null},{"Title":"ConfigureAwait FAQ","PublishedOn":"2019-12-12T04:31:21+00:00","CommentsCount":46,"FacebookCount":0,"Summary":".NET added async/await to the languages and libraries over seven years ago. In that time, it&#8217;s caught on like wildfire, not only across the .NET ecosystem, but also being replicated in a myriad...","Href":"https://devblogs.microsoft.com/dotnet/configureawait-faq/","RawContent":null},{"Title":"An Introduction to System.Threading.Channels","PublishedOn":"2019-12-12T03:52:18+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"&#8220;Producer/consumer&#8221; problems are everywhere, in all facets of our lives. A line cook at a fast food restaurant, slicing tomatoes that are handed off to another cook to assemble a burger,...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/","RawContent":null},{"Title":".NET Framework December 2019 Security and Quality Rollup","PublishedOn":"2019-12-10T21:39:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the December 2019 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the latest security...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/","RawContent":null},{"Title":"We made Windows Server Core container images >40% smaller","PublishedOn":"2019-12-09T21:50:23+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Over the past year, we&#8217;ve been working with the Windows Server team to make Windows Server Core container images a lot smaller. They are now 40% smaller! The Windows Server team has already...","Href":"https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 1","PublishedOn":"2019-12-09T09:33:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We open sourced our new GC Perf Infrastructure! It’s now part of the dotnet performance repo. I’ve been meaning to write about it ‘cause some curious minds had been asking when they could use it after...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11465516205","Type":"IssuesEvent","CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11452253839","Type":"IssuesEvent","CreatedAt":"2020-02-06T13:21:11","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Reopened issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11358893853","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:36:29","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11358890799","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:35:17","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Opened issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11357395218","Type":"IssuesEvent","CreatedAt":"2020-01-25T04:38:47","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357323121","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:54:25","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Opened issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357320828","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:52:51","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11334200867","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:30","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Merged pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"11334196288","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:01","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Merged pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"11334180047","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:07:14","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Merged pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"11334176612","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:52","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Merged pull request \"Link Reactive Extensions to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11334171592","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:20","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Merged pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11275368710","Type":"IssuesEvent","CreatedAt":"2020-01-14T20:37:01","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Opened issue \"January 2020 .NET Updates\" (#150) at dotnet/announcements","RelatedBody":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1-download.md) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2-download.md) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15-download.md) )\r\n\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11274184940","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:14","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149) at dotnet/announcements","RelatedBody":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11274183716","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:05","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11214612804","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:02:39","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Opened issue \".NET Core 2.2 has reached end of life\" (#147) at dotnet/announcements","RelatedBody":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11550101255","Type":"PullRequestEvent","CreatedAt":"2020-02-18T21:46:39","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Merged pull request \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006) at dotnet/coreclr","RelatedBody":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537"},{"Id":"11549993258","Type":"PullRequestEvent","CreatedAt":"2020-02-18T21:32:59","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Merged pull request \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014) at dotnet/coreclr","RelatedBody":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh"},{"Id":"11549984618","Type":"PullRequestEvent","CreatedAt":"2020-02-18T21:31:55","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Merged pull request \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019) at dotnet/coreclr","RelatedBody":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas "},{"Id":"11548690909","Type":"PullRequestEvent","CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed pull request \"Please ignore this PR, I made a mistake to create this here.\" (#28021) at dotnet/coreclr","RelatedBody":"Please ignore this PR, I made a mistake to create this here."},{"Id":"11548650100","Type":"PullRequestEvent","CreatedAt":"2020-02-18T18:50:46","Actor":"tqinli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Opened pull request \"change pthread_cond_wait to pthread_cond_timedwait\" (#28021) at dotnet/coreclr","RelatedBody":"Need to do some small refactoring because CPalSynchronizationManager::GetAbsoluteTimeout is not visible to cs.cpp. Other than that, it is a straight forward switch from using pthread_cond_wait to pthread_cond_timedwait. The timeout I set for now is 1s or 1000ms. Another change is then ETIMEDOUT is now a legit error."},{"Id":"11548510146","Type":"PullRequestEvent","CreatedAt":"2020-02-18T18:34:03","Actor":"ravikantcool2008","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28020","RelatedDescription":"Opened pull request \"SECURITY.md\" (#28020) at dotnet/coreclr","RelatedBody":"pull new request"},{"Id":"11548454737","Type":"PullRequestEvent","CreatedAt":"2020-02-18T18:27:25","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Merged pull request \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012) at dotnet/coreclr","RelatedBody":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11552244029","Type":"PullRequestEvent","CreatedAt":"2020-02-19T04:20:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13246","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13246) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.4\r\n- **Date Produced**: 2/19/2020 3:27 AM\r\n- **Commit**: aa9f9ef5a0dbd98646d43d892b2729a51692b552\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11552027712","Type":"PullRequestEvent","CreatedAt":"2020-02-19T03:31:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13242","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13242) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200218.7\r\n- **Date Produced**: 2/19/2020 1:59 AM\r\n- **Commit**: c6257f42bad49a73766791299733f1b25ee152a7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20118.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n"},{"Id":"11551975571","Type":"PullRequestEvent","CreatedAt":"2020-02-19T03:20:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13245","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13245) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:53 AM\r\n- **Commit**: 92f4b73e3f7e624b7a54db50fdb91cebb39151db\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20118.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"11551952085","Type":"PullRequestEvent","CreatedAt":"2020-02-19T03:15:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13244","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13244) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:50 AM\r\n- **Commit**: 6e3d4144add5b26f3f81db73878320705226001a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11551831860","Type":"PullRequestEvent","CreatedAt":"2020-02-19T02:50:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13245","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13245) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:53 AM\r\n- **Commit**: 92f4b73e3f7e624b7a54db50fdb91cebb39151db\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20118.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"11551784651","Type":"PullRequestEvent","CreatedAt":"2020-02-19T02:40:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13244","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13244) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:50 AM\r\n- **Commit**: 6e3d4144add5b26f3f81db73878320705226001a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11551372483","Type":"PullRequestEvent","CreatedAt":"2020-02-19T01:15:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13243","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13243) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 11:47 PM\r\n- **Commit**: 13dcac62f582aa35f27f41880d5a90291eed955f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11551219881","Type":"PullRequestEvent","CreatedAt":"2020-02-19T00:45:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13243","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13243) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 11:47 PM\r\n- **Commit**: 13dcac62f582aa35f27f41880d5a90291eed955f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11552227341","Type":"IssuesEvent","CreatedAt":"2020-02-19T04:17:03","Actor":"stephentoub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1712","RelatedDescription":"Closed issue \"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?\" (#1712) at dotnet/standard","RelatedBody":"```\r\npublic static Task<int> SendAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags);\r\npublic static Task<int> SendAsync(this Socket socket, IList<ArraySegment<byte>> buffers, SocketFlags socketFlags);\r\npublic static ValueTask<int> SendAsync(this Socket socket, ReadOnlyMemory<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken = default);\r\npublic static Task<int> SendToAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP);\r\n\r\n```\r\nSee ? I guess we need one. :)"},{"Id":"11551491042","Type":"IssuesEvent","CreatedAt":"2020-02-19T01:40:31","Actor":"ohsorry","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1712","RelatedDescription":"Opened issue \"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?\" (#1712) at dotnet/standard","RelatedBody":"```\r\npublic static Task<int> SendAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags);\r\npublic static Task<int> SendAsync(this Socket socket, IList<ArraySegment<byte>> buffers, SocketFlags socketFlags);\r\npublic static ValueTask<int> SendAsync(this Socket socket, ReadOnlyMemory<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken = default);\r\npublic static Task<int> SendToAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP);\r\n\r\n```\r\nSee ? I guess we need one. :)"},{"Id":"11545474424","Type":"PullRequestEvent","CreatedAt":"2020-02-18T13:30:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1711","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1711) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11545198370","Type":"PullRequestEvent","CreatedAt":"2020-02-18T13:00:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1711","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1711) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11535865441","Type":"PullRequestEvent","CreatedAt":"2020-02-17T13:10:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1710","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1710) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11535781208","Type":"PullRequestEvent","CreatedAt":"2020-02-17T13:00:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1710","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1710) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11529456265","Type":"PullRequestEvent","CreatedAt":"2020-02-16T13:20:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1709","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1709) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200215.1\r\n- **Date Produced**: 2/15/2020 2:11 PM\r\n- **Commit**: e133be6cf759f6badf7bc4052118ad8197eb03bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20115.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11529396630","Type":"PullRequestEvent","CreatedAt":"2020-02-16T13:00:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1709","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1709) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200215.1\r\n- **Date Produced**: 2/15/2020 2:11 PM\r\n- **Commit**: e133be6cf759f6badf7bc4052118ad8197eb03bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20115.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11551475420","Type":"PullRequestEvent","CreatedAt":"2020-02-19T01:37:12","Actor":"tgani-msft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Closed pull request \"Backport attribute to support inline namespaces in C++/CLI \" (#42851) at dotnet/corefx","RelatedBody":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs."},{"Id":"11551146929","Type":"PullRequestEvent","CreatedAt":"2020-02-19T00:30:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42865","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42865) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/18/2020 10:28 PM\r\n- **Commit**: c5d3d752260383fbed72ba2b4d86d82fea673c76\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"11550875981","Type":"PullRequestEvent","CreatedAt":"2020-02-18T23:40:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42865","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42865) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/18/2020 10:28 PM\r\n- **Commit**: c5d3d752260383fbed72ba2b4d86d82fea673c76\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"11550863256","Type":"PullRequestEvent","CreatedAt":"2020-02-18T23:38:06","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42864","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42864) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 9:03 PM\r\n- **Commit**: 25bb13bc33c5911c6319722203dbb83eaebe7b08\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"11550266473","Type":"PullRequestEvent","CreatedAt":"2020-02-18T22:07:28","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42859","RelatedDescription":"Merged pull request \"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe\" (#42859) at dotnet/corefx","RelatedBody":"Porting #42849 relevant parts to release/3.1. Original PR was against 2.1. This has already been approved by tactics."},{"Id":"11550250238","Type":"PullRequestEvent","CreatedAt":"2020-02-18T22:05:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42864","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42864) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 9:03 PM\r\n- **Commit**: 25bb13bc33c5911c6319722203dbb83eaebe7b08\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11552181586","Type":"PullRequestEvent","CreatedAt":"2020-02-19T04:06:43","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/41771","RelatedDescription":"Merged pull request \"Merge release/dev16.5-vs-deps to master-vs-deps\" (#41771) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.5-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.5-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11552064688","Type":"IssuesEvent","CreatedAt":"2020-02-19T03:40:02","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41772","RelatedDescription":"Opened issue \"Surprising behavior of SemanticModel.LookupSymbols API\" (#41772) at dotnet/roslyn","RelatedBody":"```\r\n        [Fact]\r\n        public void LookupSymbols()\r\n        {\r\n            var text1 = @\"\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var x = new Test();\r\n        string Test = \"\"1\"\";\r\n        System.Console.WriteLine(Test);\r\n        System.Console.WriteLine(x);\r\n    }\r\n}\r\n\r\nclass Test\r\n{\r\n}\r\n\";\r\n\r\n            var comp = CreateCompilation(text1, options: TestOptions.DebugExe);\r\n\r\n            comp.VerifyDiagnostics();\r\n\r\n            var testType = ((Compilation)comp).GetTypeByMetadataName(\"Test\");\r\n            Assert.NotNull(testType);\r\n\r\n            var tree1 = comp.SyntaxTrees[0];\r\n            var model1 = comp.GetSemanticModel(tree1);\r\n\r\n            var localDecl = tree1.GetRoot().DescendantNodes().OfType<VariableDeclaratorSyntax>().Skip(1).Single();\r\n            var declSymbol = model1.GetDeclaredSymbol(localDecl);\r\n            Assert.Equal(\"System.String Test\", declSymbol.ToTestDisplayString());\r\n\r\n            var nameRef = tree1.GetRoot().DescendantNodes().OfType<IdentifierNameSyntax>().Where(id => id.Identifier.ValueText == \"Test\").First();\r\n            Assert.Equal(\"new Test()\", nameRef.Parent.ToString());\r\n\r\n            var symbols = model1.LookupSymbols(nameRef.SpanStart);\r\n            Assert.Contains(declSymbol, symbols);\r\n            Assert.Contains(testType, model1.LookupNamespacesAndTypes(nameRef.SpanStart));\r\n            Assert.Contains(testType, symbols); // <--- This Assert fails\r\n        }\r\n```\r\n\r\nObserved:\r\nEven in a type only context, locals \"shadow\" types for the purpose of LookupSymbols API.\r\n\r\nThis could be By Design, there is LookupNamespacesAndTypes API that finds the type. Perhaps, the doc comment for the \"LookupSymbols\" API should be clarified. "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11548551589","Type":"IssuesEvent","CreatedAt":"2020-02-18T18:39:00","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7995","RelatedDescription":"Opened issue \"[Windows Forms] Controls support\" (#7995) at dotnet/corert","RelatedBody":"Here the summary of controls working in Windows Forms in my limited testing\r\n\r\n# Common Controls\r\n\r\n- [x] Button\r\n- [x] CheckBox\r\n- [ ] CheckedListBox Crash on click when empty or on startup if any items\r\n- [ ] ComboBox Crash on dropdown open\r\n- [ ] DateTimePicker Crash on select date\r\n- [x] Label\r\n- [ ] LinkLabel Crash on hover\r\n- [ ] ListBox Crash on select item\r\n- [x] ListView \r\n- [x] MaskedTextBox\r\n- [ ] MonthCalendar Crash on startup\r\n- [ ] NotifyIcon Crash on startup when icon set\r\n- [x] NumericUpDown\r\n- [ ] PictureBox Crash on startup\r\n- [x] ProgressBar\r\n- [x] RadioButton\r\n- [ ] RichTextBox Crash on startup\r\n- [x] TextBox\r\n- [x] ToolTip\r\n- [x] TreeView\r\n- [ ] WebBrowser Crash on startup\r\n\r\n# Containers\r\n- [x] FlowLayoutPanel\r\n- [x] GroupBox\r\n- [x] Panel\r\n- [ ] SplitContainer Crash on hover\r\n- [x] TabControl\r\n- [x] TableLayoutPanel\r\n\r\n# Menu & Toolstrip\r\n- [ ] ContextMenuStrip Crash on show\r\n- [ ] MenuStrip Crash on startup\r\n- [ ] StatusStrip Crash on startup when use ToolstripDropDown and ToolStripSplitButton\r\n- [ ] ToolStrip \r\n- [x] ToolStripContainer\r\n\r\nI can understand that some issues i due to lack of COM support, but some \"crash on selection\" looks more like CoreRT issue. Anyway, this issue to give visibility for list of supported out-of-box controls."},{"Id":"11547625198","Type":"IssuesEvent","CreatedAt":"2020-02-18T16:55:34","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7994","RelatedDescription":"Opened issue \"[Windows Forms] Form.Close crash application\" (#7994) at dotnet/corert","RelatedBody":"If I show Form using `Form.Show` or `Form.ShowDialog` then after close form, application crashed."},{"Id":"11544596879","Type":"IssuesEvent","CreatedAt":"2020-02-18T11:47:57","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7993","RelatedDescription":"Opened issue \"Manifest does not preserved\" (#7993) at dotnet/corert","RelatedBody":"Seems to be manifest file which enable modern look and feel for Windows Forms project, does not preserved after publishing.\r\n\r\n**Expected**\r\n![image](https://user-images.githubusercontent.com/4257079/74728072-59842700-526c-11ea-85d0-497e358a361b.png)\r\n\r\n**Actual**\r\n![image](https://user-images.githubusercontent.com/4257079/74728101-6274f880-526c-11ea-823e-584cd37f5152.png)\r\n\r\nrelated to #5662\r\n"},{"Id":"11542817001","Type":"IssuesEvent","CreatedAt":"2020-02-18T08:21:57","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7991","RelatedDescription":"Closed issue \"Question: CoreRT branch\" (#7991) at dotnet/corert","RelatedBody":"@MichalStrehovsky mention that CoreRT can live on dotnet/runtime brach here\r\nhttps://github.com/dotnet/corert/issues/7784#issuecomment-529241819\r\n\r\nIs this still an option?"},{"Id":"11540751504","Type":"PullRequestEvent","CreatedAt":"2020-02-18T01:21:42","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7992","RelatedDescription":"Opened pull request \"WIP: Wasm: Add conservative garbage collection\" (#7992) at dotnet/corert","RelatedBody":"Enables conservative garbage collection in the Wasm backend.  WIP as would like to solicit suggestions for tests.  Naively, I could loop and create some large arrays beyond the memory limit, which should cause a GC and succeed, but anything better/more sophisticated I should add to the tests?  So far the only tests is to create a collect an objects testing through a `WeakReference`.\r\n\r\nWIP also as depends on #7983 at which point 99% of the diffs should disappear."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11551420449","Type":"PullRequestEvent","CreatedAt":"2020-02-19T01:25:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10673","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10673) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 11:47 PM\r\n- **Commit**: 13dcac62f582aa35f27f41880d5a90291eed955f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"11551419436","Type":"PullRequestEvent","CreatedAt":"2020-02-19T01:25:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10651","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10651) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 9:50 PM\r\n- **Commit**: 1a277d06b515ada913c1e9a25d98f770da503535\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"11551387997","Type":"IssuesEvent","CreatedAt":"2020-02-19T01:18:55","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10672","RelatedDescription":"Opened issue \"No CLI projects in solution explore\" (#10672) at dotnet/sdk","RelatedBody":""},{"Id":"11551119239","Type":"IssuesEvent","CreatedAt":"2020-02-19T00:25:32","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10671","RelatedDescription":"Opened issue \"dotnet tool install -g --add-source ./nupkg mytool will not pick up local first on mac and Linux\" (#10671) at dotnet/sdk","RelatedBody":"It will pick up a package from the nuget.org instead of a same name package in the local machine pointed by the feed"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-02-18T21:46:38","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"closed","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\n### Customer impact\r\n\r\n- This is a top feedback item for VS on 3.x: [feedback ticket](https://developercommunity.visualstudio.com/content/problem/855101/to-prevent-an-unsafe-abort-popup-appears-often-in.html)\r\n\r\n### Regression?\r\n\r\nYes, regression from 2.x, starting in 3.0\r\n\r\n### Testing\r\n\r\n- It's a timing issue and was reproduced by inducing specific timings in various phases of tiering\r\n- Verified that the timeout does not occur after the fix in the vast majority of cases. Instead, the FuncEval is failed when the lock is held and VS falls back to alternate means for evaluating the expression. See more in risks below.\r\n- Checked debugger-broken stacks at various phases of tiering to verify that the poll for debugger suspension is working as expected\r\n- Standard tests\r\n\r\n### Risks\r\n\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Closed or merged PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-18T21:32:58","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"566357453","IsPullRequest":true,"CreatedAt":"2020-02-18T21:31:54","Actor":"eiriktsarpalis","Number":"28019","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0 [here](https://github.com/dotnet/corefx/pull/34747/files#diff-e388668f95442712879e252fb0d48001R193) - original issue [here](https://github.com/dotnet/runtime/issues/28365)). Reported by 2 customers. \r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/28019","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#28019)"},{"Id":"567089433","IsPullRequest":true,"CreatedAt":"2020-02-18T18:55:37","Actor":"tqinli","Number":"28021","RawContent":null,"Title":"Please ignore this PR, I made a mistake to create this here.","State":"closed","Body":"Please ignore this PR, I made a mistake to create this here.","Url":"https://github.com/dotnet/coreclr/pull/28021","RelatedDescription":"Closed or merged PR \"Please ignore this PR, I made a mistake to create this here.\" (#28021)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-18T18:27:24","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"closed","Body":"## Issue\r\n\r\nrelease/3.1 does not build on newer Linux distros, due to glibc deprecation warnings being treated as errors. The fix for release/3.1 is to disable this warning. (We have proper fix for .NET 5.)\r\n\r\n## Customer Impact\r\n\r\nCustomers building .NET Runtime from sources have to apply private patches to keep the build working.\r\n\r\n## Regression?\r\n\r\nRegression from older Linux distros.\r\n\r\n---\r\n\r\nOn newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-18T18:06:39","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"closed","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"548326464","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:50","Actor":"CarolEidt","Number":"27986","RawContent":null,"Title":"Port of dotnet/runtime#1059 to 3.1 branch","State":"closed","Body":"This is the fix for #27924. This is a GC hole bug that was found externally, #27590.\r\nThe cause is that the JIT was using the target type of the subtract when it needed\r\nto make a copy of the source, but it needs to use the source type.\r\n\r\n## Customer Impact\r\nCorruption of state that is non-deterministic and hard to track down.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by Unsafe.ByteOffset.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightfoward and only impacts 3 lines of code.\r\n\r\n## Code Reviewer\r\n@jaschook and @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27986","RelatedDescription":"Closed or merged PR \"Port of dotnet/runtime#1059 to 3.1 branch\" (#27986)"},{"Id":"547818433","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:12","Actor":"AntonLapounov","Number":"27985","RawContent":null,"Title":"[3.1 port] Fix GC heap corruption on ARM","State":"closed","Body":"Port of dotnet/runtime#1389 to 3.1 branch.  Applications may crash in GC code due to GC heap corruption caused by incorrect padding size calculation on ARM.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: one-line fix of the incorrect calculation.","Url":"https://github.com/dotnet/coreclr/pull/27985","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix GC heap corruption on ARM\" (#27985)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-02-13T22:26:52","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"closed","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Closed or merged PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-02-12T20:57:40","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Open PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"},{"Id":"550505294","IsPullRequest":true,"CreatedAt":"2020-01-16T19:16:48","Actor":"hoyosjs","Number":"28000","RawContent":null,"Title":"Fix issues in release 3.0","State":"closed","Body":"Changes discussed to obtain green CI and fix RHEL6 outerloop builds:\r\n\r\n- Restore the Helix SDK using Tools.props to work around msbuild issues\r\n- Disable formatting jobs\r\n- Disable windows ARM jobs until dotnet/runtime#1097 is solved\r\n- Fix TRACE statement for RHEL6 in debug/checked pal out-of-proc unwind.\r\n\r\ncc @jeffschwMSFT @mmitche @jashook @trylek ","Url":"https://github.com/dotnet/coreclr/pull/28000","RelatedDescription":"Closed or merged PR \"Fix issues in release 3.0\" (#28000)"},{"Id":"550514396","IsPullRequest":true,"CreatedAt":"2020-01-16T01:27:41","Actor":"mmitche","Number":"28001","RawContent":null,"Title":"[release/2.1] Restore official build for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28001","RelatedDescription":"Closed or merged PR \"[release/2.1] Restore official build for 2.1\" (#28001)"},{"Id":"549855987","IsPullRequest":true,"CreatedAt":"2020-01-15T21:04:10","Actor":"GrabYourPitchforks","Number":"27996","RawContent":null,"Title":"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/752 to release/3.1\r\nFixes https://github.com/dotnet/runtime/issues/594\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 / 3.1 we changed how the _completed_ out parameter is set on the `EncoderNLS.Convert` and `DecoderNLS.Convert` routines. We had changed the logic to match precisely what MSDN's documentation stated and to fix a possible data corruption bug; however, this broke a number of customers' applications by sending them into infinite loops.\r\n\r\nThis PR reverts that change.\r\n\r\n## Customer Impact\r\n\r\nIf customers were relying on the previous behavior of the _completed_ out parameter, their applications could end up in an infinite loop. What makes matters worse is that the sample code on the MSDN page for `Encoder.Convert` and `Decoder.Convert` is also susceptible to this pattern, so we suspect a large number of customers may have based their own application code on the sample.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.x and .NET Core 2.x. One half of this change was introduced in .NET Core 3.0 (see https://github.com/dotnet/coreclr/commit/43a5159d39bd52195c5095da4006183f791c696b); the other half was introduced in .NET Core 3.1 (see https://github.com/dotnet/coreclr/commit/c07ec4cd2f88c23edc87500893576d83c20f2e6d).\r\n\r\n## Testing\r\n\r\nThe reversion is already committed in the 5.0 branches (see https://github.com/dotnet/runtime/commit/d49b541ab156d992aeb4bbe410f7a816bb0ac039), so we have been getting test coverage on those nightlies. No notable regressions have been reported.\r\n\r\n## Risk\r\n\r\nSomewhere between minimal and moderate. It's possible that some applications may have taken a dependency on the new behavior. See for instance https://github.com/dotnet/aspnetcore/pull/17747, where ASP.NET appears to have unintentionally taken a dependency on the new behavior and had to proactively make a change so that they behave correctly both before and after this PR goes through.\r\n\r\n/cc @tarekgh @anurse @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27996","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes\" (#27996)"},{"Id":"550396592","IsPullRequest":true,"CreatedAt":"2020-01-15T20:04:13","Actor":"dotnet-maestro-bot","Number":"27999","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27999","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27999)"},{"Id":"550393850","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:13","Actor":"mmitche","Number":"27998","RawContent":null,"Title":"[release/3.1] Update branding to 3.1.2","State":"closed","Body":"eng/Versions.props doesn't seem to be the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27998","RelatedDescription":"Closed or merged PR \"[release/3.1] Update branding to 3.1.2\" (#27998)"},{"Id":"550393454","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:06","Actor":"mmitche","Number":"27997","RawContent":null,"Title":"[release/3.0] Update branding to 3.0.3","State":"closed","Body":"eng/Versions.props doesn't seem to the the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27997","RelatedDescription":"Closed or merged PR \"[release/3.0] Update branding to 3.0.3\" (#27997)"},{"Id":"549295331","IsPullRequest":true,"CreatedAt":"2020-01-15T03:31:02","Actor":"VSadov","Number":"27990","RawContent":null,"Title":"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.","State":"closed","Body":"This is a fix for an issue tracked by https://github.com/dotnet/runtime/issues/622. \r\nIt is a reversal of a change made in 3.1 vs. 3.0 and 2.X \r\n(Basically reverting https://github.com/dotnet/coreclr/pull/26806)\r\nThe change was an improvement in some cases, but was causing considerable performance regressions in constrained container scenarios.\r\n\r\n## Customer Impact\r\nCustomers report performance regressions in constrained container scenarios when CPU quotas are applied.\r\n\r\n## Regression?\r\nYes. From 3.0 and 2.x\r\n\r\n## Testing\r\nRegular PR tests. \r\nVerified that the most affected aspnet benchmarks are back to 3.0 performance levels.\r\n\r\n## Risk\r\nLow: This is reverting to behavior that we had for a few releases.","Url":"https://github.com/dotnet/coreclr/pull/27990","RelatedDescription":"Closed or merged PR \"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.\" (#27990)"},{"Id":"549775170","IsPullRequest":true,"CreatedAt":"2020-01-14T22:47:49","Actor":"Anipik","Number":"27994","RawContent":null,"Title":"update branding for coreclr 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27994","RelatedDescription":"Closed or merged PR \"update branding for coreclr 2.1.16\" (#27994)"},{"Id":"549842263","IsPullRequest":true,"CreatedAt":"2020-01-14T22:05:50","Actor":"dotnet-maestro-bot","Number":"27995","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27995","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27995)"},{"Id":"549732492","IsPullRequest":true,"CreatedAt":"2020-01-14T21:54:02","Actor":"Anipik","Number":"27993","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27993","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#27993)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"567305783","IsPullRequest":true,"CreatedAt":"2020-02-19T04:20:48","Actor":"dotnet-maestro[bot]","Number":"13246","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.4\r\n- **Date Produced**: 2/19/2020 3:27 AM\r\n- **Commit**: aa9f9ef5a0dbd98646d43d892b2729a51692b552\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13246","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13246)"},{"Id":"567238694","IsPullRequest":true,"CreatedAt":"2020-02-19T03:31:48","Actor":"dotnet-maestro[bot]","Number":"13242","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200218.7\r\n- **Date Produced**: 2/19/2020 1:59 AM\r\n- **Commit**: c6257f42bad49a73766791299733f1b25ee152a7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20118.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13242","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13242)"},{"Id":"567280719","IsPullRequest":true,"CreatedAt":"2020-02-19T03:20:44","Actor":"dotnet-maestro[bot]","Number":"13245","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:53 AM\r\n- **Commit**: 92f4b73e3f7e624b7a54db50fdb91cebb39151db\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20118.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13245","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13245)"},{"Id":"567278024","IsPullRequest":true,"CreatedAt":"2020-02-19T03:15:47","Actor":"dotnet-maestro[bot]","Number":"13244","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/19/2020 1:50 AM\r\n- **Commit**: 6e3d4144add5b26f3f81db73878320705226001a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13244","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13244)"},{"Id":"567245975","IsPullRequest":true,"CreatedAt":"2020-02-19T01:15:47","Actor":"dotnet-maestro[bot]","Number":"13243","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 11:47 PM\r\n- **Commit**: 13dcac62f582aa35f27f41880d5a90291eed955f\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13243","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13243)"},{"Id":"567209182","IsPullRequest":true,"CreatedAt":"2020-02-18T23:22:17","Actor":"dotnet-maestro[bot]","Number":"13241","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 9:50 PM\r\n- **Commit**: 1a277d06b515ada913c1e9a25d98f770da503535\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13241","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13241)"},{"Id":"567027176","IsPullRequest":true,"CreatedAt":"2020-02-18T19:01:39","Actor":"mmitche","Number":"13240","RawContent":null,"Title":"[release/2.1.8xx] Update branding to 2.1.805","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13240","RelatedDescription":"Closed or merged PR \"[release/2.1.8xx] Update branding to 2.1.805\" (#13240)"},{"Id":"567026963","IsPullRequest":true,"CreatedAt":"2020-02-18T19:01:26","Actor":"mmitche","Number":"13239","RawContent":null,"Title":"[release/2.1.6xx] Update branding to 2.1.610","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13239","RelatedDescription":"Closed or merged PR \"[release/2.1.6xx] Update branding to 2.1.610\" (#13239)"},{"Id":"567026810","IsPullRequest":true,"CreatedAt":"2020-02-18T18:34:34","Actor":"mmitche","Number":"13238","RawContent":null,"Title":"[release/2.1.5xx] Update branding to 2.1.513","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13238","RelatedDescription":"Closed or merged PR \"[release/2.1.5xx] Update branding to 2.1.513\" (#13238)"},{"Id":"565077353","IsPullRequest":true,"CreatedAt":"2020-02-18T18:32:40","Actor":"dotnet-maestro[bot]","Number":"13226","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200213.2\r\n- **Date Produced**: 2/14/2020 1:53 AM\r\n- **Commit**: 0bc67530cef6dd771a8750d1747926eca2dcb845\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20113.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13226","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13226)"},{"Id":"565634486","IsPullRequest":true,"CreatedAt":"2020-02-18T18:31:43","Actor":"dotnet-maestro[bot]","Number":"13236","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/15/2020 12:23 AM\r\n- **Commit**: 8ac9495536a53010b68b4deabe27844afcdd8c20\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13236","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13236)"},{"Id":"566770272","IsPullRequest":true,"CreatedAt":"2020-02-18T09:48:59","Actor":"enricosada","Number":"13237","RawContent":null,"Title":"Read default language for `dotnet new` from env var","State":"open","Body":"Read `DOTNET_NEW_PREFERRED_LANG` as default language for `dotnet new`.\r\nIf not set, the default continue to be `C#`\r\n\r\nCurrently to create F# projects, we need to specify `-lang f#` foreach `dotnet new` invocation.\r\nIt's really annoying, and atm `dotnet new` doesnt yet support set the preference property.\r\n\r\nThis option can be removed later, when `dotnet new` support set the default language (as normal config)\r\n\r\nWith this pr\r\n\r\n```batch\r\nset DOTNET_NEW_PREFERRED_LANG=F#\r\ndotnet new console\r\ndotnet new lib\r\n```\r\n\r\n/cc @cartermp\r\n\r\nref https://github.com/dotnet/sdk/issues/4224\r\n","Url":"https://github.com/dotnet/cli/pull/13237","RelatedDescription":"Open PR \"Read default language for `dotnet new` from env var\" (#13237)"},{"Id":"565630547","IsPullRequest":true,"CreatedAt":"2020-02-15T01:16:39","Actor":"dotnet-maestro[bot]","Number":"13235","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.12\r\n- **Date Produced**: 2/15/2020 12:10 AM\r\n- **Commit**: 7fc314f73b075650f79d5225af8165e0a9369c22\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13235","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13235)"},{"Id":"565604460","IsPullRequest":true,"CreatedAt":"2020-02-14T23:54:13","Actor":"dotnet-maestro[bot]","Number":"13234","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.2\r\n- **Date Produced**: 2/14/2020 10:33 PM\r\n- **Commit**: 9128eb60423a020a87d42975be60c08803470b36\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13234","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13234)"},{"Id":"565569063","IsPullRequest":true,"CreatedAt":"2020-02-14T22:10:51","Actor":"dotnet-maestro[bot]","Number":"13233","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/14/2020 8:26 PM\r\n- **Commit**: 922c8eefc41632df5a5e052daa8aa946bc298000\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13233","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13233)"},{"Id":"565559337","IsPullRequest":true,"CreatedAt":"2020-02-14T21:45:39","Actor":"dotnet-maestro[bot]","Number":"13232","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.7\r\n- **Date Produced**: 2/14/2020 8:39 PM\r\n- **Commit**: e29c49516646227d5c6c1dcfa7c04993759c3067\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13232","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13232)"},{"Id":"565541940","IsPullRequest":true,"CreatedAt":"2020-02-14T21:40:11","Actor":"dotnet-maestro[bot]","Number":"13231","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.4\r\n- **Date Produced**: 2/14/2020 7:37 PM\r\n- **Commit**: 6ba4c51eaf1c7eabedee90a10c49a9f0cf3732a0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13231","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13231)"},{"Id":"565535575","IsPullRequest":true,"CreatedAt":"2020-02-14T20:45:48","Actor":"dotnet-maestro[bot]","Number":"13230","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.1\r\n- **Date Produced**: 2/14/2020 7:31 PM\r\n- **Commit**: aa51047c49cdabc90199bdaaae6f005425942b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13230","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13230)"},{"Id":"565508410","IsPullRequest":true,"CreatedAt":"2020-02-14T19:51:20","Actor":"dotnet-maestro[bot]","Number":"13229","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/14/2020 6:25 PM\r\n- **Commit**: e8d31697ad8cf227034de8119c3f3f14e164dab9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13229","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13229)"},{"Id":"565499773","IsPullRequest":true,"CreatedAt":"2020-02-14T19:25:41","Actor":"dotnet-maestro[bot]","Number":"13228","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20200213.4\r\n- **Date Produced**: 2/14/2020 1:53 AM\r\n- **Commit**: 46091435536c53242905ab4e991bdc0bac153e64\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.3-servicing.20113.4\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13228","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13228)"},{"Id":"565483646","IsPullRequest":true,"CreatedAt":"2020-02-14T18:48:14","Actor":"dotnet-maestro[bot]","Number":"13227","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/14/2020 5:17 PM\r\n- **Commit**: df853d7d0a5101b3b280ccdf069703ed50879fc7\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13227","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13227)"},{"Id":"565033412","IsPullRequest":true,"CreatedAt":"2020-02-14T16:53:38","Actor":"dsplaisted","Number":"13224","RawContent":null,"Title":"Update branding to 3.1.103","State":"closed","Body":"@mmitche @nguerrera ","Url":"https://github.com/dotnet/cli/pull/13224","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.103\" (#13224)"},{"Id":"565061311","IsPullRequest":true,"CreatedAt":"2020-02-14T02:46:49","Actor":"dotnet-maestro[bot]","Number":"13225","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200213.17\r\n- **Date Produced**: 2/14/2020 1:35 AM\r\n- **Commit**: 53b0d448a53403ca84bb3dac66dcd20eb375aeaa\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20113.17\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13225","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13225)"},{"Id":"565026192","IsPullRequest":true,"CreatedAt":"2020-02-14T00:51:06","Actor":"dotnet-maestro[bot]","Number":"13223","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13223","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13223)"},{"Id":"565021839","IsPullRequest":true,"CreatedAt":"2020-02-14T00:32:30","Actor":"dotnet-maestro[bot]","Number":"13222","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 94c24b6f-4197-4be9-5768-08d76e1d56cb\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13222","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13222)"},{"Id":"560741905","IsPullRequest":true,"CreatedAt":"2020-02-13T22:20:36","Actor":"dotnet-maestro[bot]","Number":"13217","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.6\r\n- **Date Produced**: 2/6/2020 1:47 AM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13217","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13217)"},{"Id":"564956685","IsPullRequest":true,"CreatedAt":"2020-02-13T21:45:48","Actor":"dotnet-maestro[bot]","Number":"13221","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200213.1\r\n- **Date Produced**: 2/13/2020 8:32 PM\r\n- **Commit**: 8dcd59d6e006679f7c1932801f733a72e5a3f221\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20113.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13221","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13221)"},{"Id":"563597764","IsPullRequest":true,"CreatedAt":"2020-02-12T19:50:29","Actor":"sebastienros","Number":"13220","RawContent":null,"Title":"Fix WindowsDesktop runtime download url","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/4237","Url":"https://github.com/dotnet/cli/pull/13220","RelatedDescription":"Closed or merged PR \"Fix WindowsDesktop runtime download url\" (#13220)"},{"Id":"561297789","IsPullRequest":true,"CreatedAt":"2020-02-08T02:12:38","Actor":"dotnet-maestro[bot]","Number":"13219","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200207.4\r\n- **Date Produced**: 2/8/2020 12:39 AM\r\n- **Commit**: 130be5a782f6fa8410627a8fddd3e2988bde1c71\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20107.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13219","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13219)"},{"Id":"561279608","IsPullRequest":true,"CreatedAt":"2020-02-07T22:58:12","Actor":"dotnet-maestro[bot]","Number":"13218","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6422\r\n- **Date Produced**: 2/7/2020 1:55 AM\r\n- **Commit**: 7bac015acc5b7e0161a058c8febc98abe2386d51\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6422\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13218","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13218)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"567261603","IsPullRequest":false,"CreatedAt":"2020-02-19T04:17:02","Actor":"ohsorry","Number":"1712","RawContent":null,"Title":"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?","State":"closed","Body":"```\r\npublic static Task<int> SendAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags);\r\npublic static Task<int> SendAsync(this Socket socket, IList<ArraySegment<byte>> buffers, SocketFlags socketFlags);\r\npublic static ValueTask<int> SendAsync(this Socket socket, ReadOnlyMemory<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken = default);\r\npublic static Task<int> SendToAsync(this Socket socket, ArraySegment<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP);\r\n\r\n```\r\nSee ? I guess we need one. :)","Url":"https://github.com/dotnet/standard/issues/1712","RelatedDescription":"Closed issue \"Can we add an overload with a ReadOnlyMemory<byte> parameter to System.Net.Socket.SendToAsync()?\" (#1712)"},{"Id":"566877203","IsPullRequest":true,"CreatedAt":"2020-02-18T13:30:45","Actor":"dotnet-maestro[bot]","Number":"1711","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1711","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1711)"},{"Id":"566283741","IsPullRequest":true,"CreatedAt":"2020-02-17T13:10:42","Actor":"dotnet-maestro[bot]","Number":"1710","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1710","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1710)"},{"Id":"565901517","IsPullRequest":true,"CreatedAt":"2020-02-16T13:20:42","Actor":"dotnet-maestro[bot]","Number":"1709","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200215.1\r\n- **Date Produced**: 2/15/2020 2:11 PM\r\n- **Commit**: e133be6cf759f6badf7bc4052118ad8197eb03bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20115.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20115.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1709","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1709)"},{"Id":"565745116","IsPullRequest":true,"CreatedAt":"2020-02-15T13:10:39","Actor":"dotnet-maestro[bot]","Number":"1708","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1708)"},{"Id":"565313064","IsPullRequest":true,"CreatedAt":"2020-02-14T13:20:43","Actor":"dotnet-maestro[bot]","Number":"1707","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1707","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1707)"},{"Id":"564667114","IsPullRequest":true,"CreatedAt":"2020-02-13T13:10:42","Actor":"dotnet-maestro[bot]","Number":"1706","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200212.7\r\n- **Date Produced**: 2/12/2020 8:32 PM\r\n- **Commit**: 951ea7430678b2682ff861fe1149b8a2f55887ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20112.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1706","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1706)"},{"Id":"563984671","IsPullRequest":true,"CreatedAt":"2020-02-12T13:10:45","Actor":"dotnet-maestro[bot]","Number":"1705","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200211.11\r\n- **Date Produced**: 2/12/2020 12:37 AM\r\n- **Commit**: 998b715ed1fbb966437345a1996af64e22c83368\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20111.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1705","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1705)"},{"Id":"563594688","IsPullRequest":false,"CreatedAt":"2020-02-11T23:21:07","Actor":"merarischroeder","Number":"1704","RawContent":null,"Title":"Why is System.Threading.Task.TaskToApm internal?","State":"open","Body":"I saw it being used here today https://github.com/dotnet/runtime/blob/master/src/libraries/System.Net.Quic/src/System/Net/Quic/QuicStream.cs\r\n\r\nI'm building a few stream types and I would like to define a stream wrapper too. I would have thought, with the advent of async Tasks this kind of tooling would have been made available to all programmers.","Url":"https://github.com/dotnet/standard/issues/1704","RelatedDescription":"Open issue \"Why is System.Threading.Task.TaskToApm internal?\" (#1704)"},{"Id":"563191239","IsPullRequest":true,"CreatedAt":"2020-02-11T13:20:58","Actor":"dotnet-maestro[bot]","Number":"1703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1703)"},{"Id":"562545610","IsPullRequest":true,"CreatedAt":"2020-02-10T13:06:14","Actor":"dotnet-maestro[bot]","Number":"1702","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1702)"},{"Id":"562173293","IsPullRequest":true,"CreatedAt":"2020-02-09T13:21:01","Actor":"dotnet-maestro[bot]","Number":"1701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1701)"},{"Id":"562099295","IsPullRequest":false,"CreatedAt":"2020-02-09T00:28:01","Actor":"dmitriyse","Number":"1700","RawContent":null,"Title":"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+","State":"open","Body":"The first framework that provides NetStandard 2.1 is NetCoreApp 3.0.\r\nSo NetStandard 2.1 have no limitations in adding API from .NetCoreApp 3.0\r\n\r\nDespite some useful ```TheadPool``` methods are missing in the .Net Standard 2.1.\r\nFor example:\r\n```\r\n public static bool UnsafeQueueUserWorkItem<TState>(Action<TState> callBack, TState state, bool preferLocal)\r\n```\r\nthese methods are mandatory for the efficient implementation of the ```IValueTaskSource```\r\n\r\nReal life case:\r\nThe ```ManualResetValueTaskSourceCore<TResult>``` included into NetStandard 2.1, but if you try to copy-paste its sources and modernize for your needs  \r\nyou will unable to do it being NetStandard 2.1 library, you need to upgrade to NetCoreApp 3.0.\r\nIf upgrade to NetCoreApp 3.0 is unacceptable then you need to have inefficient implementation - very disappointing problem where you don't expect it.","Url":"https://github.com/dotnet/standard/issues/1700","RelatedDescription":"Open issue \"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+\" (#1700)"},{"Id":"562016101","IsPullRequest":true,"CreatedAt":"2020-02-08T13:20:56","Actor":"dotnet-maestro[bot]","Number":"1699","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200207.14\r\n- **Date Produced**: 2/8/2020 1:30 AM\r\n- **Commit**: c84720afc91b635e2fbeb5dbd7e2742f18773e0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20107.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1699","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1699)"},{"Id":"561623720","IsPullRequest":true,"CreatedAt":"2020-02-07T13:20:59","Actor":"dotnet-maestro[bot]","Number":"1698","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200206.12\r\n- **Date Produced**: 2/7/2020 4:05 AM\r\n- **Commit**: 50f7059d3a7a83ae1919516755b9ca92c67805e8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20106.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1698","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1698)"},{"Id":"560997721","IsPullRequest":true,"CreatedAt":"2020-02-06T13:05:54","Actor":"dotnet-maestro[bot]","Number":"1697","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1697)"},{"Id":"560356993","IsPullRequest":true,"CreatedAt":"2020-02-05T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1696","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1696)"},{"Id":"559704588","IsPullRequest":true,"CreatedAt":"2020-02-04T13:11:00","Actor":"dotnet-maestro[bot]","Number":"1695","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1695","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1695)"},{"Id":"558693346","IsPullRequest":true,"CreatedAt":"2020-02-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1694","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200201.2\r\n- **Date Produced**: 2/1/2020 11:43 PM\r\n- **Commit**: 779323758d3e8aa7e4ee3dc2619d57e696078089\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20101.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1694)"},{"Id":"558537562","IsPullRequest":true,"CreatedAt":"2020-02-01T13:20:53","Actor":"dotnet-maestro[bot]","Number":"1693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200131.7\r\n- **Date Produced**: 1/31/2020 10:34 PM\r\n- **Commit**: bdc8c2f698e8c15195872af1e316b4b8f0eae7e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20081.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1693)"},{"Id":"558118871","IsPullRequest":true,"CreatedAt":"2020-01-31T13:11:41","Actor":"dotnet-maestro[bot]","Number":"1692","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 1:21 AM\r\n- **Commit**: 00402f1fdc2b59dbc4f0b1c143850cb72e69fc90\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20080.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1692)"},{"Id":"557898042","IsPullRequest":false,"CreatedAt":"2020-01-31T04:01:42","Actor":"jfcardinal","Number":"1691","RawContent":null,"Title":"string.Concat(ReadOnlySpan, ...)?","State":"open","Body":"In January of 2019 @stephentoub proposed adding string.Concat() overloads that accept ReadOnlySpan<char> in corefx. Those were implemented that same month.\r\n\r\nAs far as I can tell, those overloads are not part of .NET Standard 2.1. I have not found a prior discussion of adding them to a future version of .NET Standard, but perhaps I have not searched well enough.\r\n\r\nAre they being considered?","Url":"https://github.com/dotnet/standard/issues/1691","RelatedDescription":"Open issue \"string.Concat(ReadOnlySpan, ...)?\" (#1691)"},{"Id":"557478626","IsPullRequest":true,"CreatedAt":"2020-01-30T13:20:57","Actor":"dotnet-maestro[bot]","Number":"1690","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200129.8\r\n- **Date Produced**: 1/30/2020 4:30 AM\r\n- **Commit**: 8466781af43871ee0d4a1655acc008a305a62c0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20079.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1690","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1690)"},{"Id":"556564619","IsPullRequest":false,"CreatedAt":"2020-01-29T00:14:20","Actor":"ThadHouse","Number":"1689","RawContent":null,"Title":"Clarify how to use .NET Standard 2.1 from Mono","State":"open","Body":".NET Standard 2.1 adds a lot of new stuff I would like to use from a project targeting .NET Core 3 and Mono 6+. I can get the .NET Standard 2.1 libraries built easily enough, but I can't find a single TFM that I can use for the executable references the .NET Standard 2.1 libraries. \r\n\r\nI can target .NET Core 3, but then I get extra libraries in there mono doesn't have, so I have to be careful never to use any of the unsupported functions.\r\n\r\nI can't target .NET 4.8 or any framework library. This works in Mono, but can't link to the Net Standard 2.1 libraries.\r\n\r\nDoes there exist a runtime framework I can target that has all the .NET Standard 2.1 functions but none of the .NET Core 3 functions?","Url":"https://github.com/dotnet/standard/issues/1689","RelatedDescription":"Open issue \"Clarify how to use .NET Standard 2.1 from Mono\" (#1689)"},{"Id":"556194189","IsPullRequest":true,"CreatedAt":"2020-01-28T13:10:53","Actor":"dotnet-maestro[bot]","Number":"1688","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200127.7\r\n- **Date Produced**: 1/28/2020 3:24 AM\r\n- **Commit**: 8807a492094e7972f162440e72fd00ce4def8764\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20077.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1688","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1688)"},{"Id":"555558276","IsPullRequest":true,"CreatedAt":"2020-01-27T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1687","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200126.3\r\n- **Date Produced**: 1/26/2020 6:39 PM\r\n- **Commit**: cc8fe69635c7c6e791c87540851aea75946945fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20076.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1687)"},{"Id":"555225161","IsPullRequest":true,"CreatedAt":"2020-01-26T13:25:57","Actor":"dotnet-maestro[bot]","Number":"1686","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200125.3\r\n- **Date Produced**: 1/26/2020 7:06 AM\r\n- **Commit**: 0fcbdf1444ade7228ae0d179bb23d08ea3df13eb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20075.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1686)"},{"Id":"555082841","IsPullRequest":true,"CreatedAt":"2020-01-25T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1685","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200124.6\r\n- **Date Produced**: 1/25/2020 1:13 AM\r\n- **Commit**: 841c83d8a5b8d8a6bd427f6798b086780138aa9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20074.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1685)"},{"Id":"554723068","IsPullRequest":true,"CreatedAt":"2020-01-24T13:05:53","Actor":"dotnet-maestro[bot]","Number":"1684","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200123.17\r\n- **Date Produced**: 1/24/2020 3:10 AM\r\n- **Commit**: 82031ff8d9a40204c774fcc1b0f93ace906cee88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20073.17\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1684","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1684)"},{"Id":"554142460","IsPullRequest":true,"CreatedAt":"2020-01-23T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1683","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 10:48 PM\r\n- **Commit**: 0fb5c992a80a6fb52bfb1d2b726f75157c1ce210\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20072.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1683)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"562931431","IsPullRequest":true,"CreatedAt":"2020-02-19T01:37:11","Actor":"tgani-msft","Number":"42851","RawContent":null,"Title":"Backport attribute to support inline namespaces in C++/CLI ","State":"closed","Body":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs.","Url":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Closed or merged PR \"Backport attribute to support inline namespaces in C++/CLI \" (#42851)"},{"Id":"567225799","IsPullRequest":true,"CreatedAt":"2020-02-19T00:30:47","Actor":"dotnet-maestro[bot]","Number":"42865","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.3\r\n- **Date Produced**: 2/18/2020 10:28 PM\r\n- **Commit**: c5d3d752260383fbed72ba2b4d86d82fea673c76\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42865","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42865)"},{"Id":"567187301","IsPullRequest":true,"CreatedAt":"2020-02-18T23:38:05","Actor":"dotnet-maestro[bot]","Number":"42864","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.2\r\n- **Date Produced**: 2/18/2020 9:03 PM\r\n- **Commit**: 25bb13bc33c5911c6319722203dbb83eaebe7b08\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42864","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42864)"},{"Id":"565607813","IsPullRequest":true,"CreatedAt":"2020-02-18T22:07:27","Actor":"joperezr","Number":"42859","RawContent":null,"Title":"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe","State":"closed","Body":"Porting #42849 relevant parts to release/3.1. Original PR was against 2.1. This has already been approved by tactics.","Url":"https://github.com/dotnet/corefx/pull/42859","RelatedDescription":"Closed or merged PR \"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe\" (#42859)"},{"Id":"567138077","IsPullRequest":true,"CreatedAt":"2020-02-18T21:16:53","Actor":"dotnet-maestro[bot]","Number":"42863","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 6:51 PM\r\n- **Commit**: a74f1dbf5a3aed3c4f5ba723641598aac07c31d9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20118.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20118.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42863","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42863)"},{"Id":"567108141","IsPullRequest":true,"CreatedAt":"2020-02-18T19:27:32","Actor":"GrabYourPitchforks","Number":"42862","RawContent":null,"Title":"[release/3.1] Corresponding unit tests for dotnet/coreclr#28014","State":"open","Body":"These are the unit tests for https://github.com/dotnet/coreclr/pull/28014, which is a customer-reported infinite loop in `string.Replace`.\r\n\r\nThe unit tests will fail (by entering an infinite loop) until that PR is checked in to coreclr and the corresponding build flows to corefx.","Url":"https://github.com/dotnet/corefx/pull/42862","RelatedDescription":"Open PR \"[release/3.1] Corresponding unit tests for dotnet/coreclr#28014\" (#42862)"},{"Id":"566269144","IsPullRequest":true,"CreatedAt":"2020-02-18T18:34:24","Actor":"eiriktsarpalis","Number":"42860","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression","State":"closed","Body":"Backports a fix for issue https://github.com/dotnet/runtime/issues/31717 which concerns a regression in the behaviour of the `Thread.CurrentPrincipal` property, introduced in 3.0.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/32104). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nAssigning a PrincipalPolicy to the current AppDomain results in the first thread correctly returning `Thread.CurrentPrincipal`. However it will consistently return `null` for any subsequent threads. There are no known workarounds to this issue.\r\n\r\n## Regression?\r\nFunctional regression between 2.1 and 3.0. Reported by 2 customers.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/32104 includes tests for the fix.\r\n\r\n## Risk\r\nModerate. The regression was introduced in an attempt to introduce new behaviour (i.e. flowing the principal with ExecutionContext), but this was broken in all but the most trivial scenaria (using just one thread). It is conceivable that fixing this might expose other problems, or in the very least break applications written against 3.0 that implicitly depend on the current behaviour of the property.\r\n\r\n## Code Reviewer\r\n@jkotas ","Url":"https://github.com/dotnet/corefx/pull/42860","RelatedDescription":"Closed or merged PR \"[release/3.1] Port dotnet/runtime#32104 fix for Thread.CurrentPrincipal regression\" (#42860)"},{"Id":"566438873","IsPullRequest":true,"CreatedAt":"2020-02-17T19:23:10","Actor":"omajid","Number":"42861","RawContent":null,"Title":"[release/3.1] Fix cast in CacheMemoryMonitor (#41776)","State":"closed","Body":"Avoid overflow.\r\n\r\ncc @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/42861","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix cast in CacheMemoryMonitor (#41776)\" (#42861)"},{"Id":"565515111","IsPullRequest":true,"CreatedAt":"2020-02-14T21:54:25","Actor":"Anipik","Number":"42858","RawContent":null,"Title":"Disable machine related or flaky tests","State":"closed","Body":"System.DrawingTest are failing on mac because the machines are being updated.\r\n BasicTest_AccessInstanceProperties_NoExceptions_Bsd failure is known and we are working on fixing it. ","Url":"https://github.com/dotnet/corefx/pull/42858","RelatedDescription":"Closed or merged PR \"Disable machine related or flaky tests\" (#42858)"},{"Id":"565466356","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:16","Actor":"dotnet-maestro[bot]","Number":"42857","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200213.3\r\n- **Date Produced**: 2/14/2020 2:42 AM\r\n- **Commit**: 6689dd74ef07963fb7bcc8072e80d7e6fd2cd1de\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20113.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42857","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42857)"},{"Id":"565027627","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:06","Actor":"dotnet-maestro[bot]","Number":"42856","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.20113.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.20113.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42856","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42856)"},{"Id":"562902669","IsPullRequest":true,"CreatedAt":"2020-02-14T18:31:29","Actor":"joperezr","Number":"42849","RawContent":null,"Title":"[Release/2.1] Adding .NET Framework asset on OOB packages","State":"closed","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages.","Url":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Closed or merged PR \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849)"},{"Id":"563434956","IsPullRequest":true,"CreatedAt":"2020-02-13T23:50:41","Actor":"omajid","Number":"42853","RawContent":null,"Title":"WIP: Dummy commit to see ci status","State":"closed","Body":"just want to see the status of ci out of the box","Url":"https://github.com/dotnet/corefx/pull/42853","RelatedDescription":"Closed or merged PR \"WIP: Dummy commit to see ci status\" (#42853)"},{"Id":"556561547","IsPullRequest":true,"CreatedAt":"2020-02-13T22:33:38","Actor":"JeremyKuhne","Number":"42845","RawContent":null,"Title":"Fix ReadOnlySequence GetFirstSpan","State":"closed","Body":"Ports https://github.com/dotnet/runtime/pull/276 manually, to address https://github.com/dotnet/runtime/issues/2205.\r\n\r\n**Description**\r\n\r\nWhen getting the first span `GetFirstSpan` from a sequence that is made up of a single segment view of a sequence with multiple sequences the `next` `SequencePosition` is incorrect and will lead to failures trying to enumerate in `SequenceReader` (or anything else that tries to use the `GetFirstSpan` and the returned `SequencePosition`).\r\n\r\n**Customer Impact**\r\n\r\nCustomers will see intermittent failures when sequences happen to align in this way. This issue has gotten multiple reports.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nBug fix, no API surface change.\r\n\r\n**Risk**\r\n\r\nLow. This fix has been in master for a few months and there are significant tests and upstream users.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42845","RelatedDescription":"Closed or merged PR \"Fix ReadOnlySequence GetFirstSpan\" (#42845)"},{"Id":"554298803","IsPullRequest":true,"CreatedAt":"2020-02-13T22:31:37","Actor":"bartonjs","Number":"42838","RawContent":null,"Title":"Update test OS matrix for release/2.1","State":"closed","Body":"```\r\n- redundant RHEL.7\r\n- EOL Ubuntu.1404\r\n- EOL OpenSUSE.42\r\n- EOL Fedora.27\r\n- EOL Fedora.28\r\n+ Fedora.30\r\n-/+ Update Alpine 3.9 and 3.10 to latest docker images\r\n- EOL OSX.1012\r\n+ OSX.1014\r\n+ OSX.1015\r\n- Unsupported Windows.Nano\r\n```","Url":"https://github.com/dotnet/corefx/pull/42838","RelatedDescription":"Closed or merged PR \"Update test OS matrix for release/2.1\" (#42838)"},{"Id":"564866887","IsPullRequest":true,"CreatedAt":"2020-02-13T22:22:26","Actor":"Anipik","Number":"42854","RawContent":null,"Title":"branding update for 3.1.3","State":"closed","Body":"@mmitche we don't need to turn off the stable package here as we didn't do it last time ?","Url":"https://github.com/dotnet/corefx/pull/42854","RelatedDescription":"Closed or merged PR \"branding update for 3.1.3\" (#42854)"},{"Id":"564870185","IsPullRequest":true,"CreatedAt":"2020-02-13T20:53:38","Actor":"Anipik","Number":"42855","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42855","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#42855)"},{"Id":"563334512","IsPullRequest":true,"CreatedAt":"2020-02-13T19:57:44","Actor":"omajid","Number":"42852","RawContent":null,"Title":"[release/3.1] Add cgroup2 support","State":"closed","Body":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686","Url":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Closed or merged PR \"[release/3.1] Add cgroup2 support\" (#42852)"},{"Id":"562912148","IsPullRequest":true,"CreatedAt":"2020-02-11T17:58:08","Actor":"Anipik","Number":"42850","RawContent":null,"Title":"validating build","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Closed or merged PR \"validating build\" (#42850)"},{"Id":"558211552","IsPullRequest":true,"CreatedAt":"2020-01-31T15:50:37","Actor":"bartonjs","Number":"42848","RawContent":null,"Title":"Update test OS matrix for release/3.1","State":"open","Body":"* Run servicing PRs as fullMatrix: true\r\n* Refresh all docker images to their latest tag\r\n* Added Alpine.311 (amd64)\r\n* Added Fedora.30\r\n* Removed Ubuntu.1904\r\n* Added Ubuntu.1910\r\n* Added OSX.1015","Url":"https://github.com/dotnet/corefx/pull/42848","RelatedDescription":"Open PR \"Update test OS matrix for release/3.1\" (#42848)"},{"Id":"558160930","IsPullRequest":true,"CreatedAt":"2020-01-31T15:04:27","Actor":"stephentoub","Number":"42847","RawContent":null,"Title":"Fix readme.md link in contributing.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42847","RelatedDescription":"Closed or merged PR \"Fix readme.md link in contributing.md\" (#42847)"},{"Id":"555744746","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:18","Actor":"danmosemsft","Number":"42843","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42843","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#42843)"},{"Id":"553888832","IsPullRequest":true,"CreatedAt":"2020-01-23T01:27:49","Actor":"halter73","Number":"42837","RawContent":null,"Title":"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync","State":"open","Body":"3.1 backport of dotnet/runtime#1437.\r\n\r\nFixes dotnet/runtime#1436\r\n\r\n#### Description\r\n\r\nWhen the default PipeReader.CopyToAsync(destination) implementation is called with a Stream that throws from WriteAsync(), it will call PipeReader.AdvanceTo(consumed) with the default SequencePosition instead of ReadResult.Buffer.Start as expected. With a custom PipeReader, this can result in the PipeReader being left in an unusable state.\r\n\r\n#### Customer Impact\r\n\r\nIf a customer calls CopyToAsync with a stream that can throw, the original Stream.WriteAsync() exception is hidden by an exception from PipeReader.AdvanceTo(). Here's an example that calls ASP.NET Core 3.1's HttpContext.Request.Body.CopyToAsync() method which uses the default PipeReader.CopyToAsync() implementation under the covers:\r\n\r\n```C#\r\nvar throwingStream = new ThrowingStream();\r\n\r\ntry\r\n{\r\n    await context.Request.Body.CopyToAsync(throwingStream);\r\n}\r\ncatch (Exception ex)\r\n{\r\n    Console.WriteLine(\"CopyToAsync Ex: {0}\", ex);\r\n}\r\n```\r\n\r\n```\r\nCopyToAsync Ex: System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. (Parameter 'position')\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException_PositionOutOfRange()\r\n   at System.Buffers.ReadOnlySequence`1.BoundsCheck(UInt32 sliceStartIndex, Object sliceStartObject, UInt32 sliceEndIndex, Object sliceEndObject)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed, SequencePosition examined) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 217\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 202   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestPipeReader.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\HttpRequestPipeReader.cs:line 31\r\n   at System.IO.Pipelines.PipeReader.CopyToAsyncCore[TStream](TStream destination, Func`4 writeAsync, CancellationToken cancellationToken)\r\n   at SampleApp.Startup.<>c__DisplayClass0_0.<<Configure>b__1>d.MoveNext() in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\samples\\SampleApp\\Startup.cs:line 49\r\n```\r\n\r\n#### Regression?\r\n\r\nTechnically, no. But in 3.0, Kestrel started using a PipeReader to back its request body Streams which makes this issue more prominent.\r\n\r\n#### Packaging reviewed?\r\n\r\nNot yet, but I've followed the guide at https://github.com/dotnet/runtime/blob/0515878d1eb4fb544ae0219c436c299746fdb2b4/docs/project/library-servicing.md.\r\n\r\n#### Risk\r\n\r\nExtremely minimal. This PR is initializing the `consumed` SequencePosition to the safe value of `ReadResult.Buffer.Start` (indicating nothing was consumed) instead of `default` (effectively null). The default PipeReader.AdvanceTo implementation treats these the same.","Url":"https://github.com/dotnet/corefx/pull/42837","RelatedDescription":"Open PR \"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync\" (#42837)"},{"Id":"550563524","IsPullRequest":true,"CreatedAt":"2020-01-17T22:17:49","Actor":"dotnet-maestro-bot","Number":"42831","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @danmosemsft\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42831","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42831)"},{"Id":"551300317","IsPullRequest":true,"CreatedAt":"2020-01-17T17:54:34","Actor":"dotnet-maestro[bot]","Number":"42834","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200116.2\r\n- **Date Produced**: 1/17/2020 2:55 AM\r\n- **Commit**: fd22fd600a2526a7c58536da0e80325eb710d7f1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20066.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42834","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42834)"},{"Id":"551390974","IsPullRequest":true,"CreatedAt":"2020-01-17T13:46:02","Actor":"dotnet-maestro[bot]","Number":"42835","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200116.3\r\n- **Date Produced**: 1/17/2020 6:12 AM\r\n- **Commit**: 259ce7d4619478cfefe7b0c0f6fa765f765f7e37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20066.3\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42835","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42835)"},{"Id":"550491818","IsPullRequest":true,"CreatedAt":"2020-01-16T22:04:38","Actor":"GrabYourPitchforks","Number":"42829","RawContent":null,"Title":"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests","State":"closed","Body":"These are the unit test changes to accompany https://github.com/dotnet/coreclr/pull/27996, which was committed to the __release/3.1__ branch in the _coreclr_ repo.\r\n\r\nThis _corefx_ PR isn't a functional product change. It's just updating the unit tests to reflect the incoming _coreclr_ changes. Once a nightly _coreclr_ build is created and it works its way into this repo, this PR will resolve the resulting unit test failures and will unblock future work in this repo.","Url":"https://github.com/dotnet/corefx/pull/42829","RelatedDescription":"Closed or merged PR \"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests\" (#42829)"},{"Id":"550704048","IsPullRequest":true,"CreatedAt":"2020-01-16T21:35:58","Actor":"dotnet-maestro[bot]","Number":"42832","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.4\r\n- **Date Produced**: 1/16/2020 3:43 AM\r\n- **Commit**: 4e29494f5610ecd739b1b762b36d3b93c61a4a4b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.4\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42832","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42832)"},{"Id":"550545725","IsPullRequest":true,"CreatedAt":"2020-01-16T04:10:55","Actor":"dotnet-maestro[bot]","Number":"42830","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.3\r\n- **Date Produced**: 1/15/2020 8:39 PM\r\n- **Commit**: f14483fb2857f507c302815a54d02d275864e423\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42830","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42830)"},{"Id":"550413141","IsPullRequest":true,"CreatedAt":"2020-01-15T23:08:47","Actor":"dotnet-maestro[bot]","Number":"42828","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.1\r\n- **Date Produced**: 1/15/2020 8:47 AM\r\n- **Commit**: c43d0336eb999fe3bc7bf5873effe89cee716c69\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.20065.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42828","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42828)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"567283975","IsPullRequest":true,"CreatedAt":"2020-02-19T04:06:43","Actor":"dotnet-bot","Number":"41771","RawContent":null,"Title":"Merge release/dev16.5-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.5-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41771","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-vs-deps to master-vs-deps\" (#41771)"},{"Id":"567295123","IsPullRequest":false,"CreatedAt":"2020-02-19T03:40:02","Actor":"AlekseyTs","Number":"41772","RawContent":null,"Title":"Surprising behavior of SemanticModel.LookupSymbols API","State":"open","Body":"```\r\n        [Fact]\r\n        public void LookupSymbols()\r\n        {\r\n            var text1 = @\"\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        var x = new Test();\r\n        string Test = \"\"1\"\";\r\n        System.Console.WriteLine(Test);\r\n        System.Console.WriteLine(x);\r\n    }\r\n}\r\n\r\nclass Test\r\n{\r\n}\r\n\";\r\n\r\n            var comp = CreateCompilation(text1, options: TestOptions.DebugExe);\r\n\r\n            comp.VerifyDiagnostics();\r\n\r\n            var testType = ((Compilation)comp).GetTypeByMetadataName(\"Test\");\r\n            Assert.NotNull(testType);\r\n\r\n            var tree1 = comp.SyntaxTrees[0];\r\n            var model1 = comp.GetSemanticModel(tree1);\r\n\r\n            var localDecl = tree1.GetRoot().DescendantNodes().OfType<VariableDeclaratorSyntax>().Skip(1).Single();\r\n            var declSymbol = model1.GetDeclaredSymbol(localDecl);\r\n            Assert.Equal(\"System.String Test\", declSymbol.ToTestDisplayString());\r\n\r\n            var nameRef = tree1.GetRoot().DescendantNodes().OfType<IdentifierNameSyntax>().Where(id => id.Identifier.ValueText == \"Test\").First();\r\n            Assert.Equal(\"new Test()\", nameRef.Parent.ToString());\r\n\r\n            var symbols = model1.LookupSymbols(nameRef.SpanStart);\r\n            Assert.Contains(declSymbol, symbols);\r\n            Assert.Contains(testType, model1.LookupNamespacesAndTypes(nameRef.SpanStart));\r\n            Assert.Contains(testType, symbols); // <--- This Assert fails\r\n        }\r\n```\r\n\r\nObserved:\r\nEven in a type only context, locals \"shadow\" types for the purpose of LookupSymbols API.\r\n\r\nThis could be By Design, there is LookupNamespacesAndTypes API that finds the type. Perhaps, the doc comment for the \"LookupSymbols\" API should be clarified. ","Url":"https://github.com/dotnet/roslyn/issues/41772","RelatedDescription":"Open issue \"Surprising behavior of SemanticModel.LookupSymbols API\" (#41772)"},{"Id":"567258377","IsPullRequest":true,"CreatedAt":"2020-02-19T02:43:03","Actor":"dotnet-bot","Number":"41770","RawContent":null,"Title":"Merge release/dev16.5 to release/dev16.5-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5 into release/dev16.5-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-release/dev16.5-vs-deps\ngit reset --hard upstream/release/dev16.5-vs-deps\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-release/dev16.5-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41770","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5 to release/dev16.5-vs-deps\" (#41770)"},{"Id":"567258098","IsPullRequest":true,"CreatedAt":"2020-02-19T02:42:54","Actor":"dotnet-bot","Number":"41769","RawContent":null,"Title":"Merge release/dev16.5 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.5\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41769","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5 to master\" (#41769)"},{"Id":"567227612","IsPullRequest":true,"CreatedAt":"2020-02-19T01:26:04","Actor":"JoeRobich","Number":"41762","RawContent":null,"Title":"Fix classview sync","State":"closed","Body":"Fixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1070087. Same change as #41752 but targeted at 16.5\r\n```\r\nCalling View.SynchronizeClassView using keyboard shortcut is not working anymore.\r\n\r\nView.SynchronizeClassView is registered to a keyboard shortcut (Alt+M). The shortcut is not shared with other commands and was working fine with version 16.3.10.\r\n\r\nUnder 16.4.0, doing the keyboard shortcut is not working anymore. I have no idea if the shortcut system itself is broken or if the call to “View.SynchronizeClassView” is broken.\r\n\r\nI’m using the very same solution in my tests between version 16.3.10 (working) and 16.4.0 (not working).\r\n\r\nI tried changing the shortcut but the result is still the same, not working.\r\nI only ear a beep sound (ding.wav) and nothing happens.\r\n```\r\nThe change in https://github.com/dotnet/roslyn/commit/8259140989826cfa3072bffb2c80f2496bf1d682 removes code that intercepted availability requests in order to always reply available. The SyncClassView CommandHandler should have been updated to reply accordingly. This fix implements that behavior.","Url":"https://github.com/dotnet/roslyn/pull/41762","RelatedDescription":"Closed or merged PR \"Fix classview sync\" (#41762)"},{"Id":"567249784","IsPullRequest":true,"CreatedAt":"2020-02-19T00:58:59","Actor":"mavasani","Number":"41768","RawContent":null,"Title":"Implement de-duplication of code actions from NuGet and VSIX code fixers","State":"open","Body":"Implements the code fix part for #18818\r\n\r\nFirst commit adds the unit tests as per the design, and second commit implements the de-duplication in code fix service.","Url":"https://github.com/dotnet/roslyn/pull/41768","RelatedDescription":"Open PR \"Implement de-duplication of code actions from NuGet and VSIX code fixers\" (#41768)"},{"Id":"567237926","IsPullRequest":true,"CreatedAt":"2020-02-19T00:18:09","Actor":"RikkiGibson","Number":"41767","RawContent":null,"Title":"Add regression test for #40981","State":"open","Body":"Closes #40981. This was fixed in 16.5, but crashes in 16.4.","Url":"https://github.com/dotnet/roslyn/pull/41767","RelatedDescription":"Open PR \"Add regression test for #40981\" (#41767)"},{"Id":"567237508","IsPullRequest":false,"CreatedAt":"2020-02-19T00:16:55","Actor":"mikadumont","Number":"41766","RawContent":null,"Title":"Turn on navigate to decompiled sources instead of it being behind a feature flag","State":"open","Body":"![image](https://user-images.githubusercontent.com/46729679/74789445-ab777d80-5269-11ea-8668-d1aef2ad2d3b.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/41766","RelatedDescription":"Open issue \"Turn on navigate to decompiled sources instead of it being behind a feature flag\" (#41766)"},{"Id":"567232811","IsPullRequest":true,"CreatedAt":"2020-02-19T00:03:05","Actor":"dotnet-bot","Number":"41765","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41765","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#41765)"},{"Id":"567231055","IsPullRequest":false,"CreatedAt":"2020-02-18T23:57:18","Actor":"gafter","Number":"41764","RawContent":null,"Title":"Roslyn compiler does not round-trip attribute arguments that contain unmatched surrogates","State":"open","Body":"See also https://github.com/dotnet/roslyn/issues/41280\r\n\r\nThe following test passes on netcore 3.1, but the test demonstrates that\r\n1. an attribute in source with a string argument containing an unmatched surrogate is seen properly (unedited) through the symbol APIs from the source assembly\r\n2. results in a different attribute value when viewed through the compiler APIs on the emitted assembly\r\n3. results in a yet different value when viewed at runtime using reflection\r\n\r\nThe same value should be seen through all three mechanisms.\r\n\r\n``` csharp\r\n        [Fact]\r\n        public void TEMP()\r\n        {\r\n            const string UnicodeHighSurrogate = \"\\uD800\";\r\n            const string UnicodeReplacementCharacter = \"\\uFFFD\";\r\n\r\n            var source =\r\n@\"using System;\r\n \r\n[Obsolete(UnicodeHighSurrogate)]\r\nclass C\r\n{\r\n    public const string UnicodeHighSurrogate = \"\"\\uD800\"\";\r\n    public const string UnicodeReplacementCharacter = \"\"\\uFFFD\"\";\r\n \r\n    static void Main()\r\n    {\r\n        string message = ((ObsoleteAttribute)typeof(C).GetCustomAttributes(false)[0]).Message;\r\n \r\n        Console.WriteLine(message == UnicodeReplacementCharacter + UnicodeReplacementCharacter);\r\n    }\r\n}\";\r\n            Func<bool, Action<ModuleSymbol>> validator = isFromSource => (ModuleSymbol module) =>\r\n            {\r\n                var C = module.GlobalNamespace.GetMember<NamedTypeSymbol>(\"C\");\r\n                var obs = C.GetAttributes()[0];\r\n                var tc = obs.ConstructorArguments.First();\r\n                Assert.Equal(isFromSource ? UnicodeHighSurrogate : UnicodeReplacementCharacter + UnicodeReplacementCharacter + UnicodeReplacementCharacter, (string)tc.Value);\r\n            };\r\n            CompileAndVerify(source, sourceSymbolValidator: validator(true), symbolValidator: validator(false), expectedOutput: \"True\");\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/41764","RelatedDescription":"Open issue \"Roslyn compiler does not round-trip attribute arguments that contain unmatched surrogates\" (#41764)"},{"Id":"567228468","IsPullRequest":false,"CreatedAt":"2020-02-18T23:48:56","Actor":"alexperovich","Number":"41763","RawContent":null,"Title":"NullReferenceException in NullableWalker while classifying runtime code","State":"open","Body":"**Version Used**: \r\n3.5.0-beta2-final\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. clone https://github.com/dotnet/source-indexer@runtimeOnly\r\n2. Run msbuild from vs on `build.proj` in the repo root (this should take ~30 minutes)\r\n3. Open bin/index/index/Errors.txt and find the entries for the System.Drawing.Common project\r\n\r\n**Expected Behavior**:\r\nThe System.Drawing.Common project should be indexed successfully with no errors.\r\n\r\n**Actual Behavior**:\r\nThe System.Drawing.Common project fails to index successfully with multiple errors like this:\r\n```\r\nException during Classification of document: F:\\workspace\\_work\\1\\s\\bin\\repo\\runtime\\src\\libraries\\System.Drawing.Common\\src\\System\\Drawing\\Imaging\\PixelFormat.cs\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitConversion(BoundConversion conversionOpt, BoundExpression conversionOperand, Conversion conversion, TypeWithAnnotations targetTypeWithNullability, TypeWithState operandType, Boolean checkConversion, Boolean fromExplicitCast, Boolean useLegacyWarnings, AssignmentKind assignmentKind, ParameterSymbol parameterOpt, Boolean reportTopLevelWarnings, Boolean reportRemainingWarnings, Boolean extensionMethodThisArgument, Optional`1 stateForLambda, Boolean trackMembers, Location diagnosticLocationOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitConversion(BoundConversion node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.AfterLeftChildHasBeenVisited(BoundExpression leftOperand, Conversion leftConversion, BoundBinaryOperator binary)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitBinaryOperatorChildren(ArrayBuilder`1 stack)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitBinaryOperatorChildren(BoundBinaryOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitBinaryOperator(BoundBinaryOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.VisitRvalue(BoundExpression node, Boolean isKnownToBeAnLvalue)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitFieldEqualsValue(BoundFieldEqualsValue node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitWithStackGuard(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.VisitAlways(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Scan(Boolean& badRegion)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Scan(Boolean& badRegion)\r\n   at Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`2.Analyze(Boolean& badRegion, Optional`1 initialState)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(NullableWalker walker, Symbol symbol, DiagnosticBag diagnostics, VariableState initialState, Builder snapshotBuilderOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.Analyze(CSharpCompilation compilation, Symbol symbol, BoundNode node, Binder binder, Conversions conversions, DiagnosticBag diagnostics, Boolean useMethodSignatureParameterTypes, MethodSymbol delegateInvokeMethodOpt, VariableState initialState, Builder analyzedNullabilityMapOpt, Builder snapshotBuilderOpt, ArrayBuilder`1 returnTypesOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.NullableWalker.AnalyzeAndRewrite(CSharpCompilation compilation, Symbol symbol, BoundNode node, Binder binder, DiagnosticBag diagnostics, Boolean createSnapshots, SnapshotManager& snapshotManager, ImmutableDictionary`2& remappedSymbols)\r\n   at Microsoft.CodeAnalysis.CSharp.InitializerSemanticModel.RewriteNullableBoundNodesWithSnapshots(BoundNode boundRoot, Binder binder, DiagnosticBag diagnostics, Boolean createSnapshots, SnapshotManager& snapshotManager, ImmutableDictionary`2& remappedSymbols)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.EnsureNullabilityAnalysisPerformedIfNecessary()\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetLowerBoundNode(CSharpSyntaxNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetBoundNodes(CSharpSyntaxNode node, CSharpSyntaxNode& bindableNode, BoundNode& lowestBoundNode, BoundNode& highestBoundNode, BoundNode& boundParent)\r\n   at Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetSymbolInfoWorker(CSharpSyntaxNode node, SymbolInfoOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel.GetSymbolInfoWorker(CSharpSyntaxNode node, SymbolInfoOptions options, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfo(ExpressionSyntax expression, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoFromNode(SyntaxNode node, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoCore(SyntaxNode node, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Classification.OperatorOverloadSyntaxClassifier.AddClassifications(Workspace workspace, SyntaxNode syntax, SemanticModel semanticModel, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ClassifyNode(SyntaxNode syntax)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.ProcessNodes()\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.Worker.Classify(Workspace workspace, SemanticModel semanticModel, TextSpan textSpan, ArrayBuilder`1 list, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.AbstractSyntaxClassificationService.AddSemanticClassifications(SemanticModel semanticModel, TextSpan textSpan, Workspace workspace, Func`2 getNodeClassifiers, Func`2 getTokenClassifiers, ArrayBuilder`1 result, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.Classifier.GetClassifiedSpans(SemanticModel semanticModel, TextSpan textSpan, Workspace workspace, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Classification.Classifier.<GetClassifiedSpansAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.SourceBrowser.HtmlGenerator.Classification.<Classify>d__0.MoveNext() in F:\\workspace\\_work\\1\\s\\src\\SourceBrowser\\src\\HtmlGenerator\\Pass1-Generation\\Classifier.cs:line 21\r\n```","Url":"https://github.com/dotnet/roslyn/issues/41763","RelatedDescription":"Open issue \"NullReferenceException in NullableWalker while classifying runtime code\" (#41763)"},{"Id":"567155846","IsPullRequest":true,"CreatedAt":"2020-02-18T22:07:36","Actor":"dotnet-bot","Number":"41761","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41761","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41761)"},{"Id":"567129333","IsPullRequest":true,"CreatedAt":"2020-02-18T20:09:05","Actor":"sharwell","Number":"41759","RawContent":null,"Title":"Convert AddRequiredParenthesesTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41759","RelatedDescription":"Open PR \"Convert AddRequiredParenthesesTests to the new test framework\" (#41759)"},{"Id":"567121189","IsPullRequest":true,"CreatedAt":"2020-02-18T19:52:45","Actor":"sharwell","Number":"41758","RawContent":null,"Title":"Convert AssignOutParametersAboveReturnTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41758","RelatedDescription":"Open PR \"Convert AssignOutParametersAboveReturnTests to the new test framework\" (#41758)"},{"Id":"567120321","IsPullRequest":true,"CreatedAt":"2020-02-18T19:50:59","Actor":"sharwell","Number":"41757","RawContent":null,"Title":"Convert AddAwaitTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41757","RelatedDescription":"Open PR \"Convert AddAwaitTests to the new test framework\" (#41757)"},{"Id":"567119643","IsPullRequest":true,"CreatedAt":"2020-02-18T19:49:35","Actor":"sharwell","Number":"41756","RawContent":null,"Title":"Convert ConvertSwitchStatementToExpressionTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41756","RelatedDescription":"Open PR \"Convert ConvertSwitchStatementToExpressionTests to the new test framework\" (#41756)"},{"Id":"567118666","IsPullRequest":true,"CreatedAt":"2020-02-18T19:47:42","Actor":"sharwell","Number":"41755","RawContent":null,"Title":"Convert RemoveUnusedMembersTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41755","RelatedDescription":"Open PR \"Convert RemoveUnusedMembersTests to the new test framework\" (#41755)"},{"Id":"567107502","IsPullRequest":true,"CreatedAt":"2020-02-18T19:26:20","Actor":"sharwell","Number":"41754","RawContent":null,"Title":"Convert MakeStructFieldsWritableTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41754","RelatedDescription":"Open PR \"Convert MakeStructFieldsWritableTests to the new test framework\" (#41754)"},{"Id":"567103709","IsPullRequest":true,"CreatedAt":"2020-02-18T19:18:51","Actor":"sharwell","Number":"41753","RawContent":null,"Title":"Convert AddObsoleteAttributeTests to the new test framework","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41753","RelatedDescription":"Open PR \"Convert AddObsoleteAttributeTests to the new test framework\" (#41753)"},{"Id":"567064481","IsPullRequest":true,"CreatedAt":"2020-02-18T19:06:31","Actor":"dotnet-bot","Number":"41750","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41750","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41750)"},{"Id":"567093469","IsPullRequest":true,"CreatedAt":"2020-02-18T18:58:52","Actor":"JoeRobich","Number":"41752","RawContent":null,"Title":"Always return available for SyncClassView command","State":"open","Body":"Fixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1070152\r\n```\r\nCalling View.SynchronizeClassView using keyboard shortcut is not working anymore.\r\n\r\nView.SynchronizeClassView is registered to a keyboard shortcut (Alt+M). The shortcut is not shared with other commands and was working fine with version 16.3.10.\r\n\r\nUnder 16.4.0, doing the keyboard shortcut is not working anymore. I have no idea if the shortcut system itself is broken or if the call to “View.SynchronizeClassView” is broken.\r\n\r\nI’m using the very same solution in my tests between version 16.3.10 (working) and 16.4.0 (not working).\r\n\r\nI tried changing the shortcut but the result is still the same, not working.\r\nI only ear a beep sound (ding.wav) and nothing happens.\r\n```\r\nThe change in https://github.com/dotnet/roslyn/commit/8259140989826cfa3072bffb2c80f2496bf1d682 removes code that intercepted availability requests in order to always reply available. The SyncClassView CommandHandler should have been updated to reply accordingly. This fix implements that behavior.","Url":"https://github.com/dotnet/roslyn/pull/41752","RelatedDescription":"Open PR \"Always return available for SyncClassView command\" (#41752)"},{"Id":"567090093","IsPullRequest":false,"CreatedAt":"2020-02-18T18:52:11","Actor":"mikadumont","Number":"41751","RawContent":null,"Title":"Navigation partial text matching","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019\r\n\r\n**Steps to Reproduce**:\r\nWhen using `Go To` or Visual Studio Search include partial text matching instead of natively doing exact text match. \r\n\r\n**Actual Behavior**:\r\nWhen I want to find lets say a class called `EnrichmentConnectionControllerTest` in a project where I have other classes that are named Enrichment… in VS I need to spell out Enrichment before I can start matching on the later part of the class name. \r\n\r\n**Expected Behavior**:\r\nInstead I would like to type something like EnricCoCon and already have a match, which is a huge time saver.","Url":"https://github.com/dotnet/roslyn/issues/41751","RelatedDescription":"Open issue \"Navigation partial text matching\" (#41751)"},{"Id":"566952810","IsPullRequest":true,"CreatedAt":"2020-02-18T16:09:15","Actor":"dotnet-bot","Number":"41748","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41748","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41748)"},{"Id":"566971860","IsPullRequest":false,"CreatedAt":"2020-02-18T15:29:35","Actor":"npolyak","Number":"41749","RawContent":null,"Title":"IHow to verify that a Type can be passed to a generic method in C# also restore generic parameter types based on passed arguments","State":"open","Body":"**Version Used**: \r\n3.4.0\r\n\r\nThis is more of a question, rather than an issue. \r\n\r\nFor example, if I have the following code:\r\n\r\n    public static class MyClass\r\n    {\r\n         public static void DoSmthWithCollection<T>(IEnumerable<T> collection)\r\n         {\r\n          ...\r\n         }\r\n    }\r\n\r\nOf course, compiler would allow to pass to it an object of List<int> type. Moreover, the compiler will figure out that the type T for the method is resolved to int type.\r\n\r\nI need to do the same only dynamically, either by using System.Reflection or Roslyn. Say I get the `MethodInfo` for the method, I get the generic `ParameterInfo`. Is there any easy way to figure out that an object of type `typeof(List<int>)` actually fits to be an argument to the method and that when you pass it, the method resolves `T` to `int` type? And I am talking about some relatively easy solution without examining types and subtypes and the generic type constraints. I think at least Roslyn should have one, since this is what the C# compiler is doing.\r\n\r\nThanks for your help.\r\n","Url":"https://github.com/dotnet/roslyn/issues/41749","RelatedDescription":"Open issue \"IHow to verify that a Type can be passed to a generic method in C# also restore generic parameter types based on passed arguments\" (#41749)"},{"Id":"566889800","IsPullRequest":true,"CreatedAt":"2020-02-18T14:33:40","Actor":"dotnet-maestro[bot]","Number":"41747","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 00c0f9e9-f204-49af-fd58-08d7a4f28342\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/41747","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#41747)"},{"Id":"566773642","IsPullRequest":false,"CreatedAt":"2020-02-18T09:54:29","Actor":"CreateAndInject","Number":"41746","RawContent":null,"Title":"CodeLens doesn't show references sometimes.","State":"open","Body":"I can't reproduce this issue with exact steps, but I meet it so many times.\r\nWhen I click `n references`, the popup is empty : \r\n![image](https://user-images.githubusercontent.com/2529999/74724333-12e7fa00-5277-11ea-99ee-0097290047f8.png)\r\n\r\nThis time, I can only use `Find All References (Ctrl+K, R)`\r\n","Url":"https://github.com/dotnet/roslyn/issues/41746","RelatedDescription":"Open issue \"CodeLens doesn't show references sometimes.\" (#41746)"},{"Id":"566611491","IsPullRequest":true,"CreatedAt":"2020-02-18T02:50:25","Actor":"tmat","Number":"41745","RawContent":null,"Title":"Add CompilationOutputFilePath to project snapshot","State":"open","Body":"EnC needs to know the compilation output path for a given project (IntermediateOutputPath). Currently the path is tracked in VisualStudioWorkspaceImpl, which is not available OOP. Move the path to the project snapshot.","Url":"https://github.com/dotnet/roslyn/pull/41745","RelatedDescription":"Open PR \"Add CompilationOutputFilePath to project snapshot\" (#41745)"},{"Id":"566449502","IsPullRequest":true,"CreatedAt":"2020-02-17T19:07:37","Actor":"dotnet-bot","Number":"41744","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41744","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41744)"},{"Id":"566356197","IsPullRequest":true,"CreatedAt":"2020-02-17T16:12:09","Actor":"dotnet-bot","Number":"41743","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41743","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41743)"},{"Id":"567139403","IsPullRequest":false,"CreatedAt":"2020-01-24T12:28:33","Actor":"aka-STInG","Number":"41760","RawContent":null,"Title":"Inconsistent behavior for bitwise operations with Nullable<bool> typed local variable and Nullable<bool> typed member binding expression","State":"open","Body":"Here is some sample code. Checked it in console app targeting netcoreapp3.1.\r\n```\r\npublic class SomeObject\r\n{\r\n    public bool BoolValue;\r\n}\r\n\r\npublic class OtherClass\r\n{\r\n    public static void Process(SomeObject obj) // assume null passed\r\n    {\r\n        var value = obj?.BoolValue;\r\n        var res1 = obj?.BoolValue | true; // = null\r\n        var res2 = value | true; // = true\r\n\r\n        var res3 = obj?.BoolValue & false; // = null\r\n        var res4 = value & false; // = false\r\n    }\r\n}\r\n```\r\nActual: \r\nres1 != res2 and res3 != res4\r\n\r\nExpected:\r\nres1 == res2 and res3 == res4","Url":"https://github.com/dotnet/roslyn/issues/41760","RelatedDescription":"Open issue \"Inconsistent behavior for bitwise operations with Nullable<bool> typed local variable and Nullable<bool> typed member binding expression\" (#41760)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"567083648","IsPullRequest":false,"CreatedAt":"2020-02-18T18:39:00","Actor":"kant2002","Number":"7995","RawContent":null,"Title":"[Windows Forms] Controls support","State":"open","Body":"Here the summary of controls working in Windows Forms in my limited testing\r\n\r\n# Common Controls\r\n\r\n- [x] Button\r\n- [x] CheckBox\r\n- [ ] CheckedListBox Crash on click when empty or on startup if any items\r\n- [ ] ComboBox Crash on dropdown open\r\n- [ ] DateTimePicker Crash on select date\r\n- [x] Label\r\n- [ ] LinkLabel Crash on hover\r\n- [ ] ListBox Crash on select item\r\n- [x] ListView \r\n- [x] MaskedTextBox\r\n- [ ] MonthCalendar Crash on startup\r\n- [ ] NotifyIcon Crash on startup when icon set\r\n- [x] NumericUpDown\r\n- [ ] PictureBox Crash on startup\r\n- [x] ProgressBar\r\n- [x] RadioButton\r\n- [ ] RichTextBox Crash on startup\r\n- [x] TextBox\r\n- [x] ToolTip\r\n- [x] TreeView\r\n- [ ] WebBrowser Crash on startup\r\n\r\n# Containers\r\n- [x] FlowLayoutPanel\r\n- [x] GroupBox\r\n- [x] Panel\r\n- [ ] SplitContainer Crash on hover\r\n- [x] TabControl\r\n- [x] TableLayoutPanel\r\n\r\n# Menu & Toolstrip\r\n- [ ] ContextMenuStrip Crash on show\r\n- [ ] MenuStrip Crash on startup\r\n- [ ] StatusStrip Crash on startup when use ToolstripDropDown and ToolStripSplitButton\r\n- [ ] ToolStrip \r\n- [x] ToolStripContainer\r\n\r\nI can understand that some issues i due to lack of COM support, but some \"crash on selection\" looks more like CoreRT issue. Anyway, this issue to give visibility for list of supported out-of-box controls.","Url":"https://github.com/dotnet/corert/issues/7995","RelatedDescription":"Open issue \"[Windows Forms] Controls support\" (#7995)"},{"Id":"567027688","IsPullRequest":false,"CreatedAt":"2020-02-18T16:55:33","Actor":"kant2002","Number":"7994","RawContent":null,"Title":"[Windows Forms] Form.Close crash application","State":"open","Body":"If I show Form using `Form.Show` or `Form.ShowDialog` then after close form, application crashed.","Url":"https://github.com/dotnet/corert/issues/7994","RelatedDescription":"Open issue \"[Windows Forms] Form.Close crash application\" (#7994)"},{"Id":"566839053","IsPullRequest":false,"CreatedAt":"2020-02-18T11:47:56","Actor":"kant2002","Number":"7993","RawContent":null,"Title":"Manifest does not preserved","State":"open","Body":"Seems to be manifest file which enable modern look and feel for Windows Forms project, does not preserved after publishing.\r\n\r\n**Expected**\r\n![image](https://user-images.githubusercontent.com/4257079/74728072-59842700-526c-11ea-85d0-497e358a361b.png)\r\n\r\n**Actual**\r\n![image](https://user-images.githubusercontent.com/4257079/74728101-6274f880-526c-11ea-823e-584cd37f5152.png)\r\n\r\nrelated to #5662\r\n","Url":"https://github.com/dotnet/corert/issues/7993","RelatedDescription":"Open issue \"Manifest does not preserved\" (#7993)"},{"Id":"566355743","IsPullRequest":false,"CreatedAt":"2020-02-18T08:21:56","Actor":"kant2002","Number":"7991","RawContent":null,"Title":"Question: CoreRT branch","State":"closed","Body":"@MichalStrehovsky mention that CoreRT can live on dotnet/runtime brach here\r\nhttps://github.com/dotnet/corert/issues/7784#issuecomment-529241819\r\n\r\nIs this still an option?","Url":"https://github.com/dotnet/corert/issues/7991","RelatedDescription":"Closed issue \"Question: CoreRT branch\" (#7991)"},{"Id":"566589299","IsPullRequest":true,"CreatedAt":"2020-02-18T01:21:42","Actor":"yowl","Number":"7992","RawContent":null,"Title":"WIP: Wasm: Add conservative garbage collection","State":"open","Body":"Enables conservative garbage collection in the Wasm backend.  WIP as would like to solicit suggestions for tests.  Naively, I could loop and create some large arrays beyond the memory limit, which should cause a GC and succeed, but anything better/more sophisticated I should add to the tests?  So far the only test is to create and collect an object, testing through a `WeakReference`.\r\n\r\nWIP also as depends on #7983 at which point 99% of the diffs should disappear.\r\n\r\nCloses #5305 ","Url":"https://github.com/dotnet/corert/pull/7992","RelatedDescription":"Open PR \"WIP: Wasm: Add conservative garbage collection\" (#7992)"},{"Id":"566287286","IsPullRequest":false,"CreatedAt":"2020-02-17T13:41:16","Actor":"kant2002","Number":"7990","RawContent":null,"Title":"Failed to publish with-runtime project","State":"closed","Body":"I try publish `with-runtime` project on the ZeroSharp repo and it fails with following exception.\r\n\r\n```\r\n  Generating native code\r\n  \r\n  Unhandled Exception: System.TypeLoadException: System.Exception\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode..ctor(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateConstructedTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at Internal.IL.ILImporter.ImportCall(ILOpcode opcode, Int32 token)\r\n     at Internal.IL.ILImporter.ImportBasicBlock(BasicBlock basicBlock)\r\n     at Internal.IL.ILImporter.ImportBasicBlocks()\r\n     at Internal.IL.ILImporter.Import()\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nwith `efi-runtime` project it fails with following exception\r\n```\r\n  Unhandled Exception: System.TypeLoadException: RawCalliHelper\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at ILCompiler.CompilerTypeSystemContext.EnsureLoadableTypeUncached(TypeDesc type)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode..ctor(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.CreateNecessaryTypeNode(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.DependencyAnalysis.ExactMethodInstantiationsNode.GetExactMethodInstantiationDependenciesForMethod(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nit seems to be that this is indication that `classlib` module is lacking of important types. Then error message should be more clear about that. But I have to dig deeper into it.","Url":"https://github.com/dotnet/corert/issues/7990","RelatedDescription":"Closed issue \"Failed to publish with-runtime project\" (#7990)"},{"Id":"561371393","IsPullRequest":false,"CreatedAt":"2020-02-17T12:58:38","Actor":"kant2002","Number":"7971","RawContent":null,"Title":"NRE during compilation","State":"closed","Body":"I try to make @MichalStrehovsky SeeCharpSnake run using msbuild modifications instead of manual jiggling with command line. I'm not yet fully understand if I doing correct thing, so give me some slack for that.\r\n\r\nI made compilation of project by adding following modifications. Actually there more modifications but they are not related to CSC compilation. Essentially  add /nostdlib and /noconfig but instead of embedding `System.Object` and friends using `/runtimemetadata` (which I cannot make work with Roslyn) I leave only reference to `System.Runtime` and `System.Runtime.InteropServices`\r\n\r\n```\r\n     <PropertyGroup>\r\n <NoStdLib>true</NoStdLib>\r\n    <NoConfig>true</NoConfig>\r\n    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>\r\n  <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"MyBeforeCompile\" BeforeTargets=\"BeforeCompile\" AfterTargets=\"FindReferenceAssembliesForReferences\">\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n    <ItemGroup>\r\n      <ReferencePathWithRefAssemblies Remove=\"@(ReferencePathWithRefAssemblies)\"  Condition=\"'%(Filename)' != 'System.Runtime' and '%(Filename)' != 'System.Runtime.InteropServices'\"  />\r\n      <!-- <ReferencePath Remove=\"@(ReferencePath)\" /> -->\r\n    </ItemGroup>\r\n\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n  </Target>\r\n\r\n```\r\n\r\nThen I try to simplify ILC by removing all `AutoInitializedAssemblies` and `IlcReference` so 'rsp' file now looks like this:\r\n```\r\nobj\\Release\\netcoreapp3.1\\win-x64\\SeeSharpSnake.dll\r\n-o:obj\\Release\\netcoreapp3.1\\win-x64\\native\\SeeSharpSnake.obj\r\n-O\r\n-g\r\n--methodbodyfolding\r\n--Os\r\n--disablereflection\r\n--removefeature:EventSource\r\n--removefeature:FrameworkStrings\r\n--removefeature:Globalization\r\n--removefeature:SerializationGuard\r\n--removefeature:Comparers\r\n\r\n```\r\nAnd now I have exception message during ILC compilation\r\n```\r\n  Generating native code\r\nEXEC : error : Object reference not set to an instance of an object. [D:\\d\\kant\\GitHub\\SeeSharpSnake\\SeeSharpSnake.csproj]\r\n  System.NullReferenceException: Object reference not set to an instance of an object.\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nwhich maybe fine, since I likely hit unexpected combinations. What I want to have is better messaging in that area, so if this is some stupid combination, then it will give me at least `simpleName` which ILC expect. This sounds like simple issue to solve and it can be beneficial for newcomers","Url":"https://github.com/dotnet/corert/issues/7971","RelatedDescription":"Closed issue \"NRE during compilation\" (#7971)"},{"Id":"565972032","IsPullRequest":true,"CreatedAt":"2020-02-17T08:20:35","Actor":"jkotas","Number":"7989","RawContent":null,"Title":"Cleanup GetRawSzArrayData","State":"closed","Body":"Fixes #7984","Url":"https://github.com/dotnet/corert/pull/7989","RelatedDescription":"Closed or merged PR \"Cleanup GetRawSzArrayData\" (#7989)"},{"Id":"565791877","IsPullRequest":false,"CreatedAt":"2020-02-17T08:20:35","Actor":"MichalStrehovsky","Number":"7984","RawContent":null,"Title":"Clean up CoreLib after MemoryMarshal.GetArrayDataReference","State":"closed","Body":"We ingested dotnet/runtime#1036. The internal uses of `Array.GetRawSzArrayData()` should be cleaned up to use the new API.","Url":"https://github.com/dotnet/corert/issues/7984","RelatedDescription":"Closed issue \"Clean up CoreLib after MemoryMarshal.GetArrayDataReference\" (#7984)"},{"Id":"565893812","IsPullRequest":true,"CreatedAt":"2020-02-17T01:27:29","Actor":"jkotas","Number":"7988","RawContent":null,"Title":"Apply ifdef rename from dotnet/runtime (C# files)","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7988","RelatedDescription":"Closed or merged PR \"Apply ifdef rename from dotnet/runtime (C# files)\" (#7988)"},{"Id":"565793302","IsPullRequest":true,"CreatedAt":"2020-02-16T10:53:59","Actor":"MichalStrehovsky","Number":"7986","RawContent":null,"Title":"Update CoreLib from dotnet/runtime","State":"closed","Body":"CoreLib sources as of commit 571f972a5b1c7821870b1111bcc64726740957df in dotnet/runtime.\r\n\r\nI've reverted changes to the common ArrayBuilder.cs because our ArrayBuilder is different from the runtime one.\r\n\r\nI've also reverted change to the common SR.cs and excluded the shared CoreLib's SR.cs from build. We need to unify those two in the runtime repo first.\r\n\r\nGoing forward, we'll need to find a way to garbage collect the Common folder because deletes in the runtime repo won't easily propagate to our repo.","Url":"https://github.com/dotnet/corert/pull/7986","RelatedDescription":"Closed or merged PR \"Update CoreLib from dotnet/runtime\" (#7986)"},{"Id":"565800826","IsPullRequest":true,"CreatedAt":"2020-02-15T22:28:55","Actor":"MichalStrehovsky","Number":"7987","RawContent":null,"Title":"Limit pregenerated variant interface implementations","State":"closed","Body":"By default, we pregenerate all implementations of variant interface\r\nmethods on a type - this is because we don't have a good way of tracking\r\nhow variant interfaces are used (it gets quite complex for interfaces\r\nwith multiple variant parameters).\r\n\r\nWe previously at least limited this for interfaces where the variant\r\nargument happens to be a valuetype. We can further limit this for\r\ninterfaces where the parameter is contravariant and the argument is\r\na sealed type.\r\n\r\nThis doesn't help size as much as I would have hoped (no difference\r\nfor hello world, and 500 bytes for no-reflection hello world) but\r\nmaybe it will help more somewhere.","Url":"https://github.com/dotnet/corert/pull/7987","RelatedDescription":"Closed or merged PR \"Limit pregenerated variant interface implementations\" (#7987)"},{"Id":"565792255","IsPullRequest":false,"CreatedAt":"2020-02-15T18:44:56","Actor":"MichalStrehovsky","Number":"7985","RawContent":null,"Title":"Implement RhpGcPoll","State":"open","Body":"Currently implemented as a NOP.\r\n\r\nCorresponds to CORINFO_HELP_POLL_GC in CoreCLR. We might be able to steal some code from it.\r\n\r\nThere's also an ARM implementation of this available in src\\Native\\Runtime\\arm\\GcProbe.asm. That one was implemented for ProjectN, but the samantics should be the same.\r\n\r\nBecame necessary after we ingested dotnet/runtime#1772.","Url":"https://github.com/dotnet/corert/issues/7985","RelatedDescription":"Open issue \"Implement RhpGcPoll\" (#7985)"},{"Id":"563774158","IsPullRequest":true,"CreatedAt":"2020-02-14T15:01:49","Actor":"kant2002","Number":"7981","RawContent":null,"Title":"Document IlcSystemModule property and others","State":"closed","Body":"mentioned in #7554","Url":"https://github.com/dotnet/corert/pull/7981","RelatedDescription":"Closed or merged PR \"Document IlcSystemModule property and others\" (#7981)"},{"Id":"564893362","IsPullRequest":true,"CreatedAt":"2020-02-13T19:12:06","Actor":"yowl","Number":"7983","RawContent":null,"Title":"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.","State":"open","Body":"This PR moves us from the old static function LLVMSharp style to the OO style, and upgrades to the Emscripten upstream backend which is the way forward and allows us to move to LLVM 9 and it's Wasm backend.  This will allow CoreRT to compile larger Wasm projects which at the moment hit https://github.com/emscripten-core/emscripten/issues/8393\r\n\r\nSorry about the huge number of commits, I thought maybe I could squash at the point of the PR but don't see an option for that.  The contentions points are really the Native/Runtime function signature changes and https://github.com/dotnet/corert/compare/master...yowl:llvm8-gvm?expand=1#diff-1bed6054b85520e1ab53fa3a5c8f6a21.\r\n\r\nFor some background on why I've done that:\r\n\r\nhttps://gist.github.com/yowl/c143f0520fa0544d41a24bce627086fe\r\nand\r\nhttps://bugs.llvm.org/show_bug.cgi?id=44381\r\n\r\nWIP while I see what happens to the CI.","Url":"https://github.com/dotnet/corert/pull/7983","RelatedDescription":"Open PR \"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.\" (#7983)"},{"Id":"563770129","IsPullRequest":true,"CreatedAt":"2020-02-13T09:09:10","Actor":"kant2002","Number":"7980","RawContent":null,"Title":"Provide a way how to project work with local build","State":"closed","Body":"in additional to published packages.\r\n\r\nThis change mostly to show a way how customer can use CoreRT and made modifications when needed.\r\nLikely current users of CoreRT would be persons who can and would like to get hand dirty into CoreRT due to it's status.\r\n\r\nOther alternative is to have property `UseLocalCoreRT` which will be used to trigger local CoreRT usage.","Url":"https://github.com/dotnet/corert/pull/7980","RelatedDescription":"Closed or merged PR \"Provide a way how to project work with local build\" (#7980)"},{"Id":"564529018","IsPullRequest":true,"CreatedAt":"2020-02-13T08:53:13","Actor":"secana","Number":"7982","RawContent":null,"Title":"Add prerequisites for Fedora 31","State":"closed","Body":"Add prerequisites for Fedora 31 to compile .NET projects with CoreRT to the samples/prerequisites documentation.","Url":"https://github.com/dotnet/corert/pull/7982","RelatedDescription":"Closed or merged PR \"Add prerequisites for Fedora 31\" (#7982)"},{"Id":"561372431","IsPullRequest":true,"CreatedAt":"2020-02-12T10:49:48","Actor":"kant2002","Number":"7972","RawContent":null,"Title":"Fix NRE caused by unknown CanonTypesModule","State":"closed","Body":"See #7971\r\n\r\nI'm not sure if this is proper diagnositcs, but right now instead of NRE\r\nI have following error message\r\n```\r\nUnhandled Exception: Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Private.CoreLib\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\nFrom now on I can understand that specific module does not found.\r\nProbably for that case should be created specific error message, but I'm not sure what this is means, so cannot make proper text.","Url":"https://github.com/dotnet/corert/pull/7972","RelatedDescription":"Closed or merged PR \"Fix NRE caused by unknown CanonTypesModule\" (#7972)"},{"Id":"562220228","IsPullRequest":true,"CreatedAt":"2020-02-12T02:14:51","Actor":"yowl","Number":"7974","RawContent":null,"Title":"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp","State":"closed","Body":"Changes the TFM from netstandard 1.6 to 2.0 so that we can upgrade LLVMSharp to 9.0.0-beta which supports netstandard2.0 only.  Upgrade to LLVMSharp 9 would allow upgrade to LLVM Wasm backend which is the new default in Emscripten.","Url":"https://github.com/dotnet/corert/pull/7974","RelatedDescription":"Closed or merged PR \"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp\" (#7974)"},{"Id":"562413407","IsPullRequest":true,"CreatedAt":"2020-02-11T09:01:36","Actor":"MichalStrehovsky","Number":"7975","RawContent":null,"Title":"Avoid creating constructed EEType for type comparison","State":"closed","Body":"Make it so that `typeof(X) == typeof(Y)` doesn't result in vtable of X and Y to be allocated.\r\n\r\nThis is actually two things: a slight refactoring of `UsageBasedMetadataManager` and the actual fix.\r\n\r\nThe refactoring:\r\n* Make it so that `UsageBasedMetadataManager` can be used as a replacement for `EmptyMetadataManager`. Empty metadata manager was generating pretty much the same outputs as usage based manager with a fully blocked policy, with the only exception being type loader templates. I'm adding a temporary workaround to keep the outputs the same. We need to think about the right logic to generate templates - then the workaround can be deleted.\r\n* We were not blocking metadata for `System.__Canon`. Fixed things up to make it so.\r\n\r\nActual fix:\r\n* Do not automatically consider LDTOKEN references from code type construction events, but ask the metadata manager.\r\n* Have metadata manager use the reflection scanner to decide whether to do the upgrade from necessary to constructed.\r\n* This extension point can potentially be outsourced to an outside component that computes reflectability.","Url":"https://github.com/dotnet/corert/pull/7975","RelatedDescription":"Closed or merged PR \"Avoid creating constructed EEType for type comparison\" (#7975)"},{"Id":"562876791","IsPullRequest":false,"CreatedAt":"2020-02-10T22:51:38","Actor":"mjsabby","Number":"7979","RawContent":null,"Title":"Stackoverflow doing WaitOneNoCheck","State":"open","Body":"`DeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\n`","Url":"https://github.com/dotnet/corert/issues/7979","RelatedDescription":"Open issue \"Stackoverflow doing WaitOneNoCheck\" (#7979)"},{"Id":"562433102","IsPullRequest":true,"CreatedAt":"2020-02-10T17:41:03","Actor":"kant2002","Number":"7978","RawContent":null,"Title":"Add IlcSystemModule property","State":"closed","Body":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13","Url":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Closed or merged PR \"Add IlcSystemModule property\" (#7978)"},{"Id":"562413517","IsPullRequest":true,"CreatedAt":"2020-02-10T16:15:24","Actor":"MichalStrehovsky","Number":"7976","RawContent":null,"Title":"Narrow down contents of ExactMethodInstantiations table","State":"closed","Body":"We don't need to generate entries for all generic methods we compiled, just a subset.","Url":"https://github.com/dotnet/corert/pull/7976","RelatedDescription":"Closed or merged PR \"Narrow down contents of ExactMethodInstantiations table\" (#7976)"},{"Id":"562413619","IsPullRequest":true,"CreatedAt":"2020-02-10T16:14:11","Actor":"MichalStrehovsky","Number":"7977","RawContent":null,"Title":"Match `Type.operator==` with CoreCLR","State":"closed","Body":"Runtime implemented types are never equal to non-runtime implemented types.","Url":"https://github.com/dotnet/corert/pull/7977","RelatedDescription":"Closed or merged PR \"Match `Type.operator==` with CoreCLR\" (#7977)"},{"Id":"562124837","IsPullRequest":true,"CreatedAt":"2020-02-10T10:11:12","Actor":"jkotas","Number":"7973","RawContent":null,"Title":"Thread-safe EqualityCompare singleton","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/31990 to CoreRT","Url":"https://github.com/dotnet/corert/pull/7973","RelatedDescription":"Closed or merged PR \"Thread-safe EqualityCompare singleton\" (#7973)"},{"Id":"561357319","IsPullRequest":false,"CreatedAt":"2020-02-07T02:37:13","Actor":"kant2002","Number":"7969","RawContent":null,"Title":"Instructions for using locally build CoreCLR does not work anymore","State":"closed","Body":"I attempt to modify HelloWorld to use local coreclr instead of package as specified in `how-to-build-and-run-ilcompiler-in-console-shell-prompt.md`\r\n\r\nHere my project file \r\n```\r\n<Project>\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.props\" />\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets\" />\r\n  <Import Project=\"XXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.targets\" />\r\n</Project>\r\n```\r\n\r\nPublish process fails with following error message:\r\n```\r\nXXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.Publish.targets(60,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [XXXX\\samples\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7969","RelatedDescription":"Closed issue \"Instructions for using locally build CoreCLR does not work anymore\" (#7969)"},{"Id":"561363695","IsPullRequest":true,"CreatedAt":"2020-02-07T02:20:53","Actor":"kant2002","Number":"7970","RawContent":null,"Title":"Clarify that IlcPath variable is required","State":"closed","Body":"After issue #7969 add small clarifications.","Url":"https://github.com/dotnet/corert/pull/7970","RelatedDescription":"Closed or merged PR \"Clarify that IlcPath variable is required\" (#7970)"},{"Id":"559699531","IsPullRequest":false,"CreatedAt":"2020-02-06T22:12:32","Actor":"kant2002","Number":"7968","RawContent":null,"Title":"Build issues for samples","State":"closed","Body":"If I build any project from samples I receive `error NU1101: Unable to find package Microsoft.DotNet.ILCompiler. No packages exist with this id in source(s): nuget.org`. Which indicates that .NET Core SDK does not pickup settings from nuget.config\r\n\r\nWhen I try to troubleshoot by running `dotnet publish -r win-x64 -c release -v d` I see following\r\n```\r\n         NuGet Config files used:\r\n             .\\GitHub\\dotnet\\corert\\samples\\HelloWorld\\NuGet.Config\r\n             C:\\Users\\user\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n         Feeds used:\r\n             https://api.nuget.org/v3/index.json\r\n```\r\n\r\nIf I run `dotnet restore --configfile .\\nuget.config` everything restored as expected, but I cannot run publish process as in docs, and have to resort to `dotnet publish -r win-x64 -c release --configfile .\\nuget.config`\r\n\r\nMy take on this, is shown in https://github.com/MichalStrehovsky/SeeSharpSnake/pull/10/files where I use `RestoreAdditionalPackageSources` in the project file. This seems to be serve same purpose.\r\n\r\nIf you believe that this is issue in my environment, please correct me. But I really don't know where to look at this point.","Url":"https://github.com/dotnet/corert/issues/7968","RelatedDescription":"Closed issue \"Build issues for samples\" (#7968)"},{"Id":"559549711","IsPullRequest":true,"CreatedAt":"2020-02-04T08:07:32","Actor":"kant2002","Number":"7967","RawContent":null,"Title":"Remove confusing line about ancient tests","State":"closed","Body":"Was raised in discussion in #7966","Url":"https://github.com/dotnet/corert/pull/7967","RelatedDescription":"Closed or merged PR \"Remove confusing line about ancient tests\" (#7967)"},{"Id":"559430865","IsPullRequest":true,"CreatedAt":"2020-02-04T07:46:53","Actor":"kant2002","Number":"7966","RawContent":null,"Title":"Suggestions to prerequisite docs","State":"closed","Body":"This changes mostly driven by my confusion how to initially start docs. For sure I have to read carefully,\r\nbut I miss important pieces since they was in unexpected places\r\n- Move installing .NET Core to prerequiresite docs\r\n   Assuming this is still valid, since seems to be\r\n   build.cmd/.sh pull .NET Core SDK automatically\r\n- Highlight that Developer Command Prompt needed\r\n   and that you can select environment.\r\n\r\nThis is driven mostly by my confusion in #7965","Url":"https://github.com/dotnet/corert/pull/7966","RelatedDescription":"Closed or merged PR \"Suggestions to prerequisite docs\" (#7966)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"567257541","IsPullRequest":true,"CreatedAt":"2020-02-19T01:25:35","Actor":"dotnet-maestro[bot]","Number":"10673","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200218.4\r\n- **Date Produced**: 2/19/2020 3:27 AM\r\n- **Commit**: aa9f9ef5a0dbd98646d43d892b2729a51692b552\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10673","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10673)"},{"Id":"565535431","IsPullRequest":true,"CreatedAt":"2020-02-19T01:25:23","Actor":"dotnet-maestro[bot]","Number":"10651","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200218.1\r\n- **Date Produced**: 2/18/2020 9:50 PM\r\n- **Commit**: 1a277d06b515ada913c1e9a25d98f770da503535\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10651","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10651)"},{"Id":"567255709","IsPullRequest":false,"CreatedAt":"2020-02-19T01:18:55","Actor":"wli3","Number":"10672","RawContent":null,"Title":"No CLI projects in solution explore","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/10672","RelatedDescription":"Open issue \"No CLI projects in solution explore\" (#10672)"},{"Id":"567240252","IsPullRequest":false,"CreatedAt":"2020-02-19T00:25:32","Actor":"wli3","Number":"10671","RawContent":null,"Title":"dotnet tool install --tool-path c:\\mytools --add-source ./nupkg mytool will not pick up local first on mac and Linux","State":"open","Body":"It will pick up a package from the nuget.org instead of a same name package in the local machine pointed by the feed","Url":"https://github.com/dotnet/sdk/issues/10671","RelatedDescription":"Open issue \"dotnet tool install --tool-path c:\\mytools --add-source ./nupkg mytool will not pick up local first on mac and Linux\" (#10671)"},{"Id":"565600611","IsPullRequest":true,"CreatedAt":"2020-02-18T15:55:13","Actor":"sfoslund","Number":"10652","RawContent":null,"Title":"Remove stack dump on dotnet -d","State":"closed","Body":"Fixes #4104 \r\n@wli3 has already looked at these changes [here](https://github.com/dotnet/toolset/compare/master...sfoslund:Dotnet-dDump) before the repo merge.","Url":"https://github.com/dotnet/sdk/pull/10652","RelatedDescription":"Closed or merged PR \"Remove stack dump on dotnet -d\" (#10652)"},{"Id":"566877445","IsPullRequest":true,"CreatedAt":"2020-02-18T15:06:51","Actor":"dotnet-maestro[bot]","Number":"10668","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200217.3\r\n- **Date Produced**: 2/17/2020 7:54 PM\r\n- **Commit**: bd2a2b09716ddb54cb1e40f087beaaeeef859118\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20117.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20117.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10668","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10668)"},{"Id":"566918656","IsPullRequest":false,"CreatedAt":"2020-02-18T14:10:42","Actor":"jacekard","Number":"10670","RawContent":null,"Title":"Publishing single file application with custom icon via dotnet cli on Docker","State":"open","Body":"Hello,\r\nI'm glad that in the newest .NET Core version there's a possibility to change an application icon, however it looks like it's limited to publishing in local environment. Is Docker not supported?\r\n\r\nWhat I'm trying to achieve:\r\nPublishing self-contained, single file executable using 'dotnet publish' command and with the icon file I'm specifying in project's csproj using Docker container. \r\nIt works using Visual Studio 'Publish' button on local Windows. It doesn't work while using dotnet cli using docker container.\r\n\r\nMy configuration using Microsoft (R) Build Engine version 16.4.0+e901037fe for .NET Core:\r\n\r\nThis is .Net Core 3.1 Console Application with defined icon as below:\r\n```\r\n<PropertyGroup>\r\n    ....\r\n   <ApplicationIcon>icon.ico</ApplicationIcon>\r\n</PropertyGroup>\r\n```\r\nPublish command is executed using command:\r\n`dotnet publish -c Release -o out`\r\n\r\nOn the left side there is executable published on host machine. On the right, docker container.\r\nNot only it lacks icon but also some of the assembly info. Could anyone explain to me why there's such a difference?\r\n![image](https://user-images.githubusercontent.com/26470750/74746193-53d71300-5265-11ea-8d81-75823663a77c.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/10670","RelatedDescription":"Open issue \"Publishing single file application with custom icon via dotnet cli on Docker\" (#10670)"},{"Id":"566888136","IsPullRequest":true,"CreatedAt":"2020-02-18T13:20:13","Actor":"dotnet-maestro[bot]","Number":"10669","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200217.8\r\n- **Date Produced**: 2/18/2020 8:48 AM\r\n- **Commit**: 4225fd10fef47bbcd859f7e4134a7500108dc9b6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20117.8\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10669","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#10669)"},{"Id":"566829885","IsPullRequest":false,"CreatedAt":"2020-02-18T11:30:02","Actor":"ms0713","Number":"10667","RawContent":null,"Title":"dotnet.exe exited with -2147450751","State":"open","Body":"I m trying to debug .net core 3.1 Console Application with Visual Studio 2019.\r\nWhile pressing F5 it starts console window and gives following info:\r\nC;\\Program Files\\dotnet\\dotnet.exe (process 8416) exited with code -2147450751.\r\n\r\nThis application was previously running with .net core 2.2 with Visual Studio 2017.\r\nI have upgraded the framework to 3.1 and then not able to debug it with VS 2019.\r\n\r\nIt is getting successfully build and exe file also gets successfully executed.\r\n\r\nIf I create fresh sample application .net core 3.1 in VS 2019, I m able to debug the same.\r\nRest of the system environment is same for both the applications.\r\n\r\nWhat am I doing wrong here?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/10667","RelatedDescription":"Open issue \"dotnet.exe exited with -2147450751\" (#10667)"},{"Id":"566791210","IsPullRequest":true,"CreatedAt":"2020-02-18T10:23:05","Actor":"enricosada","Number":"10666","RawContent":null,"Title":"Read default language for `dotnet new` from env var","State":"open","Body":"Read `DOTNET_NEW_PREFERRED_LANG` as default language for `dotnet new`.\r\nIf not set, the default continue to be `C#`\r\n\r\nCurrently to create F# projects, we need to specify `-lang f#` foreach `dotnet new` invocation.\r\nIt's really annoying, and atm `dotnet new` doesnt yet support set the preference property.\r\n\r\nThis option can be removed later, when `dotnet new` support set the default language (as normal config)\r\n\r\nWith this pr\r\n\r\n```batch\r\nset DOTNET_NEW_PREFERRED_LANG=F#\r\ndotnet new console\r\ndotnet new lib\r\n```\r\n\r\n/cc @cartermp\r\n\r\nref https://github.com/dotnet/sdk/issues/4224","Url":"https://github.com/dotnet/sdk/pull/10666","RelatedDescription":"Open PR \"Read default language for `dotnet new` from env var\" (#10666)"},{"Id":"566621287","IsPullRequest":false,"CreatedAt":"2020-02-18T03:22:50","Actor":"NextTurn","Number":"10665","RawContent":null,"Title":"Publishing with `win-x64` RID doesn't include runtime-specific Nuget libraries","State":"open","Body":"## Steps to reproduce\r\n\r\nReference a Nuget package with runtime-specific libraries.\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Management.Infrastructure\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n- `dotnet publish`\r\n\r\n```\r\n\\publish\r\n  \\runtimes\r\n    \\win7-x64\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    \\win7-x86\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    \\win10-x64\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    \\win10-x86\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    ...\r\n  ...\r\n```\r\n\r\n- `dotnet publish -r win10-x64`\r\n\r\n```\r\n\\publish\r\n  \\Microsoft.Management.Infrastructure.dll\r\n  ...\r\n```\r\n\r\n- `dotnet publish -r win-x64`\r\n\r\nNo library from the Nuget package is copied to */publish* directory.\r\n\r\n## Expected behavior\r\n\r\n- `dotnet publish -r win-x64`\r\n\r\n```\r\n\\publish\r\n  \\runtimes\r\n    \\win7-x64\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    \\win10-x64\r\n      \\lib\\netstandard1.6\\Microsoft.Management.Infrastructure.dll\r\n      ...\r\n    ...\r\n  ...\r\n```\r\n\r\n## Actual behavior\r\n\r\n`dotnet publish -r win-x64` succeeds, but the produced program will definitely crash.\r\n\r\n> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.Management.Infrastructure, Version=1.0.0.0, Culture=neutral,\r\nPublicKeyToken=31bf3856ad364e35'. The system cannot find the file specified.\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.200-preview-014883\r\n Commit:    4e2a0ee959\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.200-preview-014883 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/dotnet/sdk/issues/10665","RelatedDescription":"Open issue \"Publishing with `win-x64` RID doesn't include runtime-specific Nuget libraries\" (#10665)"},{"Id":"566294753","IsPullRequest":true,"CreatedAt":"2020-02-17T16:06:52","Actor":"dotnet-maestro[bot]","Number":"10663","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200217.2\r\n- **Date Produced**: 2/17/2020 11:52 AM\r\n- **Commit**: 76b4d64bd6510921fee46dbb7f2fd5613ab71e35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20117.2\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10663","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#10663)"},{"Id":"565901589","IsPullRequest":true,"CreatedAt":"2020-02-17T15:15:43","Actor":"dotnet-maestro[bot]","Number":"10658","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200216.1\r\n- **Date Produced**: 2/16/2020 2:07 PM\r\n- **Commit**: 2086e534f12e6116889ee480646ef54c1f781887\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20116.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20116.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10658","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10658)"},{"Id":"566344188","IsPullRequest":true,"CreatedAt":"2020-02-17T14:42:55","Actor":"pan93412","Number":"10664","RawContent":null,"Title":"xlf: zh-Hant: update translation","State":"open","Body":"Thanks to .NET Core development & localization team!","Url":"https://github.com/dotnet/sdk/pull/10664","RelatedDescription":"Open PR \"xlf: zh-Hant: update translation\" (#10664)"},{"Id":"566243489","IsPullRequest":false,"CreatedAt":"2020-02-17T12:50:27","Actor":"j0nimost","Number":"10661","RawContent":null,"Title":".NET CORE SDK 3.1.101 Error Publishing .Net Core Services on Version 3.0","State":"closed","Body":"Hello\r\n\r\nI am having trouble deploying a worker service, the assembly binding logger displays the following error;\r\n\r\n## Details about the problem\r\n\r\n```\r\n** Assembly Binder Log Entry  (2/14/2020 @ 1:41:17 PM) ***\r\n\r\nThe operation failed.\r\nBind result: hr = 0x80131018. No description available.\r\n\r\nAssembly manager loaded from:  C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\clr.dll\r\nRunning under executable  C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe\r\n--- A detailed error log follows. \r\n\r\n=== Pre-bind state information ===\r\nLOG: Where-ref bind. Location = C:\\Users\\JNyingi\\source\\repos\\SeSPWS\\SeSPWS\\bin\\Release\\netcoreapp3.0\\SeSPWS.exe\r\nLOG: Appbase = file:///C:/Windows/Microsoft.NET/Framework64/v4.0.30319/\r\nLOG: Initial PrivatePath = NULL\r\nLOG: Dynamic Base = NULL\r\nLOG: Cache Base = NULL\r\nLOG: AppName = InstallUtil.exe\r\nCalling assembly : (Unknown).\r\n===\r\nLOG: This bind starts in LoadFrom load context.\r\nWRN: Native image will not be probed in LoadFrom context. Native image will only be probed in default load context, like with Assembly.Load().\r\nLOG: Using application configuration file: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe.Config\r\nLOG: Using host configuration file: \r\nLOG: Using machine configuration file from C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\config\\machine.config.\r\nLOG: Attempting download of new URL file:///C:/Users/JNyingi/source/repos/SeSPWS/SeSPWS/bin/Release/netcoreapp3.0/SeSPWS.exe.\r\nLOG: Assembly download was successful. Attempting setup of file: C:\\Users\\JNyingi\\source\\repos\\SeSPWS\\SeSPWS\\bin\\Release\\netcoreapp3.0\\SeSPWS.exe\r\nLOG: Entering run-from-source setup phase.\r\nERR: Error extracting manifest import from file (hr = 0x80131018).\r\nERR: Run-from-source setup phase failed with hr = 0x80131018.\r\nERR: Failed to complete setup of assembly (hr = 0x80131018). Probing terminated.\r\n```\r\nAll services built with this version of SDK fail to deploy on the server regardless of `runtime` specifications. \r\n\r\nI have also noticed that building with  `RuntimeIdentifiers` specified I causing building errors with the `Microsoft.ASPNetCore.WebApi.Core` package where instances of `ControllerBase`, `ActionResult` only resolve to `Microsoft.ASPNetCore.Mvc.Core`. Nevertheless, When debugging the service runs without a hitch but the issue arises during deployment where the services never start.\r\n\r\nBelow is my generic `Program.cs`\r\n\r\n```\r\npublic class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var isService = !(Debugger.IsAttached || args.Contains(\"--console\"));\r\n            if (isService)\r\n            {\r\n                CreateWebHostBuilder(args).Build().RunAsService();\r\n            }\r\n            else\r\n            {\r\n                CreateWebHostBuilder(args).Build().Run();\r\n            }\r\n        }\r\n\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseContentRoot(Path.GetDirectoryName(Process.GetCurrentProcess().MainModule.FileName))\r\n                .UseStartup<Startup>()\r\n                .UseKestrel((context, serverOptions) =>\r\n                {\r\n                    serverOptions.ListenAnyIP(1042);\r\n                    serverOptions.Limits.KeepAliveTimeout = TimeSpan.FromMinutes(1.5);\r\n                });\r\n    }\r\n```\r\n\r\nBelow is my `csproj` where I have specified the `Runtime`\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Worker\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>\r\n    <UserSecretsId>dotnet-SeSPWS-00EEA7BA-8CD9-4E72-B073-FB0FB7B9192A</UserSecretsId>\r\n    <ApplicationIcon />\r\n    <OutputType>WinExe</OutputType>\r\n    <StartupObject />\r\n    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>\r\n    <Platforms>AnyCPU;x64</Platforms>\r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"AutoMapper\" Version=\"9.0.0\" />\r\n    <PackageReference Include=\"AutoMapper.Extensions.Microsoft.DependencyInjection\" Version=\"7.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNet.WebApi.Core\" Version=\"5.2.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.2.7\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting.WindowsServices\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"2.2.5\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Hosting\" Version=\"3.0.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Hosting.WindowsServices\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"System.ServiceModel.Duplex\" Version=\"4.4.*\" />\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.*\" />\r\n    <PackageReference Include=\"System.ServiceModel.NetTcp\" Version=\"4.4.*\" />\r\n    <PackageReference Include=\"System.ServiceModel.Security\" Version=\"4.4.*\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <WCFMetadata Include=\"Connected Services\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n## How to replicate\r\n- Install `.NET CORE SDK 3.1.101`\r\n- Make a new Worker Service Project\r\n- Specify to build using .Net 3.0\r\n- Apply the above `.csproj` and `Program.cs`: ignore the UserSecretsId\r\n- Debug - all good\r\n- Deploy the Release files in the server environment with [dotnet core runtime](https://download.visualstudio.microsoft.com/download/pr/fda71c5b-ee58-4919-95dc-4f32dbebd2cd/97ffe3880a25f5f7cae1a7e40cd3509e/dotnet-runtime-3.1.1-win-x64.exe)\r\n- Try Installing using `InstallUtil` from `Framework64` : It fails at this point","Url":"https://github.com/dotnet/sdk/issues/10661","RelatedDescription":"Closed issue \".NET CORE SDK 3.1.101 Error Publishing .Net Core Services on Version 3.0\" (#10661)"},{"Id":"566254198","IsPullRequest":false,"CreatedAt":"2020-02-17T12:03:35","Actor":"aik-jahoda","Number":"10662","RawContent":null,"Title":"Microsoft.NET.Sdk reference Microsoft.AspNetCore.App.Runtime package when <RuntimeFrameworkVersion> is set.","State":"open","Body":"There is an issue in `Microsoft.NET.Sdk` project when specifying the framework version in csproj with `<RuntimeFrameworkVersion>` and set `<OutputType>` to Exe. The `Microsoft.AspNetCore.App.Runtime` package is referenced in this case. \r\n\r\n**Expected behavior:**\r\nThe Microsoft.AspNetCore.App.Runtime package is not referenced for Microsoft.NET.Sdk project.\r\n\r\n**Actual Behaviour:**\r\n```\r\n/Users/janjahoda/workspace/ProjRepro/Core/Core.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.App.Runtime.osx-x64 with version (= 5.0.0-preview.1.20112.12)\r\n/Users/janjahoda/workspace/ProjRepro/Core/Core.csproj : error NU1102:   - Found 14 version(s) in nuget.org [ Nearest version: 3.1.1 ]\r\n```\r\n\r\n**Steps to reproduce:**\r\n \r\n\r\n1.  Install SDK version 5.0.100-preview.1.20114.2\r\n2. Create new Microsoft.NET.Sdk project\r\n3. Specify add to csproj `<RuntimeFrameworkVersion>5.0.100-preview.1.20114.2 </RuntimeFrameworkVersion>`\r\n4. Ensure there is in csproj  `<OutputType>Exe</OutputType>`\r\n5. Publish: dotnet publish /p:RestoreNoCache=true -r osx-x64\r\n\r\nAttached is a project which setup local dotnet and use this local installation for publishing. \r\n\r\n[ProjRepro.zip](https://github.com/dotnet/sdk/files/4213503/ProjRepro.zip)\r\n","Url":"https://github.com/dotnet/sdk/issues/10662","RelatedDescription":"Open issue \"Microsoft.NET.Sdk reference Microsoft.AspNetCore.App.Runtime package when <RuntimeFrameworkVersion> is set.\" (#10662)"},{"Id":"565747205","IsPullRequest":true,"CreatedAt":"2020-02-16T16:26:10","Actor":"dotnet-maestro[bot]","Number":"10656","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200215.9\r\n- **Date Produced**: 2/16/2020 9:02 AM\r\n- **Commit**: 24967d0491595e7ab069acbf3e52110462202ac8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20115.9\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10656","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#10656)"},{"Id":"565930777","IsPullRequest":false,"CreatedAt":"2020-02-16T16:25:04","Actor":"saigkill","Number":"10660","RawContent":null,"Title":"NETSDK1045 Can't build 3.1 applications in VS2019 16.4.5","State":"open","Body":"Hello,\r\nCurrently i'm trying to upgrade my webapp to .NET Core 3.1.\r\nSadly i'm running into this error:\r\n\r\n> Schweregrad\tCode\tBeschreibung\tProjekt\tDatei\tZeile\tUnterdrückungszustand\r\n> Fehler\tNETSDK1045\tDas aktuelle .NET SDK unterstützt .NET Core 3.1 nicht als Ziel. Geben Sie entweder .NET Core 2.2 oder niedriger als Ziel an, oder verwenden Sie eine .NET SDK-Version, die .NET Core 3.1 unterstützt.\tMannsBlog.Data\tC:\\Program Files\\dotnet\\sdk\\2.2.203\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\t137\t\r\n\r\nIn english it is \"The current .NET SDK does not support .NET Core 3.1 as a target. Specify either .NET Core 2.2 or lower as the target, or use a .NET SDK version that supports .NET Core 3.1.\"\r\n\r\nMy Info from cli:\r\n\r\n> PS C:\\Users\\Sasch\\OneDrive\\source\\repos\\saschamannsde> dotnet --info\r\n> .NET Core SDK (gemäß \"global.json\"):\r\n>  Version:   3.1.101\r\n>  Commit:    b377529961\r\n> \r\n> Laufzeitumgebung:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18363\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.101\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.1.1\r\n>   Commit:  a1388f194c\r\n> \r\n> .NET Core SDKs installed:\r\n>   2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n>   2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.0.102 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n>   Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 3.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 3.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n>   Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nI'm using the latest Visual Studio 2019 16.4.5 and i don't have any global.json inside my project or my Source directory,\r\n\r\nMaybe anyone has a suggestion?","Url":"https://github.com/dotnet/sdk/issues/10660","RelatedDescription":"Open issue \"NETSDK1045 Can't build 3.1 applications in VS2019 16.4.5\" (#10660)"},{"Id":"565910029","IsPullRequest":true,"CreatedAt":"2020-02-16T14:00:16","Actor":"StefanBertels","Number":"10659","RawContent":null,"Title":"allow publish solutions with non-publishable multi-target projects","State":"open","Body":"Taken you have have a solution with two projects:\r\n\r\n1. class library, multiple target frameworks (e.g. `netstandard2.1;net461`)\r\n2. console application, one target framework (e.g. `netcoreapp3.1`)\r\n\r\nCurrently we cannot run \"dotnet publish\" on solution level because of the error in `Microsoft.NET.Sdk.CrossTargeting.targets`.\r\nThis is true, even if the class library is marked as `<IsPublishable>false</IsPublishable>`.\r\n\r\nCurrently you have call publish just for console project (2). This isn't simple in more generic scenarios or in larger solutions with multiple projects having different target opt-in/opt-out settings defined only by project properties (like `IsPublishable`, `IsPackable`, `IsTestProject`, `RuntimeIdentifier` etc.)\r\n\r\nThere is no need to throw a \"cannot publish error\" message for projects not to be published at all. This change should fix this.\r\n\r\nSee https://github.com/dotnet/sdk/issues/1059#issuecomment-574744801","Url":"https://github.com/dotnet/sdk/pull/10659","RelatedDescription":"Open PR \"allow publish solutions with non-publishable multi-target projects\" (#10659)"},{"Id":"565894835","IsPullRequest":false,"CreatedAt":"2020-02-16T12:08:07","Actor":"JamesHough","Number":"10657","RawContent":null,"Title":"NullReferenceException when you have a breakpoint and drag context into where it wouldn't go at run time","State":"open","Body":"### Describe the bug\r\nThis is specific to debugging only. It doesn't happen at run time.  I don't know if this is a Core SDK issue or a Visual Studio issue. It could also be the AspNet Core hosting environment though, but I'm not sure because it only happens during debugging.\r\n\r\nIn the reproduction section below is a demo repo with minimal steps to recreate.  This below is the code in question.\r\n```\r\n29.        public void ConfigureServices(IServiceCollection services)\r\n30.        {\r\n31.            if (!this.Environment.IsDevelopment())\r\n32.            {\r\n33.                var someValue = Array.Empty<string>();\r\n34.\r\n35.                services.AddCors(\r\n36.                    builder => builder.AddPolicy(\r\n37.                        \"cors\",\r\n38.                        policy => policy\r\n39.                            .AllowAnyHeader()\r\n40.                            .WithMethods(\"GET\", \"POST\", \"PUT\", \"OPTIONS\")\r\n41.                            .WithOrigins(someValue)\r\n42.                            .Build()));\r\n43.            }\r\n44.\r\n45.            services.AddControllers();\r\n46.        }\r\n```\r\n\r\n### Details of the thrown Exception\r\nThis happens **before** line 35. It is not thrown after executing line 35.\r\n\r\n```\r\nSystem.NullReferenceException: 'Object reference not set to an instance of an object.'\r\n \r\nThis exception was originally thrown at this call stack:\r\n    AllowOriginsException.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection) in Startup.cs\r\n\tSystem.Reflection.RuntimeMethodInfo.Invoke(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)\r\n\tMicrosoft.AspNetCore.Hosting.ConfigureServicesBuilder.InvokeCore(object, Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.AspNetCore.Hosting.ConfigureServicesBuilder.Invoke.__Startup|0(Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.AspNetCore.Hosting.ConfigureServicesBuilder.Invoke(object, Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.AspNetCore.Hosting.ConfigureServicesBuilder.Build.AnonymousMethod__0(Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(System.Type, Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup.AnonymousMethod__0(Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection)\r\n\tMicrosoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\r\n```\r\n\r\n### To Reproduce\r\nRepo: https://github.com/JamesHough/AspNetCoreConfigureServicesException.git\r\n\r\n#### Steps to cause the exception\r\n1. `git checkout null-ref-exception`\r\n2. Open the project in VS 2019, and put a breakpoint in Startup.cs on line 31 `if (!this.Environment.IsDevelopment())`\r\n3. Debug the project and when the breakpoint is hit, then drag the yellow arrow _into_ the if statement (without dragging it would not enter this \"if\").\r\n4. Exception (as described above) is thrown.\r\n\r\n#### Steps to prevent the exception\r\nA setup that does _not_ cause the same issue is if you don't use the `someValue` variable and instead define the value in line in the CORS Policy builder.  I know this is a stupid empty array example but it does the same with or without values in the array.\r\n\r\n1. Stop debugging\r\n2. `git checkout no-null-ref-exception`\r\n3. Make sure breakpoint is still on line 31.\r\n4. Debug the project and when the breakpoint is hit, then drag the yellow arrow _into_ the if statement.\r\n5. No exception is thrown.\r\n\r\n_Note:_ You can also set your debug environment to have `ASPNETCORE_ENVIRONMENT` = \"Production\" which will enter the if statement without the need to drag the debug execution context.\r\n\r\n### Further technical details\r\n**Operating System:** Microsoft Windows 10.0.18363\r\n**Dotnet Core SDK version:** 3.1.101\r\n**Runtime environment:** Microsoft.AspNetCore.Hosting version 3.1.1-servicing.19615.10\r\n**The IDE:** Microsoft Visual Studio Community 2019 Version 16.4.5\r\n\r\n### Non-critical\r\nThis is not a critical issue.  The work-around for me is to use `ASPNETCORE_ENVIRONMENT` variable as either \"Development\" or \"Production\" when debugging to get the condition that I want to test.  The error only happens when I drag the current context into the \"if\" statement.  However, I spent a few hours rewriting code thinking that the NullReferenceException came from my code.\r\n","Url":"https://github.com/dotnet/sdk/issues/10657","RelatedDescription":"Open issue \"NullReferenceException when you have a breakpoint and drag context into where it wouldn't go at run time\" (#10657)"},{"Id":"565745159","IsPullRequest":true,"CreatedAt":"2020-02-15T16:12:05","Actor":"dotnet-maestro[bot]","Number":"10655","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10655","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10655)"},{"Id":"565703376","IsPullRequest":false,"CreatedAt":"2020-02-15T06:03:46","Actor":"Tzadiko","Number":"10654","RawContent":null,"Title":"Dotnet Build Hangs When Building from Cloned Reepo","State":"open","Body":"**Issue**\r\n\r\nI downloaded the dotnet-sdk on Linux via `snap install dotnet-sdk`. After I clone my Repo into my virtual machine to run my [app](https://github.com/Tzadiko/Princess-DiscordBot), I run `dotnet build`.\r\n\r\nFor some reason, the application hangs.\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582766-08371780-4f8e-11ea-839d-071d2e3ae183.png)\r\n \r\n**Environment**\r\n\r\n1 GB Memory / 25 GB Disk / NYC3 - Ubuntu 18.04.3 (LTS) x64\r\n\r\n**Dotnet Info**\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582826-b9d64880-4f8e-11ea-8642-bc70b1247fc8.png)\r\n\r\n**Steps to Reproduce**\r\n\r\n1. Clone the following [repo](https://github.com/Tzadiko/Princess-DiscordBot).\r\n2. Run `dotnet build` in the `src` folder\r\n\r\nOn my desktop, this app builds just fine. I'm not sure what else I can include here to help one replicate this issue. ","Url":"https://github.com/dotnet/sdk/issues/10654","RelatedDescription":"Open issue \"Dotnet Build Hangs When Building from Cloned Reepo\" (#10654)"},{"Id":"565532955","IsPullRequest":false,"CreatedAt":"2020-02-14T20:09:45","Actor":"RehanSaeed","Number":"10650","RawContent":null,"Title":"dotnet-install.sh Fails When global.json Contains rollForward=latestMajor","State":"open","Body":"When I add the `rollForward` property to my `global.json` file like so:\r\n\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"3.1.100\",\r\n    \"rollForward\": \"latestMajor\"\r\n  }\r\n}\r\n```\r\n\r\nMy MacOS build fails with the following error:\r\n\r\n```\r\ndotnet-install:(B Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-osx-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-osx-x64.tar.gz\r\ndotnet-install:(B Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-osx-x64.3.1.100rollForward:latestMajor.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-osx-x64.3.1.100rollForward:latestMajor.tar.gz\r\ndotnet_install: Error: Could not find/download: `.NET Core SDK` with version = 3.1.100rollForward:latestMajor(B\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support(B\r\nCommand exited with code 1\r\n```\r\n\r\nMy Ubuntu 18.04 build fails with the following error:\r\n\r\n```\r\ndotnet_install: Warning: Unable to locate zlib. Probable prerequisite missing; install zlib.(B\r\ndotnet-install:(B Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-linux-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-linux-x64.tar.gz\r\ndotnet-install:(B Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-ubuntu.18.04-x64.3.1.100rollForward:latestMajor.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-ubuntu.18.04-x64.3.1.100rollForward:latestMajor.tar.gz\r\ndotnet_install: Error: Could not find/download: `.NET Core SDK` with version = 3.1.100rollForward:latestMajor(B\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support(B\r\nCommand exited with code 1\r\n```\r\n\r\nYou can find my AppVeyor build [here](https://ci.appveyor.com/project/RehanSaeed/schema-net/builds/30809226) and GitHub PR [here](https://github.com/RehanSaeed/Schema.NET/pull/138). My full PowerShell Core script:\r\n\r\n```powershell\r\nif ($isLinux) {\r\n  sudo apt update\r\n  sudo apt install -y zlib1g apt-transport-https\r\n} else {\r\n  brew update\r\n  brew install mono\r\n  brew install mono-libgdiplus\r\n  $env:TERM = 'xterm'\r\n}\r\n\r\nInvoke-WebRequest \"https://dot.net/v1/dotnet-install.sh\" -OutFile \"./dotnet-install.sh\";\r\nchmod u+x dotnet-install.sh\r\n./dotnet-install.sh --jsonfile global.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/10650","RelatedDescription":"Open issue \"dotnet-install.sh Fails When global.json Contains rollForward=latestMajor\" (#10650)"},{"Id":"565027927","IsPullRequest":true,"CreatedAt":"2020-02-14T19:10:59","Actor":"dotnet-maestro[bot]","Number":"10646","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10646","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#10646)"},{"Id":"565502133","IsPullRequest":false,"CreatedAt":"2020-02-14T19:06:32","Actor":"michaelveloz","Number":"10649","RawContent":null,"Title":"dotnet run looping inifitely","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/10649","RelatedDescription":"Closed issue \"dotnet run looping inifitely\" (#10649)"},{"Id":"565033675","IsPullRequest":true,"CreatedAt":"2020-02-14T16:53:15","Actor":"dsplaisted","Number":"10647","RawContent":null,"Title":"Update branding to 3.1.103","State":"closed","Body":"@mmitche @nguerrera ","Url":"https://github.com/dotnet/sdk/pull/10647","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.103\" (#10647)"},{"Id":"565352043","IsPullRequest":false,"CreatedAt":"2020-02-14T14:14:08","Actor":"mthalman","Number":"10648","RawContent":null,"Title":"Support RUN command to avoid ambiguous error","State":"open","Body":"In environments where only the runtime is installed, the command to run an application is `dotnet <application-path-dll>`.  If the user gets that path wrong, they end up with this unhelpful error message:\r\n\r\n```\r\nIt was not possible to find any installed .NET Core SDKs\r\nDid you mean to run .NET Core SDK commands? Install a .NET Core SDK from:\r\n    https://aka.ms/dotnet-download\r\n```\r\n\r\nThis error does not indicate at all what the problem is.  Even worse, it leads the user down the wrong path, thinking there's a problem in their host environment.\r\n\r\nWe've seen this confusion show up frequently in the Docker space when people are authoring their Dockerfiles that use this `dotnet <application-path-dll>` command.  If they misspell the filename or mess up the folder path, they run into this error.  Here is just one recent example: https://stackoverflow.com/questions/60189222/failes-to-start-docker-container-with-dotnet-3-1.\r\n\r\nMy suggestion is to support an explicit `RUN` command that resolves any ambiguity as to what the meaning of the subsequent text is: it is the path to the file.  If the path is not found, then a much better error message can be provided.\r\n\r\nIn the case of Docker, this would allow us to provide sample Dockerfiles that make use of this command, leading the user to a better experience when they get the path wrong.\r\n\r\nSo we could use this:\r\n```Dockerfile\r\nENTRYPOINT [\"dotnet\", \"run\", \"dotnetapp.dll\"]\r\n```\r\nInstead of this:\r\n```Dockerfile\r\nENTRYPOINT [\"dotnet\", \"dotnetapp.dll\"]\r\n```","Url":"https://github.com/dotnet/sdk/issues/10648","RelatedDescription":"Open issue \"Support RUN command to avoid ambiguous error\" (#10648)"},{"Id":"565023261","IsPullRequest":true,"CreatedAt":"2020-02-14T01:37:09","Actor":"dotnet-maestro[bot]","Number":"10645","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: fdee9669-2308-4505-9018-08d76d41c6c3\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10645","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#10645)"},{"Id":"565015798","IsPullRequest":false,"CreatedAt":"2020-02-13T23:43:27","Actor":"wli3","Number":"10644","RawContent":null,"Title":"help for local tools cannot lead to a successful path","State":"open","Body":"If I heard `dotnet tool install -g my.test.tool` command before. I discovered `--local` option by just running `dotnet tool install my.test.tool`\r\n\r\nhowever, if I type `dotnet tool install my.test.tool` I will hit the error\r\n\r\n```\r\nλ dotnet tool install my.test.tool\r\nCannot find a manifest file.\r\nFor a list of locations searched, specify the \"-d\" option before the tool name.\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest`, usually in the repo root directory.\r\n```\r\n\r\n-d is the first option. I append -d to the end naturally. It will hit\r\n\r\n```\r\nλ dotnet tool install my.test.tool -d\r\nUnrecognized command or argument '-d'\r\nUsage: dotnet tool install [options] <PACKAGE_ID>\r\n```\r\n\r\nThis should be a [bug](https://github.com/dotnet/sdk/issues/10643).\r\n\r\nAnd then it is not clear what is \"a manifest\". And why a \"manifest\" is required. So I won't end up typing `dotnet new tool-manifest`, which is the right command going forward.","Url":"https://github.com/dotnet/sdk/issues/10644","RelatedDescription":"Open issue \"help for local tools cannot lead to a successful path\" (#10644)"},{"Id":"565702948","IsPullRequest":false,"CreatedAt":"2020-02-13T09:33:21","Actor":"trondhindenes","Number":"10653","RawContent":null,"Title":"dotnet new --help is incorrect","State":"open","Body":"# Issue Title\r\ndotnet new --help is incorrect\r\n\r\n# General\r\nwhen running `dotnet new --help`, this is printed:\r\n`Usage: new [options]`.   \r\nHowever, the actual template name isnt an option according to the options list, so the correct help string would be:   \r\n`Usage: new [options] <template>`\r\n","Url":"https://github.com/dotnet/sdk/issues/10653","RelatedDescription":"Open issue \"dotnet new --help is incorrect\" (#10653)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n* [February 2020 Updates – 2.1.16, 3.0.3, and 3.1.2](https://devblogs.microsoft.com/dotnet/net-core-february-2020/)\r\n\r\n * .NET Core 3.1.2 and .NET Core SDK 3.1.102( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n * .NET Core 3.0.3 and .NET Core SDK 3.0.103 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.3/3.0.3.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n * .NET Core 2.1.16 and .NET Core SDK 2.1.804 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.16/2.1.16.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1229876743412031490","CreatedAt":"2020-02-18T21:14:00+00:00","UserScreenname":"dotnet","Text":"If you've got 3 minutes, We'd 💛 to hear about your experiences using the @Azure SDK for #dotNET! Take the ❔ survey… https://t.co/ze3H9r2gIS","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null},{"Id":"1229800245539803144","CreatedAt":"2020-02-18T16:10:01+00:00","UserScreenname":"dotnet","Text":"We've got new features in Experimental Mobile #Blazor Bindings...\n👍 BoxView, CheckBox, ImageButton, ProgressBar, &amp;… https://t.co/oMhro5c6Rj","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1229516630541176834","CreatedAt":"2020-02-17T21:23:02+00:00","UserScreenname":"dotnet","Text":"Join us March 23rd for a day of live stream sessions on building native mobile apps w/ Xamarin technology!… https://t.co/hUoIpOmvHK","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1229437857187717120","CreatedAt":"2020-02-17T16:10:01+00:00","UserScreenname":"dotnet","Text":"📣 .NET Interactive is now available in #dotNET Notebooks Preview 2 📣\nhttps://t.co/WJ52IiZwst\nNow with:\n✔️ New Name… https://t.co/vs5leMzKEP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":97,"FavoriteCount":30,"RawContent":null},{"Id":"1228429715607826434","CreatedAt":"2020-02-14T21:24:01+00:00","UserScreenname":"dotnet","Text":"Hey @ASPNET devs! Did you know that #ASPNET Core now enables developers to build gRPC services? Yeap. Now you can u… https://t.co/YO2phsGDg4","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":137,"FavoriteCount":52,"RawContent":null},{"Id":"1228351952477704193","CreatedAt":"2020-02-14T16:15:01+00:00","UserScreenname":"dotnet","Text":"18 years ago today, on stage at the @VisualStudio launch event, @BillGates introduced .NET wrapped with ❤️ 💕 💗 ❣️ .… https://t.co/sJ2IpGnUQi","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":1505,"FavoriteCount":528,"RawContent":null},{"Id":"1228070601430110209","CreatedAt":"2020-02-13T21:37:02+00:00","UserScreenname":"dotnet","Text":"What if you could write better code? #dotNETRocks talks to @simmdan and @gustavoas about Program Synthesis Using Ex… https://t.co/37WhkGXq1h","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":17,"FavoriteCount":4,"RawContent":null},{"Id":"1227988300276936705","CreatedAt":"2020-02-13T16:10:00+00:00","UserScreenname":"dotnet","Text":"All you need is 3:05 for #OnDotNET to teach you more about F# support in #Pulumi. Watch here: https://t.co/d780sXbuKv","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"1227927398428991488","CreatedAt":"2020-02-13T12:08:00+00:00","UserScreenname":"dotnet","Text":"Learn about...\n\nLesser known features of the Cosmos DB SDK for .NET w/ @Ealsur &amp; @jeremylikness 💻… https://t.co/MJQFilLL0s","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":6,"RawContent":null},{"Id":"1227699654910980097","CreatedAt":"2020-02-12T21:03:01+00:00","UserScreenname":"dotnet","Text":".@ASPNET Core dev on #macOS? On the #ASPNET Community Standup with Sayed Ibrahim Hashimi tackled that topic and mor… https://t.co/aKAySINTY7","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"1227631197334974465","CreatedAt":"2020-02-12T16:31:00+00:00","UserScreenname":"dotnet","Text":"ICYMI, we announced experimental support for gRPC-Web with .NET. gRPC-Web that allows gRPC to be called from browse… https://t.co/6SmmAVnVYO","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":118,"FavoriteCount":49,"RawContent":null}]}},"RunOn":"2020-02-19T05:30:37.4616951Z","RunDurationInMilliseconds":15267}