{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11700931136","Type":"PullRequestEvent","CreatedAt":"2020-03-06T18:33:59","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7862","RelatedDescription":"Merged pull request \"Expose domain and diagnostics source in MEF container\" (#7862) at NuGet/NuGetGallery","RelatedBody":"This enables synchronous initialization (via the constructor) of the cookie compliance shim.\r\nAlso, move the refresh to the background so that initial start-up is not slowed down.\r\n\r\nFully lights up with https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGet.Shims/pullrequest/1342.\r\nRelated to https://github.com/NuGet/Engineering/issues/2980."},{"Id":"11692220922","Type":"PullRequestEvent","CreatedAt":"2020-03-05T21:20:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7859","RelatedDescription":"Merged pull request \"Reject broken ZIPs on API push with better message\" (#7859) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/Engineering/issues/3046\r\n\r\nThis was a little tricky to repro locally, when reading a ZIP of disk because the behavior of `FileStream` and `HttpInputStream` (the stream from an ASP.NET file upload) is different. `FileStream` does not throw when you seek out of bounds. It only throws when you read. `HttpInputStream` throws when you seek out of bounds, thus the `ArgumentOutOfRangeException` we see on server side."},{"Id":"11691774471","Type":"PullRequestEvent","CreatedAt":"2020-03-05T20:24:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7862","RelatedDescription":"Opened pull request \"Expose domain and diagnostics source in MEF container\" (#7862) at NuGet/NuGetGallery","RelatedBody":"This enables synchronous initialization (via the constructor) of the cookie compliance shim.\r\nAlso, move the refresh to the background so that initial start-up is not slowed down.\r\n\r\nFully lights up with https://nuget.visualstudio.com/NuGetMicrosoft/_git/NuGet.Shims/pullrequest/1342.\r\nRelated to https://github.com/NuGet/Engineering/issues/2980."},{"Id":"11690319737","Type":"IssuesEvent","CreatedAt":"2020-03-05T17:32:05","Actor":"jslootweg","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7861","RelatedDescription":"Closed issue \"Download count isn't updated when self-hosting in IIS\" (#7861) at NuGet/NuGetGallery","RelatedBody":"I have configured a instance of NuGet Gallery running under IIS using SQL Server as the database.  The download count doesn't appear to updating regardless of whether the download is via NuGet Install-Package or through the package download link on the website."},{"Id":"11689277263","Type":"IssuesEvent","CreatedAt":"2020-03-05T15:49:24","Actor":"jslootweg","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7861","RelatedDescription":"Opened issue \"Download count isn't updated when self-hosting in IIS\" (#7861) at NuGet/NuGetGallery","RelatedBody":"I have configured a instance of NuGet Gallery running under IIS using SQL Server as the database.  The download count doesn't appear to updating regardless of whether the download is via NuGet Install-Package or through the package download link on the website."},{"Id":"11684271215","Type":"PullRequestEvent","CreatedAt":"2020-03-05T06:17:16","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7860","RelatedDescription":"Merged pull request \"[ECR] Update the server common dependencies to 2.69.0\" (#7860) at NuGet/NuGetGallery","RelatedBody":"Update the server common dependencies to 2.69.0.\r\nIntroduce the logs around the catching control of secret reader."},{"Id":"11682791443","Type":"PullRequestEvent","CreatedAt":"2020-03-05T01:16:06","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7860","RelatedDescription":"Opened pull request \"[ECR] Update the server common dependencies to 2.69.0\" (#7860) at NuGet/NuGetGallery","RelatedBody":"Update the server common dependencies to 2.69.0.\r\nIntroduce the logs around the catching control of secret reader."},{"Id":"11682648625","Type":"PullRequestEvent","CreatedAt":"2020-03-05T00:48:09","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7859","RelatedDescription":"Opened pull request \"Reject broken ZIPs on API push with better message\" (#7859) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/Engineering/issues/3046"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11703440893","Type":"IssuesEvent","CreatedAt":"2020-03-07T02:04:59","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9165","RelatedDescription":"Closed issue \"NuGet: \"The path is not of a legal form\" while installing packages in an Android solution\" (#9165) at NuGet/Home","RelatedBody":"Investigate \r\nhttps://dev.azure.com/devdiv/DevDiv/_workitems/edit/983409\r\n\r\nThe above one is closed, having an identical active ticket as following:\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1063192\r\n"},{"Id":"11703105753","Type":"IssuesEvent","CreatedAt":"2020-03-07T00:19:56","Actor":"thomb1","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9275","RelatedDescription":"Opened issue \"Restore NuGet Packages option not always visible\" (#9275) at NuGet/Home","RelatedBody":"After updating Visual Studio 2019, the Restore NuGet Packages menu in the Solution explorer can mysteriously go away. I remember reading something describing how to get that option back, but I don't remember where. That information should be added to this page. \n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: a3b20c46-c5f1-3a2a-738d-8aa8e69cf10c\n* Version Independent ID: 7055e752-859b-6106-6802-70010d0305d9\n* Content: [NuGet Package Restore](https://docs.microsoft.com/en-us/nuget/consume-packages/package-restore)\n* Content Source: [docs/consume-packages/Package-Restore.md](https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/consume-packages/Package-Restore.md)\n* Product: **nuget**\n* GitHub Login: @karann-msft\n* Microsoft Alias: **karann**"},{"Id":"11703094510","Type":"IssuesEvent","CreatedAt":"2020-03-07T00:16:57","Actor":"Braineeee","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9274","RelatedDescription":"Opened issue \"\"Upgade Nuget Version\" on RMB menu breaks selected project!\" (#9274) at NuGet/Home","RelatedBody":"![UpgadeNuget](https://user-images.githubusercontent.com/15795591/75854401-f8e50600-5da4-11ea-9783-500a0331b990.PNG)\r\n\r\nSteps to reproduce:\r\n\r\n1. Select project in Solution Explorer withh LMB.\r\n2. RMB click on it.\r\n3. Scroll down the menu that appears to the option \"Upgade Nuget Version\" and take it.\r\n5. Message box appears. Project broken.\r\n\r\n\r\nThis mesage box appears after RMB clicking on the project name and selecting the menu option \"Upgade Nuget Version\" (this is verbatim for the menu).\r\n\r\nThis forcibly breaks the project. I don't know what to do about this..."},{"Id":"11702862286","Type":"IssuesEvent","CreatedAt":"2020-03-06T23:21:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9255","RelatedDescription":"Closed issue \"NuGet.Versioning NuGetVersion.TryParseStrict() always returns true\" (#9255) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIt seems that NuGetVersion.TryParseStrict() doesn't actually ever return false, which isn't ideal for a \"Try\" method. The implementation actually does check if it can parse to a SemanticVersion, but always returns true anyways...\r\nhttps://github.com/NuGet/NuGet.Client/blob/bf9523d7b66f749f8709c8f082944db6a60f9153/src/NuGet.Core/NuGet.Versioning/NuGetVersionFactory.cs#L105-L115\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet.Versioning v5.4.0\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nvar isValid1 = NuGetVersion.TryParseStrict(\"NotAVersion\", out var parsed1);\r\n// isValid1 == true, parsed == null\r\n\r\nvar isValid2 = NuGetVersion.TryParseStrict(\"\", out var parsed2);\r\n// isValid2 == true, parsed == null\r\n\r\nvar isValid3 = NuGetVersion.TryParseStrict(\"1.0.0\", out var parsed3);\r\n// isValid2 == true, parsed != null\r\n\r\n\r\n"},{"Id":"11702752135","Type":"IssuesEvent","CreatedAt":"2020-03-06T22:58:57","Actor":"lovettchris","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9273","RelatedDescription":"Opened issue \"Need nuget package priority for local debugging/testing\" (#9273) at NuGet/Home","RelatedBody":"## Cannot predictably get local debug bits using Nuget.config\r\n\r\nThe current spec says when there are multiple sources in your Nuget.config \"the fastest one wins\".  This results in unpredictable development experience.  For example, I'm developing a new nuget package, and I have a bunch of tests to test it.  But if my test projects want to reference my new local bits I tried this:\r\n```\r\n    <add key=\"Coyote\" value=\"../Coyote/bin\"/>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n```\r\n\r\nbut it doesn't work.  It sill picks up the version on nuget.org, even if I nuke all local \"packages\" caches.\r\n\r\nSo what I really need is a way to tell Nuget to just for now, please really use the local bits if you can, thanks.  If this is by priority great, but perhaps you could be even smarter and do it based on file timestamps.\r\n\r\nNuGet version; 5.4.0.6315\r\n\r\ndotnet.exe --version: 3.1.101\r\n\r\nVS version: 2019\r\n\r\nOS version: win10 1903 (18362.657)\r\n"},{"Id":"11702518440","Type":"IssuesEvent","CreatedAt":"2020-03-06T22:17:14","Actor":"KinsonDigital","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9272","RelatedDescription":"Opened issue \"Creating package with x86 and x64 managed and native libraries into single package\" (#9272) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nHere is my current setup.  I am creating a game engine in **C**# that uses **SDL**.  There is a popular **C**# wrapper library that **P/Invokes** into \r\nthe native **SDL2** libraries for the purpose of creating games.  These native libraries have **x86** and **x64** architecture versions of them and \r\nI need to to take advantage of both which means my game engine has only **x86** and **x64** architectures.\r\n\r\nWhat I am trying to do is create a nuget package that contains multiple architectures of not only the native libraries but of my **C**# game\r\nengine library as well.  I have already learned that I can get the native libraries properly put into the package using the **csproj** file\r\nXML content that is similar to the what you see below.\r\n\r\n```\r\n<Target Name=\"Add-x64-SDL-Libs\" Condition=\"$(ConfigurationName) == 'Debug'\" AfterTargets=\"Build\">\r\n\t<ItemGroup>\r\n\t\t<Content Include=\"$(ProjectDir)SDL\\x86\\SDL-x86.dll\" Pack=\"true\" PackagePath=\"\\runtimes\\win10-86\\native\" />\r\n\t\t<Content Include=\"$(ProjectDir)SDL\\x64\\SDL-x64.dll\" Pack=\"true\" PackagePath=\"\\runtimes\\win10-64\\native\" />\r\n\t</ItemGroup>\r\n</Target>\r\n```\r\n\r\nThis will of course put both the **x86** and **x64** version of the SDL libraries into the package.\r\n\r\nThe issue I am having is how do I get both architecture versions of my library into the package as well?  My thinking is that the consumer of the package\r\ncould use my package and either choose **x86** or **x64** and **Visual Studio** would just use the proper architecture for the libraries based on the architecture of their project. Is this even feasible?\r\n\r\nI thought that maybe I could do 2 separate packages.  One for **x86** and one for **x64**, but that does not seem like the right way to do it and I know there are packages out there that have it all in one. One good example is the **[System.Data.SQLite.Core](https://www.nuget.org/packages/System.Data.SQLite.Core/#show-github-usage)** nuget package which supports many different platforms and architectures.\r\n\r\nI dug into the package and seen that they make use of a build directory which I know are additional instructions for **MSBuild** to use during the build process.  I tried finding documentation on this but I cannot find barely any information on the **microsoft docs** site or anywhere else on the format and use of the **.targets** files.\r\n\r\nI also do not want to take a path that will eventually be getting deprecated or that is not the recommended way of doing it.  An example of this is using **.nuspec** files.  I read that using them is not the preferred way of doing this anymore and that it is only used inside of the package, not part of your project.\r\n\r\nAgain my end goal is to just simply release multiple architectures of my native AND managed libraries in one package and anybody could just consume it, point to the right architecture and then it works.\r\n\r\nI have been struggling with this issue for about 2 weeks and even though I have learned a lot, I am coming up to a dead end. Any help is greatly appreciated.\r\n\r\n---\r\n\r\n**NuGet Product Used:** VS UI\r\n\r\n**VS Version:** 16.4.5\r\n\r\n**OS Version:** win10 - v1709.16299.1625"},{"Id":"11701801811","Type":"IssuesEvent","CreatedAt":"2020-03-06T20:30:50","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9271","RelatedDescription":"Opened issue \"Ensure NuGet errors/warnings are propagated to the error list in VSO\" (#9271) at NuGet/Home","RelatedBody":"This is likely a partner issue, but should investigate"},{"Id":"11701790541","Type":"IssuesEvent","CreatedAt":"2020-03-06T20:29:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9270","RelatedDescription":"Opened issue \"NuGet output should go to the build output when the scenario is on build \" (#9270) at NuGet/Home","RelatedBody":""},{"Id":"11701777356","Type":"IssuesEvent","CreatedAt":"2020-03-06T20:27:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9269","RelatedDescription":"Opened issue \"Use the output channel service to propagate NuGet output for VSO. \" (#9269) at NuGet/Home","RelatedBody":""},{"Id":"11701763220","Type":"IssuesEvent","CreatedAt":"2020-03-06T20:25:27","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9268","RelatedDescription":"Opened issue \"Make IOutputConsole async\" (#9268) at NuGet/Home","RelatedBody":"IOutputConsole is currently sync. The reason for that is that it was original designed when PMC was the primary Visual Studio scenario & async code was not as common.\r\n\r\nMany of our codepaths currently invoking the output console are async and with https://github.com/nuget/home/issues/8673 that's becoming even more important. \r\n\r\nRefactor IOutputConsole to contain only sync methods. "},{"Id":"11700949991","Type":"IssuesEvent","CreatedAt":"2020-03-06T18:36:32","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9267","RelatedDescription":"Opened issue \"Ensure Static Graph restore is available in dotnet.exe\" (#9267) at NuGet/Home","RelatedBody":"This basically means ingesting https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks.Console/NuGet.Build.Tasks.Console.csproj into the SDK. \r\n\r\nWe should discuss with the .NET Core team what branches they want the changes in. \r\n\r\nfyi @jeffkl \r\n"},{"Id":"11700906134","Type":"IssuesEvent","CreatedAt":"2020-03-06T18:30:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9266","RelatedDescription":"Closed issue \"nuget.exe pack for SDK multi targeting projects fails.\" (#9266) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe \r\n\r\nNuGet version: 5.4.0\r\n\r\nOS version: win10 \r\n\r\nWorked before? No sure\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download and unzip the attached project\r\n\r\n2. Run: nuget.exe restore TestConsoleApp2.csproj\r\n\r\n3. Run: nuget.exe pack TestConsoleApp2.csproj -Build\r\n\r\nResult: \r\nCould not find a part of the path '***\\TestConsoleApp2\\bin\\Debug\\TestConsoleApp2\\bin\\Debug'.\r\n\r\n## Other suggested things\r\n### Observation\r\n1. If the project does not use the TargetFrameworks but TargetFramework everything works fine.\r\n2. In case that TargetFrameworks is used the project created does not have a TargetPath (https://github.com/NuGet/NuGet.Client/blob/5433d816f748d4ad78b75fc320397d8117f57771/src/NuGet.Clients/NuGet.CommandLine/Commands/ProjectFactory.cs#L480)\r\n but an output path = bin\\debug this leads to teh new target path mentioned in the output (https://github.com/NuGet/NuGet.Client/blob/5433d816f748d4ad78b75fc320397d8117f57771/src/NuGet.Clients/NuGet.CommandLine/Commands/ProjectFactory.cs#L487)\r\n\r\nIn case that the TargetFramework is use the project has a TargetPath\r\n\r\n### Sample Project\r\n\r\n[TestConsoleApp2.zip](https://github.com/NuGet/Home/files/4299591/TestConsoleApp2.zip)\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11700672316","Type":"IssuesEvent","CreatedAt":"2020-03-06T17:59:55","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9266","RelatedDescription":"Opened issue \"nuget.exe pack for SDK multi targeting projects fails.\" (#9266) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nNuGet product used: NuGet.exe \r\n\r\nNuGet version: 5.4.0\r\n\r\nOS version: win10 \r\n\r\nWorked before? No sure\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Download and unzip the attached project\r\n\r\n2. Run: nuget.exe restore TestConsoleApp2.csproj\r\n\r\n3. Run: nuget.exe pack TestConsoleApp2.csproj -Build\r\n\r\nResult: \r\nCould not find a part of the path '***\\TestConsoleApp2\\bin\\Debug\\TestConsoleApp2\\bin\\Debug'.\r\n\r\n## Other suggested things\r\n### Observation\r\n1. If the project does not use the TargetFrameworks but TargetFramework everything works fine.\r\n2. In case that TargetFrameworks is used the project created does not have a TargetPath (https://github.com/NuGet/NuGet.Client/blob/5433d816f748d4ad78b75fc320397d8117f57771/src/NuGet.Clients/NuGet.CommandLine/Commands/ProjectFactory.cs#L480)\r\n but an output path = bin\\debug this leads to teh new target path mentioned in the output (https://github.com/NuGet/NuGet.Client/blob/5433d816f748d4ad78b75fc320397d8117f57771/src/NuGet.Clients/NuGet.CommandLine/Commands/ProjectFactory.cs#L487)\r\n\r\nIn case that the TargetFramework is use the project has a TargetPath\r\n\r\n### Sample Project\r\n\r\n[TestConsoleApp2.zip](https://github.com/NuGet/Home/files/4299591/TestConsoleApp2.zip)\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11700407513","Type":"IssuesEvent","CreatedAt":"2020-03-06T17:25:52","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9265","RelatedDescription":"Opened issue \"Fix nuget.exe push help for the source argument\" (#9265) at NuGet/Home","RelatedBody":"It incorrectly says the argument should be the server URL, but in fact it should be the source name as defined in the nuget.config file."},{"Id":"11699245637","Type":"IssuesEvent","CreatedAt":"2020-03-06T15:18:38","Actor":"connectArun2001","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9249","RelatedDescription":"Reopened issue \"Geting Error before and after Migrate from packages.config to PackageReference\" (#9249) at NuGet/Home","RelatedBody":" Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Manage Nuget Packages for solution / project\r\n\r\nNuGet version (x.x.x.xxx): Package Manager Console Host Version 5.0.2.5988. Used UI interface of Manage Nuger Manager\r\n\r\ndotnet.exe --version (if appropriate): .Net framework 4.7.2\r\n\r\nVS version (if appropriate): Microsoft Visual Studio Professional 2019\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFollowed below steps after upgrading application to .NET framework 4.7.2\r\n\r\nReference \r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference\r\n\r\n1. Open a solution containing project using packages.config.\r\n2. In Solution Explorer, right-click on the References node or the packages.config file and select Migrate packages.config to PackageReference....\r\n3. The migrator analyzes the project's NuGet package references and attempts to categorize them into Top-level dependencies (NuGet packages that you installed directly) and Transitive dependencies (packages that were installed as dependencies of top-level packages).\r\n Note\r\nPackageReference supports transitive package restore and resolves dependencies dynamically, meaning that transitive dependencies need not be installed explicitly.\r\n4. (Optional) You may choose to treat a NuGet package classified as a transitive dependency as a top-level dependency by selecting the Top-Level option for the package. This option is automatically set for packages containing assets that do not flow transitively (those in the build, buildCrossTargeting, contentFiles, or analyzers folders) and those marked as a development dependency (developmentDependency = \"true\").\r\nReview any package compatibility issues.\r\n5. Select OK to begin the migration.\r\n\r\nError during run time:\r\n\r\nCould not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) Could not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\n========\r\nEven getting same error after upgrading System.Buffers to available versions on nuget 4.0.0/ 4.3.0 / 4.4.0 / 4.5.0\r\n\r\n============\r\n\r\nBelow is my app.config file . also attached appconfig.zip file.\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <configSections>\r\n    </configSections>\r\n<startup><supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.7.2\" /></startup>\r\n  <runtime>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Numerics.Vectors\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.1.4.0\" newVersion=\"4.1.4.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.6.0\" newVersion=\"4.0.6.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.ValueTuple\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n  </runtime>\r\n</configuration>\r\n\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nBelow is the migration report\r\n\r\nNuGet Migration Report\r\nOverview\r\nMigration to PackageReference was completed successfully. Please build and run your solution to verify that all packages are available.\r\nIf you run into any problems, have feedback, questions, or concerns, please file an issue on the NuGet GitHub repository.\r\nChanged files and this report have been backed up here: C:\\Users\\RAM\\source\\repos\\RestWebService\\MigrationBackup\\57a5308f\\Company\r\nHelp me rollback to packages.config\r\nPackages processed\r\nTop-level dependencies:\r\nPackage Id\r\nVersion\r\nMicrosoft.Bcl.AsyncInterfaces\r\nv1.1.0\r\nNewtonsoft.Json\r\nv12.0.3\r\nSystem.Buffers\r\nv4.5.0\r\nSystem.Memory\r\nv4.5.3\r\nSystem.Numerics.Vectors\r\nv4.5.0\r\nSystem.Runtime.CompilerServices.Unsafe\r\nv4.7.0\r\nSystem.Text.Encodings.Web\r\nv4.7.0\r\nSystem.Text.Json\r\nv4.7.1\r\nSystem.Threading.Tasks.Extensions\r\nv4.5.2\r\nSystem.ValueTuple\r\nv4.5.0\r\n\r\nTransitive dependencies:\r\nPackage Id\r\nVersion\r\nNo transitive dependencies found. \r\n\r\nPackage compatibility issues\r\n\r\nDescription\r\n\r\nNo issues were found. \r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11699244380","Type":"IssuesEvent","CreatedAt":"2020-03-06T15:18:30","Actor":"connectArun2001","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9249","RelatedDescription":"Closed issue \"Geting Error before and after Migrate from packages.config to PackageReference\" (#9249) at NuGet/Home","RelatedBody":" Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Manage Nuget Packages for solution / project\r\n\r\nNuGet version (x.x.x.xxx): Package Manager Console Host Version 5.0.2.5988. Used UI interface of Manage Nuger Manager\r\n\r\ndotnet.exe --version (if appropriate): .Net framework 4.7.2\r\n\r\nVS version (if appropriate): Microsoft Visual Studio Professional 2019\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nFollowed below steps after upgrading application to .NET framework 4.7.2\r\n\r\nReference \r\nhttps://docs.microsoft.com/en-us/nuget/consume-packages/migrate-packages-config-to-package-reference\r\n\r\n1. Open a solution containing project using packages.config.\r\n2. In Solution Explorer, right-click on the References node or the packages.config file and select Migrate packages.config to PackageReference....\r\n3. The migrator analyzes the project's NuGet package references and attempts to categorize them into Top-level dependencies (NuGet packages that you installed directly) and Transitive dependencies (packages that were installed as dependencies of top-level packages).\r\n Note\r\nPackageReference supports transitive package restore and resolves dependencies dynamically, meaning that transitive dependencies need not be installed explicitly.\r\n4. (Optional) You may choose to treat a NuGet package classified as a transitive dependency as a top-level dependency by selecting the Top-Level option for the package. This option is automatically set for packages containing assets that do not flow transitively (those in the build, buildCrossTargeting, contentFiles, or analyzers folders) and those marked as a development dependency (developmentDependency = \"true\").\r\nReview any package compatibility issues.\r\n5. Select OK to begin the migration.\r\n\r\nError during run time:\r\n\r\nCould not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040) Could not load file or assembly 'System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n\r\n========\r\nEven getting same error after upgrading System.Buffers to available versions on nuget 4.0.0/ 4.3.0 / 4.4.0 / 4.5.0\r\n\r\n============\r\n\r\nBelow is my app.config file . also attached appconfig.zip file.\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <configSections>\r\n    </configSections>\r\n<startup><supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.7.2\" /></startup>\r\n  <runtime>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Numerics.Vectors\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.1.4.0\" newVersion=\"4.1.4.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.6.0\" newVersion=\"4.0.6.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Buffers\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.ValueTuple\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.3.0\" newVersion=\"4.0.3.0\" />\r\n      </dependentAssembly>\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Threading.Tasks.Extensions\" publicKeyToken=\"cc7b13ffcd2ddd51\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.2.0.1\" newVersion=\"4.2.0.1\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n  </runtime>\r\n</configuration>\r\n\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nBelow is the migration report\r\n\r\nNuGet Migration Report\r\nOverview\r\nMigration to PackageReference was completed successfully. Please build and run your solution to verify that all packages are available.\r\nIf you run into any problems, have feedback, questions, or concerns, please file an issue on the NuGet GitHub repository.\r\nChanged files and this report have been backed up here: C:\\Users\\RAM\\source\\repos\\RestWebService\\MigrationBackup\\57a5308f\\Company\r\nHelp me rollback to packages.config\r\nPackages processed\r\nTop-level dependencies:\r\nPackage Id\r\nVersion\r\nMicrosoft.Bcl.AsyncInterfaces\r\nv1.1.0\r\nNewtonsoft.Json\r\nv12.0.3\r\nSystem.Buffers\r\nv4.5.0\r\nSystem.Memory\r\nv4.5.3\r\nSystem.Numerics.Vectors\r\nv4.5.0\r\nSystem.Runtime.CompilerServices.Unsafe\r\nv4.7.0\r\nSystem.Text.Encodings.Web\r\nv4.7.0\r\nSystem.Text.Json\r\nv4.7.1\r\nSystem.Threading.Tasks.Extensions\r\nv4.5.2\r\nSystem.ValueTuple\r\nv4.5.0\r\n\r\nTransitive dependencies:\r\nPackage Id\r\nVersion\r\nNo transitive dependencies found. \r\n\r\nPackage compatibility issues\r\n\r\nDescription\r\n\r\nNo issues were found. \r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-03-07T05:30:43.7207917Z","RunDurationInMilliseconds":2227}