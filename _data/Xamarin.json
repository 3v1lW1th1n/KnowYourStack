{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series,\nThe post...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post GlideX For Fast Images on Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/glidex-fast-images-android/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9478253531","Type":"PullRequestEvent","CreatedAt":"2019-04-19T21:54:03","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3011","RelatedDescription":"Opened pull request \"[build] update to NuGet 5.0.0\" (#3011) at xamarin/xamarin-android","RelatedBody":"Context: https://www.nuget.org/downloads"},{"Id":"9478132444","Type":"PullRequestEvent","CreatedAt":"2019-04-19T21:21:02","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3010","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix warnings from <CompileNativeAssembly/>\" (#3010) at xamarin/xamarin-android","RelatedBody":"Any Xamarin.Android app was generating build output such as:\r\n\r\n    _CompileNativeAssemblySources:\r\n      [aarch64-linux-android-as.EXE stderr] typemap.mj.inc: Assembler messages:\r\n      [aarch64-linux-android-as.EXE stderr] typemap.mj.inc:60201: Warning: end of file not at end of a line; newline inserted\r\n      [arm-linux-androideabi-as.EXE stderr] typemap.mj.inc: Assembler messages:\r\n      [arm-linux-androideabi-as.EXE stderr] typemap.mj.inc:60201: Warning: end of file not at end of a line; newline inserted\r\n\r\nThe fix was we just needed to call `StreamWriter.WriteLine()` once at\r\nthe end of the file. I added an `NativeAssemblyDataStream.EndOfFile()`\r\nmethod to call for this instead of `Flush()`.\r\n\r\nI also updated log messages in `<CompileNativeAssembly/>` to be more\r\nprecise:\r\n\r\n* stdout should probably use `LogDebugMessage` for\r\n  `MessageImportance.Low`.\r\n* stderr should probably use `MessageImportance.High`.\r\n\r\nI added a test that checks for MSBuild warnings in general, and that\r\nwe aren't getting messages like these anymore."},{"Id":"9477966094","Type":"PullRequestEvent","CreatedAt":"2019-04-19T20:39:48","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3009","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] proguard/r8 + multidex missing rule\" (#3009) at xamarin/xamarin-android","RelatedBody":"I recently was doing some testing, and was using the Xamarin.Forms\r\nShell template from Visual Studio 2019. I also added\r\nXamarin.Forms.Maps and enabled multi-dex + r8.\r\n\r\nUnfortunately, the app crashed on start with:\r\n\r\n    java.lang.ClassNotFoundException: Didn't find class \"android.support.multidex.MultiDexApplication\"\r\n\r\nUsing `dexdump`, the class was indeed missing from `classes.dex`.\r\n\r\nIt feels like this should \"just work\"?\r\n\r\nFrom some conversation on Slack, @JonDouglas tried in Android Studio;\r\nit was adding this proguard rule automatically:\r\n\r\n    -keep class android.support.multidex.MultiDexApplication { <init>(); }\r\n\r\nI think we can just add this rule to `proguard_xamarin.cfg` *always*\r\nto fix this problem. I tested non-multidex apps, and no new warnings\r\nare popping up or anything. Xamarin.Android apps with proguard/r8 +\r\nmultidex were working by default after I made this change.\r\n\r\nI added a test that verifies this problem is fixed."},{"Id":"9477497342","Type":"IssuesEvent","CreatedAt":"2019-04-19T18:50:19","Actor":"JohnGalt1717","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3008","RelatedDescription":"Opened issue \"AddSubtitleSource crashes app to launcher on Android with VideoView\" (#3008) at xamarin/xamarin-android","RelatedBody":"### Description\r\nusing AddSubtitleSource using any type of .NET stream (which is all that's allowed now) crashes the app to the desktop.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a video view with a video.\r\n2. Get a stream of the text of the text/vtt file. (memorystream, httpstream, doesn't matter they all have the same issue)\r\n2. Use AddSubtitleSource like this videoView.AddSubtitleSource(stream, MediaFormat.CreateSubtitleFormat(\"text/vtt\", caption.LanguageCode?.ToUpper() ?? \"EN\"));\r\n3.  Run your code and observe as your app crashes to the launcher\r\n\r\n### Expected Behavior\r\nShould add the subtitles to the options for the video player.\r\n\r\n### Actual Behavior\r\nCrash to launcher\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.293080\r\n- Last known good version: N/A\r\n- IDE: VS.NET 2019 Windows\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.1 Oreo, Min 6.0 marshmallow\r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages:\r\n- Affected Devices: Pixel 2XL Emulator.\r\n"},{"Id":"9477477830","Type":"IssuesEvent","CreatedAt":"2019-04-19T18:46:06","Actor":"NPadrutt","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3007","RelatedDescription":"Opened issue \"[Bug] Invalid Resources generated for DesignTime\" (#3007) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWith Version 3.5.x of Xamarin Forms I have a lot of errors all regarding the Resource.Designer in the obj-Debug-[Version]-designtime folder.\r\nI experimented around with the target and minimum Android SDK Version but had it with both 9.0 and 8.1.\r\n\r\n(since I was no able to get the errors in an output, I add a Screenshot here)\r\n\r\n![image](https://user-images.githubusercontent.com/1764367/56124908-feacdf80-5f77-11e9-9d4e-edbfec1078ab.png)\r\n\r\nIt seems that this is caused by entries like: \r\n\r\n\t\t\t// aapt resource value: 0x7F010174\r\n\t\t\tpublic const int bottomtab.navarea = 2130772340;\r\n\t\t\t\r\n\t\t\t// aapt resource value: 0x7F010175\r\n\t\t\tpublic const int bottomtab.tabbar = 2130772341;\r\n\r\nAlso these do not exist in the Resource.Designer used to build the app.\r\nI tried deleting all the bin and obj folders, but the file is always regenerated with the same entries.\r\n\r\n### Steps to Reproduce\r\nOpen a solution in either VS 2019 or 2017 with Xamarin Forms >= 3.5 in the project.\r\n\r\n### Expected Behavior\r\nNo Errors.\r\n\r\n### Actual Behavior\r\nError messages appear.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: 3.4.0.1039999\r\n- IDE: Visual Studio 2017 / 2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.1, 9\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n[App1.zip](https://github.com/xamarin/Xamarin.Forms/files/3079592/App1.zip)\r\n\r\n"},{"Id":"9476072808","Type":"IssuesEvent","CreatedAt":"2019-04-19T13:52:54","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2996","RelatedDescription":"Closed issue \"Xamarin Android -New Cerated tabbed App run crash after adding control to axml\" (#2996) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI used **VS2017** to create a new `XamarinAndroid ` application. I chose the **TabbedApp** option during the new build. After the project is created, I added a control to the `activity_main.axml`, such as `ImageView`,and then crashed when I run the program.\r\n>Unhandled Exception:Android.Views.InflateException\r\n\r\n### Steps to Reproduce\r\n\r\n1. New Create a Xamarin Android Tabbed App.\r\n**New Project -> Visual C# -> Android -> Android App(Xamarin) -> Tabbed App(Android version 5.0).**\r\n2. Add a control(`ImageView`) to `activity_main.axml`\r\n![image](https://user-images.githubusercontent.com/7145819/56274397-37dc7f80-6131-11e9-9d7a-f66df832ddd7.png)\r\n\r\n3. Click Run button in VS to run this app.\r\n\r\n### Expected Behavior\r\nCrash happens in VS.\r\n![image](https://user-images.githubusercontent.com/7145819/56274448-4fb40380-6131-11e9-9d94-eec61df18710.png)\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:MIcrosoft Visual Studio Community 2017 Version 15.9.11\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: \r\nminSdkVersion:21\r\ntargetSdkVersion: 27\r\n- Affected Devices: simulator:8.1 (Oreo) - API 27\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/9wfhgpmf489or21/App6.rar?dl=0\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\r\n### Solution Now:\r\nAfter edit axml file,need to clean project, then build it again can work.\r\nhttps://stackoverflow.com/questions/55692576/why-i-cant-add-an-imageview-in-the-tabbed-page/55705339#55705339"},{"Id":"9476006121","Type":"IssuesEvent","CreatedAt":"2019-04-19T13:39:08","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2438","RelatedDescription":"Closed issue \"Breakpoints not being hit on debug\" (#2438) at xamarin/xamarin-android","RelatedBody":"Hello,\r\nI have an issue with breakpoints not being hit in debug mode. Tried unchecking the 'Build with MSBuild instead of xbuild' box in my VS Preferences but then I get a following error:\r\n\r\n**src/packages/Xamarin.GooglePlayServices.Basement.60.1142.1/build/MonoAndroid80/Xamarin.GooglePlayServices.Basement.targets (SetupGoogleServicesJson target) ->\r\n\r\n: error : Error initializing task ConvertToAbsolutePath: Not registered task ConvertToAbsolutePath.**\r\n\r\nAfter removing the entire package from the csproj file (Import Project/Condition snippet), another error is triggered:\r\n\r\n**/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets (_ResolveAssemblies target) ->\r\n\r\n: error : Could not load file or assembly 'NuGet.Common, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies.\r\n\r\nat Xamarin.Android.Tasks.ResolveAssemblies.b__44_0 () [0x0000e] in <96027da06dd5411688a31011072e256f>:0 \r\nat System.Threading.Tasks.Task.InnerInvoke () [0x0000f] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2886 \r\nat System.Threading.Tasks.Task.Execute () [0x00010] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2509**\r\n\r\n\r\nAny idea as to how to resolve this?\r\n\r\nThanks!\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 3)\r\nInstallation UUID: b66baa90-5b21-4648-9e17-18bcecd3a526\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/mkolovrat/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.0 (13247)\r\nBuild 9A235\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 3.8.1.0 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040003\r\nGit revision: 6ae731889c896d6733efb8ff5117f5bf5b17b509\r\nBuild date: 2018-07-19 13:07:45-04\r\nXamarin addins: 417fed09624e1e1f76ab0a11e8b97ffd8bbf91e1\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Mon Nov 13 21:56:25 PST 2017\r\n    root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n"},{"Id":"9475582104","Type":"PullRequestEvent","CreatedAt":"2019-04-19T11:58:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2998","RelatedDescription":"Merged pull request \"[tests] check d8 works with \"Enhanced Fast Deployment\"\" (#2998) at xamarin/xamarin-android","RelatedBody":"There is a direct call to `<CompileToDalvik/>` when using\r\n`AndroidFastDeploymentType` = `Assemblies:Dexes`.\r\n\r\nWe need to add a few tests here to verify that this code path still\r\nworks when using `$(AndroidDexTool)` = `d8`.\r\n\r\nI also did some minor cleanup in these tests, such as:\r\n\r\n* Instead of checking if the `classes.dex` < 30K, I actually checked\r\n  for a class that should be missing and one that should exist.\r\n* Use the `TestName` property.\r\n* Use of `CreateApkBuilder (..., false, false)` can just omit the two\r\n  `false, false` parameters, as that is the default now.\r\n\r\nThe actual changes for d8 + enhanced fastdev will be in monodroid."},{"Id":"9474552637","Type":"PullRequestEvent","CreatedAt":"2019-04-19T07:53:12","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3006","RelatedDescription":"Opened pull request \"[build] Adjust dependencies for Ubuntu 19\" (#3006) at xamarin/xamarin-android","RelatedBody":"Ubuntu 19 removed OpenJDK 8 and thus we can no longer depend on distro packages\r\nto install it. OpenJDK 8 is a requirement for Android development but, alas,\r\nthere's no replacement in the Ubuntu 19 (or Debian 10+) repositories for this\r\nversion. At some point we will start provisioning our own version of OpenJDK 8\r\nbut, for now, user needs to install OpenJDK 8 on their own. A recommended\r\nalternative is https://docs.aws.amazon.com/corretto/latest/corretto-8-ug/downloads-list.html\r\n\r\nRemove dependency on openjdk-8-jdk and change `libzip4` dependency to\r\n`libzip-dev` in order to install the latest version of libzip."},{"Id":"9472829580","Type":"IssuesEvent","CreatedAt":"2019-04-18T22:42:32","Actor":"codecore","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3005","RelatedDescription":"Opened issue \"Runtime calls endSession() without first calling beginSession()\" (#3005) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1.  Run Xamarin.UITest in AppCenter. Not restricted to a specific device, or OS version. Observed on Google Pixel 2, Moto G6, Huawei Nexus 6P, and others.\r\njava.lang.IllegalStateException: Attempted to endSession() without preceding matching call to beginSession().\r\n\r\n[AndroidAppCenterStackTrace.txt](https://github.com/xamarin/xamarin-android/files/3096364/AndroidAppCenterStackTrace.txt)\r\n\r\n### Expected Behavior\r\n   Test run flawlessly\r\n### Actual Behavior\r\n  App is unloaded, screenshot is the android 'desktop'. Logfile contains a stacktrace.\r\n### Version Information\r\nHuewei Nexus 6P Android 8.1.0\r\n### Log File\r\nhttps://github.com/xamarin/xamarin-android/files/3096364/AndroidAppCenterStackTrace.txt"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9480631957","Type":"IssuesEvent","CreatedAt":"2019-04-20T19:36:26","Actor":"yadavvineet","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5967","RelatedDescription":"Opened issue \"Routing Not working, NotImplemented exception thrown\" (#5967) at xamarin/Xamarin.Forms","RelatedBody":"I have followed standard instructions shown at\r\nhttps://docs.microsoft.com/en-us/xamarin/xamarin-forms/app-fundamentals/shell?tabs=android#navigation\r\nand many other blogs which are on same lines. \r\ni have the following xaml head\r\n```\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n       xmlns:local=\"clr-namespace:VinTest.Views\"\r\n       xmlns:infrastructure=\"clr-namespace:VinTest.Infrastructure;assembly=VinTest\"\r\n       RouteHost=\"vineetyadav.com\"\r\n       RouteScheme=\"app\"\r\n       Route=\"vintest\"\r\n       FlyoutBehavior=\"Flyout\"\r\n       Title=\"VinTest\"\r\n       x:Class=\"VinTest.AppShell\"\r\n       Navigating=\"AppShell_OnNavigating\"\r\n       x:Name=\"MainShell\">\r\n```\r\n\r\nI added another page, Lets Say LanguageSelectorPage which is out of normal flow of page.\r\nAdded following route in App.xaml.cs\r\n`Routing.RegisterRoute(\"changelanguage\", typeof(LanguageSelectorPage));`\r\n\r\nnow from one of the menu i have the following command setup\r\n```\r\nChangeLanguageCommand = new Command(async () =>\r\n            {\r\n                (Application.Current.MainPage as newShell)?.GoToAsync(\r\n                    $\"app:///changelanguage\", true);\r\n                //MessagingCenter.Send(this, GlobalConstants.Commands.ChangeLanguageCommand,\"\");\r\n            });\r\n```\r\n\r\nThe **problem** is routing is not working. I tried to debug from original sources from Xamarin.forms (master) and the it seems that the in the following code:\r\n![image](https://user-images.githubusercontent.com/7949851/56461457-20bbbd00-63d1-11e9-8f79-92711501a2b1.png)\r\nproblem occurs at code at line 106.While my shell route comes out to be vintest, the expectedShellRoute come out to be \"AppShell1\". This is returned from code\r\n```\r\n  public static string GetRoute(Element obj)\r\n        {\r\n            return (string)obj.GetValue(RouteProperty);\r\n        }\r\n```\r\nI am not sure what the problem is, but because of this, i am not able to use the simple routing that is registered with Route.Register. \r\nAdditionally if you done use sources and use the nugets., in the line below, if i use await, i get the same notImplementedException thrown directly as well. \r\n```\r\nChangeLanguageCommand = new Command(async () =>\r\n            {\r\n                (Application.Current.MainPage as newShell)?.GoToAsync(\r\n                    $\"app:///changelanguage\", true);\r\n                //MessagingCenter.Send(this, GlobalConstants.Commands.ChangeLanguageCommand,\"\");\r\n            });\r\n```\r\n\r\n\r\nCan you please look into and assist.\r\n\r\nI have updated all packages and on latest versions."},{"Id":"9480218396","Type":"IssuesEvent","CreatedAt":"2019-04-20T15:56:07","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5966","RelatedDescription":"Opened issue \"[Spec] Merge quickly, then stabilize\" (#5966) at xamarin/Xamarin.Forms","RelatedBody":"# Problem \r\n\r\nPull Requests sit for **way too long** in review or draft because of the high bar of committing to the API and implementation.\r\n\r\nExamples and candidates to consider: \r\n\r\n* MediaElement #3482 \r\n* CameraView #4084\r\n* GIF #2202\r\n* Shell for UWP #5593 \r\n\r\n# Suggestion: SetFlags\r\n\r\nCould we use the `SetFlags` API to merge these kinds of controls before they meet the bar for stable, but still ship them with stable releases? This would allow more aggressive developers to opt-in with the expectation that stability may not be there, and the API/ABI could change even radically.\r\n\r\nConcerns:\r\n\r\n* Code touching Core runs the risk of impacting other controls\r\n* Companies may not be able to adopt current stable releases when regulations stipulate that all features in a release meet a certain standard of stability/quality.\r\n\r\n# Suggestion: Fast Ring, Slow Ring\r\n\r\nCould we maintain 2 shipping lanes? Thinking in terms of both the stable and pre-release categories we now have, within each we could have:\r\n\r\n* Slow Ring: includes stable or pre-release \r\n* Fast Ring: includes stable or pre-release PLUS anything like the items noted above that will be included, but are being actively developer or finalized\r\n\r\nConcerns: \r\n\r\n* Added burden on the core team to maintain this release process\r\n* Added burden on the core team to merge all the things to make this work. \r\n\r\n# Call to Action\r\n\r\nPlease discuss and contribute your ideas here."},{"Id":"9480034748","Type":"IssuesEvent","CreatedAt":"2019-04-20T14:23:40","Actor":"alex-relov","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5306","RelatedDescription":"Reopened issue \"Map navigation does not work when using Shell\" (#5306) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nMap navigation does not work on Android when using Shell\r\n### Steps to Reproduce\r\n\r\n1. Clone repository https://github.com/alex-relov/xamarin.froms.maps.shell\r\n2. Add maps key to MyApp on android solution\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:3.5.0.129452\r\n- Last known good version:-\r\n- IDE: VS 2017 15.9.5\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n- Android Support Library Version: <!-- if applicable -->27.0.2.1\r\n- Nuget Packages: xamarin.forms.maps 3.5.0.129452\r\n- Affected Devices: Android Emulator  api 28\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\nhttps://github.com/alex-relov/xamarin.froms.maps.shell\r\nParent: #2415"},{"Id":"9480026149","Type":"IssuesEvent","CreatedAt":"2019-04-20T14:19:02","Actor":"alex-relov","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5306","RelatedDescription":"Closed issue \"Map navigation does not work when using Shell\" (#5306) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nMap navigation does not work on Android when using Shell\r\n### Steps to Reproduce\r\n\r\n1. Clone repository https://github.com/alex-relov/xamarin.froms.maps.shell\r\n2. Add maps key to MyApp on android solution\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:3.5.0.129452\r\n- Last known good version:-\r\n- IDE: VS 2017 15.9.5\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n- Android Support Library Version: <!-- if applicable -->27.0.2.1\r\n- Nuget Packages: xamarin.forms.maps 3.5.0.129452\r\n- Affected Devices: Android Emulator  api 28\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\nhttps://github.com/alex-relov/xamarin.froms.maps.shell\r\nParent: #2415"},{"Id":"9479165379","Type":"IssuesEvent","CreatedAt":"2019-04-20T05:32:26","Actor":"monetelli","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5965","RelatedDescription":"Opened issue \"[Bug] MaterialButtonRenderer with the CornerRadius property in iOS\" (#5965) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nFirst I thought that the problem was Gorilla Player, so I did it in DEBUG mode, the result was the same, I made a difference with two buttons using Visual in one, when adding the CornerRadius, the button was distorted with the visual.\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n![Captura de Pantalla 2019-04-20 a la(s) 00 02 09](https://user-images.githubusercontent.com/14121125/56453171-aa04be00-6303-11e9-9c08-869f77f784f3.png)\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9479065510","Type":"IssuesEvent","CreatedAt":"2019-04-20T04:23:07","Actor":"brminnick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5911","RelatedDescription":"Closed issue \"\"System.MissingMethodException: No constructor found\" when using a Singleton TabbedPage for Application.MainPage (Android)\" (#5911) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n(Only applicable on Android)\r\n\r\nWhen `Application.MainPage` is a Singleton TabbedPage using a `TabbedPageRenderer` (example code, below), `Xamarin.Forms.Platform.Android.AppCompat.Platform.SetPageInternal` throws the following exceptions:\r\n- `System.NotSupportedException: Unable to activate instance of type XamarinFormsSingletonRepro.Droid.SingletonTabbedPageRenderer from native handle` \r\n- `System.MissingMethodException: No constructor found for XamarinFormsSingletonRepro.Droid.SingletonTabbedPageRenderer::.ctor(System.IntPtr, Android.Runtime.JniHandleOwnership) `\r\n\r\nThis is the same error from #4325 and continues to happen in v3.6.0264807.\r\n\r\n**Sample Code, TabbedPage**\r\n\r\nThe complete sample reproduction code using Xamarin.Forms v3.6.0.0264807 can be found here: https://github.com/brminnick/XamarinFormsSingletonRepro\r\n\r\n```csharp\r\npublic class App : Application\r\n{\r\n    public App() => MainPage = SingletonTabbedPage.Instance;\r\n}\r\n\r\npublic class SingletonTabbedPage : TabbedPage\r\n{\r\n    readonly static Lazy<SingletonTabbedPage> _instanceHolder = new Lazy<SingletonTabbedPage>(() => new SingletonTabbedPage());\r\n\r\n    public static SingletonTabbedPage Instance => _instanceHolder.Value;\r\n}\r\n```\r\n\r\n**Sample Code, TabbedPageRenderer**\r\n\r\n```csharp\r\nusing Xamarin.Forms;\r\n\r\nusing Android.Content;\r\n\r\nusing Xamarin.Forms.Platform.Android.AppCompat;\r\n\r\nusing XamarinFormsSingletonRepro;\r\nusing XamarinFormsSingletonRepro.Droid;\r\n\r\n[assembly: ExportRenderer(typeof(SingletonTabbedPage), typeof(SingletonTabbedPageRenderer))]\r\nnamespace XamarinFormsSingletonRepro.Droid\r\n{\r\n    public class SingletonTabbedPageRenderer : TabbedPageRenderer\r\n    {\r\n        public SingletonTabbedPageRenderer(Context context) : base(context)\r\n        {\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Stack Trace**\r\n\r\n> System.NotSupportedException: Unable to activate instance of type XamarinFormsSingletonRepro.Droid.SingletonTabbedPageRenderer from native handle 0x69 (key_handle 0x8858560). ---> System.MissingMethodException: No constructor found for XamarinFormsSingletonRepro.Droid.SingletonTabbedPageRenderer::.ctor(System.IntPtr, Android.Runtime.JniHandleOwnership) ---> Java.Interop.JavaLocationException: Exception of type 'Java.Interop.JavaLocationException' was thrown.\r\n  at Java.Lang.Error: Exception of type 'Java.Lang.Error' was thrown.\r\n  at java.lang.Error: Java callstack:\r\n  at at mono.java.lang.RunnableImplementor.n_run(Native Method)\r\n  at at mono.java.lang.RunnableImplementor.run(RunnableImplementor.java:30)\r\n  at at android.os.Handler.handleCallback(Handler.java:873)\r\n  at at android.os.Handler.dispatchMessage(Handler.java:99)\r\n  at at android.os.Looper.loop(Looper.java:193)\r\n  at at android.app.ActivityThread.main(ActivityThread.java:6669)\r\n  at at java.lang.reflect.Method.invoke(Native Method)\r\n  at at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n  at at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n  --- End of inner exception stack trace ---\r\n  at Java.Interop.TypeManager.CreateProxy (System.Type type, System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00055] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00116] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  --- End of inner exception stack trace ---\r\n  at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00182] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Java.Lang.Object._GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00017] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Java.Lang.Object.GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00000] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Android.Views.ViewGroup.GetChildAt (System.Int32 index) [0x00036] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Xamarin.Forms.Platform.Android.AppCompat.Platform.SetPageInternal (Xamarin.Forms.Page newRoot) [0x0001a] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\Platform.cs:301\r\n  at Xamarin.Forms.Platform.Android.AppCompat.Platform+<>c__DisplayClass36_0.<SetPage>b__0 () [0x0001f] in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\AppCompat\\Platform.cs:269\r\n  at Java.Lang.Thread+RunnableImplementor.Run () [0x00008] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at Java.Lang.IRunnableInvoker.n_Run (System.IntPtr jnienv, System.IntPtr native__this) [0x00009] in <2960acf2eeb24d88b5230e1e8afbdc2e>:0\r\n  at at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.27(intptr,intptr)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open XamarinFormsSingletonRepro.sln\r\n2. Build/deploy XamarinFormsSingletonRepro.Android to an Android device\r\n     - I am using a Pixel emulator running API 28\r\n3. Wait for the app to finish launching\r\n4. On the Android device, tap the hardware Back button to background the app\r\n5. On the Android device, tap the hardware Overview button to see backgrounded apps\r\n7. On the Android device, tap XamarinFormsSingletonRepro.Android to resume the app\r\n8. App crashes\r\n\r\n![Repro Recording](https://user-images.githubusercontent.com/13558917/56086567-4adc1080-5e0e-11e9-81ce-93714f175c76.gif)\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Confirmed in v3.6.0264807 & v3.3.0.912540\r\n- Last known good version: Unknown\r\n- IDE: (See Environment, below)\r\n- Platform Target Frameworks: \r\n  - Android: 9.0\r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages:\r\n- Affected Devices: (See Affected Devices, Below)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/brminnick/XamarinFormsSingletonRepro\r\n\r\n### Affected Devices \r\n(From App Center Crash)\r\n\r\n![AffectedDevices](https://user-images.githubusercontent.com/13558917/56086066-a785fe00-5e03-11e9-8c47-c81925c21ee2.png)\r\n\r\n\r\n### Environment \r\n\r\n=== Visual Studio Enterprise 2019 for Mac ===\r\n\r\nVersion 8.0.2 (build 23)\r\nInstallation UUID: 4ac69d79-c034-474c-9629-20084c942d3c\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview3-27503-5\r\n\t3.0.0-preview-27324-5\r\n\t3.0.0-preview-27122-01\r\n\t2.2.0\r\n\t2.2.0-preview3-27014-02\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.6\r\n\t2.0.5\r\n\t1.1.10\r\n\t1.0.13\r\nSDK: /usr/local/share/dotnet/sdk/2.2.100/Sdks\r\nSDK Versions:\r\n\t2.2.100\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.101\r\n\t2.1.4\r\n\t1.1.11\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.2.0.5 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/bramin/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.2\r\nSDK Build Tools Version: 28.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08-rc@5ad371dab1b\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/bramin/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-05 16:58:56 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2 (14490.120)\r\nBuild 10E125\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.8.0.0 (Visual Studio Enterprise)\r\nHash: 0aa84521\r\nBranch: d16-0\r\nBuild date: 2019-04-02 16:01:19-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.8.0.0 (Visual Studio Enterprise)\r\nHash: 0aa84521\r\nBranch: d16-0\r\nBuild date: 2019-04-02 16:01:19-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.418\r\nHash: 3d086e814\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-01 09:20:10 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800020023\r\nGit revision: c576bb008dfe54cdcf596237e09564ebd2da4343\r\nBuild date: 2019-04-06 10:06:46+00\r\nBuild branch: master\r\nXamarin extensions: 2c996830618e7cb8e8be97984d643eb86f122e8d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nNuGet Package Management Extensions 0.17"},{"Id":"9478467829","Type":"PullRequestEvent","CreatedAt":"2019-04-19T23:02:03","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5964","RelatedDescription":"Opened pull request \"Testing a theory about an unreliable memory leak test\" (#5964) at xamarin/Xamarin.Forms","RelatedBody":"The Issue5555 test is failing about 75% of the time on Android; testing the theory that this is a timing issue because the second Collect call isn't being waited on."},{"Id":"9478353488","Type":"PullRequestEvent","CreatedAt":"2019-04-19T22:24:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5963","RelatedDescription":"Opened pull request \"profiler\" (#5963) at xamarin/Xamarin.Forms","RelatedBody":"Debugging CI."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9477527659","Type":"IssuesEvent","CreatedAt":"2019-04-19T18:56:56","Actor":"anakochevska","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5920","RelatedDescription":"Opened issue \"[Bug] Video from local storage not playing in WebView (Xamarin.Forms, iOS) after latest iOS update (12.2)\" (#5920) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI have an existing Xamarin Forms application, for Android and iOS, which shows some HTML content from local storage (the purpose is to view this content while offline) in WebView.\r\n\r\nAfter the latest iOS update (12.2), the videos in that HTML stopped working. White background is shown on the place of the video, with the symbol \"Play\" but no action is possible.\r\n\r\nI have tried changing the video tags to include autoplay, mute, etc but no success.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a simple local HTML file, that has HTML5 video tag. \r\n2. Set the source of the video tag also from a local storage\r\n3. Set the source of the WebView to the local HTML. \r\n4. Run it on iOS device. \r\n`<video width=\"560\" height=\"315\" controls>`\r\n`<source src=\"Absolute-3D.mp4\" type=\"video/mp4\">`\r\n`</video>`\r\n\r\n### Expected Behavior\r\nIt should show the video with the option to play/pause/stop. \r\n### Actual Behavior\r\nIt shows blank space, with only the play icon and clicking the icon doesn't do anything. \r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2\r\n- Affected Devices: Every iOS device. \r\n\r\n### Screenshots\r\n\r\nhttps://i.imgur.com/sVXEmxX.jpg\r\n\r\n"},{"Id":"9477355818","Type":"PullRequestEvent","CreatedAt":"2019-04-19T18:19:59","Actor":"BrzVlad","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5919","RelatedDescription":"Opened pull request \"[mtouch] Enable dsym even from aot'ed images when interpreter is enabled\" (#5919) at xamarin/xamarin-macios","RelatedBody":"Fixes https://github.com/mono/mono/issues/13975"},{"Id":"9476929377","Type":"IssuesEvent","CreatedAt":"2019-04-19T16:46:24","Actor":"samhouts","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5918","RelatedDescription":"Reopened issue \"\"error\": \"InvalidRegistration\"  FCM - Xamarin.Forms\" (#5918) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am developing FCM notifications with Xamarin.Forms using [FCM Notifications Plugin](https://github.com/CrossGeeks/FirebasePushNotificationPlugin). In iOS project I am collecting token. When sending notifications using Postman to the same token getting error \r\n\r\n> { \"multicast_id\": 8631208504861228784, \"success\": 0, \"failure\": 1, \"canonical_ids\": 0, \"results\": [ { \"error\": \"InvalidRegistration\" } ] }\r\n\r\nI have added valid _GoogleService-Info.plist_ file with _BuldleResource_ Built Action. This is code of **`AppDelegate`** class\r\n\r\nNote: I am sending notification to real device iPhone 5. Which connected to MAC machine and debugging from VS2017(PC).\r\n\r\n```\r\n[Register(\"AppDelegate\")]\r\n    public partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate\r\n    {\r\n        public override bool FinishedLaunching(UIApplication app, NSDictionary options)\r\n        {\r\n            global::Xamarin.Forms.Forms.Init();\r\n            LoadApplication(new App());\r\n\r\n            FirebasePushNotificationManager.Initialize(options, new NotificationUserCategory[]\r\n            {\r\n                new NotificationUserCategory(\"message\",new List<NotificationUserAction> {\r\n                    new NotificationUserAction(\"Reply\",\"Reply\",NotificationActionType.Foreground)\r\n                }),\r\n                new NotificationUserCategory(\"request\",new List<NotificationUserAction> {\r\n                    new NotificationUserAction(\"Accept\",\"Accept\"),\r\n                    new NotificationUserAction(\"Reject\",\"Reject\",NotificationActionType.Destructive)\r\n                })\r\n            });\r\n            return base.FinishedLaunching(app, options);\r\n        }\r\n\r\n        public override void RegisteredForRemoteNotifications(UIApplication application, NSData deviceToken)\r\n        {\r\n            var token = deviceToken.ToString();\r\n            FirebasePushNotificationManager.DidRegisterRemoteNotifications(deviceToken.ToString());\r\n            Console.WriteLine(\"This is token: \"+deviceToken);\r\n\r\n            var DeviceToken = deviceToken.Description;\r\n            if (!string.IsNullOrWhiteSpace(DeviceToken))\r\n            {\r\n                DeviceToken = DeviceToken.Trim('<').Trim('>');\r\n            }\r\n\r\n            NSUserDefaults.StandardUserDefaults.SetString(DeviceToken, \"PushDeviceToken\");\r\n\r\n        }\r\n        public override void FailedToRegisterForRemoteNotifications(UIApplication application, NSError error)\r\n        {\r\n            FirebasePushNotificationManager.RemoteNotificationRegistrationFailed(error);\r\n        }\r\n\r\n        // To receive notifications in foregroung on iOS 9 and below.\r\n        // To receive notifications in background in any iOS version\r\n\r\n        public override void DidReceiveRemoteNotification(UIApplication application, NSDictionary userInfo, Action<UIBackgroundFetchResult> completionHandler)\r\n        {\r\n            FirebasePushNotificationManager.DidReceiveMessage(userInfo);\r\n            // Do your magic to handle the notification data\r\n            System.Console.WriteLine(userInfo);\r\n            completionHandler(UIBackgroundFetchResult.NewData);\r\n        }\r\n    }\r\n```\r\n\r\nThe above code I have got from here\r\nhttps://github.com/CrossGeeks/FirebasePushNotificationPlugin/blob/master/samples/FirebasePushSample/FirebasePushSample.iOS/AppDelegate.cs\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms project and install [push notification nuget](https://github.com/CrossGeeks/FirebasePushNotificationPlugin)\r\n2.  Add valid _GoogleService-Info.plist_ file in iOS project\r\n3. Write above code in AppDelegate class and send notification from Posman to generated token.\r\n\r\n### Expected Behavior\r\nNotification should deliver to device\r\n### Actual Behavior\r\nNotifications not delivering\r\n### Basic Information\r\n- IDE:\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.6\r\nVisualStudio.15.Release/15.9.6+28307.344\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.208\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.79 (d15-9@260fa6a34)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.5.0 (HEAD/4b951a3e7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\n\r\n- Affected Devices: iPhone 5.\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nFor more visit this \r\n\r\nhttps://stackoverflow.com/questions/55594820/ios-device-token-generating-in-strange-format/\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9476926622","Type":"IssuesEvent","CreatedAt":"2019-04-19T16:45:46","Actor":"arvindrajachourasiya","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5918","RelatedDescription":"Opened issue \"\"error\": \"InvalidRegistration\"  FCM - Xamarin.Forms\" (#5918) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am developing FCM notifications with Xamarin.Forms using [FCM Notifications Plugin](https://github.com/CrossGeeks/FirebasePushNotificationPlugin). In iOS project I am collecting token. When sending notifications using Postman to the same token getting error \r\n\r\n> { \"multicast_id\": 8631208504861228784, \"success\": 0, \"failure\": 1, \"canonical_ids\": 0, \"results\": [ { \"error\": \"InvalidRegistration\" } ] }\r\n\r\nI have added valid _GoogleService-Info.plist_ file with _BuldleResource_ Built Action. This is code of **`AppDelegate`** class\r\n\r\nNote: I am sending notification to real device iPhone 5. Which connected to MAC machine and debugging from VS2017(PC).\r\n\r\n```\r\n[Register(\"AppDelegate\")]\r\n    public partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate\r\n    {\r\n        public override bool FinishedLaunching(UIApplication app, NSDictionary options)\r\n        {\r\n            global::Xamarin.Forms.Forms.Init();\r\n            LoadApplication(new App());\r\n\r\n            FirebasePushNotificationManager.Initialize(options, new NotificationUserCategory[]\r\n            {\r\n                new NotificationUserCategory(\"message\",new List<NotificationUserAction> {\r\n                    new NotificationUserAction(\"Reply\",\"Reply\",NotificationActionType.Foreground)\r\n                }),\r\n                new NotificationUserCategory(\"request\",new List<NotificationUserAction> {\r\n                    new NotificationUserAction(\"Accept\",\"Accept\"),\r\n                    new NotificationUserAction(\"Reject\",\"Reject\",NotificationActionType.Destructive)\r\n                })\r\n            });\r\n            return base.FinishedLaunching(app, options);\r\n        }\r\n\r\n        public override void RegisteredForRemoteNotifications(UIApplication application, NSData deviceToken)\r\n        {\r\n            var token = deviceToken.ToString();\r\n            FirebasePushNotificationManager.DidRegisterRemoteNotifications(deviceToken.ToString());\r\n            Console.WriteLine(\"This is token: \"+deviceToken);\r\n\r\n            var DeviceToken = deviceToken.Description;\r\n            if (!string.IsNullOrWhiteSpace(DeviceToken))\r\n            {\r\n                DeviceToken = DeviceToken.Trim('<').Trim('>');\r\n            }\r\n\r\n            NSUserDefaults.StandardUserDefaults.SetString(DeviceToken, \"PushDeviceToken\");\r\n\r\n        }\r\n        public override void FailedToRegisterForRemoteNotifications(UIApplication application, NSError error)\r\n        {\r\n            FirebasePushNotificationManager.RemoteNotificationRegistrationFailed(error);\r\n        }\r\n\r\n        // To receive notifications in foregroung on iOS 9 and below.\r\n        // To receive notifications in background in any iOS version\r\n\r\n        public override void DidReceiveRemoteNotification(UIApplication application, NSDictionary userInfo, Action<UIBackgroundFetchResult> completionHandler)\r\n        {\r\n            FirebasePushNotificationManager.DidReceiveMessage(userInfo);\r\n            // Do your magic to handle the notification data\r\n            System.Console.WriteLine(userInfo);\r\n            completionHandler(UIBackgroundFetchResult.NewData);\r\n        }\r\n    }\r\n```\r\n\r\nThe above code I have got from here\r\nhttps://github.com/CrossGeeks/FirebasePushNotificationPlugin/blob/master/samples/FirebasePushSample/FirebasePushSample.iOS/AppDelegate.cs\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms project and install [push notification nuget](https://github.com/CrossGeeks/FirebasePushNotificationPlugin)\r\n2.  Add valid _GoogleService-Info.plist_ file in iOS project\r\n3. Write above code in AppDelegate class and send notification from Posman to generated token.\r\n\r\n### Expected Behavior\r\nNotification should deliver to device\r\n### Actual Behavior\r\nNotifications not delivering\r\n### Basic Information\r\n- IDE:\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.6\r\nVisualStudio.15.Release/15.9.6+28307.344\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.208\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.79 (d15-9@260fa6a34)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.5.0 (HEAD/4b951a3e7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\n\r\n- Affected Devices: iPhone 5.\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nFor more visit this \r\n\r\nhttps://stackoverflow.com/questions/55594820/ios-device-token-generating-in-strange-format/\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9476720762","Type":"IssuesEvent","CreatedAt":"2019-04-19T16:00:43","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5917","RelatedDescription":"Closed issue \"AppContext.TargetFrameworkName is null\" (#5917) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run any app and check AppContext\r\n2. TargetFrameworkName are null\r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nShould have the targetframeworkname specified\r\n\r\n### Actual Behavior\r\nare null\r\n\r\n### Version Information\r\n\r\n"},{"Id":"9472400136","Type":"IssuesEvent","CreatedAt":"2019-04-18T21:10:08","Actor":"jamesmontemagno","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5917","RelatedDescription":"Opened issue \"AppContext.TargetFrameworkName is null\" (#5917) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run any app and check AppContext\r\n2. TargetFrameworkName are null\r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nShould have the targetframeworkname specified\r\n\r\n### Actual Behavior\r\nare null\r\n\r\n### Version Information\r\n\r\n"},{"Id":"9471978267","Type":"IssuesEvent","CreatedAt":"2019-04-18T19:55:01","Actor":"dansiegel","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5916","RelatedDescription":"Opened issue \"[Feature Request] Add support for Attributes to build Info.plist\" (#5916) at xamarin/xamarin-macios","RelatedBody":"### Description\r\n\r\nIn Xamarin Android we have a number of really helpful attributes that can generally replace the need for creating complex Android Manifests. Some examples would include the UsesPermissionAttribute, IntentFilterAttribute, ApplicationAttribute, ActivityAttribute, etc. It's about high time that this sort of attribute love made it's way to iOS where we could start decorating our code with attributes that the build targets could then use to generate the full Info.plist or even to update the Entitilements.plist.\r\n\r\n### Example Use Case\r\n\r\nA common use case for this would be when using App Center Distribution. Assuming a full CI/CD pipeline here I might have my app split up 3 times in App Center for Dev, Stage and Production. This means for each environment I've got a unique App Secret for App Center. What's more is I might want to use Distribution for Dev and Stage but not Production. If we look at the [App Center Distribution docs](https://docs.microsoft.com/en-us/appcenter/sdk/distribute/xamarin#23-for-ios-only-modify-your-infoplist) we'll see that we need to add a CFBundleURLSchemes in the CFBundleURLTypes:\r\n\r\n```xml\r\n<key>CFBundleURLTypes</key>\r\n  <array>\r\n      <dict>\r\n          <key>CFBundleURLSchemes</key>\r\n          <array>\r\n              <string>appcenter-${APP_SECRET}</string>\r\n          </array>\r\n      </dict>\r\n  </array>\r\n```\r\n\r\nAs an attribute this might look something like:\r\n\r\n```cs\r\n[assembly: CFBundleUrlType(Schemes = new[] { \"appcenter-{app_secret}\" })]\r\n```\r\n\r\nOr really for best practices it would probably look more like:\r\n\r\n```cs\r\n[assembly: CFBundleUrlType(Schemes = new[] { Constants.AppCenterScheme })]\r\n```\r\n\r\nThe benefit here is that we can rely on processes we're probably are already using to inject things like the App Center secret at build time rather than having to deal with the nightmare of trying to make sure it doesn't get checked into source control and then writing a bunch of special build scripts to go and do regex replacements of some token in the Info.plist.\r\n\r\n### Proposed Attributes\r\n\r\n```cs\r\npublic enum BundleUrlTypeRole\r\n{\r\n    None,\r\n    Editor,\r\n    Viewer\r\n}\r\n\r\npublic class CFBundleUrlTypeAttribute : Attribute\r\n{\r\n    public BundleUrlTypeRole Role { get; set; }\r\n    public string Name { get; set; }\r\n    public string[] Schemes { get; set; }\r\n    public string Icon { get; set; }\r\n}\r\n\r\npublic class UIApplicationAttribute : Attribute\r\n{\r\n    public string Name { get; set; } // AwesomeApp\r\n    public string DisplayName { get; set; } // Awesome App\r\n    public string Identifier { get; set; }  // com.contoso.awesomeapp\r\n    public string MinimumOSVersion { get; set; } // 10.0\r\n    public string Version { get; set; } // 1.0.0.1234\r\n    public string ShortVersion { get; set; } // 1.0\r\n    public string[] Fonts { get; set; } \r\n    public bool AutoLoadFonts { get; set; } // if true add any ttf/otf that is a BundleResource\r\n}\r\n\r\npublic static class PrivacyUsage\r\n{\r\n    public const string Camera = nameof(Camera);\r\n    public const string Contacts = nameof(Contacts);\r\n    public const string Health = nameof(Health);\r\n    public const string LocationAlways = nameof(LocationAlways);\r\n    public const string Location = nameof(Location);\r\n    public const string LocationWhenInUse = nameof(LocationWhenInUse);\r\n    // etc...\r\n}\r\n\r\npublic class PrivacyAttribute : Attribute\r\n{\r\n    public PrivatcyAttribute(string permission, string description) { }\r\n\r\n    public string Permission { get; } // i.e. Camera\r\n    public string Description { get; }  // We want to take fun photos of your dinner for Instagram\r\n}\r\n\r\npublic enum ApsEnvironment\r\n{\r\n    Development,\r\n    Production\r\n}\r\n\r\npublic class PushNotificationAttribute : Attribute\r\n{\r\n    public PushNotificationAttribute(ApsEnvironment environment) { }\r\n    public ApsEnvironment Environment { get; }\r\n}\r\n\r\n// Assumed to be enabled if the attribute exists\r\npublic class DataProtectionAttribute : Attribute\r\n{\r\n}\r\n\r\npublic class KeychainAttribute : Attribute\r\n{\r\n    public KeychainAttribute(string[] groups) { }\r\n    public string[] Groups { get; }\r\n}\r\n\r\npublic class AssociatedDomainsAttribute\r\n : Attribute\r\n{\r\n    public AssociatedDomainsAttribute\r\n(string[] domains) { }\r\n    public string[] Domains { get; }\r\n}\r\n\r\npublic class AppGroupsAttribute : Attribute\r\n{\r\n    public AppGroupsAttribute (string[] domains) { }\r\n    public string[] Domains { get; }\r\n}\r\n```\r\n\r\n### Putting it all together\r\n\r\nTo put this all together you might have something like the following to handle the above Use case in which you have an app with 3 environments Dev, Stage, & Production:\r\n\r\n```cs\r\n// Properties like the Version, Min OS Version would not be touched in the \r\n// Info.plist because they are not set here.\r\n#if STAGE\r\n[assembly: UIApplication(\r\n  Name = \"AwesomeAppStage\",\r\n  DisplayName = \"Awesome App (Stage)\",\r\n  Identifier = \"com.contoso.awesomeapp-stage\",\r\n  AutoLoadFonts = true\r\n)]\r\n#elif STORE\r\n[assembly: UIApplication(\r\n  Name = \"AwesomeApp\",\r\n  DisplayName = \"Awesome App\",\r\n  Identifier = \"com.contoso.awesomeapp\",\r\n  AutoLoadFonts = true\r\n)]\r\n#else\r\n[assembly: UIApplication(\r\n  Name = \"AwesomeAppDev\",\r\n  DisplayName = \"Awesome App (Dev)\",\r\n  Identifier = \"com.contoso.awesomeapp-dev\",\r\n  AutoLoadFonts = true\r\n)]\r\n#endif\r\n\r\n#if STORE\r\n[assembly: PushNotification(ApsEnvironment.Production)]\r\n#else\r\n[assembly: PushNotification(ApsEnvironment.Development)]\r\n[assembly: CFBundleUrlType(Schemes = new[] { Constants.AppCenterScheme })]\r\n#endif\r\n\r\n[assembly: DataProtection]\r\n[assembly: Keychain(new[] { \"com.contoso.awesomeapp\" })]\r\n\r\n[assembly: Privacy(PrivacyUsage.Camera, \"We need to scan a barcode\")]\r\n[assembly: Privacy(PrivacyUsage.Location, \"We track your movements and report them to your boss\")]\r\n```\r\n\r\nAt build time there should be a build task that transforms both the Info.plist and Entitlements.plist based on these attributes so that you are in essence updating your plist from code and without the need for crazy build scripts."},{"Id":"9470108160","Type":"PullRequestEvent","CreatedAt":"2019-04-18T15:00:35","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5915","RelatedDescription":"Opened pull request \"Remove private API\" (#5915) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/xamarin-macios/issues/5913"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":28,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":81,"FavoriteCount":38,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":40,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":107,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":146,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":120,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":17,"RawContent":null}]}},"RunOn":"2019-04-21T05:30:51.4865341Z","RunDurationInMilliseconds":2101}