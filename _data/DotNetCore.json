{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":170,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null},{"Title":"Modernize existing .NET apps with Windows Containers and Azure","PublishedOn":"2017-11-01T23:14:48+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/01/modernize-existing-net-apps-with-windows-containers-and-azure/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6767783059","Type":"IssuesEvent","CreatedAt":"2017-10-26T05:52:31","Actor":"HarelM","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Opened issue \"File system watcher crach\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"},{"Id":"6854176970","Type":"IssuesEvent","CreatedAt":"2017-11-14T18:00:49","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Reopened issue \"Microsoft Security Advisory CVE-2017-11770 : Malformed Certificate can cause Denial of Service\" (#44) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2017-11770 \r\n## Malformed Certificate can cause Denial of Service\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public version of .NET Core where a malformed certificate or other ASN.1 formatted data could lead to a denial of service via an infinite loop on Linux and macOS.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.8, 1.1.5 and 2.0.1. Developers are advised to update their .NET Core SDK to version 2.0.3 or 1.1.5.\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\n.NET Core applications running on Windows are not affected by this vulnerability. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed blow and is running on Linux.\r\n\r\nPlatform  | Runtime Version | Fixed runtime version\r\n----------------|----------------| -------------------------\r\nLinux | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4<br />2.0.0 |  1.0.8<br />1.1.5<br />2.0.1\r\nmacOS | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7<br />1.1.0, 1.1.1, 1.1.2, 1.1.4 |  1.0.8<br />1.1.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nAny application running against .NET Core 1.0.7 or lower, or 1.1.2 or lower, or 2.0.0 is affected. The default version of the .NET core runtime can be listed by running `dotnet --info`, which should produce output in the form of \r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n```\r\n\r\nAs this only displays the latest version of the runtime installed it may hide the fact that you have a vulnerable runtime. A complete list of runtimes can be discovered by performing a directory listing in the install root directories. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/       |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.8, 1.1.5 or 2.0.1 then any applications targeting .NET Core will be vulnerable.\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Version 1.1.5 will also install version 1.0.8 of the runtime.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Bachraty Gergely for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11770](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8585)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2017-11-14_"},{"Id":"6853282986","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:23:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/48","RelatedDescription":"Closed issue \"Reserved\" (#48) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853280485","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:35","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Closed issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853280272","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:33","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/47","RelatedDescription":"Opened issue \"Reserved\" (#47) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n\r\n"},{"Id":"6853278942","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:20","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Closed issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853278548","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:22:15","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/46","RelatedDescription":"Opened issue \"Reserved\" (#46) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853276874","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:58","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/45","RelatedDescription":"Closed issue \"Reserved\" (#45) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853274106","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Closed issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"},{"Id":"6853272527","Type":"IssuesEvent","CreatedAt":"2017-11-14T15:21:12","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/44","RelatedDescription":"Opened issue \"Reserved\" (#44) at dotnet/announcements","RelatedBody":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6893538082","Type":"PullRequestEvent","CreatedAt":"2017-11-23T04:42:56","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15193","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#15193) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"6893484680","Type":"IssuesEvent","CreatedAt":"2017-11-23T04:11:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14033","RelatedDescription":"Closed issue \"Recursive resource lookup failure in Kestrel server app for .NET Core 2.0\" (#14033) at dotnet/coreclr","RelatedBody":"We've recently ported our ASP.NET Core 2.0 application running on .NET Framework 4.7 to use .NET Core 2.0, and we are seeing critical failures in our Kestrel logs now, like this:\r\n\r\n```\r\nAssert Failure\r\nExpression: [Recursive resource lookup bug]\r\nApplication is shutting down...\r\nDescription: Infinite recursion during resource lookup within System.Private.CoreLib.  This may be a bug in System.Private.CoreLib, or potentially in certain extensibility points such as assembly resolve events or CultureInfo names.  Resource name: ArgumentNull_Generic\r\nStack Trace:\r\n  at System.SR.InternalGetResourceString(String key)\r\n  at System.SR.GetResourceString(String resourceKey, String defaultString)\r\n  at System.ArgumentNullException..ctor(String paramName)\r\n  at System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(Assembly assembly)\r\n  at System.Reflection.Assembly.LoadFromResolveHandler(Object sender, ResolveEventArgs args)\r\n  at System.AppDomain.OnAssemblyResolveEvent(RuntimeAssembly assembly, String assemblyFullName)\r\n  at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks, IntPtr ptrLoadContextBinder)\r\n  at System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(String name, CultureInfo culture, Version version, Boolean throwOnFileNotFound, StackCrawlMark& stackMark)\r\n  at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n  at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(CultureInfo culture, Dictionary`2 localResourceSets, Boolean tryParents, Boolean createIfNotExists, StackCrawlMark& stackMark)\r\n  at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo requestedCulture, Boolean createIfNotExists, Boolean tryParents, StackCrawlMark& stackMark)\r\n  at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)\r\n  at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n  at System.SR.InternalGetResourceString(String key)\r\n  at System.SR.GetResourceString(String resourceKey, String defaultString)\r\n  at System.ArgumentNullException..ctor(String paramName)\r\n  at System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(Assembly assembly)\r\n  at System.Reflection.Assembly.LoadFromResolveHandler(Object sender, ResolveEventArgs args)\r\n  at System.AppDomain.OnAssemblyResolveEvent(RuntimeAssembly assembly, String assemblyFullName)\r\n  at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks, IntPtr ptrLoadContextBinder)\r\n   at System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(String name, CultureInfo culture, Version version, Boolean throwOnFileNotFound, StackCrawlMark& stackMark)\r\n   at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(CultureInfo culture, Dictionary`2 localResourceSets, Boolean tryParents, Boolean createIfNotExists, StackCrawlMark& stackMark)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo requestedCulture, Boolean createIfNotExists, Boolean tryParents, StackCrawlMark& stackMark)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)\r\n   at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n   at System.SR.InternalGetResourceString(String key)\r\n   at System.SR.GetResourceString(String resourceKey, String defaultString)\r\n   at System.Threading.Tasks.TaskCanceledException..ctor(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nWe are using en-AU as our default culture.\r\n \r\nThis stack trace appears to identify a known issue that has been resolved but not released ([dotnet/coreclr/issues/12668](https://github.com/dotnet/coreclr/issues/12668). \r\n\r\nHowever, none of the following proposed workarounds in that issue and related issue ([#23608](https://github.com/dotnet/corefx/issues/23608)) worked for us:\r\n\r\n1: Adding `new ArgumentException();` into the main method of Program.cs before creating a WebHost.\r\n2. Changing the OS culture to United States, or setting CurrentUICulture to en-US.\r\n\r\nWill there be a service release to fix this issue? Any idea when that release will be available? Is there a pre-release build available that I could use to see if the issue is resolved in that build (even though not released yet?)\r\n\r\nThanks,\r\n\r\nSam"},{"Id":"6893467193","Type":"IssuesEvent","CreatedAt":"2017-11-23T04:01:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15186","RelatedDescription":"Closed issue \"RuntimeBinderException when using Task extension method on the result of an async method in a call tree that includes a dynamic parameter\" (#15186) at dotnet/coreclr","RelatedBody":"I ran into a very specific case where the clr appears to not properly resolve extension methods at runtime for code involving both dynamics and async and throws a RuntimeBinderException.\r\n\r\nCLI version: 2.0.3\r\nCLR versioin: 2.0.3\r\n\r\nIf the code below is added to a netcoreapp2.0 console project it will reproduce the exception.\r\n\r\nProgram.cs\r\n```csharp\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace RuntimeBinderException\r\n{\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            Go(args).Wait();\r\n\r\n            Console.WriteLine(\"Should not get here.\");\r\n        }\r\n\r\n        public static async Task Go(dynamic thing)\r\n        {\r\n            await DoSomething(thing).TaskExtension();\r\n        }\r\n\r\n        public static async Task DoSomething(object parameter)\r\n        {\r\n            // The function needs only be declared async - it doesn't need to actually await anything\r\n        }\r\n    }\r\n}\r\n\r\nTaskExtensions.cs\r\n```csharp\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace RuntimeBinderException\r\n{\r\n    public static class TaskExtensions\r\n    {\r\n        public static async Task TaskExtension(this Task task)\r\n        {\r\n            await task;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe exception is:\r\n>Unhandled Exception: System.AggregateException: One or more errors occurred. ('System.Threading.Tasks.Task' does not contain a definition for 'TaskExtension') ---> Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Threading.Tasks.Task' does not contain a definition for 'TaskExtension'\r\n>   at CallSite.Target(Closure , CallSite , Object )\r\n>   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n>   at RuntimeBinderException.Program.<Go>d__1.MoveNext() in /mnt/c/_Local/Playground/RuntimeBinderException/RuntimeBinderException/Program.cs:line 17\r\n>   --- End of inner exception stack trace ---\r\n>   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n>   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n>   at System.Threading.Tasks.Task.Wait()\r\n>   at RuntimeBinderException.Program.Main(String[] args) in /mnt/c/_Local/Playground/RuntimeBinderException/RuntimeBinderException/Program.cs:line 10\r\n\r\n\r\nI have included a zip archive of the solution to reproduce the issue.\r\n[RuntimeBinderException.zip](https://github.com/dotnet/coreclr/files/1497723/RuntimeBinderException.zip)"},{"Id":"6893287046","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:30:34","Actor":"rartemev","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15192","RelatedDescription":"Opened pull request \"[WIP] test run\" (#15192) at dotnet/coreclr","RelatedBody":""},{"Id":"6893285667","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:29:55","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15184","RelatedDescription":"Merged pull request \"Move Nullable and string normalization to shared CoreLib partition\" (#15184) at dotnet/coreclr","RelatedBody":""},{"Id":"6893261660","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:18:08","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15191","RelatedDescription":"Opened pull request \"Removed Check Invalid Path Chars\" (#15191) at dotnet/coreclr","RelatedBody":" issue - #25450\r\ncorefx pr - #25458  "},{"Id":"6893245951","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:10:07","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15190","RelatedDescription":"Opened pull request \"[Arm64] Allow IsContainableMemoryOp() use\" (#15190) at dotnet/coreclr","RelatedBody":"I want to use `IsContainableMemoryOp()` in ARM64 when I implement containing SIMD `getItem()` `this`\r\n\r\n@dotnet/jit-contrib @dotnet/arm64-contrib PTAL"},{"Id":"6893181739","Type":"PullRequestEvent","CreatedAt":"2017-11-23T01:37:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15174","RelatedDescription":"Merged pull request \"[Arm64] support GBDJIT debug frame\" (#15174) at dotnet/coreclr","RelatedBody":"@jkotas Please assign to appropriate reviewer.  "},{"Id":"6893166511","Type":"IssuesEvent","CreatedAt":"2017-11-23T01:29:56","Actor":"bording","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15189","RelatedDescription":"Opened issue \"AssemblyName.GetAssemblyName throws exceptions on Linux and macOS\" (#15189) at dotnet/coreclr","RelatedBody":"Given the following program:\r\n```csharp\r\nclass Program\r\n{\r\n    static Task Main()\r\n    {\r\n        var assembliesString = (string)AppContext.GetData(\"TRUSTED_PLATFORM_ASSEMBLIES\");\r\n        var assemblies = assembliesString.Split(Path.PathSeparator);\r\n\r\n        var tasks = new List<Task>();\r\n\r\n        for (int i = 0; i < 100; i++)\r\n        {\r\n            tasks.Add(Task.Run(() => GetAssemblyNames(assemblies)));\r\n        }\r\n\r\n        return Task.WhenAll(tasks);\r\n    }\r\n\r\n    static void GetAssemblyNames(string[] assemblies)\r\n    {\r\n        foreach (var assembly in assemblies)\r\n        {\r\n            var assemblyName = AssemblyName.GetAssemblyName(assembly);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe behavior varies depending on what OS it is run on. It works perfectly on Windows. On Linux and macOS, the calls to GetAssemblyName eventually start failing. I've seen a variety of exceptions.\r\n\r\non macOS I've see the following exceptions:\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly '/usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.3/System.Security.Cryptography.Encoding.dll'. A device attached to the system is not functioning.\r\n (Exception from HRESULT: 0x8007001F)\r\n```\r\n```\r\nSystem.IO.FileLoadException: Could not load file or assembly '/usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.0.3/System.Diagnostics.FileVersionInfo.dll'. The system cannot open the file.\r\n (Exception from HRESULT: 0x80070004)\r\n```\r\n\r\non Linux I've seen:\r\n```\r\nSystem.Runtime.InteropServices.COMException (0x8007000C) : The access code is invalid.\r\n(Exception from HRESULT: 0x8007000C)\r\n```\r\n```\r\nSystem.OutOfMemoryException : Exception of type 'System.OutOfMemoryException' was thrown.\r\n```\r\n\r\nThe stack traces all show the exceptions coming from `System.Reflection.AssemblyName.nGetFileInformation(String s)`. The assemblies that end up throwing vary from run to run, so the ones listed above are just examples.\r\n\r\n\r\nI've run my tests using the 2.0.3 SDK and runtime, on the following OSes:\r\n- Windows 10 1709 16299.64\r\n- macOS 10.13\r\n- Ubuntu 16.04\r\n"},{"Id":"6893157955","Type":"PullRequestEvent","CreatedAt":"2017-11-23T01:25:28","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15188","RelatedDescription":"Opened pull request \"Update CoreClr, CoreFx to preview1-25923-01, preview1-25922-12, respectively (master)\" (#15188) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6893484316","Type":"PullRequestEvent","CreatedAt":"2017-11-23T04:11:18","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8091","RelatedDescription":"Opened pull request \"Update F# for VS2017.6\" (#8091) at dotnet/cli","RelatedBody":"Update the compiler for the dotnet cli in dotnet fsi.\r\n\r\n\r\n"},{"Id":"6893208643","Type":"PullRequestEvent","CreatedAt":"2017-11-23T01:51:03","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8089","RelatedDescription":"Merged pull request \"Changing the core setup blob url to one that does not use a CDN\" (#8089) at dotnet/cli","RelatedBody":"Changing the core setup blob url to one that does not use a CDN to try and see if that gets us over signing problems we are seeing.\r\n"},{"Id":"6893068286","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:40:50","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8088","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25922-04 (master)\" (#8088) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6893064284","Type":"IssuesEvent","CreatedAt":"2017-11-23T00:38:54","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7360","RelatedDescription":"Closed issue \"\"Manage User Secrets\" in VS context menu for Console Apps?\" (#7360) at dotnet/cli","RelatedBody":"Is there a reason why .NET Core Console Apps don't show the \"Manage User Secrets\" option in the project context menu (in Visual Studio), like Web Applications do? I was able to use the dotnet user-secrets command to set them, but it'd be nice to have the same experience that Web Application have. I wanted to copy-paste a list of several of secrets and instead had to do them one-by-one in the command line.\r\n\r\nIf this is just a matter of putting the work into it, I might give it a shot."},{"Id":"6893024619","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:20:32","Actor":"safern","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8090","RelatedDescription":"Opened pull request \"Update dependencies and fix cli update dependencies build\" (#8090) at dotnet/cli","RelatedBody":"Updated the csproj to target 2.1 because the script downloads the sdk from master and ran the script locally. \r\n\r\ncc: @livarcocc @dagood "},{"Id":"6893008675","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:13:18","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8089","RelatedDescription":"Opened pull request \"Changing the core setup blob url to one that does not use a CDN\" (#8089) at dotnet/cli","RelatedBody":"Changing the core setup blob url to one that does not use a CDN to try and see if that gets us over signing problems we are seeing.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6891923193","Type":"IssuesEvent","CreatedAt":"2017-11-22T18:51:46","Actor":"mb236","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/591","RelatedDescription":"Opened issue \".NET Standard 2 Library missing assembly error\" (#591) at dotnet/standard","RelatedBody":"I'm currently working on migrating a PCL to a .NET Standard 2.0 Library. After I have readded all NuGet dependencies I get the following error:\r\n`The type 'IReflectable' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Reflection, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nThe strange part about it is that i get this error on exactly four lines in the project. If I comment these lines out, the errors are gone and compilation is successful. Is there any fix for this problem?"},{"Id":"6887314583","Type":"PullRequestEvent","CreatedAt":"2017-11-21T22:52:11","Actor":"jcagme","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/589","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02221-02 (master)\" (#589) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6893597959","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:17:28","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24542","RelatedDescription":"Closed issue \"System.Diagnostics.Process.StartTime can be improved in Windows\" (#24542) at dotnet/corefx","RelatedBody":"When Process instance is created using Process.GetProcesses() , it calls GetProcessInfos method inside.\r\nIn WIndows it calls to internal [NtQuerySystemInformation](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.Process/src/System/Diagnostics/ProcessManager.Win32.cs) which returns process creation time.\r\n\r\n[ProcessInfo](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.Process/src/System/Diagnostics/ProcessInfo.cs) can be initialized using this value and pass it into Process.\r\n\r\nThis allows getting StartTime property without any exception thrown."},{"Id":"6893597176","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:17:03","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24567","RelatedDescription":"Closed issue \"Strange behavior of Directory.CreateDirectory\" (#24567) at dotnet/corefx","RelatedBody":"I found strange behaviors in `Directory.CreateDirectory` in my .net core2.0 app. My test code looks like:\r\n```c#\r\nvar length255 = new string(Enumerable.Repeat('a', byte.MaxValue).ToArray());\r\n\r\nvar lastLength = 225;\r\nvar last = new string(Enumerable.Repeat('a', lastLength).ToArray());\r\n\r\nvar path = Path.Combine(@\"D:\\\", Path.Combine(Enumerable.Repeat(length255, 127).ToArray()), last);            \r\n            \r\ntry\r\n{\r\n    Console.WriteLine(path.Length);\r\n    Directory.CreateDirectory(path);\r\n}\r\ncatch (Exception e)\r\n{\r\n    Console.WriteLine(e.GetType());\r\n    Console.WriteLine(Directory.Exists(path));\r\n}\r\n```\r\nI change the value of `lastLength` a few times, here is the question:\r\nQ1: `lastLength = 224, path.Length = 32739` everything is working fine. What's the magic of 32739? \r\n\r\nQ2: `225 <= lastLength <= 247, 32740 <= path.Length <= 32762` throws `System.IO.PathTooLongException`, meanwhile `Directory.Exists` prints `False`. However I can see the first few level directories are created(not all directories), which means the creation is partially done with an exception. Why?\r\n\r\nQ3:  `248 <= lastLength <= 251, 32763 <= path.Length <= 32766` cases are almost the same as those in Q2, except the exception is `System.IO.DirectoryNotFoundException`, why?\r\n\r\n`lastLength > = 252, path.Length >= 32767` fails with `System.IO.PathTooLongException`, no directory is created, which is as expected.\r\n\r\n[EDIT] Add C# syntax highlight by @karelz"},{"Id":"6893595499","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:16:05","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24598","RelatedDescription":"Closed issue \"System.Diagnostics.Tests.ProcessCollectionTests.TestThreadCollectionBehavior failed in CI\" (#24598) at dotnet/corefx","RelatedBody":"Failed test: System.Diagnostics.Tests.ProcessCollectionTests.TestThreadCollectionBehavior\r\n\r\nConfiguration: \r\nosx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/testReport/System.Diagnostics.Tests/ProcessCollectionTests/TestThreadCollectionBehavior/\r\n\r\nMESSAGE:\r\n~~~\r\nSystem.IndexOutOfRangeException : Index was outside the bounds of the array.\r\n~~~\r\n\r\nSTACK TRACE:\r\n~~~\r\nat System.Diagnostics.Tests.ProcessCollectionTests.TestThreadCollectionBehavior() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/tests/ProcessCollectionTests.cs:line 95\r\n~~~\r\n"},{"Id":"6893595176","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:15:53","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24599","RelatedDescription":"Closed issue \"System.Diagnostics.Tests.ProcessStartInfoTests.TestEnvironmentOfChildProcess failed in CI\" (#24599) at dotnet/corefx","RelatedBody":"Failed test: System.Diagnostics.Tests.ProcessStartInfoTests.TestEnvironmentOfChildProcess \r\n\r\nConfiguration: osx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/testReport/System.Diagnostics.Tests/ProcessStartInfoTests/TestEnvironmentOfChildProcess/\r\n\r\nMESSAGE:\r\nExpected: HUDSON_COOKIE=2b6c4278-574d-442d-ad2f-c878bb995f20, WORKSPACE=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug, LANG=en_US.UTF-8, BUILD_TAG=jenkins-dotnet_corefx-master-osx10.12_debug-3296, GitBranchOrCommit=*/master, BUILD_NUMBER=3296, JOB_DISPLAY_URL=https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/display/redirect, GIT_PREVIOUS_COMMIT=3143b836af48be68d3b02b45188b134dca25b27c, EXECUTION_DIR=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/bin/tests/System.Diagnostics.Process.Tests/netcoreapp-OSX-Debug-x64, JENKINS_SERVER_COOKIE=637e320b5b282ff8, HOME=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/tempHome, XPC_FLAGS=0x0, BranchName=master, SHLVL=7, QualifiedRepoName=dotnet/corefx, BUILD_TIMESTAMP=2017-10-11 21:36:27 PDT, HUDSON_SERVER_COOKIE=637e320b5b282ff8, GithubProjectName=corefx, GIT_BRANCH=origin/master, NODE_LABELS=dci-mac-build-054 dtap osx-10.12, OLDPWD=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/tests, JENKINS_HOME=/jenkins, BUILD_DISPLAY_NAME=#3296, GIT_PREVIOUS_SUCCESSFUL_COMMIT=3143b836af48be68d3b02b45188b134dca25b27c, _=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/bin/testhost/netcoreapp-OSX-Debug-x64//dotnet, CORECLR_SERVER_GC=0, com.apple.java.jvmTask=CommandLine, JAVA_ARCH=x86_64, HUDSON_URL=https://ci.dot.net/, BUILD_URL=https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/, __BUILDTOOLS_USE_CSPROJ=true, AutoSaveReproEnv=false, MSBuildLoadMicrosoftTargetsReadOnly=true, XPC_SERVICE_NAME=0, MSBuildForwardPropertiesFromChild=TargetPath, JENKINS_URL=https://ci.dot.net/, LC_ALL=en_US.UTF-8, RUNTIME_PATH=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/bin/testhost/netcoreapp-OSX-Debug-x64/, GIT_COMMIT=882303fc6863f3cfd86c6860c37fd898905d781f, BUILD_ID=3296, PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin, NODE_NAME=dci-mac-build-054, EXECUTOR_NUMBER=0, DOTNET_CLI_TELEMETRY_PROFILE=IsInternal_CIServer;dotnet/corefx, GIT_URL=https://github.com/dotnet/corefx.git, __CF_USER_TEXT_ENCODING=0x0:0:0, JOB_URL=https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/, JAVA_MAIN_CLASS_66742=hudson.remoting.Launcher, HUDSON_HOME=/jenkins, JOB_BASE_NAME=osx10.12_debug, TestEnvironmentOfChildProcess_SpecialStuff=ሴ\\n噸, RUN_CHANGES_DISPLAY_URL=https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/display/redirect?page=changes, PWD=/Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/bin/tests/System.Diagnostics.Process.Tests/netcoreapp-OSX-Debug-x64, RUN_DISPLAY_URL=https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/display/redirect, JOB_NAME=dotnet_corefx/master/osx10.12_debug, GithubOrgName=dotnet\\n\r\n\r\nActual: \\n\r\nExpected: True\\n\r\nActual: False\r\n\r\nSTACK TRACE:\r\nat System.Diagnostics.Tests.ProcessStartInfoTests.TestEnvironmentOfChildProcess() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/tests/ProcessStartInfoTests.cs:line 225"},{"Id":"6893594723","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:15:37","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24603","RelatedDescription":"Closed issue \"System.Diagnostics.Tests.ProcessWaitingTests.SingleProcess_EnableRaisingEvents_CorrectExitCode failed in CI\" (#24603) at dotnet/corefx","RelatedBody":"Failed test: System.Diagnostics.Tests.ProcessWaitingTests.SingleProcess_EnableRaisingEvents_CorrectExitCode\r\n\r\nConfiguration: osx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/testReport/System.Diagnostics.Tests/ProcessWaitingTests/SingleProcess_EnableRaisingEvents_CorrectExitCode_exitCode__0_/\r\n\r\nMESSAGE:\r\n~~~\r\nAssert.Equal() Failure\\nExpected: 0\\nActual: 131\r\n~~~\r\n\r\nSTACK TRACE:\r\n~~~\r\nat System.Diagnostics.Tests.ProcessWaitingTests.<SingleProcess_EnableRaisingEvents_CorrectExitCode>d__6.MoveNext() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/tests/ProcessWaitingTests.cs:line 123 --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130 \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152 --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130 \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152 --- End of stack trace from previous location where exception was thrown --- \r\nat System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130 \r\nat System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /Users/buildagent/agent/_work/153/s/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\r\n~~~"},{"Id":"6893594034","Type":"IssuesEvent","CreatedAt":"2017-11-23T05:15:12","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24602","RelatedDescription":"Closed issue \"System.Diagnostics.Tests.ProcessThreadTests.TestThreadStateProperty failed in CI\" (#24602) at dotnet/corefx","RelatedBody":"Failed test: System.Diagnostics.Tests.ProcessThreadTests.TestThreadStateProperty \r\n\r\nConfiguration: osx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3296/testReport/System.Diagnostics.Tests/ProcessThreadTests/TestThreadStateProperty/\r\n\r\nMESSAGE:\r\n~~~\r\nSystem.ArgumentOutOfRangeException : Index was out of range. Must be non-negative and less than the size of the collection.\\nParameter name: index\r\n~~~\r\n\r\nSTACK TRACE:\r\n~~~\r\nat System.Collections.ArrayList.get_Item(Int32 index) \r\nat System.Diagnostics.ProcessThreadCollection.get_Item(Int32 index) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs:line 35 \r\nat System.Diagnostics.Tests.ProcessThreadTests.TestThreadStateProperty() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Diagnostics.Process/tests/ProcessThreadTests.cs:line 199\r\n~~~"},{"Id":"6893512607","Type":"PullRequestEvent","CreatedAt":"2017-11-23T04:27:47","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/25457","RelatedDescription":"Closed pull request \"Crc32 property for Zip Exposed\" (#25457) at dotnet/corefx","RelatedBody":"Issue- #22292 "},{"Id":"6893467167","Type":"IssuesEvent","CreatedAt":"2017-11-23T04:01:53","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/25461","RelatedDescription":"Opened issue \"RuntimeBinderException when using Task extension method on the result of an async method in a call tree that includes a dynamic parameter\" (#25461) at dotnet/corefx","RelatedBody":"_From @bungeemonkee on November 22, 2017 23:31_\n\nI ran into a very specific case where the clr appears to not properly resolve extension methods at runtime for code involving both dynamics and async and throws a RuntimeBinderException.\r\n\r\nCLI version: 2.0.3\r\nCLR versioin: 2.0.3\r\n\r\nIf the code below is added to a netcoreapp2.0 console project it will reproduce the exception.\r\n\r\nProgram.cs\r\n```csharp\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace RuntimeBinderException\r\n{\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            Go(args).Wait();\r\n\r\n            Console.WriteLine(\"Should not get here.\");\r\n        }\r\n\r\n        public static async Task Go(dynamic thing)\r\n        {\r\n            await DoSomething(thing).TaskExtension();\r\n        }\r\n\r\n        public static async Task DoSomething(object parameter)\r\n        {\r\n            // The function needs only be declared async - it doesn't need to actually await anything\r\n        }\r\n    }\r\n}\r\n\r\nTaskExtensions.cs\r\n```csharp\r\nusing System.Runtime.CompilerServices;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace RuntimeBinderException\r\n{\r\n    public static class TaskExtensions\r\n    {\r\n        public static async Task TaskExtension(this Task task)\r\n        {\r\n            await task;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe exception is:\r\n>Unhandled Exception: System.AggregateException: One or more errors occurred. ('System.Threading.Tasks.Task' does not contain a definition for 'TaskExtension') ---> Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Threading.Tasks.Task' does not contain a definition for 'TaskExtension'\r\n>   at CallSite.Target(Closure , CallSite , Object )\r\n>   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n>   at RuntimeBinderException.Program.<Go>d__1.MoveNext() in /mnt/c/_Local/Playground/RuntimeBinderException/RuntimeBinderException/Program.cs:line 17\r\n>   --- End of inner exception stack trace ---\r\n>   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n>   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n>   at System.Threading.Tasks.Task.Wait()\r\n>   at RuntimeBinderException.Program.Main(String[] args) in /mnt/c/_Local/Playground/RuntimeBinderException/RuntimeBinderException/Program.cs:line 10\r\n\r\n\r\nI have included a zip archive of the solution to reproduce the issue.\r\n[RuntimeBinderException.zip](https://github.com/dotnet/coreclr/files/1497723/RuntimeBinderException.zip)\n\n_Copied from original issue: dotnet/coreclr#15186_"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6893352385","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:03:07","Actor":"weitzhandler","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23366","RelatedDescription":"Opened issue \"Visual Studio interactive window doesn't show exception types.\" (#23366) at dotnet/roslyn","RelatedBody":"**Version Used**: VS 15.4.4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open up C# Interactive\r\n2. Type `throw new InvalidOperationException(\"An exception occurred.\");`\r\n3. Only the exception message is printed, but there is no information on what type of exception was thrown.\r\n\r\n**Expected Behavior**:\r\nPlease include the exception type when printing an exception in the interactive window."},{"Id":"6893341360","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:57:50","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23365","RelatedDescription":"Opened pull request \"WIP: Enc active statements vs deps\" (#23365) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n**Bugs this fixes:**\r\n\r\n(either VSO or GitHub links)\r\n\r\n**Workarounds, if any**\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n**Risk**\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n**Performance impact**\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n**Is this a regression from a previous update?**\r\n\r\n**Root cause analysis:**\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n**How was the bug found?**\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n**Test documentation updated?**\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n"},{"Id":"6893083748","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:48:31","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/17857","RelatedDescription":"Merged pull request \"Provider a user option to enable/disable the 'Use auto property' analyzer\" (#17857) at dotnet/roslyn","RelatedBody":"Fixes https://developercommunity.visualstudio.com/content/problem/23029/no-option-to-disable-ide0032-code-style-warning.html"},{"Id":"6893081962","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:47:39","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23292","RelatedDescription":"Merged pull request \"Enabled 'Use Local Function' refactoring for delegate which is invoked with Invoke\" (#23292) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\n\r\nUse Local Function refactoring doesn't work when delegate is invoked with Invoke\r\n\r\n**Bugs this fixes:**\r\n\r\nFixes #23150\r\n"},{"Id":"6893081960","Type":"IssuesEvent","CreatedAt":"2017-11-23T00:47:39","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23150","RelatedDescription":"Closed issue \"Use Local Function refactoring doesn't work when delegate is invoked with Invoke\" (#23150) at dotnet/roslyn","RelatedBody":"The following test shows a case where the Use Local Function refactoring is not available. However, since the *only* member invoked on the delegate is `Invoke`, the refactoring could be provided.\r\n\r\n⚠️ A new test will need to be created showing that the refactoring is still not offered if another member is invoked on the delegate, such as `ToString()`.\r\n\r\nhttps://github.com/dotnet/roslyn/blob/3a34dce98a5482652f9976f0fe482a0b54ab5215/src/EditorFeatures/CSharpTest/UseLocalFunction/UseLocalFunctionTests.cs#L1438-L1459"},{"Id":"6893079147","Type":"IssuesEvent","CreatedAt":"2017-11-23T00:46:15","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23269","RelatedDescription":"Closed issue \"Add Argument Name does not escape keywords\" (#23269) at dotnet/roslyn","RelatedBody":"**Version Used**: 15.5 Preview 4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Use the following code:\r\n\r\n    ```csharp\r\n    Action action = () => { };\r\n    action.BeginInvoke(null, null);\r\n    ```\r\n\r\n1. Use the **Add argument name 'object'** refactoring on the second argument to `BeginInvoke`\r\n\r\n**Expected Behavior**:\r\n\r\n```csharp\r\naction.BeginInvoke(null, @object: null);\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```csharp\r\naction.BeginInvoke(null, object: null);\r\n```\r\n"},{"Id":"6893079145","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:46:14","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23300","RelatedDescription":"Merged pull request \"Escape keyword argument names in 'add argument name' refactoring\" (#23300) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/23269"},{"Id":"6892996497","Type":"IssuesEvent","CreatedAt":"2017-11-23T00:08:12","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21873","RelatedDescription":"Closed issue \"Roslyn.sln does not build\" (#21873) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisualStudio 2015 update 3 + extensibility tools update 3\r\nTested branches microupdate and master \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. clone the repo (optional: switch to branch microupdate)\r\n2. run restore.cmd\r\n3. Open / build roslyn.sln\r\n\r\n**Expected Behavior**:\r\nbuild\r\n**Actual Behavior**:\r\n```\r\n1>------ Build started: Project: Metadata, Configuration: Debug Any CPU ------\r\n2>------ Build started: Project: Immutable, Configuration: Debug Any CPU ------\r\n3>------ Skipped Build: Project: CommonCoreClrRuntime, Configuration: Debug x64 ------\r\n3>Project not selected to build for this solution configuration \r\n4>------ Build started: Project: Composition, Configuration: Debug Any CPU ------\r\n5>------ Build started: Project: DiaSymReader, Configuration: Debug Any CPU ------\r\n6>------ Build started: Project: VisualStudioEditor, Configuration: Debug Any CPU ------\r\n7>------ Build started: Project: VisualStudioText, Configuration: Debug Any CPU ------\r\n8>------ Build started: Project: xUnit.net, Configuration: Debug Any CPU ------\r\n9>------ Build started: Project: DeployCompilerGeneratorToolsRuntime, Configuration: Debug Any CPU ------\r\n**9>CSC : error CS0006: Metadata file 'D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CoreClr\\CommonCoreClrRuntime_DoNotUse.dll' could not be found**\r\n10>------ Build started: Project: VisualStudio (Dependencies\\VisualStudio), Configuration: Debug Any CPU ------\r\n11>------ Build started: Project: CodeAnalysis, Configuration: Debug Any CPU ------\r\n11>  CodeAnalysis -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Microsoft.CodeAnalysis.dll\r\n12>------ Build started: Project: Microsoft.DiaSymReader.PortablePdb, Configuration: Debug Any CPU ------\r\n12>  Microsoft.DiaSymReader.PortablePdb -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Microsoft.DiaSymReader.PortablePdb.dll\r\n13>------ Build started: Project: Moq.net, Configuration: Debug Any CPU ------\r\n14>------ Build started: Project: Workspaces (Workspaces\\Workspaces), Configuration: Debug Any CPU ------\r\n14>  Workspaces -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Microsoft.CodeAnalysis.Workspaces.dll\r\n15>------ Build started: Project: CSharpCodeAnalysis, Configuration: Debug Any CPU ------\r\n15>  '\"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\CoreRun.exe\"' is not recognized as an internal or external command,\r\n15>  operable program or batch file.\r\n15>D:\\Protos\\c#\\roslyn\\roslyn\\build\\Targets\\GenerateCompilerInternals.targets(64,5): error MSB3073: The command \"\"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\CoreRun.exe\" \"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\CSharpSyntaxGenerator.exe\" \"Syntax\\Syntax.xml\" \"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Obj\\CSharpCodeAnalysis\\Debug\\Syntax.xml.Generated.cs\"\" exited with code 9009.\r\n16>------ Build started: Project: InteractiveWindow, Configuration: Debug Any CPU ------\r\n16>  InteractiveWindow -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Microsoft.VisualStudio.InteractiveWindow.dll\r\n17>------ Build started: Project: BasicCodeAnalysis, Configuration: Debug Any CPU ------\r\n17>  '\"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\CoreRun.exe\"' is not recognized as an internal or external command,\r\n17>  operable program or batch file.\r\n17>D:\\Protos\\c#\\roslyn\\roslyn\\build\\Targets\\GenerateCompilerInternals.targets(64,5): error MSB3073: The command \"\"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\CoreRun.exe\" \"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\CompilerGeneratorTools\\VBSyntaxGenerator.exe\" \"Syntax\\Syntax.xml\" \"D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Obj\\BasicCodeAnalysis\\Debug\\Syntax.xml.Generated.vb\"\" exited with code 9009.\r\n18>------ Build started: Project: PdbUtilities, Configuration: Debug Any CPU ------\r\n18>  PdbUtilities -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Roslyn.Test.PdbUtilities.dll\r\n19>------ Build started: Project: CompilerTestResources, Configuration: Debug Any CPU ------\r\n19>  CompilerTestResources -> D:\\Protos\\c#\\roslyn\\roslyn\\Binaries\\Debug\\Roslyn.Compilers.Test.Resources.dll\r\n20>------ Build started: Project: Scripting (Scripting\\Scripting), Configuration: Debug Any CPU ------\r\n```\r\n\r\netc."},{"Id":"6892993136","Type":"IssuesEvent","CreatedAt":"2017-11-23T00:06:38","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22602","RelatedDescription":"Closed issue \"Flaky build: The type or namespace name 'Loader' does not exist in the namespace 'System.Runtime'\" (#22602) at dotnet/roslyn","RelatedBody":"```\r\nHosting/AssemblyLoader/CoreAssemblyLoaderImpl.cs(7,22): error CS0234: The type or namespace name 'Loader' does not exist in the namespace 'System.Runtime' (are you missing an assembly reference?)\r\n```\r\n\r\nExample PRs with repro:\r\n\r\n* https://github.com/dotnet/roslyn/pull/22151\r\n* https://github.com/dotnet/roslyn/pull/22424\r\n* https://github.com/dotnet/roslyn/pull/22487\r\n* https://github.com/dotnet/roslyn/pull/22527\r\n\r\nRetesting usually resolves it."},{"Id":"6892953548","Type":"PullRequestEvent","CreatedAt":"2017-11-22T23:49:22","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23364","RelatedDescription":"Opened pull request \"Remove background compiler from TestWorkspace\" (#23364) at dotnet/roslyn","RelatedBody":"Test only change"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6893532880","Type":"PullRequestEvent","CreatedAt":"2017-11-23T04:39:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4998","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#4998) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6893413571","Type":"PullRequestEvent","CreatedAt":"2017-11-23T03:34:05","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4999","RelatedDescription":"Opened pull request \"enabled thread static fields in WebAssembly\" (#4999) at dotnet/corert","RelatedBody":"@morganbr \r\nI've enabled thread static fields, it's generating quite a bit more code as a result and it ended up pulling in some weirdness around virtual calls to System.Type. The EEType wasnt getting output, so I've put in a dependency for the owning type when calling a virtual method. If you have any ideas for a different place to trigger the reference for the EEType that works too."},{"Id":"6893288436","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:31:15","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4998","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4998) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6893103513","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:58:10","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4996","RelatedDescription":"Merged pull request \"Delete unnecessary abstractions\" (#4996) at dotnet/corert","RelatedBody":""},{"Id":"6893052591","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:33:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4995","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#4995) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6892998022","Type":"PullRequestEvent","CreatedAt":"2017-11-23T00:08:52","Actor":"pentp","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4997","RelatedDescription":"Opened pull request \"[WIP] Improved System.Decimal performance\" (#4997) at dotnet/corert","RelatedBody":"This is a continuation of #4452 and covers rounding and casting. I unified all rounding functions into a single fast one (loosely based on `InternalRoundFromZero`).\r\n\r\n@jkotas Is it possible to somehow reference `System.Runtime.Intrinsics.X86` in CoreRT? I moved `LeadingZeroCount` to a separate function and on CoreCLR successfully used `X86.Lzcnt`.\r\n\r\n_TODO: perf tables and new tests in CoreFX_"},{"Id":"6892943828","Type":"PullRequestEvent","CreatedAt":"2017-11-22T23:45:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4996","RelatedDescription":"Opened pull request \"Delete unnecessary abstractions\" (#4996) at dotnet/corert","RelatedBody":""},{"Id":"6892928241","Type":"PullRequestEvent","CreatedAt":"2017-11-22T23:38:53","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4995","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4995) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6892910687","Type":"IssuesEvent","CreatedAt":"2017-11-22T23:31:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4994","RelatedDescription":"Opened issue \"JIT test errors on Unix when changing decimal to explicit layout\" (#4994) at dotnet/corert","RelatedBody":"_From @stephentoub on November 22, 2017 5:13_\n\nAs part of unifying decimal's formatting code between coreclr and corert, @jkotas suggested I make decimal have an explicit layout, as it is in corert.  In doing so, a handful of JIT tests started failing:\r\n```\r\nJIT.Directed.coverage.oldtests.lclfldadd_cs_r.lclfldadd_cs_r\r\nJIT.Directed.perffix.primitivevt.mixed1_cs_ro.mixed1_cs_ro\r\nJIT.Methodical.fp.exgen.1000w1d_cs_r.1000w1d_cs_r\r\nJIT.Methodical.fp.exgen.1000w1d_cs_ro.1000w1d_cs_ro\r\nJIT.Methodical.fp.exgen.1000w1d_cs_do.1000w1d_cs_do\r\nJIT.Methodical.fp.exgen.1000w1d_cs_d.1000w1d_cs_d\r\nJIT.Methodical.fp.exgen.10w5d_cs_d.10w5d_cs_d\r\nJIT.Methodical.fp.exgen.10w5d_cs_do.10w5d_cs_do\r\nJIT.Methodical.fp.exgen.10w5d_cs_ro.10w5d_cs_ro\r\nJIT.Methodical.fp.exgen.200w1d-02_cs_do.200w1d-02_cs_do\r\nJIT.Methodical.fp.exgen.10w5d_cs_r.10w5d_cs_r\r\nJIT.Methodical.fp.exgen.200w1d-02_cs_ro.200w1d-02_cs_ro\r\nJIT.Directed.perffix.primitivevt.mixed1_cs_do.mixed1_cs_do\r\n```\r\nThe failures would seem to indicate a JIT/runtime bug, as they're frequently eminating from code other than decimal, suggesting that something is getting corrupted, e.g.\r\n```\r\nFAILED   - JIT/Methodical/fp/exgen/200w1d-02_cs_ro/200w1d-02_cs_ro.sh\r\n               BEGIN EXECUTION\r\n               /mnt/j/workspace/dotnet_coreclr/master/checked_ubuntu_tst_prtest/bin/tests/Windows_NT.x64.Checked/Tests/coreoverlay/corerun 200w1d-02_cs_ro.exe\r\n\r\n               Unhandled Exception: System.OverflowException: Value was either too large or too small for an Int32.\r\n                  at System.Convert.ThrowInt32OverflowException()\r\n                  at System.Convert.ToInt32(Int64 value)\r\n                  at testout1.Func_0()\r\n                  at testout1.Main()\r\n               ./200w1d-02_cs_ro.sh: line 243: 101339 Aborted                 (core dumped) $_DebuggerFullPath \"$CORE_ROOT/corerun\" $ExePath $CLRTestExecutionArguments\r\n               Expected: 100\r\n               Actual: 134\r\n               END EXECUTION - FAILED\r\n```\r\nThese failures are only occurring on Unix.\r\n\r\nHere's the commit that undoes the explicit layout; reverting this commit yields the failures.\r\nhttps://github.com/dotnet/coreclr/pull/15145/commits/dc35586ecd37be9d2517244175da8b84a1237005\n\n_Copied from original issue: dotnet/coreclr#15159_"},{"Id":"6892014217","Type":"PullRequestEvent","CreatedAt":"2017-11-22T19:13:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4992","RelatedDescription":"Merged pull request \"Implement ISpanFormattable on Decimal\" (#4992) at dotnet/corert","RelatedBody":"Opts `Decimal` in to the optimization in `StringBuilder.AppendFormat`.\r\n\r\nRelated: https://github.com/dotnet/coreclr/pull/15170"},{"Id":"6891949760","Type":"PullRequestEvent","CreatedAt":"2017-11-22T18:58:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4993","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4993) at dotnet/corert","RelatedBody":""},{"Id":"6891948449","Type":"PullRequestEvent","CreatedAt":"2017-11-22T18:57:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4993","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4993) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"6893453650","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:54:56","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1623","RelatedDescription":"Closed issue \"SolutionDir is not resolved during dotnet restore\" (#1623) at dotnet/sdk","RelatedBody":"See the following repository that can reproduce the error\r\n\r\nhttps://github.com/bradphelan/msbuildbug\r\n\r\nfirst reported at\r\n\r\nhttps://stackoverflow.com/questions/46526428/msbuild-solutiondir-resolves-incorrectly-to-c-when-running-msbuild-tresto"},{"Id":"6893426284","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:40:34","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1755","RelatedDescription":"Closed issue \".NET Standard 2.0 class library, that references a .NET Framework 4.7.1 class library with PackageReference fails\" (#1755) at dotnet/sdk","RelatedBody":"I have a .NET Standard 2.0 class library, that references a .NET Framework 4.7.1 class library (works fine)\r\n\r\nHowever, if the .NET Framework 4.7.1 adds a PackageReference (new style), I get the following error (possibly due to transitivity):\r\n\r\nError    NU1201           Project ClassLibrary2 is not compatible with netstandard2.0 (.NETStandard,Version=v2.0). Project ClassLibrary2 supports: net471 (.NETFramework,Version=v4.7.1)     \r\n\r\nThe package in question being added can be any package, packages that have support for .NET Standard or otherwise, the same error.\r\n\r\nWhat am I missing?\r\n"},{"Id":"6892887507","Type":"PullRequestEvent","CreatedAt":"2017-11-22T23:22:25","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1765","RelatedDescription":"Opened pull request \"Updating the SDK feeds\" (#1765) at dotnet/sdk","RelatedBody":""},{"Id":"6891834423","Type":"IssuesEvent","CreatedAt":"2017-11-22T18:30:16","Actor":"KirillOsenkov","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1764","RelatedDescription":"Opened issue \"Transitive Project References without respect for ReferenceOutputAssembly\" (#1764) at dotnet/sdk","RelatedBody":""},{"Id":"6891668196","Type":"PullRequestEvent","CreatedAt":"2017-11-22T17:51:42","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1761","RelatedDescription":"Merged pull request \"Merge release/2.0.0 to release/15.5\" (#1761) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/15.5.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/15.5-20171120-080037\ngit reset --hard upstream/release/15.5\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/15.5-20171120-080037 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6888407680","Type":"IssuesEvent","CreatedAt":"2017-11-22T05:43:37","Actor":"Lily721","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1759","RelatedDescription":"Reopened issue \"Assets file 'E:\\****\\obj\\project.assets.json' doesn't have a target for '.NETPortable,Version=v4.0,Profile=Profile111'. Ensure that restore has run and that you have included 'portable40-net45+win8+wpa81' in the TargetFrameworks for your project.\" (#1759) at dotnet/sdk","RelatedBody":"Hi guys,\r\n\r\nWhen I use multi target framework in my project like following:\r\n\r\n`<TargetFrameworks>netstandard1.1;net45</TargetFrameworks><TargetFrameworkProfile>Profile111</TargetFrameworkProfile>` \r\n\r\nAnd following is why I need TargetFrameworkProfile in my .csproj:\r\n\r\n`<Import Project=\"$(MSBuildExtensionsPath)\\Microsoft\\Portable\\v4.5\\Microsoft.Portable.CSharp.targets\" />`\r\n\r\nI faced upper problem, I thought I was right when I see this article [https://docs.microsoft.com/en-us/nuget/schema/target-frameworks],\r\n\r\nProfile111 | .NETFramework 4.5 | portable-net45+win8+wpa81 | netstandard1.1\r\n\r\nI've being working on this a whole day, didn't find any solution yet, does anyone know what's the problem? Thanks a lot."},{"Id":"6887294176","Type":"PullRequestEvent","CreatedAt":"2017-11-21T22:46:41","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1763","RelatedDescription":"Opened pull request \"Update feed tasks version\" (#1763) at dotnet/sdk","RelatedBody":"Contains a version number fix and an update to the asset publishing code"},{"Id":"6886877526","Type":"IssuesEvent","CreatedAt":"2017-11-21T21:06:55","Actor":"KathleenDollard","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1740","RelatedDescription":"Closed issue \"MacOs install summary page shows wrong version\" (#1740) at dotnet/sdk","RelatedBody":"After installing .NET Core SDK 2.0.3, the MacOs summary page is as attached. The title correctly says 2.0.3, but twice on the page it says 2.0.0\r\n\r\n@wli3 \r\n\r\n![screen shot 2017-11-15 at 10 57 58 am](https://user-images.githubusercontent.com/5844318/32854975-3ac53162-c9f5-11e7-8dde-5685da6ad846.png)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"933058673206730752","CreatedAt":"2017-11-21T19:44:57+00:00","UserScreenname":"dotnet","Text":".NET Core Alpine Image Ready for Testing https://t.co/SsQtOGuAFD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":182,"FavoriteCount":141,"RawContent":null},{"Id":"932677600715071488","CreatedAt":"2017-11-20T18:30:42+00:00","UserScreenname":"dotnet","Text":"Looking to migrate your existing .NET apps to the cloud but need our help? Fill out this survey and let us know: https://t.co/g6xbbWkX93","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null},{"Id":"931580871437635584","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"dotnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/nXoIDLCubn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"931255246872915968","CreatedAt":"2017-11-16T20:18:47+00:00","UserScreenname":"dotnet","Text":"Migrate your .NET apps to the cloud and benefit from easier deployments and scalability, without rearchitecting you… https://t.co/gNfBFe3Sbh","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":60,"RawContent":null},{"Id":"931205222579318784","CreatedAt":"2017-11-16T17:00:00+00:00","UserScreenname":"dotnet","Text":"Having trouble moving to .NET Core because of missing Windows APIs? Introducing the Windows Compatibility Pack for… https://t.co/s3KKSJ467u","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":149,"FavoriteCount":85,"RawContent":null}]}},"RunOn":"2017-11-23T05:30:20.8418146Z","RunDurationInMilliseconds":7675}