{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":74,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0","PublishedOn":"2019-09-23T16:00:29+00:00","CommentsCount":120,"FacebookCount":0,"Summary":"Announcing .NET Core 3.0\nWe’re excited to announce the release of .NET Core 3.0. It includes many improvements, including adding Windows Forms and WPF, adding new JSON APIs, support for ARM64 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10627611219","Type":"IssuesEvent","CreatedAt":"2019-10-14T19:26:11","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Opened issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130) at dotnet/announcements","RelatedBody":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769."},{"Id":"10604698685","Type":"IssuesEvent","CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Opened issue \"October 2019 .NET Updates\" (#129) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10603083871","Type":"IssuesEvent","CreatedAt":"2019-10-10T15:19:56","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128) at dotnet/announcements","RelatedBody":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10639773696","Type":"PullRequestEvent","CreatedAt":"2019-10-16T05:08:31","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27212","RelatedDescription":"Merged pull request \"[3.1 port] Improve the performance of Environment.WorkingSet in Windows (#26522)\" (#27212) at dotnet/coreclr","RelatedBody":"Description\r\n\r\nThis is a backport of #26522.\r\n\r\n`Environment.WorkingSet` API was not made to be performant, so it was using reflection to call System.Diagnostics.Process API, which internally allocates a `ProcessInfo` object and fills up a lot of irrelevant information that gets thrown away. This changes Environment.WorkingSet API to call into the Windows API for fetching the working set directly to improve its performance on Windows. \r\n\r\nCustomer Impact\r\n\r\nBing reported this API to be a blocker for adopting the runtime performance counters in their production environment. \r\n\r\nRegression?\r\nNo\r\n\r\nRisk\r\nLow. Performance tests showed an improvement of ~2000x speedup with this change. \r\n"},{"Id":"10639325998","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:14:44","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27223","RelatedDescription":"Opened pull request \"Replace gtClsVar. with AsClsVar()->\" (#27223) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10639321233","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:13:34","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27222","RelatedDescription":"Opened pull request \"Replace gtLclVar. with AsLclVar()->\" (#27222) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10639319455","Type":"IssuesEvent","CreatedAt":"2019-10-16T03:13:09","Actor":"mikernet","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27221","RelatedDescription":"Opened issue \"Local method System.BadImageFormatException error\" (#27221) at dotnet/coreclr","RelatedBody":"The following causes a `System.BadImageFormatException` to throw when the local method is called:\r\n\r\n```c#\r\n        [TestMethod]\r\n        public void Invalid_Program()\r\n        {\r\n            Invalid_Program2<int>();\r\n\r\n            static void Invalid_Program2<T>()\r\n            {\r\n                for (int i = 0; i < 100; i++) {\r\n                    var value = (T)(dynamic)i;\r\n                }\r\n            }\r\n        }\r\n```"},{"Id":"10639306699","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:09:58","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27220","RelatedDescription":"Opened pull request \"Replace gtArrElem. with AsArrElem()->\" (#27220) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10639302926","Type":"IssuesEvent","CreatedAt":"2019-10-16T03:08:57","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27191","RelatedDescription":"Reopened issue \"DecoderNLS.Convert doesn't always out the correct value for 'completed'\" (#27191) at dotnet/coreclr","RelatedBody":"This is pretty much the same issue as https://github.com/dotnet/coreclr/issues/23020, but we forgot to apply the same fix to the `DecoderNLS` class.\r\n\r\nRepro code:\r\n\r\n```cs\r\nEncoder encoder = Encoding.UTF8.GetEncoder();\r\nencoder.Convert(new char[] { '\\ud800' }, 0, 1, new byte[0], 0, 0, flush: false, out int charsUsed, out int bytesUsed, out bool completed);\r\nConsole.WriteLine(charsUsed);\r\nConsole.WriteLine(bytesUsed);\r\nConsole.WriteLine(completed);\r\nConsole.WriteLine();\r\n\r\nDecoder decoder = Encoding.UTF8.GetDecoder();\r\ndecoder.Convert(new byte[] { 0xF0 }, 0, 1, new char[0], 0, 0, flush: false, out bytesUsed, out charsUsed, out completed);\r\nConsole.WriteLine(bytesUsed);\r\nConsole.WriteLine(charsUsed);\r\nConsole.WriteLine(completed);\r\n```\r\n\r\nOutput on .NET Framework 4.8:\r\n\r\n```txt\r\n1\r\n0\r\nTrue     <-- this is incorrect\r\n\r\n1\r\n0\r\nTrue     <-- this is incorrect\r\n```\r\n\r\nOutput on .NET Core 3.0:\r\n\r\n```txt\r\n1\r\n0\r\nFalse    <-- this is correct\r\n\r\n1\r\n0\r\nTrue     <-- this is still incorrect\r\n```\r\n\r\n/cc @tarekgh as FYI"},{"Id":"10639301381","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:08:34","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27219","RelatedDescription":"Opened pull request \"Replace gtLngCon. with AsLngCon()->\" (#27219) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10639296050","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:07:15","Actor":"franksinankaya","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27218","RelatedDescription":"Opened pull request \"Replace gtLclFld. with AsLclFld()->\" (#27218) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10639276413","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:02:28","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27210","RelatedDescription":"Merged pull request \"Fix DecoderNLS.Convert to out the correct value for 'completed'\" (#27210) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/coreclr/issues/27191. Unit tests are in corefx and will be updated there.\r\n\r\nI might need to suppress some test failures in coreclr as a result of this change. Will wait for CI to get the full list."},{"Id":"10639276401","Type":"IssuesEvent","CreatedAt":"2019-10-16T03:02:28","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27191","RelatedDescription":"Closed issue \"DecoderNLS.Convert doesn't always out the correct value for 'completed'\" (#27191) at dotnet/coreclr","RelatedBody":"This is pretty much the same issue as https://github.com/dotnet/coreclr/issues/23020, but we forgot to apply the same fix to the `DecoderNLS` class.\r\n\r\nRepro code:\r\n\r\n```cs\r\nEncoder encoder = Encoding.UTF8.GetEncoder();\r\nencoder.Convert(new char[] { '\\ud800' }, 0, 1, new byte[0], 0, 0, flush: false, out int charsUsed, out int bytesUsed, out bool completed);\r\nConsole.WriteLine(charsUsed);\r\nConsole.WriteLine(bytesUsed);\r\nConsole.WriteLine(completed);\r\nConsole.WriteLine();\r\n\r\nDecoder decoder = Encoding.UTF8.GetDecoder();\r\ndecoder.Convert(new byte[] { 0xF0 }, 0, 1, new char[0], 0, 0, flush: false, out bytesUsed, out charsUsed, out completed);\r\nConsole.WriteLine(bytesUsed);\r\nConsole.WriteLine(charsUsed);\r\nConsole.WriteLine(completed);\r\n```\r\n\r\nOutput on .NET Framework 4.8:\r\n\r\n```txt\r\n1\r\n0\r\nTrue     <-- this is incorrect\r\n\r\n1\r\n0\r\nTrue     <-- this is incorrect\r\n```\r\n\r\nOutput on .NET Core 3.0:\r\n\r\n```txt\r\n1\r\n0\r\nFalse    <-- this is correct\r\n\r\n1\r\n0\r\nTrue     <-- this is still incorrect\r\n```\r\n\r\n/cc @tarekgh as FYI"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10639824307","Type":"PullRequestEvent","CreatedAt":"2019-10-16T05:21:27","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12899","RelatedDescription":"Opened pull request \"Fix eventProperties.Add mutate _commonProperties\" (#12899) at dotnet/cli","RelatedBody":""},{"Id":"10639295730","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:07:12","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12868","RelatedDescription":"Merged pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#12868) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638822098","Type":"PullRequestEvent","CreatedAt":"2019-10-16T01:10:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12898","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12898) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.6\r\n- **Date Produced**: 10/15/2019 11:30 PM\r\n- **Commit**: b2bff948e10f7632a40799808f4d7c74b912df80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10638685208","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:35:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12898","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12898) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.6\r\n- **Date Produced**: 10/15/2019 11:30 PM\r\n- **Commit**: b2bff948e10f7632a40799808f4d7c74b912df80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10638637151","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:22:55","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12874","RelatedDescription":"Merged pull request \"Merge release/2.1.8xx to release/2.2.4xx\" (#12874) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638559923","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:04:02","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12897","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to release/2.2.4xx\" (#12897) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10636953207","Type":"PullRequestEvent","CreatedAt":"2019-10-15T19:33:31","Actor":"crummel","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Opened pull request \"Source-build improvements.\" (#1612) at dotnet/standard","RelatedBody":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?"},{"Id":"10633383163","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1611) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10633303652","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:20:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1611) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10633161357","Type":"PullRequestEvent","CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1610) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 9:05 AM\r\n- **Commit**: a093b5b2bef24499239a2e9b4114db01fa19e446\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19515.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10624407194","Type":"PullRequestEvent","CreatedAt":"2019-10-14T12:25:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1609) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10624335212","Type":"PullRequestEvent","CreatedAt":"2019-10-14T12:14:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1609) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10639785024","Type":"IssuesEvent","CreatedAt":"2019-10-16T05:11:24","Actor":"Grauenwolf","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41814","RelatedDescription":"Opened issue \"OleDbTransaction.Commit Exception ''SQLNCLI11' failed with no error message available\" (#41814) at dotnet/corefx","RelatedBody":"* `netcoreapp2.1`\r\n* `System.Data.OleDB 4.6.0`\r\n\r\nCalling `OleDbTransaction.Commit` throws this exception:\r\n\r\n    System.Data.OleDb.OleDbException: ''SQLNCLI11' failed with no error message available, result code: E_NOINTERFACE(0x80004002).'\r\n\r\nThis does not occur when targeting net461.\r\n\r\nIf I execute the operations without a transaction they appear to work correctly."},{"Id":"10639783010","Type":"PullRequestEvent","CreatedAt":"2019-10-16T05:10:53","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41768","RelatedDescription":"Merged pull request \"use background thread to wait for address changes on OSX\" (#41768) at dotnet/corefx","RelatedBody":"we should not block process exit. \r\n\r\nfixes #41740\r\n\r\n"},{"Id":"10639782954","Type":"IssuesEvent","CreatedAt":"2019-10-16T05:10:53","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41740","RelatedDescription":"Closed issue \"NetworkAddressChanged event hangs process on Mac\" (#41740) at dotnet/corefx","RelatedBody":"# Repro steps\r\n\r\n1. Install 3.0 RTM\r\n2. `dotnet new console`\r\n3. Replace Program.cs with the following:\r\n\r\n```C#\r\nusing System;\r\n\r\nnamespace MacMinimal\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged += (sender, e) => {\r\n                \r\n            };\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Expected Result\r\n\r\nThe process should exit.\r\n\r\n# Actual Result\r\n\r\nThe process does not exit.\r\n\r\n# Details\r\n\r\nThread dumps indicate that this line is the problem:\r\n\r\nhttps://github.com/dotnet/corefx/blob/d3911035f2ba3eb5c44310342cc1d654e42aa316/src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/NetworkAddressChange.OSX.cs#L184\r\n\r\nWe believe that this Thread should be marked as background so it doesn't block the process exiting.\r\n\r\n## Real world cases\r\n\r\nWe found this when we noticed that applications which use AppInsights don't close when they would normally exit on a Mac. This isn't noticed normally because the normal workflow for AspNetCore apps is that when you want the server to exit you send Ctrl-C.\r\n\r\nCC @danmosemsft @karelz @davidfowl "},{"Id":"10639761024","Type":"IssuesEvent","CreatedAt":"2019-10-16T05:05:26","Actor":"vladinvancouver","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41813","RelatedDescription":"Opened issue \"CamelCase not applied to list of KeyValuePair\" (#41813) at dotnet/corefx","RelatedBody":"CamelCase naming policy is not applied to list of KeyValuePair.\r\n\r\nCode to reproduce:\r\n\r\nJsonSerializerOptions options = new JsonSerializerOptions()\r\n{\r\n        WriteIndented = true,\r\n        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,\r\n        DictionaryKeyPolicy = JsonNamingPolicy.CamelCase\r\n};\r\n           \r\nDictionary<string, object> dict = new Dictionary<string, object>();\r\ndict.Add(\"Item1\", \"Value1\");\r\ndict.Add(\"Item2\", 22);\r\n\r\nstring json = JsonSerializer.Serialize(dict.ToList(), options);\r\n\r\nConsole.WriteLine(json);\r\n\r\nActual results:\r\n\r\n[\r\n  {\r\n    \"Key\": \"Item1\",\r\n    \"Value\": \"Value1\"\r\n  },\r\n  {\r\n    \"Key\": \"Item2\",\r\n    \"Value\": 22\r\n  }\r\n]\r\n\r\nExpected results:\r\n\r\n[\r\n  {\r\n    \"key\": \"Item1\",\r\n    \"value\": \"Value1\"\r\n  },\r\n  {\r\n    \"key\": \"Item2\",\r\n    \"value\": 22\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10639662930","Type":"PullRequestEvent","CreatedAt":"2019-10-16T04:40:29","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41800","RelatedDescription":"Merged pull request \"Add stable versions for Microsoft.Bcl.* packages\" (#41800) at dotnet/corefx","RelatedBody":"Core-Setup hasn't consumed CoreFx in 11 days failing with error:\r\n/root/coresetup/src/managed/Microsoft.Extensions.DependencyModel/Microsoft.Extensions.DependencyModel.csproj(0,0): error NU1603: System.Text.Json 5.0.0-alpha1.19515.2 depends on Microsoft.Bcl.AsyncInterfaces (>= 1.0.0-alpha1.19515.2) but Microsoft.Bcl.AsyncInterfaces 1.0.0-alpha1.19515.2 was not found. An approximate best match of Microsoft.Bcl.AsyncInterfaces 1.0.0-preview6.19230.11 was resolved.\r\n\r\nhttps://github.com/dotnet/core-setup/pull/8477\r\n\r\nThe reason for that is because we removed the `Microsoft.Bcl` packages in: https://github.com/dotnet/corefx/pull/41270\r\n\r\nHowever, the package index was not updated accordingly, since we were lacking the stable versions in the package index for these packages, System.Text.Json, was getting a dependency to a `non-stable` package based on the current build version suffix.\r\n\r\nFYI: @scalablecory "},{"Id":"10639573863","Type":"PullRequestEvent","CreatedAt":"2019-10-16T04:17:37","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41812","RelatedDescription":"Merged pull request \"Disable deterministically failing outerloop CNG tests\" (#41812) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/corefx/issues/41610\r\ncc: @bartonjs"},{"Id":"10639388994","Type":"PullRequestEvent","CreatedAt":"2019-10-16T03:30:18","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41812","RelatedDescription":"Opened pull request \"Disable deterministically failing outerloop CNG tests\" (#41812) at dotnet/corefx","RelatedBody":"https://github.com/dotnet/corefx/issues/41610\r\ncc: @bartonjs"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10639681041","Type":"IssuesEvent","CreatedAt":"2019-10-16T04:45:18","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36022","RelatedDescription":"Closed issue \"C# Interactive - End execution\" (#36022) at dotnet/roslyn","RelatedBody":"VSF_TYPE_MARKDOWNHow do I terminate execution of a script running in the C# Interactive terminal? \n\nLet's say I wrote a loop that had a logic bug and is now running infinitely. Or there is code that is trying to access a remote resource that is unavailable? \n\nRight now, when the above happens, I need to wait for the Windows Exec to terminate the process. In the mean time, the VS IDE becomes unusable. \n\nIt would be good if global terminators like CTRL+C or CTRL+BREAK worked to terminate executions within the script window.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/587116/c-interactive-end-execution.html\nVSTS ticketId: 900959_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/29/2019, 02:29 AM (6 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"10639200163","Type":"IssuesEvent","CreatedAt":"2019-10-16T02:44:55","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39309","RelatedDescription":"Opened issue \"msft bot not merging PRs\" (#39309) at dotnet/roslyn","RelatedBody":"Creating this issue to keep track of PRs that don't get automerged.\r\n\r\nhttps://github.com/dotnet/roslyn/pull/39303\r\nhttps://github.com/dotnet/roslyn/pull/39304\r\nhttps://github.com/dotnet/roslyn/pull/39306\r\n(automerged after I deleted and re-added the auto-merge label)\r\n"},{"Id":"10639197346","Type":"PullRequestEvent","CreatedAt":"2019-10-16T02:44:18","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39306","RelatedDescription":"Merged pull request \"Merge master to features/static-lambdas\" (#39306) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10639190865","Type":"PullRequestEvent","CreatedAt":"2019-10-16T02:42:50","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39304","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#39304) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10639187382","Type":"PullRequestEvent","CreatedAt":"2019-10-16T02:42:04","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39303","RelatedDescription":"Merged pull request \"Merge master to release/dev16.5-preview1\" (#39303) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638678980","Type":"IssuesEvent","CreatedAt":"2019-10-16T00:33:31","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39308","RelatedDescription":"Opened issue \"Updating dotnet/versions occasionally errors\" (#39308) at dotnet/roslyn","RelatedBody":"Example builds:\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3145509 \r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3143639\r\n\r\nWhen publishing build info updates to dotnet/version in quick succession as done here\r\nhttps://github.com/dotnet/roslyn/blob/master/eng/publish-assets.ps1#L122\r\nit will sometimes fail with\r\n```\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\NonShipping to channel dev16.4\r\nError updating versions: Could not update dotnet/versions 'heads/master' to '4e2d35b8002d79592594d73903d830f8db1ed632': Update is not a fast forward\r\n   at Microsoft.DotNet.VersionTools.Automation.GitHubApi.GitHubClient.<PatchReferenceAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.DotNet.VersionTools.Automation.GitHubVersionsRepoUpdater.<UpdateBuildInfoAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at RoslynPublish.Program.<Go>d__1.MoveNext() in /_/src/Tools/RoslynPublish/Program.cs:line 64\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at RoslynPublish.Program.Main(String[] args) in /_/src/Tools/RoslynPublish/Program.cs:line 19\r\n```\r\n\r\nThe tool [queries ](https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.VersionTools/Automation/GitHubVersionsRepoUpdater.cs#L81)the master branch for latest commits, then applies a commit with the new build info.  When this happens multiple times in succession, occasionally the query for the latest commits will not return the latest commit.\r\n\r\nExample:\r\nIn [this build](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3143639), we see\r\n```\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\Shipping to channel dev16.4\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\NonShipping to channel dev16.4\r\nError updating versions: Could not update dotnet/versions 'heads/master' to '4e2d35b8002d79592594d73903d830f8db1ed632': Update is not a fast forward\r\n```\r\n\r\nLooking at the master branch log, we see a successful [commit ](https://github.com/dotnet/versions/commit/8db4b41f383c084eb31ccd8f0de9da2824107c99) for the first dev16.4 channel publish, but no further successful commits.  Looking at the [hash of the failed commit](https://github.com/dotnet/versions/commit/4e2d35b8002d79592594d73903d830f8db1ed632), we see that it's parent is actually `1dc94d9` which is the commit prior to applying the first successful commit.  The parent commit should be the id of the previous commit, `8db4b4`\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3145509 has a similar failure, but it published two successful commits before failing.  \r\n\r\nIt seems like we need to add a delay in between attempts to publish to dotnet/versions to account for github delays in processing.\r\n"},{"Id":"10638564063","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:05:03","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39307","RelatedDescription":"Opened pull request \"Move much of local function data flow to AbstractFlowPass\" (#39307) at dotnet/roslyn","RelatedBody":"Our design for local function flow analysis is now pretty well decided\r\n-- local functions are assumed to preserve state transitions through\r\ncalls within the method.\r\n\r\nFor definite assignment, this means that variables which are definitely\r\nassigned inside the local function are assigned on calls to the local\r\nfunction. This functionality has mostly been moved to AbstractFlowPass.\r\n\r\nThe remaining functionality, namely producing diagnostics based on the\r\nflow state, is analysis-specific, so I've refactored this to remain in\r\ndefinite assignment, but use stubs that are present in AbstractFlowPass."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10627984673","Type":"IssuesEvent","CreatedAt":"2019-10-14T20:24:49","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824) at dotnet/corert","RelatedBody":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n"},{"Id":"10625366540","Type":"IssuesEvent","CreatedAt":"2019-10-14T14:21:45","Actor":"imback82","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Opened issue \"Debugger.Launch() on macOS\" (#7824) at dotnet/corert","RelatedBody":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n"},{"Id":"10616883770","Type":"PullRequestEvent","CreatedAt":"2019-10-12T15:06:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7823) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo"},{"Id":"10614032565","Type":"PullRequestEvent","CreatedAt":"2019-10-11T20:37:56","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7823) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10608939903","Type":"PullRequestEvent","CreatedAt":"2019-10-11T08:45:30","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7822) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"10607447761","Type":"PullRequestEvent","CreatedAt":"2019-10-11T03:49:41","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7822) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10592232499","Type":"PullRequestEvent","CreatedAt":"2019-10-09T12:42:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Merged pull request \"Delete unused method\" (#7821) at dotnet/corert","RelatedBody":"Supplements #7819."},{"Id":"10590790043","Type":"PullRequestEvent","CreatedAt":"2019-10-09T09:29:22","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Opened pull request \"Delete unused method\" (#7821) at dotnet/corert","RelatedBody":"Supplements #7819."},{"Id":"10590779874","Type":"PullRequestEvent","CreatedAt":"2019-10-09T09:28:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7820) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo"},{"Id":"10590775020","Type":"PullRequestEvent","CreatedAt":"2019-10-09T09:27:35","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Merged pull request \"Fix exit code of build-native.sh\" (#7818) at dotnet/corert","RelatedBody":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive)."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10638564336","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:05:06","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638563796","Type":"PullRequestEvent","CreatedAt":"2019-10-16T00:04:59","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Opened pull request \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638467033","Type":"PullRequestEvent","CreatedAt":"2019-10-15T23:41:48","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3737","RelatedDescription":"Merged pull request \"Merge release/2.2.4xx to release/3.0.1xx\" (#3737) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10638427480","Type":"PullRequestEvent","CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed pull request \"Increase timeout and up ulimit -n\" (#3753) at dotnet/sdk","RelatedBody":""},{"Id":"10638319835","Type":"PullRequestEvent","CreatedAt":"2019-10-15T23:07:26","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3750","RelatedDescription":"Closed pull request \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3750) at dotnet/sdk","RelatedBody":"Issue: \r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk. \r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile. \r\n\r\nImpact: \r\nThis breaks the Sdk based WebJobs publish scenarios. \r\n\r\nThere are 2 parts to this fix: \r\n1. Removing the default publish profile from Netsdk\r\n2. If the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - https://github.com/aspnet/websdk/pull/1006\r\n\r\n"},{"Id":"10638277462","Type":"PullRequestEvent","CreatedAt":"2019-10-15T22:58:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3740","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3740) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/11/2019 9:07 PM\r\n- **Commit**: f15311bdc5e9fbf4026a3099c32c5ea6b50d6236\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19511.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10638223040","Type":"PullRequestEvent","CreatedAt":"2019-10-15T22:46:53","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Opened pull request \"Increase timeout and up ulimit -n\" (#3753) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"507511028","IsPullRequest":true,"CreatedAt":"2019-10-16T05:08:31","Actor":"sywhang","Number":"27212","RawContent":null,"Title":"[3.1 port] Improve the performance of Environment.WorkingSet in Windows (#26522)","State":"closed","Body":"Description\r\n\r\nThis is a backport of #26522.\r\n\r\n`Environment.WorkingSet` API was not made to be performant, so it was using reflection to call System.Diagnostics.Process API, which internally allocates a `ProcessInfo` object and fills up a lot of irrelevant information that gets thrown away. This changes Environment.WorkingSet API to call into the Windows API for fetching the working set directly to improve its performance on Windows. \r\n\r\nCustomer Impact\r\n\r\nBing reported this API to be a blocker for adopting the runtime performance counters in their production environment. \r\n\r\nRegression?\r\nNo\r\n\r\nRisk\r\nLow. Performance tests showed an improvement of ~2000x speedup with this change. \r\n","Url":"https://github.com/dotnet/coreclr/pull/27212","RelatedDescription":"Closed or merged PR \"[3.1 port] Improve the performance of Environment.WorkingSet in Windows (#26522)\" (#27212)"},{"Id":"507586804","IsPullRequest":true,"CreatedAt":"2019-10-16T03:14:43","Actor":"franksinankaya","Number":"27223","RawContent":null,"Title":"Replace gtClsVar. with AsClsVar()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27223","RelatedDescription":"Open PR \"Replace gtClsVar. with AsClsVar()->\" (#27223)"},{"Id":"507586532","IsPullRequest":true,"CreatedAt":"2019-10-16T03:13:34","Actor":"franksinankaya","Number":"27222","RawContent":null,"Title":"Replace gtLclVar. with AsLclVar()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27222","RelatedDescription":"Open PR \"Replace gtLclVar. with AsLclVar()->\" (#27222)"},{"Id":"507586423","IsPullRequest":false,"CreatedAt":"2019-10-16T03:13:08","Actor":"mikernet","Number":"27221","RawContent":null,"Title":"Local method System.BadImageFormatException error","State":"open","Body":"The following causes a `System.BadImageFormatException` to throw when the local method is called:\r\n\r\n```c#\r\n        [TestMethod]\r\n        public void Invalid_Program()\r\n        {\r\n            Invalid_Program2<int>();\r\n\r\n            static void Invalid_Program2<T>()\r\n            {\r\n                int x = 0;\r\n                var y = (T)(dynamic)x;\r\n            }\r\n        }\r\n```\r\n\r\nMoving the local method out of the outer method so it becomes a normal method works fine. I believe this is a somewhat recent regression, somewhere between a .NET Core 3.0 beta and 3.0 release version as I do believe this was working at some point but I may be wrong about that.\r\n\r\nThis is compiled in a .NET Standard 2.1 library with C# 8 enabled in VS2019 with .NET Core 3.0 release version installed.","Url":"https://github.com/dotnet/coreclr/issues/27221","RelatedDescription":"Open issue \"Local method System.BadImageFormatException error\" (#27221)"},{"Id":"507585628","IsPullRequest":true,"CreatedAt":"2019-10-16T03:09:57","Actor":"franksinankaya","Number":"27220","RawContent":null,"Title":"Replace gtArrElem. with AsArrElem()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27220","RelatedDescription":"Open PR \"Replace gtArrElem. with AsArrElem()->\" (#27220)"},{"Id":"507585288","IsPullRequest":true,"CreatedAt":"2019-10-16T03:08:33","Actor":"franksinankaya","Number":"27219","RawContent":null,"Title":"Replace gtLngCon. with AsLngCon()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27219","RelatedDescription":"Open PR \"Replace gtLngCon. with AsLngCon()->\" (#27219)"},{"Id":"507584943","IsPullRequest":true,"CreatedAt":"2019-10-16T03:07:14","Actor":"franksinankaya","Number":"27218","RawContent":null,"Title":"Replace gtLclFld. with AsLclFld()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27218","RelatedDescription":"Open PR \"Replace gtLclFld. with AsLclFld()->\" (#27218)"},{"Id":"507459168","IsPullRequest":true,"CreatedAt":"2019-10-16T03:02:27","Actor":"GrabYourPitchforks","Number":"27210","RawContent":null,"Title":"Fix DecoderNLS.Convert to out the correct value for 'completed'","State":"closed","Body":"Fixes https://github.com/dotnet/coreclr/issues/27191. Unit tests are in corefx and will be updated there.\r\n\r\nI might need to suppress some test failures in coreclr as a result of this change. Will wait for CI to get the full list.","Url":"https://github.com/dotnet/coreclr/pull/27210","RelatedDescription":"Closed or merged PR \"Fix DecoderNLS.Convert to out the correct value for 'completed'\" (#27210)"},{"Id":"507559631","IsPullRequest":true,"CreatedAt":"2019-10-16T01:20:26","Actor":"stephentoub","Number":"27217","RawContent":null,"Title":"[release/3.1] Enable ETW/EventSource logging of task IDs for boxed state machines","State":"open","Body":"Port https://github.com/dotnet/coreclr/pull/27115 to release/3.1\r\nFixes https://github.com/dotnet/coreclr/issues/27076\r\n\r\n## Description\r\n\r\nIn .NET Core 2.1 we overhauled how async state machines are implemented.  In doing so, we added code paths that enable these state machines to be passed around as their own continuations rather than forcing MoveNext delegates to be created for the same purpose.  However, we neglected to update a helper function that's used by our EventSource tracing to extract an ID from that continuation object, which means some of our events are always outputting 0 for these IDs rather than that for the actual object.\r\n\r\n## Customer Impact\r\n\r\nTools that use these events to track causality may be broken.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Core 2.0 / .NET Framework.\r\n\r\n## Testing\r\n\r\nVisual Studio tools that consume these events ran their test suites, in addition to our coreclr/corefx tests.\r\n\r\n## Risk\r\n\r\nLow.  It's adding an additional fallback case.","Url":"https://github.com/dotnet/coreclr/pull/27217","RelatedDescription":"Open PR \"[release/3.1] Enable ETW/EventSource logging of task IDs for boxed state machines\" (#27217)"},{"Id":"507558325","IsPullRequest":true,"CreatedAt":"2019-10-16T01:14:20","Actor":"jkotas","Number":"27216","RawContent":null,"Title":"Rewrite Buffer.BlockCopy in C#","State":"open","Body":"Fixes #27106","Url":"https://github.com/dotnet/coreclr/pull/27216","RelatedDescription":"Open PR \"Rewrite Buffer.BlockCopy in C#\" (#27216)"},{"Id":"507015043","IsPullRequest":true,"CreatedAt":"2019-10-16T00:07:24","Actor":"mikedn","Number":"27196","RawContent":null,"Title":"Fix Compare and gtHashValue handling of BLK & OBJ","State":"closed","Body":"These 2 are `GTK_UNOP` so they do not belong under `if (kind & GTK_BINOP)`.\r\n`OBJ ` was already present under `if (kind & GTK_UNOP)` but not `BLK`.\r\n`BLK` was marked `GTK_UNOP` but not `GTK_EXOP` so its size was simply ignored by `Compare`.\r\n\r\nAlso fix indir/block node classes in gtlist.h (only used by MEASURE_NODE_SIZE & co.)","Url":"https://github.com/dotnet/coreclr/pull/27196","RelatedDescription":"Closed or merged PR \"Fix Compare and gtHashValue handling of BLK & OBJ\" (#27196)"},{"Id":"507536482","IsPullRequest":true,"CreatedAt":"2019-10-15T23:46:02","Actor":"richlander","Number":"27215","RawContent":null,"Title":"Add 3PN for xorshift","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27215","RelatedDescription":"Closed or merged PR \"Add 3PN for xorshift\" (#27215)"},{"Id":"507518095","IsPullRequest":true,"CreatedAt":"2019-10-15T22:39:48","Actor":"jashook","Number":"27214","RawContent":null,"Title":"Add alpine3.10 testing to 3.0","State":"open","Body":"/cc @MeiChin-Tsai @mmitche @janvorli \r\n\r\n/cc @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/27214","RelatedDescription":"Open PR \"Add alpine3.10 testing to 3.0\" (#27214)"},{"Id":"507511927","IsPullRequest":true,"CreatedAt":"2019-10-15T22:20:24","Actor":"franksinankaya","Number":"27213","RawContent":null,"Title":"Replace gtIntCon. with AsIntCon()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27213","RelatedDescription":"Open PR \"Replace gtIntCon. with AsIntCon()->\" (#27213)"},{"Id":"507060508","IsPullRequest":true,"CreatedAt":"2019-10-15T21:40:04","Actor":"sandreenko","Number":"27197","RawContent":null,"Title":"Rewrite some bad-readable conditions exposed by #27122.","State":"closed","Body":"Fix notes that I left in #27122.","Url":"https://github.com/dotnet/coreclr/pull/27197","RelatedDescription":"Closed or merged PR \"Rewrite some bad-readable conditions exposed by #27122.\" (#27197)"},{"Id":"507487594","IsPullRequest":false,"CreatedAt":"2019-10-15T21:16:46","Actor":"FiniteReality","Number":"27211","RawContent":null,"Title":"Crash when stepping into stackalloc with debugger on Linux","State":"open","Body":"When debugging an application, stepping into a line of code containing `stackalloc` causes the CLR(?) to crash. It is fairly easy to reproduce:\r\n```cs\r\nusing System;\r\n\r\nnamespace dotnet_debugger_crash\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello, world!\");\r\n\r\n            Span<byte> data = stackalloc byte[10];\r\n\r\n            Console.WriteLine(\"Goodbye, world!\");\r\n        }\r\n    }\r\n}\r\n```\r\nUsing VS Code, I get this output:\r\n```\r\n-------------------------------------------------------------------\r\nYou may only use the Microsoft .NET Core Debugger (vsdbg) with\r\nVisual Studio Code, Visual Studio or Visual Studio for Mac software\r\nto help you develop and test your applications.\r\n-------------------------------------------------------------------\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Private.CoreLib.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/home/dev/Development/dotnet-debugger-crash/bin/Debug/netcoreapp3.0/dotnet-debugger-crash.dll'. Symbols loaded.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Runtime.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Console.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Threading.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Runtime.Extensions.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Text.Encoding.Extensions.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nHello, world!\r\nThe target process exited with code 0 while evaluating the function 'System.Span<T>.ToString'.The program '[19546] dotnet-debugger-crash.dll' has exited with code 0 (0x0).\r\n```\r\nHere's my system info, including the output of `dotnet --info`:\r\n```\r\ndev@Monica:~/Development/dotnet-debugger-crash $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  \r\n OS Platform: Linux\r\n RID:         debian-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/usr/share/dotnet/sdk]\r\n  3.0.100-preview9-014004 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview9.19424.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview9-19423-09 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\ndev@Monica:~/Development/dotnet-debugger-crash $ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Debian\r\nDescription:    Debian GNU/Linux bullseye/sid\r\nRelease:        testing\r\nCodename:       bullseye\r\ndev@Monica:~/Development/dotnet-debugger-crash $ uname -a\r\nLinux Monica 5.2.0-3-amd64 #1 SMP Debian 5.2.17-1 (2019-09-26) x86_64 GNU/Linux\r\n```\r\n\r\nEDIT: As a workaround, placing a breakpoint directly after the stackalloc (so, on the second `Console.WriteLine`) and resuming appears to work. Though this isn't ideal for multi-threaded code.","Url":"https://github.com/dotnet/coreclr/issues/27211","RelatedDescription":"Open issue \"Crash when stepping into stackalloc with debugger on Linux\" (#27211)"},{"Id":"507415452","IsPullRequest":true,"CreatedAt":"2019-10-15T18:40:09","Actor":"elinor-fung","Number":"27209","RawContent":null,"Title":"Update scripts to include activity ID / related activity ID in generated native functions for firing runtime events through event pipe","State":"open","Body":"Update scripts to include activity ID / related activity ID in generated native functions for firing runtime events through event pipe\r\n\r\nThis will allow explicitly specifying an activity ID and/or related activity ID (defaults to nullptr) when firing runtime events through event pipe. This change only updates the generated functions for event pipe, not the platform-dependent systems (ETW/LTTng) - `mc.exe` used to generate the ETW functions has an option to generate them such that they take in an activity ID, but the related activity ID is always empty in the generated code. We intend to use this for tracing binder operations.","Url":"https://github.com/dotnet/coreclr/pull/27209","RelatedDescription":"Open PR \"Update scripts to include activity ID / related activity ID in generated native functions for firing runtime events through event pipe\" (#27209)"},{"Id":"507409060","IsPullRequest":true,"CreatedAt":"2019-10-15T18:26:33","Actor":"dotnet-maestro-bot","Number":"27208","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27208","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27208)"},{"Id":"507393792","IsPullRequest":true,"CreatedAt":"2019-10-15T17:54:07","Actor":"franksinankaya","Number":"27207","RawContent":null,"Title":"Replace gtLclVarCommon. with AsLclVarCommon()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27207","RelatedDescription":"Open PR \"Replace gtLclVarCommon. with AsLclVarCommon()->\" (#27207)"},{"Id":"507385753","IsPullRequest":false,"CreatedAt":"2019-10-15T17:36:48","Actor":"AaronRobinsonMSFT","Number":"27206","RawContent":null,"Title":"CrossGen can't support GCPOLL_INLINE","State":"open","Body":"During the [suppress GC transition](https://github.com/dotnet/coreclr/pull/26458) work, it was discovered that CrossGen can't support indirect memory addresses that are required for `GCPOLL_INLINE`. This work was discussed with @davidwrighton and attempted, but was blocked by issues references inhttps://github.com/dotnet/coreclr/issues/27186.\r\n\r\n/cc @davidwrighton @MichalStrehovsky @sergiy-k ","Url":"https://github.com/dotnet/coreclr/issues/27206","RelatedDescription":"Open issue \"CrossGen can't support GCPOLL_INLINE\" (#27206)"},{"Id":"507364701","IsPullRequest":true,"CreatedAt":"2019-10-15T16:50:17","Actor":"mmitche","Number":"27204","RawContent":null,"Title":"[release/2.1] Remove mac demands","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27204","RelatedDescription":"Open PR \"[release/2.1] Remove mac demands\" (#27204)"},{"Id":"507333062","IsPullRequest":false,"CreatedAt":"2019-10-15T15:48:12","Actor":"jkotas","Number":"27203","RawContent":null,"Title":"Tune fast path threshold in GC.AllocateUninitializedArray","State":"open","Body":"From https://github.com/dotnet/coreclr/pull/27007#discussion_r334960446:\r\n\r\n> there was a huge perf decrease when I've replaced all calls to new char[size] with GC.AllocateUninitializedArray<char>(size)\r\n\r\nThe current threshold seems to be way too low.","Url":"https://github.com/dotnet/coreclr/issues/27203","RelatedDescription":"Open issue \"Tune fast path threshold in GC.AllocateUninitializedArray\" (#27203)"},{"Id":"507317929","IsPullRequest":false,"CreatedAt":"2019-10-15T15:22:20","Actor":"MichalStrehovsky","Number":"27202","RawContent":null,"Title":"Unable to resolve default generic interface method with constraints","State":"open","Body":"...if the constraints reference generic parameters.\r\n\r\nReported in dotnet/roslyn#39219. Simplified repro without async goo.\r\n\r\n```csharp\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    interface IApiControllerCRUD<IEntity>\r\n    {\r\n        IEnumerable<T> GetAsync<T>() where T : IEntity\r\n        {\r\n            return new List<T>();\r\n        }\r\n    }\r\n\r\n    class MyApiController : IApiControllerCRUD<IMyEntity> { }\r\n        \r\n    interface IMyEntity { }\r\n    class MyEntityViewModel : IMyEntity { }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        IApiControllerCRUD<IMyEntity> api = new MyApiController();\r\n        IEnumerable<MyEntityViewModel> sadFace = api.GetAsync<MyEntityViewModel>();\r\n    }\r\n}\r\n```\r\n\r\nCallstack:\r\n\r\n```\r\n \tcoreclr.dll!RealCOMPlusThrow(RuntimeExceptionKind reKind, unsigned int resID, const wchar_t * wszArg1, const wchar_t * wszArg2, const wchar_t * wszArg3, const wchar_t * wszArg4, const wchar_t * wszArg5, const wchar_t * wszArg6) Line 12926\tC++\r\n \tcoreclr.dll!MethodDesc::SatisfiesMethodConstraints(TypeHandle thParent, int fThrowIfNotSatisfied) Line 1684\tC++\r\n \tcoreclr.dll!InstantiatedMethodDesc::NewInstantiatedMethodDesc(MethodTable * pExactMT, MethodDesc * pGenericMDescInRepMT, MethodDesc * pWrappedMD, Instantiation methodInst, int getWrappedCode) Line 464\tC++\r\n \tcoreclr.dll!MethodDesc::FindOrCreateAssociatedMethodDesc(MethodDesc * pDefMD, MethodTable * pExactMT, int forceBoxedEntryPoint, Instantiation methodInst, int allowInstParam, int forceRemotableMethod, int allowCreate, ClassLoadLevel level) Line 1184\tC++\r\n \tcoreclr.dll!MethodTable::FindDefaultInterfaceImplementation(MethodDesc * pInterfaceMD, MethodTable * pInterfaceMT, MethodDesc * * ppDefaultMethod, int allowVariance, int throwOnConflict) Line 7107\tC++\r\n \tcoreclr.dll!MethodTable::FindDispatchImpl(unsigned int typeID, unsigned int slotNumber, DispatchSlot * pImplSlot, int throwOnConflict) Line 6848\tC++\r\n \tcoreclr.dll!MethodTable::FindDispatchSlot(unsigned int typeID, unsigned int slotNumber, int throwOnConflict) Line 7243\tC++\r\n \tcoreclr.dll!VirtualCallStubManager::Resolver(MethodTable * pMT, DispatchToken token, OBJECTREF * protectedObj, unsigned __int64 * ppTarget, int throwOnConflict) Line 2208\tC++\r\n \tcoreclr.dll!VirtualCallStubManager::GetTarget(DispatchToken token, MethodTable * pMT, int throwOnConflict) Line 2547\tC++\r\n \tcoreclr.dll!MethodTable::GetMethodDescForInterfaceMethod(TypeHandle ownerType, MethodDesc * pInterfaceMD, int throwOnConflict) Line 2070\tC++\r\n \tcoreclr.dll!MethodTable::GetMethodDescForInterfaceMethodAndServer(TypeHandle ownerType, MethodDesc * pItfMD, OBJECTREF * pServer) Line 780\tC++\r\n \tcoreclr.dll!MethodDesc::ResolveGenericVirtualMethod(OBJECTREF * orThis) Line 1967\tC++\r\n \tcoreclr.dll!MethodDesc::GetMultiCallableAddrOfVirtualizedCode(OBJECTREF * orThis, TypeHandle staticTH) Line 2063\tC++\r\n \tcoreclr.dll!JIT_VirtualFunctionPointer_Framed(Object * objectUNSAFE, CORINFO_CLASS_STRUCT_ * classHnd, CORINFO_METHOD_STRUCT_ * methodHnd) Line 4047\tC++\r\n \tcoreclr.dll!JIT_VirtualFunctionPointer(Object * objectUNSAFE, CORINFO_CLASS_STRUCT_ * classHnd, CORINFO_METHOD_STRUCT_ * methodHnd) Line 4197\tC++\r\n```\r\n\r\nThe problem seems to be that the first thing `MethodDesc::ResolveGenericVirtualMethod` does is that it strips the method instantiation away. `MethodTable::FindDefaultInterfaceImplementation` then tries to find a `MethodDesc` with `allowInstParam: FALSE` for this. Doing that triggers constraint validation on a `MethodDesc` that doesn't have enough generic context to resolve the variable.\r\n\r\nI experimentally tried to make `allowInstParam: TRUE`, but that hit other problems when `MethodDesc::ResolveGenericVirtualMethod` tries to make the owning type concrete again.","Url":"https://github.com/dotnet/coreclr/issues/27202","RelatedDescription":"Open issue \"Unable to resolve default generic interface method with constraints\" (#27202)"},{"Id":"507290501","IsPullRequest":true,"CreatedAt":"2019-10-15T14:39:34","Actor":"viewizard","Number":"27201","RawContent":null,"Title":"Enabled FunctionEnter/FunctionLeave/ProfileTailcall hooks on Linux x86.","State":"open","Body":"Based on ./src/vm/i386/asmhelpers.asm FunctionEnter/FunctionLeave/ProfileTailcall\r\ncode for Windows x86.","Url":"https://github.com/dotnet/coreclr/pull/27201","RelatedDescription":"Open PR \"Enabled FunctionEnter/FunctionLeave/ProfileTailcall hooks on Linux x86.\" (#27201)"},{"Id":"507230146","IsPullRequest":false,"CreatedAt":"2019-10-15T13:02:19","Actor":"iSazonov","Number":"27200","RawContent":null,"Title":"Does coreclr.pdb contain all symbols?","State":"open","Body":"I collected a trace with PerfView where OTHER <\\<?!?>> is very large - 37.4% (usually it is <1%) that makes the trace useless.\r\n\r\nMy concern is that coreclr.pdb does not contains all symbols.\r\n\r\n![image](https://user-images.githubusercontent.com/22290914/66833146-b5643980-ef74-11e9-961c-b05c265579ef.png)\r\n\r\n### PerfView log:\r\n[trace_log.txt](https://github.com/dotnet/coreclr/files/3729309/trace_log.txt)\r\n\r\nThe log contains many lines like:\r\n```\r\nLoaded, resolving symbols\r\nWarning: NOT IN RANGE: address 0x17582e start d0a60 end d0d69 Offset a4dce Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x175872 start d0a60 end d0d69 Offset a4e12 Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x1759ba start d0a60 end d0d69 Offset a4f5a Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x175a08 start d0a60 end d0d69 Offset a4fa8 Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x175a1b start d0a60 end d0d69 Offset a4fbb Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x175a21 start d0a60 end d0d69 Offset a4fc1 Len 309, symbol WKS::gc_heap::try_allocate_more_space, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x176c0a start 4500 end 49e3 Offset 17270a Len 4e3, symbol RuntimeMethodHandle::GetMethodBody, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x176c72 start 4500 end 49e3 Offset 172772 Len 4e3, symbol RuntimeMethodHandle::GetMethodBody, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x176dbf start 4500 end 49e3 Offset 1728bf Len 4e3, symbol RuntimeMethodHandle::GetMethodBody, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f267 start 1c690 end 1db82 Offset 162bd7 Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f27f start 1c690 end 1db82 Offset 162bef Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f2af start 1c690 end 1db82 Offset 162c1f Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f2b5 start 1c690 end 1db82 Offset 162c25 Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f33e start 1c690 end 1db82 Offset 162cae Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x17f3b6 start 1c690 end 1db82 Offset 162d26 Len 14f2, symbol WKS::gc_heap::mark_phase, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x184736 start 2fbb0 end 2fc68 Offset 154b86 Len b8, symbol SHash<FuncPtrStubs::PrecodeTraits>::Lookup, prefixing with ??.\r\nWarning: NOT IN RANGE: address 0x189964 start 4545c end 45529 Offset 144508 Len cd, symbol SString::ConvertASCIIToUnicode, prefixing with ??.\r\n```\r\n\r\n### Repo steps:\r\n1. Install PowerShell Core 7.0 Preview from https://github.com/PowerShell/PowerShell/ page\r\n2. Collect PerfView trace for follow\r\n```powershell\r\n$array1 = 1..30000\r\n$array2 = 10001..40000\r\n Measure-Command { Compare-Object -ReferenceObject  $array1 -DifferenceObject  $array2 }\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27200","RelatedDescription":"Open issue \"Does coreclr.pdb contain all symbols?\" (#27200)"},{"Id":"506986656","IsPullRequest":true,"CreatedAt":"2019-10-15T12:53:05","Actor":"stephentoub","Number":"27194","RawContent":null,"Title":"Use stackalloc expressions with builder ctors","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27194","RelatedDescription":"Closed or merged PR \"Use stackalloc expressions with builder ctors\" (#27194)"},{"Id":"507159169","IsPullRequest":false,"CreatedAt":"2019-10-15T10:38:41","Actor":"alpencolt","Number":"27199","RawContent":null,"Title":"[armel/Tizen] Broken crossgen2 build","State":"open","Body":"`crossgen2` build for `armel` is broken after #26960 with error\r\n```\r\n CSC : error CS2001: Source file '/var/lib/jenkins/workspace/netcore/nightly_master/build_coreclr_rpm_stress/repo/code/artifacts/obj/System.Private.CoreLib/armel/Release/../../../Eventing/arm/Release/NativeRuntimeEventSource.cs' could not be found. [/var/lib/jenkins/workspace/netcore/nightly_master/build_coreclr_rpm_stress/repo/code/src/System.Private.CoreLib/System.Private.CoreLib.csproj]\r\n```\r\nThis PR change location of `NativeRuntimeEventSource.cs` which located now in `armel` subfolder: https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/System.Private.CoreLib.csproj#L318 but being searched in `arm`.\r\n\r\nReason is different values in `$(Platfrom)` and `$(BuildArch)` variables:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/System.Private.CoreLib.csproj#L40\r\n\r\ncc @davidwrighton @jkotas \r\ncc @o-piskunov","Url":"https://github.com/dotnet/coreclr/issues/27199","RelatedDescription":"Open issue \"[armel/Tizen] Broken crossgen2 build\" (#27199)"},{"Id":"507090023","IsPullRequest":false,"CreatedAt":"2019-10-15T08:32:28","Actor":"rechkalov","Number":"27198","RawContent":null,"Title":"IAsyncEnumerable possible memory leak","State":"open","Body":"Following code creates \"Event\" objects. Looks like that no references to them are kept, but last created (and returned) in each stream is not garbage collected. Is this incorrect usage or bug?\r\n\r\n```c#\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var counter = 0;\r\n        while (true)\r\n        {\r\n            await Test(counter++);\r\n            GC.Collect();\r\n        }\r\n    }\r\n\r\n    static async Task Test(int counter)\r\n    {\r\n        await foreach (var e in CreateEventSource(counter))\r\n        {\r\n            Console.WriteLine(e);\r\n        }\r\n    }\r\n\r\n    static async IAsyncEnumerable<Event> CreateEventSource(int counter)\r\n    {\r\n        for (var i = 0; i < 100; i++)\r\n        {\r\n            await Task.Delay(1); // this line can be commented and then \"Events\" \r\n            yield return new Event(counter, i);\r\n        }\r\n    }\r\n}\r\n\r\nclass Event\r\n{\r\n    private readonly int _counter;\r\n    private readonly int _i;\r\n\r\n    public Event(int counter, int i)\r\n    {\r\n        _counter = counter;\r\n        _i = i;\r\n    }\r\n\r\n    public override string ToString()\r\n        => $\"({_counter}, {_i})\";\r\n}\r\n```\r\n\r\nUsing TargetFramework netcoreapp3.0\r\n\r\n```\r\n> dotnet --info\r\nПакет SDK для .NET Core (отражающий любой global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nСреда выполнения:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27198","RelatedDescription":"Open issue \"IAsyncEnumerable possible memory leak\" (#27198)"},{"Id":"507380767","IsPullRequest":false,"CreatedAt":"2019-10-15T07:34:52","Actor":"softwaretirol","Number":"27205","RawContent":null,"Title":"Fatal error. Internal CLR error. (0x80131506)","State":"open","Body":"# Issue Title\r\n\r\nDuring debugging an application, the app is crashing. It happens completly randomly, but most of the time if you step over an \"await ..\" statement. \r\n\r\nHow can i provide you more information? It is a large .NET Core 3.0 application, so a sample is a little bit hard to create.\r\n\r\n# General\r\nFatal error. Internal CLR error. (0x80131506)\r\n   at Benchmark.BenchmarkRun.WebApi.TestWebApiController.Get(System.Nullable`1<Int32>)\r\n   at DynamicClass.lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(System.Object, System.Object[])\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor+SyncObjectResultExecutor.Execute(Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper, Microsoft.Extensions.Internal.ObjectMethodExecutor, System.Object, System.Object[])\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Mvc.Routing.ActionEndpointFactory+<>c__DisplayClass7_0.<CreateRequestDelegate>b__0(Microsoft.AspNetCore.Http.HttpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware+<Invoke>d__5.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[Microsoft.AspNetCore.Authorization.AuthorizationMiddleware+<Invoke>d__5, Microsoft.AspNetCore.Authorization.Policy, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](<Invoke>d__5 ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.AspNetCore.Authorization.AuthorizationMiddleware+<Invoke>d__5, Microsoft.AspNetCore.Authorization.Policy, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]](<Invoke>d__5 ByRef)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.SetRoutingAndContinue(Microsoft.AspNetCore.Http.HttpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)\r\n   at ILEngine.Contracts.WebApi.WebApiHost.Execute(Microsoft.AspNetCore.Http.DefaultHttpContext)\r\n   at ILEngine.Contracts.WebApi.ILWebApi+<Run>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at ILEngine.Contracts.WebApi.ILWebApi.Run(ILEngine.Coordinator.Contracts.HttpRequestData)\r\n   at ILEngine.Worker.WorkerApi+<InvokePackageApi>d__19.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at ILEngine.Worker.WorkerApi.InvokePackageApi(System.Guid, System.String, System.String, System.String, ILEngine.Coordinator.Contracts.HttpRequestData)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at ILEngine.Communication.Handler.ApiMethod.Invoke(System.Object, System.Object[])\r\n   at ILEngine.Communication.Handler.NetworkMethodInvoker+<Invoke>d__6.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.__Canon ByRef)\r\n   at ILEngine.Communication.Handler.NetworkMethodInvoker.Invoke(ILEngine.Communication.Handler.SocketHandler, Int64, ILEngine.Communication.Handler.ApiMethod, ILEngine.Contracts.InvokeArgument[])\r\n   at ILEngine.Communication.Handler.NetworkMethodInvoker+<HandleInvokeMessage>d__5.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].ExecutionContextCallback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext(System.Threading.Thread)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].MoveNext()\r\n   at System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter+<>c.<OutputCorrelationEtwEvent>b__6_0(System.Action, System.Threading.Tasks.Task)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+ContinuationWrapper.Invoke()\r\n   at System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter.RunAction(System.Object)\r\n   at System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n","Url":"https://github.com/dotnet/coreclr/issues/27205","RelatedDescription":"Open issue \"Fatal error. Internal CLR error. (0x80131506)\" (#27205)"},{"Id":"507007512","IsPullRequest":true,"CreatedAt":"2019-10-15T05:03:58","Actor":"benaadams","Number":"27195","RawContent":null,"Title":"Improve Dictionary TryGetValue size/perfomance","State":"open","Body":"From https://github.com/dotnet/coreclr/pull/27149 without the hashcode-to-bucket mapping changes\r\n\r\n* Avoid second bounds check; by passing a `ref` rather than an index to TryGetValue/indexer get methods; so a second dip back to the backing array is not needed.\r\n* Return null `ref` from FindValue so ContainsKey doesn't pay a struct copy cost when using same method.\r\n* Rearrange FindValue return block to be a straighter flow for the common path of found item\r\n* Rearrange `Entry` struct to put `hashCode` first rather than `next` as it is accessed first which should work with prefetching better.\r\n* move `collisionCount++` before `collisionCount` test so the Jit *could* micro-fuse them (though doesn't currently https://github.com/dotnet/coreclr/issues/7566)\r\n\r\nSize improvements\r\n```\r\nTotal bytes of diff: -1647 (-0.05% of base)\r\n    diff is an improvement.\r\n\r\nTotal byte diff includes -118 bytes from reconciling methods\r\n        Base had    4 unique methods,     3935 unique bytes\r\n        Diff had    6 unique methods,     3817 unique bytes\r\n\r\nTop file improvements by size (bytes):\r\n       -1647 : System.Private.CoreLib.dasm (-0.05% of base)\r\n\r\n1 total files with size differences (1 improved, 0 regressed), 0 unchanged.\r\n```\r\n\r\n/cc @jkotas @AntonLapounov @GrabYourPitchforks ","Url":"https://github.com/dotnet/coreclr/pull/27195","RelatedDescription":"Open PR \"Improve Dictionary TryGetValue size/perfomance\" (#27195)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"507620689","IsPullRequest":true,"CreatedAt":"2019-10-16T05:21:25","Actor":"wli3","Number":"12899","RawContent":null,"Title":"Fix eventProperties.Add mutate _commonProperties","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/12899","RelatedDescription":"Open PR \"Fix eventProperties.Add mutate _commonProperties\" (#12899)"},{"Id":"507549652","IsPullRequest":true,"CreatedAt":"2019-10-16T01:10:30","Actor":"dotnet-maestro[bot]","Number":"12898","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.6\r\n- **Date Produced**: 10/15/2019 11:30 PM\r\n- **Commit**: b2bff948e10f7632a40799808f4d7c74b912df80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.6\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12898","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12898)"},{"Id":"505812106","IsPullRequest":true,"CreatedAt":"2019-10-16T00:22:54","Actor":"dotnet-bot","Number":"12874","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12874","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.4xx\" (#12874)"},{"Id":"507541876","IsPullRequest":true,"CreatedAt":"2019-10-16T00:04:01","Actor":"dotnet-bot","Number":"12897","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.4xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12897","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/2.2.4xx\" (#12897)"},{"Id":"505628357","IsPullRequest":true,"CreatedAt":"2019-10-15T22:54:38","Actor":"dotnet-maestro[bot]","Number":"12871","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/11/2019 9:07 PM\r\n- **Commit**: f15311bdc5e9fbf4026a3099c32c5ea6b50d6236\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19511.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19511.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19511.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19511.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19511.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19511.4 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12871","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12871)"},{"Id":"506316072","IsPullRequest":true,"CreatedAt":"2019-10-15T22:21:54","Actor":"dotnet-bot","Number":"12883","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12883","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#12883)"},{"Id":"507470342","IsPullRequest":true,"CreatedAt":"2019-10-15T21:06:55","Actor":"wli3","Number":"12896","RawContent":null,"Title":"Merges/release/3.1.1xx to master","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12896","RelatedDescription":"Closed or merged PR \"Merges/release/3.1.1xx to master\" (#12896)"},{"Id":"507416591","IsPullRequest":false,"CreatedAt":"2019-10-15T18:42:45","Actor":"dagood","Number":"12895","RawContent":null,"Title":"Running \"dotnet Some.NonExistent.dll\" for an FDD app tells me \"dotnet-Some.NonExistent.dll\" doesn't exist","State":"open","Body":"## Steps to reproduce\r\n\r\nRun `dotnet Some.NonExistent.dll`, where `Some.NonExistent.dll` doesn't exist. My intent here is to use the `dotnet` host to run an FDD app.\r\n\r\n## Expected  behavior\r\n\r\nThe error message tells me `Some.NonExistent.dll` doesn't exist (if I meant to run a program).\r\n\r\n## Actual behavior\r\n\r\nThe error message tells me `dotnet-Some.NonExistent.dll` doesn't exist (if I meant to run a program):\r\n(Note the `dotnet-` prefix!)\r\n\r\n```\r\n$ dotnet Some.NonExistent.dll\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-Some.NonExistent.dll does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\n```\r\n\r\nI remember the `dotnet-` prefix being used to build/find SDK commands, maybe that's what the message means by \"a .NET Core program\"? I'm not sure, I may just not understand the message.\r\n\r\n## Environment data\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/12895","RelatedDescription":"Open issue \"Running \"dotnet Some.NonExistent.dll\" for an FDD app tells me \"dotnet-Some.NonExistent.dll\" doesn't exist\" (#12895)"},{"Id":"507408025","IsPullRequest":false,"CreatedAt":"2019-10-15T18:24:21","Actor":"BananchickPasha","Number":"12894","RawContent":null,"Title":"dotnet build does not run without sudo","State":"open","Body":"When i write `dotnet build` in any project, I have this error:\r\n```\r\n> dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 80.46 ms for /home/banan/programming/dotnet/test3/test3.csproj.\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: System.UnauthorizedAccessException: Access to the path '/home/banan/programming/dotnet/test3/obj/Debug/netcoreapp3.0/t\r\nest3' is denied. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:  ---> System.IO.IOException: Permission denied [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    --- End of inner exception stack trace --- [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter) [/\r\nhome/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode) [/home/banan/programmi\r\nng/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options) [/home/banan/programming/do\r\ntnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Fil\r\neOptions options) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileSystem.CopyFile(String sourceFullPath, String destFullPath, Boolean overwrite) [/home/banan/progra\r\nmming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.File.Copy(String sourceFileName, String destFileName, Boolean overwrite) [/home/banan/programming/dotn\r\net/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.CopyFile(String sourcePath, String destinationPath) [/home/banan/pro\r\ngramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestination\r\nFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/banan/prog\r\nramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingCon\r\ntext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018: System.UnauthorizedAccessException: Access to the path '/home/banan/programming/dotnet/test3/obj/Debug/netcoreapp3.0/t\r\nest3' is denied. [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:  ---> System.IO.IOException: Permission denied [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    --- End of inner exception stack trace --- [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter) [/\r\nhome/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode) [/home/banan/programmi\r\nng/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream.OpenHandle(FileMode mode, FileShare share, FileOptions options) [/home/banan/programming/do\r\ntnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Fil\r\neOptions options) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.FileSystem.CopyFile(String sourceFullPath, String destFullPath, Boolean overwrite) [/home/banan/progra\r\nmming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at System.IO.File.Copy(String sourceFileName, String destFileName, Boolean overwrite) [/home/banan/programming/dotn\r\net/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.CopyFile(String sourcePath, String destinationPath) [/home/banan/pro\r\ngramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.CreateAppHost(String appHostSourceFilePath, String appHostDestination\r\nFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String assemblyToCopyResorcesFrom) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/banan/programming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/banan/prog\r\nramming/dotnet/test3/test3.csproj]\r\n/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(370,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingCon\r\ntext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/banan/programming/dotnet/test3/test3.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\n\r\n```\r\n\r\nbut when I run the same command under root, all works OK:\r\n```\r\n> sudo dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 79.49 ms for /home/banan/programming/dotnet/test3/test3.csproj.\r\n  test3 -> /home/banan/programming/dotnet/test3/bin/Debug/netcoreapp3.0/test3.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:02.35\r\n\r\n```\r\n\r\nAnother problem is that when I write `sudo dotnet run`, It cannot find some files\r\n```\r\n> sudo dotnet run\r\nSystem.ComponentModel.Win32Exception (2): No such file or directory\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, B\r\noolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd,\r\nInt32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\n```\r\n\r\nWhat can it be? \r\nHere is my dotnet info:\r\n```\r\n> dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     nixos\r\n OS Version:  19.09.736.9bbad4c6254\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/nix/store/zbll97grz8m6x04b9xsflr3kq7d85qb4-dotnet-sdk-2.2.401/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```","Url":"https://github.com/dotnet/cli/issues/12894","RelatedDescription":"Open issue \"dotnet build does not run without sudo\" (#12894)"},{"Id":"505719703","IsPullRequest":false,"CreatedAt":"2019-10-15T17:52:27","Actor":"TimonDDD","Number":"12872","RawContent":null,"Title":"\"dotnet publish\" doesn't add file version, product name in properties of executable","State":"closed","Body":"## Steps to reproduce\r\nCreate F# console app, target netcoreapp3.0\r\nspecify Version, FileVersion, AssemblyVersion, etc in the .fsproj file\r\nrun `dotnet publish -f netcoreapp3.0 -r win10-x64 -c Release /p:PublishSingleFile=true /p:PublishTrimmed=true --self-contained`\r\nto make executable\r\n## Expected  behavior\r\nexecutable should have file version, product name, etc in properties\r\n## Actual behavior\r\nexecutable doesn't have file version, product name, etc in properties\r\n##\r\n`dotnet --list-sdks` output\r\n```\r\n2.2.401 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n3.0.100 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n```\r\n\r\nAn example of .fsproj file\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <AssemblyVersion>1.0.0.99</AssemblyVersion>\r\n    <FileVersion>1.0.0.99</FileVersion>\r\n    <Version>1.0.0.99</Version>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThe same command against C# console app produces executable with file version.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12872","RelatedDescription":"Closed issue \"\"dotnet publish\" doesn't add file version, product name in properties of executable\" (#12872)"},{"Id":"507364652","IsPullRequest":true,"CreatedAt":"2019-10-15T17:20:26","Actor":"dotnet-maestro[bot]","Number":"12893","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.3\r\n- **Date Produced**: 10/15/2019 3:41 PM\r\n- **Commit**: 119d6f9ad450a81c0b93491adebc8090ee10858a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12893","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12893)"},{"Id":"507300935","IsPullRequest":true,"CreatedAt":"2019-10-15T15:25:29","Actor":"dotnet-maestro[bot]","Number":"12891","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.2\r\n- **Date Produced**: 10/15/2019 1:44 PM\r\n- **Commit**: 1f4b5745cc95e76b2643cff3eb1894ad35a57044\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12891","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12891)"},{"Id":"507309987","IsPullRequest":false,"CreatedAt":"2019-10-15T15:09:11","Actor":"TclasenITVT","Number":"12892","RawContent":null,"Title":"SingleFile Publish Win10-x64 doesnt run on newer windows version than the one it was build on","State":"open","Body":"## Steps to reproduce\r\npublish a dotnet core 3.0 console app on windows 10.0.14393.\r\nTry running it on a Windows PC 10 x64 1803 (17134.1069).\r\n\r\n## Expected  behavior\r\nThe Software executes.\r\n\r\n## Actual behavior\r\nNot starting but outputting this message (German System Language):\r\n\r\n> Die Version von ITVT.Tool.exe ist mit der ausgeführten Windows-Version nicht kompatibel. Überprüfen Sie die Systeminformationen des Computers, und wenden Sie sich anschließend an den Herausgeber der Software.\r\n\r\nRough translation:\r\nThis version of the ITVT.Tool.exe is incompatible with the current windows-version. Check the systeminformation of the computer and then talk to the creator of the software.\r\n\r\n## Environment data\r\nBuildAgent OS Version: Windows_NT 10.0.14393\r\nOn the build agent the dotnet core 3.0.100 sdk is installed.\r\nUser Win 10 x64 1803 (17134.1069) here the dotnet core 3.0.100 sdk ist not installed. Also no other dotnet sdk/runtime.\r\n\r\nPublishProfile:\r\n```\r\n <PropertyGroup>\r\n     <PublishProtocol>FileSystem</PublishProtocol>\r\n     <Configuration>Release</Configuration>\r\n     <Platform>Any CPU</Platform>\r\n     <TargetFramework>netcoreapp3.0</TargetFramework>\r\n     <PublishDir>bin\\Release\\netcoreapp3.0\\publish\\</PublishDir>\r\n     <RuntimeIdentifier>win10-x64</RuntimeIdentifier>\r\n     <SelfContained>true</SelfContained>\r\n     <PublishSingleFile>true</PublishSingleFile>\r\n     <PublishTrimmed>true</PublishTrimmed>\r\n</PropertyGroup>\r\n```\r\n\r\n--\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12892","RelatedDescription":"Open issue \"SingleFile Publish Win10-x64 doesnt run on newer windows version than the one it was build on\" (#12892)"},{"Id":"507249711","IsPullRequest":false,"CreatedAt":"2019-10-15T13:35:25","Actor":"t-hart","Number":"12890","RawContent":null,"Title":"dotnet cli, test, build, run, broken; Infinite recursion","State":"open","Body":"Hey! I ran into an issue today with the CLI, where suddenly nothing seems to work anymore. I'm not sure how I got into this state, but now I can't seem to get out. I tried reinstalling, rebooting, upgrading my OS. Almost every single `dotnet` command I've tried (the only exception being `--version`) terminates with an infinite recursion error.\r\n\r\n## Steps to reproduce\r\n\r\nNot sure how I got into this state, but now most any command I try and run gives me the same error. `test`, `build`, `run`, `publish`, and `--info` all yield the same result. \r\n\r\n## Expected  behavior\r\n\r\nThe commands should do what they are designed to, not throw an infinite recursion error.\r\n\r\n## Actual behavior\r\n\r\nThe processes terminate with this output:\r\n```\r\nProcess terminated. Infinite recursion during resource lookup within System.Private.CoreLib.  This may be a bug in System.Private.CoreLib, or potentially in certain extensibility points such as assembly resolve events or CultureInfo names.  Resource name: Argument_InvalidResourceCultureName\r\n   at System.Environment.FailFast(System.String)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String, System.String)\r\n   at System.Globalization.CultureInfo.VerifyCultureName(System.String, Boolean)\r\n   at System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String, System.String)\r\n   at System.Globalization.CultureInfo.VerifyCultureName(System.String, Boolean)\r\n   at System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)\r\n   at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at Microsoft.TemplateEngine.Cli.LocalizableStrings.get_DisplaysHelp()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.CommandParserSupport.get_NewCommandVisibleArgs()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.CommandParserSupport.CreateNewCommandWithoutTemplateInfo(System.String)\r\n   at Microsoft.DotNet.Cli.Parser..cctor()\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(System.String[], Microsoft.DotNet.Cli.Telemetry.ITelemetry)\r\n   at Microsoft.DotNet.Cli.Program.Main(System.String[])\r\n```\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output: `dotnet --info` exits with the same message as above, but `dotnet --version` yields `3.0.100`\r\n\r\nOn macOS. Was on Mojave, tried updating to Catalina to get around this, but nothing changed.\r\n\r\nSorry for not being able to dump `--info` output, but just let  me know what you need, and I'll try and find out for you.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12890","RelatedDescription":"Open issue \"dotnet cli, test, build, run, broken; Infinite recursion\" (#12890)"},{"Id":"507220720","IsPullRequest":true,"CreatedAt":"2019-10-15T13:15:27","Actor":"dotnet-maestro[bot]","Number":"12889","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 11:25 AM\r\n- **Commit**: 3ab6f2af2d6bf29dfda7435d455de62103fce0bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19515.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19515.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12889","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12889)"},{"Id":"506935932","IsPullRequest":false,"CreatedAt":"2019-10-15T06:48:32","Actor":"MisinformedDNA","Number":"12888","RawContent":null,"Title":"tool install can't find package in private NuGet feed","State":"closed","Body":"## Steps to reproduce\r\n1. Create an Azure Artifacts feed\r\n2. Push a pre-release global tool to the feed\r\n3. Click \"Connect Feed\" to get URL\r\n4. Set up Feed in VS to see that the package does exist and is marked pre-release\r\n5. Install the tool via Azure Pipelines\r\n\r\n```yaml\r\n  - task: NuGetCommand@2\r\n    displayName: 'Add auth values'\r\n    inputs:\r\n      command: custom\r\n      arguments: sources update -Name \"SomeName\" -Username \"vsts\" -Password \"$(System.AccessToken)\" -StorePasswordInClearText -ConfigFile NuGet.Config\r\n   \r\n  - pwsh: cat Nuget.config\r\n\r\n  - pwsh: dotnet tool install --global ToolName --version 1.0.1-ci-20191014-185132 --configfile NuGet.config\r\n```\r\n\r\n## Expected  behavior\r\n\r\nTool is successfully installed.\r\n\r\n## Actual behavior\r\n\r\nReceive an error that package can't be found:\r\n\r\n> error NU1101: Unable to find package ToolName. No packages exist with this id in source(s): FeedName, C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\r\n> The tool package could not be restored.\r\n> Tool 'ToolName' failed to install. This failure may have been caused by:\r\n> \r\n> * You are attempting to install a preview release and did not use the --version option to specify the version.\r\n> * A package by this name was found, but it was not a .NET Core tool.\r\n> * The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n> * You mistyped the name of the tool.\r\n> \r\n> For more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n> ##[debug]$LASTEXITCODE: 1\r\n> \r\n\r\nNot getting a 401 anymore, so auth doesn't appear to be the problem.\r\n\r\nNuGet.config:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n   <packageSources>\r\n      <add key=\"FeedName\" value=\"https://OrgName.pkgs.visualstudio.com/_packaging/FeedName/nuget/v3/index.json\" />\r\n   </packageSources>\r\n  <packageSourceCredentials>\r\n    <FeedName>\r\n      <add key=\"Username\" value=\"vsts\" />\r\n      <add key=\"ClearTextPassword\" value=*** />\r\n    </FeedName>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\nThe package name and version are definitely correct. Am I missing something? Is there a better way to do this?\r\n\r\n## Environment data\r\nAzure DevOps\r\ndotnet SDK 3.0.100\r\n\r\n@wli3 ","Url":"https://github.com/dotnet/cli/issues/12888","RelatedDescription":"Closed issue \"tool install can't find package in private NuGet feed\" (#12888)"},{"Id":"506498982","IsPullRequest":false,"CreatedAt":"2019-10-15T05:30:48","Actor":"khteh","Number":"12886","RawContent":null,"Title":"publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00'","State":"closed","Body":"```\r\n$ dn publish -f netcoreapp3.0 -c Release --no-restore --no-build src/Biz4x.Frontend.Web/\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  bower font-awesome    extra-resolution Unnecessary resolution: font-awesome#5.0.8\r\n  bower popper.js       extra-resolution Unnecessary resolution: popper.js#v1.14.1\r\n  It was not possible to find any compatible framework version\r\n  The specified framework 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00' was not found.\r\n    - The following frameworks were found:\r\n        3.0.0 at [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n  \r\n  You can resolve the problem by installing the specified framework and/or SDK.\r\n  \r\n  The .NET Core frameworks can be found at:\r\n    - https://aka.ms/dotnet-download\r\n/usr/src/4xlabs/bz-frontend/src/Biz4x.Frontend.Web/Biz4x.Frontend.Web.csproj(89,5): error MSB3073: The command \"dotnet bundle\" exited with code 150.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12886","RelatedDescription":"Closed issue \"publish -f netcoreapp3.0 errorneously looks for 'Microsoft.NETCore.App', version '2.0.0-preview1-002111-00'\" (#12886)"},{"Id":"505735454","IsPullRequest":false,"CreatedAt":"2019-10-14T23:31:57","Actor":"shidouli","Number":"12873","RawContent":null,"Title":"X509Extension.Format() doesn't work well in macOS system","State":"closed","Body":"## Steps to reproduce\r\nMacOs:\r\nPS > $ext.Format($false)\r\n3042304006082B06010505073002863468747470733A2F2F73632D7072642D636F6D702D76633035342E656E672E766D776172652E636F6D2F6166642F766563732F6361\r\n\r\nWhile the same certificate in Ubuntu:\r\nPS > $ext.Format($false) CA Issuers - URI:https://sc-prd-comp-vc054.eng.vmware.com/afd/vecs/ca\r\n\r\n## Expected  behavior\r\nIn the MacOs, it should return the same result with the one in Ubuntu\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12873","RelatedDescription":"Closed issue \"X509Extension.Format() doesn't work well in macOS system\" (#12873)"},{"Id":"505611218","IsPullRequest":false,"CreatedAt":"2019-10-14T22:04:32","Actor":"khteh","Number":"12870","RawContent":null,"Title":"error MSB6006: \"csc.dll\" exited with code 137","State":"closed","Body":"## Steps to reproduce\r\n\r\n![Screenshot from 2019-10-11 10-54-24](https://user-images.githubusercontent.com/3871483/66621543-3e970b80-ec17-11e9-925d-7a2ac8db224f.png)\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12870","RelatedDescription":"Closed issue \"error MSB6006: \"csc.dll\" exited with code 137\" (#12870)"},{"Id":"506495909","IsPullRequest":false,"CreatedAt":"2019-10-14T21:52:21","Actor":"John0King","Number":"12885","RawContent":null,"Title":"Does consume COM component be supported?","State":"closed","Body":"## Steps to reproduce\r\n1. create a class library that use com, and target net461\r\n2. dotnet build\r\n\r\n## Expected  behavior\r\nbuild success and there's a com dll in the project\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Microsoft.Common.CurrentVersion.targets(2726,5): error : MSB4803: .NET Core 版本的 MSBuild 不支持“ResolveComReference”。请使用 .NET Framework 版本的 MSBuild。有关更多详细信息，请参阅 https://aka.ms/msbuild/MSB4803。 [E:\\Projects\\FingerprintConnector\\src\\FingerprintConnector.Services\\FingerprintConnector.Services.csproj]\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12885","RelatedDescription":"Closed issue \"Does consume COM component be supported?\" (#12885)"},{"Id":"506815973","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:38","Actor":"dsplaisted","Number":"12887","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/12887","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#12887)"},{"Id":"506343288","IsPullRequest":true,"CreatedAt":"2019-10-14T10:27:45","Actor":"dotnet-maestro[bot]","Number":"12884","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191014.1\r\n- **Date Produced**: 10/14/2019 8:54 AM\r\n- **Commit**: 4ace84dbf94128b4825c76cdd09b46dba7473478\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19514.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19514.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12884","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12884)"},{"Id":"506308966","IsPullRequest":true,"CreatedAt":"2019-10-13T11:35:24","Actor":"dotnet-maestro[bot]","Number":"12882","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 10:00 AM\r\n- **Commit**: 17c01271d621e2947dbf702dda0d61e43c5ec150\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19513.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12882","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12882)"},{"Id":"506220812","IsPullRequest":true,"CreatedAt":"2019-10-12T18:55:23","Actor":"dotnet-maestro[bot]","Number":"12881","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191012.2\r\n- **Date Produced**: 10/12/2019 5:16 PM\r\n- **Commit**: 45672e39189b07c5f5928d287e097e136acbed20\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19512.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19512.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12881","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12881)"},{"Id":"506220726","IsPullRequest":true,"CreatedAt":"2019-10-12T18:24:27","Actor":"omajid","Number":"12880","RawContent":null,"Title":"Handle linux distributions without a VERSION_ID in dotnet-install.sh","State":"open","Body":"Some examples of such rolling distributions include Gentoo (`gentoo-x64` in the RID catalog) and Arch Linux.\r\n\r\nThis uses the [alternate value for a parameter expansion](https://wiki.bash-hackers.org/syntax/pe#use_an_alternate_value) syntax for bash, basically saying \"if `VERSION_ID` is set and not empty, expand this value to `.${VERSION_ID}`\".\r\n\r\ncc @alucryd \r\n","Url":"https://github.com/dotnet/cli/pull/12880","RelatedDescription":"Open PR \"Handle linux distributions without a VERSION_ID in dotnet-install.sh\" (#12880)"},{"Id":"506095089","IsPullRequest":true,"CreatedAt":"2019-10-12T16:31:56","Actor":"dotnet-maestro[bot]","Number":"12879","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 2:52 PM\r\n- **Commit**: f316dff97b89c97596555b1b7c0d1d7adb077ffb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19512.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19512.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19512.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19512.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12879","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12879)"},{"Id":"506064396","IsPullRequest":true,"CreatedAt":"2019-10-11T21:55:27","Actor":"dotnet-maestro[bot]","Number":"12878","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.5\r\n- **Date Produced**: 10/11/2019 8:15 PM\r\n- **Commit**: d984761132ae48859c271bc66e5bb886e61fa84a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19511.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19511.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19511.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19511.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19511.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12878","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12878)"},{"Id":"506040319","IsPullRequest":false,"CreatedAt":"2019-10-11T20:27:38","Actor":"MisinformedDNA","Number":"12877","RawContent":null,"Title":"Run selenium in a global tool","State":"closed","Body":"# Steps to reproduce\r\n\r\n1. Create a console app (.NET Core 2.1)\r\n2. Add NuGet references for `Selenium.WebDriver`, `Selenium.WebDriver.ChromeDriver`\r\n3. Add this code to instantiate the driver: `_ = new ChromeDriver(\".\");`\r\n4. Go to command line\r\n5. Run `dotnet pack`\r\n6. Unzip the packed file and verify that `chromedriver.exe` is there\r\n7. Run `dotnet tool install --global --add-source ./nupkg SeleniumToolPoC`\r\n8. Run `SeleniumToolPoC`\r\n\r\n## Expected  behavior\r\n\r\nApp initiates the chrome driver and then completes successfully\r\n\r\n## Actual behavior\r\n\r\n> Unhandled Exception: OpenQA.Selenium.DriverServiceNotFoundException: The file .\\chromedriver.exe does not exist. The driver can be downloaded at http://chromedriver.storage.googleapis.com/index.html\r\n\r\n \r\n`chromedriver.exe` is in `%USERPROFILE%\\.dotnet\\tools\\.store\\seleniumtoolpoc\\1.0.0\\seleniumtoolpoc\\1.0.0\\tools\\netcoreapp2.1\\any`, but not in `%USERPROFILE%\\.dotnet\\tools`\r\n\r\nI'm guessing this is my fault and not a bug, but I can't figure out how to accomplish it.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007517 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008533 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.108 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\nOP: https://stackoverflow.com/questions/58227979/how-to-embed-a-selenium-exe-into-a-nuget-package\r\n\r\nSample project: \r\n[SeleniumToolPoC.zip](https://github.com/dotnet/cli/files/3719482/SeleniumToolPoC.zip)\r\n\r\n@wli3 ","Url":"https://github.com/dotnet/cli/issues/12877","RelatedDescription":"Closed issue \"Run selenium in a global tool\" (#12877)"},{"Id":"506009206","IsPullRequest":true,"CreatedAt":"2019-10-11T19:30:27","Actor":"dotnet-maestro[bot]","Number":"12876","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.3\r\n- **Date Produced**: 10/11/2019 5:55 PM\r\n- **Commit**: 406ed933a6cca478ec06ae0af23ab4fae6057085\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19511.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19511.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19511.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19511.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19511.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12876","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12876)"},{"Id":"505945823","IsPullRequest":true,"CreatedAt":"2019-10-11T16:55:39","Actor":"dotnet-maestro[bot]","Number":"12875","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 3:15 PM\r\n- **Commit**: 71379b3b002cbab7f70b1a28cf8ef625b09cec95\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19511.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19511.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19511.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19511.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19511.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12875","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12875)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191015.1\r\n- **Date Produced**: 10/15/2019 9:05 AM\r\n- **Commit**: a093b5b2bef24499239a2e9b4114db01fa19e446\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19515.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19515.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"},{"Id":"505304835","IsPullRequest":false,"CreatedAt":"2019-10-10T14:21:00","Actor":"Sumeetkumawat","Number":"1603","RawContent":null,"Title":"Issue while Referencing iOS native library to .net standard library","State":"open","Body":"I have three projects in my solution. I have added .net standard library say 'A'. I have some code there. Then i added ios library 'B' and added project reference of 'A' here.\r\nNow I have another .net standard library 'C' and here I would like to add reference of 'A' & 'B' projects not dll's. Reference of 'A' is added successfully but while adding reference of 'B', I \r\nsee 'Incompatible Target Framework' message.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1603","RelatedDescription":"Open issue \"Issue while Referencing iOS native library to .net standard library\" (#1603)"},{"Id":"505235113","IsPullRequest":true,"CreatedAt":"2019-10-10T12:33:39","Actor":"dotnet-maestro[bot]","Number":"1602","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.26\r\n- **Date Produced**: 10/10/2019 3:16 AM\r\n- **Commit**: 30280e07adc3c1f0776ef9531b47a769e2b45420\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.26\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1602","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1602)"},{"Id":"505224197","IsPullRequest":true,"CreatedAt":"2019-10-10T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1601","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1601","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1601)"},{"Id":"505206761","IsPullRequest":false,"CreatedAt":"2019-10-10T11:24:37","Actor":"manijak","Number":"1600","RawContent":null,"Title":"The state of X509Certificate management with netstandard, xamarin, win & macOS","State":"open","Body":"First, my apologies if this is the wrong channel to post this. I've been digging and trying to understand for weeks where the issue/limitation is to our problem, figured this would be the most suitable place to ask. We are not sure if this is a limitation with the frameworks, or the platform, or due to our limited knowledge, or a combination of all. But things are very confusing right now, and we just need proper guidance on what direction to take.\r\n\r\nEDIT: Would appreciate if @bartonjs or @filipnavara could pitch in 👍 \r\n\r\n### **Background** 💡 \r\nWe are creating a small, cross-platform (win & macos), desktop application that will act as a websocket server running only on localhost (https). This application is a bridge between our web applications and the local machine hardware (e.g. printers). In order to provide a secure connection, `SslStream` requires a `X509Certificate2` class with a `PrivateKey`.\r\n\r\nThe idea is to let the app itself generate a self-signed certificate with private key and use that to start the secure websocket service. After the certificate has been generated for the first time, we store it in the local certificate store and reuse it when the app restarts. \r\n\r\n### **Project structure & frameworks** 📦 \r\nThis is how our solution is defined. `SharedProject` is a shared lib referenced by both `AppWin` & `AppMac`. The Win & Mac projects are startup-projects for their respective platform. \r\n```\r\nOurApp.sln\r\n  |---- SharedProject (netstandard2.1)\r\n        Creates & runs the websocket service, generates certificate (win), communicates with local hardware, ect\r\n\r\n  |---- AppWin (netcore3.0)\r\n        Startup project for Windows platform. Contains platform-specific code, if any.\r\n\r\n  |---- AppMac (Xamarin.Mac)\r\n        Startup project for macOS platform. Contains platform-specific code (generates certificate).\r\n```\r\n\r\n### **How it runs** 🏃 \r\nIn our `SharedProject` we have a class taking care of certificate generation and storing. The idea was that both the Win & Mac platforms could use this to manage the certificates. It uses the `X509Certificate2` & `CertificateRequest` provided by the framework. Plus the `X509Store` to save and retrieve the certificate.\r\n\r\n**Windows** ✔️ \r\nOn Windows there are no issues. With minimum amount of code we are able to generate a self-signed certificate with private-key, store it, and run the service with it. Also re-using the certificate when the app restarts by retrieving the certificate works very well. The `X509Store` returns the certificate with the _private key_, and we can easily use it with our `SslStream`. \r\n\r\n**macOS** ❌ \r\nThings are not so clear here... We could not use the above mentioned shared class to manage certificates (that works just fine on Windows):\r\n* First issue was that we got a `PlatformNotSupportedException` when the application was trying to use the `CertificateRequest`. \r\n* Second \"issue\" was that the `X509Store` did not store or retrieve certificates from the macOS keychain, but instead it uses some local mono certificate-store that the browsers do not see (at least in our tests). And it only stored the certificate (.cer) not the private-key that was included in the `X509Certificate2` object. Plus it seemed difficult to \"Trust\" the stored certificate.\r\n\r\nSo we created a separate class to take care of certificate management for macOS inside the `AppMac (Xamarin.Mac)` project. By using `BouncyCastle` we generated an identical self-signed certificate with private-key and used that to run our secure websocket service:\r\n\r\n* When launching our Secure Websocket service on macOS, the certificate used here is automatically added to the local macOS login keychain. For us this is great, since we could not use `X509Store` to add it there in the first place.\r\n* The only way we could retrieve the certificate from the keychain was to use the `SecKeyChain` class and query for it. Thankfully the `SecCertificate` object has a `ToX509Certificate2()` function. But that still left us without the `PrivateKey` that is needed by `SslStream`. \r\n* We also tried using `SecKeyChain.FindIdentity` to retrieve both, but even tho it is easy to convert `SecCertificate` to `X509Certificate2`, there seems to be no way to convert a `SecKey` to something useful like `RSA` or `RSACryptoServiceProvider` or something that can be embedded to the `X509Certificate2`\r\n\r\n### What to do? 😭 \r\nWe are pretty much stuck when it comes to the macOS platform. There seems to be no way for us to retrieve our own X509Certificate2 with the private-key embedded. Not sure if this is because we are using Xamarin.Mac & netstandard2.1, perhaps things are easier on netcore3? But still, Xamarin & mono have been around for a long time, there should be a way for us to do this today. Must be something we are missing here and would appreciate if someone could guide us. ","Url":"https://github.com/dotnet/standard/issues/1600","RelatedDescription":"Open issue \"The state of X509Certificate management with netstandard, xamarin, win & macOS\" (#1600)"},{"Id":"504399207","IsPullRequest":false,"CreatedAt":"2019-10-09T12:43:05","Actor":"2300070","Number":"1598","RawContent":null,"Title":"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.","State":"closed","Body":"    private class TestReadOnly\r\n    {\r\n        public static readonly int Field;\r\n    }\r\n    [TestMethod]\r\n    public void TestReadOnlyField()\r\n    {\r\n        FieldInfo field = typeof(TestReadOnly).GetField(nameof(TestReadOnly.Field));\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        field.SetValue(null, 0xFF);\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        Console.WriteLine(TestReadOnly.Field);\r\n    }\r\n\r\nOutput:\r\n\r\n0\r\n255\r\n255\r\n0\r\n","Url":"https://github.com/dotnet/standard/issues/1598","RelatedDescription":"Closed issue \"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.\" (#1598)"},{"Id":"504610278","IsPullRequest":true,"CreatedAt":"2019-10-09T12:21:49","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.1\r\n- **Date Produced**: 10/9/2019 9:11 AM\r\n- **Commit**: a7ee8cdccce7d2607d58f9b93ce319209a238f7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1599)"},{"Id":"504006427","IsPullRequest":true,"CreatedAt":"2019-10-08T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1597","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 8:59 AM\r\n- **Commit**: c1092870c306b8da256e455cec0814486255d0c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1597","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1597)"},{"Id":"503415647","IsPullRequest":true,"CreatedAt":"2019-10-07T12:29:27","Actor":"dotnet-maestro[bot]","Number":"1596","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191006.4\r\n- **Date Produced**: 10/7/2019 1:07 AM\r\n- **Commit**: 38aa9151607cb63bb569beb42880057ba2cd3da0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19506.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1596)"},{"Id":"503407217","IsPullRequest":true,"CreatedAt":"2019-10-07T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191006.1\r\n- **Date Produced**: 10/6/2019 12:59 PM\r\n- **Commit**: 7acc732c615d2c2326cd347c8c1841a300a632cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19506.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"503093090","IsPullRequest":true,"CreatedAt":"2019-10-06T12:23:42","Actor":"dotnet-maestro[bot]","Number":"1594","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191005.5\r\n- **Date Produced**: 10/6/2019 3:54 AM\r\n- **Commit**: 6de42378223c6cb138d28f812c440092718c7a19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19505.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1594","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1594)"},{"Id":"503091277","IsPullRequest":true,"CreatedAt":"2019-10-06T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1593","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191005.1\r\n- **Date Produced**: 10/5/2019 12:53 PM\r\n- **Commit**: 13e1dbd86223eaa797655bf14070ea28ce6461e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19505.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1593","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1593)"},{"Id":"502956371","IsPullRequest":true,"CreatedAt":"2019-10-05T12:29:24","Actor":"dotnet-maestro[bot]","Number":"1592","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191004.9\r\n- **Date Produced**: 10/5/2019 3:05 AM\r\n- **Commit**: 99ea2b5aebf7361a5baa638c978cb6214fca5217\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19504.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1592","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1592)"},{"Id":"502954708","IsPullRequest":true,"CreatedAt":"2019-10-05T12:06:58","Actor":"dotnet-maestro[bot]","Number":"1591","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:24 AM\r\n- **Commit**: 380eaaf663b425943754a15b29e814df0bb1b078\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19504.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1591","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1591)"},{"Id":"502952894","IsPullRequest":false,"CreatedAt":"2019-10-05T11:42:25","Actor":"axanth","Number":"1590","RawContent":null,"Title":"Any specific date about support of Universal Windows Platform in .net Standard 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1590","RelatedDescription":"Open issue \"Any specific date about support of Universal Windows Platform in .net Standard 2.1?\" (#1590)"},{"Id":"502601357","IsPullRequest":true,"CreatedAt":"2019-10-04T12:26:51","Actor":"dotnet-maestro[bot]","Number":"1589","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191003.5\r\n- **Date Produced**: 10/4/2019 1:12 AM\r\n- **Commit**: eff9fbf446468ca411bf5e0475916f316eea7223\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19503.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19503.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1589)"},{"Id":"502231307","IsPullRequest":false,"CreatedAt":"2019-10-03T18:40:35","Actor":"lucbueno54","Number":"1588","RawContent":null,"Title":"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation","State":"open","Body":"Create references to two net462 projects in NETStandard and enable automatic nuget generation (GeneratePackageOnBuild = true). \r\n\r\nAn important detail that is AssemblyName is different from the csproj file. \r\n\r\nExample: \r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>Nuget.NetStandardClassLibrary</id>\r\n    <version>19.9.0</version>\r\n    <authors>Nuget.NetStandardClassLibrary</authors>\r\n    <owners>Nuget.NetStandardClassLibrary</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>Package Description</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"nuget.AnotherStandardClassLibrary\" version=\"198.0.0\" exclude=\"Build,Analyzers\" />    <= NETStandard\r\n        <dependency id=\"FrameworkClassLibrary\" version=\"1.0.0\" exclude=\"Build,Analyzers\" /> <= net462 \r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n\r\n\r\nhttps://github.com/lucbueno54/dotnetStandardReferencesTest ","Url":"https://github.com/dotnet/standard/issues/1588","RelatedDescription":"Open issue \"When referring to a net462 project in NETStandard of ProjectReference, it is supplied with AssemblyName in nuget generation\" (#1588)"},{"Id":"502031073","IsPullRequest":true,"CreatedAt":"2019-10-03T12:29:49","Actor":"dotnet-maestro[bot]","Number":"1587","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191002.6\r\n- **Date Produced**: 10/3/2019 2:33 AM\r\n- **Commit**: c8c2917540a568869ba761afa6e4dba6edeb433b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19502.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19502.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1587","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1587)"},{"Id":"502022842","IsPullRequest":true,"CreatedAt":"2019-10-03T12:11:49","Actor":"dotnet-maestro[bot]","Number":"1586","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191002.11\r\n- **Date Produced**: 10/2/2019 11:34 PM\r\n- **Commit**: da75c6547c64a91eb8a9cecf8c503331c2cc394a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19502.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19502.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1586","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1586)"},{"Id":"501454733","IsPullRequest":true,"CreatedAt":"2019-10-02T12:30:46","Actor":"dotnet-maestro[bot]","Number":"1585","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191001.13\r\n- **Date Produced**: 10/2/2019 4:05 AM\r\n- **Commit**: dcc9f626eeb0751d4ba4499f623aac42d2e95c10\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19501.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19501.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1585","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1585)"},{"Id":"501445824","IsPullRequest":true,"CreatedAt":"2019-10-02T12:11:47","Actor":"dotnet-maestro[bot]","Number":"1584","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191001.4\r\n- **Date Produced**: 10/1/2019 10:24 PM\r\n- **Commit**: c21a409f11386d22c6083198176868d3974de832\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19501.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19501.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1584)"},{"Id":"500858343","IsPullRequest":true,"CreatedAt":"2019-10-01T12:30:06","Actor":"dotnet-maestro[bot]","Number":"1583","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190930.12\r\n- **Date Produced**: 10/1/2019 3:39 AM\r\n- **Commit**: 969ce665afee70b2d591e5c271525c927a8834d0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19480.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19480.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19480.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1583","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1583)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"507618077","IsPullRequest":false,"CreatedAt":"2019-10-16T05:11:24","Actor":"Grauenwolf","Number":"41814","RawContent":null,"Title":"OleDbTransaction.Commit Exception ''SQLNCLI11' failed with no error message available","State":"open","Body":"* `netcoreapp2.1`\r\n* `System.Data.OleDB 4.6.0`\r\n\r\nCalling `OleDbTransaction.Commit` throws this exception:\r\n\r\n    System.Data.OleDb.OleDbException: ''SQLNCLI11' failed with no error message available, result code: E_NOINTERFACE(0x80004002).'\r\n\r\nThis does not occur when targeting net461.\r\n\r\nIf I execute the operations without a transaction they appear to work correctly.","Url":"https://github.com/dotnet/corefx/issues/41814","RelatedDescription":"Open issue \"OleDbTransaction.Commit Exception ''SQLNCLI11' failed with no error message available\" (#41814)"},{"Id":"507616347","IsPullRequest":false,"CreatedAt":"2019-10-16T05:05:25","Actor":"vladinvancouver","Number":"41813","RawContent":null,"Title":"CamelCase not applied to list of KeyValuePair","State":"open","Body":"CamelCase naming policy is not applied to list of KeyValuePair.\r\n\r\nCode to reproduce:\r\n\r\nJsonSerializerOptions options = new JsonSerializerOptions()\r\n{\r\n        WriteIndented = true,\r\n        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,\r\n        DictionaryKeyPolicy = JsonNamingPolicy.CamelCase\r\n};\r\n           \r\nDictionary<string, object> dict = new Dictionary<string, object>();\r\ndict.Add(\"Item1\", \"Value1\");\r\ndict.Add(\"Item2\", 22);\r\n\r\nstring json = JsonSerializer.Serialize(dict.ToList(), options);\r\n\r\nConsole.WriteLine(json);\r\n\r\nActual results:\r\n\r\n[\r\n  {\r\n    \"Key\": \"Item1\",\r\n    \"Value\": \"Value1\"\r\n  },\r\n  {\r\n    \"Key\": \"Item2\",\r\n    \"Value\": 22\r\n  }\r\n]\r\n\r\nExpected results:\r\n\r\n[\r\n  {\r\n    \"key\": \"Item1\",\r\n    \"value\": \"Value1\"\r\n  },\r\n  {\r\n    \"key\": \"Item2\",\r\n    \"value\": 22\r\n  }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41813","RelatedDescription":"Open issue \"CamelCase not applied to list of KeyValuePair\" (#41813)"},{"Id":"507487830","IsPullRequest":true,"CreatedAt":"2019-10-16T04:40:29","Actor":"safern","Number":"41800","RawContent":null,"Title":"Add stable versions for Microsoft.Bcl.* packages","State":"closed","Body":"Core-Setup hasn't consumed CoreFx in 11 days failing with error:\r\n/root/coresetup/src/managed/Microsoft.Extensions.DependencyModel/Microsoft.Extensions.DependencyModel.csproj(0,0): error NU1603: System.Text.Json 5.0.0-alpha1.19515.2 depends on Microsoft.Bcl.AsyncInterfaces (>= 1.0.0-alpha1.19515.2) but Microsoft.Bcl.AsyncInterfaces 1.0.0-alpha1.19515.2 was not found. An approximate best match of Microsoft.Bcl.AsyncInterfaces 1.0.0-preview6.19230.11 was resolved.\r\n\r\nhttps://github.com/dotnet/core-setup/pull/8477\r\n\r\nThe reason for that is because we removed the `Microsoft.Bcl` packages in: https://github.com/dotnet/corefx/pull/41270\r\n\r\nHowever, the package index was not updated accordingly, since we were lacking the stable versions in the package index for these packages, System.Text.Json, was getting a dependency to a `non-stable` package based on the current build version suffix.\r\n\r\nFYI: @scalablecory ","Url":"https://github.com/dotnet/corefx/pull/41800","RelatedDescription":"Closed or merged PR \"Add stable versions for Microsoft.Bcl.* packages\" (#41800)"},{"Id":"507590808","IsPullRequest":true,"CreatedAt":"2019-10-16T04:17:36","Actor":"stephentoub","Number":"41812","RawContent":null,"Title":"Disable deterministically failing outerloop CNG tests","State":"closed","Body":"https://github.com/dotnet/corefx/issues/41610\r\ncc: @bartonjs","Url":"https://github.com/dotnet/corefx/pull/41812","RelatedDescription":"Closed or merged PR \"Disable deterministically failing outerloop CNG tests\" (#41812)"},{"Id":"507490399","IsPullRequest":true,"CreatedAt":"2019-10-16T01:51:22","Actor":"filipnavara","Number":"41801","RawContent":null,"Title":"Disable finalization of bogus SafeWaitHandles","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/41635#issuecomment-542409299.","Url":"https://github.com/dotnet/corefx/pull/41801","RelatedDescription":"Closed or merged PR \"Disable finalization of bogus SafeWaitHandles\" (#41801)"},{"Id":"507401012","IsPullRequest":true,"CreatedAt":"2019-10-16T01:18:36","Actor":"wtgodbe","Number":"41795","RawContent":null,"Title":"Build missed OOB packages for 3.0.1","State":"closed","Body":"We missed adding these 3 OOB packages to `packages.builds`, and therefore aren't currently exposing the changes to them from the following PRs for 3.0.1:\r\n\r\nhttps://github.com/dotnet/corefx/pull/41202\r\nhttps://github.com/dotnet/corefx/pull/41660\r\nhttps://github.com/dotnet/corefx/pull/41484\r\n\r\n@safern PTAL\r\nCC @danmosemsft @bartonjs @JeremyKuhne @Anipik \r\n\r\n@mmitche we should get this in ASAP for 3.0.1\r\n\r\nThis change should be reverted once we bump branding for 3.0.2.","Url":"https://github.com/dotnet/corefx/pull/41795","RelatedDescription":"Closed or merged PR \"Build missed OOB packages for 3.0.1\" (#41795)"},{"Id":"507559151","IsPullRequest":false,"CreatedAt":"2019-10-16T01:18:19","Actor":"niemyjski","Number":"41811","RawContent":null,"Title":"System.Text.Json support for DynamicObject.","State":"open","Body":"I was trying to convert our project to use System.Text.Json (v3 latest stable) and noticed that it's not deserializing values to DynamicObject or deriving types. When deserializing the `DynamicObject` the `TrySetMember` should be called and it is not.\r\n\r\nThis might also reference: https://github.com/dotnet/corefx/issues/38007 \r\n\r\nWe have a [Delta<T>](https://github.com/exceptionless/Exceptionless/blob/feature/elastic7/src/Exceptionless.Web/Utility/Delta/Delta.cs) that has been modified from [OData days](https://github.com/mono/aspnetwebstack/blob/master/src/System.Web.Http.OData/OData/Delta.cs#L16) and I noticed that our patches were failing via integration tests. So I wrote a simple test:\r\n\r\n```cs\r\npublic class Delta<TEntityType> : DynamicObject where TEntityType : class {} \r\n....\r\n\r\npublic class NewToken {\r\n        public NewToken() {\r\n            Scopes = new HashSet<string>();\r\n        }\r\n\r\n        public string OrganizationId { get; set; }\r\n        public string ProjectId { get; set; }\r\n        public string DefaultProjectId { get; set; }\r\n        public HashSet<string> Scopes { get; set; }\r\n        public DateTime? ExpiresUtc { get; set; }\r\n        public string Notes { get; set; }\r\n    }\r\n\r\n        [Fact]\r\n        public void CanSerializeSimpleModel() {\r\n            var token = new NewToken {\r\n                OrganizationId = \"TEST_ORG_ID\",\r\n                ProjectId = \"TEST_PROJECT_ID\"\r\n            };\r\n\r\n            string json = System.Text.Json.JsonSerializer.Serialize(token);\r\n            _logger.LogInformation(json);\r\n            var delta = System.Text.Json.JsonSerializer.Deserialize<Delta<NewToken>>(json, settings);\r\n            Assert.Equal(2, delta.GetChangedPropertyNames().Count());\r\n        }\r\n```\r\n\r\nwith serializer settings defined as:\r\n```cs\r\n            options.AllowTrailingCommas = true;\r\n            options.DictionaryKeyPolicy = null;\r\n            options.IgnoreNullValues = true;\r\n            options.IgnoreReadOnlyProperties = false;\r\n            options.PropertyNameCaseInsensitive = true;\r\n            //options.PropertyNamingPolicy = new SnakeCaseJsonNamingPolicy();\r\n            options.ReadCommentHandling = JsonCommentHandling.Skip;\r\n            options.WriteIndented = false;\r\n```","Url":"https://github.com/dotnet/corefx/issues/41811","RelatedDescription":"Open issue \"System.Text.Json support for DynamicObject.\" (#41811)"},{"Id":"507545887","IsPullRequest":true,"CreatedAt":"2019-10-16T00:19:31","Actor":"GrabYourPitchforks","Number":"41810","RawContent":null,"Title":"Add Encoding extensions which work with sequences","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41166.\r\nFixes https://github.com/dotnet/corefx/issues/41326.\r\n\r\nThis PR adds a static `EncodingExtensions` type. This type contains extension methods which allow consumers to use `Encoding`, `Encoder`, and `Decoder` with `ReadOnlySequence<T>` and `IBufferWriter<T>`.\r\n\r\nUnit tests will not pass because they're blocked on https://github.com/dotnet/coreclr/issues/27191 being fixed.","Url":"https://github.com/dotnet/corefx/pull/41810","RelatedDescription":"Open PR \"Add Encoding extensions which work with sequences\" (#41810)"},{"Id":"507539420","IsPullRequest":true,"CreatedAt":"2019-10-15T23:55:03","Actor":"dotnet-maestro-bot","Number":"41809","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"open","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @dotnet-maestro[bot]\n* @danmosemsft\n* @ViktorHofer\n* @mmitche\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/41809","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#41809)"},{"Id":"507510322","IsPullRequest":true,"CreatedAt":"2019-10-15T23:51:03","Actor":"dotnet-maestro[bot]","Number":"41804","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191015.2\r\n- **Date Produced**: 10/15/2019 7:05 PM\r\n- **Commit**: ecfe3bca7cfbd413415af9d2bcccb5f9a361f962\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.1-servicing.19515.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.1-servicing.19515.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.1-servicing.19515.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41804","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#41804)"},{"Id":"507537374","IsPullRequest":true,"CreatedAt":"2019-10-15T23:46:52","Actor":"buyaa-n","Number":"41808","RawContent":null,"Title":"Annotate System.ObjectModel for nullable","State":"open","Body":"Contributes to #40623\r\ncc: @dotnet/nullablefc","Url":"https://github.com/dotnet/corefx/pull/41808","RelatedDescription":"Open PR \"Annotate System.ObjectModel for nullable\" (#41808)"},{"Id":"507536101","IsPullRequest":true,"CreatedAt":"2019-10-15T23:41:50","Actor":"safern","Number":"41807","RawContent":null,"Title":"Pass down /warnaserror switch for package testing","State":"open","Body":"Related to: https://github.com/dotnet/corefx/pull/41800\r\n\r\nIt should fail on the first build iteration until that other PR is merged.\r\n\r\nDid it as separate PRs to prove that this would solve the package testing issue.","Url":"https://github.com/dotnet/corefx/pull/41807","RelatedDescription":"Open PR \"Pass down /warnaserror switch for package testing\" (#41807)"},{"Id":"507520520","IsPullRequest":true,"CreatedAt":"2019-10-15T22:47:55","Actor":"scalablecory","Number":"41806","RawContent":null,"Title":"Add ConnectCallback to SocketsHttpHandler","State":"open","Body":"Adds SocketsHandler.ConnectCallback. Resolves #35404","Url":"https://github.com/dotnet/corefx/pull/41806","RelatedDescription":"Open PR \"Add ConnectCallback to SocketsHttpHandler\" (#41806)"},{"Id":"507518757","IsPullRequest":true,"CreatedAt":"2019-10-15T22:42:04","Actor":"scalablecory","Number":"41805","RawContent":null,"Title":"HTTP2: Huffman encoding for headers. ","State":"open","Body":"Add Huffman encoding for HTTP2 headers. It falls back to uncompressed when the value would be expanded. Resolves #31308\r\n\r\nIn benchmarks I'm seeing a difference right on the edge of SNR. This makes a trivial HTTP2 request about 0.5% slower than current state.","Url":"https://github.com/dotnet/corefx/pull/41805","RelatedDescription":"Open PR \"HTTP2: Huffman encoding for headers. \" (#41805)"},{"Id":"507490487","IsPullRequest":true,"CreatedAt":"2019-10-15T21:23:42","Actor":"GrabYourPitchforks","Number":"41802","RawContent":null,"Title":"Add unit tests to cover DecoderNLS.Convert 'completed' scenarios","State":"open","Body":"Unit tests for https://github.com/dotnet/coreclr/pull/27210. These unit tests will not pass until the nightly coreclr build makes its way to corefx.","Url":"https://github.com/dotnet/corefx/pull/41802","RelatedDescription":"Open PR \"Add unit tests to cover DecoderNLS.Convert 'completed' scenarios\" (#41802)"},{"Id":"507469993","IsPullRequest":true,"CreatedAt":"2019-10-15T20:38:20","Actor":"dotnet-maestro-bot","Number":"41799","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @wtgodbe\n* @ViktorHofer\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/41799","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#41799)"},{"Id":"507404420","IsPullRequest":true,"CreatedAt":"2019-10-15T20:35:16","Actor":"wtgodbe","Number":"41798","RawContent":null,"Title":"Clear out packages.builds for 2.1.14","State":"closed","Body":"The Platforms package hasn't changes since 2.1.13, so we should turn off its build for 2.1.14.\r\n\r\n@safern @joperezr PTAL\r\n\r\nCC @danmosemsft @Anipik ","Url":"https://github.com/dotnet/corefx/pull/41798","RelatedDescription":"Closed or merged PR \"Clear out packages.builds for 2.1.14\" (#41798)"},{"Id":"507404254","IsPullRequest":true,"CreatedAt":"2019-10-15T20:35:07","Actor":"wtgodbe","Number":"41797","RawContent":null,"Title":"Clear out packages.builds for 2.2.8","State":"closed","Body":"The Platforms package hasn't changes since 2.2.7, so we should turn off its build for 2.2.8.\r\n\r\n@safern @joperezr PTAL\r\n\r\nCC @danmosemsft @Anipik ","Url":"https://github.com/dotnet/corefx/pull/41797","RelatedDescription":"Closed or merged PR \"Clear out packages.builds for 2.2.8\" (#41797)"},{"Id":"507379276","IsPullRequest":false,"CreatedAt":"2019-10-15T18:13:39","Actor":"1369521908","Number":"41792","RawContent":null,"Title":".net core 3.0 upload big file faild","State":"closed","Body":"1 IDE\r\n![image](https://user-images.githubusercontent.com/32727597/66853046-f7ab6c00-efb0-11e9-83a0-d9df9a4d2fb5.png)\r\n\r\n2 .net core version (my project version)\r\n![image](https://user-images.githubusercontent.com/32727597/66853134-23c6ed00-efb1-11e9-8344-ac4b64d6fe3d.png)\r\n\r\n3 controller & api\r\n![image](https://user-images.githubusercontent.com/32727597/66853188-40632500-efb1-11e9-9187-c126b7048774.png)\r\n\r\n4 startup config\r\n![image](https://user-images.githubusercontent.com/32727597/66853234-5a9d0300-efb1-11e9-8694-6d9bc0877efd.png)\r\n\r\n5 upload file \r\n![image](https://user-images.githubusercontent.com/32727597/66853743-92f11100-efb2-11e9-802e-94b120b4784a.png)\r\n\r\n\r\n5 error stack (error file size is >16MB)\r\n![image](https://user-images.githubusercontent.com/32727597/66853429-dbf49580-efb1-11e9-8927-037ce56da6d6.png)\r\n\r\n6.success condition (file size is 1KB )\r\n![image](https://user-images.githubusercontent.com/32727597/66853827-c2078280-efb2-11e9-87d9-b0f1edefeef3.png)\r\n\r\nsmall file is success accepted\r\n![image](https://user-images.githubusercontent.com/32727597/66854055-2f1b1800-efb3-11e9-8068-132c8d631e7d.png)\r\n\r\nis this config not effect or i config wrong? \r\nwhen i use .net core 2.2 ,that file[5] was success uploaded...\r\n\r\nhere is my code on github \r\nhttps://github.com/1369521908/Obsidian.git\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41792","RelatedDescription":"Closed issue \".net core 3.0 upload big file faild\" (#41792)"},{"Id":"507402581","IsPullRequest":true,"CreatedAt":"2019-10-15T18:12:51","Actor":"krwq","Number":"41796","RawContent":null,"Title":"[release/3.0] Fixing NullReferenceException in XmlSchemaAnyAttribute.Namespace","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41704\r\nPorts https://github.com/dotnet/corefx/pull/41731\r\nRegressed by https://github.com/dotnet/corefx/commit/2c22af8903522e54f71225c40ddd383b15632ae0\r\n\r\n#### Description\r\n\r\nThis is a regression. Customer reports that using \"empty\" instance of XmlSchemaAnyAttribute (i.e. `<xs:anyAttribute/>`) and accessing Namespace property is causing NRE. This feature is used to to tell that any attribute not defined by schema is allowed which is not very rare scenario.\r\n\t\t\r\n#### Customer Impact\r\n\r\nCustomers using XML Schema moving forward to 3.0 may get NRE in an app which previously worked correctly. The only workaround is not to use `Namespace` property since there is currently no way of predicting when it will throw with public APIs except for manually re-parsing XML and searching for this specific case.\r\n\r\n#### Regression?\r\n\r\nYes. Regressing fix came with tests but did not check for empty namespace.\r\n\r\n#### Risk\r\n\r\nSmall. Adds extra null check. Fix comes with a test exercising this and similar scenario.\r\n\r\ncc: @danmosemsft @buyaa-n @martin-frydl @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/41796","RelatedDescription":"Open PR \"[release/3.0] Fixing NullReferenceException in XmlSchemaAnyAttribute.Namespace\" (#41796)"},{"Id":"507362240","IsPullRequest":true,"CreatedAt":"2019-10-15T17:57:06","Actor":"omajid","Number":"41789","RawContent":null,"Title":"[release/2.2] Add CentOS 8 Runtime ID to the graph","State":"closed","Body":"CentOS 8 has been released:\r\nhttps://wiki.centos.org/Manuals/ReleaseNotes/CentOSLinux8\r\n\r\n    $ cat /etc/os-release\r\n    NAME=\"CentOS Linux\"\r\n    VERSION=\"8 (Core)\"\r\n    ID=\"centos\"\r\n    ID_LIKE=\"rhel fedora\"\r\n    VERSION_ID=\"8\"\r\n    PLATFORM_ID=\"platform:el8\"\r\n    PRETTY_NAME=\"CentOS Linux 8 (Core)\"\r\n    ANSI_COLOR=\"0;31\"\r\n    CPE_NAME=\"cpe:/o:centos:centos:8\"\r\n    HOME_URL=\"https://www.centos.org/\"\r\n    BUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n    CENTOS_MANTISBT_PROJECT=\"CentOS-8\"\r\n    CENTOS_MANTISBT_PROJECT_VERSION=\"8\"\r\n    REDHAT_SUPPORT_PRODUCT=\"centos\"\r\n    REDHAT_SUPPORT_PRODUCT_VERSION=\"8\"\r\n\r\nThis is a backport of https://github.com/dotnet/corefx/pull/41397 and\r\ncommit c939f5d441979a45aeac84e5f2e16e62748f607b.","Url":"https://github.com/dotnet/corefx/pull/41789","RelatedDescription":"Closed or merged PR \"[release/2.2] Add CentOS 8 Runtime ID to the graph\" (#41789)"},{"Id":"507394713","IsPullRequest":true,"CreatedAt":"2019-10-15T17:56:04","Actor":"wfurt","Number":"41794","RawContent":null,"Title":"add RID for new FreeBSD releases","State":"open","Body":"This adds entry for FreeBSD 12 (stable) and Freebsd 13 (snapshots) \r\nI used #41397 as example and dropped minor versions so we will track only major releases like we do for Centos. Based on my testing, binaries build on 11.x works fine on 12 (with already submitted threading fix) so I see no reason to track them separate. I have not done testing on 13 but I assume it will be similar. When we did builds last time we used  `freebsd-x64 `\r\n\r\ncc: jasonpugsley\r\n\r\nfixes #40865\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41794","RelatedDescription":"Open PR \"add RID for new FreeBSD releases\" (#41794)"},{"Id":"507374734","IsPullRequest":true,"CreatedAt":"2019-10-15T17:12:12","Actor":"omajid","Number":"41791","RawContent":null,"Title":"[release/2.1] Add Fedora 32 and CentOS 8 runtime ids","State":"open","Body":"This is a combined backport of:\r\n\r\n- PR #41397: commit 6f82bd59a05ea9556397596ae9e59f39b904b222\r\n- PR #40786: commit 86fc9e751c424278a9c4e163e0a71a9d7e30c8e7\r\n\r\nDo I need to bump the version in `pkg/Microsoft.NETCore.Platforms/Microsoft.NETCore.Platforms.pkgproj`?","Url":"https://github.com/dotnet/corefx/pull/41791","RelatedDescription":"Open PR \"[release/2.1] Add Fedora 32 and CentOS 8 runtime ids\" (#41791)"},{"Id":"507367289","IsPullRequest":false,"CreatedAt":"2019-10-15T16:55:59","Actor":"stephentoub","Number":"41790","RawContent":null,"Title":"Rewrite UriHelper.UnescapeString to remove unsafe code and improve perf","State":"open","Body":"PR https://github.com/dotnet/corefx/pull/41772 rewrote EscapeString with safe code, and it not only removed unsafe code from a key networking-exposed area of the system, it also resulting in performance benefits and cleaner code.  We should look at doing the same thing for the other direction with UnescapeString.  It's likely to be a bit more challenging, as it currently has more modes for configuration.","Url":"https://github.com/dotnet/corefx/issues/41790","RelatedDescription":"Open issue \"Rewrite UriHelper.UnescapeString to remove unsafe code and improve perf\" (#41790)"},{"Id":"507360192","IsPullRequest":true,"CreatedAt":"2019-10-15T16:42:08","Actor":"dotnet-maestro-bot","Number":"41788","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @ViktorHofer\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/41788","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#41788)"},{"Id":"507357300","IsPullRequest":false,"CreatedAt":"2019-10-15T16:34:17","Actor":"jkotalik","Number":"41787","RawContent":null,"Title":"Synchronize HTTP/2 Framing and HPACK code with ASP.NET Core","State":"open","Body":"**Things to share:**\r\n- HPACK (Encoding/Decoding), These are similar today, so it should be a simple unification\r\n- Framing code, different representations/organization, but not a lot of code.\r\n\r\nPrimary is corefx, with ASP.NET Core as secondary. This means all changes to shared code should start in corefx and merged up to ASP.NET Core. We also have a script for inner loop development to test against each repo as well as potentially a unit test to verify shared source is up to date.\r\n\r\nThe hardest part of this change will be creating a bot to copy source from corefx to aspnetcore. This needs to work on each branch from 3.0 up. Hypothetically this is a simple bot:\r\ncheck if a subfolder in corefx has a new commit/new commits in it. If it does, checkout aspnetcore and copy the contents. @mmitche can we sync about this?\r\n\r\n**Actionable items:**\r\n- [x] Synchronize aspnetcore and corefx HPACK implementation (still need a reaction PR in AspNetCore)\r\n- [ ] Readme\r\n- [ ] Inner loop copy script (both directions)\r\n- [ ] Move more unit tests from ASP.NET Core to corefx \r\n- [ ] Create a bot to sync code from corefx to aspnetcore.\r\n- [ ] Validation/verification to make sure code is \"in sync\" \r\n- [ ] Create github group/ code owners to make sure all stakeholders are added to PRs\r\n\r\n**Open questions:**\r\n- Copyrights\r\n- Namespaces\r\n- Resource strings\r\n\r\ncc @Tratcher @scalablecory ","Url":"https://github.com/dotnet/corefx/issues/41787","RelatedDescription":"Open issue \"Synchronize HTTP/2 Framing and HPACK code with ASP.NET Core\" (#41787)"},{"Id":"507341018","IsPullRequest":false,"CreatedAt":"2019-10-15T16:02:09","Actor":"danmosemsft","Number":"41786","RawContent":null,"Title":"Support for Unix ACLs?","State":"open","Body":"What is our story for ACL's on Unix, where file system supports it?\r\n\r\n[Mono.Posix](https://www.nuget.org/packages/Mono.Posix.NETStandard) (what we point at for API for Unix primitives) does not support them. Do we need to offer support for them somewhere? \r\n\r\nWhereever that support lies, do we need to add extension methods (like [this](https://github.com/dotnet/corefx/issues/41614)) to allow objects to be created with the ACL applied?  If not, what is the story for folks porting Windows code using ACL's to Linux?\r\n\r\nThis assumes we do not want to attempt to overload types like `DirectorySecurity`, which were designed with Windows in mind, to accommodate Unix.","Url":"https://github.com/dotnet/corefx/issues/41786","RelatedDescription":"Open issue \"Support for Unix ACLs?\" (#41786)"},{"Id":"507380045","IsPullRequest":false,"CreatedAt":"2019-10-15T13:58:12","Actor":"HSXDev","Number":"41793","RawContent":null,"Title":"ADO.NET problems in Linux","State":"open","Body":"I'm not being able to execute a simple DbConnection.Open() on a docker image running on Debian 10 (buster), i'm receiving the following message:\r\n\r\n\"Timeout expired. The timeout period elapsed prior to obtaining a connection from the pool. This may have occurred because all pooled connections were in use and max pool size was reached.\"\r\n\r\nIf i change the dockerfile to run in Ubuntu(bionic) everything works fine until i need to do a bulk insert. \r\n\r\nRunning in a windows container works just fine.","Url":"https://github.com/dotnet/corefx/issues/41793","RelatedDescription":"Open issue \"ADO.NET problems in Linux\" (#41793)"},{"Id":"507257789","IsPullRequest":false,"CreatedAt":"2019-10-15T13:48:45","Actor":"ViktorHofer","Number":"41785","RawContent":null,"Title":"Move test helper linked files into CoreFx.Private.TestUtilities","State":"open","Body":"The helper files and the strategy to link them into the test projects directly existed long before CoreFx.Private.TestUtilities was added (during the UWP bringup phase in 2017). Every helper which is linked into more than one test project should be moved to the TestUtilities library.\r\n\r\ncc @stephentoub","Url":"https://github.com/dotnet/corefx/issues/41785","RelatedDescription":"Open issue \"Move test helper linked files into CoreFx.Private.TestUtilities\" (#41785)"},{"Id":"507241366","IsPullRequest":false,"CreatedAt":"2019-10-15T13:21:28","Actor":"TylerBrinkley","Number":"41784","RawContent":null,"Title":"Make Type implement IEquatable<Type>","State":"open","Body":"I'm not sure why this hasn't been done as `Type` already has an `Equals(Type)` method but I'd like `Type` to implement `IEquatable<Type>` so I can use `Type` as a type argument where there's a generic type constraint of `IEquatable<T>` such as in [DictionarySlim](https://github.com/dotnet/corefxlab/blob/master/src/Microsoft.Experimental.Collections/Microsoft/Collections/Extensions/DictionarySlim.cs#L31).","Url":"https://github.com/dotnet/corefx/issues/41784","RelatedDescription":"Open issue \"Make Type implement IEquatable<Type>\" (#41784)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"507579295","IsPullRequest":false,"CreatedAt":"2019-10-16T02:44:55","Actor":"dibarbet","Number":"39309","RawContent":null,"Title":"msft bot not merging PRs","State":"open","Body":"Creating this issue to keep track of PRs that don't get automerged.\r\n\r\nhttps://github.com/dotnet/roslyn/pull/39303\r\nhttps://github.com/dotnet/roslyn/pull/39304\r\nhttps://github.com/dotnet/roslyn/pull/39306\r\n(automerged after I deleted and re-added the auto-merge label)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39309","RelatedDescription":"Open issue \"msft bot not merging PRs\" (#39309)"},{"Id":"507541262","IsPullRequest":true,"CreatedAt":"2019-10-16T02:44:18","Actor":"dotnet-bot","Number":"39306","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39306","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39306)"},{"Id":"507541199","IsPullRequest":true,"CreatedAt":"2019-10-16T02:42:50","Actor":"dotnet-bot","Number":"39304","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39304","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39304)"},{"Id":"507540987","IsPullRequest":true,"CreatedAt":"2019-10-16T02:42:04","Actor":"dotnet-bot","Number":"39303","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39303","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39303)"},{"Id":"507549306","IsPullRequest":false,"CreatedAt":"2019-10-16T00:33:31","Actor":"dibarbet","Number":"39308","RawContent":null,"Title":"Updating dotnet/versions occasionally errors with 'Update is not a fast forward'","State":"open","Body":"Example builds:\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3145509 \r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3143639\r\n\r\nWhen publishing build info updates to dotnet/version in quick succession as done here\r\nhttps://github.com/dotnet/roslyn/blob/master/eng/publish-assets.ps1#L122\r\nit will sometimes fail with\r\n```\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\NonShipping to channel dev16.4\r\nError updating versions: Could not update dotnet/versions 'heads/master' to '4e2d35b8002d79592594d73903d830f8db1ed632': Update is not a fast forward\r\n   at Microsoft.DotNet.VersionTools.Automation.GitHubApi.GitHubClient.<PatchReferenceAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.DotNet.VersionTools.Automation.GitHubVersionsRepoUpdater.<UpdateBuildInfoAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at RoslynPublish.Program.<Go>d__1.MoveNext() in /_/src/Tools/RoslynPublish/Program.cs:line 64\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at RoslynPublish.Program.Main(String[] args) in /_/src/Tools/RoslynPublish/Program.cs:line 19\r\n```\r\n\r\nThe tool [queries ](https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.VersionTools/Automation/GitHubVersionsRepoUpdater.cs#L81)the master branch for latest commits, then applies a commit with the new build info.  When this happens multiple times in succession, occasionally the query for the latest commits will not return the latest commit.\r\n\r\nExample:\r\nIn [this build](https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3143639), we see\r\n```\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\Shipping to channel dev16.4\r\nPublishing E:\\A\\_work\\3542\\s\\artifacts\\packages\\Release\\NonShipping to channel dev16.4\r\nError updating versions: Could not update dotnet/versions 'heads/master' to '4e2d35b8002d79592594d73903d830f8db1ed632': Update is not a fast forward\r\n```\r\n\r\nLooking at the master branch log, we see a successful [commit ](https://github.com/dotnet/versions/commit/8db4b41f383c084eb31ccd8f0de9da2824107c99) for the first dev16.4 channel publish, but no further successful commits.  Looking at the [hash of the failed commit](https://github.com/dotnet/versions/commit/4e2d35b8002d79592594d73903d830f8db1ed632), we see that it's parent is actually `1dc94d9` which is the commit prior to applying the first successful commit.  The parent commit should be the id of the previous commit, `8db4b4`\r\n\r\nhttps://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3145509 has a similar failure, but it published two successful commits before failing.  \r\n\r\nIt seems like we need to add a delay in between attempts to publish to dotnet/versions to account for github delays in processing.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39308","RelatedDescription":"Open issue \"Updating dotnet/versions occasionally errors with 'Update is not a fast forward'\" (#39308)"},{"Id":"507542133","IsPullRequest":true,"CreatedAt":"2019-10-16T00:05:02","Actor":"agocke","Number":"39307","RawContent":null,"Title":"Move much of local function data flow to AbstractFlowPass","State":"open","Body":"Our design for local function flow analysis is now pretty well decided\r\n-- local functions are assumed to preserve state transitions through\r\ncalls within the method.\r\n\r\nFor definite assignment, this means that variables which are definitely\r\nassigned inside the local function are assigned on calls to the local\r\nfunction. This functionality has mostly been moved to AbstractFlowPass.\r\n\r\nThe remaining functionality, namely producing diagnostics based on the\r\nflow state, is analysis-specific, so I've refactored this to remain in\r\ndefinite assignment, but use stubs that are present in AbstractFlowPass.","Url":"https://github.com/dotnet/roslyn/pull/39307","RelatedDescription":"Open PR \"Move much of local function data flow to AbstractFlowPass\" (#39307)"},{"Id":"507541225","IsPullRequest":true,"CreatedAt":"2019-10-16T00:01:46","Actor":"dotnet-bot","Number":"39305","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39305","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39305)"},{"Id":"506949763","IsPullRequest":true,"CreatedAt":"2019-10-15T23:33:18","Actor":"dotnet-bot","Number":"39283","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39283","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39283)"},{"Id":"506949793","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:54","Actor":"dotnet-bot","Number":"39284","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39284","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39284)"},{"Id":"507519949","IsPullRequest":true,"CreatedAt":"2019-10-15T22:46:00","Actor":"ivanbasov","Number":"39302","RawContent":null,"Title":"Ignore await in completion when triggers completion between two dots","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39150\r\n\r\nWe already provide completion between two dots which also can be treated as a range expression. However, if there is the `await` keyword before the expression, we are in stuck. ","Url":"https://github.com/dotnet/roslyn/pull/39302","RelatedDescription":"Open PR \"Ignore await in completion when triggers completion between two dots\" (#39302)"},{"Id":"507519801","IsPullRequest":true,"CreatedAt":"2019-10-15T22:45:31","Actor":"gafter","Number":"39301","RawContent":null,"Title":"DRAFT changes.  On hold pending #20648","State":"open","Body":"Address issues with flow analysis slot container types and changing types during inference in the nullable walker\r\nFixes #39220\r\nFixes #39297\r\nFixes #33428","Url":"https://github.com/dotnet/roslyn/pull/39301","RelatedDescription":"Open PR \"DRAFT changes.  On hold pending #20648\" (#39301)"},{"Id":"507513057","IsPullRequest":true,"CreatedAt":"2019-10-15T22:23:58","Actor":"jcouv","Number":"39300","RawContent":null,"Title":"Avoid leave.s opcode jumping out of a finally block","State":"open","Body":"There were two problems with the original implementation:\r\n- within a `try` statement, we should only jump to the `finallyEntry` label for disposal when we're inside the `try` or a `catch` block, but not if we're inside that `finally` block.\r\n- even with that fixed, we were still producing a `leave.s` to jump out of a `finally`, which is illegal. So we now jump to the end of the current finally instead.\r\n\r\nThis is illustrated by the commits in this PR.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/38961\r\nFYI @stephentoub ","Url":"https://github.com/dotnet/roslyn/pull/39300","RelatedDescription":"Open PR \"Avoid leave.s opcode jumping out of a finally block\" (#39300)"},{"Id":"507470407","IsPullRequest":false,"CreatedAt":"2019-10-15T20:39:14","Actor":"tmat","Number":"39299","RawContent":null,"Title":"Regression: #r completion in Interactive Window is broken","State":"open","Body":"**Version Used**: \r\nVersion 16.4.0 Preview 3.0 [29415.53.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. create `C:\\Temp` directory and add files `a.dll`, `b.dll` to it.\r\n2. In Interactive Window type:\r\n\r\n```\r\n> #r \"c:\\Temp\\a.d\r\n```\r\n\r\nand hit `Tab`. \r\n\r\n**Expected Behavior**:\r\n\r\n```\r\n> #r \"c:\\Temp\\a.dll\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\n> #r \"c:\\Temp\\a.a.dll\r\n```\r\n\r\nThe pre-selection is also broken:\r\n![image](https://user-images.githubusercontent.com/41759/66867954-3dd0e300-ef51-11e9-8fb3-2257d6623624.png)\r\n\r\nThis works correctly in VS 2017.","Url":"https://github.com/dotnet/roslyn/issues/39299","RelatedDescription":"Open issue \"Regression: #r completion in Interactive Window is broken\" (#39299)"},{"Id":"507466996","IsPullRequest":false,"CreatedAt":"2019-10-15T20:32:11","Actor":"chris5287","Number":"39298","RawContent":null,"Title":"Roslyn doesn't understand 'string.IsNullOrWhiteSpace(x) == false' null check","State":"open","Body":"**Version Used**: \r\n.NET Core SDK 3.0.100\r\n\r\n**Steps to Reproduce**:\r\nCompile the following code:\r\n\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n    string? field;\r\n\r\n    void M1(C c)\r\n    {\r\n        if (!string.IsNullOrWhiteSpace(c.field))\r\n        {\r\n            c.field.ToString();\r\n        }\r\n    }\r\n\r\n    void M2(C c)\r\n    {\r\n        if (string.IsNullOrWhiteSpace(c.field) == false)\r\n        {\r\n            c.field.ToString(); // incorrect CS8602\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nBoth methods report no warnings\r\n\r\n**Actual Behavior**:\r\n`M2` has an incorrect warning `CS8602: Dereference of a possibly null reference` reported for `c.field.ToString()`\r\n\r\nMight be related to #39264 ?","Url":"https://github.com/dotnet/roslyn/issues/39298","RelatedDescription":"Open issue \"Roslyn doesn't understand 'string.IsNullOrWhiteSpace(x) == false' null check\" (#39298)"},{"Id":"507456894","IsPullRequest":false,"CreatedAt":"2019-10-15T20:10:05","Actor":"gafter","Number":"39297","RawContent":null,"Title":"NullableWalker violates invariants of slot and slot parents","State":"open","Body":"I tried adding the following assertion\r\n\r\n``` c#\r\n                HashSet<DiagnosticInfo> discardedUseSiteDiagnostics = null;\r\n                Debug.Assert(\r\n                    symbol.Kind != SymbolKind.Field || // we only check fields, but the NullableWalker also works with properties\r\n                    containingSlot == 0 && !symbol.RequiresInstanceReceiver() ||\r\n                    symbol.ContainingType.Equals(variableBySlot[containingSlot].Symbol.GetTypeOrReturnType().Type, TypeCompareKind.AllIgnoreOptions) ||\r\n                    compilation.Conversions.IsBaseClass(variableBySlot[containingSlot].Symbol.GetTypeOrReturnType().Type, symbol.ContainingType, ref discardedUseSiteDiagnostics));\r\n```\r\n\r\nbefore the following line in `LocalDataFlowPass.cs`\r\n\r\n``` c#\r\n                variableBySlot[slot] = identifier;\r\n```\r\n\r\nbut there are a number of failures (of this assertion) in `NullableWalker`.  It is possible that some of these are symptoms of https://github.com/dotnet/roslyn/issues/20648 but I believe at least the failure in `NullableReferenceTypesTests.Conversions_TupleConversions_03` and two other tests is a deeper problem.  I am skipping those tests to make progress on https://github.com/dotnet/roslyn/issues/39220, and I removing the assertion for now.  The assertion should be readded after https://github.com/dotnet/roslyn/issues/20648 has been fixed and any issues causing the assertion to fail should be reevaluated.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39297","RelatedDescription":"Open issue \"NullableWalker violates invariants of slot and slot parents\" (#39297)"},{"Id":"507399504","IsPullRequest":true,"CreatedAt":"2019-10-15T19:52:39","Actor":"tmat","Number":"39295","RawContent":null,"Title":"Rely on PDB document table for identification of design-time-only source files","State":"closed","Body":"Use document list in PDB as the definitive indicator of whether a source file is design-time-only or not. This is now possible due to https://github.com/dotnet/roslyn/pull/39136.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/39271.\r\nFixes ADO [899910](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/899910): Pop up a \"Edit and Continue\" dialog without ENC about C# uwp app","Url":"https://github.com/dotnet/roslyn/pull/39295","RelatedDescription":"Closed or merged PR \"Rely on PDB document table for identification of design-time-only source files\" (#39295)"},{"Id":"507396200","IsPullRequest":false,"CreatedAt":"2019-10-15T19:30:59","Actor":"tmat","Number":"39293","RawContent":null,"Title":"CodeRefactoringService IntroduceVariable fails with ArgumentOutOfRangeException","State":"closed","Body":"**Version Used**: \r\nVersion 16.4.0 Preview 3.0 [29409.185.master]\r\n\r\n![image](https://user-images.githubusercontent.com/41759/66856739-b5dfde80-ef3a-11e9-8a5a-28f9e7a0654c.png)\r\n\r\nwhile editing `src\\EditorFeatures\\Test\\EditAndContinue\\EditAndContinueWorkspaceServiceTests.cs` in Roslyn.sln.\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\nParameter name: position\r\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\r\n   at Microsoft.CodeAnalysis.CodeRefactoringHelpers.IsNodeUnderselected(SyntaxNode node,TextSpan selection)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.TryInitializeAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.GenerateAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.IntroduceVariableAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.IntroduceVariableCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39293","RelatedDescription":"Closed issue \"CodeRefactoringService IntroduceVariable fails with ArgumentOutOfRangeException\" (#39293)"},{"Id":"507198005","IsPullRequest":true,"CreatedAt":"2019-10-15T19:23:05","Actor":"dotnet-bot","Number":"39287","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39287","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39287)"},{"Id":"506948428","IsPullRequest":true,"CreatedAt":"2019-10-15T19:21:12","Actor":"CyrusNajmabadi","Number":"39281","RawContent":null,"Title":"Switch source writer entirely over to using interpolations.","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39281","RelatedDescription":"Closed or merged PR \"Switch source writer entirely over to using interpolations.\" (#39281)"},{"Id":"507405724","IsPullRequest":false,"CreatedAt":"2019-10-15T18:19:32","Actor":"vsfeedback","Number":"39296","RawContent":null,"Title":"Editor: syntax node is not within syntax tree","State":"open","Body":"**[Happens in 16.4.0-preview-3.0-[29409.185.master]**\r\n\r\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/774122/editor-syntax-node-is-not-within-syntax-tree.html)._\r\n\r\n---\r\n[regression] [worked-in:Not sure about prev, 16.3 works for sure]\r\n1. Get latest Int Preview Visual Studio. \r\n1. git clone https://github.com/NuGet/NuGet.Client\r\n1. Follow the instructions up to configure.ps1\r\n1. Open NuGet.sln in Visual Studio. \r\n\r\nAfter the solution was fully loaded the moment I started type, a yellow bar popped with, \r\nan error occured, see log file. Clicking on that opens the activity log in the default xml viewer. \r\n\r\nIn there I found the below. \r\nNote that there could be other problems, but this error was related to types of issues I was seeing. \r\n\r\n```\r\n&lt;entry&gt;\r\n    &lt;record&gt;2738&lt;/record&gt;\r\n    &lt;time&gt;2019/10/11 18:15:44.663&lt;/time&gt;\r\n    &lt;type&gt;Error&lt;/type&gt;\r\n    &lt;source&gt;Editor or Editor Extension&lt;/source&gt;\r\n    &lt;description&gt;System.AggregateException: One or more errors occurred. ---&amp;gt; System.ArgumentException: Syntax node is not within syntax tree&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.CheckSyntaxNode(CSharpSyntaxNode syntax)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfo(ExpressionSyntax expression, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoFromNode(SyntaxNode node, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoCore(SyntaxNode node, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetRelatedFieldSymbolAsync&amp;gt;d__7.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetDocumentationFromSymbolAsync&amp;gt;d__5.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetQuickInfoItemAsync&amp;gt;d__4.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&amp;lt;ComputeSourceContentAsync&amp;gt;d__39.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;#x000D;&amp;#x000A;   --- End of inner exception stack trace ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&amp;lt;UpdateAsync&amp;gt;d__32.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoPresentationSession.&amp;lt;UpdateAsync&amp;gt;d__5.MoveNext()&amp;#x000D;&amp;#x000A;---&amp;gt; (Inner Exception #0) System.ArgumentException: Syntax node is not within syntax tree&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.CheckSyntaxNode(CSharpSyntaxNode syntax)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfo(ExpressionSyntax expression, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoFromNode(SyntaxNode node, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetSymbolInfoCore(SyntaxNode node, CancellationToken cancellationToken)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetRelatedFieldSymbolAsync&amp;gt;d__7.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetDocumentationFromSymbolAsync&amp;gt;d__5.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at SyntaxTree.VisualStudio.Unity.Documentation.UnityQuickInfoSource.&amp;lt;GetQuickInfoItemAsync&amp;gt;d__4.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&amp;#x000D;&amp;#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Language.Intellisense.Implementation.AsyncQuickInfoSession.&amp;lt;ComputeSourceContentAsync&amp;gt;d__39.MoveNext()&amp;#x000D;&amp;#x000A;--- End of stack trace from previous location where exception was thrown ---&amp;#x000D;&amp;#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)&amp;lt;---&amp;#x000D;&amp;#x000A;&lt;/description&gt;\r\n  &lt;/entry&gt;\r\n```\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 10/11/2019, 08:09 PM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Visual Studio Feedback System on 10/15/2019, 02:09 AM: \r\n\r\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39296","RelatedDescription":"Open issue \"Editor: syntax node is not within syntax tree\" (#39296)"},{"Id":"507397138","IsPullRequest":false,"CreatedAt":"2019-10-15T18:01:07","Actor":"vsfeedback","Number":"39294","RawContent":null,"Title":"Blazor preview 5.  When using intellisense to create an override in the @functions block the entire block disappears.  ","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/591477/blazor-preview-5-when-using-intellisense-to-create.html)._\r\n\r\n---\r\nType my function and then \r\n\r\n```\r\n@functions\r\n{\r\n\r\nOrganizationView[] oragnizations;\r\n    override oni\r\n\r\n}\r\n```\r\n\r\nAt this point I have the overrides list up in intellisense so I hit tab.  After that I get this....\r\n\r\n```\r\n@functions\r\n{}\r\n```\r\n\r\nAnd loose all that I typed before.\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 6/3/2019, 02:32 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Robert Haken on 6/3/2019, 04:25 PM: \r\n\r\nSame here.\r\n#### Visual Studio Feedback System on 6/3/2019, 10:31 PM: \r\n\r\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at:  https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq . In case you need answers to common questions or need assisted support, be sure to use  https://visualstudio.microsoft.com/vs/support/ . We'll keep you posted on any updates to this feedback.</p>\r\n\r\n#### Visual Studio Feedback System on 10/10/2019, 10:15 PM: \r\n\r\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39294","RelatedDescription":"Open issue \"Blazor preview 5.  When using intellisense to create an override in the @functions block the entire block disappears.  \" (#39294)"},{"Id":"507377004","IsPullRequest":false,"CreatedAt":"2019-10-15T17:17:04","Actor":"r-ramesh","Number":"39292","RawContent":null,"Title":"Emit ldloca/ldflda instruction instead of ldloc/ldfld to inspect value types in Expression Evaluation","State":"open","Body":"**Version Used**: \r\nAll\r\n\r\n**Description**:\r\nCurrently, while debugging, Roslyn generates the following IL for locals during expression evaluation (Autos/Local/Watch windows)\r\n\r\nEg.\r\n```\r\n=> $0000: ldloc <index>\r\n    $0001: ret \r\n```\r\n\r\nFor value types, this ends up creating a copy of the local which has the following issues:\r\n\r\na)\tIt is expensive, since the debugger's IL interpreter does a deep copy of all fields to push it on the stack\r\nb)\tIn certain cases (such as using visualizers) we want to modify the local. Currently for these cases this is not possible since we are dealing with the returned copy.\r\n\r\nThe IL generated instead should be:\r\n\r\n`ldloc a <index>`\r\nor\r\n`ldflda <field>`\r\nret\r\n\r\n**Steps to Reproduce**:\r\nInspect a local that is a value type in watch window.","Url":"https://github.com/dotnet/roslyn/issues/39292","RelatedDescription":"Open issue \"Emit ldloca/ldflda instruction instead of ldloc/ldfld to inspect value types in Expression Evaluation\" (#39292)"},{"Id":"507294489","IsPullRequest":false,"CreatedAt":"2019-10-15T16:02:47","Actor":"zaggo0","Number":"39290","RawContent":null,"Title":"CS8602 No warning/error should be given when using string.IsNullOrEmpty and returning that same string within ?: operator","State":"closed","Body":"**Version Used**: \r\ndotnet 3.0.100\r\nVisual Studio 2019 version 16.3.4\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\nclass Test\r\n{\r\n    public string? MyVar { get; set; }\r\n    public string Computed => !string.IsNullOrEmpty(MyVar) ? MyVar : string.Empty;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warning/error should be given here, as the NullOrEmpty check suggests that `null` is never returned.\r\n\r\n**Actual Behavior**:\r\nThe compiler throws a warning (or error when WarningsAsErrors is enabled) that the condition is possibly returning null.","Url":"https://github.com/dotnet/roslyn/issues/39290","RelatedDescription":"Closed issue \"CS8602 No warning/error should be given when using string.IsNullOrEmpty and returning that same string within ?: operator\" (#39290)"},{"Id":"507317659","IsPullRequest":false,"CreatedAt":"2019-10-15T15:21:48","Actor":"Washi1337","Number":"39291","RawContent":null,"Title":"Non-nullable backing field of property marked uninitialized when property is assigned a value in constructor","State":"open","Body":"**Version Used**: \r\ndotnet 3.0.100\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Run `dotnet new console` in an empty directory.\r\n2. Enable nullable reference types by specifying `<Nullable>enable</Nullable>` in the `.csproj` file.\r\n3. In `Program.cs`, paste in the following code:\r\n```csharp\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    internal static class Program\r\n    {\r\n        private static void Main()\r\n        {\r\n            var obj = new MyClass(\"Some name\");\r\n            Console.WriteLine(obj.Name);\r\n        }\r\n    }\r\n\r\n    public class MyClass\r\n    {\r\n        private string _name;\r\n\r\n        public MyClass(string name)\r\n        {\r\n            Name = name;\r\n        }\r\n\r\n        public string Name\r\n        {\r\n            get => _name;\r\n            set\r\n            {\r\n                if (value == null)\r\n                    throw new ArgumentNullException(nameof(value));\r\n                if (value.Length > 10)\r\n                    throw new ArgumentException(\"Name is too long.\");\r\n\r\n                _name = value;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n3. Run `dotnet build`\r\n\r\n**Expected Behavior**:\r\nA build without warnings.\r\n\r\n**Actual Behavior**:\r\nThe build ends with the following warning:\r\n```\r\nwarning CS8618: Non-nullable field '_name' is uninitialized. Consider declaring the field as nullable.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39291","RelatedDescription":"Open issue \"Non-nullable backing field of property marked uninitialized when property is assigned a value in constructor\" (#39291)"},{"Id":"507226424","IsPullRequest":false,"CreatedAt":"2019-10-15T12:56:33","Actor":"sharwell","Number":"39289","RawContent":null,"Title":"Provide a hidden diagnostic for unnecessary suppression operator","State":"closed","Body":"Correct implementation of the \"Unnecessary suppression operator\" analyzer would benefit from a hidden compiler diagnostic similar to the one reported for unnecessary using directives. This diagnostic would be available for _all_ unnecessary suppression operators (including ones in generated code). The IDE team would provide an analyzer that reported the locations which are not in generated code (similar to IDE0005).","Url":"https://github.com/dotnet/roslyn/issues/39289","RelatedDescription":"Closed issue \"Provide a hidden diagnostic for unnecessary suppression operator\" (#39289)"},{"Id":"507220149","IsPullRequest":false,"CreatedAt":"2019-10-15T12:44:04","Actor":"sharwell","Number":"39288","RawContent":null,"Title":"Update AbstractEditAndContinueAnalyzer.HasBackingField for NRT changes","State":"open","Body":"The following exclusion was added in #39184.\r\n\r\nhttps://github.com/dotnet/roslyn/blob/f2ce0fa23ef602861e00fdd9d44a9be9e9fce8fd/src/Features/Core/Portable/EditAndContinue/AbstractEditAndContinueAnalyzer.cs#L2699-L2705","Url":"https://github.com/dotnet/roslyn/issues/39288","RelatedDescription":"Open issue \"Update AbstractEditAndContinueAnalyzer.HasBackingField for NRT changes\" (#39288)"},{"Id":"507172146","IsPullRequest":false,"CreatedAt":"2019-10-15T11:05:27","Actor":"PDostalek","Number":"39286","RawContent":null,"Title":" [loc][Query][Roslyn] Localizability of 0; \"cmdidErrorListSetSeverityHidden|ButtonText\"","State":"open","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\n&Silent\r\n\r\nFile Name:\r\nVisualStudio\\Core\\Def\\xlf\\Commands.vsct.xlf\r\n\r\n==========================================\r\nQuery:\r\nIs silent translatable in this context?\r\nIt seems to be a command (other strings):\r\nNow interpreted as \"not logged\". Please confirm or advise. This concerns the following strings: \r\nSilent 0; \"cmdidErrorListSetSeverityHidden|LocCanonicalName\"\r\nSilent 0; \"cmdidSetSeverityHidden|LocCanonicalName\"\r\n0; \"cmdidErrorListSetSeverityHidden|ButtonText\"\r\n0; \"cmdidErrorListSetSeverityHidden|LocCanonicalName\"\r\n","Url":"https://github.com/dotnet/roslyn/issues/39286","RelatedDescription":"Open issue \" [loc][Query][Roslyn] Localizability of 0; \"cmdidErrorListSetSeverityHidden|ButtonText\"\" (#39286)"},{"Id":"506949729","IsPullRequest":true,"CreatedAt":"2019-10-15T08:12:13","Actor":"dotnet-bot","Number":"39282","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39282","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39282)"},{"Id":"506940283","IsPullRequest":false,"CreatedAt":"2019-10-15T00:45:35","Actor":"gundermanc","Number":"39280","RawContent":null,"Title":"Roslyn C#/VB language server fails to start","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 16.3 and later\r\n\r\n**Steps to Reproduce**:\r\n\r\nThis is an intermittent repro that appears to be the result of the Roslyn language server returning a null connection when its ILanguageClient is called.\r\n\r\n1. Open a C# or VB solution\r\n2. Attempt to search for code in Ctrl+Q search box\r\n\r\n**Expected Behavior**:\r\nSymbols appear in the box.\r\n\r\n**Actual Behavior**:\r\nOccasionally, the language client fails to start due to a null connection being returned by Roslyn's language client.","Url":"https://github.com/dotnet/roslyn/issues/39280","RelatedDescription":"Open issue \"Roslyn C#/VB language server fails to start\" (#39280)"},{"Id":"506930067","IsPullRequest":false,"CreatedAt":"2019-10-15T00:02:11","Actor":"tmat","Number":"39279","RawContent":null,"Title":"Publish packages to Azure DevOps public feeds instead of MyGet","State":"open","Body":"**[dotnet5](https://dev.azure.com/dnceng/public/_packaging?_a=feed&feed=dotnet5)** feed\r\n\r\n- Microsoft.CodeAnalysis.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Common.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Compilers.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Scripting.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Scripting.Common.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Workspaces.Common.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Workspaces.MSBuild.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.CodeStyle.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.Features.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.Scripting.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.Workspaces.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.VisualBasic.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.VisualBasic.CodeStyle.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.VisualBasic.Features.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.VisualBasic.Workspaces.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Build.Tasks.3.4.0-beta3-final.nupkg\r\n- Microsoft.Net.Compilers.3.4.0-beta3-final.nupkg\r\n- Microsoft.Net.Compilers.Toolset.3.4.0-beta3-final.nupkg\r\n- Microsoft.NETCore.Compilers.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Debugging.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.PooledObjects.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Features.3.4.0-beta3-final.nupkg\r\n\r\n[**vssdk**](https://dev.azure.com/azure-public/vside/_packaging?_a=feed&feed=vssdk) feed\r\n\r\n- Microsoft.CodeAnalysis.EditorFeatures.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.EditorFeatures.Common.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.EditorFeatures.Text.3.4.0-beta3-final.nupkg\r\n- Microsoft.VisualStudio.LanguageServices.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.CSharp.EditorFeatures.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.InteractiveHost.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.EditorFeatures.Wpf.3.4.0-beta3-final.nupkg\r\n\r\n[**vs-impl**](https://dev.azure.com/azure-public/vside/_packaging?_a=feed&feed=vs-impl) feed\r\n\r\n- Microsoft.VisualStudio.IntegrationTest.Utilities.3.4.0-beta3-19514-03.nupkg\r\n- Microsoft.CodeAnalysis.LanguageServer.Protocol.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.Apex.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.CodeLens.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.Debugger.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.FSharp.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.IntelliTrace.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.ProjectSystem.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.Razor.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.TypeScript.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.UnitTesting.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.ExternalAccess.Xamarin.Remote.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Remote.Razor.ServiceHub.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Remote.ServiceHub.3.4.0-beta3-final.nupkg\r\n- Microsoft.CodeAnalysis.Remote.Workspaces.3.4.0-beta3-final.nupkg\r\n- Microsoft.VisualStudio.LanguageServices.LiveShare.3.4.0-beta3-final.nupkg\r\n- Microsoft.VisualStudio.LanguageServices.Razor.RemoteClient.3.4.0-beta3-final.nupkg\r\n\r\nTODO:\r\n- Should Feetures/EditorFeatures be published to `dotnet-core` or `vssdk` feed?\r\n","Url":"https://github.com/dotnet/roslyn/issues/39279","RelatedDescription":"Open issue \"Publish packages to Azure DevOps public feeds instead of MyGet\" (#39279)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"},{"Id":"504527034","IsPullRequest":true,"CreatedAt":"2019-10-09T12:42:07","Actor":"MichalStrehovsky","Number":"7821","RawContent":null,"Title":"Delete unused method","State":"closed","Body":"Supplements #7819.","Url":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Closed or merged PR \"Delete unused method\" (#7821)"},{"Id":"504357120","IsPullRequest":true,"CreatedAt":"2019-10-09T09:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7820","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7820)"},{"Id":"504158790","IsPullRequest":true,"CreatedAt":"2019-10-09T09:27:34","Actor":"am11","Number":"7818","RawContent":null,"Title":"Fix exit code of build-native.sh","State":"closed","Body":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive).","Url":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Closed or merged PR \"Fix exit code of build-native.sh\" (#7818)"},{"Id":"504330608","IsPullRequest":true,"CreatedAt":"2019-10-09T01:16:45","Actor":"Dotnet-GitSync-Bot","Number":"7819","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7819","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7819)"},{"Id":"503784732","IsPullRequest":false,"CreatedAt":"2019-10-08T02:17:07","Actor":"ZacharyJia","Number":"7817","RawContent":null,"Title":"Call generated dll from cpp crash","State":"open","Body":"I use a dll generated by corert in a cpp program, but it crashed when any statement runs.\r\nI'm using the `.net core 3.0` and the ilcompiler version is `1.0.0-alpha-28207-01`\r\n\r\nThe call stack is:\r\n```\r\ngenet.net.exe!S_P_CoreLib_System_Threading_LockHolder__Hold()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner_Cctor__GetCctor()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase()\r\ngenet.net.exe!S_P_CoreLib_System_Text_Encoding__get_UTF8()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetModuleName()genet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__FixupModuleCell()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvokeSlow()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvoke()\r\ngenet.net.exe!genet_net_genet_net_Program__LoadLibrary()\r\ngenet.net.exe!genet_net_genet_net_Program__show()\r\ndlldemo-cpp.exe!main()  line 17\tC++\r\n```\r\n\r\nThe crash message is:\r\n```\r\n0x00007FF9C9416408 (genet.net.exe)处(位于 dlldemo-cpp.exe 中)引发的异常: 0xC0000005: 读取位置 0x0000000000000000 时发生访问冲突。\r\n```","Url":"https://github.com/dotnet/corert/issues/7817","RelatedDescription":"Open issue \"Call generated dll from cpp crash\" (#7817)"},{"Id":"503304688","IsPullRequest":false,"CreatedAt":"2019-10-07T08:30:51","Actor":"yunekit","Number":"7816","RawContent":null,"Title":"sched_yield infinite loop","State":"open","Body":"The sched_yield()==0 infinite loop occurred during the running of the application, causing the process to block and fail to work.","Url":"https://github.com/dotnet/corert/issues/7816","RelatedDescription":"Open issue \"sched_yield infinite loop\" (#7816)"},{"Id":"503145779","IsPullRequest":true,"CreatedAt":"2019-10-06T21:09:25","Actor":"Dotnet-GitSync-Bot","Number":"7815","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7815","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7815)"},{"Id":"503134823","IsPullRequest":true,"CreatedAt":"2019-10-06T19:30:50","Actor":"MichalStrehovsky","Number":"7814","RawContent":null,"Title":"Add support for multithreaded compilation to ILC","State":"closed","Body":"Improves native compilation throughput by about 33%.\r\n\r\nValidated that the output with multithreading enabled (the new default) is byte-by-byte identical with the output produced by `--singlethreaded` (new command line option to ILC that disables multithreading).\r\n\r\nWe still can do a lot more in terms of compilation throughput (virtual method resolution is really slow and runs in one of the single threaded phases, and the object writing phase is pretty slow too and is fully single threaded too).\r\n\r\nContributes to #3925 (what's left is the extra-credit stuff).","Url":"https://github.com/dotnet/corert/pull/7814","RelatedDescription":"Closed or merged PR \"Add support for multithreaded compilation to ILC\" (#7814)"},{"Id":"502963591","IsPullRequest":true,"CreatedAt":"2019-10-06T04:53:29","Actor":"MichalStrehovsky","Number":"7811","RawContent":null,"Title":"Port fixes from CoreCLR","State":"closed","Body":"Skipping dotnet/coreclr#26792 and dotnet/coreclr#26793.","Url":"https://github.com/dotnet/corert/pull/7811","RelatedDescription":"Closed or merged PR \"Port fixes from CoreCLR\" (#7811)"},{"Id":"502974204","IsPullRequest":true,"CreatedAt":"2019-10-05T16:06:41","Actor":"MichalStrehovsky","Number":"7812","RawContent":null,"Title":"Remove global state tracking in DynamicInvokeTemplateDataNode","State":"closed","Body":"DynamicInvokeTemplateDataNode populated _methodToTemplateIndex in `GetIdForMethod` which is pretty bad from multithreading perspective (non-concurrent dictionary + ID that depends on ordering).\r\n\r\nI've moved this tracking into a separate node so that this is more explicit and properly sortable.","Url":"https://github.com/dotnet/corert/pull/7812","RelatedDescription":"Closed or merged PR \"Remove global state tracking in DynamicInvokeTemplateDataNode\" (#7812)"},{"Id":"502974267","IsPullRequest":true,"CreatedAt":"2019-10-05T16:04:50","Actor":"MichalStrehovsky","Number":"7813","RawContent":null,"Title":"Cache helpers used in IL scanner","State":"closed","Body":"We have a cache for these in CorInfoImpl (when compiling), but there's no cache in the scanner. This means we're re-resolving various named helpers in CoreLib. It's a bit of a waste of CPU time. Noticed this when running the compiler under a profiler.","Url":"https://github.com/dotnet/corert/pull/7813","RelatedDescription":"Closed or merged PR \"Cache helpers used in IL scanner\" (#7813)"},{"Id":"502935521","IsPullRequest":true,"CreatedAt":"2019-10-05T12:47:51","Actor":"MichalStrehovsky","Number":"7810","RawContent":null,"Title":"Update ObjWriter","State":"closed","Body":"Picks up #7802.","Url":"https://github.com/dotnet/corert/pull/7810","RelatedDescription":"Closed or merged PR \"Update ObjWriter\" (#7810)"},{"Id":"502780858","IsPullRequest":true,"CreatedAt":"2019-10-05T06:01:27","Actor":"Dotnet-GitSync-Bot","Number":"7809","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7809)"},{"Id":"502527358","IsPullRequest":false,"CreatedAt":"2019-10-04T12:27:49","Actor":"kstreichergb","Number":"7808","RawContent":null,"Title":"dotnet.exe hangs during shutdown","State":"closed","Body":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)","Url":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808)"},{"Id":"501662946","IsPullRequest":false,"CreatedAt":"2019-10-02T18:48:52","Actor":"RalfKornmannEnvision","Number":"7807","RawContent":null,"Title":"GC thread suspension","State":"open","Body":"Maybe I just got something wrong here and I am looking at the wrong place.\r\n\r\nMy somewhat bigger test code finally runs stable for hours on my ARM64 system without trashing the heap or consuming all the physical memory. But so far it was only a single thread console application. For my use case I would need some threads.\r\n\r\nAs expected the GC need to suspend all managed threads to do a collection. For Windows there is some hijack code but the function for unix only contains a todo. I assume the reason for this is that the necessary os functions are missing. My target system has the same issue as I cannot suspend and resume threads there. As .net core should have the same issue on other posix systems I checked there and noticed that the jit engine has an option to inject gc probes. I assume that this is the only way to get the GC working in a multi thread environment were hijacking is not possible. Or did I missed something?\r\n\r\nIn the case I am right a short check showed me that the ilcompiler doesn't support the flags and callbacks for this yet?\r\n\r\nDo I need to add this to get the GC working with multiple threads or have I looked at the wrong place?\r\n\r\nIf this the right place does it make any sense to aim for the inline version of the gc probe or can this never work with corert and the call variant is the only solution? I already checked the code and noticed that even if the inline variant can work the call needs still be implemented as it is used in more complicated cases.","Url":"https://github.com/dotnet/corert/issues/7807","RelatedDescription":"Open issue \"GC thread suspension\" (#7807)"},{"Id":"501011867","IsPullRequest":true,"CreatedAt":"2019-10-01T18:56:37","Actor":"Dotnet-GitSync-Bot","Number":"7806","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7806)"},{"Id":"500653866","IsPullRequest":true,"CreatedAt":"2019-10-01T15:25:51","Actor":"Dotnet-GitSync-Bot","Number":"7805","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7805)"},{"Id":"500408911","IsPullRequest":true,"CreatedAt":"2019-10-01T04:22:31","Actor":"Dotnet-GitSync-Bot","Number":"7804","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern","Url":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7804)"},{"Id":"499907137","IsPullRequest":true,"CreatedAt":"2019-09-29T14:16:14","Actor":"MichalStrehovsky","Number":"7803","RawContent":null,"Title":"Delete ReadyToRun portions of the compiler and test tree","State":"closed","Body":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably.","Url":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Closed or merged PR \"Delete ReadyToRun portions of the compiler and test tree\" (#7803)"},{"Id":"499773007","IsPullRequest":true,"CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Number":"7802","RawContent":null,"Title":"Fix Windows debug information for classes","State":"closed","Body":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n","Url":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Closed or merged PR \"Fix Windows debug information for classes\" (#7802)"},{"Id":"499146410","IsPullRequest":true,"CreatedAt":"2019-09-27T23:17:06","Actor":"Dotnet-GitSync-Bot","Number":"7800","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams","Url":"https://github.com/dotnet/corert/pull/7800","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7800)"},{"Id":"499434828","IsPullRequest":true,"CreatedAt":"2019-09-27T15:09:03","Actor":"am11","Number":"7801","RawContent":null,"Title":"Remove duplicate enum SystemVClassificationType","State":"closed","Body":"Found the duplicate definition at: https://github.com/dotnet/corert/blob/a7ce92678876ba55a1c7a65c464363b51d777b4f/src/JitInterface/src/CorInfoTypes.cs#L1170","Url":"https://github.com/dotnet/corert/pull/7801","RelatedDescription":"Closed or merged PR \"Remove duplicate enum SystemVClassificationType\" (#7801)"},{"Id":"498529328","IsPullRequest":true,"CreatedAt":"2019-09-26T22:29:33","Actor":"Dotnet-GitSync-Bot","Number":"7798","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @benaadams @stephentoub","Url":"https://github.com/dotnet/corert/pull/7798","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7798)"},{"Id":"499086023","IsPullRequest":false,"CreatedAt":"2019-09-26T19:57:16","Actor":"jkotas","Number":"7799","RawContent":null,"Title":"CppCodeGen: Implement RVA-backed static fields","State":"open","Body":"E.g. `private static ReadOnlySpan<byte> CategoryForLatin1 => new byte[] { 1, 2, 3, ... };`. CppCodeGen allocates space for these, but does not initialize it.","Url":"https://github.com/dotnet/corert/issues/7799","RelatedDescription":"Open issue \"CppCodeGen: Implement RVA-backed static fields\" (#7799)"},{"Id":"497810701","IsPullRequest":true,"CreatedAt":"2019-09-25T21:17:24","Actor":"Dotnet-GitSync-Bot","Number":"7797","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7797","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7797)"},{"Id":"496108391","IsPullRequest":false,"CreatedAt":"2019-09-24T00:16:58","Actor":"Unreal-System","Number":"7795","RawContent":null,"Title":".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.","State":"closed","Body":"[Demo.zip](https://github.com/dotnet/corert/files/3633903/Demo.zip)\r\ndotnet --version\r\n3.0.100-rc1-014190\r\n\r\n用于 .NET Core 的 Microsoft (R) 生成引擎版本 16.3.0-preview-19455-02+4a2d77107\r\n版权所有(C) Microsoft Corporation。保留所有权利。\r\n\r\n  C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj 的还原在 101.78 ms 内完成。\r\n  你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview\r\n  LoginNet -> C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\bin\\Release\\netcoreapp3.0\\win-x64\\LoginNet.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : Code generation failed [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n  ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner. You can work around by running the compilation with scanner disabled.\r\n     at ILCompiler.ILScanResults.ScannedVTableProvider.GetSlice(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.HasFixedSlotVTable(TypeDesc type)\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult)\r\n     --- End of inner exception stack trace ---\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n     at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\Admin\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(239,5): error MSB3073: The command \"\"C:\\Users\\Admin\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\tools\\ilc\" @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\LoginNet.ilc.rsp\"”exited with code 1. [C:\\Users\\Admin\\Desktop\\Fix\\LoginNet\\LoginNet.csproj]\r\n\r\nCan be compiled on earlier .NET Core 3 previews and CoreRT daily builds.","Url":"https://github.com/dotnet/corert/issues/7795","RelatedDescription":"Closed issue \".NET Core 3 ILCompiler.CodeGenerationFailedException: Code generation failed ---> ILCompiler.ScannerFailedException: VTable of type 'System.Net.HttpWebRequest' not computed by the IL scanner.\" (#7795)"},{"Id":"496830692","IsPullRequest":false,"CreatedAt":"2019-09-22T20:46:12","Actor":"genifycom","Number":"7796","RawContent":null,"Title":"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure","State":"open","Body":"Now getting this strange error:\r\n\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure [C:\\xxx.csproj]\r\n  Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveAssemblyReference(AssemblyReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\DAnderson\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\build\\Microsoft.NETCore.Native.targets(253,5): error MSB3073: The command \"\"C:\\...\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28121-01\\tools\\ilc\" @\"obj\\Debug\\netcoreapp2.1\\win-x64\\native\\xxx.ilc.rsp\"\" exited with code 1. [C:\\xxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7796","RelatedDescription":"Open issue \"[TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: Microsoft.Management.Infrastructure\" (#7796)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"507542154","IsPullRequest":true,"CreatedAt":"2019-10-16T00:05:05","Actor":"dotnet-bot","Number":"3755","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755)"},{"Id":"507542108","IsPullRequest":true,"CreatedAt":"2019-10-16T00:04:59","Actor":"dotnet-bot","Number":"3754","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Open PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754)"},{"Id":"505569280","IsPullRequest":true,"CreatedAt":"2019-10-15T23:41:48","Actor":"dotnet-bot","Number":"3737","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3737","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3737)"},{"Id":"507520224","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Number":"3753","RawContent":null,"Title":"Increase timeout and up ulimit -n","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed or merged PR \"Increase timeout and up ulimit -n\" (#3753)"},{"Id":"507453295","IsPullRequest":true,"CreatedAt":"2019-10-15T23:07:25","Actor":"vijayrkn","Number":"3750","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue: \r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk. \r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile. \r\n\r\nImpact: \r\nThis breaks the Sdk based WebJobs publish scenarios. \r\n\r\nThere are 2 parts to this fix: \r\n1. Removing the default publish profile from Netsdk\r\n2. If the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - https://github.com/aspnet/websdk/pull/1006\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3750","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3750)"},{"Id":"505628347","IsPullRequest":true,"CreatedAt":"2019-10-15T22:58:19","Actor":"dotnet-maestro[bot]","Number":"3740","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/11/2019 9:07 PM\r\n- **Commit**: f15311bdc5e9fbf4026a3099c32c5ea6b50d6236\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19511.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3740","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3740)"},{"Id":"505812496","IsPullRequest":true,"CreatedAt":"2019-10-15T22:09:55","Actor":"dotnet-bot","Number":"3741","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3741","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.4xx\" (#3741)"},{"Id":"507479665","IsPullRequest":true,"CreatedAt":"2019-10-15T20:59:03","Actor":"vijayrkn","Number":"3752","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"open","Body":"Issue:\r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk.\r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile.\r\n\r\nImpact:\r\nThis breaks the Sdk based WebJobs publish scenarios.\r\n\r\nThere are 2 parts to this fix:\r\n\r\nRemoving the default publish profile from Netsdk\r\nIf the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - aspnet/websdk#1006","Url":"https://github.com/dotnet/sdk/pull/3752","RelatedDescription":"Open PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3752)"},{"Id":"505812663","IsPullRequest":true,"CreatedAt":"2019-10-15T20:17:30","Actor":"dotnet-bot","Number":"3742","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3742","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3742)"},{"Id":"507458154","IsPullRequest":true,"CreatedAt":"2019-10-15T20:12:56","Actor":"nguerrera","Number":"3751","RawContent":null,"Title":"Delete tmp file that was accidentally checked in","State":"open","Body":"Found creeping into master via merge from 3.1\r\n","Url":"https://github.com/dotnet/sdk/pull/3751","RelatedDescription":"Open PR \"Delete tmp file that was accidentally checked in\" (#3751)"},{"Id":"507174167","IsPullRequest":false,"CreatedAt":"2019-10-15T11:09:48","Actor":"mjcheetham","Number":"3749","RawContent":null,"Title":"Incorrect AppHost binary is published for dependant projects","State":"open","Body":"**Version information**\r\n.NET Core SDK 3.0.100\r\n\r\n**Reproduction steps**\r\nOn a Mac...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r win-x64\r\n\r\nor on Windows...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r osx-x64\r\n\r\n**Expected behaviour**\r\nIn the publish directory there exists App2.exe and App1.exe (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\n**Actual behaviour**\r\nIn the publish directory there exists App2.exe and **_App1 (not a Windows PE)_** (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\nOn a Mac publishing win-x64:\r\n```shell\r\n$ dotnet --version\r\n3.0.100\r\n$ pwd\r\n/Users/<user>/scratch/xpublishbug/App2/bin/Debug/netcoreapp3.0/win-x64/publish\r\n$ ls -l App*\r\n-rwxr-xr-x  1 <user>  <group>   80860 15 Oct 12:05 App1\r\n-rw-r--r--  1 <user>  <group>    4608 15 Oct 12:05 App1.dll\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App1.pdb\r\n-rw-r--r--  1 <user>  <group>   30026 15 Oct 12:05 App2.deps.json\r\n-rw-r--r--  1 <user>  <group>    4096 15 Oct 12:05 App2.dll\r\n-rwxr--r--  1 <user>  <group>  158208 15 Oct 12:05 App2.exe\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App2.pdb\r\n-rw-r--r--  1 <user>  <group>      26 15 Oct 12:05 App2.runtimeconfig.json\r\n```\r\n\r\nOn Windows publishing osx-x64:\r\n```powershell\r\nPS> dotnet --version\r\n3.0.100\r\nPS> ls App*\r\n\r\n\r\n    Directory: C:\\Users\\<user>\\scratch\\xpublishtest\\App2\\bin\\Debug\\netcoreapp3.0\\osx-x64\\publish\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       2019-10-15  12:18 PM           4608 App1.dll\r\n-a----       2019-10-15  12:18 PM         159744 App1.exe\r\n-a----       2019-10-15  12:18 PM            444 App1.pdb\r\n-a----       2019-10-15  12:18 PM          80860 App2\r\n-a----       2019-10-15  12:18 PM          27495 App2.deps.json\r\n-a----       2019-10-15  12:18 PM           4096 App2.dll\r\n-a----       2019-10-15  12:18 PM            444 App2.pdb\r\n-a----       2019-10-15  12:18 PM             28 App2.runtimeconfig.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/3749","RelatedDescription":"Open issue \"Incorrect AppHost binary is published for dependant projects\" (#3749)"},{"Id":"507060412","IsPullRequest":false,"CreatedAt":"2019-10-15T07:30:29","Actor":"josefblaha","Number":"3748","RawContent":null,"Title":"Build succeeds although a file was deleted in a referenced project","State":"open","Body":"In a specific situation, when a file is deleted, causing compile error, build still succeedes.\r\n1. Create a new .NET Standard library project ClassLibrary1 with public Class1.\r\n2. Add another library ClassLibrary2 to the solution.\r\n3. Add a project reference from ClassLibrary2 to ClassLibrary1.\r\n4. Create a new class Consumer1 in ClassLibrary2 with a field of type ClassLibrary1.Class1.\r\n5. dotnet build on solution succeeds (as expected).\r\n6. Delete ClassLibrary1.Class1 file.\r\n7. dotnet build on solution still succeeeds (although it shouldn't).\r\n\r\nPrepared solution in state of point 4:\r\n[FileDeleteTest.zip](https://github.com/dotnet/sdk/files/3727846/FileDeleteTest.zip)\r\n\r\ndotnet SDK 3.0.100\r\nVS 16.3.3\r\nWindows 10 1903\r\n","Url":"https://github.com/dotnet/sdk/issues/3748","RelatedDescription":"Open issue \"Build succeeds although a file was deleted in a referenced project\" (#3748)"},{"Id":"506814823","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:42","Actor":"dsplaisted","Number":"3747","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3747","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#3747)"},{"Id":"506742575","IsPullRequest":false,"CreatedAt":"2019-10-14T15:59:55","Actor":"mwpowellhtx","Number":"3746","RawContent":null,"Title":"Build pipeline failed to resolve CLI tooling after VS2019 installation","State":"open","Body":"We got errors in our build pipeline related to our internal CLI tooling failing to resolve correctly, in our estimation, following VS2019 installation.\r\n\r\nRunning the latest NuGet: `Version: 5.3.0.6260`\r\n\r\nIf it helps, our `dotnet --info` looks like this:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3746","RelatedDescription":"Open issue \"Build pipeline failed to resolve CLI tooling after VS2019 installation\" (#3746)"},{"Id":"506392857","IsPullRequest":true,"CreatedAt":"2019-10-13T22:49:14","Actor":"wli3","Number":"3745","RawContent":null,"Title":"WIP helix","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3745","RelatedDescription":"Open PR \"WIP helix\" (#3745)"},{"Id":"505951909","IsPullRequest":true,"CreatedAt":"2019-10-11T23:43:10","Actor":"dotnet-maestro[bot]","Number":"3744","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.02\r\n- **Date Produced**: 10/11/2019 3:47 PM\r\n- **Commit**: 19942e71998242599a0b6d4496066eaa38588af5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3744","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3744)"},{"Id":"505950895","IsPullRequest":false,"CreatedAt":"2019-10-11T16:37:45","Actor":"AArnott","Number":"3743","RawContent":null,"Title":"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack","State":"open","Body":"The SatelliteDllsProjectOutputGroupDependencies target results in P2Ps doing a build even when NoBuild=true, as caught by the NETSDK1085 error.\r\n\r\nSimple repro sln: [NETSDK1085Bug.zip](https://github.com/dotnet/sdk/files/3718674/NETSDK1085Bug.zip)\r\n\r\nTo repro:\r\n```\r\ndotnet build\r\ndotnet pack --no-build\r\n```\r\n\r\nScenario: I'm building an analyzer package which includes code fixes in one assembly and analyzers in a P2P reference. I need to gather satellite assemblies from the analyzer project, which is exactly what the `SatelliteDllsProjectOutputGroupDependencies` target is for and what I've been using for years in many projects. But apparently it results in triggering a build in the analyzer project even when I'm using `dotnet pack --no-build`.\r\n\r\nThis came up in my upgrade from .NET Core SDK 2.2.401 to 3.0.100.","Url":"https://github.com/dotnet/sdk/issues/3743","RelatedDescription":"Open issue \"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack\" (#3743)"},{"Id":"505569243","IsPullRequest":true,"CreatedAt":"2019-10-11T04:31:39","Actor":"dotnet-bot","Number":"3736","RawContent":null,"Title":"Merge release/2.2.2xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3736","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/2.2.4xx\" (#3736)"},{"Id":"505569183","IsPullRequest":true,"CreatedAt":"2019-10-11T03:48:26","Actor":"dotnet-bot","Number":"3735","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3735","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.2xx\" (#3735)"},{"Id":"505569308","IsPullRequest":true,"CreatedAt":"2019-10-11T03:30:40","Actor":"dotnet-bot","Number":"3738","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3738","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3738)"},{"Id":"505532879","IsPullRequest":true,"CreatedAt":"2019-10-11T03:30:23","Actor":"nguerrera","Number":"3733","RawContent":null,"Title":"Merge 3.0.1xx to 3.1.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3733","RelatedDescription":"Closed or merged PR \"Merge 3.0.1xx to 3.1.1xx\" (#3733)"},{"Id":"505536771","IsPullRequest":true,"CreatedAt":"2019-10-11T01:11:26","Actor":"dotnet-maestro[bot]","Number":"3734","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191010.13\r\n- **Date Produced**: 10/10/2019 9:15 PM\r\n- **Commit**: ee7dbc9e064bf59f822c5310b89e0e996ccc0d58\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3734","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3734)"},{"Id":"505569333","IsPullRequest":true,"CreatedAt":"2019-10-11T00:05:30","Actor":"dotnet-bot","Number":"3739","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3739","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3739)"},{"Id":"505491895","IsPullRequest":true,"CreatedAt":"2019-10-10T21:55:54","Actor":"dotnet-maestro[bot]","Number":"3732","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191010.08\r\n- **Date Produced**: 10/10/2019 7:27 PM\r\n- **Commit**: 903ca49e3ffddc551e12d2f94d7cca95f9a340bf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3732","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3732)"},{"Id":"505082701","IsPullRequest":false,"CreatedAt":"2019-10-10T07:14:25","Actor":"hanslai","Number":"3731","RawContent":null,"Title":"dotnet cli: dotnet new failed when there is a private nuget package","State":"open","Body":"I have a private nuget package setup in Visual Studio.\r\n\r\n![AIS Internal nuget](https://user-images.githubusercontent.com/20576491/66546180-0b00a680-eb6f-11e9-9ab5-43dcae189c23.png)\r\n\r\nWhen I run the following CLI command `dotnet new -i \"Amazon.Lambda.Templates::*\"` in Powershell , `dotnet new `will failed with Status Code 401.   Please see error message below.\r\n\r\n![Dotnet new failed with private nuget](https://user-images.githubusercontent.com/20576491/66546448-a0039f80-eb6f-11e9-8847-8edc5ed3c94b.png)\r\n\r\nBut if I unchecked my private nuget in Nuget Package Manager from Visual Studio.  Then the above `dotnet new` command will successfully restore the Templates.\r\n\r\nSince having a private nuget package or not should not have anything to do with `dotnet new`. This CLI command should not failed.\r\n\r\nThanks\r\n","Url":"https://github.com/dotnet/sdk/issues/3731","RelatedDescription":"Open issue \"dotnet cli: dotnet new failed when there is a private nuget package\" (#3731)"},{"Id":"504289407","IsPullRequest":false,"CreatedAt":"2019-10-08T17:33:19","Actor":"davidmatson","Number":"3729","RawContent":null,"Title":"Process.Start on exe via ProjectReference no longer works in .NET Core","State":"open","Body":"**Visual Studio Version**:\r\n16.2.5\r\n\r\n**Summary**:\r\nHaving a ProjectReference to an .exe was sufficient to have Process.Start work in .NET Framework (both old- and new-style csprojs). With .NET Core, it fails (with both SelfContained=true and false and with or without running Publish first).\r\n\r\n**Steps to Reproduce**:\r\n1. Create an exe project in a new solution.\r\n2. Create a second exe project in the same solution.\r\n3. Add a ProjectReference from the first project to the second project.\r\n4. Have the first project call Process.Start on the second project's exe.\r\n\r\n**Expected Behavior**:\r\nThe process runs successfully.\r\n\r\n**Actual Behavior**:\r\nProcess.Start fails with:\r\n```\r\nA fatal error was encountered. The library 'hostpolicy.dll' required to execute the application was not found in 'C:\\Program Files\\dotnet'.\r\n```\r\n\r\nor (if SelfContained=true):\r\n```\r\nCould not resolve CoreCLR path. For more details, enable tracing by setting COREHOST_TRACE environment variable to 1\r\n```\r\n\r\nor (after Publish):\r\n```\r\nUnhandled Exception: System.ComponentModel.Win32Exception: The system cannot find the file specified\r\n```\r\n\r\n**User Impact**:\r\nWe heavily use the pattern of a long-running exe (for a container service) calling short-lived exes to do work. Ctrl+F5 used to work in .NET Framework; it doesn't in .NET Core.\r\n\r\nNote also some odd behavior with SelfContained=false - NuGet package dependencies of the child project do not get placed in the bin directory of the referencing project (prior to Publish; they do after).\r\n\r\nSee the attached zip for repro projects for full .NET Framework with a traditional csproj, full .NET Framework with a new-style (Common Project System) csproj, and .NET Core.\r\n[repro.zip](https://github.com/dotnet/project-system/files/3703783/repro.zip)","Url":"https://github.com/dotnet/sdk/issues/3729","RelatedDescription":"Open issue \"Process.Start on exe via ProjectReference no longer works in .NET Core\" (#3729)"},{"Id":"504072077","IsPullRequest":true,"CreatedAt":"2019-10-08T14:25:49","Actor":"nguerrera","Number":"3727","RawContent":null,"Title":" Pinned host model 3.0.0 for 3.0.x servicing","State":"closed","Body":"@mmitche  @livarcocc ","Url":"https://github.com/dotnet/sdk/pull/3727","RelatedDescription":"Closed or merged PR \" Pinned host model 3.0.0 for 3.0.x servicing\" (#3727)"},{"Id":"504301070","IsPullRequest":false,"CreatedAt":"2019-10-08T14:23:27","Actor":"ds1709","Number":"3730","RawContent":null,"Title":"Use ResXFileCodeGenerator as default custom tool fo resx files if Designer.cs file exists","State":"open","Body":"**Summary**:\r\nWe need to specify `CustomTool` attribute for resx files. Generally it's `ResXFileCodeGenerator`. If `CustomTool` not specified, then code generator is not working. Offer to make `ResXFileCodeGenerator` as default custom tool for resx files, whict has paired Designer.cs file (e.g. the most common Propertiest\\Resources.resx and Properties\\Resources.Designer.cs).","Url":"https://github.com/dotnet/sdk/issues/3730","RelatedDescription":"Open issue \"Use ResXFileCodeGenerator as default custom tool fo resx files if Designer.cs file exists\" (#3730)"},{"Id":"503850577","IsPullRequest":false,"CreatedAt":"2019-10-08T06:17:11","Actor":"davidwengier","Number":"3726","RawContent":null,"Title":"Review translation of \"Assets file\" for portuguese","State":"open","Body":"tag @tmeschter\r\n\r\nThis is just one person, but they speak portuguese better than me, so thought I'd report it. Not sure if there is some way to get the LOC team to verify that translations make sense? It looks like in this case the translation is technically correct, but perhaps not helpful.\r\n\r\nFrom the C# discord today:\r\n\r\n\r\n-----\r\n\r\n@marcussacana : \r\nI got a error\r\nit's in portuguese, a sec to me translate\r\n\"The file of active '....' don't have the same destination to '.netcoreapp,ver=v3/win-x86' verify if the restoration has executed and if you included the 'netcoreapp3.0' in the TargetFrameworks of the project, Maybe you will need include the 'win-x86' in the RuntimeIdentifiers of the project.\"\r\nI don't get this 'actives' anyway\r\n \r\n@davidwengier : \r\nit would be \"file of assets\" i guess? the english version of the message just says \"Assets file\"\r\n \r\n@marcussacana : \r\nthen the portuguese message is wrong, because don't make much sense to me...\r\nas far I know 'ativos' can be translated only to 'active/enabled'... the english version said assets, right?\r\n \r\n@davidwengier : \r\nyes\r\nand in this case \"assets\" is a technical term, so i think the translation should be reviewed\r\nlike its literally \"project.assets.json\"\r\n \r\n@marcussacana : \r\nwell, I never see a translation to assets before, usually here we speak 'assets' too, but isn't a word recognized in our dictionary\r\n\r\nthe google translate said it's rigth\r\n![image](https://user-images.githubusercontent.com/754264/66371253-6fe0c300-e9ee-11e9-8854-ccfdaeb5ce7e.png)\r\n\r\nbut well\r\n![image](https://user-images.githubusercontent.com/754264/66371266-7707d100-e9ee-11e9-909d-91b86725586d.png)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3726","RelatedDescription":"Open issue \"Review translation of \"Assets file\" for portuguese\" (#3726)"},{"Id":"504235087","IsPullRequest":false,"CreatedAt":"2019-09-30T15:55:55","Actor":"genifycom","Number":"3728","RawContent":null,"Title":"How to debug \"GenerateBundle\" task failed unexpectedly","State":"open","Body":"# Issue Title\r\n\r\ndotnet publish xxx.csproj -r win-x64 -c Release /p:PublishSingleFile=true\r\n\r\ngives me the following:\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018: The \"GenerateBundle\" task failed unexpectedly. [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018: Microsoft.NET.HostModel.AppHost.PlaceHolderNotFoundInAppHostException: Exception of type 'Microsoft.NET.HostModel.AppHost.PlaceHolderNotFoundInAppHostException' was thrown. [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.SearchAndReplace(MemoryMappedViewAccessor accessor, Byte[] searchPattern, Byte[] patternToReplace, Boolean pad0s) [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.BinaryUtils.SearchAndReplace(String filePath, Byte[] searchPattern, Byte[] patternToReplace, Boolean pad0s) [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.<>c__DisplayClass3_0.<SetAsBundle>b__0() [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.RetryUtil.RetryOnIOError(Action func) [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.AppHost.HostWriter.SetAsBundle(String appHostPath, Int64 bundleHeaderOffset) [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.HostModel.Bundle.Bundler.GenerateBundle(IReadOnlyList`1 fileSpecs) [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateBundle.ExecuteCore() [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\xxx.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(809,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\xxx.csproj]\r\n\r\n# General\r\n\r\nWould love to be able to provide more info, but how?\r\n\r\nIs there a debug publish switch?\r\n","Url":"https://github.com/dotnet/sdk/issues/3728","RelatedDescription":"Open issue \"How to debug \"GenerateBundle\" task failed unexpectedly\" (#3728)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1184165499212423168","CreatedAt":"2019-10-15T17:53:50+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 1 https://t.co/HAD1JAsf3j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":138,"FavoriteCount":76,"RawContent":null},{"Id":"1184165405574586368","CreatedAt":"2019-10-15T17:53:28+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 Preview 1 https://t.co/Dho82BhBu1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":28,"RawContent":null},{"Id":"1184151270635921408","CreatedAt":"2019-10-15T16:57:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"1182709231746727941","CreatedAt":"2019-10-11T17:27:09+00:00","UserScreenname":"dotnet","Text":"We've been working hard to make IoT development on .NET a great experience.\n\nIn this episode of #OnDotNet… https://t.co/psNXS59gtS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":31,"RawContent":null},{"Id":"1181935602410897408","CreatedAt":"2019-10-09T14:13:01+00:00","UserScreenname":"dotnet","Text":"Hey folks. We'll be building out the WeatherApp from #dotNETConf; from the API and configuration, all the way to bu… https://t.co/zd90XbTV5c","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":42,"FavoriteCount":10,"RawContent":null},{"Id":"1181701006347735040","CreatedAt":"2019-10-08T22:40:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1181691179663949824","CreatedAt":"2019-10-08T22:01:46+00:00","UserScreenname":"dotnet","Text":"We're developing documentation for the new System.Text.Json serializer. See the first installment at… https://t.co/aHX6GMXqSz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":80,"FavoriteCount":39,"RawContent":null}]}},"RunOn":"2019-10-16T05:30:36.8209344Z","RunDurationInMilliseconds":15488}