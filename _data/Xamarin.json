{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Historically iOS applications have had a number of limitations when running on a device, as Apple disallows the execution of dynamically generated code. Applications are compiled “Ahead of Time” (AOT)...","Href":"https://blog.xamarin.com/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T16:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://blog.xamarin.com/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9329300207","Type":"PullRequestEvent","CreatedAt":"2019-03-28T01:46:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2886","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Add code to get the device abi\" (#2886) at xamarin/xamarin-android","RelatedBody":"Currently all of our unit tests assume that we\r\nare testing against an x86 device. This commit\r\nadds code to get the abi of the attached device\r\nto that it is available for the unit tests.\r\n\r\nCurrently there are no tests in this repo which\r\nwill use this. However we do have a plan to move\r\nall our tests here and there are a few fastdev\r\ntests which weill make use of this."},{"Id":"9328383884","Type":"PullRequestEvent","CreatedAt":"2019-03-27T21:56:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2891","RelatedDescription":"Merged pull request \"[create-bundle] Include satellite assemblies\" (#2891) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/406/\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/407/\r\n\r\nCommit 333b98b3 inadvertently broke all subsequent commits:\r\n\r\n\txamarin-android/tests/BCL-Tests/Xamarin.Android.Bcl-Tests/Xamarin.Android.Bcl-Tests.targets(15,5):\r\n\terror MSB3030: Could not copy the file \"../../../bin/Release/bcl-tests/es-ES/monodroid_corlib_test.resources.dll\" because it was not found.\r\n\r\nNote, however, that commit 333b98b3 *itself* [built][0].\r\n\r\nWhat went wrong is that the `_InstallRuntimes` target within\r\n`src/mono-runtimes/mono-runtimes.targets` wouldn't consistently copy\r\nthe unit test satellite assemblies from the mono archive into the\r\nbuild tree, nor -- more importantly! -- include the satellite\r\nassemblies into the mono bundle, because the satellite assemblies\r\nweren't added to `@(_BclTestAssemblyDestination)`/`@(_BclTestOutput)`\r\n/`@(BundleItem).\r\n\r\nWithout being included into the mono bundle, the\r\n`Xamarin.Android.Bcl-Tests.csproj` could not build.\r\n\r\n(Commit 333b98b3 *itself* built because it was responsible for\r\n*creating* the mono bundle, not using it, and as part of the \"prep\r\nwork\" it copied `es-ES/monodroid_corlib_test.resources.dll` into the\r\nexpected directory, but neglected to include it into the bundle.)\r\n\r\nUpdate `src/mono-runtimes/mono-runtimes.targets` so that\r\n`@(MonoTestSatelliteAssembly)` are included into the bundle, and\r\nupdate the `_InstallRuntimes` target so that the test assemblies and\r\nrelated files are considered as Inputs & Outputs.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/404/"},{"Id":"9327515970","Type":"PullRequestEvent","CreatedAt":"2019-03-27T19:35:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2891","RelatedDescription":"Opened pull request \"[create-bundle] Include satellite assemblies\" (#2891) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/406/\r\nContext: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/407/\r\n\r\nCommit 333b98b3 inadvertently broke all subsequent commits:\r\n\r\n\txamarin-android/tests/BCL-Tests/Xamarin.Android.Bcl-Tests/Xamarin.Android.Bcl-Tests.targets(15,5):\r\n\terror MSB3030: Could not copy the file \"../../../bin/Release/bcl-tests/es-ES/monodroid_corlib_test.resources.dll\" because it was not found.\r\n\r\nNote, however, that commit 333b98b3 *itself* [built][0].\r\n\r\nWhat went wrong is that the `_InstallRuntimes` target within\r\n`src/mono-runtimes/mono-runtimes.targets` wouldn't consistently copy\r\nthe unit test satellite assemblies from the mono archive into the\r\nbuild tree, nor -- more importantly! -- include the satellite\r\nassemblies into the mono bundle, because the satellite assemblies\r\nweren't added to `@(_BclTestAssemblyDestination)`/`@(_BclTestOutput)`\r\n/`@(BundleItem).\r\n\r\nWithout being included into the mono bundle, the\r\n`Xamarin.Android.Bcl-Tests.csproj` could not build.\r\n\r\n(Commit 333b98b3 *itself* built because it was responsible for\r\n*creating* the mono bundle, not using it, and as part of the \"prep\r\nwork\" it copied `es-ES/monodroid_corlib_test.resources.dll` into the\r\nexpected directory, but neglected to include it into the bundle.)\r\n\r\nUpdate `src/mono-runtimes/mono-runtimes.targets` so that\r\n`@(MonoTestSatelliteAssembly)` are included into the bundle, and\r\nupdate the `_InstallRuntimes` target so that the test assemblies and\r\nrelated files are considered as Inputs & Outputs.\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/404/"},{"Id":"9327047136","Type":"PullRequestEvent","CreatedAt":"2019-03-27T18:24:14","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2890","RelatedDescription":"Opened pull request \"[tests] Fix a typo which supressed the AOT test runs\" (#2890) at xamarin/xamarin-android","RelatedBody":"The\r\nhttps://github.com/xamarin/xamarin-android/commit/e22345162a25a7aa9d1ca35c590253d5462e9660\r\nmade the AOT tests conditional. Unfortunately it contained a typo in\r\nthe path, which prevented the AOT runs, because the condition was\r\nalways resolved as False."},{"Id":"9326785792","Type":"PullRequestEvent","CreatedAt":"2019-03-27T17:46:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2889","RelatedDescription":"Opened pull request \"[installer] Install `Xamarin.Build.AsyncTask.dll`\" (#2889) at xamarin/xamarin-android","RelatedBody":"Commit f80a641c broke the installers, as it added a dependency on\r\n`Xamarin.Build.AsyncTask.dll` to `Xamarin.Android.Build.Tasks.dll`,\r\nbut forgot to install `Xamarin.Build.AsyncTask.dll` to the installer.\r\n\r\nThe result is that the installation is unusable:\r\n\r\n\terror MSB4062: The \"Xamarin.Android.Tasks.ResolveSdks\" task could not be loaded from the assembly …/Xamarin/Android/Xamarin.Android.Build.Tasks.dll. Exception of type 'System.Reflection.ReflectionTypeLoadException' was thrown.\r\n\terror MSB4062: Could not load file or assembly 'Xamarin.Build.AsyncTask, Version=0.3.4.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.\r\n\r\nAdd `Xamarin.Build.AsyncTask.dll` to the installation."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9328979903","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5470","RelatedDescription":"Closed issue \"ApplinkEntry Thumbnail required after upgrading to 3.5/3.6\" (#5470) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAfter upgrading from Xamarin.Forms 3.4 to Version 3.5 or 3.6 I get the following Exception after trying to Register an AppLinkEntry using `Application.Current.AppLinks.RegisterLink` on iOS.\r\n\r\n`InvalidOperationException: Thumbnail must be set to a valid source`\r\n\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Register AppLinks with a valid AppLinkEntry\r\n2. Start App\r\n3. Exception is thrown saying Thumbnail is required\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\nI see that Code was changed between [Version 3.4](https://github.com/xamarin/Xamarin.Forms/blob/release-3.4.0-sr2/Xamarin.Forms.Platform.iOS/iOSAppLinks.cs) and [3.6](https://github.com/xamarin/Xamarin.Forms/blob/release-3.6.0-rc4/Xamarin.Forms.Platform.iOS/iOSAppLinks.cs)\r\nBefore it was valid to have the `Thumbnail` Property not set, now it's mandatory. While I can certainly provide an ImageSource for example using `ImageSource.FromFile(\"icon_app.png\");` . The requirement is still a change. \r\n \r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0\r\n- Last known good version: 3.4.0 SR2\r\n- IDE: VisualStudio 8.0 Preview\r\n- Platform Target Frameworks: \r\n  - iOS:  12.1\r\n\r\nUpdate:\r\nI missed the fact that I used \"FromResource\" instead of \"FromFile\" to load the ImageSource, I leave this open, because the Title still and description qualifies.\r\n"},{"Id":"9328979892","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1886","RelatedDescription":"Closed issue \"Xamarin.Forms.Pages dependes on modernhttpclient?\" (#1886) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen targeting `netstandard,` I get this build warning:\r\n\r\n> warning NU1701: Package 'modernhttpclient 2.4.2' was restored using '.NETPortable,Version=v0.0,Profile=Profile259, .NETFramework,Version=v4.6.1' instead of the project target framework '.NETStandard,Version=v2.0'. This package may not be fully compatible with your project.\r\n\r\nThis is seemingly because Xamarin.Forms.Pages has this dependency on ModernHttpClient? Why is this dependency needed? Does Xamarin.Forms.Pages make web calls? The nuget package isn't built for netstandard yet.\r\n\r\nHowever this is a fork that is: https://github.com/alexrainman/ModernHttpClient\r\n\r\nCan you consider dropping this dependency, or switching to netstadnard compataible one.\r\n\r\nIn my experience the application should be approvide the HttpClient handler, so it should be an option for the application to configure this, not something that xamarin enforces?"},{"Id":"9328979887","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4826","RelatedDescription":"Closed issue \"[Enhancement] Make CollectionView ItemTemplate work with DataTemplateSelector\" (#4826) at xamarin/Xamarin.Forms","RelatedBody":"Currently, setting the `ItemTemplate` property to a `DataTemplateSelector` throws an exception because `LoadTemplate` in `ElementTemplate` is null. We should be able to provide different data templates based on item state when using `CollectionView`.\r\n"},{"Id":"9328979869","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5219","RelatedDescription":"Closed issue \"[Shell,Android] BackButtonBehavior enables FlyoutBehavior\" (#5219) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen the `FlyoutBehavior=\"Disabled\"` and then I add a `BackButtonBehavior` on a `ContentPage`, the flyout becomes active on Android.\r\n\r\nAndroid: https://www.screencast.com/t/xqjM4PeTrEH\r\n\r\niOS: https://www.screencast.com/t/VpYNt6aRJsj3\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n       xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \r\n       xmlns:local=\"clr-namespace:VisualChallenge\"\r\n       RouteHost=\"companyname.com\"\r\n       RouteScheme=\"app\"\r\n       Route=\"VisualChallenge\"\r\n       FlyoutBehavior=\"Disabled\"\r\n       Title=\"VisualChallenge\"\r\n       x:Class=\"VisualChallenge.AppShell\"\r\n       Visual=\"Material\"\r\n       >\r\n```\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:sys=\"clr-namespace:System;assembly=mscorlib\"\r\n             x:Class=\"VisualChallenge.VisualChallengePage\"\r\n             Shell.NavBarIsVisible=\"true\"\r\n             Title=\"Edit Request\"\r\n             >\r\n    \r\n    <ContentPage.ToolbarItems>\r\n        <ToolbarItem Text=\"Save\"/>\r\n    </ContentPage.ToolbarItems>\r\n    \r\n    <Shell.BackButtonBehavior>\r\n        <BackButtonBehavior TextOverride=\"Undo\" IconOverride=\"{OnPlatform Android=blanky}\"></BackButtonBehavior>\r\n    </Shell.BackButtonBehavior>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nFlyout doesn't become active.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6-pre1\r\n- Android 26\r\nParent: #2415"},{"Id":"9328979859","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4845","RelatedDescription":"Closed issue \"[Shell] Back button behavior failures\" (#4845) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nRelated to #4767 \r\n\r\nMy goal is to simply change the back button text, however it's more involved in Shell than when using NavigationPage where you can simply do this:\r\n\r\n```\r\nXamarin.Forms.NavigationPage.SetBackButtonTitle(this, \"\");\r\n```\r\n\r\n**Problem 1: Cannot get the existing BackButtonBehavior**\r\n\r\nThis is always null:\r\n```\r\nvar btn = Shell.GetBackButtonBehavior(this);\r\n```\r\n\r\n**Problem 2: To set the title and/or icon means all or nothing on the back button.  You have to also  implement the navigation through the command.**\r\n\r\n```\r\nShell.SetBackButtonBehavior(this, new BackButtonBehavior\r\n            {\r\n                TextOverride = string.Empty,\r\n                IconOverride = ImageSource.FromFile(\"icon_back_arrow\"),\r\n                \r\n            });\r\n```\r\n\r\nThe above results in a button visually that I want, but it doesn't do anything because the action is wrapped up in the behavior as well.\r\n\r\n**Problem 3: When also setting the command, Shell crashes.**\r\n\r\n```\r\nShell.SetBackButtonBehavior(this, new BackButtonBehavior\r\n            {\r\n                TextOverride = string.Empty,\r\n                IconOverride = ImageSource.FromFile(\"icon_back_arrow\"),\r\n                Command = new Command(() => { Navigation.PopAsync(true); })\r\n                \r\n            });\r\n```\r\n\r\nThe navigation pop works, but once back on the previous page it crashes.\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.NullReferenceException: Object reference not set to an instance of an object\r\n  at Xamarin.Forms.Platform.iOS.ShellPageRendererTracker+<UpdateToolbarItems>d__35.MoveNext () [0x000a2] in <d746bc31aa28499cbbacaa2963ef26ed>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at Xamarin.Forms.Platform.iOS.ShellPageRendererTracker+<SetBackButtonBehavior>d__38.MoveNext () [0x00116] in <d746bc31aa28499cbbacaa2963ef26ed>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1023 \r\n  at Foundation.NSAsyncSynchronizationContextDispatcher.Apply () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/Foundation/NSAction.cs:178 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at HowYouSay.iOS.Application.Main (System.String[] args) [0x00001] in /work/HowYouSay/iOS/Main.cs:17\r\n2018-12-21 10:03:40.375558-0600 HowYouSay.iOS[24877:940095] Unhandled managed exception:\r\nObject reference not set to an instance of an object (System.NullReferenceException)\r\n  at Xamarin.Forms.Platform.iOS.ShellPageRendererTracker+<UpdateToolbarItems>d__35.MoveNext () [0x000a2] in <d746bc31aa28499cbbacaa2963ef26ed>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at Xamarin.Forms.Platform.iOS.ShellPageRendererTracker+<SetBackButtonBehavior>d__38.MoveNext () [0x00116] in <d746bc31aa28499cbbacaa2963ef26ed>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1023 \r\n  at Foundation.NSAsyncSynchronizationContextDispatcher.Apply () [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/Foundation/NSAction.cs:178 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x0002c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.2.1.12/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at HowYouSay.iOS.Application.Main (System.String[] args) [0x00001] in /work/HowYouSay/iOS/Main.cs:17\r\n```\r\n\r\n### Expected Behavior\r\n\r\nI should be able to amend the title and/or icon without having to reimplement the navigation action itself.\r\n\r\n### Actual Behavior\r\n\r\nI have to do everything.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\nParent: #2415"},{"Id":"9328979847","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4767","RelatedDescription":"Closed issue \"[Shell] BackButtonBehavior is used to override the icon\" (#4767) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThis is done to override the back button.  \r\n\r\n```\r\nvar bbb = new BackButtonBehavior()\r\n            {\r\n                IconOverride = ImageSource.FromFile(\"close\")\r\n            };\r\n\r\n            Shell.SetBackButtonBehavior(this, bbb);\r\n```\r\n\r\n\"Behavior\" here seems odd to me. Doesn't seem like a behavior. \r\n\r\nAlso when I do this, it replaces the hamburger, but also doesn't open the menu.\r\n\r\n### Expected Behavior\r\n\r\nI can set the icon on a property of the Shell, a Style, or on the ContentPage.\r\n\r\n### Actual Behavior\r\n\r\nI can only set in code like above via a behavior.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\n\r\n### Screenshots\r\n\r\nhttps://www.screencast.com/t/TFrhknPNYhz3\r\nParent: #2415"},{"Id":"9328979834","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4766","RelatedDescription":"Closed issue \"[Shell] Cannot set hamburger button asset\" (#4766) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nRelated to #3124 I can set the back button asset, but I cannot specify my own asset. The `3bar.png` is not readily obvious, and it would be much easier to specify my own asset in the `Shell.xaml` than have to figure that out.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0-pre1\r\nParent: #2415"},{"Id":"9328979814","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4684","RelatedDescription":"Closed issue \"Xamarin 4.0.0.8055-pre1 Shell Crashes when navigating too quickly\" (#4684) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create AppShell Application\r\n2.  Create 3 ContentPages\r\n3.  Setup shell like so:\r\n```xml\r\n<Shell xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:Example\"\r\n             RouteScheme=\"app\" \r\n             RouteHost=\"example.com\"\r\n             Route=\"main\"\r\n             x:Class=\"Example.AppShell\">\r\n    <ShellItem Title=\"Home\" Route=\"Home\">\r\n        <ShellSection>\r\n            <ShellContent>\r\n                <local:HomePage />\r\n            </ShellContent>\r\n        </ShellSection>\r\n    </ShellItem>\r\n    <ShellItem Title=\"Connect\" Route=\"connect\">\r\n        <ShellSection>\r\n            <ShellContent Title=\"Connect\">\r\n                <local:ConnectPage />\r\n            </ShellContent>\r\n            <ShellContent Title=\"Control\">\r\n                <local:ControlPage />\r\n            </ShellContent>\r\n        </ShellSection>\r\n    </ShellItem>\r\n</Shell>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nSince all the pages are basically just the defaults, we expect to have all the navigation be quick and simple.\r\n\r\n### Actual Behavior\r\n\r\nIf you navigate back and forth between pages with tabs and the pages without and move back and forth fairly quick the app crashes when you click on the hamburger with a NullReferenceException without much information to help on the first exception.  It may not happen on the first click of the hamburger icon but if you go back and forth and toggle between pages in the tabs it should be reproducable.\r\n\r\n![image](https://user-images.githubusercontent.com/7705397/49683936-674ff100-fa9a-11e8-9c41-f78865f56d7d.png)\r\n\r\nThe second unhandled exception does have a clue:\r\n![image](https://user-images.githubusercontent.com/7705397/49683978-fa892680-fa9a-11e8-81a6-65dc279904ff.png)\r\n\r\nI also verified that it isn't related to the other issue I submitted at https://github.com/xamarin/Xamarin.Forms/issues/4683 by removing the styles and just letting it run by default themes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.8055-pre1\r\n- Last known good version: n/a\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 9.0\r\n- Android Support Library Version: 28.0.0-preview8\r\n- Affected Devices: OnePlus 6, Emulator\r\n\r\n"},{"Id":"9328979792","Type":"IssuesEvent","CreatedAt":"2019-03-28T00:15:34","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5466","RelatedDescription":"Closed issue \"[Shell] Cannot navigate to a route\" (#5466) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nNo matter what I try to navigate to by URI, I get this error:\r\n\r\n```\r\nSystem.NotImplementedException: The method or operation is not implemented.\r\n  at Xamarin.Forms.Shell.GoToAsync (Xamarin.Forms.ShellNavigationState state, System.Boolean animate) [0x000d8] in D:\\a\\1\\s\\Xamarin.Forms.Core\\Shell\\Shell.cs:382 \r\n  at Demos.ViewModels.DemoViewModel.HandleVisualNav (System.String page) [0x00035] in /work/TheLittleThingsPlayground/TheLittleThingsPlayground/ViewModels/DemoViewModel.cs:35 \r\n```\r\n\r\nIn AppShell.xaml.cs I register the route like this:\r\n\r\n```\r\nRouting.RegisterRoute(\"buttons\", typeof(ButtonsPage));\r\n```\r\n\r\nAnd then in the VM call the `GoToAsync` (page is \"buttons\"):\r\n\r\n```\r\nawait Shell.CurrentShell.GoToAsync($\"{page}\", true);\r\n```\r\n\r\nI've also tried:\r\n\r\n```\r\nawait Shell.CurrentShell.GoToAsync($\"app://root/ShellItem14/three_six/{page}\", true);\r\nawait Shell.CurrentShell.GoToAsync($\"app:///ShellItem14/three_six/{page}\", true);\r\nawait Shell.CurrentShell.GoToAsync($\"/{page}\", true);\r\n```\r\n\r\nThinking I could use the relative navigation that @paymicro added in #4977 . \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.6.0.220655\r\n\r\n### Reproduction\r\n\r\nhttps://github.com/davidortinau/TheLittleThingsPlayground/blob/3.6.0/TheLittleThingsPlayground/ViewModels/DemoViewModel.cs#L35"},{"Id":"9328853289","Type":"PullRequestEvent","CreatedAt":"2019-03-27T23:41:39","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5684","RelatedDescription":"Merged pull request \"[iOS] Don't crash if no Thumbnail specified for AppLink\" (#5684) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n#4733 unified the image loading code but failed to preserve the check to see if an AppLink.Thumbnail was actually specified before throwing an exception. This restores that check.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5470 \r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- iOS\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n- Run Issue5470 in Control Gallery. If it doesn't crash, this works!\r\n- Also run AppLinksGallery to make sure that an app link with a thumbnail still works.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9328841969","Type":"PullRequestEvent","CreatedAt":"2019-03-27T23:38:46","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5390","RelatedDescription":"Merged pull request \"Removed dependency on modernhttpclient\" (#5390) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRemoved dependency on modernhttpclient\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #1886 \r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Xamarin.Forms.Pages\r\n- Xamarin.Forms.Pages.Azure\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9328793678","Type":"PullRequestEvent","CreatedAt":"2019-03-27T23:26:07","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5678","RelatedDescription":"Merged pull request \"[UWP] Fixes crash ImageButton with FontImageSource\" (#5678) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImageButton was not designed to work with FontImageSource\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5666\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- UWP\r\n\r\n### Testing Procedure ###\r\n\r\n- run Font ImageSorce Gallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9328730842","Type":"PullRequestEvent","CreatedAt":"2019-03-27T23:10:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5289","RelatedDescription":"Merged pull request \"[visual] Add extra parameter to android visual constructors\" (#5289) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nMaterial Android renderers need to know the style they are being set to on creation so they can be set to the correct style id.  The style on an android element isn't settable at runtime post inception.\r\n\r\nThe idea is being able to do this via the constructor\r\n```C#\r\nstatic int getThemeId(BindableObject element)\r\n\t\t{\r\n\t\t\tvar style = Xamarin.Forms.Material.Button.GetStyle(element);\r\n\t\t\tint themeId = Resource.Style.XamarinFormsMaterialTheme;\r\n\t\t\tswitch (style)\r\n\t\t\t{\r\n\t\t\t\tcase Xamarin.Forms.Material.Style.Outline:\r\n\t\t\t\t\tthemeId = Resource.Style.XamarinFormsMaterialOutlinedButtonTheme;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Xamarin.Forms.Material.Style.Text:\r\n\t\t\t\t\tthemeId = Resource.Style.XamarinFormsMaterialTextButtonTheme;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn themeId;\r\n\t\t}\r\n\r\n\t\tpublic MaterialButtonRenderer(Context context, BindableObject element)\r\n\t\t\t: base(new ContextThemeWrapper(context, getThemeId(element)))\r\n\t\t{\r\n\t\t\tVisualElement.VerifyVisualFlagEnabled();\r\n```\r\n \r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nIf a constructor isn't found with two arguments it will just default back to the previous behavior which just uses the constructor that takes a context\r\n\r\n### Testing Procedure ###\r\nUnit Test Added\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9329429679","Type":"IssuesEvent","CreatedAt":"2019-03-28T02:20:57","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5795","RelatedDescription":"Reopened issue \"No UI to enable Push Notifications for Xamarin.Mac projects\" (#5795) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open VS4M\r\n2. Create a new Xamarin.Mac application\r\n3. Open entitlement and try to enable **Push Notifications**\r\n\r\n### Expected Behavior\r\n\r\n<img width=\"850\" alt=\"Screen Shot 2019-03-20 at 12 40 14 PM\" src=\"https://user-images.githubusercontent.com/260465/54707864-17101280-4b10-11e9-8d17-92c63c8eb3c3.png\">\r\n\r\n^ UI from Xcode\r\n\r\nnote: This UI exists for Xamarin.iOS applications.\r\n\r\n### Actual Behavior\r\n\r\nThere's non UI to enable **Push Notifications**\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2019 Preview for Mac ===\r\n\r\nVersion 8.0 Preview (8.0 build 2771)\r\nInstallation UUID: f3e082fd-6d82-4b83-8c52-de2e679a624a\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 520000220\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.20.0.220 (2018-10/d390bb6901f) (64-bit)\r\n\tPackage version: 520000220\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.394\r\nHash: 12c2f4343\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-03-08 17:47:48 UTC\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview-27324-5\r\n\t2.1.8\r\n\t2.1.2\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/3.0.100-preview-010184/Sdks\r\nSDK Versions:\r\n\t3.0.100-preview-010184\r\n\t2.1.504\r\n\t2.1.302\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.20.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2 (14490.114.1)\r\nBuild 10P107d\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.7.1.136 (Visual Studio Enterprise)\r\nHash: 0dbc58497\r\nBranch: master\r\nBuild date: 2019-03-19 09:41:31-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.8.0 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/poupou/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/poupou/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.13\r\nHash: ec487ee\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-03-08 17:08:38 UTC\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.7.1.136 (Visual Studio Enterprise)\r\nHash: 0dbc58497\r\nBranch: master\r\nBuild date: 2019-03-19 09:41:31-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800002771\r\nGit revision: 309a16390ccfe7d1fcd536b513e2fe208a2ede92\r\nBuild date: 2019-03-09 08:34:02+00\r\nBuild branch: master\r\nXamarin extensions: a67bfd6a6dbd41242ad47f85baba8add1a5b3ced\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.3\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Thu Dec 20 20:46:53 PST 2018\r\n    root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\nSee https://github.com/xamarin/xamarin-macios/issues/5778\r\n\r\n> VS bug [#824247](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/824247), VS bug [#830422](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/830422)"},{"Id":"9328685812","Type":"PullRequestEvent","CreatedAt":"2019-03-27T22:59:53","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5813","RelatedDescription":"Opened pull request \"[xharness] Fix BuildOnly logic\" (#5813) at xamarin/xamarin-macios","RelatedBody":"https://github.com/xamarin/xamarin-macios/pull/4884 introduced the logic of only building certain `RunTestTask`.\nThis was meant to disable iOS Extensions as part of a fix to https://github.com/xamarin/maccore/issues/1008.\nHowever this didn't quite work and iOS extensions were still running (and failing).\nThe reason being that `BuildOnly` was set to a `RunDeviceTask` that's added to a list which is then given to `CreateTestVariations` which creates new instances of `RunDeviceTask`.\nWe now propagate `BuildOnly` to the new variation instance."},{"Id":"9327496747","Type":"IssuesEvent","CreatedAt":"2019-03-27T19:32:13","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5812","RelatedDescription":"Opened issue \"Device tests are painful to run without wildcards, can we detect and warn?\" (#5812) at xamarin/xamarin-macios","RelatedBody":"In monitoring and branch integration it can be painful to get device tests working the first time.\r\n\r\nIt can be challenging getting the right account (free vs paid vs enterprise), the right profiles, etc.\r\n\r\nFor those of us who do it ever day we can forget how painful this is.\r\n\r\nCould we augment our Makefile (or something) to detect that you are trying to run device tests and don't have the correct wildcard profiles and warn.\r\n\r\nSomething like:\r\n\r\n`make run-my-device-tests`\r\n`Warning: No wildcard provisioning profile found. You are in for a world of pain`"},{"Id":"9327059898","Type":"IssuesEvent","CreatedAt":"2019-03-27T18:26:05","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5811","RelatedDescription":"Opened issue \"[CFNetwork] Add missing bindings for the constants required to set a local proxy\" (#5811) at xamarin/xamarin-macios","RelatedBody":"The only way to set a proxy is with a NSDictionary with the following constants: \r\n\r\n* kCFStreamPropertyHTTPProxyHost \r\n* kCFStreamPropertyHTTPProxyPort\r\n* kCFStreamPropertyHTTPSProxyHost\r\n* kCFStreamPropertyHTTPSProxyPort\r\n\r\nAnd would be nice to have HTTPEnable and HTTPSEnabled too. The best way to do so would be to expose a smart dict on NSURlSessionConfiguration. \r\n\r\nRight now we have to do something like:\r\n\r\n```CSharp\r\nvar lib = Dlfcn.dlopen (Constants.CFNetworkLibrary, 0);\r\nvar kCFStreamPropertyHTTPProxyHost = Dlfcn.GetStringConstant (lib, \"kCFStreamPropertyHTTPProxyHost\");\r\nvar kCFStreamPropertyHTTPProxyPort = Dlfcn.GetStringConstant (lib, \"kCFStreamPropertyHTTPProxyPort\");\r\nvar kCFStreamPropertyHTTPSProxyHost = Dlfcn.GetStringConstant (lib, \"kCFStreamPropertyHTTPSProxyHost\");\r\nvar kCFStreamPropertyHTTPSProxyPort = Dlfcn.GetStringConstant (lib, \"kCFStreamPropertyHTTPSProxyPort\");\r\nvar httpEnable = new NSString (\"HTTPEnable\");\r\nvar httpsEnable = new NSString (\"HTTPSEnable\");\r\nvar proxyConfig = new NSDictionary (\r\n\t\t\thttpEnable, new NSNumber (true),\r\n\t\t\tkCFStreamPropertyHTTPProxyHost, new NSString (\"myhost\"),\r\n\t\t\tkCFStreamPropertyHTTPProxyPort, new NSNumber (8888),\r\n\t\t\thttpsEnable, new NSNumber (true),\r\n\t\t\tkCFStreamPropertyHTTPSProxyHost, new NSString (\"myhttpsHost\"),\r\n\t\t\tkCFStreamPropertyHTTPSProxyPort, new NSNumber (8888));\r\nvar config = NSUrlSessionConfiguration.DefaultSessionConfiguration; // gets a copy, not the same instance!!!!!!\r\nconfig.ConnectionProxyDictionary = proxyConfig;\r\nvar handler = new NSUrlSessionHandler (config);\r\nvar client = new HttpClient (handler);\r\n```"},{"Id":"9326575423","Type":"IssuesEvent","CreatedAt":"2019-03-27T17:18:36","Actor":"jwholme2","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5810","RelatedDescription":"Opened issue \"Build fails with latest mtouch\" (#5810) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\nMy iOS builds in AppCenter fail if\r\n1. Linker is turned to SDK only\r\n2. Xamarin iOS 12.2 and Mtouch 5.16 is selected\r\n\r\nThe builds work if I select Mtouch 5.12 and turn linking off. \r\n\r\n### Expected Behavior\r\niOS builds work.\r\n### Actual Behavior\r\niOS builds fail.\r\n### Environment\r\nAppCenter builds.\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/jwholme2/af89f2979e45289f2d0fa7b034e68050\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9323096636","Type":"PullRequestEvent","CreatedAt":"2019-03-27T09:51:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5808","RelatedDescription":"Merged pull request \"Bump for Xcode 10.2 final\" (#5808) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9322300618","Type":"IssuesEvent","CreatedAt":"2019-03-27T07:44:37","Actor":"rdavisau","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5809","RelatedDescription":"Opened issue \"Casting `nfloat` to `nint` crashes when running under `--interpreter`\" (#5809) at xamarin/xamarin-macios","RelatedBody":"I reproduced this on two builds of Xamarin.iOS - the current preview from the recent interpreter announcement, and an earlier build from a few months back that I built from source. My original usage was not this simple, but I was able to isolate the crash to a cast of an `nfloat` to `nint`, which is (happily) easy to work around.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create new iOS single view app\r\n2.  Add `--interpreter` to `mtouch` arguments\r\n3.  Add below code to `FinishedLaunching` before the `return` statement\r\n\r\n            var notOof = (int)(float)1;\r\n            var notOof2 = (nint)(float)(nfloat)1;\r\n            var notOof3 = (nint)(int)(nfloat)1;\r\n\r\n            var oof = (nint)(nfloat)1;\r\n\r\n4. Add breakpoint on first line, begin debugging and step each statement.\r\n\r\n### Expected Behavior\r\n\r\nAll statements execute without issue, as occurs when running without the `--interpreter` flag.\r\n\r\n### Actual Behavior\r\n\r\nFirst three statements execute without issue. Final statement causes crash:\r\n\r\n```\r\n=================================================================\r\n\tNative Crash Reporting\r\n=================================================================\r\nGot a SIGSEGV while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries \r\nused by your application.\r\n=================================================================\r\n\r\n=================================================================\r\n\tBasic Fault Adddress Reporting\r\n=================================================================\r\nMemory around native instruction pointer (0x100b5a274):0x100b5a264  00 01 1f d6 db 82 5f f8 1b 01 00 b4 28 07 40 79  ......_.....(.@y\r\n0x100b5a274  68 6b 68 f8 c8 82 1f f8 39 13 00 91 28 03 40 79  hkh.....9...(.@y\r\n0x100b5a284  88 7a 68 f8 00 01 1f d6 fa 03 14 aa 60 d6 00 94  .zh.........`...\r\n0x100b5a294  e1 03 00 aa 04 00 80 52 76 4e 40 f9 e0 03 16 aa  .......RvN@.....\r\n\r\n=================================================================\r\n\tNative stacktrace:\r\n=================================================================\r\n\t0x100e482bc - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_dump_native_crash_info\r\n\t0x100e3e2c8 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_handle_native_crash\r\n\t0x100e4cd04 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_sigsegv_signal_handler\r\n\t0x1f5a299ec - /usr/lib/system/libsystem_platform.dylib : <redacted>\r\n\t0x100b54a00 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b53c6c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_runtime_invoke\r\n\t0x100e50150 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_jit_runtime_invoke\r\n\t0x100ef6a08 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_runtime_invoke_checked\r\n\t0x100efa378 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_runtime_invoke\r\n\t0x100b51b64 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : _ZL30native_to_managed_trampoline_4P11objc_objectP13objc_selectorPP11_MonoMethodP13UIApplicationP12NSDictionaryj\r\n\t0x100b518a4 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : -[AppDelegate application:didFinishLaunchingWithOptions:]\r\n\t0x2229088e4 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x22290a048 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x22290f7d4 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d3e34 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221dc3dc - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d3ab8 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d43a8 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d26f4 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d23bc - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d6efc - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221d7ce0 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : _performActionsWithDelayForTransitionContext\r\n\t0x2221d6db4 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x2221dbac4 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x22290dddc - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x22250ab68 - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : <redacted>\r\n\t0x1f8795d94 - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f879f7a4 - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f879efac - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f585d7d4 - /usr/lib/system/libdispatch.dylib : <redacted>\r\n\t0x1f58351ec - /usr/lib/system/libdispatch.dylib : <redacted>\r\n\t0x1f87d010c - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f87cfda8 - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f87d0360 - /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices : <redacted>\r\n\t0x1f5daa258 - /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation : <redacted>\r\n\t0x1f5daa1d8 - /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation : <redacted>\r\n\t0x1f5da9ac0 - /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation : <redacted>\r\n\t0x1f5da49f8 - /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation : <redacted>\r\n\t0x1f5da42dc - /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation : CFRunLoopRunSpecific\r\n\t0x1f7fa679c - /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices : GSEventRunModal\r\n\t0x22291142c - /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore : UIApplicationMain\r\n\t0x100b630a8 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : do_icall\r\n\t0x100b55258 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b5589c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_exec_method_full\r\n\t0x100b53c6c - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : interp_runtime_invoke\r\n\t0x100e50150 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_jit_runtime_invoke\r\n\t0x100ef6a08 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_runtime_invoke_checked\r\n\t0x100efccb8 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_runtime_exec_main_checked\r\n\t0x100e2dd9c - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libmonosgen-2.0.dylib : mono_jit_exec\r\n\t0x100cf1168 - /private/var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/libxamarin-debug.dylib : xamarin_main\r\n\t0x100b52ff4 - /var/containers/Bundle/Application/F4FDAC70-BED4-4632-972D-55DED365F59F/interp.app/interp : main\r\n\t0x1f586db80 - /usr/lib/system/libdyld.dylib : <redacted>\r\n\r\n=================================================================\r\n\tManaged Stacktrace:\r\n=================================================================\r\n\t  at <unknown> <0xffffffff>\r\n\t  at UIKit.UIApplication:UIApplicationMain <0x000bc>\r\n\t  at UIKit.UIApplication:Main <0x0002a>\r\n\t  at UIKit.UIApplication:Main <0x0006a>\r\n\t  at interp.Application:Main <0x00016>\r\n\t  at <Module>:runtime_invoke_direct_void_string[] <0x00088>\r\n=================================================================\r\n```\r\n\r\n### Environment\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.8.3 (build 2)\r\nInstallation UUID: 878dd934-e422-4da6-a7ed-281dfe787f4a\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516010000\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.1.0 (2018-06/a76b50e5faa) (64-bit)\r\n\tPackage version: 516010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.9\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.1.0-preview1-26216-03\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.505/Sdks\r\nSDK Versions:\r\n\t2.1.505\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.300-preview1-008174\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.16 (Visual Studio Community)\r\nHash: 2dc06c71\r\nBranch: \r\nBuild date: 2019-02-12 23:09:50-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.7.1.74 (Visual Studio Community)\r\nHash: b80d20ac\r\nBranch: xi-interpreter\r\nBuild date: 2019-03-03 13:35:21-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.8.0 (Visual Studio Community)\r\nAndroid SDK: /Users/rdavis/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.1 (API level 22)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/rdavis/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 8924ea4a\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708030002\r\nGit revision: fd02e670fdd6b101bc9c08b1cc5b7710d9f58cd8\r\nBuild date: 2019-03-08 10:30:21+00\r\nBuild branch: release-7.8\r\nXamarin extensions: 1f72f0a3737128552336f27e189d3c4f0cdebd00\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nContinuous Coding 2.0.6\r\nRedth's Addins 1.0.9\r\n```\r\n\r\n### Build Logs\r\nhttps://gist.github.com/rdavisau/e1dd04dd9df40a416b4b277767cdbaf4\r\n\r\n### Example Project (If Possible)\r\n[interp-nfloat_nint.zip](https://github.com/xamarin/xamarin-macios/files/3012045/interp-nfloat_nint.zip)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":91,"FavoriteCount":42,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":25,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":25,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":116,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":148,"FavoriteCount":69,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":23,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":15,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":31,"RawContent":null}]}},"RunOn":"2019-03-28T05:30:51.8614043Z","RunDurationInMilliseconds":2996}