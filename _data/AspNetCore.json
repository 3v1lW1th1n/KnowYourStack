{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-02-12T17:36:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released stable packages for ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/12/announcing-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Two Lesser Known Tools for Local Azure Development","PublishedOn":"2018-02-09T00:01:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you’re developing applications that target Azure services (e.g. Web Apps, Functions, Storage), you’ll want to know about two powerful tools that come with Visual Studio 2017 and the Azure...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/08/two-lesser-known-tools-for-local-azure-development/","RawContent":null},{"Title":"File nesting in Solution Explorer","PublishedOn":"2018-02-08T06:09:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to share with you a new capability in Visual Studio that was a clear ask from you, the community. Visual Studio has been nesting related files in Solution Explorer for a long time now,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/file-nesting-in-solution-explorer/","RawContent":null},{"Title":"Diagnosing Errors on your Cloud Apps","PublishedOn":"2018-02-07T16:00:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most frustrating experiences is when you have your app working on your local machine, but when you publish it it’s inexplicably failing. Fortunately, Visual Studio provides handy features...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/07/diagnosing-errors-on-your-cloud-apps/","RawContent":null},{"Title":"A new experiment: Browser-based web apps with .NET and Blazor","PublishedOn":"2018-02-06T18:00:53+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today I’m excited to announce a new experimental project from the ASP.NET team called Blazor. Blazor is an experimental web UI framework based on C#, Razor, and HTML that runs in the browser via...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/06/blazor-experimental-project/","RawContent":null},{"Title":"Learn how to do Image Recognition with Cognitive Services and ASP.NET","PublishedOn":"2018-02-05T21:27:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With all the talk about artificial intelligence (AI) and machine learning (ML) doing crazy things, it’s easy to be left wondering, “what are practical ways I can use this today?&#8221; It turns out...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/05/learn-how-to-do-image-recognition-with-cognitive-services-and-asp-net/","RawContent":null},{"Title":"ASP.NET Core 2.1 roadmap","PublishedOn":"2018-02-02T18:00:52+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Five months ago, we shipped ASP.NET Core 2.0 as a foundational release for our high performance, cross-platform web framework for .NET and .NET Core. Since then we have been hard at work to deliver...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/","RawContent":null},{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7252306843","Type":"IssuesEvent","CreatedAt":"2018-02-15T22:28:30","Actor":"dgweldon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2880","RelatedDescription":"Opened issue \"AspNetCore.OpenIdConnect Cookies Not Handled by Full .Net HttpClient\" (#2880) at aspnet/Home","RelatedBody":"I have an interesting problem related to OpenID Connect Authentication in ASP .NET Core.  We have an Identity Server 3 OIDC implementation that uses a client certificate authentication provider.  When migrating to ASP .NET Core, we had no problem integrating with our existing OIDC server.  At least when launched from a browser (Edge, Chrome).\r\n\r\nHowever, we have a small ClickOnce application (using the full .NET framework) that also authenticates and makes calls through the ASP.  It does this by using a HttpClient with a certificate selected by the user.  This ClickOnce application fails during authentication.  The code is pretty simple.\r\n\r\n```\r\nusing (WebRequestHandler certHandler = new WebRequestHandler\r\n{\r\n   CookieContainer = new CookieContainer(),\r\n   ClientCertificateOptions = ClientCertificateOption.Manual,\r\n   UseDefaultCredentials = true,\r\n   AllowAutoRedirect = true\r\n})\r\n{\r\n   // Init\r\n   certHandler.ClientCertificates.Add(certificate);\r\n\r\n   using (HttpClient client = new HttpClient(certHandler) { BaseAddress = baseUri })\r\n   {\r\n      HttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\n      response.EnsureSuccessStatusCode();\r\n\r\n      // Process self submitting form responses as long as needed\r\n      do\r\n      {\r\n         response = ProcessFormAutoSubmit(a_client, response);\r\n      }\r\n      while (response != null);\r\n   }\r\n}\r\n```\r\n\r\nAfter moving to ASP .NET Core, this code no longer works.  The issue is that when MVC redirects to Identity Server, it includes 2 cookies (.ASPNetCore.Correlation.OpenIdConnect and .AspNetCore.OpenIdConnect.Nonce).  Those cookies never make it into my CookieContainer (other cookies from Identity Server are handled fine).  When the signin-oidc callback is made, MVC fails with the error: \"Correlation failed: .AspNetCore.Correlation.OpenIdConnect.9N18bzJ1hcpG5YjRMw_QgUJ_PnapfVx2lBmdvb8Q_zA' cookie not found.\".  Makes sense.  But why is the cookie not added?\r\n\r\nAfter playing around, I was able to get around this by handling each redirect and manually adding any cookies that had a path (both of which the 2 missing cookies had).  The code now looks like this:\r\n\r\n```\r\n...\r\nHttpResponseMessage response = a_client.GetAsync(ssoLoginUri).GetAwaiter().GetResult();\r\nRegex cookiePathRegex = new Regex(@\"path=([^;]*);?\");\r\n\r\ndo\r\n{\r\n   // Ideally we would just use automatic redirects in the HttpClient, but we need to intercept cookies for special processing\r\n   if (response.StatusCode == HttpStatusCode.Redirect)\r\n   {\r\n      Uri requestUri = response.Headers.Location;\r\n      if (!requestUri.IsAbsoluteUri)\r\n      {\r\n         requestUri = UriUtil.Combine(response.RequestMessage.RequestUri.GetLeftPart(UriPartial.Authority), response.Headers.Location.OriginalString);\r\n      }\r\n\r\n      response = a_client.GetAsync(requestUri).GetAwaiter().GetResult();\r\n\r\n      IEnumerable<string> responseCookies = null;\r\n      if (response.Headers.TryGetValues(\"set-cookie\", out responseCookies))\r\n      {\r\n         // Cookies that have a path aren't currently supported with HttpClient\r\n         // Such cookies are used with the new ASP .NET Core OpenId Connect implementation\r\n         // Just manually add these cookies\r\n         foreach (string sCookie in responseCookies)\r\n         {\r\n            Match pathMatch = cookiePathRegex.Match(sCookie);\r\n            if (pathMatch.Success)\r\n            {\r\n               a_webRequestHandler.CookieContainer.SetCookies(\r\n                  UriUtil.Combine(requestUri.GetLeftPart(UriPartial.Authority), pathMatch.Groups[1].Value),\r\n                  cookiePathRegex.Replace(sCookie, String.Empty));\r\n            }\r\n         }\r\n      }\r\n   }\r\n   else\r\n   {\r\n      response.EnsureSuccessStatusCode();\r\n      response = ProcessFormAutoSubmit(a_client, response);\r\n   }\r\n}\r\nwhile (response != null);\r\n```\r\n\r\n\r\nThis works, but seems like a hack.  Any idea why these cookies aren't handled by HttpClient?\r\n\r\nI realize this may not be directly be an ASP .NET Core issue, but wanted to start here since it seems to be related to cookies from ASP .NET Core.\r\n\r\nThanks,\r\n\r\n--David"},{"Id":"7251006158","Type":"IssuesEvent","CreatedAt":"2018-02-15T17:54:16","Actor":"javiercn","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2879","RelatedDescription":"Opened issue \"Provide an AddStaticFiles extension method on IServiceCollection\" (#2879) at aspnet/Home","RelatedBody":"This method will configure the default configuration options for static files and allow libraries avoid having to replicate the logic to set the default options. See https://github.com/aspnet/Identity/blob/dev/src/UI/IdentityDefaultUIConfigureOptions.cs#L52-L62\r\n\r\nTo be very clear, this is not about requiring a method call to services.AddStaticFiles() to use StaticFiles but to allow other libraries to call it in order to ensure that the options were initialized correctly."},{"Id":"7247987013","Type":"IssuesEvent","CreatedAt":"2018-02-15T07:08:07","Actor":"omerlh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2878","RelatedDescription":"Opened issue \"Slow response time (~6s) for post requests with empty body\" (#2878) at aspnet/Home","RelatedBody":"While working on .NET Core ASP.Net web API project, I've noticed that sending a specific request will always result in 418 timeout response after ~6s. This is the request:\r\n```\r\nPOST /api/values HTTP/1.1\r\nAccept: */*\r\nProxy-Connection: Keep-Alive\r\nContent-Type: application/json; charset=utf-8\r\nTransfer-Encoding: chunked\r\nHost: localhost:5000\r\n```\r\nAnd this is the response:\r\n```\r\nHTTP/1.1 408 Request Timeout\r\nConnection: close\r\nDate: Tue, 13 Feb 2018 18:46:59 GMT\r\nServer: Kestrel\r\nContent-Length: 0\r\n```\r\nI was able to reproduce it on empty web API generated with the CLI using:\r\n```\r\ndotnet new webapi\r\n```\r\nI've also created [sample repo](https://github.com/omerlh/dotnet-webapi-demo) using this CLI command with docker image to make it easy to reproduce the issue. Just clone the repo, and run:\r\n```\r\ndocker build -t demo .\r\ndocker run -it -p 5000:80 demo\r\n```\r\nAnd than use curl to send this request to `http://localhost:5000`."},{"Id":"7247110864","Type":"IssuesEvent","CreatedAt":"2018-02-15T00:41:22","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2511","RelatedDescription":"Closed issue \"Address build warnings\" (#2511) at aspnet/Home","RelatedBody":"_From @mikeharder on Monday, May 8, 2017 12:34:14 PM_\r\n\r\nRunning `build.cmd` in Preview1 generates 9 build warnings:\r\n\r\n```\r\nProgram.cs(25,13): warning CS0618: 'ConsoleLoggerExtensions.AddConsole(ILoggerFactory)' is obsolete: 'This method is obsolete and will be removed in a future version. The recommended alternative is to call the Microsoft.Extensions.Logging.AddConsole() extension method on the Microsoft.Extensions.Logging.LoggerFactory instance.' [D:\\Git\\DataProtection\\samples\\CustomEncryptorSample\\CustomEncryptorSample.csproj]\r\nProgram.cs(27,13): warning CS0618: 'ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel)' is obsolete: 'This method is obsolete and will be removed in a future version. The recommended alternative is to call the Microsoft.Extensions.Logging.AddConsole() extension method on the Microsoft.Extensions.Logging.LoggerFactory instance.' [D:\\Git\\DataProtection\\samples\\Redis\\Redis.csproj]\r\nProgram.cs(27,13): warning CS0618: 'ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel)' is obsolete: 'This method is obsolete and will be removed in a future version. The recommended alternative is to call the Microsoft.Extensions.Logging.AddConsole() extension method on the Microsoft.Extensions.Logging.LoggerFactory instance.' [D:\\Git\\DataProtection\\samples\\Redis\\Redis.csproj]\r\nProgram.cs(25,13): warning CS0618: 'ConsoleLoggerExtensions.AddConsole(ILoggerFactory)' is obsolete: 'This method is obsolete and will be removed in a future version. The recommended alternative is to call the Microsoft.Extensions.Logging.AddConsole() extension method on the Microsoft.Extensions.Logging.LoggerFactory instance.' [D:\\Git\\DataProtection\\samples\\CustomEncryptorSample\\CustomEncryptorSample.csproj]\r\nProgram.cs(35,13): warning CS0618: 'ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel)' is obsolete: 'This method is obsolete and will be removed in a future version. The recommended alternative is to call the Microsoft.Extensions.Logging.AddConsole() extension method on the Microsoft.Extensions.Logging.LoggerFactory instance.' [D:\\Git\\DataProtection\\samples\\AzureBlob\\AzureBlob.csproj]\r\nC:\\Users\\mharder\\.nuget\\packages\\internal.aspnetcore.sdk\\2.1.0-rc2-15256\\build\\ApiCheck.targets(27,5): warning : No baseline file for net46 found in Microsoft.AspNetCore.DataProtection.Redis. [D:\\Git\\DataProtection\\src\\Microsoft.AspNetCore.DataProtection.Redis\\Microsoft.AspNetCore.DataProtection.Redis.csproj]\r\nC:\\Users\\mharder\\.nuget\\packages\\internal.aspnetcore.sdk\\2.1.0-rc2-15256\\build\\ApiCheck.targets(27,5): warning : No baseline file for net46 found in Microsoft.AspNetCore.DataProtection.AzureStorage. [D:\\Git\\DataProtection\\src\\Microsoft.AspNetCore.DataProtection.AzureStorage\\Microsoft.AspNetCore.DataProtection.AzureStorage.csproj]\r\nC:\\Users\\mharder\\.nuget\\packages\\internal.aspnetcore.sdk\\2.1.0-rc2-15256\\build\\ApiCheck.targets(27,5): warning : No baseline file for netstandard1.5 found in Microsoft.AspNetCore.DataProtection.AzureStorage. [D:\\Git\\DataProtection\\src\\Microsoft.AspNetCore.DataProtection.AzureStorage\\Microsoft.AspNetCore.DataProtection.AzureStorage.csproj]\r\nC:\\Users\\mharder\\.nuget\\packages\\internal.aspnetcore.sdk\\2.1.0-rc2-15256\\build\\ApiCheck.targets(27,5): warning : No baseline file for netstandard1.5 found in Microsoft.AspNetCore.DataProtection.Redis. [D:\\Git\\DataProtection\\src\\Microsoft.AspNetCore.DataProtection.Redis\\Microsoft.AspNetCore.DataProtection.Redis.csproj]\r\n```\r\n\r\n_Copied from original issue: aspnet/DataProtection#232_"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7253251820","Type":"PullRequestEvent","CreatedAt":"2018-02-16T03:59:27","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1460","RelatedDescription":"Opened pull request \"Remove the Channel<HubMessage> from the HubConnectionContext\" (#1460) at aspnet/SignalR","RelatedBody":"- Replace the channel with a single lock around the pipewriter. Since writes are always synchronous, the lock is held for a very short time.\r\n- We were only using them in this scenario for handling multiple producers (the hub output, the keep alive ping and the broadcast).\r\n- Handle the scenario where there's back pressure (when we use pipes that are bounded) and give callers a single task representing when back pressure is released."},{"Id":"7253228043","Type":"IssuesEvent","CreatedAt":"2018-02-16T03:47:27","Actor":"LilanMadusankaSilva","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1459","RelatedDescription":"Opened issue \"@aspnet/signalr npm package not work with asp.net core 2 \" (#1459) at aspnet/SignalR","RelatedBody":"@aspnet/signalr npm package not work with asp.net core 2 but @aspnet/signalr-client work with asp.net core 2 (But it has UglifyJs issue in production mode)\r\n\r\nAnyone have any idea why this @aspnet/signalr npm package fails with asp.net core 2. Given samples use asp.net core 2.1 but 2.1 still it not to download "},{"Id":"7252412982","Type":"IssuesEvent","CreatedAt":"2018-02-15T22:53:58","Actor":"bparkerhsd","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1458","RelatedDescription":"Opened issue \"Cannot deploy ASP.NET Core 2 Angular 4 app to Azure App Services\" (#1458) at aspnet/SignalR","RelatedBody":"I create a base ASP.NET Core 2 Angular 4 app in Visual Studio 2017. I can deploy successfully to Azure App Services. \r\n\r\nI add \"@aspnet/signalr-client\": \"1.0.0-alpha2-final\" to package.json. I can run this in debug mode in Visual Studio 2017.\r\n\r\nWhen I deploy to Azure App Services it fails:\r\n\r\n1166 error path C:\\Test Projects\\DMTSignalRAngular\\node_modules\\fsevents\\node_modules\r\n1167 error code EPERM\r\n1168 error errno -4048\r\n1169 error syscall scandir\r\n1170 error Error: EPERM: operation not permitted, scandir 'C:\\Test Projects\\DMTSignalRAngular\\node_modules\\fsevents\\node_modules'\r\n1170 error  { Error: EPERM: operation not permitted, scandir 'C:\\Test Projects\\DMTSignalRAngular\\node_modules\\fsevents\\node_modules'\r\n1170 error   stack: 'Error: EPERM: operation not permitted, scandir \\'C:\\\\Test Projects\\\\DMTSignalRAngular\\\\node_modules\\\\fsevents\\\\node_modules\\'',\r\n1170 error   errno: -4048,\r\n1170 error   code: 'EPERM',\r\n1170 error   syscall: 'scandir',\r\n1170 error   path: 'C:\\\\Test Projects\\\\DMTSignalRAngular\\\\node_modules\\\\fsevents\\\\node_modules' }\r\n1171 error Please try running this command again as root/Administrator.\r\n1172 verbose exit [ -4048, true ]\r\n\r\nTrying to add \"fsevents\": \"1.1.3\" to package.json fails to install the package:\r\nnpm ERR! Windows_NT 10.0.14393\r\nnpm ERR! argv \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Web\\\\External\\\\Node.exe\" \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Web\\\\External\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\r\nnpm ERR! node v5.4.1\r\nnpm ERR! npm  v3.3.4\r\nnpm ERR! code EBADPLATFORM\r\nnpm ERR! notsup Unsupported\r\nnpm ERR! notsup Not compatible with your operating system or architecture: fsevents@1.1.3\r\nnpm ERR! notsup Valid OS:    darwin\r\nnpm ERR! notsup Valid Arch:  any\r\nnpm ERR! notsup Actual OS:   win32\r\nnpm ERR! notsup Actual Arch: x64\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     C:\\Test Projects\\DMTSignalRAngular\\npm-debug.log\r\n"},{"Id":"7252351769","Type":"IssuesEvent","CreatedAt":"2018-02-15T22:39:00","Actor":"jceddy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1457","RelatedDescription":"Opened issue \"Websocket response code: 204 (IIS8)\" (#1457) at aspnet/SignalR","RelatedBody":"I have a .NET Core 2.0 application running with the preview SignalR. I'm running on Windows Server 2012 R2 behind IIS 8.5.\r\n\r\nWebsockets are enabled in the server roles, and are also configured in IIS.\r\n\r\nWhen I attempt to initiate a SignalR connection over Websocket, I get this response:\r\n\r\n> Error during WebSocket handshake: Unexpected response code: 204\r\n\r\nEverything I've read says that this should work, and as far as I can tell I have all of the configurations set up correctly. Can anyone guide me on debugging this issue?\r\n"},{"Id":"7251917426","Type":"IssuesEvent","CreatedAt":"2018-02-15T21:03:58","Actor":"adamdriscoll","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1456","RelatedDescription":"Closed issue \"404 Error During OPTIONS request\" (#1456) at aspnet/SignalR","RelatedBody":"I know I am missing something very basic. I'm running ASP.NET Core 2.0.1 with SignalR 1.0.0-alpha2-final. I have configured my services in Startup.cs as follows: \r\n\r\n```\r\n\t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddResponseCompression();\r\n\t\t\tservices.AddSignalR();\r\n\t\t\tservices.AddCors();\r\n\t\t\tservices.AddDirectoryBrowser();\r\n\t\t\tservices.AddMemoryCache();\r\n\t\t\tservices.AddMvc();\r\n                }\r\n  \t\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IApplicationLifetime lifetime)\r\n\t\t{\r\n\t\t\tapp.UseResponseCompression();\r\n\t\t\tapp.UseStatusCodePagesWithReExecute(\"/redirect/{0}\");\r\n\t\t\tapp.UseFileServer(new FileServerOptions()\r\n\t\t\t{\r\n\t\t\t\tFileProvider = new PhysicalFileProvider(env.ContentRootPath),\r\n\t\t\t\tRequestPath = new PathString(\"\"),\r\n\t\t\t\tEnableDirectoryBrowsing = true\r\n\t\t\t});\r\n\r\n\t\t\tapp.UseCors(builder => builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials());\r\n\r\n\t\t\tapp.UseSignalR(routes =>\r\n            {\r\n                routes.MapHub<DashboardHub>(\"dashboardhub\");\r\n            });\r\n\t\t\tapp.UseWebSockets();\r\n\r\n\t\t\tapp.UseMvc();\r\n\t\t}\r\n```\r\n\r\nThe goal is to serve a React SPA from the ASP.NET Core app and use SignalR for some stuff. I receive a 404 on the `/dashboardhub` endpoint when doing the OPTIONS request. This happens both from my SPA running in Webpack Dev Server \r\n\r\n![image](https://user-images.githubusercontent.com/1256531/36280327-86787c7e-125f-11e8-8f72-57f8186cc885.png)\r\n\r\n\r\nand from Postman. \r\n   \r\n![image](https://user-images.githubusercontent.com/1256531/36280287-6dc96c4c-125f-11e8-8cf5-3072491f233e.png)\r\n\r\nClient code is really straight forward.\r\n\r\n```\r\n        let connection = new HubConnection(getApiPath() + '/dashboardhub');\r\n        connection.start();\r\n```\r\n\r\n`getApiPath()` is returning the correct URL per the ASP.NET Core web server service based on the error I am seeing the Chrome dev tools. \r\n\r\nHaving a hard time seeing the forest from the trees with this one. \r\n\r\nThanks in advance!\r\n"},{"Id":"7251854972","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:50:51","Actor":"adamdriscoll","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1456","RelatedDescription":"Opened issue \"404 Error During OPTIONS request\" (#1456) at aspnet/SignalR","RelatedBody":"I know I am missing something very basic. I'm running ASP.NET Core 2.0.1 with SignalR 1.0.0-alpha2-final. I have configured my services in Startup.cs as follows: \r\n\r\n```\r\n\t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddResponseCompression();\r\n\t\t\tservices.AddSignalR();\r\n\t\t\tservices.AddCors();\r\n\t\t\tservices.AddDirectoryBrowser();\r\n\t\t\tservices.AddMemoryCache();\r\n\t\t\tservices.AddMvc();\r\n                }\r\n  \t\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IApplicationLifetime lifetime)\r\n\t\t{\r\n\t\t\tapp.UseResponseCompression();\r\n\t\t\tapp.UseStatusCodePagesWithReExecute(\"/redirect/{0}\");\r\n\t\t\tapp.UseFileServer(new FileServerOptions()\r\n\t\t\t{\r\n\t\t\t\tFileProvider = new PhysicalFileProvider(env.ContentRootPath),\r\n\t\t\t\tRequestPath = new PathString(\"\"),\r\n\t\t\t\tEnableDirectoryBrowsing = true\r\n\t\t\t});\r\n\r\n\t\t\tapp.UseCors(builder => builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials());\r\n\r\n\t\t\tapp.UseSignalR(routes =>\r\n            {\r\n                routes.MapHub<DashboardHub>(\"dashboardhub\");\r\n            });\r\n\t\t\tapp.UseWebSockets();\r\n\r\n\t\t\tapp.UseMvc();\r\n\t\t}\r\n```\r\n\r\nThe goal is to serve a React SPA from the ASP.NET Core app and use SignalR for some stuff. I receive a 404 on the `/dashboardhub` endpoint when doing the OPTIONS request. This happens both from my SPA running in Webpack Dev Server \r\n\r\n![image](https://user-images.githubusercontent.com/1256531/36280327-86787c7e-125f-11e8-8f72-57f8186cc885.png)\r\n\r\n\r\nand from Postman. \r\n   \r\n![image](https://user-images.githubusercontent.com/1256531/36280287-6dc96c4c-125f-11e8-8cf5-3072491f233e.png)\r\n\r\nI must be just missing something. \r\n\r\nThanks in advance!\r\n"},{"Id":"7251683324","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:13:35","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1455","RelatedDescription":"Opened pull request \"[WIP]First pass fallback. \" (#1455) at aspnet/SignalR","RelatedBody":"The idea is to only fallback when there is an issue in start on the HttpConnection. \r\nI exposed the Transport type so that as transports fail we can remove them from the considered transports. \r\nWanted to get some early thoughts. \r\nOf course needs tests eventually, but it's still WIP"},{"Id":"7251284975","Type":"IssuesEvent","CreatedAt":"2018-02-15T18:51:42","Actor":"ste4net","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1454","RelatedDescription":"Opened issue \"IsWebSocketRequest not working with UseAuthentication (Signalr with Jwt)\" (#1454) at aspnet/SignalR","RelatedBody":"Doing test with JWT sample and my code i saw that the approach suggested in JwtSample should not work if you call app.UseAuthentication() in Startup.Configure.\r\nIt is not yet perfectly clear for me what's the role of AuthenticationMiddleware (added by UseAuthentication extension method) in JWT authentication.\r\nI start using it as suggested in documentation (https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/identity-2x#jwt-bearer-authentication)\r\nbut if the AuthenticationMiddleware is placed before **UseSignalR** IsWebSocketRequest return always false when you test it from JwtBearerEvents (https://github.com/aspnet/SignalR/blob/dev/samples/JwtSample/Startup.cs).\r\nMaybe this is because AuthenticationMiddleware force the call of JWTMiddleware and if it has been configured before UseSignalR it is called before the WebSocketMiddleware.\r\nIf you think i will post the issue to main repo i post here because in my case is something related to Signalr+Jwt."},{"Id":"7251227781","Type":"IssuesEvent","CreatedAt":"2018-02-15T18:40:01","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1117","RelatedDescription":"Closed issue \"Add protocol regression tests to MsgPack\" (#1117) at aspnet/SignalR","RelatedBody":"Because MsgPack is a binary protocol, it's really important to have some tests that ensure that we know when the binary format changes. We should build some tests that serialize messages using MsgPack and then assert the exact bytes that are generated. Once we have them, they will fail when we change the protocol format and we'll know if and how clients are affected.\r\n\r\nWe currently only have round-tripping tests which can hide issues if we update all the C# code simultaneously.\r\n\r\nJSON has similar tests already, so this is mostly just catching MsgPack up with that.\r\n\r\n(Happy to write these myself, just filing this so I don't forget)"},{"Id":"7251071688","Type":"IssuesEvent","CreatedAt":"2018-02-15T18:07:30","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/526","RelatedDescription":"Closed issue \"Fix and unskip flaky test\" (#526) at aspnet/SignalR","RelatedBody":"We're skipping it for now to pass the CI, but we should give it an actual investigation."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7252974936","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:53:12","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7385","RelatedDescription":"Opened pull request \"Design: ViewDataAttribute\" (#7385) at aspnet/Mvc","RelatedBody":""},{"Id":"7252848646","Type":"PullRequestEvent","CreatedAt":"2018-02-16T01:05:51","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7384","RelatedDescription":"Opened pull request \"FYI Only, ignore\" (#7384) at aspnet/Mvc","RelatedBody":"-  Re-enable \"Move to RazorProjectEngine.\"\r\n- This was initially reverted due to insufficient packages for local builds.\r\n\r\nI'll merge this once we have a successful coherence build with latest Razor."},{"Id":"7252758326","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:34:53","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7377","RelatedDescription":"Closed issue \"Move to RazorProjectEngine.\" (#7377) at aspnet/Mvc","RelatedBody":"MvcRazorTemplateEngine isn't used any more. Use RazorProjectEngine."},{"Id":"7252756978","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:34:27","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7380","RelatedDescription":"Merged pull request \"Move to RazorProjectEngine.\" (#7380) at aspnet/Mvc","RelatedBody":"- Updated our consumption of `RazorEngine` and `RazorTemplateEngine` to use `RazorProjectEngine` and its features.\r\n- Updated service registrations to maintain existing services but to also register new ones.\r\n- When moving `RazorViewEngine` to use `RazorProjectFileSystem` I had to add an unused constructor item in order to disambiguate the constructors.\r\n- Updated tests to use `RazorProjectEngine` and `RazorProjectFileSystem`.\r\n\r\n#7377 \r\n\r\n/cc @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7252691026","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:12:58","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1639","RelatedDescription":"Opened issue \"Reset password doesn't work\" (#1639) at aspnet/Identity","RelatedBody":"* The ResetPassword view doesn't send the code as a hidden field of the reset password form, so it doesn't get modelbound.\r\n* The reset password handlers are incorrectly defined on the ResetPasswordModel and the behavior is as if they weren't there."},{"Id":"7252689598","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:12:30","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1638","RelatedDescription":"Opened issue \"Send confirmation email doesn't generate the callback URI correctly\" (#1638) at aspnet/Identity","RelatedBody":"* On the manage/index page. The send email link sends an email confirmation message with an incorrect callback URI of id=<<user-id>> instead of userId=<<userId>> causing email confirmation to fail.\r\n* The email confirmation handlers redirects the user using RedirectToPage(\"/Index\") which is not correct for MVC based pages."},{"Id":"7252687207","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:11:44","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1637","RelatedDescription":"Opened issue \"Email confirmation doesn't get send if the user registers with a social login provider\" (#1637) at aspnet/Identity","RelatedBody":"* With a social login provider enabled and email confirmation set to required, go to login.\r\n* Click on the social login provider.\r\n* After successful login with your provider, you'll be prompted to introduce your email to finish login/registration.\r\n* Introduce your email and continue.\r\n* No email got sent.\r\n* Logout.\r\n* Try to log-in with your social login provider.\r\n* You'll be prompted again to introduce your email.\r\n* If you try to introduce the same email as before we will tell you that the email is invalid.\r\n* There is no way to complete the registration as you didn't get a confirmation email.\r\n* There is no way to \"forget\" the association between the social login provider and your unconfirmed email account in order to retry the process."},{"Id":"7252682624","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:10:16","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1636","RelatedDescription":"Opened issue \"Social login provider options don't show up in register\" (#1636) at aspnet/Identity","RelatedBody":"* With a social login provider enabled, go to register.\r\n* No social login provider is displayed.\r\n* It shows up in the login view."},{"Id":"7252678473","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:08:55","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1635","RelatedDescription":"Opened issue \"Social login provider options disappear after failed login attempt\" (#1635) at aspnet/Identity","RelatedBody":"* With a social login provider enabled, go to login.\r\n* You'll see the social login provider listed.\r\n* Try to log in with user name and an incorrect password\r\n*The social login provider will disappear when the page\r\ngets re-rendered."},{"Id":"7251697439","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:16:45","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1602","RelatedDescription":"Closed issue \"Consider changing the 'purpose' to device identifier\" (#1602) at aspnet/Identity","RelatedBody":"Hi,\r\nCurrently the method `ValidateAsync `from the `IUserTwoFactorTokenProvider<TUser>` contains a parameter called 'purpose' which is always equals to 'TwoFactory' if the default method in `UserManager `is not overridden. \r\n\r\nThis is because the default implementation inside the `Microsoft.AspNetCore.Identity.UserManager<TUser>`\r\nof the method `VerifyTwoFactorTokenAsync(TUser user,string tokenProvider, token)`\r\nlooks that: \r\n`var result = await _tokenProviders[tokenProvider].ValidateAsync(\"TwoFactor\", token, this, user);`\r\n \r\nSo this 'purpose' parameter seems to be pretty useless right now. However it could be replaced by some kind of device identifier so it would be easier to store multiple devices for the same TokenProvider (so the single user could have 2 devices for the same token provider).\r\n\r\nPlease let me know what you think."},{"Id":"7251674885","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:11:44","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1632","RelatedDescription":"Closed issue \"TOTP without cookies (using tokens)\" (#1632) at aspnet/Identity","RelatedBody":"Is it possible to implement TOTP authentication without using cookies?\r\n\r\nI am currently using the _signInManager.GetTwoFactorAuthenticationUserAsync() method to get the user from the cookie being sent back from the SPA which is fine. There are however business scenarios where clients do not allow the use of cookies (legal reason or what not).\r\n\r\nWould it be possible to generate a PasswordSignIn token instead of a cookie to be used by the TwoFactorAuthenticatorSignIn?\r\n"},{"Id":"7251660442","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:08:36","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1634","RelatedDescription":"Merged pull request \"Rybrande/experimental\" (#1634) at aspnet/Identity","RelatedBody":""},{"Id":"7251651707","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:06:44","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1633","RelatedDescription":"Closed issue \"The old token is not expire in GenerateChangePhoneNumberTokenAsync method?\" (#1633) at aspnet/Identity","RelatedBody":"I'm facing this issue,\r\nGenerateChangePhoneNumberTokenAsync(user, PhoneNumber)-This method is for generate the Confirmation Code\r\nChangePhoneNumberAsync(user, PhoneNumber, code);-This method is for Confirmation Code\r\n\r\n\r\nScenario:\r\n1.Sending Verification Code(First Verification is Code sent to mobile)\r\n2.Again Clicking Resend the Verification Code(Second Code is sent to Mobile)\r\n3.If I give the first verification code its gets accepted...\r\n\r\nHow to Expire the old code?\r\n"},{"Id":"7251636990","Type":"IssuesEvent","CreatedAt":"2018-02-15T20:03:30","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1627","RelatedDescription":"Closed issue \"How to save plain text password in database using mvc default authentication\" (#1627) at aspnet/Identity","RelatedBody":"I am new in developement and I dont want save hash password in aspnetuser table. please help me out"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7252842142","Type":"IssuesEvent","CreatedAt":"2018-02-16T01:03:35","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2323","RelatedDescription":"Opened issue \"Investigate startup issues with Kestrel\" (#2323) at aspnet/KestrelHttpServer","RelatedBody":"@anurse @pakrym @halter73 "},{"Id":"7252206308","Type":"PullRequestEvent","CreatedAt":"2018-02-15T22:05:47","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2322","RelatedDescription":"Merged pull request \"Fixed race in sockets transport (#2279)\" (#2322) at aspnet/KestrelHttpServer","RelatedBody":"@muratg We were previously discussing this backport at #2247 which is a closed PR. That particular PR is already merged into the release/2.1 branch. David's change (this one) is all that's remaining to completely rid us of these ArgumentNullExceptions."},{"Id":"7251674364","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:11:37","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2322","RelatedDescription":"Opened pull request \"Fixed race in sockets transport (#2279)\" (#2322) at aspnet/KestrelHttpServer","RelatedBody":"@muratg We were previously discussing this backport at #2247 which is a closed PR. That particular PR is already merged into the release/2.1 branch. David's change (this one) is all that's remaining to completely rid us of these ArgumentNullExceptions."},{"Id":"7251113485","Type":"IssuesEvent","CreatedAt":"2018-02-15T18:16:15","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2320","RelatedDescription":"Closed issue \"Random spike in exceptions which look to maybe be coming from kestrel\" (#2320) at aspnet/KestrelHttpServer","RelatedBody":"Last week I had an instance where app services restarted my site and it never came up for some reason. I didn't see anything in the logs for it and nothing in application insights. While just reviewing what's in application insights I noticed a massive spike in logged exceptions a day or two later but I'm not sure if it's related.\r\n\r\n![image](https://user-images.githubusercontent.com/831974/36230381-4768499a-11a8-11e8-9584-45d555ffcd58.png)\r\n\r\nThere was just shy of 2k instances of the same exception logged over the span of about a half hour. There was also a debug snapshot taken of this exception. The stack trace that was logged is:\r\n```\r\nConnection processing ended abnormally.\r\nSystem.ArgumentException:\r\n   at Microsoft.ApplicationInsights.AspNetCore.Extensions.HttpRequestExtensions.GetUri (Microsoft.ApplicationInsights.AspNetCore, Version=2.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at Microsoft.ApplicationInsights.AspNetCore.DiagnosticListeners.HostingDiagnosticListener.EndRequest (Microsoft.ApplicationInsights.AspNetCore, Version=2.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35)\r\n   at Proxy_Method_From_<>f__AnonymousType2`1_To_Void OnHttpRequestInStop(Microsoft.AspNetCore.Http.HttpContext) (Anonymously Hosted DynamicMethods Assembly, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null)\r\n   at Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapter+<>c__DisplayClass1_0.<Adapt>b__0 (Microsoft.Extensions.DiagnosticAdapter, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write (Microsoft.Extensions.DiagnosticAdapter, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext (Microsoft.Extensions.DiagnosticAdapter, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at System.Diagnostics.DiagnosticListener.Write (System.Diagnostics.DiagnosticSource, Version=4.0.2.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51)\r\n   at System.Diagnostics.DiagnosticSource.StopActivity (System.Diagnostics.DiagnosticSource, Version=4.0.2.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51)\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingApplicationDiagnostics.StopActivity (Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingApplication.DisposeContext (Microsoft.AspNetCore.Hosting, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1+<ProcessRequestsAsync>d__2.MoveNext (Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.0.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60)\r\n```\r\n\r\nIf it'd help I can either give you the account info so you can look into the logs and grab a copy of the snapshot, or I could send a copy to someone for review. I'm not seeing anything in it that's related to application code, it's all inside asp.net core by the looks of it."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7253029725","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:15:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2080","RelatedDescription":"Opened issue \"RazorProjectEngineBuilder.AddDefaultImports should take a source document or a string\" (#2080) at aspnet/Razor","RelatedBody":"We merged this from our tests into the product, but it accepts params of `RazorProjectItem` which isn't a very useful type for extenders. This should be cleaned up to take strings or source documents."},{"Id":"7252735428","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:27:26","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2079","RelatedDescription":"Opened issue \"Razor build tasks should validate Configuration\" (#2079) at aspnet/Razor","RelatedBody":"The tag helper task needs some parameter validation https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Tasks/RazorTagHelper.cs\r\n\r\nAnd the generate task needs to validate configuration  https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Tasks/RazorGenerate.cs#L39"},{"Id":"7252721927","Type":"IssuesEvent","CreatedAt":"2018-02-16T00:23:01","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2075","RelatedDescription":"Closed issue \"ResolveTagHelperRazorGenerateInputs target gets invoked even when no inputs change\" (#2075) at aspnet/Razor","RelatedBody":"This was causing the `RazorTagHelper` task to run even when there were no changes to any csharp files."},{"Id":"7252718174","Type":"PullRequestEvent","CreatedAt":"2018-02-16T00:21:46","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2076","RelatedDescription":"Merged pull request \"Fixed unnecessary invocation of TagHelper target\" (#2076) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/issues/2075\r\n\r\nMsBuild was still deleting the `SimpleMvc.TagHelpers.input.cache` file when we add it to FileWrites with `ItemName=FileWrites`.\r\n\r\ncc' @pranavkm who has more context.\r\n\r\nAlso added a test."},{"Id":"7252472300","Type":"PullRequestEvent","CreatedAt":"2018-02-15T23:09:05","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2078","RelatedDescription":"Merged pull request \"WebSdk transitions\" (#2078) at aspnet/Razor","RelatedBody":"* Add a reference to Microsoft.Net.Sdk if it wasn't previously referenced\r\n* Move PreserveCompilationContext in to our target\r\n* Remove use of transition property"},{"Id":"7252046698","Type":"PullRequestEvent","CreatedAt":"2018-02-15T21:31:32","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2058","RelatedDescription":"Merged pull request \"Decouple Razor tools from MVC\" (#2058) at aspnet/Razor","RelatedBody":"Adds a loader (with shadow copying in server mode) based on the Roslyn\r\nAnalyzer loader design.\r\n\r\nAdds some targets to the Razor SDK that we can use to compute the\r\nconfiguration and extensions.\r\n\r\nPasses all of the metadata through to the command line tools so they can\r\ndeal with extensions."},{"Id":"7251671243","Type":"PullRequestEvent","CreatedAt":"2018-02-15T20:10:55","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2078","RelatedDescription":"Opened pull request \"WebSdk transitions\" (#2078) at aspnet/Razor","RelatedBody":"* Add a reference to Microsoft.Net.Sdk if it wasn't previously referenced\r\n* Move PreserveCompilationContext in to our target\r\n* Remove use of transition property"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7187586381","Type":"IssuesEvent","CreatedAt":"2018-02-02T06:15:37","Actor":"simonpbond","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/292","RelatedDescription":"Closed issue \"Publish ASP.NET 5 Web Application to remote IIS \" (#292) at aspnet/Tooling","RelatedBody":"In Visual Studio 2015, I can successfully preview / publish to a remote IIS server with a 4.6 Web application. However, publishing fails when using an ASP.NET 5 template / web applications, it will not even provide a preview.\n\nIs it possible to publish an ASP.NET 5 web application at the current time using Visual Studio 2015 / Publish to a remote IIS server?\n\nIf so, is there any instructions on doing this? (not for local IIS).\n"},{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7215731126","Type":"IssuesEvent","CreatedAt":"2018-02-08T09:18:22","Actor":"SteveSandersonMS","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Opened issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289) at aspnet/Announcements","RelatedBody":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available."},{"Id":"7191689127","Type":"IssuesEvent","CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 \" (#288) at aspnet/Announcements","RelatedBody":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/7193)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.… https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":17,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answe… https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of t… https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":32,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlando… https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"961596291968102400","CreatedAt":"2018-02-08T13:43:16+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and ASPInsider @brendoneus will be showing unit testing patterns and structure practices LIVE onli… https://t.co/dvU3elJX8R","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"961390822993399809","CreatedAt":"2018-02-08T00:06:48+00:00","UserScreenname":"aspnet","Text":"Did you miss this week's #ASPNET Community Standup (with the latest news on Blazor, starring @danroth27 and… https://t.co/tfeqgnhClX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"961390078932148224","CreatedAt":"2018-02-08T00:03:51+00:00","UserScreenname":"aspnet","Text":"Sure, after you've left a PR on the #ASPNET docs...\n\nhttps://t.co/Dau0ZgAUbe\n\n;) https://t.co/s8UGKAhK0e","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"961382608818130944","CreatedAt":"2018-02-07T23:34:10+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz and ASPInsider Brendan Enrick for a LIVE CODING stream talking about how to write better unit t… https://t.co/7ecMOR53sw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":0,"RawContent":null},{"Id":"960929306548387840","CreatedAt":"2018-02-06T17:32:54+00:00","UserScreenname":"aspnet","Text":"This week's standup starts in 30 minutes. Join us! https://t.co/YnMMK0GKu4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":5,"RawContent":null},{"Id":"960654063133052928","CreatedAt":"2018-02-05T23:19:11+00:00","UserScreenname":"aspnet","Text":"Just blogged: Learn how to do Image Recognition with Cognitive Services and https://t.co/eFOzgs22K8 https://t.co/7PVAkBPFzq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":7,"RawContent":null},{"Id":"960617902268342272","CreatedAt":"2018-02-05T20:55:29+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Feb 6 at 10 Pacific / 18 GMT with special guests @danroth27 and… https://t.co/6JlWLbKqut","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-02-16T05:30:09.197943Z","RunDurationInMilliseconds":7885}