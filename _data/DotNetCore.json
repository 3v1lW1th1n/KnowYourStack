{"Data":{"Blog":{"FeedItems":[{"Title":"Continuously deploy and monitor your UWP, WPF, and Windows Forms app with App Center","PublishedOn":"2019-10-31T16:00:39+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"App Center is an integrated developer solution with the mission of helping developers build better apps. Last week, we announced General Availability support of distribute, analytics and diagnostics...","Href":"https://devblogs.microsoft.com/dotnet/continuously-deploy-and-monitor-your-uwp-wpf-and-windows-forms-app-with-app-center/","RawContent":null},{"Title":"Introducing Orleans 3.0","PublishedOn":"2019-10-30T19:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This is a guest post from the Orleans team. Orleans is a cross-platform framework for building distributed applications with .NET. For more information, see https://github.com/dotnet/orleans.\nWe are...","Href":"https://devblogs.microsoft.com/dotnet/orleans-3-0/","RawContent":null},{"Title":".NET Framework October 2019 Cumulative Updates Windows 10 version 1903 and Windows 10 version 1909","PublishedOn":"2019-10-24T17:33:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Cumulative Updates for .NET Framework 3.5 and 4.8 on Windows 10 version 1903 and Windows 10 version 1909\nQuality and Reliability\nThis release contains the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/","RawContent":null},{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10763590640","Type":"PullRequestEvent","CreatedAt":"2019-11-01T04:46:08","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27587","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#27587) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10763588016","Type":"IssuesEvent","CreatedAt":"2019-11-01T04:45:19","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27604","RelatedDescription":"Opened issue \"Assert failure: Consistency check failed: AV in clr at this callstack\" (#27604) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-corefx #20191031.1 Run Test Pri1 CoreFX Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=409206)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/5335a869-be77-4373-9e55-7b2ca13a8cb0/workitems/System.Net.NetworkInformation.Functional.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5988 [0x00001764], Thread: 4028 [0x0fbc]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! Object::GetMethodTable + 0x3 (0x72a9c81a)\r\nCORECLR! ArrayBase::GetDataPtr + 0x1F (0x72df228e)\r\nCORECLR! MngdFixedArrayMarshaler::ConvertContentsToManaged + 0x1B2 (0x72f1b882)\r\n<no module>! <no symbol> + 0x0 (0x09d8c520)\r\nCORECLR! CallDescrWorkerInternal + 0x34 (0x72b08091)\r\nCORECLR! CallDescrWorker + 0xD7 (0x72ce3876)\r\nCORECLR! CallDescrWorkerWithHandler + 0x11B (0x72ce39f3)\r\nCORECLR! MethodDescCallSite::CallTargetWorker + 0x5F9 (0x72ce4022)\r\nCORECLR! MarshalStructViaILStub + 0x198 (0x72dd0263)\r\nCORECLR! MarshalNative::PtrToStructureHelper + 0x30C (0x72ed947c)\r\nSYSTEM.PRIVATE.CORELIB! <no symbol> + 0x0 (0x7267558b)\r\nSYSTEM.PRIVATE.CORELIB! <no symbol> + 0x0 (0x72676c73)\r\n<no module>! <no symbol> + 0x0 (0x09d8b931)\r\n<no module>! <no symbol> + 0x0 (0x09d8076b)\r\n<no module>! <no symbol> + 0x0 (0x09d804fb)\r\n<no module>! <no symbol> + 0x0 (0x09e64df9)\r\nCORECLR! CallDescrWorkerInternal + 0x34 (0x72b08091)\r\nCORECLR! CallDescrWorker + 0xD7 (0x72ce3876)\r\nCORECLR! CallDescrWorkerWithHandler + 0x11B (0x72ce39f3)\r\n-----\r\n.AV on tid=0xfbc (4028), cxr=09C8BC64, exr=09C8BC14\r\nFAILED: false\r\n\r\nCORECLR! CHECK::Trigger + 0x2FB (0x72a67fde)\r\nCORECLR! CLRVectoredExceptionHandlerPhase3 + 0x25E (0x72b53932)\r\nCORECLR! CLRVectoredExceptionHandlerPhase2 + 0x4E (0x72b535a1)\r\nCORECLR! CLRVectoredExceptionHandler + 0x13C (0x72b53547)\r\nCORECLR! CLRVectoredExceptionHandlerShim + 0x168 (0x72b53b68)\r\nNTDLL! LdrSetAppCompatDllRedirectionCallback + 0x1CB63 (0x779a04c3)\r\nNTDLL! RtlUnwind + 0x1BA (0x7796051a)\r\nNTDLL! KiUserExceptionDispatcher + 0xF (0x77970fff)\r\nCORECLR! MngdFixedArrayMarshaler::ConvertContentsToManaged + 0x1B2 (0x72f1b882)\r\n<no module>! <no symbol> + 0x0 (0x09d8c520)\r\n    File: F:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7537\r\n    Image: C:\\dotnetbuild\\work\\5335a869-be77-4373-9e55-7b2ca13a8cb0\\Payload\\dotnet.exe\r\n\r\nexit code -1073740286\r\n```"},{"Id":"10763571060","Type":"PullRequestEvent","CreatedAt":"2019-11-01T04:39:47","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27603","RelatedDescription":"Opened pull request \"Rewrite a few more array FCalls in C#\" (#27603) at dotnet/coreclr","RelatedBody":""},{"Id":"10763552927","Type":"PullRequestEvent","CreatedAt":"2019-11-01T04:34:00","Actor":"elinor-fung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27598","RelatedDescription":"Merged pull request \"Candidate fix for signing errors in official build\" (#27598) at dotnet/coreclr","RelatedBody":""},{"Id":"10763533818","Type":"IssuesEvent","CreatedAt":"2019-11-01T04:28:09","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27602","RelatedDescription":"Opened issue \"Test failed: JIT\\Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.cmd\" (#27602) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-outerloop #20191031.9](https://dev.azure.com/dnceng/public/_build/results?buildId=410191)\r\n\r\n**Detail:**\r\nwin x64: https://helix.dot.net/api/2019-06-17/jobs/2f8bb55c-fb3a-40b5-9b30-696161509e41/workitems/JIT.Directed/console\r\nwin x86: https://helix.dot.net/api/2019-06-17/jobs/ed071453-f02c-4175-a131-e2de111b1b30/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows x64/x86\r\n\r\n**Mode:**\r\nwin x64: \r\nRunCrossGen=1\r\nCOMPlus_TieredCompilation=0\r\n\r\nwin x86:\r\nnot set\r\n\r\n**Note:**\r\nThisi failure doesn't repro on both windows x64 and x86 machines.\r\n\r\n**Log:**\r\n```\r\nJIT\\Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\Reports\\JIT.Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n              1 file(s) copied.\r\n      \" C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload\\crossgen.exe\"  /Platform_Assemblies_Paths C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload;C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\pinvoke\\pinvoke-examples\\IL;C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\pinvoke\\pinvoke-examples /in pinvoke-examples.org /out pinvoke-examples.dll\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image pinvoke-examples.dll generated successfully.\r\n       \"C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload\\corerun.exe\" pinvoke-examples.dll \r\n      Expected: 100\r\n      Actual: -1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10763517329","Type":"PullRequestEvent","CreatedAt":"2019-11-01T04:23:05","Actor":"elinor-fung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27601","RelatedDescription":"Opened pull request \"Remove unused PropertyMap class from binder\" (#27601) at dotnet/coreclr","RelatedBody":""},{"Id":"10763117313","Type":"PullRequestEvent","CreatedAt":"2019-11-01T02:34:49","Actor":"elinor-fung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27592","RelatedDescription":"Merged pull request \"Remove unused functions on IAssemblyName\" (#27592) at dotnet/coreclr","RelatedBody":"Just deleting the functions that weren't used at all. Definitely way more we can/should get rid of (`IAssemblyName`/'CAssemblyName` entirely?)."},{"Id":"10762883570","Type":"PullRequestEvent","CreatedAt":"2019-11-01T01:31:43","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27600","RelatedDescription":"Opened pull request \"Enable faster mod ProcessorCount at tier1\" (#27600) at dotnet/coreclr","RelatedBody":"For `TimerQueueTimer` and `TlsOverPerCoreLockedStacksArrayPool`.\r\n\r\nJust changes from https://github.com/dotnet/coreclr/pull/27588 to enable a faster mod vs ProcessorCount at the call sites rather than changing `GetCurrentProcessorId`\r\n\r\n\r\n/cc @jkotas @VSadov"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10763331310","Type":"PullRequestEvent","CreatedAt":"2019-11-01T03:30:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13014","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13014) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19531.8 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n"},{"Id":"10763172600","Type":"PullRequestEvent","CreatedAt":"2019-11-01T02:48:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13010","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13010) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.7\r\n- **Date Produced**: 11/1/2019 1:04 AM\r\n- **Commit**: e89f2f450263f865f20c2c7b77f4e30daedc7c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10762092416","Type":"PullRequestEvent","CreatedAt":"2019-10-31T22:30:03","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13011","RelatedDescription":"Merged pull request \"Update branding to preview3\" (#13011) at dotnet/cli","RelatedBody":""},{"Id":"10761575679","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:06:01","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Merged pull request \"Remove signature on MAC host for dotnet tools\" (#13003) at dotnet/cli","RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"},{"Id":"10761570341","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:05:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13013","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13013) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191031.2\r\n- **Date Produced**: 10/31/2019 8:09 PM\r\n- **Commit**: 9e9f93d44c3a1b911df3e338aa4fb163c87212a8\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19531.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10761473174","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:52:04","Actor":"donnie-msft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13012","RelatedDescription":"Opened pull request \"--skip-duplicate added to `dotnet nuget push` parsing\" (#13012) at dotnet/cli","RelatedBody":"Fix for https://github.com/NuGet/Home/issues/8778\r\n\r\nNew option --skip-duplicate needs to be added to the dotnet parser for `nuget push` to support <tab> auto-completion and telemetry.\r\n\r\nThe [NuGet code changes](https://github.com/NuGet/NuGet.Client/pull/3083) to add this command were inserted into dotnet/cli [release/3.1.1xx](https://github.com/dotnet/cli/pull/12965)\r\n\r\n//cc @livarcocc @rrelyea"},{"Id":"10761212886","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:17:08","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13011","RelatedDescription":"Opened pull request \"Update branding to preview3\" (#13011) at dotnet/cli","RelatedBody":""},{"Id":"10760897891","Type":"PullRequestEvent","CreatedAt":"2019-10-31T19:35:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13010","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13010) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.3\r\n- **Date Produced**: 10/31/2019 6:01 PM\r\n- **Commit**: 3e355d45cfff29fdfc99452570555464e94a1bdf\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10760886002","Type":"PullRequestEvent","CreatedAt":"2019-10-31T19:33:37","Actor":"crummel","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13009","RelatedDescription":"Opened pull request \"Source-build fixes for 3.0.x.\" (#13009) at dotnet/cli","RelatedBody":"Retargeted version of https://github.com/dotnet/cli/pull/12781.\r\n\r\n- Fixed PackageVersion property name.\r\n- Excluded a couple more projects from source-build."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10757041052","Type":"PullRequestEvent","CreatedAt":"2019-10-31T12:31:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1635) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10756958702","Type":"PullRequestEvent","CreatedAt":"2019-10-31T12:21:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1635) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10751678457","Type":"PullRequestEvent","CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Merged pull request \"Source-build improvements.\" (#1612) at dotnet/standard","RelatedBody":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?"},{"Id":"10747127936","Type":"PullRequestEvent","CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1634) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10747048699","Type":"PullRequestEvent","CreatedAt":"2019-10-30T12:21:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1634) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10737166154","Type":"PullRequestEvent","CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1633) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10763315574","Type":"IssuesEvent","CreatedAt":"2019-11-01T03:25:58","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42285","RelatedDescription":"Closed issue \"Test failed: System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\" (#42285) at dotnet/corefx","RelatedBody":"**Job:**\r\n[corefx-ci #20191031.66](https://dnceng.visualstudio.com/public/_build/results?buildId=410818)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/0ae3a0ed-ee54-473f-928f-d57f7a804b47/workitems/System.Threading.AccessControl.Tests/console\r\n\r\n**configuration:**\r\nall Windows configurations\r\n\r\n**Failed tests:**\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\r\n\r\n**Log:**\r\n```\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -2147483648) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -1) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2147483647) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: AutoReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '18672432e16f4ebcbbf9309ed5be2dc4' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: ManualReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '55bca2e7b82246bd826b2c523b8097aa' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n  Finished:    System.Threading.AccessControl.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Threading.AccessControl.Tests  Total: 15, Errors: 0, Failed: 6, Skipped: 0, Time: 0.402s\r\n----- end Fri 11/01/2019  1:58:28.33 ----- exit code 1\r\n```"},{"Id":"10763202043","Type":"IssuesEvent","CreatedAt":"2019-11-01T02:56:11","Actor":"VincentBu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42285","RelatedDescription":"Opened issue \"Test failed: System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\" (#42285) at dotnet/corefx","RelatedBody":"**Job:**\r\n[corefx-ci #20191031.66](https://dnceng.visualstudio.com/public/_build/results?buildId=410818)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/0ae3a0ed-ee54-473f-928f-d57f7a804b47/workitems/System.Threading.AccessControl.Tests/console\r\n\r\n**Failed tests:**\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\r\n\r\n**Log:**\r\n```\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -2147483648) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -1) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2147483647) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: AutoReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '18672432e16f4ebcbbf9309ed5be2dc4' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: ManualReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '55bca2e7b82246bd826b2c523b8097aa' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n  Finished:    System.Threading.AccessControl.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Threading.AccessControl.Tests  Total: 15, Errors: 0, Failed: 6, Skipped: 0, Time: 0.402s\r\n----- end Fri 11/01/2019  1:58:28.33 ----- exit code 1\r\n```"},{"Id":"10763126125","Type":"PullRequestEvent","CreatedAt":"2019-11-01T02:36:55","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42284","RelatedDescription":"Opened pull request \"[release/3.1] Honor dictionary key policy when entry value is null (#42267)\" (#42284) at dotnet/corefx","RelatedBody":"Ports https://github.com/dotnet/corefx/pull/42267 to 3.1\r\n\r\n## Description\r\nFixes bug where dictionary key policies were not being honored when serializing dictionary entries with null values.\r\n\r\n## Customer Impact\r\n\r\nCorrect serialization in the scenario described. \r\nFixes https://github.com/dotnet/corefx/issues/42220.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. Targeted fix with test cases."},{"Id":"10763088097","Type":"PullRequestEvent","CreatedAt":"2019-11-01T02:27:19","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42267","RelatedDescription":"Merged pull request \"Honor dictionary key policy when entry value is null\" (#42267) at dotnet/corefx","RelatedBody":"Addresses https://github.com/dotnet/corefx/issues/42220 for master/5.0."},{"Id":"10763033798","Type":"IssuesEvent","CreatedAt":"2019-11-01T02:12:53","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42283","RelatedDescription":"Opened issue \"Proposal: ChannelReader<T>.TryPeek\" (#42283) at dotnet/corefx","RelatedBody":"Per comment at https://github.com/dotnet/corefx/issues/41819#issuecomment-542819724, we should consider adding:\r\n```C#\r\nnamespace System.Threading.Channels\r\n{\r\n    public abstract partial class ChannelReader<T>\r\n    {\r\n        public virtual bool TryPeek([MaybeNullWhen(false)] out T item)\r\n        {\r\n            item = default;\r\n            return false;\r\n        }\r\n        ...\r\n    }\r\n}\r\n```\r\nWe'd need to confirm, but I believe it should be possible to implement this on all of the built-in channel implementations."},{"Id":"10762946346","Type":"PullRequestEvent","CreatedAt":"2019-11-01T01:49:09","Actor":"Marusyk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42282","RelatedDescription":"Opened pull request \"Consolidate .netcoreapp.cs test files in System.Text.Encoding\" (#42282) at dotnet/corefx","RelatedBody":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10763039389","Type":"PullRequestEvent","CreatedAt":"2019-11-01T02:14:29","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39627","RelatedDescription":"Opened pull request \"Do not fail fast on cancellation\" (#39627) at dotnet/roslyn","RelatedBody":"Crash dumps from Watson show that we fail fast when OperationCancelledException or TaskCanceledException is thrown while reading assets in ServiceHub process."},{"Id":"10762689491","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:39:51","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39626","RelatedDescription":"Opened pull request \"Do not report EnC diagnostics when EnC is disabled\" (#39626) at dotnet/roslyn","RelatedBody":""},{"Id":"10762685394","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:38:44","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39625","RelatedDescription":"Opened pull request \"Handle dependent slots in pattern-matching null tests.\" (#39625) at dotnet/roslyn","RelatedBody":"Fixes #39264"},{"Id":"10762582216","Type":"IssuesEvent","CreatedAt":"2019-11-01T00:13:19","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39624","RelatedDescription":"Opened issue \"When a variable is known to be null, its dependent fields can be treated as non-null\" (#39624) at dotnet/roslyn","RelatedBody":"In researching https://github.com/dotnet/roslyn/issues/39264 I discovered the following issue, which is the same issue without pattern-matching.  There is some code in `NullableWalker` to support this but not a complete solution, added during the fix for https://github.com/dotnet/roslyn/issues/39264.  See a mention of this issue in the code.\r\n\r\n```csharp\r\n        [Fact]\r\n        [WorkItem(39264, \"https://github.com/dotnet/roslyn/issues/39264\")]\r\n        public void NullTestVsDependentSlots_01()\r\n        {\r\n            CSharpCompilation c = CreateNullableCompilation(@\"\r\n#nullable enable\r\nclass C\r\n{\r\n    string? field = string.Empty;\r\n\r\n    void M1(C c)\r\n    {\r\n        if (c != null)\r\n        {\r\n            if (c.field == null) return;\r\n        }\r\n        if (c == null) return;\r\n        c.field.ToString(); // improperly reports possible null dereference of c.field\r\n    }\r\n}\r\n\");\r\n            c.VerifyDiagnostics(\r\n                );\r\n        }\r\n```\r\n"},{"Id":"10762541228","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:03:50","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39623","RelatedDescription":"Opened pull request \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39623) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10762606863","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:19:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Merged pull request \"Disable multithreaded compilation\" (#7855) at dotnet/corert","RelatedBody":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate."},{"Id":"10762605914","Type":"PullRequestEvent","CreatedAt":"2019-11-01T00:19:00","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7857) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10761486907","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:53:55","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7857) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10761451714","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:49:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7856) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams"},{"Id":"10759418833","Type":"PullRequestEvent","CreatedAt":"2019-10-31T16:36:36","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7856) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams"},{"Id":"10759330438","Type":"PullRequestEvent","CreatedAt":"2019-10-31T16:26:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7854) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub"},{"Id":"10758880349","Type":"PullRequestEvent","CreatedAt":"2019-10-31T15:41:28","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Opened pull request \"Disable multithreaded compilation\" (#7855) at dotnet/corert","RelatedBody":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate."},{"Id":"10753890256","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:05:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7854) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10753878850","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:03:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7853) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT"},{"Id":"10748724538","Type":"PullRequestEvent","CreatedAt":"2019-10-30T15:13:13","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7853) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT"},{"Id":"10748706334","Type":"PullRequestEvent","CreatedAt":"2019-10-30T15:11:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop"},{"Id":"10748048115","Type":"IssuesEvent","CreatedAt":"2019-10-30T14:11:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Opened issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852) at dotnet/corert","RelatedBody":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```"},{"Id":"10742955128","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:15:42","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10742916022","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:06:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk"},{"Id":"10741399922","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:09:48","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10763331203","Type":"PullRequestEvent","CreatedAt":"2019-11-01T03:30:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3844","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3844) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10762256595","Type":"PullRequestEvent","CreatedAt":"2019-10-31T23:02:13","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Merged pull request \"port remove signature on MAC host\" (#3832) at dotnet/sdk","RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"},{"Id":"10761560331","Type":"PullRequestEvent","CreatedAt":"2019-10-31T21:03:53","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10761402274","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:42:33","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":null,"RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"},{"Id":"10761402031","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:42:31","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Closed pull request \"port remove signature on MAC host\" (#3832) at dotnet/sdk","RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"},{"Id":"10761398630","Type":"IssuesEvent","CreatedAt":"2019-10-31T20:42:03","Actor":"CumpsD","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3843","RelatedDescription":"Opened issue \"dotnet restore no longer supports multiple runtimes\" (#3843) at dotnet/sdk","RelatedBody":"**Repo**\r\n```\r\ndotnet new console\r\ndotnet restore -r win-x64 -r linux-x64\r\n```\r\n\r\n**Result**\r\n```\r\nerror NETSDK1083: The specified RuntimeIdentifier 'win-x64;linux-x64' is not recognized.\r\n```\r\n\r\n**Speculation**\r\nIt seems the multiple runtimes are being passed in as RuntimeIdentifier instead of RuntimeIdentifiers?\r\n\r\nThis used to work on 2.2\r\n\r\nAs a workaround I can put `<RuntimeIdentifiers>....` in the csproj and exclude the `-r` switches, but I dont really want to do this, since it means updating *a lot* of csprojs."},{"Id":"10761241859","Type":"PullRequestEvent","CreatedAt":"2019-10-31T20:20:58","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3842","RelatedDescription":"Opened pull request \"Update branding for preview3\" (#3842) at dotnet/sdk","RelatedBody":""},{"Id":"10760980620","Type":"PullRequestEvent","CreatedAt":"2019-10-31T19:45:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3840","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3840) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10760335432","Type":"IssuesEvent","CreatedAt":"2019-10-31T18:22:54","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3841","RelatedDescription":"Opened issue \"Run target does not take input to run .NET Core app\" (#3841) at dotnet/sdk","RelatedBody":"**Steps to reproduce**\r\nCreate any .NET Core project (eg., with ``dotnet new console``)\r\nBuild it (eg., with ``dotnet build`` or ``msbuild /t:restore;build``)\r\nRun it with msbuild and any input (ie., ``msbuild /t:run input``)\r\n\r\n**Expected behavior**\r\nIt runs similar to running ``dotnet run`` or ``dotnet exec``\r\n\r\n**Actual behavior**\r\nMSBUILD : error MSB1009: Project file does not exist.\r\n\r\n**dotnet --version**\r\n3.1.100-preview1-014459\r\n\r\nThe MSBuild run target has been overridden to mirror ``dotnet run`` with no input: see #2283 and #3820\r\nOriginal issue: microsoft/msbuild#3355"},{"Id":"10760275086","Type":"PullRequestEvent","CreatedAt":"2019-10-31T18:15:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3840","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3840) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"515626824","IsPullRequest":true,"CreatedAt":"2019-11-01T04:46:08","Actor":"Dotnet-GitSync-Bot","Number":"27587","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/27587","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#27587)"},{"Id":"515909582","IsPullRequest":false,"CreatedAt":"2019-11-01T04:45:19","Actor":"VincentBu","Number":"27604","RawContent":null,"Title":"Assert failure: Consistency check failed: AV in clr at this callstack","State":"open","Body":"**Job:**\r\n[coreclr-corefx #20191031.1 Run Test Pri1 CoreFX Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=409206)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/5335a869-be77-4373-9e55-7b2ca13a8cb0/workitems/System.Net.NetworkInformation.Functional.Tests/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5988 [0x00001764], Thread: 4028 [0x0fbc]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! Object::GetMethodTable + 0x3 (0x72a9c81a)\r\nCORECLR! ArrayBase::GetDataPtr + 0x1F (0x72df228e)\r\nCORECLR! MngdFixedArrayMarshaler::ConvertContentsToManaged + 0x1B2 (0x72f1b882)\r\n<no module>! <no symbol> + 0x0 (0x09d8c520)\r\nCORECLR! CallDescrWorkerInternal + 0x34 (0x72b08091)\r\nCORECLR! CallDescrWorker + 0xD7 (0x72ce3876)\r\nCORECLR! CallDescrWorkerWithHandler + 0x11B (0x72ce39f3)\r\nCORECLR! MethodDescCallSite::CallTargetWorker + 0x5F9 (0x72ce4022)\r\nCORECLR! MarshalStructViaILStub + 0x198 (0x72dd0263)\r\nCORECLR! MarshalNative::PtrToStructureHelper + 0x30C (0x72ed947c)\r\nSYSTEM.PRIVATE.CORELIB! <no symbol> + 0x0 (0x7267558b)\r\nSYSTEM.PRIVATE.CORELIB! <no symbol> + 0x0 (0x72676c73)\r\n<no module>! <no symbol> + 0x0 (0x09d8b931)\r\n<no module>! <no symbol> + 0x0 (0x09d8076b)\r\n<no module>! <no symbol> + 0x0 (0x09d804fb)\r\n<no module>! <no symbol> + 0x0 (0x09e64df9)\r\nCORECLR! CallDescrWorkerInternal + 0x34 (0x72b08091)\r\nCORECLR! CallDescrWorker + 0xD7 (0x72ce3876)\r\nCORECLR! CallDescrWorkerWithHandler + 0x11B (0x72ce39f3)\r\n-----\r\n.AV on tid=0xfbc (4028), cxr=09C8BC64, exr=09C8BC14\r\nFAILED: false\r\n\r\nCORECLR! CHECK::Trigger + 0x2FB (0x72a67fde)\r\nCORECLR! CLRVectoredExceptionHandlerPhase3 + 0x25E (0x72b53932)\r\nCORECLR! CLRVectoredExceptionHandlerPhase2 + 0x4E (0x72b535a1)\r\nCORECLR! CLRVectoredExceptionHandler + 0x13C (0x72b53547)\r\nCORECLR! CLRVectoredExceptionHandlerShim + 0x168 (0x72b53b68)\r\nNTDLL! LdrSetAppCompatDllRedirectionCallback + 0x1CB63 (0x779a04c3)\r\nNTDLL! RtlUnwind + 0x1BA (0x7796051a)\r\nNTDLL! KiUserExceptionDispatcher + 0xF (0x77970fff)\r\nCORECLR! MngdFixedArrayMarshaler::ConvertContentsToManaged + 0x1B2 (0x72f1b882)\r\n<no module>! <no symbol> + 0x0 (0x09d8c520)\r\n    File: F:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7537\r\n    Image: C:\\dotnetbuild\\work\\5335a869-be77-4373-9e55-7b2ca13a8cb0\\Payload\\dotnet.exe\r\n\r\nexit code -1073740286\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27604","RelatedDescription":"Open issue \"Assert failure: Consistency check failed: AV in clr at this callstack\" (#27604)"},{"Id":"515908208","IsPullRequest":true,"CreatedAt":"2019-11-01T04:39:47","Actor":"jkotas","Number":"27603","RawContent":null,"Title":"Rewrite a few more array FCalls in C#","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27603","RelatedDescription":"Open PR \"Rewrite a few more array FCalls in C#\" (#27603)"},{"Id":"515826952","IsPullRequest":true,"CreatedAt":"2019-11-01T04:33:59","Actor":"trylek","Number":"27598","RawContent":null,"Title":"Candidate fix for signing errors in official build","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27598","RelatedDescription":"Closed or merged PR \"Candidate fix for signing errors in official build\" (#27598)"},{"Id":"515905360","IsPullRequest":false,"CreatedAt":"2019-11-01T04:28:09","Actor":"VincentBu","Number":"27602","RawContent":null,"Title":"Test failed: JIT\\Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.cmd","State":"open","Body":"**Job:**\r\n[coreclr-outerloop #20191031.9](https://dev.azure.com/dnceng/public/_build/results?buildId=410191)\r\n\r\n**Detail:**\r\nwin x64: https://helix.dot.net/api/2019-06-17/jobs/2f8bb55c-fb3a-40b5-9b30-696161509e41/workitems/JIT.Directed/console\r\nwin x86: https://helix.dot.net/api/2019-06-17/jobs/ed071453-f02c-4175-a131-e2de111b1b30/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows x64/x86\r\n\r\n**Mode:**\r\nwin x64: \r\nRunCrossGen=1\r\nCOMPlus_TieredCompilation=0\r\n\r\nwin x86:\r\nnot set\r\n\r\n**Note:**\r\nThisi failure doesn't repro on both windows x64 and x86 machines.\r\n\r\n**Log:**\r\n```\r\nJIT\\Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\Reports\\JIT.Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n              1 file(s) copied.\r\n      \" C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload\\crossgen.exe\"  /Platform_Assemblies_Paths C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload;C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\pinvoke\\pinvoke-examples\\IL;C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Work\\e2a9fa77-ebf5-4371-b7cf-8d0feb8ac60f\\Exec\\JIT\\Directed\\pinvoke\\pinvoke-examples /in pinvoke-examples.org /out pinvoke-examples.dll\r\n      Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n      Copyright (c) Microsoft Corporation.  All rights reserved.\r\n      \r\n      Native image pinvoke-examples.dll generated successfully.\r\n       \"C:\\dotnetbuild\\work\\2f8bb55c-fb3a-40b5-9b30-696161509e41\\Payload\\corerun.exe\" pinvoke-examples.dll \r\n      Expected: 100\r\n      Actual: -1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27602","RelatedDescription":"Open issue \"Test failed: JIT\\Directed\\pinvoke\\pinvoke-examples\\pinvoke-examples.cmd\" (#27602)"},{"Id":"515903980","IsPullRequest":true,"CreatedAt":"2019-11-01T04:23:04","Actor":"elinor-fung","Number":"27601","RawContent":null,"Title":"Remove unused PropertyMap class from binder","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27601","RelatedDescription":"Open PR \"Remove unused PropertyMap class from binder\" (#27601)"},{"Id":"515768898","IsPullRequest":true,"CreatedAt":"2019-11-01T02:34:48","Actor":"elinor-fung","Number":"27592","RawContent":null,"Title":"Remove unused functions on IAssemblyName","State":"closed","Body":"Just deleting the functions that weren't used at all. Definitely way more we can/should get rid of (`IAssemblyName`/'CAssemblyName` entirely?).","Url":"https://github.com/dotnet/coreclr/pull/27592","RelatedDescription":"Closed or merged PR \"Remove unused functions on IAssemblyName\" (#27592)"},{"Id":"515858623","IsPullRequest":true,"CreatedAt":"2019-11-01T01:31:40","Actor":"benaadams","Number":"27600","RawContent":null,"Title":"Enable faster mod ProcessorCount at tier1","State":"open","Body":"For `TimerQueueTimer` and `TlsOverPerCoreLockedStacksArrayPool`.\r\n\r\nJust changes from https://github.com/dotnet/coreclr/pull/27588 to enable a faster mod vs ProcessorCount at the call sites rather than changing `GetCurrentProcessorId`\r\n\r\n\r\n/cc @jkotas @VSadov","Url":"https://github.com/dotnet/coreclr/pull/27600","RelatedDescription":"Open PR \"Enable faster mod ProcessorCount at tier1\" (#27600)"},{"Id":"515842305","IsPullRequest":false,"CreatedAt":"2019-11-01T00:36:33","Actor":"flaviocdc","Number":"27599","RawContent":null,"Title":"EventSource.CreateManifestAndDescriptors fails with \"Unexpected error: An event with stop suffix must have an event ID one larger than the corresponding event with a start\"","State":"open","Body":"While adding a new event to my Instrumentation project, I started getting the following error while building: \r\n\r\n> Unexpected error: An event with stop suffix must have an event ID one larger than the corresponding event with a start\r\n\r\nAfter a lot of digging through my source code and EventSource's source code, I figured out that the problem was that `CreateManifestAndDescriptors` assumes that _Start_ methods will always show up before _Stop_ methods when calling `System.Type.GetMethods`, but that's not true (checkout the remarks section of [this page](https://docs.microsoft.com/en-us/dotnet/api/system.type.getmethods?view=netframework-4.8)).\r\n\r\nLet's take the following event pair:\r\n\r\n```csharp\r\n[EventSource(Name = \"MyProvider\")]\r\nclass MyProvider : EventSource {\r\n  \r\n  [Event(100, Message = \"Start\")]\r\n  public void OperationXptoStart() { \r\n    WriteEvent(100);\r\n  }\r\n\r\n  [Event(101, Message = \"Stop\")]\r\n  public void OperationXptoStop() { \r\n    WriteEvent(101);\r\n  }  \r\n}\r\n```\r\n\r\nIf, for some reason, `typeof(MyProvider).GetMethods()` returns the `OperationXptoStop` method before `OperationXptoStart`, manifest generation will fail with the message reported above.\r\n\r\nThe reason for this seems to be that, once [here](https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/Diagnostics/Tracing/EventSource.cs#L3317). This code assumes that `eventData[startEventId]` is already populated in the `EventData` array, but *it may not be depending on the order in which `GetMethods` returned the members of the class*.","Url":"https://github.com/dotnet/coreclr/issues/27599","RelatedDescription":"Open issue \"EventSource.CreateManifestAndDescriptors fails with \"Unexpected error: An event with stop suffix must have an event ID one larger than the corresponding event with a start\"\" (#27599)"},{"Id":"515823176","IsPullRequest":true,"CreatedAt":"2019-10-31T23:50:15","Actor":"chcosta","Number":"27597","RawContent":null,"Title":"Validate Arcade change","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27597","RelatedDescription":"Open PR \"Validate Arcade change\" (#27597)"},{"Id":"515811349","IsPullRequest":false,"CreatedAt":"2019-10-31T23:24:37","Actor":"ares128","Number":"27596","RawContent":null,"Title":"Unexpected SegFault after long time running.","State":"open","Body":"My Application encounter stranger segfault problem without any exception, it always occurs after several hours running.\r\nI suspect the issue lies in clr.\r\n\r\nUsing dotnet-dump to analyze the core dump, it shows\r\n```\r\nLoading core dump: CoreDump ...\r\nReady to process analysis commands. Type 'help' to list available commands or 'help [command]' to get detailed help on a command.\r\nType 'quit' or 'exit' to exit the session.\r\n> clrstack\r\nFailed to request Module data from assembly.\r\nOS Thread Id: 0x18f2 (0)\r\n        Child SP               IP Call Site\r\n00007F41D1FF64B8 00007f42d7889b05 [InlinedCallFrame: 00007f41d1ff64b8]\r\n> pe\r\nThere is no current managed exception on this thread\r\n```\r\n\r\nPLS help me.\r\nThe coredump file uploaded to\r\n`http://104.207.146.131:8000/crash/log/CoreDump`","Url":"https://github.com/dotnet/coreclr/issues/27596","RelatedDescription":"Open issue \"Unexpected SegFault after long time running.\" (#27596)"},{"Id":"515799277","IsPullRequest":false,"CreatedAt":"2019-10-31T22:55:07","Actor":"echesakovMSFT","Number":"27595","RawContent":null,"Title":" Regressions/coreclr/GitHub_22888/test22888","State":"open","Body":"Fails everywhere with the following output\r\n\r\n```\r\n    Regressions/coreclr/GitHub_22888/test22888/test22888.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /private/tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Work/14ef7c0b-d5e4-47dd-ba97-b7a66d40a8bd/Exec/Regressions/coreclr/Reports/Regressions.coreclr/GitHub_22888/test22888/test22888.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Payload/corerun test22888.dll ''\r\n      Failed to get resource stream from the test assembly\r\n      Expected: 100\r\n      Actual: 101\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      > set CORE_ROOT=/tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Payload\r\n      > /private/tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Work/14ef7c0b-d5e4-47dd-ba97-b7a66d40a8bd/Exec/Regressions/coreclr/GitHub_22888/test22888/test22888.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /Users/runner/runners/2.159.2/work/1/s/bin/tests/OSX.x64.Checked/TestWrappers/Regressions.coreclr/Regressions.coreclr.XUnitWrapper.cs(1983,0): at Regressions_coreclr._GitHub_22888_test22888_test22888_._GitHub_22888_test22888_test22888_sh()\r\n      Output:\r\n        \r\n        Return code:      1\r\n        Raw output file:      /private/tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Work/14ef7c0b-d5e4-47dd-ba97-b7a66d40a8bd/Exec/Regressions/coreclr/Reports/Regressions.coreclr/GitHub_22888/test22888/test22888.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Payload/corerun test22888.dll ''\r\n        Failed to get resource stream from the test assembly\r\n        Expected: 100\r\n        Actual: 101\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=/tmp/helix/working/f2427664-a026-4dba-b8a1-dd6373c6197d/Payload\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27595","RelatedDescription":"Open issue \" Regressions/coreclr/GitHub_22888/test22888\" (#27595)"},{"Id":"515788375","IsPullRequest":true,"CreatedAt":"2019-10-31T22:29:11","Actor":"hoyosjs","Number":"27594","RawContent":null,"Title":"Restore Helix SDK with toolset to work around race in msbuild","State":"open","Body":"Works around #26057 by having toolset restore pre-fetch the package for the send to helix steps.\r\n\r\ncc: @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/27594","RelatedDescription":"Open PR \"Restore Helix SDK with toolset to work around race in msbuild\" (#27594)"},{"Id":"515787002","IsPullRequest":false,"CreatedAt":"2019-10-31T22:26:06","Actor":"kysel","Number":"27593","RawContent":null,"Title":"Excessive use of memory on linux compared to windows","State":"open","Body":"Hi there,\r\n\r\nI've just encountered a kind of weird issue, we are using [OpenCvSharp](https://github.com/shimat/opencvsharp) in production on Windows machines and it does run pretty well. But now, we've tried to run some services in docker containers and it always ends with OOM, even after allocating more than 3 times the memory needed on windows using the docker' `-m` parameter.\r\n\r\nI have been trying to pin down the issue but I am not able to do so. I have created a small repro solution here: https://github.com/kysel/OcvsMemIssueRepro, project `AllocTest` simplifies the repro. It basically just allocates some OpenCV's `Mat` and then explicitly disposes them and force GC. All other projects are part of OpenCvSharp library and are there to simplify debugging.\r\n\r\nI hope you can point me in the right direction on how to fix this issue, maybe it's related to #10524 🧐.\r\n\r\n### Repro steps (same for windows and Linux):\r\n0. On Linux, install OpenCV dependencies [this should help](https://github.com/shimat/opencvsharp/blob/master/docker/ubuntu.18.04-x64/Dockerfile)\r\n1. Run the `AllocTest` project (`dotnet run` in `AllocTest` directory will do the job)\r\n2. Monitor memory use\r\n    * I've used command `dotnet-counters monitor -p [pid]` on Linux,\r\n    * and diagnostics tools in VS on windows\r\n3. Click the *enter* key in running `AllocTest` to _step_ through 3 phases - pre alloc, post alloc, post GC\r\n4. Usually, the first loop is okay on both platforms starts at ~30MB of working set memory (*Working Set* in dotnet-counters), peaks to ~850MB after allocating OpenCvSharp's `Mat` and drops down to under ~80MB after GC.\r\nBut after the second iteration has passed allocated memory on Linux stays at ~870M and never drops again below let's say 100MB. As opposed to windows where memory always drops back to _normal_ values <100MB\r\n\r\n### `dotnet-trace` dumps from a Linux machine\r\n\r\nTo help you diagnose the issue I have created 3 memory dumps using the command\r\n`dotnet-trace collect --format NetTrace --providers Microsoft-Windows-DotNETRuntime:1980001 -p [pid] -o [name].nettrace`\r\nIf there is anything more I can do for you please tell me and I'll happily provide more information.\r\n\r\n1. Initial state before any unmanaged allocation [here](https://github.com/kysel/OcvsMemIssueRepro/raw/master/dumps/preAlloc.nettrace)\r\n2. Ok state after the first allocation and forced GC [here](https://github.com/kysel/OcvsMemIssueRepro/raw/master/dumps/post1GC.nettrace)\r\n3. Not ok state after the second iteration [here](https://github.com/kysel/OcvsMemIssueRepro/raw/master/dumps/post2GC.nettrace)\r\n\r\n### Environment\r\n\r\n#### Linux\r\nUbuntu 18.04 running in WSL2, but the same issue applies to bare-metal Linux, as well as docker image `mcr.microsoft.com/dotnet/core/aspnet:3.0`\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n#### Windows\r\nThere is a preview SDK, but it behaves the same on the latest stable `3.0.100`.\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014459\r\n Commit:    ac3b59712d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18985\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014459\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19506.1\r\n  Commit:  bbf5542781\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27593","RelatedDescription":"Open issue \"Excessive use of memory on linux compared to windows\" (#27593)"},{"Id":"515762477","IsPullRequest":true,"CreatedAt":"2019-10-31T21:35:45","Actor":"tarekgh","Number":"27591","RawContent":null,"Title":"Fix Buggy code in TimeZoneInfo","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/26995\r\n\r\nAlthough couldn’t reach the corner case cause executing the buggy code, the fix here is done according to the similar code in TimeZoneInfo which show the intention of the change\r\n\r\nhttps://github.com/dotnet/coreclr/blob/97c582975eed3260ef21e0bcc55c8c86d1e3bec8/src/System.Private.CoreLib/shared/System/TimeZoneInfo.cs#L1638\r\nhttps://github.com/dotnet/coreclr/blob/97c582975eed3260ef21e0bcc55c8c86d1e3bec8/src/System.Private.CoreLib/shared/System/TimeZoneInfo.cs#L1568","Url":"https://github.com/dotnet/coreclr/pull/27591","RelatedDescription":"Open PR \"Fix Buggy code in TimeZoneInfo\" (#27591)"},{"Id":"515736253","IsPullRequest":true,"CreatedAt":"2019-10-31T20:50:07","Actor":"cshung","Number":"27589","RawContent":null,"Title":"Avoid instantiating abstract class","State":"open","Body":"It is possible for `crossgen2` to encounter code trying to instantiate an abstract class, and we should refuse to generate code in those cases so that the JIT will throw `InvalidOperationException` at runtime.\r\n\r\nThis is not possible in C#, but it is possible to in `IL`, for example, the code is instantiating the abstract class `Gen<T>` [here](https://github.com/dotnet/coreclr/blob/01d2c1316843648d496d0530be3236efd2114e53/tests/src/Loader/classloader/generics/Instantiation/Negative/abstract01.il#L76)  and the assembler produced the IL for it.\r\n\r\n@dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27589","RelatedDescription":"Open PR \"Avoid instantiating abstract class\" (#27589)"},{"Id":"515516810","IsPullRequest":true,"CreatedAt":"2019-10-31T20:48:07","Actor":"tannergooding","Number":"27583","RawContent":null,"Title":"Fixing the casing of GT_HWIntrinsic to GT_HWINTRINSIC","State":"closed","Body":"The casing for this GenTree type differed from all the others. This just normalizes it to be consistent.","Url":"https://github.com/dotnet/coreclr/pull/27583","RelatedDescription":"Closed or merged PR \"Fixing the casing of GT_HWIntrinsic to GT_HWINTRINSIC\" (#27583)"},{"Id":"515738805","IsPullRequest":false,"CreatedAt":"2019-10-31T20:40:08","Actor":"abbotware","Number":"27590","RawContent":null,"Title":"Span CopyTo Span - Crashes .Net","State":"open","Body":"There appears to be some sort of threading issue in the  System.Memory 4.5.3 running on .Net Framework for the following code:\r\n\r\n`Memory<byte> memory = new byte[100];`\r\n`ReadOnlySpan<byte> temp = new byte[30];`\r\n`temp.CopyTo(memory.Span);`\r\n\r\nattached is a sample program that will crash the error: \r\n\r\nThe process was terminated due to an internal error in the .NET Runtime at IP 00007FFE09357BFD (00007FFE091A0000) with exit code 80131506.\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27590","RelatedDescription":"Open issue \"Span CopyTo Span - Crashes .Net\" (#27590)"},{"Id":"515647614","IsPullRequest":true,"CreatedAt":"2019-10-31T18:20:20","Actor":"benaadams","Number":"27588","RawContent":null,"Title":"Enable a faster mod/GetCurrentProcessorId","State":"open","Body":"Ensure `GetCurrentProcessorId()` is in range 0 - ProcCount as with https://github.com/dotnet/coreclr/pull/27543 ProcCount is now a stable value.\r\n\r\nIn `TimerQueueTimer` use `GetCurrentProcessorId()` directly as it no longer needs mod.\r\n\r\nIn `TlsOverPerCoreLockedStacksArrayPool` use a pattern that can be elided by Tier1 Jitting and skip mod if ProcCount < 64\r\n\r\nOriginally I was aiming to use `FastMod`; however I realised the Jit would do it itself at Tier1 as the `readonly static`s would become `const`s\r\n\r\n/cc @stephentoub @jkotas @VSadov ","Url":"https://github.com/dotnet/coreclr/pull/27588","RelatedDescription":"Open PR \"Enable a faster mod/GetCurrentProcessorId\" (#27588)"},{"Id":"515382300","IsPullRequest":true,"CreatedAt":"2019-10-31T17:36:13","Actor":"dotnet-maestro[bot]","Number":"27579","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19531.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27579","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27579)"},{"Id":"515410884","IsPullRequest":true,"CreatedAt":"2019-10-31T16:54:02","Actor":"Dotnet-GitSync-Bot","Number":"27580","RawContent":null,"Title":"Mirror changes from dotnet/corert,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/27580","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,corefx\" (#27580)"},{"Id":"515579525","IsPullRequest":false,"CreatedAt":"2019-10-31T16:38:13","Actor":"echesakovMSFT","Number":"27586","RawContent":null,"Title":"Internal build failure \"Signing validation failed\"","State":"open","Body":"We haven't had a successful official build in coreclr repo since October 29 due to the failure in **Validate Signing Validation** job\r\n\r\nExample of the issue https://dnceng.visualstudio.com/internal/_build/results?buildId=408632\r\n```\r\n  There are unsigned files.\r\n  Total Time: 00:00:34.8090883\r\n  Total Files: 2189, Signed: 380, Unsigned: 14, Skipped: 1573, Excluded: 1245, Skipped & Excluded: 1023\r\nD:\\a\\1\\s\\.packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19463.3\\tools\\SdkTasks\\SigningValidation.proj(56,5): error : Signing validation failed. Check signcheck.errors.log for more information.\r\n##[error].packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19463.3\\tools\\SdkTasks\\SigningValidation.proj(56,5): error : Signing validation failed. Check signcheck.errors.log for more information.\r\n```\r\n\r\n@dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/issues/27586","RelatedDescription":"Open issue \"Internal build failure \"Signing validation failed\"\" (#27586)"},{"Id":"515532904","IsPullRequest":true,"CreatedAt":"2019-10-31T16:27:40","Actor":"ViktorHofer","Number":"27584","RawContent":null,"Title":"Remove obsolete git mirror files","State":"closed","Body":"cc @chcosta who told me that those files aren't used anymore.","Url":"https://github.com/dotnet/coreclr/pull/27584","RelatedDescription":"Closed or merged PR \"Remove obsolete git mirror files\" (#27584)"},{"Id":"515570944","IsPullRequest":true,"CreatedAt":"2019-10-31T16:26:24","Actor":"MichalStrehovsky","Number":"27585","RawContent":null,"Title":"Move p/invoke pregeneration out of single-exe branch","State":"open","Body":"Brings over p/invoke pregeneration from CoreRT into crossgen2.\r\n\r\nThis is just xcopy of the src/tools/crossgen2 directory in the single-exe branch with David's profile data changes omitted. I had to fix a `using` directive in one of the files because a `using` keyword the branch was using got deleted in master.\r\n\r\nThis is basically all that I've done in #26767, #27036, #27109, #27286, #27389, #27436.\r\n\r\nI don't know if there's a way to do this kind of selective merge in git, but I didn't particularly care - most of the interesting history for these files is on the CoreRT side anyway.\r\n\r\nAlso including the change to prestub.cpp that unlocks using the generated p/invokes.\r\n\r\nSeems like getting rid of these being IL stubs will require RyuJIT changes and possibly R2R file format changes and I don't want to do those in a branch that has broken CI.\r\n\r\nCc @dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27585","RelatedDescription":"Open PR \"Move p/invoke pregeneration out of single-exe branch\" (#27585)"},{"Id":"515463119","IsPullRequest":true,"CreatedAt":"2019-10-31T14:09:35","Actor":"TamarChristinaArm","Number":"27582","RawContent":null,"Title":"Arm64: Implement ReverseBitOrder intrinsic","State":"open","Body":"This implements the `ReverseBitOrder` intrinsics for Arm64.\r\n\r\nSee https://github.com/dotnet/corefx/issues/26581 and if first split of #26769\r\n\r\nPS. How do I test this? I have a locally built CoreFX with\r\nthe changes but have been unable to get the dotnet cli to \r\nuse it as per https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md\r\n\r\n/CC @tannergooding @CarolEidt @echesakovMSFT \r\n\r\nThanks,\r\nTamar","Url":"https://github.com/dotnet/coreclr/pull/27582","RelatedDescription":"Open PR \"Arm64: Implement ReverseBitOrder intrinsic\" (#27582)"},{"Id":"515460005","IsPullRequest":true,"CreatedAt":"2019-10-31T14:05:11","Actor":"JesperTreetop","Number":"27581","RawContent":null,"Title":"Prevent DivideByZeroException in EventCounter.ToString()","State":"open","Body":"Maybe it should print something other than 0. Maybe \"Mean\" should be excluded. But at least with this it doesn't divide by zero. Ternary operator in interpolated string is not super readable; didn't know if making the code more descriptive would have performance implications.","Url":"https://github.com/dotnet/coreclr/pull/27581","RelatedDescription":"Open PR \"Prevent DivideByZeroException in EventCounter.ToString()\" (#27581)"},{"Id":"515351227","IsPullRequest":true,"CreatedAt":"2019-10-31T11:19:05","Actor":"PeterSolMS","Number":"27578","RawContent":null,"Title":"Suspension fixes","State":"open","Body":"Two simple fixes to suspension issues seen in GCPerfSim:\r\n\r\n- Insert allow_fgc() call in background_mark_simple - this fixes the cases where there are a ton of GC handles referencing simple objects not containing pointers.\r\n\r\n- Change PING_JIT_TIMEOUT constant from 10 milliseconds to 1 millisecond. This fixes the case where return address hijacking doesn't work quickly, because the hijacked thread doesn't return (e.g. because it's in a loop doing further calls). In this case we have to retry the hijack, and changing the timeout constant makes this happen more quickly.","Url":"https://github.com/dotnet/coreclr/pull/27578","RelatedDescription":"Open PR \"Suspension fixes\" (#27578)"},{"Id":"515299557","IsPullRequest":true,"CreatedAt":"2019-10-31T09:54:35","Actor":"CarolEidt","Number":"27577","RawContent":null,"Title":"Fix struct assignment where types differ","State":"open","Body":"Fix #27551 \r\nThe first commit adds a small repro test case. I verified that it fails on arm/linux without the fix: https://dev.azure.com/dnceng/public/_build/results?buildId=409199&view=logs\r\nThe second commit fixes `impAssignStructPtr` by moving the optimization to eliminate the indirection after the various cases have been handed, and adds a check that the handles are the same.","Url":"https://github.com/dotnet/coreclr/pull/27577","RelatedDescription":"Open PR \"Fix struct assignment where types differ\" (#27577)"},{"Id":"515295546","IsPullRequest":true,"CreatedAt":"2019-10-31T09:48:14","Actor":"davmason","Number":"27576","RawContent":null,"Title":"Enable rejit feature on all cpu architectures","State":"open","Body":"Now that we have precode versioning there is no reason to limit ReJIT to just x86/x64. ","Url":"https://github.com/dotnet/coreclr/pull/27576","RelatedDescription":"Open PR \"Enable rejit feature on all cpu architectures\" (#27576)"},{"Id":"515223944","IsPullRequest":false,"CreatedAt":"2019-10-31T07:31:46","Actor":"NextTurn","Number":"27575","RawContent":null,"Title":"Nullable<T>.Value following Nullable<T>.HasValue can be optimized","State":"open","Body":"The `hasValue` check inside the `Nullable<T>.Value` getter is unnecessary since `hasValue` is readonly.\r\n\r\n```cs\r\nusing System.Runtime.CompilerServices;\r\n\r\nclass Program\r\n{\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    static int? GetNullable() => null;\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    static int DoSomething(int index) => index;\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    static int DoSomethingElse(int index) => index;\r\n\r\n    [MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\n    static int Main()\r\n    {\r\n        _ = System.Console.ReadLine();\r\n        int? i = GetNullable();\r\n        return i.HasValue ? DoSomething(i.Value) : DoSomethingElse(i.Value);\r\n    }\r\n}\r\n```\r\n\r\n```asm\r\nsub     rsp,28h\r\nxor     eax,eax\r\nmov     [rsp+20h],rax\r\n\r\ncall    System.Console.ReadLine()\r\n\r\ncall    Program.GetNullable()\r\nmov     [rsp+20h],rax\r\ncmp     byte ptr [rsp+20h],0\r\njne     short LBL_0\r\n\r\ncmp     byte ptr [rsp+20h],0 ; <=\r\nje      short LBL_1\r\nmov     ecx,[rsp+24h]\r\ncall    Program.DoSomethingElse(Int32)\r\n\r\nnop\r\nadd     rsp,28h\r\nret\r\n\r\nLBL_0:\r\ncmp     byte ptr [rsp+20h],0 ; <=\r\nje      short LBL_2\r\nmov     ecx,[rsp+24h]\r\ncall    Program.DoSomething(Int32)\r\n\r\nnop\r\nadd     rsp,28h\r\nret\r\n\r\n; Do we need two identical code blocks?\r\n\r\nLBL_1:\r\ncall    System.ThrowHelper.ThrowInvalidOperationException_InvalidOperation_NoValue()\r\nint     3\r\n\r\nLBL_2:\r\ncall    System.ThrowHelper.ThrowInvalidOperationException_InvalidOperation_NoValue()\r\nint     3\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27575","RelatedDescription":"Open issue \"Nullable<T>.Value following Nullable<T>.HasValue can be optimized\" (#27575)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"515889929","IsPullRequest":true,"CreatedAt":"2019-11-01T03:30:13","Actor":"dotnet-maestro[bot]","Number":"13014","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19531.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19531.8 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13014","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13014)"},{"Id":"515691760","IsPullRequest":true,"CreatedAt":"2019-11-01T02:48:26","Actor":"dotnet-maestro[bot]","Number":"13010","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.7\r\n- **Date Produced**: 11/1/2019 1:04 AM\r\n- **Commit**: e89f2f450263f865f20c2c7b77f4e30daedc7c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13010","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13010)"},{"Id":"515716363","IsPullRequest":true,"CreatedAt":"2019-10-31T22:30:03","Actor":"mmitche","Number":"13011","RawContent":null,"Title":"Update branding to preview3","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13011","RelatedDescription":"Closed or merged PR \"Update branding to preview3\" (#13011)"},{"Id":"515056603","IsPullRequest":true,"CreatedAt":"2019-10-31T21:06:01","Actor":"wli3","Number":"13003","RawContent":null,"Title":"Remove signature on MAC host for dotnet tools","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Closed or merged PR \"Remove signature on MAC host for dotnet tools\" (#13003)"},{"Id":"515745548","IsPullRequest":true,"CreatedAt":"2019-10-31T21:05:16","Actor":"dotnet-maestro[bot]","Number":"13013","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191031.2\r\n- **Date Produced**: 10/31/2019 8:09 PM\r\n- **Commit**: 9e9f93d44c3a1b911df3e338aa4fb163c87212a8\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19531.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13013","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13013)"},{"Id":"515737459","IsPullRequest":true,"CreatedAt":"2019-10-31T20:52:03","Actor":"donnie-msft","Number":"13012","RawContent":null,"Title":"--skip-duplicate added to `dotnet nuget push` parsing","State":"open","Body":"Fix for https://github.com/NuGet/Home/issues/8778\r\n\r\nNew option --skip-duplicate needs to be added to the dotnet parser for `nuget push` to support <tab> auto-completion and telemetry.\r\n\r\nThe [NuGet code changes](https://github.com/NuGet/NuGet.Client/pull/3083) to add this command were inserted into dotnet/cli [release/3.1.1xx](https://github.com/dotnet/cli/pull/12965)\r\n\r\n//cc @livarcocc @rrelyea","Url":"https://github.com/dotnet/cli/pull/13012","RelatedDescription":"Open PR \"--skip-duplicate added to `dotnet nuget push` parsing\" (#13012)"},{"Id":"515690786","IsPullRequest":true,"CreatedAt":"2019-10-31T19:33:36","Actor":"crummel","Number":"13009","RawContent":null,"Title":"Source-build fixes for 3.0.x.","State":"open","Body":"Retargeted version of https://github.com/dotnet/cli/pull/12781.\r\n\r\n- Fixed PackageVersion property name.\r\n- Excluded a couple more projects from source-build.","Url":"https://github.com/dotnet/cli/pull/13009","RelatedDescription":"Open PR \"Source-build fixes for 3.0.x.\" (#13009)"},{"Id":"515027000","IsPullRequest":true,"CreatedAt":"2019-10-31T18:49:52","Actor":"dotnet-maestro[bot]","Number":"13001","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19530.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13001","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13001)"},{"Id":"515442387","IsPullRequest":true,"CreatedAt":"2019-10-31T14:20:34","Actor":"dotnet-maestro[bot]","Number":"13008","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 11:54 AM\r\n- **Commit**: 0faf33914345956525640464c854cf85da5a6573\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13008","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13008)"},{"Id":"515305447","IsPullRequest":true,"CreatedAt":"2019-10-31T10:03:46","Actor":"v-zbsail","Number":"13007","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13007","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031\" (#13007)"},{"Id":"515206602","IsPullRequest":true,"CreatedAt":"2019-10-31T07:25:29","Actor":"dotnet-maestro[bot]","Number":"13006","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.11\r\n- **Date Produced**: 10/31/2019 5:13 AM\r\n- **Commit**: 63c802bae20b3cd5e704d6dd3ed90bc8225bc60e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13006","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13006)"},{"Id":"515138069","IsPullRequest":true,"CreatedAt":"2019-10-31T04:10:27","Actor":"dotnet-maestro[bot]","Number":"13005","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005)"},{"Id":"514208619","IsPullRequest":true,"CreatedAt":"2019-10-31T03:48:02","Actor":"dotnet-maestro-bot","Number":"12994","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"closed","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994)"},{"Id":"515081226","IsPullRequest":true,"CreatedAt":"2019-10-31T01:35:28","Actor":"dotnet-maestro[bot]","Number":"13004","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004)"},{"Id":"514954030","IsPullRequest":true,"CreatedAt":"2019-10-31T01:02:27","Actor":"dotnet-maestro[bot]","Number":"13000","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.8\r\n- **Date Produced**: 10/30/2019 11:32 PM\r\n- **Commit**: 55c8dd25c3f337f9e7098ad787534bd04454b113\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13000","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13000)"},{"Id":"515027110","IsPullRequest":true,"CreatedAt":"2019-10-30T23:25:48","Actor":"dotnet-maestro[bot]","Number":"13002","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.6\r\n- **Date Produced**: 10/30/2019 9:55 PM\r\n- **Commit**: 958de2e07848f1a1ea808ba7999432b1e257d77e\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.6\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13002","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13002)"},{"Id":"514354126","IsPullRequest":true,"CreatedAt":"2019-10-30T21:00:37","Actor":"dotnet-maestro[bot]","Number":"12996","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12996","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12996)"},{"Id":"514849640","IsPullRequest":true,"CreatedAt":"2019-10-30T18:00:35","Actor":"dotnet-maestro[bot]","Number":"12999","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.3\r\n- **Date Produced**: 10/30/2019 4:40 PM\r\n- **Commit**: 8e3075d3915a55f90b2c9e35d975e476964cd014\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12999","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12999)"},{"Id":"514583177","IsPullRequest":true,"CreatedAt":"2019-10-30T12:10:40","Actor":"dotnet-maestro[bot]","Number":"12998","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.1\r\n- **Date Produced**: 10/30/2019 10:32 AM\r\n- **Commit**: 6a09111e0fc54a895f6975af796c8133fdd47fd6\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12998","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12998)"},{"Id":"514410126","IsPullRequest":true,"CreatedAt":"2019-10-30T06:00:27","Actor":"dotnet-maestro[bot]","Number":"12997","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.5\r\n- **Date Produced**: 10/30/2019 4:44 AM\r\n- **Commit**: 2aa52a135c1a1fc0d6cebbc333af20571f5057e9\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12997","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12997)"},{"Id":"514331983","IsPullRequest":true,"CreatedAt":"2019-10-30T01:55:29","Actor":"dotnet-maestro[bot]","Number":"12995","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995)"},{"Id":"514088711","IsPullRequest":true,"CreatedAt":"2019-10-29T20:36:54","Actor":"dotnet-maestro[bot]","Number":"12992","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.1\r\n- **Date Produced**: 10/29/2019 4:57 PM\r\n- **Commit**: 5c9dd04241f307f1aa6b3643d5e07ea89a1dad4a\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19529.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12992","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12992)"},{"Id":"513870495","IsPullRequest":true,"CreatedAt":"2019-10-29T20:08:07","Actor":"dotnet-bot","Number":"12991","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12991","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12991)"},{"Id":"514126953","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:32","Actor":"dotnet-maestro[bot]","Number":"12993","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993)"},{"Id":"513732709","IsPullRequest":true,"CreatedAt":"2019-10-29T07:40:28","Actor":"dotnet-maestro[bot]","Number":"12990","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.8\r\n- **Date Produced**: 10/29/2019 6:20 AM\r\n- **Commit**: 471e4710a818849eaf22c5977281d10fd6758616\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19528.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12990","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12990)"},{"Id":"513655119","IsPullRequest":true,"CreatedAt":"2019-10-29T02:55:30","Actor":"dotnet-maestro[bot]","Number":"12989","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/29/2019 1:48 AM\r\n- **Commit**: 2163fbce7a27c22ca133f7bce59781aac7ba6044\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19528.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12989","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12989)"},{"Id":"512994628","IsPullRequest":true,"CreatedAt":"2019-10-29T00:58:17","Actor":"dotnet-maestro[bot]","Number":"12988","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.2\r\n- **Date Produced**: 10/28/2019 8:47 PM\r\n- **Commit**: 334812443d8bb11afa51a7efd2f8de83e321e6e1\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19528.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12988","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12988)"},{"Id":"512815421","IsPullRequest":true,"CreatedAt":"2019-10-26T10:15:26","Actor":"dotnet-maestro[bot]","Number":"12987","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191025.8\r\n- **Date Produced**: 10/26/2019 9:01 AM\r\n- **Commit**: 7ef5dd3af4868fcd69778c922b48e1f429fb0aa6\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19525.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12987","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12987)"},{"Id":"512758072","IsPullRequest":true,"CreatedAt":"2019-10-26T04:17:19","Actor":"dotnet-maestro[bot]","Number":"12985","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191025.7\r\n- **Date Produced**: 10/26/2019 2:56 AM\r\n- **Commit**: e48fd678f261a8e0aeb7a4a968b353f922f42a69\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19525.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12985","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12985)"},{"Id":"512759931","IsPullRequest":true,"CreatedAt":"2019-10-26T01:28:42","Actor":"dotnet-maestro[bot]","Number":"12986","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/25/2019 10:26 PM\r\n- **Commit**: 5672978d912db81b4b677fddff264907a47ec9a8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19525.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.17 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12986","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12986)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"closed","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Closed or merged PR \"Source-build improvements.\" (#1612)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"},{"Id":"511908253","IsPullRequest":true,"CreatedAt":"2019-10-24T12:36:46","Actor":"dotnet-maestro[bot]","Number":"1626","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.8\r\n- **Date Produced**: 10/23/2019 8:34 PM\r\n- **Commit**: be22fd85b2ceb377de87e6bda006f819569fec3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1626)"},{"Id":"511790862","IsPullRequest":false,"CreatedAt":"2019-10-24T08:32:00","Actor":"jrahma","Number":"1625","RawContent":null,"Title":"Easier way to upload Images using PostAsync","State":"open","Body":"Hi,\r\n\r\nIt will be great if you provide an easier way to directly uplaod images using PosyAsync without having to use MediaTypeHeaderValue\r\n\r\nFor example:\r\n\r\n```\r\nvar content = new FormUrlEncodedContent(new[]\r\n{\r\n    new KeyValuePair<string, string>(\"channel\", TextBoxNewChannelName.Text),\r\n    new KeyValuePair<string, ImageStream>(\"logo\", channel_logo),\r\n});\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1625","RelatedDescription":"Open issue \"Easier way to upload Images using PostAsync\" (#1625)"},{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"515880982","IsPullRequest":false,"CreatedAt":"2019-11-01T03:25:58","Actor":"VincentBu","Number":"42285","RawContent":null,"Title":"Test failed: System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode","State":"closed","Body":"**Job:**\r\n[corefx-ci #20191031.66](https://dnceng.visualstudio.com/public/_build/results?buildId=410818)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/0ae3a0ed-ee54-473f-928f-d57f7a804b47/workitems/System.Threading.AccessControl.Tests/console\r\n\r\n**configuration:**\r\nall Windows configurations\r\n\r\n**Failed tests:**\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\r\n\r\n**Log:**\r\n```\r\nSystem.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -2147483648) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: -1) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(mode: 2147483647) [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.ArgumentOutOfRangeException)\r\n      Actual:   (No exception was thrown)\r\n      Stack Trace:\r\n        /_/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs(63,0): at System.AssertExtensions.Throws[T](String expectedParamName, Action action)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(100,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode(EventResetMode mode)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: AutoReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '18672432e16f4ebcbbf9309ed5be2dc4' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n    System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(initialState: True, mode: ManualReset, accessControl: Deny, rights: FullControl) [FAIL]\r\n      System.UnauthorizedAccessException : Access to the path '55bca2e7b82246bd826b2c523b8097aa' is denied.\r\n      Stack Trace:\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.Windows.cs(69,0): at System.Threading.EventWaitHandle.OpenExistingWorker(String name, EventWaitHandle& result)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/EventWaitHandle.cs(34,0): at System.Threading.EventWaitHandle.OpenExisting(String name)\r\n        /_/src/System.Threading.AccessControl/src/System/Threading/EventWaitHandleAcl.cs(66,0): at System.Threading.EventWaitHandleAcl.Create(Boolean initialState, EventResetMode mode, String name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(166,0): at System.Threading.Tests.ThreadingAclExtensionsTests.CreateAndVerifyEventWaitHandle(Boolean initialState, EventResetMode mode, EventWaitHandleSecurity expectedSecurity)\r\n        /_/src/System.Threading.AccessControl/tests/ThreadingAclExtensionsTests.cs(124,0): at System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_SpecificParameters(Boolean initialState, EventResetMode mode, AccessControlType accessControl, EventWaitHandleRights rights)\r\n  Finished:    System.Threading.AccessControl.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Threading.AccessControl.Tests  Total: 15, Errors: 0, Failed: 6, Skipped: 0, Time: 0.402s\r\n----- end Fri 11/01/2019  1:58:28.33 ----- exit code 1\r\n```","Url":"https://github.com/dotnet/corefx/issues/42285","RelatedDescription":"Closed issue \"Test failed: System.Threading.Tests.ThreadingAclExtensionsTests.EventWaitHandle_Create_InvalidMode\" (#42285)"},{"Id":"515875528","IsPullRequest":true,"CreatedAt":"2019-11-01T02:36:55","Actor":"layomia","Number":"42284","RawContent":null,"Title":"[release/3.1] Honor dictionary key policy when entry value is null (#42267)","State":"open","Body":"Ports https://github.com/dotnet/corefx/pull/42267 to 3.1\r\n\r\n## Description\r\nFixes bug where dictionary key policies were not being honored when serializing dictionary entries with null values.\r\n\r\n## Customer Impact\r\n\r\nCorrect serialization in the scenario described. \r\nFixes https://github.com/dotnet/corefx/issues/42220.\r\n\r\n## Regression?\r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. Targeted fix with test cases.","Url":"https://github.com/dotnet/corefx/pull/42284","RelatedDescription":"Open PR \"[release/3.1] Honor dictionary key policy when entry value is null (#42267)\" (#42284)"},{"Id":"515617041","IsPullRequest":true,"CreatedAt":"2019-11-01T02:27:19","Actor":"layomia","Number":"42267","RawContent":null,"Title":"Honor dictionary key policy when entry value is null","State":"closed","Body":"Addresses https://github.com/dotnet/corefx/issues/42220 for master/5.0.","Url":"https://github.com/dotnet/corefx/pull/42267","RelatedDescription":"Closed or merged PR \"Honor dictionary key policy when entry value is null\" (#42267)"},{"Id":"515868860","IsPullRequest":false,"CreatedAt":"2019-11-01T02:12:53","Actor":"stephentoub","Number":"42283","RawContent":null,"Title":"Proposal: ChannelReader<T>.TryPeek","State":"open","Body":"Per comment at https://github.com/dotnet/corefx/issues/41819#issuecomment-542819724, we should consider adding:\r\n```C#\r\nnamespace System.Threading.Channels\r\n{\r\n    public abstract partial class ChannelReader<T>\r\n    {\r\n        public virtual bool TryPeek([MaybeNullWhen(false)] out T item)\r\n        {\r\n            item = default!;\r\n            return false;\r\n        }\r\n        ...\r\n    }\r\n}\r\n```\r\nWe'd need to confirm, but I believe it should be possible to implement this on all of the built-in channel implementations.","Url":"https://github.com/dotnet/corefx/issues/42283","RelatedDescription":"Open issue \"Proposal: ChannelReader<T>.TryPeek\" (#42283)"},{"Id":"515862987","IsPullRequest":true,"CreatedAt":"2019-11-01T01:49:07","Actor":"Marusyk","Number":"42282","RawContent":null,"Title":"Consolidate .netcoreapp.cs test files in System.Text.Encoding","State":"open","Body":"Contributes #41821\r\n\r\nPlease review\r\nThank you in advance","Url":"https://github.com/dotnet/corefx/pull/42282","RelatedDescription":"Open PR \"Consolidate .netcoreapp.cs test files in System.Text.Encoding\" (#42282)"},{"Id":"515791946","IsPullRequest":true,"CreatedAt":"2019-11-01T00:48:03","Actor":"steveharter","Number":"42279","RawContent":null,"Title":"Extend Json BOM test","State":"closed","Body":"Modify test added recently in https://github.com/dotnet/corefx/commit/9009ad1ebf44656a60f306a114ecdbd64c6a1d23 to verify each element instead of just the first and last. This better verifies that no bytes were mangled.\r\n\r\nTest speed went up slightly from .5 to .7 seconds (debug build).","Url":"https://github.com/dotnet/corefx/pull/42279","RelatedDescription":"Closed or merged PR \"Extend Json BOM test\" (#42279)"},{"Id":"515835904","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:40","Actor":"carlossanlop","Number":"42281","RawContent":null,"Title":"Add Mutex creation extension methods that take an ACL","State":"open","Body":"Approved API Proposal: #41662\r\nRelated PR for EventWaitHandle: https://github.com/dotnet/corefx/pull/42213\r\n\r\n### Description\r\nWe don't currently have a way to create a synchronization object with a given ACL in .NET Core. We can modify the ACL, but it would be more secure to have the proper ACL on the object from the start.\r\n\r\nThe related ACLs are already exposed in the `System.Threading.AccessControl` assembly , we should add creation extension methods to the existing `ThreadingAclExtensions`.\r\n\r\n### Customer impact\r\nBefore this change, customers had to create a `Mutex`, then set its ACLs. This presents a few problems:\r\n\r\n- Potential security hole as mutexes can be accessed between creation and modification.\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\nThis change addresses those problems by adding a new extension method that allows creating a `Mutex` and ensuring the provided ACLs are set during creation.\r\n\r\nIf time permits it, we would try to backport this change to 3.1.","Url":"https://github.com/dotnet/corefx/pull/42281","RelatedDescription":"Open PR \"Add Mutex creation extension methods that take an ACL\" (#42281)"},{"Id":"515617310","IsPullRequest":true,"CreatedAt":"2019-10-31T22:46:29","Actor":"eiriktsarpalis","Number":"42268","RawContent":null,"Title":"HttpStress: add docker documentation","State":"closed","Body":"Per @davidsh's request adding documentation on running the stress suite in docker-compose. Minor changes in the linux stress pipeline to improve configurability.","Url":"https://github.com/dotnet/corefx/pull/42268","RelatedDescription":"Closed or merged PR \"HttpStress: add docker documentation\" (#42268)"},{"Id":"515723623","IsPullRequest":true,"CreatedAt":"2019-10-31T22:26:18","Actor":"bartonjs","Number":"42274","RawContent":null,"Title":" Change master from testing Ubuntu 19.04 to Ubuntu 19.10","State":"closed","Body":"After the image name is verified by the PR test run I'll remove the second commit.","Url":"https://github.com/dotnet/corefx/pull/42274","RelatedDescription":"Closed or merged PR \" Change master from testing Ubuntu 19.04 to Ubuntu 19.10\" (#42274)"},{"Id":"515772872","IsPullRequest":true,"CreatedAt":"2019-10-31T21:56:09","Actor":"ericstj","Number":"42278","RawContent":null,"Title":"Use SDK from bootstrapped CLI rather than testhost","State":"open","Body":"With this I wonder if we can get away with not even copying the SDK to the testhost folder 🤔 ","Url":"https://github.com/dotnet/corefx/pull/42278","RelatedDescription":"Open PR \"Use SDK from bootstrapped CLI rather than testhost\" (#42278)"},{"Id":"515739413","IsPullRequest":true,"CreatedAt":"2019-10-31T20:55:11","Actor":"ericstj","Number":"42277","RawContent":null,"Title":"Use PackageLicenseExpression instead of URL","State":"open","Body":"Fixes #42264\r\n\r\n## Description\r\nPackage licenses refer to the corefx repository URL.  We intended to adopt the new feature earlier this release but had to roll it back due to a bug in NuGet.  We never undid the rollback after introducing a workaround.\r\n\r\n## Customer Impact\r\nNuGet doesn't classify our license as MIT, URL may be disrupted by repo-consolidation resulting in broken links resulting in 404's in the future.\r\n\r\n## Regression?\r\nNo\r\n\r\n## Risk\r\nLow.  This is a build/package-metadata-only change.  If it builds it should be good, other parts of the stack have been using this feature without issue.","Url":"https://github.com/dotnet/corefx/pull/42277","RelatedDescription":"Open PR \"Use PackageLicenseExpression instead of URL\" (#42277)"},{"Id":"515724194","IsPullRequest":false,"CreatedAt":"2019-10-31T20:29:59","Actor":"Pilchie","Number":"42275","RawContent":null,"Title":"Socket errors in a reverse proxy","State":"open","Body":"_From @colutti on Tuesday, October 29, 2019 4:36:24 PM_\r\n\r\nWe have developed a reverse proxy to send requests to different endpoints. It has been working so far, but we see a lot of socket errors with timeout exceptions. We are using a singleton instance of httpclient but the issue still happens. \r\n\r\nThe code with the repro steps can be found here:\r\n\r\nhttps://github.com/colutti/tr-reverse-proxy\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/Extensions#2573_","Url":"https://github.com/dotnet/corefx/issues/42275","RelatedDescription":"Open issue \"Socket errors in a reverse proxy\" (#42275)"},{"Id":"515710749","IsPullRequest":true,"CreatedAt":"2019-10-31T20:11:54","Actor":"wfurt","Number":"42273","RawContent":null,"Title":"[release/3.1] Move CertificateValidationRemoteServer_EndToEnd_Ok test to Outerloop","State":"closed","Body":"port for from #42242  to kick CertificateValidationRemoteServer_EndToEnd_Ok to outerloop.","Url":"https://github.com/dotnet/corefx/pull/42273","RelatedDescription":"Closed or merged PR \"[release/3.1] Move CertificateValidationRemoteServer_EndToEnd_Ok test to Outerloop\" (#42273)"},{"Id":"515616017","IsPullRequest":true,"CreatedAt":"2019-10-31T19:43:55","Actor":"ericstj","Number":"42266","RawContent":null,"Title":"Fix ILLink when run from VS/desktop/direct","State":"closed","Body":"ILLink needs the path to dotnet.exe and was relying on an optional\r\nenvironment variable to find it.\r\n\r\nInstead use the NetCoreRoot property set by the SDK.\r\n\r\nThis is a direct copy of\r\nhttps://github.com/dotnet/sdk/blob/b28a8efbfb30d84019351abb3aa9a2b15e008662/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.ILLink.targets#L74-L80\r\n\r\nWe should try to eliminate our custom illink.targets and just configure\r\nthe built in ones if we can.","Url":"https://github.com/dotnet/corefx/pull/42266","RelatedDescription":"Closed or merged PR \"Fix ILLink when run from VS/desktop/direct\" (#42266)"},{"Id":"515627250","IsPullRequest":true,"CreatedAt":"2019-10-31T19:42:43","Actor":"ericstj","Number":"42271","RawContent":null,"Title":"Use PackageLicenseExpression instead of URL","State":"closed","Body":"Issue https://github.com/dotnet/corefx/issues/42264\r\n","Url":"https://github.com/dotnet/corefx/pull/42271","RelatedDescription":"Closed or merged PR \"Use PackageLicenseExpression instead of URL\" (#42271)"},{"Id":"515574758","IsPullRequest":true,"CreatedAt":"2019-10-31T19:06:20","Actor":"JuditRose","Number":"42263","RawContent":null,"Title":"Added EditorAttribute on Font.Name to be able to use in .NET Core Winforms","State":"closed","Body":"Added EditorAttribute for Font.Name so it gets compiled into .NET Core version of Winforms.\r\n\r\nThere is no straightforward solution to add this without implementing a new feature in TypeDescriptor, so we decided to with the safer and quicker solution.\r\n","Url":"https://github.com/dotnet/corefx/pull/42263","RelatedDescription":"Closed or merged PR \"Added EditorAttribute on Font.Name to be able to use in .NET Core Winforms\" (#42263)"},{"Id":"515440371","IsPullRequest":true,"CreatedAt":"2019-10-31T18:39:58","Actor":"dotnet-maestro[bot]","Number":"42260","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.10\r\n- **Date Produced**: 10/31/2019 8:47 AM\r\n- **Commit**: d7830341bb37df45e96f3677e2e4c74d4869fc35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19530.10\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha.1.19530.10\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha.1.19530.10\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha.1.19531.1\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20191030.2\r\n- **Date Produced**: 10/30/2019 9:01 PM\r\n- **Commit**: 5837c15a451b21879f07154522e61a747aa52bb3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19530.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42260","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx dotnet/standard\" (#42260)"},{"Id":"515656758","IsPullRequest":false,"CreatedAt":"2019-10-31T18:36:21","Actor":"iolazarc","Number":"42272","RawContent":null,"Title":"MemoryCache erroneously reports successful additions after it's been disposed","State":"open","Body":"System.Runtime.Caching.MemoryCache will report successful addition of a new item to the cache for the Add and AddOrGetExisting methods after Dispose has been called on the instance.\r\nThis is in violation of the documentation which states \"true if insertion succeeded, or false if there is an already an entry in the cache that has the same key as item.\" (for Add). For AddOrGetExisting it gets more complicated as according to the documentation (\"If a matching cache entry already exists, a cache entry; otherwise, null.\") it's impossible to tell if the addition failed, rather than was satisfied by an existing cache entry.\r\nThis is particularly troublesome because the object will dispose itself if it runs into errors in the some of the background threads/tasks used to maintain the cache.\r\nExample:\r\n```c#\r\nvar cache = new System.Runtime.Caching.MemoryCache(\"test\"); \r\n\tvar policy = new  System.Runtime.Caching.CacheItemPolicy\r\n            {\r\n                SlidingExpiration = TimeSpan.FromMinutes(60),\r\n            };\r\n\tvar res = cache.Add(\"testkey1\", \"testval1\", policy);\r\n\tConsole.WriteLine(res);\r\n\tConsole.WriteLine(cache.GetCount());\r\n\tcache.Dispose();\r\n\tres = cache.Add(\"testkey2\", \"testval2\", policy);\r\n\tConsole.WriteLine(res);\r\n\tConsole.WriteLine(cache.GetCount());\r\n```\r\nOutput would currently be \"True, 1, True, 0\" with no exceptions being thrown.\r\nI would propose that ObjectDisposedException should be thrown when any add/get/remove operation is attempted for a disposed MemoryCache instance.\r\nI would also propose exposing some properties to show whether the object is disposed (and for more information, why it disposed itself)","Url":"https://github.com/dotnet/corefx/issues/42272","RelatedDescription":"Open issue \"MemoryCache erroneously reports successful additions after it's been disposed\" (#42272)"},{"Id":"515624784","IsPullRequest":true,"CreatedAt":"2019-10-31T17:47:23","Actor":"ViktorHofer","Number":"42270","RawContent":null,"Title":"Add illink task subscription metadata","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42270","RelatedDescription":"Closed or merged PR \"Add illink task subscription metadata\" (#42270)"},{"Id":"515581767","IsPullRequest":true,"CreatedAt":"2019-10-31T17:36:52","Actor":"stephentoub","Number":"42265","RawContent":null,"Title":"Disable another static analysis rule","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42265","RelatedDescription":"Closed or merged PR \"Disable another static analysis rule\" (#42265)"},{"Id":"515618930","IsPullRequest":false,"CreatedAt":"2019-10-31T17:34:44","Actor":"ericstj","Number":"42269","RawContent":null,"Title":"Eliminate duplication with shipping ILLink targets","State":"open","Body":"We should avoid defining our own ILLink targets and instead extend/configure the shipping ones.  We still have a lot that is unique to corefx (trimming libraries not apps, diffing the result) but we can avoid bugs by sharing the invokation logic from the official targets.  See https://github.com/dotnet/corefx/pull/42266\r\n\r\n/cc @sbomer @ViktorHofer @eiriktsarpalis ","Url":"https://github.com/dotnet/corefx/issues/42269","RelatedDescription":"Open issue \"Eliminate duplication with shipping ILLink targets\" (#42269)"},{"Id":"515800075","IsPullRequest":false,"CreatedAt":"2019-10-31T16:45:05","Actor":"Samirat","Number":"42280","RawContent":null,"Title":"TimeSpan wrap-around error / does not throw an Overflow Exception","State":"open","Body":"This is a really easy repro:\r\nTimeSpan.FromMinutes(TimeSpan.MaxValue.TotalMinutes)\r\nreturns\r\n-10675199.02:48:05.4775808\r\n\r\nAlso true for seconds, hours, and days\r\nMajor problem for anyone serializing TimeSpan.MaxValue as any of these types\r\n\r\nThis occurs on .NET Core 3.0 but not 2.2.","Url":"https://github.com/dotnet/corefx/issues/42280","RelatedDescription":"Open issue \"TimeSpan wrap-around error / does not throw an Overflow Exception\" (#42280)"},{"Id":"515526680","IsPullRequest":true,"CreatedAt":"2019-10-31T16:40:33","Actor":"ViktorHofer","Number":"42261","RawContent":null,"Title":"Import root D.B.targets and set condition","State":"closed","Body":"Import the runtime root D.B.targets file and set a condition to not import the Arcade SDK in the root scripts as corefx needs to do work before it can import it. That's the extension point in the runtime repo: https://github.com/dotnet/consolidation/blob/master/template/Directory.Build.props#L11.","Url":"https://github.com/dotnet/corefx/pull/42261","RelatedDescription":"Closed or merged PR \"Import root D.B.targets and set condition\" (#42261)"},{"Id":"515580661","IsPullRequest":false,"CreatedAt":"2019-10-31T16:39:45","Actor":"ericstj","Number":"42264","RawContent":null,"Title":"Corefx packages aren't using License expression","State":"open","Body":"Something regressed in the build of our packages in that they only contain licenseUrl and not license expression.\r\n\r\nhttps://docs.microsoft.com/en-us/nuget/reference/nuspec#license\r\n\r\nWe should try to fix this for 3.1 if we can.","Url":"https://github.com/dotnet/corefx/issues/42264","RelatedDescription":"Open issue \"Corefx packages aren't using License expression\" (#42264)"},{"Id":"515550718","IsPullRequest":true,"CreatedAt":"2019-10-31T15:59:47","Actor":"madenwala","Number":"42262","RawContent":null,"Title":"Add new method for parameterless Listen()","State":"open","Body":"This adds a parameterless overload for Listen(int) which passes in int.MaxValue as the default value. I changed existing tests that were explicitly using int.MaxValue or a random value to use the new overload with no parameter.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/9680","Url":"https://github.com/dotnet/corefx/pull/42262","RelatedDescription":"Open PR \"Add new method for parameterless Listen()\" (#42262)"},{"Id":"515375224","IsPullRequest":true,"CreatedAt":"2019-10-31T13:36:16","Actor":"dotnet-maestro[bot]","Number":"42258","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19530.15\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42258","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#42258)"},{"Id":"515380767","IsPullRequest":true,"CreatedAt":"2019-10-31T13:19:46","Actor":"JesperTreetop","Number":"42259","RawContent":null,"Title":"Prevent DivideByZeroException in EventCounter.ToString()","State":"closed","Body":"Maybe it should print something other than 0. Maybe \"Mean\" should be excluded. But at least with this it doesn't divide by zero.","Url":"https://github.com/dotnet/corefx/pull/42259","RelatedDescription":"Closed or merged PR \"Prevent DivideByZeroException in EventCounter.ToString()\" (#42259)"},{"Id":"515189620","IsPullRequest":true,"CreatedAt":"2019-10-31T11:37:24","Actor":"safern","Number":"42256","RawContent":null,"Title":"Update System.Reflection.TypeExtensions ref assembly for nullable","State":"closed","Body":"In PR: https://github.com/dotnet/corefx/pull/42159 this were missed to update in the ref assembly.\r\n\r\ncc: @danmosemsft @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/42256","RelatedDescription":"Closed or merged PR \"Update System.Reflection.TypeExtensions ref assembly for nullable\" (#42256)"},{"Id":"515302212","IsPullRequest":true,"CreatedAt":"2019-10-31T11:36:13","Actor":"Dotnet-GitSync-Bot","Number":"42257","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corefx/pull/42257","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#42257)"},{"Id":"515166571","IsPullRequest":false,"CreatedAt":"2019-10-31T05:02:58","Actor":"davidfowl","Number":"42255","RawContent":null,"Title":"API Proposal: Utf8Parser overloads for ReadOnlySequence<byte>","State":"open","Body":"These text parsers are very convenient when parsing text based protocols (like HTTP/1.1 and RESP). It would be great to have overloads of the existing APIs that support `ReadOnlySequence<byte>`. I end up writing code like this:\r\n\r\n```C#\r\nprivate static bool TryParse(in ReadOnlySequence<byte> bytes, out int value, out int bytesConsumed)\r\n{\r\n    if (bytes.IsSingleSegment)\r\n    {\r\n        if (!Utf8Parser.TryParse(bytes.FirstSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        Span<byte> textSpan= stackalloc byte[128];\r\n        bytes.CopyTo(textSpan);\r\n\r\n        if (!Utf8Parser.TryParse(textSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n```\r\n\r\nI would be great if this was built into the existing parser.\r\n\r\n```C#\r\npublic partial static class Utf8Parser\r\n{\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out bool value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out byte value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out DateTime value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out DateTimeOffset value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out decimal value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out double value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out Guid value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out short value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out int value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out long value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out sbyte value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out float value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out TimeSpan value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out ushort value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out uint value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out ulong value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n}\r\n\r\n```\r\n\r\ncc @ahsonkhan @GrabYourPitchforks \r\n","Url":"https://github.com/dotnet/corefx/issues/42255","RelatedDescription":"Open issue \"API Proposal: Utf8Parser overloads for ReadOnlySequence<byte>\" (#42255)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"515869226","IsPullRequest":true,"CreatedAt":"2019-11-01T02:14:26","Actor":"tmat","Number":"39627","RawContent":null,"Title":"Do not fail fast on cancellation","State":"open","Body":"Crash dumps from Watson show that we fail fast when OperationCancelledException or TaskCanceledException is thrown while reading assets in ServiceHub process.","Url":"https://github.com/dotnet/roslyn/pull/39627","RelatedDescription":"Open PR \"Do not fail fast on cancellation\" (#39627)"},{"Id":"515843540","IsPullRequest":true,"CreatedAt":"2019-11-01T00:39:50","Actor":"tmat","Number":"39626","RawContent":null,"Title":"Do not report EnC diagnostics when EnC is disabled","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/39046.\r\n\r\nDisable all EnC functionality, including reporting warnings when changes are made while app is running, when EnC is disabled.\r\n\r\nIn addition, change the classification of EnC warnings to \"warning\" from \"rude edit\".","Url":"https://github.com/dotnet/roslyn/pull/39626","RelatedDescription":"Open PR \"Do not report EnC diagnostics when EnC is disabled\" (#39626)"},{"Id":"515843112","IsPullRequest":true,"CreatedAt":"2019-11-01T00:38:44","Actor":"gafter","Number":"39625","RawContent":null,"Title":"Handle dependent slots in pattern-matching null tests.","State":"open","Body":"Fixes #39264","Url":"https://github.com/dotnet/roslyn/pull/39625","RelatedDescription":"Open PR \"Handle dependent slots in pattern-matching null tests.\" (#39625)"},{"Id":"515833302","IsPullRequest":false,"CreatedAt":"2019-11-01T00:13:18","Actor":"gafter","Number":"39624","RawContent":null,"Title":"When a variable is known to be null, its dependent fields can be treated as non-null","State":"open","Body":"In researching https://github.com/dotnet/roslyn/issues/39264 I discovered the following issue, which is the same issue without pattern-matching.  There is some code in `NullableWalker` to support this but not a complete solution, added during the fix for https://github.com/dotnet/roslyn/issues/39264.  See a mention of this issue in the code.\r\n\r\n```csharp\r\n        [Fact]\r\n        [WorkItem(39624, \"https://github.com/dotnet/roslyn/issues/39624\")]\r\n        public void NullTestVsDependentSlots_01()\r\n        {\r\n            CSharpCompilation c = CreateNullableCompilation(@\"\r\n#nullable enable\r\nclass C\r\n{\r\n    string? field = string.Empty;\r\n\r\n    void M1(C c)\r\n    {\r\n        if (c != null)\r\n        {\r\n            if (c.field == null) return;\r\n        }\r\n        if (c == null) return;\r\n        c.field.ToString(); // improperly reports possible null dereference of c.field\r\n    }\r\n}\r\n\");\r\n            c.VerifyDiagnostics(\r\n                );\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39624","RelatedDescription":"Open issue \"When a variable is known to be null, its dependent fields can be treated as non-null\" (#39624)"},{"Id":"515829272","IsPullRequest":true,"CreatedAt":"2019-11-01T00:03:49","Actor":"dotnet-bot","Number":"39623","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39623","RelatedDescription":"Open PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39623)"},{"Id":"515828931","IsPullRequest":true,"CreatedAt":"2019-11-01T00:03:06","Actor":"dotnet-bot","Number":"39622","RawContent":null,"Title":"Merge release/dev16.4-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39622","RelatedDescription":"Open PR \"Merge release/dev16.4-vs-deps to master-vs-deps\" (#39622)"},{"Id":"515828520","IsPullRequest":true,"CreatedAt":"2019-11-01T00:02:15","Actor":"dotnet-bot","Number":"39621","RawContent":null,"Title":"Merge release/dev16.4 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39621","RelatedDescription":"Open PR \"Merge release/dev16.4 to master\" (#39621)"},{"Id":"515814376","IsPullRequest":false,"CreatedAt":"2019-10-31T23:31:26","Actor":"lorcanmooney","Number":"39620","RawContent":null,"Title":"Suppressed errors/warnings are still visible in 16.4 preview 2","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Community 2019 Preview\r\nVersion 16.4.0 Preview 2.0\r\nVisualStudio.16.Preview/16.4.0-pre.2.0+29411.138\r\n\r\n**Steps to Reproduce**:\r\n![suppressed_warning](https://user-images.githubusercontent.com/13181165/67992473-c24f8100-fc34-11e9-8613-35a25158608d.png)\r\n\r\n**Expected Behavior**:\r\nSuppressed diagnostics are hidden from all views.\r\n\r\n**Actual Behavior**:\r\nThe diagnostics are still visible in the solution explorer (when using the [productivity power tools](https://github.com/microsoft/VS-PPT)).\r\n\r\nI believe this regressed in 16.4 preview 1.","Url":"https://github.com/dotnet/roslyn/issues/39620","RelatedDescription":"Open issue \"Suppressed errors/warnings are still visible in 16.4 preview 2\" (#39620)"},{"Id":"515813961","IsPullRequest":false,"CreatedAt":"2019-10-31T23:30:30","Actor":"tmat","Number":"39619","RawContent":null,"Title":"Move VisualStudioSymbolSearchService functionality to OOP","State":"open","Body":"This service depends on NuGet VS APIs that only work on STA thread:\r\n- IVsPackageInstallerServices\r\n- IVsPackageInstaller2\r\n- IVsPackageUninstaller\r\n- IVsPackageSourceProvider\r\n\r\nWe will need NuGet to provide IServiceBroker service that provides the required functionality.","Url":"https://github.com/dotnet/roslyn/issues/39619","RelatedDescription":"Open issue \"Move VisualStudioSymbolSearchService functionality to OOP\" (#39619)"},{"Id":"515810964","IsPullRequest":false,"CreatedAt":"2019-10-31T23:23:41","Actor":"vsfeedback","Number":"39618","RawContent":null,"Title":"C#, Editor wrong vertical position in presence of folded content preceeding cursor pos","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/798512/c-editor-wrong-vertical-position-in-presence-of-fo.html)._\n\n---\nFor completeness: Indent=tab, tab=4, view font default at 85% size.\n\nRepro:\n- Use the source file below, modified to instructions in it.\n- Place this file in a project. Any project.\n- Fold/collapse the method named so.\n- Set bookmark on line marked so.\n- Either manually scroll bookmarked line to vertical center of view, or use goto bookmark to have it done automatically.\n- Close VS.\n- Start VS with the same project.\n\nExpected: View restored to same state as when closing VS, i.e. scrolled to same position, with caret at same line.\n\nActual: Caret is beyond the bottom of the view, with nary a pixel or two of its top peeking over the bottom edge of the view. Those two pixels _are_ blinking, but that's about the only good one can say about this.\n\nAs this happens with even the empty-body method collapsed, i.e. a mere two lines &quot;hidden&quot; from view, it suggests some seriously screwy logic and/or math inside the layout engine in presence of folds.\n\n```\npublic class C\n{\n\tvoid m1()\n\t{\n\t\t/*\n\t\t70-ish empty lines, just to create vertical spacing\n\t\t*/\n\t}\n\nvoid line_80_collapse_me()\n\t{\n\t}\n\nvoid line_84_display_the_bug()\n\t{\n\t\t// Place bookmark here (just to have a reference), and scroll this to be the middle vertical of view.\n\t}\n}\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/30/2019, 01:19 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39618","RelatedDescription":"Open issue \"C#, Editor wrong vertical position in presence of folded content preceeding cursor pos\" (#39618)"},{"Id":"515809093","IsPullRequest":false,"CreatedAt":"2019-10-31T23:19:15","Actor":"vsfeedback","Number":"39617","RawContent":null,"Title":"Changing class name casing renames file in C #","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/774315/changing-class-name-casing-renames-file-in-c.html)._\n\n---\n1. Create new .NET Framework console app project using C# language;\n1. You should end up with a project with a single `Program` class;\n27. Move cursor to the `Program` word on the `class Program` line;\n42. Press the F2 key to start renaming;\n256. Change the lowercase `g` to the uppercase `G`;\n1024. Confirm rename by pressing Enter;\n33284. Notice that the file was renamed to `ProGram1.cs`.\n\nExpexted result: no rename happens, or renamed file name case matches the class name case without any extra characters.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/11/2019, 07:52 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/18/2019, 09:12 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39617","RelatedDescription":"Open issue \"Changing class name casing renames file in C #\" (#39617)"},{"Id":"515808609","IsPullRequest":false,"CreatedAt":"2019-10-31T23:18:05","Actor":"vsfeedback","Number":"39616","RawContent":null,"Title":"C#, Not functional \"Cancel\" button for namespace rename operation","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/774651/c-not-functional-cancel-button-for-namespace-renam.html)._\n\n---\nIf you start a namespace rename refactoring operation in a large-ish project, and the millisecond you hit return you realize &quot;Shit! I was to move just this class to a new namespace - not rename everything!&quot; you likely try to click the &quot;Cancel&quot; button in the progress dialog stating &quot;Please wait for an editor command to finish...&quot;, hoping the global Undo will handle the few files it might have already mod ified.\n\nWell, you're out of luck.\n\nActual:\nThe Cancel button does nothing. Result: Data Loss.\n\nExpected:\nImmediate reaction to user clicking the Cancel button, aborting the operation.\n\nI repeat, _Immediate_ reaction. Cancel usually, but especially in a context such as this, is a _highest priority_ operation. It should override pretty much _everything_ else.\n\nWorkarounds:\nNone known, but maybe trying to VS and kill all helper processes from e.g. Task Manager? Hitting the Reset button on the computer?\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/12/2019, 01:43 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/21/2019, 10:21 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39616","RelatedDescription":"Open issue \"C#, Not functional \"Cancel\" button for namespace rename operation\" (#39616)"},{"Id":"515804314","IsPullRequest":false,"CreatedAt":"2019-10-31T23:07:57","Actor":"vsfeedback","Number":"39615","RawContent":null,"Title":"CodeLens References not shown","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/795340/codelens-references-not-shown.html)._\n\n---\n[regression] [worked-in:16.4 Preview 3]\r\nAlthough CodeLens Appear the references are not shown\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/27/2019, 08:55 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Timbo on 10/29/2019, 04:07 AM: \n\nalso have this issue. Codelens was missing in preview 1, its back in preview 2 but broken references\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39615","RelatedDescription":"Open issue \"CodeLens References not shown\" (#39615)"},{"Id":"515803858","IsPullRequest":false,"CreatedAt":"2019-10-31T23:06:48","Actor":"vsfeedback","Number":"39614","RawContent":null,"Title":"Local function reference gets \"this.\" prefix suggestion","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/795288/local-function-reference-gets-this-prefix-suggesti.html)._\n\n---\nLocal function reference gets &quot;this.&quot; prefix suggestion\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/28/2019, 02:45 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39614","RelatedDescription":"Open issue \"Local function reference gets \"this.\" prefix suggestion\" (#39614)"},{"Id":"515796665","IsPullRequest":false,"CreatedAt":"2019-10-31T22:48:12","Actor":"vsfeedback","Number":"39613","RawContent":null,"Title":"Saving (ctrl+S) while renaming (F2) variable (before hitting apply) prompts windows save file dialog","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/792601/saving-ctrls-while-renaming-f2-variable-before-hit.html)._\n\n---\nI have a variable: (C#)\n\nvar myVariable = &quot;blabla&quot;;\n\nI want to rename it, I hit F2 while my cursor is on the variable name. \nI begin typing (and the file gets a *, because its an unsaved change).\nNow i DON'T press 'apply' on the rename dialog, but i save with (ctrl+S) instead.\n\nWhat happens is i get a 'default' windows file 'save as' dialog to save the .cs file, wich is weird, why would it just save the file within visual studio?\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/25/2019, 00:14 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39613","RelatedDescription":"Open issue \"Saving (ctrl+S) while renaming (F2) variable (before hitting apply) prompts windows save file dialog\" (#39613)"},{"Id":"515791861","IsPullRequest":true,"CreatedAt":"2019-10-31T22:36:45","Actor":"agocke","Number":"39612","RawContent":null,"Title":"Fix SkipLocalsInit with stackalloc","State":"open","Body":"stackalloc is affected by the locals init flag, but the locals init\r\nflag is only present if the fat IL header is used, which is not\r\npreferred if the method is small and has no locals. S.R.M added\r\na parameter to allow callers to indicate that stackalloc is present\r\nand thus localsinit should be respected when deciding to use the\r\nfat or tiny IL header. This change tracks whether there is a stackalloc\r\nwhile doing codegen and plumbs the result into S.R.M.","Url":"https://github.com/dotnet/roslyn/pull/39612","RelatedDescription":"Open PR \"Fix SkipLocalsInit with stackalloc\" (#39612)"},{"Id":"515769242","IsPullRequest":false,"CreatedAt":"2019-10-31T21:48:51","Actor":"timheuer","Number":"39611","RawContent":null,"Title":"Smart indentation failing on C# code","State":"open","Body":"**Version Used**: VS 16.3.7\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create new ASP.NET Core Web Application\r\n2. In Startup code go to where ConfigureWebBuilder is and follow that wrapping pattern to add .ConfigureLogging()\r\n\r\n**Expected Behavior**:\r\nConfigureLogging would indent at the same spot as existing.\r\nCTRL+K,D would reformat indents even if off\r\n\r\n**Actual Behavior**:\r\nNeither of the above is happening\r\n![noindent](https://user-images.githubusercontent.com/4821/67988539-893fee00-fbed-11e9-9c13-c2ca00a77459.gif)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39611","RelatedDescription":"Open issue \"Smart indentation failing on C# code\" (#39611)"},{"Id":"515752265","IsPullRequest":false,"CreatedAt":"2019-10-31T21:17:00","Actor":"vsfeedback","Number":"39610","RawContent":null,"Title":"C#8 Nullable check doesn't consider local function","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/794236/c8-nullable-check-doesnt-consider-local-function.html)._\r\n\r\n---\r\nI'm doing a null check within a local function and Visual Studio/Roslyn still emit warning that objet cann be null \r\n\r\nCode :\r\n\r\n```C#\r\nbool ReponseCoherente(ReponseClient? reponse)\r\n                => reponse != null\r\n                && reponse.Type == ReponseServeur_InformationsPSPatient;\r\n\r\nif (ReponseCoherente(informations))\r\n{\r\n    serveurClientRequest = RecupererLoginRequestDepuisReponseServeurClient(informations); // Warning here on informations\r\n}\r\n```\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 10/27/2019, 11:42 PM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Visual Studio Feedback System on 10/28/2019, 10:42 AM: \r\n\r\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39610","RelatedDescription":"Open issue \"C#8 Nullable check doesn't consider local function\" (#39610)"},{"Id":"515059960","IsPullRequest":true,"CreatedAt":"2019-10-31T19:34:37","Actor":"dotnet-bot","Number":"39598","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39598","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39598)"},{"Id":"515680502","IsPullRequest":true,"CreatedAt":"2019-10-31T19:16:50","Actor":"gafter","Number":"39609","RawContent":null,"Title":"Fix compiler crash in scripting.","State":"open","Body":"ON HOLD pending https://github.com/dotnet/roslyn/pull/39584\r\nFixes #39548\r\n","Url":"https://github.com/dotnet/roslyn/pull/39609","RelatedDescription":"Open PR \"Fix compiler crash in scripting.\" (#39609)"},{"Id":"515654964","IsPullRequest":false,"CreatedAt":"2019-10-31T18:33:03","Actor":"dibarbet","Number":"39608","RawContent":null,"Title":"Specify additional location metadata on diagnostics","State":"open","Body":"# Issue\r\n\r\nIn certain diagnostics, we want to provide fading spans in multiple / separate locations from the squiggle (e.g. unnecessary parentheses, we fade the parentheses and only squiggle the first line).  Today this is done by reporting multiple diagnostics with different descriptors.  However, we've realized this is fairly brittle as we encounter issues such as https://github.com/dotnet/roslyn/issues/39529.  It also seems theoretically incorrect as now there are multiple diagnostics reported for the same diagnostic instance.  As such, we'd like to come up with a better way to indicate additional locations that have can have location specific metadata.\r\n\r\n# Ideas\r\n\r\nFrom a few attempts at fixing this, it doesn't look like we can avoid updating the public API.  We considered using the `AdditionalLocations` property of the Diagnostic, but that does not allow us to specify custom metadata about the `Location`.  Using `Location`s of a new unnecessary `LocationKind` also doesn't seem appropriate as `LocationKind` is more about file type.  We can't subclass `Location` either without IVTs.\r\n\r\n## Simple Diagnostic Property\r\n\r\nUpdate the `Diagnostic` class to contain a new member for unnecessary locations.\r\n\r\n```cs\r\npublic IReadOnlyList<Location> UnnecessaryLocations { get; }\r\n```\r\n\r\nThis is a fairly straightforward change to just update the `Diagnostic` to contain the information we need.  However, this only works for unnecessary metadata.  Any future loation metadata would again need changes.\r\n\r\n## Location Metadata\r\n\r\nUpdate a `Location` to allow custom tags to be attached to the location.\r\n\r\n```cs\r\npublic IReadOnlyList<string> CustomTags { get; }\r\n```\r\n\r\nThis could be set in `Create` and add an additional method to create a new `Location` from an existing one with tags.\r\n\r\n```cs\r\npublic Location WithCustomTags(IEnumerable<string> customTags) { }\r\n```\r\n\r\nWe can re-use the existing `AdditionalLocations` field on the `Diagnostic`.  This would additionally allow us to specify different kinds of metadata on the location in the future (e.g. maybe we want to squiggle these specific parts in cyan).\r\n\r\nHowever, the `Location` is now heavier and carries around an additional property that may be used fairly infrequently.\r\n\r\n## Tag -> Locations Diagnostic Property\r\nSimilar to the above, allow `Location`s to have metadata by specifying a property on the diagnostic.\r\n\r\n```cs\r\npublic ImmutableDictionary<string, IReadOnlyList<Location>> LocationMetadata { get; }\r\n```\r\n\r\nor the other way around\r\n\r\n```cs\r\npublic ImmutableDictionary<Location, IReadOnlyList<string>> LocationMetadata { get; }\r\n```\r\n\r\nThis would limit the metadata to only apply to the diagnostic instead of every `Location`.\r\n\r\n## Any other ideas?","Url":"https://github.com/dotnet/roslyn/issues/39608","RelatedDescription":"Open issue \"Specify additional location metadata on diagnostics\" (#39608)"},{"Id":"515639830","IsPullRequest":true,"CreatedAt":"2019-10-31T18:06:23","Actor":"jasonmalinowski","Number":"39607","RawContent":null,"Title":"Fix crash where we are not always finding text snapshots","State":"open","Body":"Given this is not a reliable crash, my guess is the problem is we are sometimes processing an older Solution snapshot. Asking a specific SourceText for the specific ITextSnapshot it came from could fail\r\nif that snapshot had been GC'ed, whereas going to the container first and asking for the buffer directly should be more reliable. Either way we now also handle the null case.\r\n\r\nFixes https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1010045","Url":"https://github.com/dotnet/roslyn/pull/39607","RelatedDescription":"Open PR \"Fix crash where we are not always finding text snapshots\" (#39607)"},{"Id":"515630936","IsPullRequest":false,"CreatedAt":"2019-10-31T17:52:43","Actor":"jcouv","Number":"39606","RawContent":null,"Title":"Test plan for \"static lambdas\"","State":"open","Body":"Championed issue: https://github.com/dotnet/csharplang/issues/275\r\nSpeclet: https://github.com/dotnet/csharplang/blob/master/proposals/static-lambdas.md\r\nMain PR: https://github.com/dotnet/roslyn/pull/39121\r\n\r\n## Compiler scenarios\r\n- [ ] ...\r\n\r\n## Productivity\r\n- [ ] converting static lambda to static local function\r\n- [ ] recommend `static` keyword","Url":"https://github.com/dotnet/roslyn/issues/39606","RelatedDescription":"Open issue \"Test plan for \"static lambdas\"\" (#39606)"},{"Id":"515341068","IsPullRequest":false,"CreatedAt":"2019-10-31T15:16:54","Actor":"raffaeler","Number":"39605","RawContent":null,"Title":"In memory compilation writes incorrect PDB source file document section","State":"closed","Body":"**Version Used**:  3.2.1 (CodeAnalysis libraries)\r\n\r\nI am generating an assembly in memory, without writing the sources and the binaries on disk.\r\nThe source file is added to an `AdHocWorkspace` using:\r\n```\r\n_project.AddDocument(VirtualFilename, sourceText, null, VirtualFilename);\r\n``` \r\nAfter the compilation is done, the emit phase retrieves the document name, creates an `EmbeddedText` and pass this information to the Emit method \"EmbeddedTexts\"\r\n\r\n```\r\nvar sourceFilename = doc.Name;\r\nvar embeddedText = EmbeddedText.FromSource(sourceFilename, source);\r\nsources.Add(embeddedText);\r\nvar emitResult = compilation.Emit(peStream, pdbStream, null, null,\r\n    null, emitOptions, null, null, sources, null, default(CancellationToken));\r\n``` \r\n\r\nThe format of the PDB is 'Portable'.\r\nWhen I analyze the PDB binary (using the `mdv` tool), the Document section has two entries instead of one:\r\n\r\n```\r\n   Name                                                     Language  HashAlgorithm  Hash\r\n\r\n1: '' (#36)                                                 C# (#1)   nil            nil\r\n2: 'DynClass8b0dc4c2-738a-490e-a998-3dd2e28bd4aa.cs' (#ac)  C# (#1)   SHA-1 (#3)     C8-3B-AB-D8-FB-D6-4F-D2-BF-AB-87-7B-6A-C7-EF-2B-02-75-64-5C (#af)\r\n```\r\n\r\nThe first document is the one associated with the MethodDebugInformation.  It is empty and this is bad. I can guess the reason is because it was not loaded from disk by the compiler.\r\nAs the document was added with a valid string for filename (even if it does not exists on disk), it should be written in the PDB in order to be associated with the source embedding section.\r\n\r\nThe second document is the result of embedding the sources, but unfortunately is an orphaned document, not associated with any method.\r\n\r\nConclusion: how can I avoid writing the sources on disk and obtain a well-formed PDB?","Url":"https://github.com/dotnet/roslyn/issues/39605","RelatedDescription":"Closed issue \"In memory compilation writes incorrect PDB source file document section\" (#39605)"},{"Id":"515303902","IsPullRequest":false,"CreatedAt":"2019-10-31T10:01:21","Actor":"Tan90909090","Number":"39604","RawContent":null,"Title":"TypeLoadException is thrown when ref struct is used in let clause","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio: Community 2019 Version 16.3.7\r\nMicrosoft .NET Core SDK 3.0.100(x64) from Visual Studio: version 3.0.100.014277\r\n\r\n**Steps to Reproduce**:\r\n1. Create a .NET Core project\r\n1. Write a following code:\r\n```cs\r\nusing System;\r\nusing System.Linq;\r\n\r\nref struct S\r\n{\r\n}\r\n\r\nclass C\r\n{\r\n    static void Main()\r\n    {\r\n        Foo(Array.Empty<int>());\r\n    }\r\n\r\n    static void Foo(int[] arr)\r\n    {\r\n        var q = from x in arr\r\n                let s = new S()\r\n                select x;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nTo my knowledge, let clauses are converted to some classes and query expressions are converted to `Enumerable` method calls, which using generics. A ref struct must not be class member nor generic type argument, so I think a compile error should occur.\r\n\r\n**Actual Behavior**:\r\nThe code can be compiled.\r\nIf I execute the code, a `TypeLoadException` is thrown when calling `Foo()` method:\r\n```\r\nSystem.TypeLoadException: 'The generic type '<>f__AnonymousType0`2' was used with an invalid instantiation in assembly 'DotNetCoreConsoleProject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.'\r\n```\r\n\r\nNote: If I create a project using .NET Framework, the exception is not thrown.","Url":"https://github.com/dotnet/roslyn/issues/39604","RelatedDescription":"Open issue \"TypeLoadException is thrown when ref struct is used in let clause\" (#39604)"},{"Id":"515257221","IsPullRequest":false,"CreatedAt":"2019-10-31T08:41:19","Actor":"fitdev","Number":"39603","RawContent":null,"Title":"Unexpected CS0146 When Inheriting from a Nested Class","State":"open","Body":"**Version Used**: \r\nVS 2019 16.4 Preview 2 (latest public preview)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nclass A : A.B { // <- Error\tCS0146\tCircular base class dependency involving 'A.B' and 'B'\r\n\r\n  class B { }\r\n\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nThere should be no error, because class `B` is simply nested for convenience purposes, but otherwise has no dependence on class `A` (apart from the fact that `A`'s private members would be accessible, but in this case there is no code in `B` that references anything from `A`).\r\n\r\n**Actual Behavior**:\r\nError CS0146\r\n\r\n**Additional Info**:\r\nAlso VS 2019 16.4 Preview 2 crashes when I hover over red squiggles under `class A` with a message box saying _A new guard page for the stack cannot be created._:\r\n\r\n```\r\nFaulting application name: devenv.exe, version: 16.4.29411.138, time stamp: 0x5da11b53\r\nFaulting module name: KERNELBASE.dll, version: 10.0.17134.799, time stamp: 0x0117c7be\r\nException code: 0xe0434352\r\nFault offset: 0x00112c92\r\nFaulting process id: 0x6548\r\nFaulting application start time: 0x01d58fc482200bce\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\Windows\\System32\\KERNELBASE.dll\r\nReport Id: 906c8fcd-91f7-45e3-9220-c8cdb09f8fd6\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39603","RelatedDescription":"Open issue \"Unexpected CS0146 When Inheriting from a Nested Class\" (#39603)"},{"Id":"515183512","IsPullRequest":false,"CreatedAt":"2019-10-31T05:49:34","Actor":"20chan","Number":"39602","RawContent":null,"Title":"Localized string key in generated .editorconfig","State":"open","Body":"**Version Used**: \r\n\r\nVisual Studio 2019 16.3.6, Korean, C#\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Set language to Korean\r\n2. Generate .editorconfig from Tools->Options\r\n\r\n**Expected Behavior**:\r\n\r\nOnly localized strings in comments.\r\n\r\n**Actual Behavior**:\r\n\r\nKey and value contains localized strings.\r\n\r\n```editorconfig\r\n#### 명명 스타일 ####\r\n\r\n# 명명 규칙\r\n\r\ndotnet_naming_rule.interface_should_be_i로_시작.severity = suggestion\r\ndotnet_naming_rule.interface_should_be_i로_시작.symbols = interface\r\ndotnet_naming_rule.interface_should_be_i로_시작.style = i로_시작\r\n```\r\n\r\nfull .editorconfig: [gist](https://gist.github.com/20chan/a5bcb788d64769fe9a5eb1cdec3b011e)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39602","RelatedDescription":"Open issue \"Localized string key in generated .editorconfig\" (#39602)"},{"Id":"515122164","IsPullRequest":false,"CreatedAt":"2019-10-31T02:56:00","Actor":"gundermanc","Number":"39601","RawContent":null,"Title":"Crash from closed textview in visual tree in dialog page","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 16.4 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nIntermittent repro that's received a fair bit of feedback internally.\r\n\r\n1. Tools > Options > C# > Code Style (perhaps via Ctrl+Q).\r\n2. Switch to another pane and back several times\r\n3. Close tools options\r\n4. Re-launch to the same page\r\n\r\n**Expected Behavior**:\r\n\r\nPage opens.\r\n\r\n**Actual Behavior**:\r\n\r\nVS intermittently crashes with an ObjectDisposedException in an Editor margin from the embedded textviewhost.\r\n\r\nThe problem seems to be in the way that [AbstractOptionPreviewViewModel](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices.Implementation/Options/AbstractOptionPreviewViewModel.cs,9a39115621aed465) provides the textviewhost to the view.\r\n\r\nWhen the dialog page closes, a code path calls Dispose on the ViewModel, closing and clearing the textviewhost.\r\n\r\nMy theory is that this happens after the UI has been dismissed (at least part of the time) leading to no databinding update for the text view host's binding in the UIElementDialogPage, keeping the view in the visual tree. UIElementDialogPages appear to stick around for the entire VS session, so, the next launch of the dialog, the old textview is in the visual tree, and if the initial layout triggers a SizeChanged event, causes a crash.\r\n\r\n**Root cause:**\r\n\r\nThe exception stems from a recent change in Editor, which listens to the SizeChanged event on a Disposable object.\r\n\r\nI'm making changes on our side to make this scenario less likely to throw, but from a local repro, it seems that Roslyn is intermittently keeping around a closed view when dialog page closes, which is at best a leak, and at worst, a potential reliability issue.","Url":"https://github.com/dotnet/roslyn/issues/39601","RelatedDescription":"Open issue \"Crash from closed textview in visual tree in dialog page\" (#39601)"},{"Id":"515115959","IsPullRequest":false,"CreatedAt":"2019-10-31T02:39:30","Actor":"jhudsoncedaron","Number":"39600","RawContent":null,"Title":"IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code","State":"open","Body":"**Version Used**: \r\n\r\nC# 8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nApologies if this doesn't quite reproduce here. The origin file is some 3000 lines and the project is probably in the millions.\r\n\r\n    void ProcessRow(IDataReader reader, ISet<int> questionIds, IDictionary<int, string> visibleExpressions, IDictionary<int, string> enabledExpressions, IDictionary<int, string> completeExpressions)\r\n    {\r\n            int i = 0;\r\n            var questionId = reader.GetInt32(i++);\r\n            var dataLevelId = reader[i++] as byte?;\r\n            var visibleExpression = reader[i++] as string;\r\n            var enabledExpression = reader[i++] as string;\r\n            var completeExpression = reader[i++] as string;\r\n\r\n            if (questionIds.Contains(questionId))\r\n            {\r\n                if (visibleExpression != null)\r\n                   visibleExpressions[questionId] = visibleExpression;\r\n                if (enabledExpression != null)\r\n                   enabledExpressions[questionId] = enabledExpression;\r\n                if (completeExpression != null)\r\n                   completeExpressions[questionId] = completeExpression;\r\n            }\r\n    }\r\n\r\nFor some reason it wants to use pattern matching but can't understand that `i` has a different value by that time and the code replacement is non-working code.\r\n\r\nWe use this indexing idiom here because this loop runs thousands of times per web request and it's very nearly as resilient to schema changes as string indexers and just as easy to read as string indexers and as fast as numeric literal indexers into the data reader. The real code has 18 columns here.\r\n\r\n**Expected Behavior**:\r\n\r\nNo ... under var as the fix can't be applied here.\r\n\r\n**Actual Behavior**:\r\n\r\nAttached screen grab.\r\n![ide0019insanity](https://user-images.githubusercontent.com/17086870/67914096-63164180-fb4c-11e9-9ea4-ff8ead5a103a.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39600","RelatedDescription":"Open issue \"IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code\" (#39600)"},{"Id":"515089129","IsPullRequest":false,"CreatedAt":"2019-10-31T01:27:45","Actor":"davkean","Number":"39599","RawContent":null,"Title":"MisplacedUsingDirectivesDiagnosticAnalyzer ' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. ","State":"open","Body":"**Version Used**: \r\nVersion 16.5.0 Preview 1.0 [29429.152.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\nnamespace Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package\r\n{\r\n    using System;\r\n    using System.Collections.Immutable;\r\n    using System.ComponentModel.Composition;\r\n    using System.Diagnostics.CodeAnalysis;\r\n    using System.Diagnostics.Contracts;\r\n    using System.Threading;\r\n    using Microsoft.VisualStudio.Shell.Interop;\r\n```\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tDetail Description\r\nWarning\tAD0001\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index'.\tMicrosoft.VisualStudio.ProjectSystem.VS.Implementation\t\t1\tActive\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw the following exception:\r\n'Exception occurred with following context:\r\nCompilation: Microsoft.VisualStudio.ProjectSystem.VS.Implementation\r\nSyntaxTree: C:\\CPS\\src\\Microsoft.VisualStudio.ProjectSystem.VS.Implementation\\VsProjectTypeValuesCacheService.cs\r\nSyntaxNode: namespace Microsoft.VisualStudio ... [NamespaceDeclarationSyntax]@[314..24814) (6,0)-(495,1)\r\n\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.SequenceEqualComparer.Equals(List`1 x, List`1 y)\r\n   at Microsoft.CodeAnalysis.ConcurrentCache`2.TryAdd(TKey key, TValue value)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.GetOptionsForSourcePath(String sourcePath)\r\n   at Microsoft.CodeAnalysis.ProjectState.WorkspaceAnalyzerConfigOptionsProvider.GetOptions(SyntaxTree tree)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetFilteredDiagnostic(Diagnostic diagnostic, Compilation compilation, AnalyzerOptions analyzerOptions)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.<>c__DisplayClass117_0.<GetDiagnosticSink>b__0(Diagnostic diagnostic, DiagnosticAnalyzer analyzer, Boolean isSyntaxDiagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.AnalyzerDiagnosticReporter.AddDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.ReportDiagnostics(SyntaxNodeAnalysisContext context, DiagnosticDescriptor descriptor, IEnumerable`1 usingDirectives, CodeStyleOption`1 option)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.AnalyzeNamespaceNode(SyntaxNodeAnalysisContext context)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.<>c__55`1.<ExecuteSyntaxNodeAction>b__55_0(ValueTuple`2 data)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock[TArg](DiagnosticAnalyzer analyzer, Action`1 analyze, TArg argument, Nullable`1 info)\r\n-----\r\n'.\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39599","RelatedDescription":"Open issue \"MisplacedUsingDirectivesDiagnosticAnalyzer ' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. \" (#39599)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"515535621","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:13","Actor":"MichalStrehovsky","Number":"7855","RawContent":null,"Title":"Disable multithreaded compilation","State":"closed","Body":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate.","Url":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Closed or merged PR \"Disable multithreaded compilation\" (#7855)"},{"Id":"515738596","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:00","Actor":"Dotnet-GitSync-Bot","Number":"7857","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7857)"},{"Id":"515578359","IsPullRequest":true,"CreatedAt":"2019-10-31T20:49:12","Actor":"Dotnet-GitSync-Bot","Number":"7856","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7856)"},{"Id":"515147260","IsPullRequest":true,"CreatedAt":"2019-10-31T16:26:56","Actor":"Dotnet-GitSync-Bot","Number":"7854","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub","Url":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7854)"},{"Id":"514751933","IsPullRequest":true,"CreatedAt":"2019-10-31T04:03:03","Actor":"Dotnet-GitSync-Bot","Number":"7853","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT","Url":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7853)"},{"Id":"514311437","IsPullRequest":true,"CreatedAt":"2019-10-30T15:11:24","Actor":"Dotnet-GitSync-Bot","Number":"7851","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7851)"},{"Id":"514701238","IsPullRequest":false,"CreatedAt":"2019-10-30T14:11:01","Actor":"jkotas","Number":"7852","RawContent":null,"Title":"AF: InstantiatedMethod.SetCachedCanonValue","State":"open","Body":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```","Url":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Open issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852)"},{"Id":"514191229","IsPullRequest":true,"CreatedAt":"2019-10-30T00:06:55","Actor":"Dotnet-GitSync-Bot","Number":"7850","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk","Url":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7850)"},{"Id":"513004068","IsPullRequest":true,"CreatedAt":"2019-10-28T18:00:32","Actor":"MichalStrehovsky","Number":"7848","RawContent":null,"Title":"Port changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Closed or merged PR \"Port changes from CoreCLR\" (#7848)"},{"Id":"513365041","IsPullRequest":true,"CreatedAt":"2019-10-28T17:14:45","Actor":"filipnavara","Number":"7849","RawContent":null,"Title":"Fix building portable thread pool on Windows","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Closed or merged PR \"Fix building portable thread pool on Windows\" (#7849)"},{"Id":"512879532","IsPullRequest":true,"CreatedAt":"2019-10-27T04:20:21","Actor":"MichalStrehovsky","Number":"7846","RawContent":null,"Title":"Fix thread safety issue in StructMarshallingThunk","State":"closed","Body":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829.","Url":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Closed or merged PR \"Fix thread safety issue in StructMarshallingThunk\" (#7846)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-27T04:20:21","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"closed","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Closed issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"512885160","IsPullRequest":true,"CreatedAt":"2019-10-26T22:46:14","Actor":"Dotnet-GitSync-Bot","Number":"7847","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7847","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7847)"},{"Id":"512800635","IsPullRequest":true,"CreatedAt":"2019-10-26T17:45:27","Actor":"KodrAus","Number":"7843","RawContent":null,"Title":"Only set dependency package versions if they're empty","State":"closed","Body":"Hi! :wave:\r\n\r\nThis may not be a change you're interested in taking, but lately I've been playing with using local builds of various pieces of the .NET toolchain and have been having trouble finding a reasonable way to pull in my own build of `objwriter` based on a build of LLVM I've done previously.\r\n\r\nBy making these package versions conditionally set it becomes possible to specify them as environment variables when building `corert` without having to touch any of the other build scripts.","Url":"https://github.com/dotnet/corert/pull/7843","RelatedDescription":"Closed or merged PR \"Only set dependency package versions if they're empty\" (#7843)"},{"Id":"512839586","IsPullRequest":true,"CreatedAt":"2019-10-26T16:38:16","Actor":"Dotnet-GitSync-Bot","Number":"7845","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7845","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7845)"},{"Id":"512828238","IsPullRequest":true,"CreatedAt":"2019-10-26T14:03:27","Actor":"Dotnet-GitSync-Bot","Number":"7844","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7844","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7844)"},{"Id":"512692626","IsPullRequest":true,"CreatedAt":"2019-10-26T12:10:19","Actor":"Dotnet-GitSync-Bot","Number":"7842","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7842","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7842)"},{"Id":"512298382","IsPullRequest":true,"CreatedAt":"2019-10-25T06:32:29","Actor":"jkotas","Number":"7841","RawContent":null,"Title":"Port AllocateUninitializedArray changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7841","RelatedDescription":"Closed or merged PR \"Port AllocateUninitializedArray changes\" (#7841)"},{"Id":"512183999","IsPullRequest":true,"CreatedAt":"2019-10-24T22:42:39","Actor":"Dotnet-GitSync-Bot","Number":"7840","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @tannergooding @adamsitnik @VSadov","Url":"https://github.com/dotnet/corert/pull/7840","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7840)"},{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T21:08:56","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"515889920","IsPullRequest":true,"CreatedAt":"2019-11-01T03:30:12","Actor":"dotnet-maestro[bot]","Number":"3844","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3844","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3844)"},{"Id":"514985381","IsPullRequest":true,"CreatedAt":"2019-10-31T23:02:13","Actor":"wli3","Number":"3832","RawContent":null,"Title":"port remove signature on MAC host","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Closed or merged PR \"port remove signature on MAC host\" (#3832)"},{"Id":"514992403","IsPullRequest":true,"CreatedAt":"2019-10-31T21:03:53","Actor":"dotnet-maestro-bot","Number":"3833","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833)"},{"Id":"515731459","IsPullRequest":false,"CreatedAt":"2019-10-31T20:42:03","Actor":"CumpsD","Number":"3843","RawContent":null,"Title":"dotnet restore no longer supports multiple runtimes","State":"open","Body":"**Repo**\r\n```\r\ndotnet new console\r\ndotnet restore -r win-x64 -r linux-x64\r\n```\r\n\r\n**Result**\r\n```\r\nerror NETSDK1083: The specified RuntimeIdentifier 'win-x64;linux-x64' is not recognized.\r\n```\r\n\r\n**Speculation**\r\nIt seems the multiple runtimes are being passed in as RuntimeIdentifier instead of RuntimeIdentifiers?\r\n\r\nThis used to work on 2.2\r\n\r\nAs a workaround I can put `<RuntimeIdentifiers>....` in the csproj and exclude the `-r` switches, but I dont really want to do this, since it means updating *a lot* of csprojs.\r\n\r\nPS: I tried to find the cause for this, but got lost finding the source responsible for the `dotnet restore` command :(","Url":"https://github.com/dotnet/sdk/issues/3843","RelatedDescription":"Open issue \"dotnet restore no longer supports multiple runtimes\" (#3843)"},{"Id":"515718629","IsPullRequest":true,"CreatedAt":"2019-10-31T20:20:58","Actor":"mmitche","Number":"3842","RawContent":null,"Title":"Update branding for preview3","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3842","RelatedDescription":"Open PR \"Update branding for preview3\" (#3842)"},{"Id":"515644880","IsPullRequest":true,"CreatedAt":"2019-10-31T19:45:59","Actor":"dotnet-maestro[bot]","Number":"3840","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3840","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3840)"},{"Id":"515649068","IsPullRequest":false,"CreatedAt":"2019-10-31T18:22:53","Actor":"sfoslund","Number":"3841","RawContent":null,"Title":"Run target does not take input to run .NET Core app","State":"open","Body":"**Steps to reproduce**\r\nCreate any .NET Core project (eg., with ``dotnet new console``)\r\nBuild it (eg., with ``dotnet build`` or ``msbuild /t:restore;build``)\r\nRun it with msbuild and any input (ie., ``msbuild /t:run input``)\r\n\r\n**Expected behavior**\r\nIt runs similar to running ``dotnet run`` or ``dotnet exec``\r\n\r\n**Actual behavior**\r\nMSBUILD : error MSB1009: Project file does not exist.\r\n\r\n**dotnet --version**\r\n3.1.100-preview1-014459\r\n\r\nThe MSBuild run target has been overridden to mirror ``dotnet run`` with no input: see #2283 and #3820\r\nOriginal issue: microsoft/msbuild#3355","Url":"https://github.com/dotnet/sdk/issues/3841","RelatedDescription":"Open issue \"Run target does not take input to run .NET Core app\" (#3841)"},{"Id":"515600362","IsPullRequest":false,"CreatedAt":"2019-10-31T17:07:46","Actor":"heaths","Number":"3839","RawContent":null,"Title":"dotnet add package --source downloads wrong nupkg","State":"open","Body":"We've been publishing prerelease packages to nuget.org, with our impending packages in a private repo in Azure Artifacts.\r\n\r\nPrior to release - apart from manually examining the packages I downloaded from our artifacts repo - I created a project via `dotnet new` and proceed to add our impending release packages via `dotnet add package <packageId> --source <private package repo>`. The packages were added; however, certain changes I made were not available - it was still the old code.\r\n\r\nWhen I examined the .csproj and project.assets.json, the version of the package was indeed a release version, i.e. \"4.0.0\" and not something like \"4.0.0-preview.5\". However, in project.assets.json, some of the dependencies were still prereleases, e.g. Azure.Core still referenced 1.0.0-preview.1.\r\n\r\nI took a look at my nuget cache ~\\.nuget\\packages and the \"4.0.0\" directory had today's date, but going deeper I found that the assemblies - the actually DLLs - had a date of 4 months ago. The .nuspec was also right, and had \"4.0.0\" with the right Azure.Core dependency (a released version, i.e. \"1.0.0\". The DLLs match those (both date and version) of our 4.0.0-preview.1 release back in June.\r\n\r\nIt seems that the package metadata was pulled from our private repo and even for extraction, but the binaries were actually from nuget.org - matching the lowest possible dependencies (as expected, were I actually wanting >= 4.0.0 *with* preview versions).\r\n\r\nAt the time, I didn't have a nuget.config that put our private feed first. Adding that fixed the issue, but the main concern here is that nuget / `dotnet add package` incorrectly extracted and used the wrong version of a package and was terribly misleading, calling the cache \"4.0.0\" when it should've been \"4.0.0-preview.1\". Besides, according to \"dotnet add package --help\",\r\n\r\n> -s, --source <SOURCE>               The NuGet package source to use during the restore.\r\n\r\nBut that doesn't seem to have been the case, given the metadata was correct but the binaries - everything within the package, it seems - was from nuget.org that only has prereleases right now.\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014459\r\n Commit:    ac3b59712d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014459\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19506.1\r\n  Commit:  bbf5542781\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013437 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19374.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3839","RelatedDescription":"Open issue \"dotnet add package --source downloads wrong nupkg\" (#3839)"},{"Id":"515503102","IsPullRequest":false,"CreatedAt":"2019-10-31T15:01:30","Actor":"MichaelSimons","Number":"3838","RawContent":null,"Title":"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine","State":"open","Body":"@RyanWhite25 commented on [Wed Oct 30 2019](https://github.com/dotnet/dotnet-docker/issues/1426)\n\n## Steps to reproduce the issue\r\n1. Create a basic dockerfile as below\r\n```\r\nFROM microsoft/dotnet:2.1-sdk-alpine\r\n\r\nRUN dotnet tool install -g Amazon.Lambda.Tools\r\n\r\nCMD [\"/bin/sh\"]\r\n```\r\n\r\n\r\n2. Build a Docker image and run a container \r\n\r\n```\r\ndocker build <dir>\r\ndocker container run -it <image id>\r\n```\r\n\r\n3. Attempt to uninstall or update the nuget package\r\n```\r\ndotnet tool update -g Amazon.Lambda.Tools\r\n```\r\n\r\n```\r\ndotnet tool uninstall -g Amazon.Lambda.Tools\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe package is updated or uninstalled\r\n\r\n## Actual behavior\r\n\r\nAn error message is thrown:\r\n\r\n```\r\nTool 'amazon.lambda.tools' failed to update due to the following:\r\nFailed to uninstall tool package 'amazon.lambda.tools': Cross-device link\r\n```\r\n\r\n## Additional information (e.g. issue happens only occasionally)\r\n\r\nI've ran into an issue when uninstalling or updating nuget packages on microsoft/dotnet:2.1-sdk-alpine, when baked into a docker image via a dockerfile.\r\n\r\nI've been able to replicate on different host machines, and only seems to occur when the package has been pre-installed on the image. Running the base container interactively and installing allows me to update and uninstall the package as expected.\r\n\r\nI've used Amazon.Lambda.Tools as an example, but this seems to also occur on the several other packages I've tested.\r\n\r\nIt also seems to occur when using --tools-path instead of global.\r\n\r\nA seemingly similar issue has also been reported on StackOverflow here:\r\nhttps://stackoverflow.com/questions/57792546/docker-uninstall-dotnet-global-tool-installed-through-dockerfile\r\n\r\nI'm specifically seeing this issue when trying to build PowerShell Core AWS Lambda functions using New-AWSPowerShellLambdaPackage, which is failing when it can't update the existing installation of Amazon.Lambda.Tools:\r\nhttps://github.com/aws/aws-lambda-dotnet/blob/master/PowerShell/Module/Private/_DeploymentFunctions.ps1#L314\r\n\r\nThanks for any information or assistance you can provide with this.\r\n\r\n## Output of `docker version`\r\n\r\n```\r\nClient:\r\n Version:           18.06.1-ce\r\n API version:       1.38\r\n Go version:        go1.10.3\r\n Git commit:        e68fc7a215d7133c34aa18e3b72b4a21fd0c6136\r\n Built:             Mon Jul  1 18:51:44 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.1-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       e68fc7a/18.06.1-ce\r\n  Built:            Mon Jul  1 18:53:20 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n## Output of `docker info`\r\n\r\n```\r\nContainers: 20\r\n Running: 1\r\n Paused: 0\r\n Stopped: 19\r\nImages: 28\r\nServer Version: 18.06.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: xfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.14.138-114.102.amzn2.x86_64\r\nOperating System: Amazon Linux 2\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 983.7MiB\r\nName: ip-172-31-11-191.eu-west-1.compute.internal\r\nID: J53Z:IZEG:YQT5:E2KR:SWNZ:JTHZ:QQCE:3ZWZ:VX4M:IDVJ:5W5B:6LG5\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\n\n---\n\n@mthalman commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548403123)\n\nI've been able to repro this issue.  I've also confirmed that the same error occurs for both 2.2 and 3.0 SDKs.\r\n\r\n@RyanWhite25 - Although this is unrelated to the issue you encountered, we recommend that you update your .NET image references to use the [MCR Docker registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/).  In your case, `microsoft/dotnet:2.1-sdk-alpine` would be replaced with `mcr.microsoft.com/dotnet/core/sdk:2.1-alpine`. These new tags are all published on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\n\n---\n\n@MichaelSimons commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548415206)\n\nThis issue is also not specific to the `alpine` images, you can reproduce it with Debian for example (e.g. `mcr.microsoft.com/dotnet/core/sdk:3.0`).  Given the `Cross-device link` error, I am speculating this is related to Docker layering and the overlay mount that is created that unions all of the image layers together.  For example if you install and uninstall the tool within a single layer everything works fine.  Does the `dotnet tool` infrastructure rely on hard links?  Moving to the SDK team to investigate.\n\n","Url":"https://github.com/dotnet/sdk/issues/3838","RelatedDescription":"Open issue \"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine\" (#3838)"},{"Id":"515375804","IsPullRequest":true,"CreatedAt":"2019-10-31T14:23:15","Actor":"dotnet-maestro[bot]","Number":"3837","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3837","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3837)"},{"Id":"515327523","IsPullRequest":false,"CreatedAt":"2019-10-31T10:39:19","Actor":"shaulbehr","Number":"3836","RawContent":null,"Title":"dotnet build appears to succeed, but returns error code","State":"open","Body":"Environment: Linux Ubuntu 18.04\r\nDotnet SDK 3.0.100\r\n\r\ncommand line: `dotnet build soln.sln -r linux-x64 -o outputdir`\r\n\r\nBuild logs show normal output (including lots of warnings, but no actual errors), then:\r\n```\r\n    Build FAILED.\r\n```\r\nfollowed by a bunch more build output, then at the end:\r\n```\r\n    387 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:03:52.15\r\nFailing task since return code of [/usr/bin/dotnet build soln.sln -r linux-x64] was 1 while expected 0\r\n```\r\nIf you would like access to our repo so you can repro, contact me privately (shaul at lightsailed dot com)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3836","RelatedDescription":"Open issue \"dotnet build appears to succeed, but returns error code\" (#3836)"},{"Id":"515026974","IsPullRequest":true,"CreatedAt":"2019-10-30T23:50:44","Actor":"dotnet-maestro[bot]","Number":"3834","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834)"},{"Id":"515042011","IsPullRequest":false,"CreatedAt":"2019-10-30T23:15:02","Actor":"thomaslevesque","Number":"3835","RawContent":null,"Title":"dotnet new hangs for several seconds after it completes","State":"open","Body":"Whenever I use `dotnet new`, it seems to hang for several seconds after it completes.\r\nFor instance, if I do `dotnet new sln`, it prints _\"The template \"Solution file\" was created successfully.\"_ almost immediately, but doesn't return until several seconds later (sometimes up to 10 seconds). The same happens with other templates, I just picked this one because it's a very simple one.\r\n\r\nUsing .NET Core SDK 3.0.100\r\n\r\nUsing `--diagnostic` doesn't give any more detail, it just prints _\"Telemetry is: Enabled\"_","Url":"https://github.com/dotnet/sdk/issues/3835","RelatedDescription":"Open issue \"dotnet new hangs for several seconds after it completes\" (#3835)"},{"Id":"514956656","IsPullRequest":true,"CreatedAt":"2019-10-30T21:30:48","Actor":"dotnet-maestro[bot]","Number":"3830","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3830","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3830)"},{"Id":"514975464","IsPullRequest":true,"CreatedAt":"2019-10-30T20:52:51","Actor":"dsplaisted","Number":"3831","RawContent":null,"Title":"Use default arcade symbol publishing logic","State":"open","Body":"#3584 was supposed to fix symbol publishing, but didn't work because we were copying the portable PDB files to the SymStore directory.  They need to be converted to desktop PDBs in order to be published.  The default Arcade logic handles this, so just revert to that.","Url":"https://github.com/dotnet/sdk/pull/3831","RelatedDescription":"Open PR \"Use default arcade symbol publishing logic\" (#3831)"},{"Id":"514918269","IsPullRequest":true,"CreatedAt":"2019-10-30T19:13:11","Actor":"Logerfo","Number":"3829","RawContent":null,"Title":"fix broken link","State":"open","Body":"the dot might be considered as part of the link for some parsers (like github file view)","Url":"https://github.com/dotnet/sdk/pull/3829","RelatedDescription":"Open PR \"fix broken link\" (#3829)"},{"Id":"514310953","IsPullRequest":true,"CreatedAt":"2019-10-30T15:23:46","Actor":"dotnet-maestro-bot","Number":"3821","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @nguerrera\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3821","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3821)"},{"Id":"514693755","IsPullRequest":false,"CreatedAt":"2019-10-30T14:01:28","Actor":"adamralph","Number":"3828","RawContent":null,"Title":"Ability to suppress welcome message","State":"open","Body":"The \"Welcome to .NET Core 3.0!... \" spiel adds considerable noise to CI logs.\r\n\r\nWhile we can work around this by creating a file named `\"%HOME%/.dotnet/$(dotnet --version).dotnetFirstUseSentinel\"`, this is hacky and adds noise to bulid configs.\r\n\r\nIt would be better to have a CLI option to suppress the message, e.g.\r\n\r\n`dotnet build --no-welcome`\r\n\r\nor\r\n\r\n`dotnet build --skip-first-time-experience`\r\n\r\netc.","Url":"https://github.com/dotnet/sdk/issues/3828","RelatedDescription":"Open issue \"Ability to suppress welcome message\" (#3828)"},{"Id":"514666510","IsPullRequest":false,"CreatedAt":"2019-10-30T13:24:28","Actor":"mthalman","Number":"3827","RawContent":null,"Title":"dotnet-install script warning about libunwind dependency on 3.0","State":"open","Body":"## Repro\r\n\r\nRun a `docker build` with this Dockerfile:\r\n\r\n```Dockerfile\r\nFROM ubuntu:disco\r\n\r\nRUN apt-get update \\\r\n    && apt-get install -y --no-install-recommends \\\r\n        curl \\\r\n        ca-certificates \\\r\n        \\\r\n        # .NET Core dependencies\r\n        libc6 \\\r\n        libgcc1 \\\r\n        libgssapi-krb5-2 \\\r\n        libicu63 \\\r\n        libssl1.1 \\\r\n        libstdc++6 \\\r\n        zlib1g \\\r\n    && rm -rf /var/lib/apt/lists/*\r\n\r\nRUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel Current -Version 3.0.100\r\n```\r\n\r\n### Expected\r\nExpected no warnings because https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore30#supported-linux-versions says that libunwind is only a dependency for versions earlier than 2.1.\r\n\r\n### Actual\r\n`dotnet_install: Warning: Unable to locate libunwind. Probable prerequisite missing; install libunwind.`","Url":"https://github.com/dotnet/sdk/issues/3827","RelatedDescription":"Open issue \"dotnet-install script warning about libunwind dependency on 3.0\" (#3827)"},{"Id":"514613112","IsPullRequest":true,"CreatedAt":"2019-10-30T13:22:48","Actor":"dotnet-maestro[bot]","Number":"3826","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191029.9\r\n- **Date Produced**: 10/30/2019 12:01 AM\r\n- **Commit**: ff023241f6484abaf827c4287c59fddd9ad6c382\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19529.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3826","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3826)"},{"Id":"514462171","IsPullRequest":true,"CreatedAt":"2019-10-30T10:06:22","Actor":"dotnet-maestro[bot]","Number":"3824","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.3\r\n- **Date Produced**: 10/30/2019 6:27 AM\r\n- **Commit**: fed3d3e9e7417f8f20ed56edfe7a41b3164b0756\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3824","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3824)"},{"Id":"514496806","IsPullRequest":false,"CreatedAt":"2019-10-30T08:58:54","Actor":"Jepson109","Number":"3825","RawContent":null,"Title":".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.","State":"open","Body":"Use [16.3.7](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fvsdrop.corp.microsoft.com%2Ffile%2Fv1%2FProducts%2FDevDiv%2FVS%2F25bf803db756771ac937046faacdbec8278347ff%2F4c2b3062-352a-8f22-0b64-8a1bb9b21401%253bchannels%2Finternal%2FRelease%2Fbootstrappers%2Ffixed%2FEnterprise%2Fvs_Enterprise.exe&data=02%7C01%7Cv-pejian%40microsoft.com%7C564144298f6a4146a3ad08d75d1647d4%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637080222644789581&sdata=MJNpQBnniMAGpWiPZfl4dkFjjNpTTh9QaKZ0mQ7BMMo%3D&reserved=0) [29429.51.d16.3] (SDK 3.0.100 with 2.2.8 and 2.1.14  runtime inserted)\r\n\r\n**Repro Steps**:\r\n1.\tdotnet new global.json\r\n2.\tedit global.json, check the SDK version is \"3.0.100\"\r\n3.\tmkdir test\r\n4.\tcd test\r\n5.\tdotnet new console\r\n6.\tedit test.csproj and set TargetFramework from netcoreapp3.0 to netcoreapp2.2\r\n7.\tdotnet publish -r win10-x64\r\n8.\tcheck the contents of bin\\Debug\\netcoreapp2.2\\win10-x64\\publish, search for “Microsoft.NETCore.App/” \r\n\r\n**Expected**: That version is 2.2.8.\r\n\r\n**Actual**: The version is **2.2.7**.\r\n\r\nNote: Using SDK 3.0.100, retarget app to netcoreapp2.1 and look for the version for “Microsoft.NETCore.App” is 2.1.13, not 2.1.14.\r\n\r\n**dotnet --info**:\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   3.0.100\r\nCommit:    04339c3a26\r\n\r\nRuntime Environment:\r\nOS Name:     Windows\r\nOS Version:  10.0.17763\r\nOS Platform: Windows\r\nRID:         win10-x64\r\nBase Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3825","RelatedDescription":"Open issue \".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.\" (#3825)"},{"Id":"514354123","IsPullRequest":true,"CreatedAt":"2019-10-30T04:15:58","Actor":"dotnet-maestro[bot]","Number":"3822","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3822","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3822)"},{"Id":"513870552","IsPullRequest":true,"CreatedAt":"2019-10-30T00:08:34","Actor":"dotnet-bot","Number":"3819","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3819","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3819)"},{"Id":"514101309","IsPullRequest":true,"CreatedAt":"2019-10-29T19:30:37","Actor":"sfoslund","Number":"3820","RawContent":null,"Title":"Override MSBuild run target in SDK","State":"closed","Body":"Override MSBuild run target in SDK so behavior mirrors ``dotnet run``. Addressing #2283.","Url":"https://github.com/dotnet/sdk/pull/3820","RelatedDescription":"Closed or merged PR \"Override MSBuild run target in SDK\" (#3820)"},{"Id":"513869207","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:22","Actor":"dotnet-maestro[bot]","Number":"3818","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 11:43 PM\r\n- **Commit**: 96e8fc12aa98264c4e1980252e962b908eaae956\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19528.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3818","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3818)"},{"Id":"513746824","IsPullRequest":false,"CreatedAt":"2019-10-29T17:34:57","Actor":"jtillman","Number":"3816","RawContent":null,"Title":"Manage and Build multiple projects without Visual Studio File (SLN)","State":"closed","Body":"I propose that we provide a builtin way to run dotnet cli commands on multiple projects without having to share Visual Studio (Sln) files across users.\r\n\r\nIssues: The solution file (.sln) is controlled and managed by Visual Studio IDE. It's format isn't DRY and editable by hand. All users do not use or desire to use Visual Studio to develop dotnet applications. You currently have to use the dotnet cli to update it. \r\n\r\nProposals:\r\n- `dotnet cli` commands which take solution files. `dotnet pack **/*.csproj'\r\n- Add `dotnet projects` command which internally creates a solution file on the fly to execute the desired commands in the background. \r\nThis would be a convention-based command which discovers all .csproj in the directory recursively. This is my favorite because it has automatic project discovery just like new SDK projects discover all `.cs` files.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3816","RelatedDescription":"Closed issue \"Manage and Build multiple projects without Visual Studio File (SLN)\" (#3816)"},{"Id":"513789039","IsPullRequest":false,"CreatedAt":"2019-10-29T09:22:41","Actor":"xthsr","Number":"3817","RawContent":null,"Title":"dotnet tool update - error: Sequence contains more than one matching element","State":"open","Body":"Trying to run:\r\ndotnet tool update --global <name of internal Nuget hosted in Azure DevOps artifacts>\r\n\r\nWorks perfectly running locally, but when run on our build servers (self hosted pool) in Azure DevOps, we sometimes get this error:\r\n```\r\nSequence contains more than one matching element\r\nat System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()\r\nat System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\nat Microsoft.DotNet.ToolPackage.ToolPackageInstance.FindLibraryInLockFile(LockFile lockFile, PackageId id)\r\n```\r\n\r\nSame error when using:\r\ndotnet tool install\r\n\r\nAny idea what is causing this exception? - can't debug and the error message is really not that helpful.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3817","RelatedDescription":"Open issue \"dotnet tool update - error: Sequence contains more than one matching element\" (#3817)"},{"Id":"513670311","IsPullRequest":false,"CreatedAt":"2019-10-29T03:24:26","Actor":"skanvk15","Number":"3815","RawContent":null,"Title":"Creating new xunit project from command line fails","State":"open","Body":"Creating a new xunit project using dotnet command line fails:\r\n\r\nReport steps from command line:\r\n\r\n```\r\nPS D:\\temp> dotnet new xunit\r\nCouldn't find an installed template that matches the input, searching online for one that does...\r\nMatches from template source: NuGet\r\n-----------------------------------\r\nTemplate name \"xUnit Test Class\" (xunit-class) from author \"The Sharp Ninja\" in pack GatewayProgrammingSchool.xUnit.CSharp\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i GatewayProgrammingSchool.xUnit.CSharp::1.0.2\r\n```\r\n\r\nI have the following dotnet version installed\r\n3.1.100-preview1-014459","Url":"https://github.com/dotnet/sdk/issues/3815","RelatedDescription":"Open issue \"Creating new xunit project from command line fails\" (#3815)"},{"Id":"513644086","IsPullRequest":false,"CreatedAt":"2019-10-13T21:18:57","Actor":"cezarypiatek","Number":"3814","RawContent":null,"Title":"Cannot load plugins with external dependencies in plugin interface","State":"open","Body":"I'm having trouble with loading plugin that contains an external dependency in the plugin interface. Let's say that PluginBase project depends on System.Collections.Immutable package and my plugin interface looks as follows:\n\n```csharp\npublic interface ICommand\n    {\n        string Name { get; }\n        string Description { get; }\n        int Execute(ImmutableArray&lt;string&gt; input);\n    }\n```\nWhen I try to load my plugin type I'm getting the following exeception:\n\n```\nSystem.Reflection.ReflectionTypeLoadException: 'Unable to load one or more of the requested types.\nMethod 'Execute' in type 'PluginArchitectureDemo.SamplePlugins' from assembly 'PluginArchitectureDemo.SamplePlugins, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.\n```\n\nHere is a repository with a solution that reproduces that problem https://github.com/cezarypiatek/PluginArchitectureDemo - just run PluginArchitectureDemo with a path to PluginArchitectureDemo.SamplePlugins.dll as the parameter.\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 06023407-704f-0ace-e89a-eedd9f95a007\n* Version Independent ID: f25a6e1a-cb10-867b-0522-a377bf9d016b\n* Content: [Create a .NET Core application with plugins - .NET Core](https://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support#feedback)\n* Content Source: [docs/core/tutorials/creating-app-with-plugin-support.md](https://github.com/dotnet/docs/blob/master/docs/core/tutorials/creating-app-with-plugin-support.md)\n* Product: **dotnet-core**\n* GitHub Login: @jkoritzinsky\n* Microsoft Alias: **jekoritz**","Url":"https://github.com/dotnet/sdk/issues/3814","RelatedDescription":"Open issue \"Cannot load plugins with external dependencies in plugin interface\" (#3814)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1189954708062064640","CreatedAt":"2019-10-31T17:18:05+00:00","UserScreenname":"dotnet","Text":"Developing UWP, WPF, or Windows Forms apps? Now you can release them more quickly and simply while still gathering… https://t.co/aCE3B1jsEA","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":43,"FavoriteCount":20,"RawContent":null},{"Id":"1189639377346891777","CreatedAt":"2019-10-30T20:25:04+00:00","UserScreenname":"dotnet","Text":"PSA: Timeline for .NET Core Repository Consolidation https://t.co/O7KGEEbX2q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":21,"RawContent":null},{"Id":"1189638838492123137","CreatedAt":"2019-10-30T20:22:56+00:00","UserScreenname":"dotnet","Text":"Introducing Orleans 3.0 https://t.co/qgGUHW3w7m","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":216,"FavoriteCount":89,"RawContent":null},{"Id":"1189628658782265344","CreatedAt":"2019-10-30T19:42:29+00:00","UserScreenname":"dotnet","Text":"Find out what it takes to build with #dotNET for #ApacheSpark in just a few short video #tutorials! \n\nCheck 'em out… https://t.co/z0XjfksX8U","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"1189245263258542080","CreatedAt":"2019-10-29T18:19:00+00:00","UserScreenname":"dotnet","Text":"Watch these #dotNET video tutorials for an introduction to #VisualStudio and #GetStarted in just 5 mins! Check it o… https://t.co/lYkmdY8uyR","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1189226825098190856","CreatedAt":"2019-10-29T17:05:44+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnK9Pxg","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"1188904996751982592","CreatedAt":"2019-10-28T19:46:54+00:00","UserScreenname":"dotnet","Text":"Explore the world of #EntityFramework and #dotNET through these quick and easy 101 video #tutorials!… https://t.co/xEeBCG4KFk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":55,"FavoriteCount":20,"RawContent":null},{"Id":"1187781254680403968","CreatedAt":"2019-10-25T17:21:33+00:00","UserScreenname":"dotnet","Text":"Discover what you can do with #Docker and #dotNET in just a few short video #tutorials! https://t.co/OUzFnxoat0 https://t.co/mX3ch9GLcs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":63,"FavoriteCount":32,"RawContent":null},{"Id":"1187431317467729922","CreatedAt":"2019-10-24T18:11:02+00:00","UserScreenname":"dotnet","Text":"Create your first #WinForms or #WPF app with #dotNETCore in just a few minutes! Watch here: https://t.co/rTbIhRmAJD https://t.co/kkC5Pb5r2g","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"1187041856305160192","CreatedAt":"2019-10-23T16:23:27+00:00","UserScreenname":"dotnet","Text":"Learn how to #GetStarted with #ASPNETCore in a few short video #tutorials!\" https://t.co/0jmYLkKUqn https://t.co/4BmZJZPlDX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2019-11-01T05:30:37.1778996Z","RunDurationInMilliseconds":14579}