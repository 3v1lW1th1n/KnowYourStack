{"Data":{"GitHub":{"Issues":[{"Id":"537538441","IsPullRequest":true,"CreatedAt":"2019-12-13T13:16:56","Actor":"dotnet-maestro[bot]","Number":"2502","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191212.1\r\n- **Date Produced**: 12/12/2019 2:36 PM\r\n- **Commit**: b590bede6a5244ee732c63c99f725728cabbda48\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19612.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19612.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19612.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19612.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2502)","Url":"https://github.com/dotnet/winforms/pull/2502","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2502)"},{"Id":"537289467","IsPullRequest":false,"CreatedAt":"2019-12-13T00:45:58","Actor":"paul1956","Number":"2501","RawContent":null,"Title":"Read me for Visual Studio and Core releases do not highlight breaking changes","State":"open","Body":"There are (breaking) changes between Framework and Core that are hard to discover. Until today I did not know there was a GitHub documentation: breaking tag with some of that information. While this is great for details this is terrible for discovery. So far I have found out Core has new default font, there are significant and great changes in FolderDialogBrowser, DataGridView Heading have different behavior, Version 16.5.0 Preview 1.0 designer supports VB and this is just to name a few. NONE are bugs IMHO, they are improvements that people need to know about and in some cases before installing and not tripped on.","Url":"https://github.com/dotnet/winforms/issues/2501","RelatedDescription":"Open issue \"Read me for Visual Studio and Core releases do not highlight breaking changes\" (#2501)"},{"Id":"536964625","IsPullRequest":true,"CreatedAt":"2019-12-12T13:17:00","Actor":"dotnet-maestro[bot]","Number":"2500","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191211.6\r\n- **Date Produced**: 12/11/2019 10:53 PM\r\n- **Commit**: 71a91bbb3c49bad2f1e7f2c7f28b32c5c0efc9e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19611.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19611.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19611.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19611.6\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2500)","Url":"https://github.com/dotnet/winforms/pull/2500","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2500)"},{"Id":"534525848","IsPullRequest":true,"CreatedAt":"2019-12-12T06:11:56","Actor":"gpetrou","Number":"2484","RawContent":null,"Title":"Add HBMMENU enum to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add HBMMENU enum to Interop User32.\r\n- Remove HBMMENU constants and replace their usages with the above enum.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2484)","Url":"https://github.com/dotnet/winforms/pull/2484","RelatedDescription":"Closed or merged PR \"Add HBMMENU enum to Interop User32\" (#2484)"},{"Id":"533636814","IsPullRequest":true,"CreatedAt":"2019-12-12T03:08:05","Actor":"OliaG","Number":"2474","RawContent":null,"Title":"Updated the link to the latest blogpost","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2474)","Url":"https://github.com/dotnet/winforms/pull/2474","RelatedDescription":"Closed or merged PR \"Updated the link to the latest blogpost\" (#2474)"},{"Id":"534420825","IsPullRequest":true,"CreatedAt":"2019-12-12T03:07:07","Actor":"hughbe","Number":"2482","RawContent":null,"Title":"Cleanup Control.SendMessage ref rect overload","State":"closed","Body":"## Proposed Changes\r\n- Cleanup Control.SendMessage ref rect overload\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2482)","Url":"https://github.com/dotnet/winforms/pull/2482","RelatedDescription":"Closed or merged PR \"Cleanup Control.SendMessage ref rect overload\" (#2482)"},{"Id":"535201865","IsPullRequest":true,"CreatedAt":"2019-12-12T01:11:58","Actor":"gpetrou","Number":"2493","RawContent":null,"Title":"Remove unused CorRuntimeHost and ICorRuntimeHost from UnsafeNativeMet…","State":"closed","Body":"…hods.cs\r\n\r\n## Proposed changes\r\n\r\n- Remove CorRuntimeHost and ICorRuntimeHost since they don't seem to be used anymore.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2493)","Url":"https://github.com/dotnet/winforms/pull/2493","RelatedDescription":"Closed or merged PR \"Remove unused CorRuntimeHost and ICorRuntimeHost from UnsafeNativeMet…\" (#2493)"},{"Id":"535650974","IsPullRequest":true,"CreatedAt":"2019-12-11T22:20:24","Actor":"hughbe","Number":"2494","RawContent":null,"Title":"Cleanup LB constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup LB constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2494)","Url":"https://github.com/dotnet/winforms/pull/2494","RelatedDescription":"Closed or merged PR \"Cleanup LB constants\" (#2494)"},{"Id":"536399494","IsPullRequest":true,"CreatedAt":"2019-12-11T14:17:55","Actor":"hughbe","Number":"2499","RawContent":null,"Title":"Fix DivideByZeroException in MonthCalendar","State":"open","Body":"## Proposed Changes\r\n- If `SingleMonthSize` is a certain size, (e.g. `new Size(6, 6)`) then a `DivideByZeroException` is thrown.\r\n- Fix this by avoiding the `DivideByZeroException` by not checking for this case and not dividing by zero\r\n\r\nExtracted from https://github.com/dotnet/winforms/pull/2482\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2499)","Url":"https://github.com/dotnet/winforms/pull/2499","RelatedDescription":"Open PR \"Fix DivideByZeroException in MonthCalendar\" (#2499)"},{"Id":"536150166","IsPullRequest":true,"CreatedAt":"2019-12-11T07:43:48","Actor":"sharwell","Number":"2498","RawContent":null,"Title":"Fix codecov package versions","State":"closed","Body":"These versions were unintentionally changed in b17f8d94. Fixes coverage-related build failures.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2498)","Url":"https://github.com/dotnet/winforms/pull/2498","RelatedDescription":"Closed or merged PR \"Fix codecov package versions\" (#2498)"},{"Id":"535663242","IsPullRequest":true,"CreatedAt":"2019-12-11T03:49:23","Actor":"hughbe","Number":"2495","RawContent":null,"Title":"Remove WinFormsUtils.GetRootHWnd","State":"closed","Body":"## Proposed Changes\r\n- Make `GetAncestor` `IHandle`\r\n- Cleanup `IsZoomed`\r\n- Replace `WinFormsUtils.GetRootHWnd` with `User32.GetAncestor(this, User32.GA.Root)` as this is cleaner\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2495)","Url":"https://github.com/dotnet/winforms/pull/2495","RelatedDescription":"Closed or merged PR \"Remove WinFormsUtils.GetRootHWnd\" (#2495)"},{"Id":"535821590","IsPullRequest":true,"CreatedAt":"2019-12-11T02:39:59","Actor":"hughbe","Number":"2496","RawContent":null,"Title":"Cleanup GetWindowRect interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup GetWindowRect interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2496)","Url":"https://github.com/dotnet/winforms/pull/2496","RelatedDescription":"Closed or merged PR \"Cleanup GetWindowRect interop\" (#2496)"},{"Id":"535992590","IsPullRequest":true,"CreatedAt":"2019-12-11T01:10:42","Actor":"vatsan-madhavan","Number":"2497","RawContent":null,"Title":"Revert versions to f3ac1266 level, where MicrosoftNETCoreApppackageVersion=5.0.0-alpha1.19514.1","State":"closed","Body":"Temporarily, revert versions to [f3ac1266 ](https://github.com/wpfcontrib/winforms/commit/f3ac1266) level, where `MicrosoftNETCoreApppackageVersion=5.0.0-alpha1.19514.1`. \r\n\r\nThis version is very likely compatible with the WPF repo right now.\r\n\r\n--\r\n\r\nIn https://github.com/dotnet/wpf/pull/2118, transport packages originating from WinForms are unable to build successfully due to a CoreCLR + Compiler problem. This prevents WinForms work from flowing into [dotnet/windowsdesktop](https://github.com/dotnet/windowsdesktop) and ultimately into [dotnet/core-sdk](https://github.com/dotnet/core-sdk). \r\n\r\nWPF currently ingests `Microsoft.NETCore.App` version `5.0.0-alpha1.19514.1` - this can be seen in the LHS of `eng/Version.Detail.xml` in https://github.com/dotnet/wpf/pull/2118/files. This version comes from WinForms through a `CoherentParentDependency` like this: \r\n\r\n```xml\r\n    <Dependency Name=\"Microsoft.NETCore.App\" Version=\"5.0.0-alpha1.19514.1\" CoherentParentDependency=\"Microsoft.Private.Winforms\">\r\n```\r\n\r\nIf WinForms repo were moved back temporarily to this version of `Microsoft.NETCore.App`, then the packages it would subsequently flow into WPF ought to build cleanly, and then flow all the way to dotnet/windowsdesktop and later onto dotnet/core-sdk. \r\n\r\nOnce WPF gets fixes for C++ compiler and corresponding updates for CoreCLR (which could take a while), WinForms can fast-forward to building against latest versions of CoreFx/CoreCLR. \r\n\r\n\r\n/cc @RussKie, @AdamYoblick, @merriemcgaw \r\n/cc @rladuca \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2497)","Url":"https://github.com/dotnet/winforms/pull/2497","RelatedDescription":"Closed or merged PR \"Revert versions to f3ac1266 level, where MicrosoftNETCoreApppackageVersion=5.0.0-alpha1.19514.1\" (#2497)"},{"Id":"534759327","IsPullRequest":false,"CreatedAt":"2019-12-10T06:33:23","Actor":"int2e","Number":"2491","RawContent":null,"Title":"How winform designer runs at 100% scale?","State":"closed","Body":"* .NET Core Version: 3.1.100\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\nI want to use 100% scale to design UI in the winform designer, my screen resolution is 5120 * 1080 (200% scale);\r\nNow a `Size` property 1000 * 800 is actually 500 * 400;\r\n![size](https://user-images.githubusercontent.com/18641363/70417368-0a678c00-1a9c-11ea-8643-9aa5775c7f34.jpg)\r\n\r\nIf you let VS start at 100% scale [disable-dpi-awareness](https://docs.microsoft.com/en-us/visualstudio/designers/disable-dpi-awareness?view=vs-2019) will make VS less clear;\r\nI very much hope that the winform designer can run at 100% scale, and F5 runing will not affect DPI scaling;\r\nJust like WPF;\r\n\r\nThanks!\r\n","Url":"https://github.com/dotnet/winforms/issues/2491","RelatedDescription":"Closed issue \"How winform designer runs at 100% scale?\" (#2491)"},{"Id":"534204825","IsPullRequest":true,"CreatedAt":"2019-12-10T05:22:23","Actor":"sharwell","Number":"2480","RawContent":null,"Title":"Update code coverage integration","State":"closed","Body":"Closes #2471","Url":"https://github.com/dotnet/winforms/pull/2480","RelatedDescription":"Closed or merged PR \"Update code coverage integration\" (#2480)"},{"Id":"534527338","IsPullRequest":true,"CreatedAt":"2019-12-09T22:45:59","Actor":"gpetrou","Number":"2485","RawContent":null,"Title":"Move HWND fields to a separate file","State":"closed","Body":"## Proposed changes\r\n\r\n- Move HWND fields to a separate file.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2485)","Url":"https://github.com/dotnet/winforms/pull/2485","RelatedDescription":"Closed or merged PR \"Move HWND fields to a separate file\" (#2485)"},{"Id":"534915743","IsPullRequest":true,"CreatedAt":"2019-12-09T13:31:55","Actor":"dotnet-maestro[bot]","Number":"2492","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191208.1\r\n- **Date Produced**: 12/8/2019 2:06 PM\r\n- **Commit**: 71ce4c736b882e6112b395a0e92313be5dcb4328\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19608.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19608.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19608.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19608.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2492)","Url":"https://github.com/dotnet/winforms/pull/2492","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2492)"},{"Id":"533993271","IsPullRequest":true,"CreatedAt":"2019-12-09T05:45:35","Actor":"hughbe","Number":"2478","RawContent":null,"Title":"Add misc TabControl related tests","State":"closed","Body":"Extracted from https://github.com/dotnet/winforms/pull/2465\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2478)","Url":"https://github.com/dotnet/winforms/pull/2478","RelatedDescription":"Closed or merged PR \"Add misc TabControl related tests\" (#2478)"},{"Id":"534051067","IsPullRequest":true,"CreatedAt":"2019-12-09T05:40:42","Actor":"hughbe","Number":"2479","RawContent":null,"Title":"Make RegisterDragDrop IHandle","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2479)","Url":"https://github.com/dotnet/winforms/pull/2479","RelatedDescription":"Closed or merged PR \"Make RegisterDragDrop IHandle\" (#2479)"},{"Id":"534399372","IsPullRequest":true,"CreatedAt":"2019-12-09T05:30:46","Actor":"dotnet-maestro[bot]","Number":"2481","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191207.1\r\n- **Date Produced**: 12/7/2019 1:54 PM\r\n- **Commit**: 97cce7cb41de117e849d42a2eb7c99065dd1602f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19607.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19607.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19607.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19607.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2481)\r\n","Url":"https://github.com/dotnet/winforms/pull/2481","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2481)"},{"Id":"534522497","IsPullRequest":true,"CreatedAt":"2019-12-09T03:09:51","Actor":"hughbe","Number":"2483","RawContent":null,"Title":"Remove always false Control.HasMenu","State":"closed","Body":"## Proposed Changes\r\n- Remove always false Control.HasMenu\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2483)","Url":"https://github.com/dotnet/winforms/pull/2483","RelatedDescription":"Closed or merged PR \"Remove always false Control.HasMenu\" (#2483)"},{"Id":"534660398","IsPullRequest":false,"CreatedAt":"2019-12-09T02:57:35","Actor":"Marie-Shi","Number":"2490","RawContent":null,"Title":"The value of SplitterWidth cannot be set successfully after changing the SplitterConatiner .SplitterWidth","State":"open","Body":".NET Core Version: .NET Core 3.1.101-servicing-014750 from Release branch + the VSIX Inserted into Dev16 16.5.0 Preview 2.0 [29605.132.master]\r\nHave you experienced this same bug with .NET Framework?: Yes\r\n\r\n**More Info:**\r\n1.\tThis issue can reproduce with .Net Framework project from .Net4.0 to latest .Net4.8.\r\n2.\tThis issue cannot reproduce if SplitterConatiner isn’t within panel container.\r\n\r\n**Steps to reproduce:**\r\n1.\tLaunch VS and create a .Net Framework project.\r\n2.\tAdd a Panel to the form, and drag and drop a SplitterConatiner to Panel.\r\n3.\tSet SplitterWidth property of SplitterConatiner in property browser window to 8 (or something other than 4).\r\n4.\tIn Form1_Load event add this.splitContainer1.SplitterWidth.ToString();\r\n5.\tMigrate the code of Framework app to Core app, and run the core app.\r\n[SplitterContainer_SplitterWidth.zip](https://github.com/dotnet/winforms/files/3937691/SplitterContainer_SplitterWidth.zip)\r\n\r\n**Actual Result:**\r\nSplitContainer1.SplitterWidth return 4 not 8 after running the app.\r\n![SplitterWidth_Core](https://user-images.githubusercontent.com/45864017/70403677-89e06580-1a72-11ea-95ad-a7d5218c3860.png)\r\n\r\n**Expected Result:**\r\nSplitContainer1.SplitterWidth should return 8 after running the app.\r\n![SplitterWidth_Expected](https://user-images.githubusercontent.com/45864017/70403682-8cdb5600-1a72-11ea-944f-bf757a672777.png)","Url":"https://github.com/dotnet/winforms/issues/2490","RelatedDescription":"Open issue \"The value of SplitterWidth cannot be set successfully after changing the SplitterConatiner .SplitterWidth\" (#2490)"},{"Id":"534531168","IsPullRequest":true,"CreatedAt":"2019-12-09T02:53:22","Actor":"gpetrou","Number":"2488","RawContent":null,"Title":"Move EnumWindows to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move EnumWindows to Interop User32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2488)","Url":"https://github.com/dotnet/winforms/pull/2488","RelatedDescription":"Closed or merged PR \"Move EnumWindows to Interop User32\" (#2488)"},{"Id":"534528267","IsPullRequest":true,"CreatedAt":"2019-12-09T02:47:24","Actor":"gpetrou","Number":"2486","RawContent":null,"Title":"Add IMN enum to Interop Imm32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add IMN enum to Interop Imm32\r\n- Remove corresponding constants from NativeMethods.cs and replace their usages with the above enum.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2486)","Url":"https://github.com/dotnet/winforms/pull/2486","RelatedDescription":"Closed or merged PR \"Add IMN enum to Interop Imm32\" (#2486)"},{"Id":"534529349","IsPullRequest":true,"CreatedAt":"2019-12-09T02:45:44","Actor":"gpetrou","Number":"2487","RawContent":null,"Title":"Remove unused ATTR and IDM constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused ATTR and IDM constants.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2487)","Url":"https://github.com/dotnet/winforms/pull/2487","RelatedDescription":"Closed or merged PR \"Remove unused ATTR and IDM constants\" (#2487)"},{"Id":"534540516","IsPullRequest":true,"CreatedAt":"2019-12-08T13:16:53","Actor":"gpetrou","Number":"2489","RawContent":null,"Title":"Add OFN enum to Interop Comdlg32","State":"open","Body":"## Proposed changes\r\n\r\n- Add OFN enum to Interop Comdlg32\r\n- Remove OFN constants and replace their usages with the above enum.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2489)","Url":"https://github.com/dotnet/winforms/pull/2489","RelatedDescription":"Open PR \"Add OFN enum to Interop Comdlg32\" (#2489)"},{"Id":"533961670","IsPullRequest":true,"CreatedAt":"2019-12-06T13:11:48","Actor":"dotnet-maestro[bot]","Number":"2477","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191205.6\r\n- **Date Produced**: 12/5/2019 9:49 PM\r\n- **Commit**: 45bfe0972a7354356daf799aae88533dcd0f071a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19605.6\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2477)","Url":"https://github.com/dotnet/winforms/pull/2477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2477)"},{"Id":"533841178","IsPullRequest":false,"CreatedAt":"2019-12-06T09:21:02","Actor":"chylex","Number":"2476","RawContent":null,"Title":"Make MenuStrip and ContextMenuStrip look more Windows-native","State":"open","Body":"* .NET Core Version: 3.0\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\nWith the removal of MainMenu and ContextMenu native wrappers in .NET Core 3.1, and no alternative for native controls, it'd be a good idea to make the replacement strip controls look and feel more native.\r\n\r\nIncluding screenshots from Windows 10 and 7, and `RenderMode` set to `ManagedRenderMode` and `System` to point out differences.\r\n\r\n### Windows 10\r\n\r\n| Native | Strip (System) | Strip (Managed) |\r\n| --- | --- | --- |\r\n| ![NativeMenu10](https://user-images.githubusercontent.com/3685160/70310185-5a7dee80-180f-11ea-9ae7-f970c6b69bbe.png) | ![StripSystemMenu10](https://user-images.githubusercontent.com/3685160/70310193-5eaa0c00-180f-11ea-9f91-48f14507a707.png) | ![StripManagedMenu10](https://user-images.githubusercontent.com/3685160/70310205-62d62980-180f-11ea-8287-d57b158a70ad.png) |\r\n| ![NativeContext10](https://user-images.githubusercontent.com/3685160/70308793-57353380-180c-11ea-8005-d8035212a269.png) | ![StripSystemContext10](https://user-images.githubusercontent.com/3685160/70308811-5f8d6e80-180c-11ea-9296-dc97f56403c3.png) | ![StripManagedContext10](https://user-images.githubusercontent.com/3685160/70308817-63b98c00-180c-11ea-8bb6-9117a3a5b904.png) |\r\n\r\n### Windows 7\r\n\r\n| Native | Strip (System) | Strip (Managed) |\r\n| --- | --- | --- |\r\n| ![NativeMenu7](https://user-images.githubusercontent.com/3685160/70310228-6bc6fb00-180f-11ea-84dc-c3594e5d69e3.png) | ![StripSystemMenu7](https://user-images.githubusercontent.com/3685160/70310240-6ff31880-180f-11ea-8558-95912eca1c51.png) | ![StripManagedMenu7](https://user-images.githubusercontent.com/3685160/70310245-73869f80-180f-11ea-9935-ec029d6a8ec0.png) |\r\n| ![NativeContext7](https://user-images.githubusercontent.com/3685160/70308960-b72bda00-180c-11ea-898f-c5969f4463b4.png) | ![StripSystemContext7](https://user-images.githubusercontent.com/3685160/70308967-bd21bb00-180c-11ea-81c8-d27a9e2a8951.png) | ![StripManagedContext7](https://user-images.githubusercontent.com/3685160/70308982-c27f0580-180c-11ea-8f77-21240bad585c.png) |\r\n\r\n### Additional Information\r\n\r\nThe visual differences should be obvious, but there are a few usability differences as well:\r\n\r\n* In `RenderMode = System`, the hover highlight over a menu item with subitems - after the subitem menu becomes visible - lingers\r\n* In the native menu, clicking on a menu item when the window is unfocused immediately activates that item; MenuStrip requires a second click\r\n* In the native menu, pressing left arrow key when the first menu item is highlighted brings out the \"right-click on window title bar\" menu as if it was another menu item: \r\n![image](https://user-images.githubusercontent.com/3685160/70310763-b432e880-1810-11ea-98f5-f6072ad1f510.png)\r\n* The native menu does not take up any space in `Form.ClientHeight`; when migrating to a `MenuStrip`, you will lose 20 pixels of height\r\n* There is a positioning difference between the native and strip context menu when invoked by a dedicated context menu key instead of a mouse\r\n* Possibly more, this is just what I noticed after a few minutes of testing\r\n\r\n### Test Project\r\n\r\nThe test project targets .NET Core 3.0, and opens 3 windows (native + the 2 strip variations).\r\n\r\n[WindowsFormsStripControlsCore.zip](https://github.com/dotnet/winforms/files/3931357/WindowsFormsStripControlsCore.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2476","RelatedDescription":"Open issue \"Make MenuStrip and ContextMenuStrip look more Windows-native\" (#2476)"},{"Id":"533580076","IsPullRequest":true,"CreatedAt":"2019-12-05T21:36:38","Actor":"mmitche","Number":"2473","RawContent":null,"Title":"[release/3.1] Move to RTM sdk","State":"closed","Body":"Pull in timestamp fixes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2473)","Url":"https://github.com/dotnet/winforms/pull/2473","RelatedDescription":"Closed or merged PR \"[release/3.1] Move to RTM sdk\" (#2473)"},{"Id":"533694143","IsPullRequest":false,"CreatedAt":"2019-12-05T16:11:46","Actor":"coderesx","Number":"2475","RawContent":null,"Title":"Windows.Forms.MonthCalendar control throws NullReferenceException","State":"open","Body":"Windows.Forms.MonthCalendar controls throws NullReferenceException when the user clicks to change the date\r\n\r\n# General\r\n\r\nThis is a new issue in  .NET Core 3.1. It worked fine in .NET Core 3.0\r\nOperating System is Windows 10 Pro.\r\nThis happens if the MinDate and MaxDate are set.\r\n\r\nI attached a sample to reproduce the issue.\r\n\r\n[WindowsFormsCoreApp1.zip](https://github.com/dotnet/core/files/3927891/WindowsFormsCoreApp1.zip)\r\n\r\nI should have posted this to dotnet/winforms. Sorry about that.","Url":"https://github.com/dotnet/winforms/issues/2475","RelatedDescription":"Open issue \"Windows.Forms.MonthCalendar control throws NullReferenceException\" (#2475)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-14T05:30:54.6641724Z","RunDurationInMilliseconds":1163}