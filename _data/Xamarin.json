{"Data":{"Blog":{"FeedItems":[{"Title":"First Look: Xamarin Android Device Manager Preview","PublishedOn":"2018-01-25T19:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of SDK Tools 26, Google replaced the standalone UI for the SDK and Device Manager with a command line interface. In an effort to make Android component management accessible and easy...","Href":"https://blog.xamarin.com/first-look-xamarin-android-device-manager-preview/","RawContent":null},{"Title":"Better Resource Organization in Xamarin.Forms","PublishedOn":"2018-01-23T19:28:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Resource Dictionary is a foundational building block to all Xamarin.Forms mobile development. It&#8217;s the primary vehicle for declaring XAML resources you’ll use throughout your mobile application,...","Href":"https://blog.xamarin.com/better-resource-organization-xamarin-forms/","RawContent":null},{"Title":"The What, Why, and How of Mobile DevOps with Visual Studio App Center","PublishedOn":"2018-01-22T18:52:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With constant operating system releases, ever-shifting user expectations, and new form factors launching every year, making sure your apps are high-quality, take advantage of the latest technology,...","Href":"https://blog.xamarin.com/mobile-devops-visual-studio-app-center/","RawContent":null},{"Title":"Running Xamarin.iOS Unit Tests in Visual Studio Team Services","PublishedOn":"2018-01-19T18:32:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In previous posts, we&#8217;ve discussed how to set up continuous integration for your Xamarin.iOS applications inside Visual Studio Team Services(VSTS) using the new Hosted macOS Agent. Building the...","Href":"https://blog.xamarin.com/running-xamarin-ios-unit-tests-visual-studio-team-services/","RawContent":null},{"Title":"The Xamarin Show: Getting Started with iOS Development in C#","PublishedOn":"2018-01-18T18:54:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re looking to get started with iOS development, there&#8217;s no better place to look than our amazing Xamarin.iOS documentation guides. They cover each and every topic that you can...","Href":"https://blog.xamarin.com/the-xamarin-show-getting-started-with-ios-development-in-c-sharp/","RawContent":null},{"Title":"The C# Developer’s Guide to Shipping Better Apps with Visual Studio App Center","PublishedOn":"2018-01-16T19:41:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At our annual Microsoft Connect event in November, we announced the General Availability of Visual Studio App Center, combining our best developer services, incuding Xamarin Test Cloud and HockeyApp,...","Href":"https://blog.xamarin.com/c-developers-guide-shipping-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Podcast: Android 8.1, Xamarin Device Manager, and Visual Studio versions 15.5 & 15.6","PublishedOn":"2018-01-12T20:59:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Android 8.1, the new Xamarin Device Manager Preview, what&#8217;s new for mobile developers in Visual Studio versions 15.5/15.6,...","Href":"https://blog.xamarin.com/podcast-android-8-1-xamarin-device-manager-visual-studio-versions-15-5-15-6/","RawContent":null},{"Title":"Xamarin.Android Now Double Stuffed with Oreo 8.1","PublishedOn":"2018-01-11T19:55:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Oreo 8.1 introduces new features, including Android Go, Neural Networks API, Autofill framework enhancements, SharedMemory API, and many more. We&#8217;re excited to announce Xamarin.Android...","Href":"https://blog.xamarin.com/xamarin-android-now-double-stuffed-with-oreo-8-1/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-11T14:55:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Mark Smith, Director of Xamarin University, on Thursday, January 25 at 9 am PT / 12 pm ET / 5 pm GMT to learn how to automate your app development pipeline with Visual Studio App Center. You’ll...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7153936795","Type":"IssuesEvent","CreatedAt":"2018-01-26T05:17:01","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1084","RelatedDescription":"Closed issue \"Properly fix `DisplayMetrics.DENSITY_DEVICE_STABLE` mapping\" (#1084) at xamarin/xamarin-android","RelatedBody":"Commit ef770245 manually removed the `DisplayMetrics.DENSITY_DEVICE_STABLE` enum binding, added by commit 50c0c15. This fix is incomplete/incorrect: the problem is that the underlying tooling in `build-tools/enumification-helpers` is doing \"something\" wrong, which means this invalid mapping will be reintroduced in the future.\r\n\r\nWe need to fix `build-tools/enumification-helpers` so that `DisplayMetrics.DENSITY_DEVICE_STABLE` isn't reintroduced for enum mapping.\r\n"},{"Id":"7152790609","Type":"IssuesEvent","CreatedAt":"2018-01-25T22:22:01","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1241","RelatedDescription":"Opened issue \"The runtime test suite crashes when enabling hybrid AOT\" (#1241) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Attempt to run the Runtime test suite (src/Mono.Android/Test/Mono.Android-Tests.csproj) with AOT, LLVM, and Hybrid AOT (/p:AndroidAotMode=Hybrid) enabled.\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nTest suite ruins to completion successfully.\r\n\r\n### Actual Behavior\r\n```\r\n--------- beginning of crash\r\n01-25 04:01:19.169 F/libc    (31621): Fatal signal 11 (SIGSEGV), code 2, fault addr 0x745a3fffd0 in tid 31640 (Threadpool work)\r\n01-25 04:01:19.199 E/HsmCoreServiceImpl( 1080): onTransact in code is: 103\r\n01-25 04:01:19.242 F/DEBUG   (31642): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n01-25 04:01:19.242 F/DEBUG   (31642): Build fingerprint: 'HUAWEI/VTR-L29/HWVTR:7.0/HUAWEIVTR-L29/C636B120:user/release-keys'\r\n01-25 04:01:19.242 F/DEBUG   (31642): Revision: '0'\r\n01-25 04:01:19.242 F/DEBUG   (31642): ABI: 'arm64'\r\n01-25 04:01:19.242 F/DEBUG   (31642): pid: 31621, tid: 31640, name: Threadpool work  >>> Mono.Android_Tests <<<\r\n01-25 04:01:19.242 F/DEBUG   (31642): signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x745a3fffd0\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x0   0000007474a262d8  x1   000000745a400000  x2   0000000000000008  x3   0000007474a262d8\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x4   0000800000000000  x5   0000000000000000  x6   000000745a400270  x7   6451ff6b6f6c4864\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x8   000000745a400260  x9   000000000000000b  x10  000000745a400270  x11  0000000000000028\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x12  000000745ac8dc08  x13  0000000000000001  x14  00000000170240bb  x15  000000001f2fdb25\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x16  000000747b137b68  x17  000000747e7a3a88  x18  0000000000000005  x19  000000745a400260\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x20  000000745a400000  x21  0000000000000000  x22  000000745a400260  x23  0000000000000001\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x24  0000000000000001  x25  000000747b13a000  x26  000000745ba37b48  x27  0000007472198400\r\n01-25 04:01:19.242 F/DEBUG   (31642):     x28  000000747b13ae20  x29  000000745a400250  x30  000000747af9ae38\r\n01-25 04:01:19.242 F/DEBUG   (31642):     sp   000000745a400000  pc   000000747af9f748  pstate 0000000020000000\r\n01-25 04:01:19.243 F/DEBUG   (31642): \r\n01-25 04:01:19.243 F/DEBUG   (31642): backtrace:\r\n01-25 04:01:19.243 F/DEBUG   (31642):     #00 pc 0000000000184748  /data/app/Mono.Android_Tests-1/lib/arm64/libmonosgen-2.0.so\r\n01-25 04:01:19.243 F/DEBUG   (31642):     #01 pc 000000000017fe34  /data/app/Mono.Android_Tests-1/lib/arm64/libmonosgen-2.0.so\r\n```\r\n### Version Information\r\nOperating System: Mac OS X 10.12.3\r\nProduct Name: Xamarin.Android\r\nBranch Name: d15-6\r\nBuild Revision: 2e24209998f93aa15c66ea5733724660a122dd88\r\n[Device] Manufacturer: HUAWEI, Model: VTR-L29, Version: 7.0, ABI: arm64-v8a, Timezone: Not set\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-2d21177b132f4d1fa79c25bdf55007ae.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7151880575","Type":"IssuesEvent","CreatedAt":"2018-01-25T19:02:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1216","RelatedDescription":"Closed issue \"JNI DETECTED ERROR IN APPLICATION: can't make objects of type android.support.v4.app.FragmentPagerAdapter\" (#1216) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nOpen a TabbedPage on a Xamarin forms project that was previously working using XamarinSDKs  about 8 months ago (no sure which version it was) .\r\nUpgraded to newest stable then again to the beta to work around https://bugzilla.xamarin.com/show_bug.cgi?id=60445\r\n\r\nUpdated v4 support libs to the latest version (26.1.0.1) and still not working.\r\n\r\n\r\n### Expected Behavior\r\nTabbed page opens as it did before without crashing\r\n\r\n### Actual Behavior\r\n\r\nCrashes with  stacktrace below\r\n\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Enterprise 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture and Modeling Tools   00322-80000-00000-AA807\r\nMicrosoft Architecture and Modeling Tools\r\n    \r\nUML® and Unified Modeling Language™ are trademarks or registered trademarks of the Object Management Group, Inc. in the United States and other countries.\r\n\r\nVisual Basic 2015   00322-80000-00000-AA807\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00322-80000-00000-AA807\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00322-80000-00000-AA807\r\nMicrosoft Visual C++ 2015\r\n\r\nWindows Phone SDK 8.0 - ENU   00322-80000-00000-AA807\r\nWindows Phone SDK 8.0 - ENU\r\n\r\nApplication Insights Tools for Visual Studio Package   7.18.00214.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.3.6.391\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMono Debugging for Visual Studio   4.9.10-pre (f143ac1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.36.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   14.0.25527.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.669 (8dcd9ff4f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.3 (f8ad4ba4a)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.1 (HEAD/1e47e7ed5)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS   11.8.0.0 (d15aa28)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.0 (d15aa28)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Log File\r\n\r\n```\r\nreferenceTable GDEF length=814 1\r\nreferenceTable GSUB length=11364 1\r\nreferenceTable GPOS length=47302 1\r\nreferenceTable head length=54 1\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: can't make objects of type android.support.v4.app.FragmentPagerAdapter: 0x12da13e0\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]     in call to AllocObject\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]     from android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] \"main\" prio=5 tid=1 Runnable\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | group=\"main\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | state=R schedstat=( 1162827967 78161181 2742 ) utm=91 stm=24 core=0 HZ=100\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | held mutexes= \"mutator lock\"(shared held)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #02 pc 003a482f  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+1247)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #03 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #04 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #05 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #06 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #07 pc 0002355b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #08 pc 0002321b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #09 pc 00005a7f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #10 pc 0000811f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #11 pc 00008003   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #12 pc 0000aedf   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #13 pc 0000ac37   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #14 pc 000092bb   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #15 pc 000078cc   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #16 pc 0000715f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #17 pc 00019325   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #18 pc 00018c77   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #19 pc 00018b36   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #20 pc 00021593   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #21 pc 0000973b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #22 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #23 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #24 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #25 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #26 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #27 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #28 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #29 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #30 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #31 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #32 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #33 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #34 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] \r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] Runtime aborting...\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] Aborting thread:\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] \"main\" prio=5 tid=1 Native\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=R schedstat=( 1169736080 78167631 2743 ) utm=91 stm=25 core=0 HZ=100\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes= \"abort lock\"\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 005176de  /system/lib/libart.so (art::Runtime::Abort()+1164)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 0014d9f3  /system/lib/libart.so (art::LogMessage::~LogMessage()+1343)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 003a5252  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+3842)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 0002355b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 0002321b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 00005a7f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #12 pc 0000811f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #13 pc 00008003   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #14 pc 0000aedf   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #15 pc 0000ac37   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #16 pc 000092bb   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #17 pc 000078cc   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #18 pc 0000715f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #19 pc 00019325   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #20 pc 00018c77   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #21 pc 00018b36   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #22 pc 00021593   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #23 pc 0000973b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #24 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #25 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #26 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #27 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #28 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #29 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #30 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #31 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #32 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #33 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #34 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #35 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #36 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] Dumping all threads without appropriate locks held: thread list lock mutator lock\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] All threads:\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] DALVIK THREADS (22):\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"main\" prio=5 tid=1 Runnable\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=R schedstat=( 1170810917 78167631 2743 ) utm=91 stm=25 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0055c25b  /system/lib/libart.so (art::DumpCheckpoint::Run(art::Thread*)+923)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 0055edfd  /system/lib/libart.so (art::ThreadList::RunCheckpoint(art::Closure*)+301)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 005600f3  /system/lib/libart.so (art::ThreadList::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)+243)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00517548  /system/lib/libart.so (art::Runtime::Abort()+758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 0014d9f3  /system/lib/libart.so (art::LogMessage::~LogMessage()+1343)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 003a5252  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+3842)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #12 pc 0002355b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #13 pc 0002321b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #14 pc 00005a7f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #15 pc 0000811f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #16 pc 00008003   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #17 pc 0000aedf   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #18 pc 0000ac37   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #19 pc 000092bb   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #20 pc 000078cc   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #21 pc 0000715f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #22 pc 00019325   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #23 pc 00018c77   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #24 pc 00018b36   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #25 pc 00021593   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #26 pc 0000973b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #27 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #28 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #29 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #30 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #31 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #32 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #33 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #34 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #35 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #36 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #37 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #38 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #39 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Signal Catcher\" prio=5 tid=2 WaitingInMainSignalCatcherLoop\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c820a0 self=0xabbad500\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3486 nice=0 cgrp=default sched=0/0 handle=0xb3471930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 519654 422281 1 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3375000-0xb3377000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_sigtimedwait+0x135/0x1c0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SYSC_rt_sigtimedwait+0x64/0xc0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_rt_sigtimedwait+0x1f/0x30\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0008383b  /system/lib/libc.so (__rt_sigtimedwait+27)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00027fcc  /system/lib/libc.so (sigwait+69)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 00522bd6  /system/lib/libart.so (art::SignalCatcher::WaitForSignal(art::Thread*, art::SignalSet&)+118)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 005263ce  /system/lib/libart.so (art::SignalCatcher::Run(void*)+302)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"JDWP\" prio=5 tid=3 WaitingInMainDebuggerLoop\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c850a0 self=0xad4a8d00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3487 nice=0 cgrp=default sched=0/0 handle=0xb336d930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 486201 998567 14 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3271000-0xb3273000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: unix_stream_recvmsg+0x226/0x660\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: sock_recvmsg+0x8e/0xc0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: ___sys_recvmsg+0x111/0x1e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: __sys_recvmsg+0x38/0x70\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_recvmsg+0x16/0x20\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_socketcall+0x2b3/0x2f0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00084b71  /system/lib/libc.so (recvmsg+17)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0066e27f  /system/lib/libart.so (art::JDWP::JdwpAdbState::Accept()+267)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 003be9fa  /system/lib/libart.so (art::JDWP::JdwpState::Run()+282)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 003c08b1  /system/lib/libart.so (art::JDWP::StartJdwpThread(void*)+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"ReferenceQueueDaemon\" prio=5 tid=4 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80400 self=0xad4aa100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3488 nice=0 cgrp=default sched=0/0 handle=0xb3267930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 952294 2733722 61 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3165000-0xb3167000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470aa9  /system/lib/libart.so (art::Object_wait(_JNIEnv*, _jobject*)+90)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 8b018b33  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0fd8d3ce> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:147)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0fd8d3ce> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"HeapTaskDaemon\" prio=5 tid=5 Blocked\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80520 self=0xad4ab000\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3491 nice=0 cgrp=default sched=0/0 handle=0xa496f930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 7421924 143844 15 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa486d000-0xa486f000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002da419  /system/lib/libart.so (art::gc::TaskProcessor::GetTask(art::Thread*)+153)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 002daf35  /system/lib/libart.so (art::gc::TaskProcessor::RunAllTasks(art::Thread*)+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 0045f34c  /system/lib/libart.so (art::VMRuntime_runHeapTasks(_JNIEnv*, _jobject*)+53)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_dalvik_system_VMRuntime_runHeapTasks__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at dalvik.system.VMRuntime.runHeapTasks(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting to lock an unknown object\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$HeapTaskDaemon.run(Daemons.java:355)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"FinalizerWatchdogDaemon\" prio=5 tid=6 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c804c0 self=0xad4aab00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3490 nice=0 cgrp=default sched=0/0 handle=0xa4a74930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 407276 1334218 10 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4972000-0xa4974000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470aa9  /system/lib/libart.so (art::Object_wait(_JNIEnv*, _jobject*)+90)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 4b4059ef  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0f2f22ef> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerWatchdogDaemon.waitForObject(Daemons.java:255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0f2f22ef> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:227)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"FinalizerDaemon\" prio=5 tid=7 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80460 self=0xad4aa600\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3489 nice=0 cgrp=default sched=0/0 handle=0xaf15f930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1426822 443905 57 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xaf05d000-0xaf05f000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 4b4059d7  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 4af023ff  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0790e1fc> (a java.lang.ref.ReferenceQueue)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait(Object.java:423)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:101)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0790e1fc> (a java.lang.ref.ReferenceQueue)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:72)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:185)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Binder_1\" prio=5 tid=8 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc20a0 self=0xabbae900\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3492 nice=0 cgrp=default sched=0/0 handle=0xa476c930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1591136 907933 16 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4670000-0xa4672000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_thread_read+0xb04/0xed0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_ioctl+0x4b9/0x790\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_vfs_ioctl+0x2e6/0x4e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_ioctl+0x60/0x80\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083564  /system/lib/libc.so (__ioctl+20)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00094f8a  /system/lib/libc.so (ioctl+42)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 000267ab  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+187)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 000270e7  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00027227  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+151)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 0003004a  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00014aac  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+418)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 0006bfee  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 000141cf  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Binder_2\" prio=5 tid=9 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc50a0 self=0xad4abf00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3493 nice=0 cgrp=default sched=0/0 handle=0xa466d930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 748195 35916 5 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4571000-0xa4573000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_thread_read+0xb04/0xed0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_ioctl+0x4b9/0x790\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_vfs_ioctl+0x2e6/0x4e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_ioctl+0x60/0x80\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083564  /system/lib/libc.so (__ioctl+20)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00094f8a  /system/lib/libc.so (ioctl+42)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 000267ab  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+187)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 000270e7  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 000271e1  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+81)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 0003004a  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00014aac  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+418)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 0006bfee  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 000141cf  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-195\" prio=5 tid=10 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d3d0a0 self=0xabbafd00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3497 nice=0 cgrp=default sched=0/0 handle=0x9bf00930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 3096057 1413166 231 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x9be02000-0x9be04000 stackSize=1022KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0fb25eda> (a java.lang.Object)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.parkFor$(Thread.java:1220)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0fb25eda> (a java.lang.Object)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1038)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"OkHttp ConnectionPool\" prio=5 tid=14 TimedWaiting\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c97940 self=0x98e5b700\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3509 nice=0 cgrp=default sched=0/0 handle=0x983ff930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 286133 8585719 2 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x982fd000-0x982ff000 stackSize=1038KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155f21  /system/lib/libart.so (art::ConditionVariable::TimedWait(art::Thread*, long long, int)+849)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f14d  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+813)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0e74ff0b> (a com.android.okhttp.ConnectionPool)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.performCleanup(ConnectionPool.java:305)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0e74ff0b> (a com.android.okhttp.ConnectionPool)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty(ConnectionPool.java:242)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.-wrap0(ConnectionPool.java:-1)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool$1.run(ConnectionPool.java:97)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-203\" prio=5 tid=15 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc5100 self=0x98291500\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3510 nice=0 cgrp=default sched=0/0 handle=0x9823f930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1190539 263728 34 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x98141000-0x98143000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0008074a  /system/lib/libc.so (pthread_cond_timedwait+152)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0028959a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-204\" prio=5 tid=16 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12ccc2e0 self=0xabbb1100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3511 nice=0 cgrp=default sched=0/0 handle=0x9813e930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 13770994 12829990 81 ) utm=1 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x98040000-0x98042000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00080678  /system/lib/libc.so (pthread_cond_wait+106)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002895bd  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-205\" prio=5 tid=17 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d327c0 self=0x98292900\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3512 nice=0 cgrp=default sched=0/0 handle=0x9803d930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 7900919 1119447 52 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97f3f000-0x97f41000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00080678  /system/lib/libc.so (pthread_cond_wait+106)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002895bd  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-206\" prio=5 tid=18 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d3d100 self=0xab3f7500\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3513 nice=0 cgrp=default sched=0/0 handle=0x97f3c930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1632825 4026129 43 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97e3e000-0x97e40000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0008074a  /system/lib/libc.so (pthread_cond_timedwait+152)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0028959a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-207\" prio=5 tid=19 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d41100 self=0x98294200\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3515 nice=0 cgrp=default sched=0/0 handle=0x97cbf930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 2774035 7046828 46 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97bc1000-0x97bc3000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: inet_csk_accept+0x1b7/0x230\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: inet_accept+0x25/0xe0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SYSC_accept4+0xe2/0x210\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_accept4+0x1f/0x30\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_socketcall+0x13b/0x2f0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083301  /system/lib/libc.so (__accept4+17)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00000cb8  /system/lib/libnetd_client.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 00020ab4  /system/lib/libc.so (accept4+51)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00020a7b  /system/lib/libc.so (accept+50)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 0013b03a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"AsyncTask #2\" prio=5 tid=20 Waiting\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d7f5e0 self=0x98293d00\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3516 nice=10 cgrp=default sched=0/0 handle=0x979ff930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1175290 419409 10 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x978fd000-0x978ff000 stackSize=1038KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/libc    ( 3481): Fatal signal 6 (SIGABRT), code -6 in tid 3481 (.moderngov.xapp)\r\n```\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7151876507","Type":"IssuesEvent","CreatedAt":"2018-01-25T19:01:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1187","RelatedDescription":"Closed issue \"Java invocation failure with master/15.6\" (#1187) at xamarin/xamarin-android","RelatedBody":"With the latest master/15.6 builds of X.A i am triggering this issue inside the forms previewer:\r\n```\r\nJava.Lang.InstantiationException: android.view.ViewGroup\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <808e27c157614d6b865c43847235b62d>:0 \r\n  at Java.Interop.JniEnvironment+Object.AllocObject (Java.Interop.JniObjectReference type) [0x0003c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniType.AllocObject () [0x0000c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.StartCreateInstance (System.String constructorSignature, System.Type declaringType, Java.Interop.JniArgumentValue* parameters) [0x0003e] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Android.Views.ViewGroup..ctor (Android.Content.Context context) [0x0005b] in <9ca7528089f0437883d939fbe90c65ab>:0 \r\n  at Xamarin.Forms.Platform.Android.PlatformRenderer..ctor (Android.Content.Context context, Xamarin.Forms.Platform.Android.IPlatformLayout canvas) [0x00000] in C:\\Users\\hartez\\Documents\\Xamarin\\Xamarin.Forms\\Xamarin.Forms.Platform.Android\\PlatformRenderer.cs:16\r\n```\r\n\r\nThe code in question is the chaining to the base constructor here https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.Android/PlatformRenderer.cs#L16\r\n\r\nThe latest stable release of X.A works fine, so this looks like a regression between then and now."},{"Id":"7151362676","Type":"PullRequestEvent","CreatedAt":"2018-01-25T17:15:32","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1239","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] missing EmbeddedResource.LogicalName for __AndroidLibraryProjects__\" (#1239) at xamarin/xamarin-android","RelatedBody":"Fixes #1235\r\n\r\nThere seems to be a bug in msbuild [1] where if you create\r\nan item inside a task and the task is skipped, the metadata\r\nis not created for the item.\r\n\r\nSo we get into a situation where our `__AndroidLibraryProjects__.zip`\r\ndoes not contain the correct LogicalName. As a result our\r\nextraction process cannot find the resource, and builds fail.\r\n\r\nThis commit spits out the code that created the zip file into\r\nits own target `_CreateManagedLibraryResourceArchive`. This means\r\nwe can skip this new target it needed. However the target\r\nwhich creates the item `_AddLibraryProjectsEmbeddedResourceToProject`\r\ncan now run for every build. This will ensure that the metadata is\r\nalways created.\r\n\r\nAlso added a unit test.\r\n\r\n[1] https://social.msdn.microsoft.com/Forums/netframework/en-US/259271d8-a3fc-4a9b-9e3a-fecad8f6f63f/potential-bug-with-createitem-task-and-additionalmetadata?forum=msbuild"},{"Id":"7150645320","Type":"PullRequestEvent","CreatedAt":"2018-01-25T15:12:24","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1231","RelatedDescription":"Merged pull request \"Use complete Java.Interop\" (#1231) at xamarin/xamarin-android","RelatedBody":"Start using complete Java.Interop, ie. `Debug` and `Release`\r\nconfigurations instead of `XAIntegrationDebug` and\r\n`XAIntegrationRelease`.\r\n\r\nAdd Java.Interop java sources to the list of sources to build\r\nmono.android.jar. This is needed for `ManagedPeer` and other classes\r\nwith java counterparts.\r\n\r\nFew updates to distinguish between `Android.Runtime.JavaObject` and\r\n`Java.Interop.JavaObject`.\r\n\r\nAdded System.Collections reference is for `List<JniSurfacedPeerInfo>`\r\nreturn type in `AndroidValueManager`."},{"Id":"7150434631","Type":"IssuesEvent","CreatedAt":"2018-01-25T14:35:04","Actor":"Redth","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1236","RelatedDescription":"Closed issue \"Could not install package 'Xamarin.Android.Support.Compat 25.4.0.2'\" (#1236) at xamarin/xamarin-android","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tCould not install package 'Xamarin.Android.Support.Compat 25.4.0.2'. You are trying to install this package into a project that targets 'MonoAndroid,Version=v6.0', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\t\t\t0\t\r\nHow to use map in xamarin.forms.maps\r\n\r\nHow to solve this issue"},{"Id":"7150095622","Type":"PullRequestEvent","CreatedAt":"2018-01-25T13:28:40","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1237","RelatedDescription":"Opened pull request \"Make sure merged api description has the latest platform level\" (#1237) at xamarin/xamarin-android","RelatedBody":"When merging we process several API description files, each for a separate\r\nplatform. The resulting file currently carries the *first* platform level in its\r\n`<api platform=\"\">` root element attribute. This is a subtle issue that may\r\ncause problems when applying fixups from metadata (for instance) as the\r\n`api-since` and `api-until` attributes in fixups may apply to incorrect sets of\r\nAPI members.\r\n\r\nFix the issue by putting the latest API description platform level as obtained\r\nfrom the files provided to api-merge (the files are sorted in platform level\r\nascending order)"},{"Id":"7149934937","Type":"PullRequestEvent","CreatedAt":"2018-01-25T12:53:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1232","RelatedDescription":"Merged pull request \"[build] Fix the MSBuild build\" (#1232) at xamarin/xamarin-android","RelatedBody":"The [`msbuild`-based Jenkins job][jenkins-msbuild] job has been\r\nfailing a lot recently:\r\n\r\n[jenkins-msbuild]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-msbuild/\r\n\r\n\terror MSB3644: The reference assemblies for framework \"MonoAndroid,Version=v1.0\" were not found.\r\n\r\nThe cause of the error is that *when there is no prebuilt mono runtime\r\nto download*, this file does not exist:\r\n\r\n\tbin/Debug/lib/xamarin.android/xbuild-frameworks/MonoAndroid/v1.0/RedistList/FrameworkList.xml\r\n\r\nThe above file is created by the\r\n`build-tools/scripts/mono-runtimes.mdproj` build, and\r\n`mono-runtimes.mdproj` *is not being built*. Without a mono build,\r\nthere is no `MonoAndroid/v1.0` framework, and everything fails.\r\n\r\nI don't know when this actually broke, or what change is responsible.\r\n(It works with `xbuild`!)\r\n\r\nAttempt to improve reliability by adding `mono-runtimes.mdproj` to\r\n`$(MSBUILD_PREPARE_PROJS)`. This will cause the `msbuild`-based build\r\nto explicitly build `mono-runtimes.mdproj` *before* attempting to\r\nbuild `Xamarin.Android.Build.Tasks.csproj` or `Xamarin.Android.sln`."},{"Id":"7149323818","Type":"IssuesEvent","CreatedAt":"2018-01-25T10:32:23","Actor":"uwantfries","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1216","RelatedDescription":"Reopened issue \"JNI DETECTED ERROR IN APPLICATION: can't make objects of type android.support.v4.app.FragmentPagerAdapter\" (#1216) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nOpen a TabbedPage on a Xamarin forms project that was previously working using XamarinSDKs  about 8 months ago (no sure which version it was) .\r\nUpgraded to newest stable then again to the beta to work around https://bugzilla.xamarin.com/show_bug.cgi?id=60445\r\n\r\nUpdated v4 support libs to the latest version (26.1.0.1) and still not working.\r\n\r\n\r\n### Expected Behavior\r\nTabbed page opens as it did before without crashing\r\n\r\n### Actual Behavior\r\n\r\nCrashes with  stacktrace below\r\n\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Enterprise 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture and Modeling Tools   00322-80000-00000-AA807\r\nMicrosoft Architecture and Modeling Tools\r\n    \r\nUML® and Unified Modeling Language™ are trademarks or registered trademarks of the Object Management Group, Inc. in the United States and other countries.\r\n\r\nVisual Basic 2015   00322-80000-00000-AA807\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00322-80000-00000-AA807\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00322-80000-00000-AA807\r\nMicrosoft Visual C++ 2015\r\n\r\nWindows Phone SDK 8.0 - ENU   00322-80000-00000-AA807\r\nWindows Phone SDK 8.0 - ENU\r\n\r\nApplication Insights Tools for Visual Studio Package   7.18.00214.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.3.6.391\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nGorillaPlayerPackage Extension   1.0\r\nGorillaPlayerPackage Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMono Debugging for Visual Studio   4.9.10-pre (f143ac1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.36.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   14.0.25527.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.669 (8dcd9ff4f)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.3 (f8ad4ba4a)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.1 (HEAD/1e47e7ed5)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS   11.8.0.0 (d15aa28)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.0 (d15aa28)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Log File\r\n\r\n```\r\nreferenceTable GDEF length=814 1\r\nreferenceTable GSUB length=11364 1\r\nreferenceTable GPOS length=47302 1\r\nreferenceTable head length=54 1\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] JNI DETECTED ERROR IN APPLICATION: can't make objects of type android.support.v4.app.FragmentPagerAdapter: 0x12da13e0\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]     in call to AllocObject\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]     from android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] \"main\" prio=5 tid=1 Runnable\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | group=\"main\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | state=R schedstat=( 1162827967 78161181 2742 ) utm=91 stm=24 core=0 HZ=100\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   | held mutexes= \"mutator lock\"(shared held)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #02 pc 003a482f  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+1247)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #03 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #04 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #05 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #06 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #07 pc 0002355b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #08 pc 0002321b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #09 pc 00005a7f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #10 pc 0000811f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #11 pc 00008003   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #12 pc 0000aedf   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #13 pc 0000ac37   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #14 pc 000092bb   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #15 pc 000078cc   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #16 pc 0000715f   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #17 pc 00019325   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #18 pc 00018c77   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #19 pc 00018b36   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #20 pc 00021593   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #21 pc 0000973b   (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #22 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #23 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #24 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #25 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #26 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #27 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #28 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #29 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #30 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #31 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #32 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #33 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   native: #34 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.039 F/art     ( 3481): art/runtime/java_vm_ext.cc:410] \r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] Runtime aborting...\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] Aborting thread:\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366] \"main\" prio=5 tid=1 Native\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=R schedstat=( 1169736080 78167631 2743 ) utm=91 stm=25 core=0 HZ=100\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes= \"abort lock\"\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 005176de  /system/lib/libart.so (art::Runtime::Abort()+1164)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 0014d9f3  /system/lib/libart.so (art::LogMessage::~LogMessage()+1343)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 003a5252  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+3842)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 0002355b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 0002321b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 00005a7f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #12 pc 0000811f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #13 pc 00008003   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #14 pc 0000aedf   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #15 pc 0000ac37   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #16 pc 000092bb   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #17 pc 000078cc   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #18 pc 0000715f   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #19 pc 00019325   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #20 pc 00018c77   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #21 pc 00018b36   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #22 pc 00021593   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #23 pc 0000973b   (???)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #24 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #25 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #26 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #27 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #28 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #29 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #30 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.126 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #31 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #32 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #33 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #34 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #35 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #36 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] Dumping all threads without appropriate locks held: thread list lock mutator lock\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] All threads:\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] DALVIK THREADS (22):\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"main\" prio=5 tid=1 Runnable\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=0 dsCount=0 obj=0x75221258 self=0xb4074a00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3481 nice=0 cgrp=default sched=0/0 handle=0xb7767c00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=R schedstat=( 1170810917 78167631 2743 ) utm=91 stm=25 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xbf400000-0xbf402000 stackSize=8MB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes= \"abort lock\" \"mutator lock\"(shared held)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0058bd02  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, art::ArtMethod*, void*)+226)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0055194e  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const+286)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0055c25b  /system/lib/libart.so (art::DumpCheckpoint::Run(art::Thread*)+923)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 0055edfd  /system/lib/libart.so (art::ThreadList::RunCheckpoint(art::Closure*)+301)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 005600f3  /system/lib/libart.so (art::ThreadList::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)+243)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00517548  /system/lib/libart.so (art::Runtime::Abort()+758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 0014d9f3  /system/lib/libart.so (art::LogMessage::~LogMessage()+1343)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 003a5252  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+3842)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 003a5eac  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, char*)+116)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00163a10  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+62)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00177ece  /system/lib/libart.so (art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)+830)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 00008cb2  /data/app/uk.co.moderngov.xapp-1/lib/x86/libmonodroid.so (java_interop_jnienv_alloc_object+50)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #12 pc 0002355b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #13 pc 0002321b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #14 pc 00005a7f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #15 pc 0000811f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #16 pc 00008003   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #17 pc 0000aedf   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #18 pc 0000ac37   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #19 pc 000092bb   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #20 pc 000078cc   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #21 pc 0000715f   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #22 pc 00019325   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #23 pc 00018c77   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #24 pc 00018b36   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #25 pc 00021593   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #26 pc 0000973b   (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #27 pc 0099fb00  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+196)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #28 pc 009a0200  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+84)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #29 pc 0007f5fb  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (android.view.View android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)+159)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #30 pc 00176e93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment, int, int, int, boolean)+6887)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #31 pc 001747d2  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(android.support.v4.app.Fragment)+390)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #32 pc 00174f12  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.moveToState(int, boolean)+550)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #33 pc 001500df  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.BackStackRecord.executeOps()+1619)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #34 pc 0016569f  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOps(java.util.ArrayList, java.util.ArrayList, int, int)+531)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #35 pc 00165cb6  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)+1386)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #36 pc 00167d93  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(java.util.ArrayList, java.util.ArrayList)+1127)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #37 pc 00171f2b  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (boolean android.support.v4.app.FragmentManagerImpl.execPendingActions()+255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #38 pc 00162b55  /data/app/uk.co.moderngov.xapp-1/oat/x86/base.odex (void android.support.v4.app.FragmentManagerImpl$1.run()+73)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #39 pc 00a08c3b  /data/dalvik-cache/x86/system@framework@boot.oat (???)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.n_onCreateView(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at md5270abb39e60627f0f200893b490a1ade.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2013)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:710)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.handleCallback(Handler.java:739)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Handler.dispatchMessage(Handler.java:95)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.os.Looper.loop(Looper.java:148)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.reflect.Method.invoke!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Signal Catcher\" prio=5 tid=2 WaitingInMainSignalCatcherLoop\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c820a0 self=0xabbad500\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3486 nice=0 cgrp=default sched=0/0 handle=0xb3471930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 519654 422281 1 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3375000-0xb3377000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_sigtimedwait+0x135/0x1c0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SYSC_rt_sigtimedwait+0x64/0xc0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_rt_sigtimedwait+0x1f/0x30\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 0008383b  /system/lib/libc.so (__rt_sigtimedwait+27)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00027fcc  /system/lib/libc.so (sigwait+69)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 00522bd6  /system/lib/libart.so (art::SignalCatcher::WaitForSignal(art::Thread*, art::SignalSet&)+118)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 005263ce  /system/lib/libart.so (art::SignalCatcher::Run(void*)+302)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"JDWP\" prio=5 tid=3 WaitingInMainDebuggerLoop\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c850a0 self=0xad4a8d00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3487 nice=0 cgrp=default sched=0/0 handle=0xb336d930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 486201 998567 14 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3271000-0xb3273000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: unix_stream_recvmsg+0x226/0x660\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: sock_recvmsg+0x8e/0xc0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: ___sys_recvmsg+0x111/0x1e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: __sys_recvmsg+0x38/0x70\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_recvmsg+0x16/0x20\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_socketcall+0x2b3/0x2f0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00084b71  /system/lib/libc.so (recvmsg+17)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0066e27f  /system/lib/libart.so (art::JDWP::JdwpAdbState::Accept()+267)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 003be9fa  /system/lib/libart.so (art::JDWP::JdwpState::Run()+282)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 003c08b1  /system/lib/libart.so (art::JDWP::StartJdwpThread(void*)+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"ReferenceQueueDaemon\" prio=5 tid=4 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80400 self=0xad4aa100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3488 nice=0 cgrp=default sched=0/0 handle=0xb3267930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 952294 2733722 61 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xb3165000-0xb3167000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470aa9  /system/lib/libart.so (art::Object_wait(_JNIEnv*, _jobject*)+90)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 8b018b33  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0fd8d3ce> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$ReferenceQueueDaemon.run(Daemons.java:147)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0fd8d3ce> (a java.lang.Class<java.lang.ref.ReferenceQueue>)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"HeapTaskDaemon\" prio=5 tid=5 Blocked\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80520 self=0xad4ab000\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3491 nice=0 cgrp=default sched=0/0 handle=0xa496f930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 7421924 143844 15 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa486d000-0xa486f000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002da419  /system/lib/libart.so (art::gc::TaskProcessor::GetTask(art::Thread*)+153)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 002daf35  /system/lib/libart.so (art::gc::TaskProcessor::RunAllTasks(art::Thread*)+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 0045f34c  /system/lib/libart.so (art::VMRuntime_runHeapTasks(_JNIEnv*, _jobject*)+53)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_dalvik_system_VMRuntime_runHeapTasks__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at dalvik.system.VMRuntime.runHeapTasks(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting to lock an unknown object\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$HeapTaskDaemon.run(Daemons.java:355)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"FinalizerWatchdogDaemon\" prio=5 tid=6 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c804c0 self=0xad4aab00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3490 nice=0 cgrp=default sched=0/0 handle=0xa4a74930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 407276 1334218 10 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4972000-0xa4974000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470aa9  /system/lib/libart.so (art::Object_wait(_JNIEnv*, _jobject*)+90)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000494  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__+104)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 4b4059ef  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0f2f22ef> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerWatchdogDaemon.waitForObject(Daemons.java:255)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0f2f22ef> (a java.lang.Daemons$FinalizerWatchdogDaemon)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerWatchdogDaemon.run(Daemons.java:227)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"FinalizerDaemon\" prio=5 tid=7 Waiting\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c80460 self=0xad4aa600\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3489 nice=0 cgrp=default sched=0/0 handle=0xaf15f930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1426822 443905 57 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xaf05d000-0xaf05f000 stackSize=1038KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155034  /system/lib/libart.so (art::ConditionVariable::WaitHoldingLocks(art::Thread*)+772)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 4b4059d7  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 4af023ff  ???\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0790e1fc> (a java.lang.ref.ReferenceQueue)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait(Object.java:423)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:101)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0790e1fc> (a java.lang.ref.ReferenceQueue)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:72)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Daemons$FinalizerDaemon.run(Daemons.java:185)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Binder_1\" prio=5 tid=8 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc20a0 self=0xabbae900\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3492 nice=0 cgrp=default sched=0/0 handle=0xa476c930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1591136 907933 16 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4670000-0xa4672000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_thread_read+0xb04/0xed0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_ioctl+0x4b9/0x790\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_vfs_ioctl+0x2e6/0x4e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_ioctl+0x60/0x80\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083564  /system/lib/libc.so (__ioctl+20)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00094f8a  /system/lib/libc.so (ioctl+42)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 000267ab  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+187)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 000270e7  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00027227  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+151)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 0003004a  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00014aac  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+418)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 0006bfee  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 000141cf  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Binder_2\" prio=5 tid=9 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc50a0 self=0xad4abf00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3493 nice=0 cgrp=default sched=0/0 handle=0xa466d930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 748195 35916 5 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0xa4571000-0xa4573000 stackSize=1014KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_thread_read+0xb04/0xed0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: binder_ioctl+0x4b9/0x790\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_vfs_ioctl+0x2e6/0x4e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_ioctl+0x60/0x80\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083564  /system/lib/libc.so (__ioctl+20)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00094f8a  /system/lib/libc.so (ioctl+42)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 000267ab  /system/lib/libbinder.so (android::IPCThreadState::talkWithDriver(bool)+187)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 000270e7  /system/lib/libbinder.so (android::IPCThreadState::getAndExecuteCommand()+37)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 000271e1  /system/lib/libbinder.so (android::IPCThreadState::joinThreadPool(bool)+81)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 0003004a  /system/lib/libbinder.so (android::PoolThread::threadLoop()+40)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #06 pc 00014aac  /system/lib/libutils.so (android::Thread::_threadLoop(void*)+418)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #07 pc 0006bfee  /system/lib/libandroid_runtime.so (android::AndroidRuntime::javaThreadShell(void*)+98)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #08 pc 000141cf  /system/lib/libutils.so (thread_data_t::trampoline(thread_data_t const*)+122)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #09 pc 00080a93  /system/lib/libc.so (__pthread_start(void*)+56)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #10 pc 00021952  /system/lib/libc.so (__start_thread+25)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #11 pc 000170b6  /system/lib/libc.so (__bionic_clone+70)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-195\" prio=5 tid=10 Native\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d3d0a0 self=0xabbafd00\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3497 nice=0 cgrp=default sched=0/0 handle=0x9bf00930\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 3096057 1413166 231 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x9be02000-0x9be04000 stackSize=1022KB\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.127 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f511  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+1777)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0fb25eda> (a java.lang.Object)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.parkFor$(Thread.java:1220)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0fb25eda> (a java.lang.Object)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at sun.misc.Unsafe.park(Unsafe.java:299)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2013)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:410)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1038)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1098)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"OkHttp ConnectionPool\" prio=5 tid=14 TimedWaiting\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12c97940 self=0x98e5b700\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3509 nice=0 cgrp=default sched=0/0 handle=0x983ff930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 286133 8585719 2 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x982fd000-0x982ff000 stackSize=1038KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00155f21  /system/lib/libart.so (art::ConditionVariable::TimedWait(art::Thread*, long long, int)+849)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0044f14d  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)+813)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00453195  /system/lib/libart.so (art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)+197)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 00470b0c  /system/lib/libart.so (art::Object_waitJI(_JNIEnv*, _jobject*, long long, int)+92)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #05 pc 00000704  /data/dalvik-cache/x86/system@framework@boot.oat (Java_java_lang_Object_wait__JI+136)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Object.wait!(Native method)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - waiting on <0x0e74ff0b> (a com.android.okhttp.ConnectionPool)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.performCleanup(ConnectionPool.java:305)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   - locked <0x0e74ff0b> (a com.android.okhttp.ConnectionPool)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty(ConnectionPool.java:242)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool.-wrap0(ConnectionPool.java:-1)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at com.android.okhttp.ConnectionPool$1.run(ConnectionPool.java:97)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   at java.lang.Thread.run(Thread.java:818)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-203\" prio=5 tid=15 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12cc5100 self=0x98291500\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3510 nice=0 cgrp=default sched=0/0 handle=0x9823f930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1190539 263728 34 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x98141000-0x98143000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0008074a  /system/lib/libc.so (pthread_cond_timedwait+152)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0028959a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-204\" prio=5 tid=16 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12ccc2e0 self=0xabbb1100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3511 nice=0 cgrp=default sched=0/0 handle=0x9813e930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 13770994 12829990 81 ) utm=1 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x98040000-0x98042000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00080678  /system/lib/libc.so (pthread_cond_wait+106)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002895bd  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-205\" prio=5 tid=17 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d327c0 self=0x98292900\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3512 nice=0 cgrp=default sched=0/0 handle=0x9803d930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 7900919 1119447 52 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97f3f000-0x97f41000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e0  /system/lib/libc.so (syscall+32)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00080678  /system/lib/libc.so (pthread_cond_wait+106)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 002895bd  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-206\" prio=5 tid=18 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d3d100 self=0xab3f7500\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3513 nice=0 cgrp=default sched=0/0 handle=0x97f3c930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1632825 4026129 43 ) utm=0 stm=0 core=0 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97e3e000-0x97e40000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 000171e2  /system/lib/libc.so (syscall+34)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 0008074a  /system/lib/libc.so (pthread_cond_timedwait+152)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 0028959a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"Thread-207\" prio=5 tid=19 Native\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d41100 self=0x98294200\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3515 nice=0 cgrp=default sched=0/0 handle=0x97cbf930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 2774035 7046828 46 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x97bc1000-0x97bc3000 stackSize=1022KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: inet_csk_accept+0x1b7/0x230\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: inet_accept+0x25/0xe0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SYSC_accept4+0xe2/0x210\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_accept4+0x1f/0x30\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_socketcall+0x13b/0x2f0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #00 pc 00083301  /system/lib/libc.so (__accept4+17)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #01 pc 00000cb8  /system/lib/libnetd_client.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #02 pc 00020ab4  /system/lib/libc.so (accept4+51)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #03 pc 00020a7b  /system/lib/libc.so (accept+50)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   native: #04 pc 0013b03a  /data/app/Mono.Android.DebugRuntime-1/lib/x86/libmonosgen-32bit-2.0.so (???)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   (no managed stack frames)\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366] \"AsyncTask #2\" prio=5 tid=20 Waiting\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | group=\"\" sCount=1 dsCount=0 obj=0x12d7f5e0 self=0x98293d00\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | sysTid=3516 nice=10 cgrp=default sched=0/0 handle=0x979ff930\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | state=S schedstat=( 1175290 419409 10 ) utm=0 stm=0 core=1 HZ=100\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | stack=0x978fd000-0x978ff000 stackSize=1038KB\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   | held mutexes=\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait_queue_me+0xcc/0x120\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: futex_wait+0x154/0x240\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: do_futex+0xcb/0x9e0\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: SyS_futex+0x8c/0x140\r\n01-22 12:46:53.128 F/art     ( 3481): art/runtime/runtime.cc:366]   kernel: syscall_call+0x7/0xb\r\n01-22 12:46:53.128 F/libc    ( 3481): Fatal signal 6 (SIGABRT), code -6 in tid 3481 (.moderngov.xapp)\r\n```\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7153657295","Type":"IssuesEvent","CreatedAt":"2018-01-26T03:07:23","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1683","RelatedDescription":"Opened issue \"[Enhancement] AutoCaptializtion support for Entry/Editor\" (#1683) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nThe Entry and Editor controls do not have a simple mechanism for controlling the native automatic capitalization features. \r\n\r\n## Implementation\r\n\r\nCreate an enum for the options:\r\n```\r\npublic enum AutoCapitalization \r\n{\r\n\tNone = 0,\r\n\tWords = 1,\r\n\tSentences = 2,\r\n\tCharacters = 3\r\n}\r\n```\r\n\r\nAdd the following BindableProperty to InputView:\r\n\r\n```\r\npublic static readonly BindableProperty AutoCapitalizationProperty = \r\nBindableProperty.Create(\"AutoCapitalization\", typeof(bool), typeof(Entry)));\r\n```\r\n\r\nThe value of `AutoCapitalization` should roughly map to `UITextField.AutocapitalizationType` on iOS and  `FormsEditText.InputType` (setting `TextFlagCapCharacters`, `TextFlagCapSentences`, or `TextFlagCapWords` on Android. UWP TextBox doesn't have an equivalent concept, so each type of capitalization will need to be manually implemented.\r\n\r\nIn situations where the value of `AutoCapitalization` would conflict with the selected Keyboard settings (i.e., the numeric keyboards), this value will have no effect.\r\n\r\n## Backward Compatibility\r\n\r\nThe renderers for Entry and Editor on each platform should check `BindableObject.GetIsDefault()`; the behavior of the renderers should only be altered if `AutoCapitalization` has been explicitly set. This should provide backward compatibility.\r\n\r\n## Difficulty: Easy\r\n"},{"Id":"7153370601","Type":"IssuesEvent","CreatedAt":"2018-01-26T01:20:38","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1682","RelatedDescription":"Opened issue \"[Enhancement] UWP PlatformSpecific to display JavaScript alerts in WebView\" (#1682) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nBy design, the UWP WebView does not respond to the JavaScript `window.alert` function. In some cases, it may be useful to display the messages passed to `window.alert` in the UWP application.\r\n\r\n## Implementation\r\n\r\nA BindableProperty to control this behavior will have to be added to the Windows PlatformSpecifics:\r\n\r\n```\r\npublic static readonly BindableProperty IsJavaScriptAlertEnabledProperty = BindableProperty.Create(\"IsJavaScriptAlertEnabled\", typeof(bool), typeof(WebView), false);\r\n```\r\n\r\nWhen this PS is enabled, the UWP WebViewRenderer should inject JavaScript into each rendered page which modifies the `window.alert` function to [call `window.external.notify` instead](https://code.msdn.microsoft.com/windowsapps/How-to-intercept-854d33da). This will allow the WebView to respond to the [`ScriptNotify`](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.webview#Windows_UI_Xaml_Controls_WebView_ScriptNotify) event and display the alert message in an alert dialog. \r\n\r\n## Backward Compatibility\r\n\r\nThis property will default to `false`; existing applications which rely on suppression of JavaScript alerts should not be affected. \r\n\r\n## Difficulty: Medium"},{"Id":"7153354298","Type":"IssuesEvent","CreatedAt":"2018-01-26T01:14:49","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1681","RelatedDescription":"Opened issue \"[Enhancement] Text edit with borders\" (#1681) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nEntry fields can't have borders added without having to add custom renderers.\r\n\r\n## Implementation\r\n\r\n```csharp\r\npublic static readonly BindableProperty BorderThicknessProperty =\r\n     BindableProperty.Create(propertyName: nameof(BorderThickness),\r\n\t     returnType: typeof(float), declaringType: typeof(Image));\r\n\t\t\r\npublic static readonly BindableProperty BorderColorProperty =\r\n    BindableProperty.Create(propertyName: nameof(BorderColor),\r\n\t\treturnType: typeof(Color), declaringType: typeof(Image));\r\n\r\npublic static readonly BindableProperty BorderFillColorProperty =\r\n\tBindableProperty.Create(propertyName: nameof(BorderFillColor),\r\n\t\treturnType: typeof(Color), declaringType: typeof(Image));\r\n```\r\n\r\nRenderers will frame the Entry based on the supplied Border properties\r\n\r\n## Expected Result\r\n\r\n### Android\r\n- `Entry.BorderThickness`:  should set the thickness of the border\r\n- `Entry.BorderColor`:  should set the outline colors of the border\r\n- `Entry.BorderFillColor`:  should set the internal fill on the border. If fill color is different than Border Color you'll have   | Border Color | Fill Color | Border Color | Component\r\n\r\n### iOS\r\nSee Android\r\n\r\n### UWP\r\nSee Android\r\n\r\n## Implications for CSS\r\n```css\r\n{border-color: coral;}\r\n{border-width: thin;}\r\n\r\n// Not sure if fill color is possible in css?\r\n//Possibly something like this \r\n.border\r\n{\r\nbackground-color\r\n}\r\n```\r\n## Backward Compatibility\r\nThis is adding a new set of properties so should be backwards compatible. Need to ensure that if the user doesn't specify any of these properties that the entry field appears normal\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first time contributor.  \r\n\r\nThis issue may correlate with implementing issue: \r\nhttps://github.com/xamarin/Xamarin.Forms/issues/1664\r\n\r\n\r\n\r\n"},{"Id":"7153280864","Type":"PullRequestEvent","CreatedAt":"2018-01-26T00:48:39","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/661","RelatedDescription":"Closed pull request \"[Android] Hide Fragments before removing them to allow custom animations\" (#661) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAs of now, when the navigation stack is being navigated back, Fragments are being removed which does not allow for custom transition animations. This change attempts to hide them first and remove them when the transition is done.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=50787\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `protected virtual int TransitionDuration { get; set; } = 220;`\r\n This seems to be the time interval before the transition timer triggers. By default, it's set to 220ms but the custom animations I provided use 500ms.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7153279974","Type":"PullRequestEvent","CreatedAt":"2018-01-26T00:48:20","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1680","RelatedDescription":"Opened pull request \"[Android] Redo: Hide Fragments before removing them to allow custom animations\" (#1680) at xamarin/Xamarin.Forms","RelatedBody":"Redoing #661. \r\n\r\nNote that `TransitionDuration` must be overriden in a custom renderer to match durations in XML animation resource files so that pages disappear from the screen at the same time animations complete. I'm not sure if there is an API to extract durations from the resource files at runtime for us to sync `TransitionDuration` with those durations. \r\n\r\n**Untested scenario:**\r\n\r\nThough small, there is also the possibility that a developer wants different durations for different animations. Not sure if this PR provides support for that, but it might be possible to change .`TransitionDuration` before pushes and pops to make this scenario work."},{"Id":"7153260104","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:41:33","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1679","RelatedDescription":"Opened issue \"[Enhancement] Android PlatformSpecific for WebView mixed content\" (#1679) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nThere is currently no way to modify an Android WebView's mixed content mode setting without creating a custom renderer. \r\n\r\n## Implementation.\r\n\r\nAdd a PlatformSpecific property for WebView on Android to set the value of WebSettings.MixedContentMode. \r\n\r\n```\r\nenum MixedContentHandling\r\n{\r\n\tAlwaysAllow = 0,\r\n\tNeverAllow = 1,\r\n\tCompatibilityMode = 2\r\n}\r\n\r\npublic static readonly BindableProperty MixedContentModeProperty = BindableProperty.Create(\"MixedContentMode\", typeof(MixedContentHandling), typeof(WebView), MixedContentHandling.NeverAllow);\r\n```\r\n\r\nBelow API 21 this value should be ignored. At API 21 or above, this value should be applied to `MixedContentMode`.\r\n\r\nThere is currently no applicable setting for iOS (allowing mixed content requires modifying application-level plist values) or UWP (the UWP WebView just lets any old thing load up).\r\n\r\n## Backward Compatibility\r\n\r\nAt API 21 and above, this value defaults to `NeverAllow`; below API 21, it is ignored. So as long as the default value of the PlatformSpecific is `NeverAllow`, this should be backward compatible. \r\n\r\n## Difficulty: Easy\r\n\r\n\r\n"},{"Id":"7153250906","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:38:14","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1678","RelatedDescription":"Opened issue \"Entry: Read-only entry\" (#1678) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nCurrently you can set an Entry field to IsEnabled false which technically makes it Read Only but it's greyed out.  Is Read Only would present the field so it looks the same when it's editable but now it's not editable.\r\n\r\n## Implementation\r\n\r\nAdd IsReadonly property to Entry\r\n\r\n```csharp\r\n\r\n\r\npublic static readonly BindableProperty IsReadOnlyProperty = BindableProperty.Create(nameof(IsReadOnly), typeof(bool), defaultValue: false);\r\n```\r\n\r\nRenderers will make the platform native entry field uneditable but how it looks will not change\r\n\r\n## Expected Result\r\n\r\n### Android\r\n- `Entry.IsReadonly = true`:  should make the input control uneditable\r\n### iOS\r\nSee Android\r\n\r\n### UWP\r\nSee Android\r\n\r\n## Implications for CSS\r\n```css\r\n    user-select: none;\r\n```\r\n## Backward Compatibility\r\nThis is adding a new property so should be backwards compatible. Need to ensure that the property defaults to false.\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first time contributor.  "},{"Id":"7153203599","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:21:35","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1677","RelatedDescription":"Opened issue \"[Enhancement] Entry: Control over text-prediction\" (#1677) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\n`Entry`s do not currently allow users to disable text prediction/autocomplete/autosuggest without a custom renderer or effect.\r\n\r\n## Implementation\r\n\r\nAdd bindable property to `Entry`:\r\n\r\n```csharp\r\npublic static readonly BindableProperty IsTextPredictionEnabledProperty = BindableProperty.Create(\"IsTextPredictionEnabled\", typeof(bool), typeof(Entry), true);\r\n\r\n```\r\n\r\nRenderers will need to be updated accordingly.\r\n\r\n## Expected Result\r\n\r\n### Android\r\n\r\n- `IsTextPredictionEnabled == true`: Default. Text prediction is enabled.\r\n- `IsTextPredictionEnabled == false`: Text prediction is disabled.\r\n\r\n### iOS\r\n\r\n- `IsTextPredictionEnabled == true`: Default. Text prediction is enabled. Note: may also disable autocorrect.\r\n- `IsTextPredictionEnabled == false`: Text prediction is disabled.\r\n\r\n### UWP\r\n\r\n- `IsTextPredictionEnabled == true`: Default. Text prediction  is enabled.\r\n- `IsTextPredictionEnabled == false`: Text prediction is disabled.\r\n\r\n## Implications for CSS\r\n\r\nNone\r\n\r\n## Backward Compatibility\r\n\r\nSince we are adding new properties, there should be no compatibility problems as long as:\r\n\r\n1. We ensure that an `Entry`'s text prediction defaults to enabled, as is the expected behavior now,\r\n2. We ensure that any Effects or Custom Renderers that may have been created to produce this behavior take precedence over any values that we set, to the best of our ability.\r\n\r\nThird party renderers will need to be updated to ensure that this functionality is officially supported.\r\n\r\n## Difficulty : Easy-Medium\r\n\r\nThis is an easy-medium change and great for a first-time contributor. Biggest challenge will be ensuring that disabling text prediction does not also disable other features of the `Entry` view on all platforms."},{"Id":"7153198973","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:20:00","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1676","RelatedDescription":"Opened issue \"[Enhancement] Allow overriding theme capitalization settings in Android\" (#1676) at xamarin/Xamarin.Forms","RelatedBody":"## Rational\r\n\r\nSometimes changing the theme on an android app can be a bit difficult. It may be useful for people to be able to override theme capitalization settings without modifying the theme or using an effect.\r\n\r\n## Implementation\r\n\r\n```csharp\r\nbutton.On<Android>().SetAllCaps (true/false);\r\n```\r\n\r\n## Expected Result\r\n\r\n\r\n### Android\r\nWhen set to false, the button should not auto-cap letters. When set to true it should.\r\n\r\nShould directly pass ABP value to `Control.SetAllCaps (value);`\r\n\r\n### iOS\r\nNo change\r\n\r\n### UWP\r\nNo change\r\n\r\n## Implications for CSS\r\nNot relevant to CSS\r\n\r\n## Backward Compatibility\r\n\r\nThird party renderers may need to be updated to ensure that this functionality is supported through the new official mechanism. Further we will need to be careful to code the changes to the renderers in a careful manner to ensure that if someone is already using an effect support this feature that the effect is as best as possible not broken by our changes.\r\n\r\n## Difficulty : Trivial\r\n\r\nYeah, straightforward and easy."},{"Id":"7153197050","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:19:20","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1675","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] Bottom Tab Bar on Android or Top Tab Bar on iOS\" (#1675) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153194809","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:18:34","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1674","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] StrikeThruText on Label\" (#1674) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153189775","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:16:50","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1672","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] UWP: Button: AccessKey support (for multiple Views)\" (#1672) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153178283","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:12:52","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1669","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] UWP: SearchBar: Control over NoResultsText\" (#1669) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153175406","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:11:52","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1668","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] iOS: Button: Word wrap\" (#1668) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153171207","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:10:22","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1667","RelatedDescription":"Opened issue \"[Enhancement, Placeholder] Entry: Position and color of caret\" (#1667) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implementation\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n```csharp\r\npublic enum FontAttributes\r\n{\r\n\tNone = 0,\r\n\tBold = 1 << 0,\r\n\tItalic = 1 << 1,\r\n\tUnderline = 1 << 2,\r\n}\r\n```\r\n\r\n## Expected Result\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Implications for CSS\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Backward Compatibility\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue.\r\n\r\n## Difficulty : Easy\r\n\r\nLorem ipsum accumsan etiam congue sed nostra congue, a in aliquet orci habitasse maecenas est suscipit, diam auctor arcu posuere massa augue."},{"Id":"7153161562","Type":"IssuesEvent","CreatedAt":"2018-01-26T00:07:03","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1666","RelatedDescription":"Opened issue \"[Enhancement] Use WKWebView on iOS\" (#1666) at xamarin/Xamarin.Forms","RelatedBody":"## Rational\r\n\r\nWKWebView has been the modern way to create webviews for some time on iOS. It would be best to support that.\r\n\r\n## Implementation\r\n\r\nThe only backwards compat friendly mode of implementation here is to copy the old renderer to `WKWebViewRenderer` and modify it to use `WKWebView`. This renderer will then be available but not enabled by default.\r\n\r\n## Expected Result\r\n\r\n\r\n### Android\r\nNo Change\r\n\r\n### iOS\r\nIf the user puts\r\n\r\n```csharp\r\n[assembly: ExportRenderer(typeof(WebView), typeof(WKWebViewRenderer))]\r\n```\r\n\r\nin the AssemblyInfo.cs of their application, they will then use the new renderer.\r\n\r\n### UWP\r\nNo change\r\n\r\n## Implications for CSS\r\nNot relevant to CSS\r\n\r\n## Backward Compatibility\r\n\r\nAll good since this makes no modifications to existing code and is 100% opt-in.\r\n\r\n## Difficulty : Medium\r\n\r\nThere will likely be some hiccups in the port but it looks to be fairly straightforward. There will certainly be unresolvable behavioral differences, but to a certain extent that is expected."},{"Id":"7153081902","Type":"IssuesEvent","CreatedAt":"2018-01-25T23:40:59","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1665","RelatedDescription":"Opened issue \"[Enhancement] ListView full width separators\" (#1665) at xamarin/Xamarin.Forms","RelatedBody":"## Rational\r\n\r\nMaking the ListView separator on iOS the full width of the screen is sometimes a desireable effect.\r\n\r\n## Implementation\r\n\r\n```csharp\r\nListView.On<iOS>().SetSeparatorStyle(SeparatorStyle.FullWidth/Default);\r\n\r\nnamespace Xamarin.Forms.PlatformConfiguration.iOSSpecific\r\n{\r\n\r\n\tpublic enum SeparatorStyle\r\n\t{\r\n\t\tDefault,\r\n\t\tFullWidth,\r\n\t}\r\n}\r\n```\r\n\r\nUse an enum so if more styles need to be created in the future, the api is easily extended.\r\n\r\nExtra care will have to be taken with iOS 11 to ensure this works properly with the iPhone X as it has funky behavior with the bunny ears.\r\n\r\n## Expected Result\r\n\r\n\r\n### Android\r\nNo Change\r\n\r\n### iOS\r\nSetting the SeparatorStyle to FullWidth should cause the ListView separators to stretch from the leftmost pixel of the ListView to the rightmost. This should apply to header separators as well.\r\n\r\n### UWP\r\nNo change\r\n\r\n## Implications for CSS\r\nNot relevant to CSS\r\n\r\n## Backward Compatibility\r\n\r\nThird party renderers may need to be updated to ensure that this functionality is supported through the new official mechanism. Further we will need to be careful to code the changes to the renderers in a careful manner to ensure that if someone is already using an effect support this feature that the effect is as best as possible not broken by our changes.\r\n\r\n## Difficulty : Easy\r\n\r\nThe actual modifications to the renderer look fairly straightforward. The impact for the iPhone X is probably the largest curveball."},{"Id":"7153007076","Type":"IssuesEvent","CreatedAt":"2018-01-25T23:18:04","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1664","RelatedDescription":"Opened issue \"[Enhancement] Rounded image\" (#1664) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nImages can't be rounded without adding an effect to each platform. Seeing as how this is a popular style it'd be useful to have this behavior built in\r\n\r\n## Implementation\r\n\r\nAdd CornerRadiusProperty  to Image\r\n\r\n```csharp\r\npublic static readonly BindableProperty CornerRadiusProperty = BindableProperty.Create(nameof(CornerRadius), typeof(float), typeof(Image), -1.0f,\r\n\t\t\t\t\t\t\t\t\tvalidateValue: (bindable, value) => ((float)value) == -1.0f || ((float)value) >= 0f);\r\n```\r\n\r\nPossibly add these additional properties for styling the border\r\n```csharp\r\npublic static readonly BindableProperty BorderThicknessProperty =\r\n     BindableProperty.Create(propertyName: nameof(BorderThickness),\r\n\t     returnType: typeof(float), declaringType: typeof(Image));\r\n\t\t\r\npublic static readonly BindableProperty BorderColorProperty =\r\n    BindableProperty.Create(propertyName: nameof(BorderColor),\r\n\t\treturnType: typeof(Color), declaringType: typeof(Image));\r\n\r\npublic static readonly BindableProperty FillColorProperty =\r\n\tBindableProperty.Create(propertyName: nameof(FillColor),\r\n\t\treturnType: typeof(Color), declaringType: typeof(Image));\r\n```\r\n\r\nRenderers will frame the image based on the supplied CornerRadiusProperty\r\n\r\n## Expected Result\r\n\r\n### Android\r\n- `Image.CornerRadius = 10f`: should frame the image using the given Corner Radius\r\n### iOS\r\nSee Android\r\n\r\n### UWP\r\nSee Android\r\n\r\n## Implications for CSS\r\n```css\r\nimg {\r\n    border-radius: 50%;\r\n}\r\n```\r\n## Backward Compatibility\r\nThis is adding a new set of properties so should be backwards compatible. Need to ensure that if the user doesn't specify any of these properties that the image displays as it did when none of these properties existed\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first time contributor.  All the platforms have fairly straightforward mechanisms for adding things into a rounded frame.  The tricky part might be ensuring that they all interpret the CornerRadiusProperty in such a way that's the same across all three platforms\r\n\r\nExisting 3rd party implementation for creating circle images\r\nhttps://github.com/jamesmontemagno/ImageCirclePlugin"},{"Id":"7152990412","Type":"IssuesEvent","CreatedAt":"2018-01-25T23:13:14","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1663","RelatedDescription":"Opened issue \"[Enhancement] Entry.MaxLength\" (#1663) at xamarin/Xamarin.Forms","RelatedBody":"## Rational\r\n\r\nSometimes the user needs to limit the maximum number of characters a user can enter into an Entry. While this could be done with a reactive implementation, sometimes setting a property is easier.\r\n\r\n## Implementation\r\n\r\n```csharp\r\npublic class Entry : View\r\n{\r\n\t<SNIP>\r\n    \r\n    public uint MaxLength { get; set; } // BP, Default MaxValue\r\n}\r\n```\r\n\r\nDo not set the native property unless the user changes the MaxLength away from MaxValue otherwise breakage of existing applications may occur.\r\n\r\n## Expected Result\r\nWhen the user attempts to enter more text than the max length it should clip at the limit.\r\n\r\n### Android\r\n```csharp\r\nControl.SetFilters(new []{ new InputFilter.LengthFilter(length) });\r\n```\r\n\r\n### iOS\r\nBasically needs to do this: https://stackoverflow.com/questions/433337/set-the-maximum-character-length-of-a-uitextfield\r\n\r\nDO NOT COPY AND PASTE CODE.\r\n\r\n### UWP\r\nJust set the MaxLength property of the TextBox.\r\n\r\n## Implications for CSS\r\nNot relevant to CSS\r\n\r\n## Backward Compatibility\r\n\r\nThird party renderers may need to be updated to ensure that this functionality is supported through the new official mechanism. Further we will need to be careful to code the changes to the renderers in a careful manner to ensure that if someone is already using an effect support this feature that the effect is as best as possible not broken by our changes.\r\n\r\n## Difficulty : Easy\r\n\r\nThe implementation is relatively easy on each target platform. It is unfortunately not possible to detect if the user has already set these values on all platforms. This will make avoid backwards-compatibility issues much harder."},{"Id":"7152929687","Type":"IssuesEvent","CreatedAt":"2018-01-25T22:56:48","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1662","RelatedDescription":"Opened issue \"[Enhancement] Ability to set color for switch\" (#1662) at xamarin/Xamarin.Forms","RelatedBody":"## Rational\r\n\r\nSometimes it would be nice to be able to change the color of a switch to make it prettier.\r\n\r\n## Implementation\r\n\r\n```csharp\r\npublic enum FontAttributes\r\n{\r\n\tNone = 0,\r\n\tBold = 1 << 0,\r\n\tItalic = 1 << 1,\r\n\tUnderline = 1 << 2,\r\n}\r\n```\r\n\r\nRenderers and Span parsers will need to understand how to use the new underline flag appropriately.\r\n\r\n## Expected Result\r\n\r\n### Android\r\n\r\n\r\n### iOS\r\n\r\n### UWP\r\n\r\n## Implications for CSS\r\n\r\n## Backward Compatibility\r\n\r\nThis change is as backwards compatible with existing code as possible. It is possible someone has found some obscure way of depending on there not being any more flags to the FontAttributes enum, but that is unlikely.\r\n\r\nThird party renderers will need to be updated to ensure that this functionality is supported through the new official mechanism. Further we will need to be careful to code the changes to the renderers in a careful manner to ensure that if someone is already using an effect to set an underline state on a label that this effect is as best as possible not broken by our changes.\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first time contributor. The hardest part will be ensuring the Span can properly parse the new `FontAttributes.Underline` enum value. Some basic defensive coding will be needed to ensure existing code is not broken, ideally the code path when the flag is not set AND has never been set is identical to when it has been. Once a user changes their code to use the flag, the code path can then change for everything.\r\n\r\nEven more ideally this would be done without an additional flag for tracking that status."},{"Id":"7152887235","Type":"IssuesEvent","CreatedAt":"2018-01-25T22:45:49","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1661","RelatedDescription":"Opened issue \"[Enhancement] Android: WebView - Control over Zoom controls\" (#1661) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\n`WebView`s do not currently expose the zoom controls on Android and pinch-to-zoom cannot be enabled without a custom renderer.\r\n\r\n## Implementation\r\n\r\nAdd platform specific methods to `WebView`:\r\n\r\n```csharp\r\nWebView.On<Android>().EnableZoomControls(true/false);\r\nWebView.On<Android>().DisplayZoomControls(true/false);\r\n```\r\n\r\nRenderer will need to be updated accordingly.\r\n\r\n## Expected Result\r\n\r\n### Android\r\n\r\n- `EnableZoomControls(false)` and `DisplayZoomControls(true)`: Default. Cannot zoom the `WebView`, and no zoom controls are displayed.\r\n- `EnableZoomControls(false)` and `DisplayZoomControls(false)`: Cannot zoom the `WebView`, and no zoom controls are displayed.\r\n- `EnableZoomControls(true)` and `DisplayZoomControls(true)`: Can zoom the `WebView` with gestures, and default zoom controls are displayed.\r\n- `EnableZoomControls(true)` and `DisplayZoomControls(false)`: Can zoom the `WebView` with gestures, and default zoom controls are _not_ displayed.\r\n\r\n### iOS\r\n\r\nNo change\r\n\r\n### UWP\r\n\r\nNo change\r\n\r\n## Implications for CSS\r\n\r\nNone\r\n\r\n## Backward Compatibility\r\n\r\nSince we are adding new properties, there should be no compatibility problems as long as:\r\n\r\n1. We ensure that a `WebView`'s zoom defaults to disabled, as is the expected behavior now,\r\n2. We ensure that any Effects or Custom Renderers that may have been created to produce this behavior take precedence over any values that we set, to the best of our ability.\r\n\r\nThird party renderers will need to be updated to ensure that this functionality is officially supported.\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first-time contributor. "},{"Id":"7152768996","Type":"IssuesEvent","CreatedAt":"2018-01-25T22:16:46","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1660","RelatedDescription":"Opened issue \"IsSpellCheckEnabled on Entry/Editor\" (#1660) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\nThe Entry and Editor controls do not have a simple mechanism for disabling the native spell-checking features. For some basic text entry scenarios (e.g., entering a username or editing markup), the spell-checking features provide a negative experience.\r\n\r\n## Implementation\r\n\r\nAdd the following BindableProperty to InputView:\r\n\r\n```\r\npublic static readonly BindableProperty IsSpellCheckEnabledProperty = \r\nBindableProperty.Create(\"IsSpellCheckEnabled\", typeof(bool), typeof(Entry)));\r\n```\r\n\r\nThe value of `IsSpellCheckEnabled` should roughly map to `UITextField.SpellCheckingType` on iOS, `FormsTextBox.IsSpellCheckEnabled` on UWP, and `FormsEditText.IsSuggestionsEnabled` on Android.\r\n\r\nIn situations where the value of `IsSpellCheckEnabled` would conflict with the selected Keyboard settings (i.e., where spell checking is not a feature offered for the selected keyboard), this value will have no effect.\r\n\r\n## Backward Compatibility\r\n\r\nThe renderers for Entry and Editor on each platform should check `BindableObject.GetIsDefault()`; the behavior of the renderers should only be altered if `IsSpellCheckEnabled` has been explicitly set. This should provide backward compatibility.\r\n\r\n## Difficulty: Easy\r\n\r\n"},{"Id":"7152631746","Type":"IssuesEvent","CreatedAt":"2018-01-25T21:45:40","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1659","RelatedDescription":"Opened issue \"Button TextAlignment\" (#1659) at xamarin/Xamarin.Forms","RelatedBody":"## Rationale\r\n\r\n`Button`s do not currently have `HorizonalTextAlignment` or `VerticalTextAlignment` properties, so the text is always aligned in the center of the `Button`.\r\n\r\n## Implementation\r\n\r\nAdd bindable properties to `Button` to match `Label`:\r\n\r\n```csharp\r\npublic static readonly BindableProperty VerticalTextAlignmentProperty = BindableProperty.Create(\"VerticalTextAlignment\", typeof(TextAlignment), typeof(Button), TextAlignment.Center, propertyChanged: OnVerticalTextAlignmentPropertyChanged);\r\n\r\npublic static readonly BindableProperty HorizontalTextAlignmentProperty = BindableProperty.Create(nameof(ITextAlignmentElement.HorizontalTextAlignment), typeof(TextAlignment), typeof(Button), TextAlignment.Center, propertyChanged: OnHorizontalTextAlignmentPropertyChanged);\r\n```\r\n\r\nRenderers will need to be updated accordingly.\r\n\r\n## Expected Result\r\n\r\n### Android\r\n\r\n- `Button.HorizontalTextAlignment == TextAlignment.Start`: text should align to the left in LTR mode and to the right on RTL mode.\r\n- `Button.HorizontalTextAlignment == TextAlignment.Center`: text should align to the horizontal middle. Default.\r\n- `Button.HorizontalTextAlignment == TextAlignment.End`: text should align to the right in LTR mode and to the left on RTL mode.\r\n\r\n- `Button.VerticalTextAlignment == TextAlignment.Start`: text should align to the top of the `Button`.\r\n- `Button.VerticalTextAlignment == TextAlignment.Center`: text should align to the vertical middle. Default.\r\n- `Button.VerticalTextAlignment == TextAlignment.End`: text should align to the bottom of the `Button`.\r\n\r\n### iOS\r\n\r\nSee Android\r\n\r\n### UWP\r\n\r\nSee Android\r\n\r\n## Implications for CSS\r\n\r\n`Button`s should now support `text-align`. I guess `vertical-align` is the closest analogy to `VerticalTextAlignment`.\r\n\r\n## Backward Compatibility\r\n\r\nSince we are adding new properties, there should be no compatibility problems as long as:\r\n\r\n1. We ensure that a `Button`'s text defaults to centered, as is the expected behavior now,\r\n2. We ensure that any Effects or Custom Renderers that may have been created to produce this behavior take precedence over any values that we set, to the best of our ability.\r\n\r\nThird party renderers will need to be updated to ensure that this functionality is officially supported.\r\n\r\n## Difficulty : Easy\r\n\r\nThis is an easy change and great for a first-time contributor. "}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7153805259","Type":"PullRequestEvent","CreatedAt":"2018-01-26T04:10:29","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3314","RelatedDescription":"Merged pull request \"[avfoundation] Fix AVAudioUnitComponentManager default .ctor crash\" (#3314) at xamarin/xamarin-macios","RelatedBody":"It looks like this should not have been bound since there's a singleton-like static property to use the type.\nKeeping binary compatibility.\n\n- Fixes github issue #3303: AVAudioUnitComponentManager default .ctor can crash on macOS 10.13.3\n(https://github.com/xamarin/xamarin-macios/issues/3303)"},{"Id":"7153783362","Type":"PullRequestEvent","CreatedAt":"2018-01-26T04:00:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3319","RelatedDescription":"Opened pull request \"[tests] Adjust monotouch-test so it does not crash/fail on simulator and devices running 11.3\" (#3319) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7153753827","Type":"PullRequestEvent","CreatedAt":"2018-01-26T03:46:53","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3317","RelatedDescription":"Merged pull request \"[harness] Update mlaunch_url link (w/Xcode 9.3 fix)\" (#3317) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7153683748","Type":"PullRequestEvent","CreatedAt":"2018-01-26T03:17:42","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3318","RelatedDescription":"Opened pull request \"[DON'T MERGE][GameKit] Update to Xcode 9.3 Beta 1\" (#3318) at xamarin/xamarin-macios","RelatedBody":"We are not completely sure that `GKGameSession (GKGameSessionEventListenerPrivate)` category is meant to be exposed, filler [radar://36893820](https://trello.com/c/XZ1GOttb) to see if this is ok to be used. **Don't merge** until we hear back."},{"Id":"7153306413","Type":"PullRequestEvent","CreatedAt":"2018-01-26T00:57:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3129","RelatedDescription":"Merged pull request \"[Mmp] Allow multiple assemblies to be passed to generate the registrar\" (#3129) at xamarin/xamarin-macios","RelatedBody":"By convention, the first assembly is the target platform assembly"},{"Id":"7153224389","Type":"PullRequestEvent","CreatedAt":"2018-01-26T00:28:48","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3315","RelatedDescription":"Merged pull request \"[xtro] Fix .todo that were addressed during Xcode 9.3 beta 1 bump\" (#3315) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7152906237","Type":"PullRequestEvent","CreatedAt":"2018-01-25T22:50:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3317","RelatedDescription":"Opened pull request \"[harness] Update mlaunch_url link (w/Xcode 9.3 fix)\" (#3317) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7152814492","Type":"IssuesEvent","CreatedAt":"2018-01-25T22:27:44","Actor":"jgold6","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3316","RelatedDescription":"Opened issue \"Building Xamarin.iOS from source does not install mlaunch\" (#3316) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build XI from the public source code and install it as the system XI\r\n2. Open VS4M and create an iOS SIngle View app project\r\n3. Deploy the app to a simulator\r\n\r\n### Expected Behavior\r\nApp will deploy\r\n### Actual Behavior\r\nPopup indicating that app can't be launched due to missing mlaunch\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.4 Preview (7.4 build 839)\r\nInstallation UUID: f86726f2-bd5d-4610-867e-44e82f306ca2\r\nRuntime:\r\n\tMono 5.8.0.103 (2017-10/1359c52fc6e) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000103\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.18 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.1 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/jongoldberger/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.2   (API level 17)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_91\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_91-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0-beta1+69\r\nHash: 4012b4e\r\nBranch: master\r\nBuild date: Thu, 07 Dec 2017 16:20:26 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.18 (Visual Studio Enterprise)\r\nHash: 4c56cbbf\r\nBranch: d15-6\r\nBuild date: 2018-01-24 15:06:03-1000\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704000839\r\nGit revision: 82eabac6f9ebeaa9c0f3143baa8037c26c6c00fc\r\nBuild date: 2018-01-05 22:22:29-05\r\nXamarin addins: b2cfc17e56386f2c360aaa8b02404b900d6be8c1\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.2\r\nDarwin 17.3.0 Darwin Kernel Version 17.3.0\r\n    Thu Nov  9 18:09:22 PST 2017\r\n    root:xnu-4570.31.3~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n"},{"Id":"7152654840","Type":"PullRequestEvent","CreatedAt":"2018-01-25T21:50:52","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3311","RelatedDescription":"Merged pull request \"[CoreImage] Update to Xcode 9.3 Beta 1\" (#3311) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"956616920408772610","CreatedAt":"2018-01-25T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get your first look at the #Xamarin Android Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/uKkOHzbp3U","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"956570118569496576","CreatedAt":"2018-01-25T16:51:03+00:00","UserScreenname":"xamarinhq","Text":"Our @XamarinU webinar on automating the lifecycle of your iOS, Android, Windows, and macOS apps with #VSAppCenter i… https://t.co/XuCIwVEtIh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":16,"FavoriteCount":9,"RawContent":null},{"Id":"956210745984856064","CreatedAt":"2018-01-24T17:03:02+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our @XamarinU webinar tomorrow (1/25) on automating the lifecycle of your iOS, Android, Windows, and mac… https://t.co/eKFBikD0kM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":12,"RawContent":null},{"Id":"955887729816035328","CreatedAt":"2018-01-23T19:39:28+00:00","UserScreenname":"xamarinhq","Text":"Learn how to merge multiple resource dictionaries in the most recent stable release of #XamarinForms for even great… https://t.co/lYtHCJ9q5V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":33,"RawContent":null},{"Id":"955846589817479170","CreatedAt":"2018-01-23T16:56:00+00:00","UserScreenname":"xamarinhq","Text":"Native Android Facebook Authentication with Azure App Service https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":12,"RawContent":null},{"Id":"955516166373560322","CreatedAt":"2018-01-22T19:03:01+00:00","UserScreenname":"xamarinhq","Text":"Check out the what, why, and how of Mobile #DevOps with #VSAppCenter in this special guest series from @gshackles:… https://t.co/fClbh5B47i","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":26,"RawContent":null},{"Id":"955191774359838721","CreatedAt":"2018-01-21T21:34:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with ActivityTask, a helper for async/await on Android: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"954895828895916032","CreatedAt":"2018-01-21T01:58:01+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to add augmented reality to your #Xamarin apps with #ARKit in #iOS11:… https://t.co/pxoHpfwz5J","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":24,"RawContent":null},{"Id":"954424071562956802","CreatedAt":"2018-01-19T18:43:25+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/ipWfWuyPoB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":25,"RawContent":null},{"Id":"954398799362961408","CreatedAt":"2018-01-19T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":25,"RawContent":null},{"Id":"954066862928793600","CreatedAt":"2018-01-18T19:04:00+00:00","UserScreenname":"xamarinhq","Text":"Check out the latest and greatest from @TheXamarinShow on getting started with iOS development in C# with #Xamarin: https://t.co/OpnYrTJhnw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"954040437962104832","CreatedAt":"2018-01-18T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/hJ3E8pPggV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":8,"RawContent":null},{"Id":"953670252793090049","CreatedAt":"2018-01-17T16:48:01+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/BbdcfvhwCa","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":35,"RawContent":null},{"Id":"953354972019732481","CreatedAt":"2018-01-16T19:55:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/yTZCnF9Yko","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":127,"FavoriteCount":70,"RawContent":null},{"Id":"953306603851218944","CreatedAt":"2018-01-16T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":26,"RawContent":null},{"Id":"952935662407348230","CreatedAt":"2018-01-15T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use new project templates in #VisualStudio 2017 that enable you to use #dotNET Standard as a code shar… https://t.co/nRyxpQLx5D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":32,"RawContent":null},{"Id":"952587115417821191","CreatedAt":"2018-01-14T17:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/WfBaPE3aMD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"952220954310127617","CreatedAt":"2018-01-13T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/olv2ycerlY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":183,"FavoriteCount":84,"RawContent":null},{"Id":"951923977278164992","CreatedAt":"2018-01-12T21:08:56+00:00","UserScreenname":"xamarinhq","Text":"Start your weekend on a high note with this week's episode of the @XamarinPodcast, covering Android 8.1, the new… https://t.co/nyDaQnMQOM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-01-26T05:30:36.5593603Z","RunDurationInMilliseconds":4231}