{"Data":{"Blog":{"FeedItems":[{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null},{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8388141628","Type":"IssuesEvent","CreatedAt":"2018-10-09T04:41:47","Actor":"Steven-Mark-Ford","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2278","RelatedDescription":"Opened issue \"Deploy to multiple devices from visual studio\" (#2278) at xamarin/xamarin-android","RelatedBody":"It is highly unproductive / infeasible during the dev-cycle to use xamarin test cloud as a way to check ui changes across multiple screen sizes. It would be great and a huge time saver if you could select multiple deployment targets when building an app / debugging an app (maybe with ability to select the primary one for actual stepping through the code etc.).\r\n\r\n"},{"Id":"8387029299","Type":"PullRequestEvent","CreatedAt":"2018-10-08T22:14:37","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2274","RelatedDescription":"Merged pull request \"[build] CMakeLists.txt fixes for sqlite on Windows\" (#2274) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2271\r\nContext: https://github.com/xamarin/xamarin-android/commit/673757d85ce9d3d14745f01d3c34a6c24e00126e\r\nContext: https://cmake.org/cmake/help/v3.3/command/file.html\r\n\r\n`cmake` mandates a uniform way of presenting filesystem paths across\r\nall the operating systems it supports - it requires that path segments\r\nare separated with the `/` character.\r\n\r\nIn 673757d8, we faced a similar problem, but used a string replace as\r\na fix:\r\n\r\n    string(REPLACE \"\\\\\" \"/\" MY_PATH ${MY_PATH})\r\n\r\nThere is a proper, more \"portable\" way to do this, such as:\r\n\r\n    file(TO_CMAKE_PATH \"${MY_PATH}\" MY_PATH)\r\n\r\nUsing this for `SQLITE_XAMARIN_SOURCES` fixes the sqlite build on\r\nWindows."},{"Id":"8387029290","Type":"IssuesEvent","CreatedAt":"2018-10-08T22:14:37","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2271","RelatedDescription":"Closed issue \"[sqlite] \"Invalid character escape\" CMake build error due to backslash path separators on Windows\" (#2271) at xamarin/xamarin-android","RelatedBody":"The current `xamarin-android/master` CI build on Windows is hitting an error due to a hiccup with Windows path separators in the new CMake build process for SQLite (from <https://github.com/xamarin/xamarin-android/pull/2252>). I'm filing a quick issue just to be thorough.\r\n\r\nAs a temporary local workaround in my environment, I did:\r\n\r\n```patch\r\ndiff --git a/src/sqlite-xamarin/sqlite-xamarin.props b/src/sqlite-xamarin/sqlite-xamarin.props\r\nindex 5c44fef9..546fe57d 100644\r\n--- a/src/sqlite-xamarin/sqlite-xamarin.props\r\n+++ b/src/sqlite-xamarin/sqlite-xamarin.props\r\n@@ -3,7 +3,7 @@\r\n   <Import Project=\"$(MSBuildThisFileDirectory)\\..\\..\\build-tools\\scripts\\cmake-common.props\" />\r\n\r\n   <PropertyGroup>\r\n-    <_CommonDefines>-DSQLITE_SOURCE_DIR=\"$(SqliteSourceFullPath)\"</_CommonDefines>\r\n+    <_CommonDefines>-DSQLITE_SOURCE_DIR=\"$(SqliteSourceFullPath.Replace ('\\', '/'))\"</_CommonDefines>\r\n     <_CmakeCommonHostFlags>$(_CmakeCommonFlags) $(_CommonDefines)</_CmakeCommonHostFlags>\r\n     <_CmakeAndroidFlags>$(_CmakeAndroidFlags) $(_CommonDefines)</_CmakeAndroidFlags>\r\n     <_CmakeMxeCommonFlags32>$(_CmakeMxeCommonFlags32) -DCMAKE_TOOLCHAIN_FILE=$(_CmakeMxeToolchainBasePath)-32.cmake -DMINGW_TARGET_32=1</_CmakeMxeCommonFlags32>\r\n```\r\n\r\nBut I think this might not properly account for cases where paths on macOS include literal `\\` characters.\r\n\r\n### Steps to Reproduce\r\n\r\nBuild `xamarin-android/master` on Windows.\r\n\r\n### Expected Behavior\r\n\r\nThe new CMake build process for SQLite succeeds.\r\n\r\n### Actual Behavior\r\n\r\nThe new CMake build process for SQLite hits an error because CMake treats the Windows backslash path separator as the start of an escape sequence when reading CMakeLists.txt:\r\n\r\n```\r\nCMake Error at CMakeLists.txt:146 (add_library):\r\n      Syntax error in cmake code when parsing string\r\n\r\n        E:\\A\\_work\\14\\s\\external\\sqlite/dist/sqlite3.c\r\n\r\n      Invalid character escape '\\A'.\r\n```\r\n\r\nExample CI build: <https://dev.azure.com/devdiv/DevDiv/_build/results?buildId=2092941>"},{"Id":"8387008580","Type":"PullRequestEvent","CreatedAt":"2018-10-08T22:09:03","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2277","RelatedDescription":"Opened pull request \"Monodroid refactor\" (#2277) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8386907992","Type":"PullRequestEvent","CreatedAt":"2018-10-08T21:43:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2268","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Merge local and dependencies Resources conflicting\" (#2268) at xamarin/xamarin-android","RelatedBody":"Fixes #2205\r\n\r\nThe problem here is on the first build the compiled.flata archive only contains\r\n\r\n```\r\nArchive:  compiled.flata\r\nLength   Method    Size  Cmpr    Date    Time   CRC-32   Name\r\n--------  ------  ------- ---- ---------- ----- --------  ----\r\n     400  Stored      400   0% 01-01-1980 01:00 8ade13a7  values_goog_svcs_json.arsc.flat\r\n--------          -------  ---                            -------\r\n     400              400   0%                            1 file\r\n```\r\n\r\nwhich suggested that something is overwriting the compiled.flata archive created by `_CompileResources`.\r\n\r\nThe actual problem. The `_CompileAndroidLibraryResources` target is processing the directory for the `GooglePlayServicesJson` items. And as a result its creating a compiled.flata archive in the same place as the main Resource directory compiled.flata archive is located. As a result the `_CompileResources` never runs. This was because we hard coded `$(path)\\..\\compiled.flata` as the location for the archive. This was based on the assumption that library resources would exist in `obj\\$(Configuration)\\lp\\xx\\jl\\res`. This would mean the archive would end up in `obj\\$(Configuration)\\lp\\xx\\jl`. However for the `GooglePlayServicesJson`, its directory is created in `obj\\$(Configuration)\\xx`. As a result the archive it created in `obj\\$(Configuration)` .. i.e in the same place as the main one. And because it exists.. we don't re-create it.\r\n\r\nSo the solution is to move all the archives into a dedicated folder. We generate a hash based on the path of the resource directory to create a unique archive name. We then output all the items into `obj\\$(Configuration)\\flata`. The main archive is still called `compiled.flata` but it output in the same place.  \r\n"},{"Id":"8386907966","Type":"IssuesEvent","CreatedAt":"2018-10-08T21:43:49","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2205","RelatedDescription":"Closed issue \"[AAPT2] Merge local and dependencies Resources conflicting\" (#2205) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android project\r\n2. Enable aapt2\r\n3. Install any NuGet package that depends on Xamarin.GooglePlayServices.Basement\r\n4. Configure google-services.json with build action of GoogleServicesJson\r\n5. Have any Resource on app (layout, string, animation), but lets add an empty anim/simple_animation.xml `<set></set>`\r\n6. Add the following lines on MainActivity.OnCreate:             \r\n```\r\n            var animation = Resource.Animation.simple_animation;\r\n            var gcm = Resource.String.gcm_defaultSenderId;\r\n```\r\n\r\nA.1 - Clean the project and Rebuild\r\nA.2 - **Resource.String.gcm_defaultSenderId** exist but **Resource.Animation.simple_animation** doesn't.\r\n\r\nB.1 - Edit anim/simple_animation.xml (add an empty line at the end or any other valid change) and Save\r\nB.2 -  **Resource.String.gcm_defaultSenderId** is missing but now **Resource.Animation.simple_animation** exists.\r\n\r\nC.1 - Install Xamarin.Firebase.Analytics\r\nC.2 - Repeat step on B\r\nC.3 - Delete the  **Resource.String.gcm_defaultSenderId** so you can build\r\nC.4 - Run the app\r\nC.5 - Initialization issue with **Didn't find class \"com.google.android.gms.R$string\" on path: DexPathList[[zip file \"/data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/base.apk\"],nativeLibraryDirectories=[/data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/lib/arm64, /system/fake-libs64, /data/app/com.testing.TestAapt2-OenTlsPjUVvkgdqQhDSGUw==/base.apk!/lib/arm64-v8a, /system/lib64, /system/vendor/lib64]]** \r\n\r\nD.1 - Additional: Try the same as C with the Facebook login button.\r\n\r\nTest project:\r\n[conflict_test_aapt2.zip](https://github.com/xamarin/xamarin-android/files/2403050/conflict_test_aapt2.zip)\r\n\r\n### Expected Behavior\r\nBoth **Resource.String.gcm_defaultSenderId** and **Resource.Animation.simple_animation** should exist.\r\n\r\n### Actual Behavior\r\nXOR **Resource.String.gcm_defaultSenderId**, **Resource.Animation.simple_animation**\r\n\r\n### Additional Information\r\n\r\nThis issue don't seem to be exclusive to GooglePlayServices or AAPT2.\r\n\r\nNot exclusive to GooglePlayServices: I've experienced a similar problem with Xamarin.Facebook.Android and a custom binding for https://github.com/MiguelCatalan/MaterialSearchView \r\n\r\nNot exclusive to AAPT2, but on the extreme on AAPT2 - I can't tell if the issue is the same, but for more context: When using the old aapt we get get random runtime issues after a AXML file change about missing resources on GooglePlayServices, Facebook login button and MaterialSearchView.\r\n\r\nWhen using **aapt** issues A and B would never happen, but issue C is totally random after editing a AXML file.\r\n\r\nWhen enabling **aapt2** issues A, B and C are constants.\r\n\r\nOn our main project we have Multidex enabled. The Test Project provided before don't need it to trigger the problem.\r\n\r\nWhen using aapt or aapt2 I've noticed that the **obj** folder is recreated 2 or 3 times after I delete it - my clean strategy involves closing VS4M, killing mono_sgen64, aapt and java. Then delete obj and bin folders.\r\n\r\nIssue C for GooglePlayServices is reported here https://github.com/xamarin/GooglePlayServicesComponents/issues/69\r\n\r\n### Version Information\r\n\r\n> === Visual Studio Community 2017 for Mac ===\r\n> \r\n> Version 7.6.6 (build 17)\r\n> Installation UUID: 9a5b91cf-e5ce-4027-8e14-daa7b5b84c3a\r\n> Runtime:\r\n> \tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n> \tGTK+ 2.24.23 (Raleigh theme)\r\n> \tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n> \r\n> \tPackage version: 512000301\r\n> \r\n> === NuGet ===\r\n> \r\n> Version: 4.3.1.4445\r\n> \r\n> === .NET Core ===\r\n> \r\n> Runtime: /usr/local/share/dotnet/dotnet\r\n> Runtime Versions:\r\n> \t2.1.2\r\n> \t2.1.1\r\n> \t2.0.5\r\n> \t2.0.0\r\n> \t1.1.2\r\n> \t1.0.5\r\n> SDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\n> SDK Versions:\r\n> \t2.1.302\r\n> \t2.1.301\r\n> \t2.1.4\r\n> \t2.0.2\r\n> \t2.0.0\r\n> \t1.0.4\r\n> MSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n> \r\n> === Xamarin.Profiler ===\r\n> \r\n> Version: 1.6.3\r\n> Location: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n> \r\n> === Apple Developer Tools ===\r\n> \r\n> Xcode 10.0 (14320.25)\r\n> Build 10A255\r\n> \r\n> === Xamarin.Mac ===\r\n> \r\n> Version: 4.6.0.14 (Visual Studio Community)\r\n> Hash: 1a6e2786\r\n> Branch: \r\n> Build date: 2018-08-28 00:12:06-0400\r\n> \r\n> === Xamarin.iOS ===\r\n> \r\n> Version: 12.0.0.15 (Visual Studio Community)\r\n> Hash: 84552a46\r\n> Branch: xcode10\r\n> Build date: 2018-09-17 21:54:33-0400\r\n> \r\n> === Xamarin.Android ===\r\n> \r\n> Version: 9.0.0.20 (Visual Studio Community)\r\n> Android SDK: /Users/flash/Library/Developer/Xamarin/android-sdk-macosx\r\n> \tSupported Android versions:\r\n> \t\t4.0.3 (API level 15)\r\n> \t\t4.1   (API level 16)\r\n> \t\t4.4   (API level 19)\r\n> \t\t6.0   (API level 23)\r\n> \t\t7.0   (API level 24)\r\n> \t\t7.1   (API level 25)\r\n> \t\t8.0   (API level 26)\r\n> \t\t8.1   (API level 27)\r\n> \r\n> SDK Tools Version: 26.1.1\r\n> SDK Platform Tools Version: 28.0.1\r\n> SDK Build Tools Version: 28.0.2\r\n> \r\n> Java SDK: /Users/flash/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n> openjdk version \"1.8.0-9\"\r\n> OpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\n> OpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n> \r\n> Android Designer EPL code available here:\r\n> https://github.com/xamarin/AndroidDesigner.EPL\r\n> \r\n> === Xamarin Inspector ===\r\n> \r\n> Version: 1.4.3\r\n> Hash: db27525\r\n> Branch: 1.4-release\r\n> Build date: Mon, 09 Jul 2018 21:20:18 GMT\r\n> Client compatibility: 1\r\n> \r\n> === Build Information ===\r\n> \r\n> Release ID: 706060017\r\n> Git revision: 822323b5f6295b271d4c9bfaca4129f90ec41f38\r\n> Build date: 2018-09-18 20:19:40+00\r\n> Build branch: release-7.6-xcode10\r\n> Xamarin extensions: a83eb4b7ad9174ac2e705f2c4257ecd15688ba97\r\n> \r\n> === Operating System ===\r\n> \r\n> Mac OS X 10.13.6\r\n> Darwin 17.7.0 Darwin Kernel Version 17.7.0\r\n>     Thu Jun 21 22:53:14 PDT 2018\r\n>     root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n> \r\n> === Enabled user installed extensions ===\r\n> \r\n> Internet of Things (IoT) development (Preview) 7.5\r\n\r\n### Log File\r\nR.txt files: One for when the local resources win and the other for when the external dependencies win.\r\n[rtxtFiles.zip](https://github.com/xamarin/xamarin-android/files/2402992/rtxtFiles.zip)"},{"Id":"8386728013","Type":"PullRequestEvent","CreatedAt":"2018-10-08T21:03:12","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2275","RelatedDescription":"Closed pull request \"Backport c++\" (#2275) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8386635314","Type":"PullRequestEvent","CreatedAt":"2018-10-08T20:44:09","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2273","RelatedDescription":"Merged pull request \"[monodroid] Fix regression in monodroid_dylib_mono_init\" (#2273) at xamarin/xamarin-android","RelatedBody":"Recent move of libmonodroid to C++ broke the\r\n`monodroid_dylib_mono_init` usage with *NULL* libmono_path parameter,\r\nwhich is needed at\r\nhttps://github.com/xamarin/java.interop/blob/master/src/java-interop/java-interop-gc-bridge-mono.c#L266\r\n\r\nThat led to the following crash:\r\n\r\n    Assertion failed: (directories), function load_dso_from_specified_dirs, file /Users/rodo/git/xa5/src/monodroid/jni/monodroid-glue.cc, line 761.\r\n    Stacktrace:\r\n\r\n      at <unknown> <0xffffffff>\r\n      at (wrapper managed-to-native) Java.Interop.NativeMethods.java_interop_gc_bridge_new (intptr) [0x00002] in <fe331788190c4039ae28220ef452fac0>:0\r\n      at Java.Interop.MonoRuntimeValueManager.OnSetRuntime (Java.Interop.JniRuntime) [0x0002c] in <fe331788190c4039ae28220ef452fac0>:0\r\n      at Java.Interop.JniRuntime.SetRuntime<T_REF> (T_REF) [0x00012] in <ad161b8c9963497ea547279f476a6d30>:0\r\n      at Java.Interop.JniRuntime.SetValueManager (Java.Interop.JniRuntime/CreationOptions) [0x0001a] in <ad161b8c9963497ea547279f476a6d30>:0\r\n      at Java.Interop.JniRuntime..ctor (Java.Interop.JniRuntime/CreationOptions) [0x0008e] in <ad161b8c9963497ea547279f476a6d30>:0\r\n      at Java.Interop.JreRuntime..ctor (Java.Interop.JreRuntimeOptions) [0x00007] in <fe331788190c4039ae28220ef452fac0>:0\r\n      at Java.Interop.JreRuntimeOptions.CreateJreVM () [0x00000] in <fe331788190c4039ae28220ef452fac0>:0\r\n      at Xamarin.Android.Tools.JniMarshalMethodGenerator.App.CreateJavaVM (string) [0x0000d] in <58fdaf202214494cab0a9596f65c9573>:0\r\n      at Xamarin.Android.Tools.JniMarshalMethodGenerator.App.ProcessAssemblies (System.Collections.Generic.List`1<string>) [0x00000] in <58fdaf202214494cab0a9596f65c9573>:0\r\n      at (wrapper remoting-invoke-with-check) Xamarin.Android.Tools.JniMarshalMethodGenerator.App.ProcessAssemblies (System.Collections.Generic.List`1<string>) [0x00032] in <58fdaf202214494cab0a9596f65c9573>:0\r\n      at (wrapper xdomain-dispatch) Xamarin.Android.Tools.JniMarshalMethodGenerator.App.ProcessAssemblies (object,byte[]&,byte[]&) [0x00023] in <58fdaf202214494cab0a9596f65c9573>:0\r\n      at (wrapper xdomain-invoke) Xamarin.Android.Tools.JniMarshalMethodGenerator.App.ProcessAssemblies (System.Collections.Generic.List`1<string>) <0x001db>\r\n      at (wrapper remoting-invoke-with-check) Xamarin.Android.Tools.JniMarshalMethodGenerator.App.ProcessAssemblies (System.Collections.Generic.List`1<string>) [0x00000] in <58fdaf202214494cab0a9596f65c9573>:0\r\n      at Xamarin.Android.Tools.JniMarshalMethodGenerator.App.Main (string[]) <0x001aa>\r\n      at (wrapper runtime-invoke) <Module>.runtime_invoke_int_object (object,intptr,intptr,intptr) <0x0010c>\r\n\r\n    Native stacktrace:\r\n\r\n    \t0   mono                                0x0000000105f92b38 mono_handle_native_crash + 264\r\n    \t1   libsystem_platform.dylib            0x00007fff606e9b3d _sigtramp + 29\r\n    \t2   ???                                 0x0000000000000048 0x0 + 72\r\n    \t3   libsystem_c.dylib                   0x00007fff605a81c9 abort + 127\r\n    \t4   libsystem_c.dylib                   0x00007fff60570868 basename_r + 0\r\n    \t5   libmono-android.debug.dylib         0x0000000109421189 _ZN7xamarin7android8internal13AndroidSystem28load_dso_from_specified_dirsEPPKciS4_i + 89\r\n    \t6   libmono-android.debug.dylib         0x0000000109421284 _ZN7xamarin7android8internal13AndroidSystem26load_dso_from_app_lib_dirsEPKci + 52\r\n    \t7   libmono-android.debug.dylib         0x0000000109421334 _ZN7xamarin7android8internal13AndroidSystem29load_dso_from_any_directoriesEPKci + 84\r\n    \t8   libmono-android.debug.dylib         0x000000010942a73c monodroid_dylib_mono_init + 60\r\n    \t9   libmono-android.debug.dylib         0x0000000109411dc8 java_interop_gc_bridge_new + 56"},{"Id":"8386217534","Type":"PullRequestEvent","CreatedAt":"2018-10-08T19:17:54","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2261","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Create a Faux ndk directory.\" (#2261) at xamarin/xamarin-android","RelatedBody":"Add a helper method to detect the Ndk Directory."},{"Id":"8386124769","Type":"PullRequestEvent","CreatedAt":"2018-10-08T18:58:21","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2272","RelatedDescription":"Closed pull request \"[sqlite] Use '/' as path separator in cmake on Windows\" (#2272) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2271\r\n\r\ncmake mandates a uniform way of presenting filesystem paths across all the\r\noperating systems it supports - it requires that path segments are separated\r\nwith the `/` character. This commit makes sure that Windows build of the library\r\nuses the expected path separator character but also makes sure to escape the `\\`\r\ncharacter on non-Windows systems, should it happen to be part of the SQLite's\r\nsource directory path."},{"Id":"8386107251","Type":"PullRequestEvent","CreatedAt":"2018-10-08T18:54:52","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2276","RelatedDescription":"Opened pull request \"[Linux build] Remove {gcc,g++}-multilib packages from dependencies\" (#2276) at xamarin/xamarin-android","RelatedBody":"Those packages aren't necessary to build Xamarin.Android but their installation\r\nmay cause removal of other compilers, for instance gcc/g++ cross-compilers for\r\narchitectures different than the host one."},{"Id":"8385881478","Type":"PullRequestEvent","CreatedAt":"2018-10-08T18:09:49","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2275","RelatedDescription":"Opened pull request \"Backport c++\" (#2275) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8385676444","Type":"PullRequestEvent","CreatedAt":"2018-10-08T17:29:03","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2274","RelatedDescription":"Opened pull request \"[build] CMakeLists.txt fixes for sqlite on Windows\" (#2274) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2271\r\nContext: https://github.com/xamarin/xamarin-android/commit/673757d85ce9d3d14745f01d3c34a6c24e00126e\r\nContext: https://cmake.org/cmake/help/v3.3/command/file.html\r\n\r\n`cmake` mandates a uniform way of presenting filesystem paths across\r\nall the operating systems it supports - it requires that path segments\r\nare separated with the `/` character.\r\n\r\nIn 673757d8, we faced a similar problem, but used a string replace as\r\na fix:\r\n\r\n    string(REPLACE \"\\\\\" \"/\" MY_PATH ${MY_PATH})\r\n\r\nThere is a proper, more \"portable\" way to do this, such as:\r\n\r\n    file(TO_CMAKE_PATH \"${MY_PATH}\" MY_PATH)\r\n\r\nUsing this for `SQLITE_XAMARIN_SOURCES` fixes the sqlite build on\r\nWindows."},{"Id":"8385133416","Type":"PullRequestEvent","CreatedAt":"2018-10-08T15:48:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2269","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] `ResourcePatcher` for API 19+.\" (#2269) at xamarin/xamarin-android","RelatedBody":"The instant run fast deployment modifications are only enabled if the developer is targeting API 19 or above. So we should only include the `ResourcePatcher` and `MonkeyPatcher` files if the same conditions are met. "}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8387692755","Type":"PullRequestEvent","CreatedAt":"2018-10-09T01:59:54","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3977","RelatedDescription":"Merged pull request \"[Xaml[C]] resolve Extensions first\" (#3977) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nXamlLoader should first look for type with the Extension suffix. It used\r\nto be the case, but somehow regressed.\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes issue describe in comment https://github.com/xamarin/Xamarin.Forms/issues/3606#issuecomment-422377338\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8387689320","Type":"PullRequestEvent","CreatedAt":"2018-10-09T01:58:36","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3978","RelatedDescription":"Merged pull request \"[XamlC] don't compile bindings with Source\" (#3978) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\nSources are usually x:reference that can't be resolved at compilation\r\ntime.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3606\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8385360853","Type":"IssuesEvent","CreatedAt":"2018-10-08T16:27:48","Actor":"BioTurboNick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4037","RelatedDescription":"Opened issue \"Thai crash: Not a valid calendar for the given culture.\" (#4037) at xamarin/Xamarin.Forms","RelatedBody":"## Thai crash Not a valid calendar for the given culture.\r\n\r\n_Submitted by a community member on 2017-08-28 08:25 UTC_\r\n\r\nPreviously I reported bug with Thai culture (<https://bugzilla.xamarin.com/show_bug.cgi?id=31228>).\r\nIt was indeed fixed and now works fine, but now I experience another bug which can be reproduced using the attached project. All encodings are checked and included in the project.\r\nIn order to reproduce it set android phone language (I tested it on android 4.4) to be Thai language.\r\nPut the following line in the OnCreate:\r\nvar date = DateTime.Parse(\"2000-31-07\");\r\nor\r\nvar date = DateTime.ParseExact(\"2000-31-07\",\"yyyy-dd-MM\",null);\r\nAnd it will crash at runtime with the following exception:\r\nUNHANDLED EXCEPTION:\r\nSystem.ArgumentOutOfRangeException: Not a valid calendar for the given culture.\r\nParameter name: value\r\nat System.Globalization.DateTimeFormatInfo.set\\_Calendar (System.Globalization.Calendar value) [0x00154] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat System.Globalization.DateTimeFormatInfo..ctor (System.Globalization.CultureData cultureData, System.Globalization.Calendar cal) [0x00022] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat System.Globalization.CultureInfo.get\\_DateTimeFormat () [0x00033] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat System.Globalization.CultureInfo.GetFormat (System.Type formatType) [0x0002f] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat System.Globalization.DateTimeFormatInfo.get\\_CurrentInfo () [0x00021] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat System.DateTime.Parse (System.String s) [0x00000] in \\<9e5b8ac258034478aed80c25b6e73e52\\>:0 \r\nat ThaiBug2.MainActivity.OnCreate (Android.OS.Bundle savedInstanceState) [0x00009] in C:\\\\Users\\\\username\\\\Documents\\\\Visual Studio 2017\\\\Projects\\\\ThaiBug2\\\\ThaiBug2\\\\MainActivity.cs:14 \r\nat Android.App.Activity.n\\_OnCreate\\_Landroid\\_os\\_Bundle\\_ (System.IntPtr jnienv, System.IntPtr native\\_\\_this, System.IntPtr native\\_savedInstanceState) [0x0000f] in \\<947c88b5da6c4d94ab126d7acb391dc6\\>:0 \r\nat (wrapper dynamic-method) System.Object:bc4a6bc1-1943-4d65-9d85-57b6d5875e98 (intptr,intptr,intptr)\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=59077>_\r\n\r\n\r\nAppears related to #3620\r\n\r\nI'm amending this because I just recently observed the crash on iOS. I had previously seen the crash on Android and the suggested fix from the Bugzilla thread to load the calendar in MainActivity.cs worked.\r\n\r\nPresent with Xamarin.Forms 3.1.0.697729 (Unable to upgrade to 3.2 yet due to another issue)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8386667916","Type":"PullRequestEvent","CreatedAt":"2018-10-08T20:50:50","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4950","RelatedDescription":"Opened pull request \"[d15-9] Bundle Make.version with the packaged XM tests to fix testing. (#4938)\" (#4950) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8386218734","Type":"PullRequestEvent","CreatedAt":"2018-10-08T19:18:10","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4949","RelatedDescription":"Opened pull request \"[d15-9] Bump mono\" (#4949) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@969357ac02b Bump API snapshot submodule\r\n* mono/mono@fb7bbea8f9c Bump corefx\r\n\r\nDiff: https://github.com/mono/mono/compare/1fd01f4fd7dd34a3a71a79dec074c114a6f6e1e3...969357ac02b2c08a43ef89d98aca550d3648bf00"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":32,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":181,"FavoriteCount":89,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":47,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":60,"RawContent":null}]}},"RunOn":"2018-10-09T05:30:55.6993031Z","RunDurationInMilliseconds":4211}