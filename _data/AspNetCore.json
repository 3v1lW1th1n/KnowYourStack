{"Data":{"Blog":{"FeedItems":[{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null},{"Title":"Publish Improvements in Visual Studio 2017 version 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 version 15.7. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including: Ability...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project, download them,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7707291273","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:02:04","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3162","RelatedDescription":"Closed issue \"ASP Core 2.1 Template App Bootstrap Version\" (#3162) at aspnet/Home","RelatedBody":"Is there a reason why the template project for 2.1 is using bootstrap 3.3.7 and not 4?"},{"Id":"7707072565","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:09:50","Actor":"zeus82","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3162","RelatedDescription":"Opened issue \"ASP Core 2.1 Template App Bootstrap Version\" (#3162) at aspnet/Home","RelatedBody":"Is there a reason why the template project for 2.1 is using bootstrap 3.3.7 and not 4?"},{"Id":"7706392560","Type":"IssuesEvent","CreatedAt":"2018-05-21T18:43:08","Actor":"livarcocc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3161","RelatedDescription":"Opened issue \"BuildWebHost Errs on Internal IDictionary\" (#3161) at aspnet/Home","RelatedBody":"_From @rchrismon on May 11, 2018 5:51_\n\nNot sure where to post this, perhaps you can tell me. \r\n\r\nCore 2.1 Web MVC App, Program.cs is stock out of the box. When I debug the app, it errs at \r\n\r\n`public static IWebHost BuildWebHost(string[] args) =>\r\n\t\t\tWebHost.CreateDefaultBuilder(args)\r\n\t\t\t\t   .UseStartup<Startup>()\r\n\t\t\t\t   .Build();`\r\nThe error is:\r\n\r\n> Method not found: 'System.Collections.IDictionary Internal.Runtime.Augments.EnvironmentAugments.GetEnvironmentVariables()'.\r\n\r\nFWIW, poking into the error details, I saw many errors around System.Reflection. One in particular caught my eye. \r\n\r\n> ((System.Reflection.RuntimeAssembly)((System.RuntimeType)((System.RuntimeType)((System.Reflection.RuntimeMethodInfo)($exception).TargetSite).DeclaringType).BaseType).Assembly).CodeBase\r\n\r\nAny insight, or a better place to ask, I'd greatly appreciate.\r\n\r\nThanks,\r\nRandy Chrismon\n\n_Copied from original issue: dotnet/sdk#2236_"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7708486218","Type":"IssuesEvent","CreatedAt":"2018-05-22T05:24:18","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2119","RelatedDescription":"Closed issue \"Xamarin Forms app is using AspNetCore.Signal.Client but it doesnot connect with AspNetCore.Signal Server \" (#2119) at aspnet/SignalR","RelatedBody":"I am trying to develop a project with Angular5, AspNetCore 2 and Xamarin and I need to use AspNetCore.Signalr to make a chat app ( the app isnot chat app, chat will be a modul ) so First , I downloaded **Microsoft.AspNetCore.SignalR -Version 1.0.0-preview1-final** for Signalr Server Second I downloaded **Microsoft.AspNetCore.SignalR.Client -Version 1.0.0-preview1-final** for Xamarin.Forms application to build a client app. I could connected to Signalr Server with Angular app but I couldnot connect with Xamarin Client app . I am using ngrok to access my localhost in Xamarin app and I always got **101 switching protocol**  error  however, when I use same ngrok link in Angular app there is no problem I could access to Signalr  server. Also I watched Visual Studio Output section it seems try to connect to Server because I am seeing same connectionid in Server and Client app at VS output section anyway I am using this code to connect to server from Xamarin app\r\n               \r\n                              _hub = new HubConnectionBuilder()\r\n                                          .WithUrl(\"http://.../getchat\")                 \r\n                                          .WithConsoleLogger(LogLevel.Debug)\r\n                                          .Build();\r\n\r\n                                await _hub.StartAsync();\r\n\r\nI havenot listened any method in SignalR server because when app connect to server, I want to see accessing **OnConnectedAsync** method at my hub class\r\n\r\nWhat should I do? \r\n\r\n"},{"Id":"7708264001","Type":"IssuesEvent","CreatedAt":"2018-05-22T03:52:30","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2346","RelatedDescription":"Opened issue \"Automatically test old clients against the latest server\" (#2346) at aspnet/SignalR","RelatedBody":"Old versions of SignalR clients (C#/TS) should work with the latest server version. Need an automated way to test this.\r\n\r\ne.g. 2.1 C# client should continue to work against 2.1.1 server.\r\n\r\nShould be extensible so as to support as many future clients as required for the future.\r\n\r\ne.g. 2.1 and 2.1.1 C# clients should continue to work against 2.2 SignalR server."},{"Id":"7708222714","Type":"PullRequestEvent","CreatedAt":"2018-05-22T03:37:16","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2345","RelatedDescription":"Opened pull request \"Clarify record separator usage\" (#2345) at aspnet/SignalR","RelatedBody":"The record separator was previously only mentioned in a section on JSON payloads, which may not have been clear that it's required for all messages."},{"Id":"7707847341","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:14:28","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2344","RelatedDescription":"Opened issue \"Verify in JS test logs that no errors have occured\" (#2344) at aspnet/SignalR","RelatedBody":"In C# unit tests we capture logs and verify that no unexpected errors have occured. Should do the same in JS unit tests to make sure errors are not being thrown that we are unaware of."},{"Id":"7707620635","Type":"IssuesEvent","CreatedAt":"2018-05-21T23:46:46","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2343","RelatedDescription":"Closed issue \"[2.1.1] flakey test: HubConnectionTests.StreamDoesNotStartIfTokenAlreadyCanceled\" (#2343) at aspnet/SignalR","RelatedBody":"Consider taking https://github.com/aspnet/SignalR/issues/2034 for 2.1.1"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7707852448","Type":"PullRequestEvent","CreatedAt":"2018-05-22T01:16:24","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7806","RelatedDescription":"Opened pull request \"Infer BindingSource.FormFile for IEnumerable<IFormFile>\" (#7806) at aspnet/Mvc","RelatedBody":"Fixes #7770"},{"Id":"7707648103","Type":"IssuesEvent","CreatedAt":"2018-05-21T23:56:54","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7805","RelatedDescription":"Opened issue \"Port BasicAPI  and BasicViews apps from aspnet/Performance\" (#7805) at aspnet/Mvc","RelatedBody":"## Problem\r\nAren't running any end-to-end performance tests of MVC scenarios. Though test applications exist in https://github.com/aspnet/Performance, they have not been used recently.\r\n\r\n### Details\r\n- Move two test applications (BasicAPI and BasicViews) into this repo\r\n- Add infrastructure and make .csproj changes to match https://github.com/aspnet/Benchmarks expectations\r\n- Add client script or scripts to describe a full scenario e.g. login ➡️ add pet with a unique tag ➡️ get pets with that tag ➡️ logout\r\n- Test\r\n- Update https://github.com/aspnet/Benchmarks metadata to run new scenario regularly\r\n- I'm probably leaving a sub-task out&hellip;\r\n\r\n### CC\r\n@mkArtakMSFT @rynowak @sebastienros "},{"Id":"7707441645","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:46:05","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7799","RelatedDescription":"Closed issue \"ApiControllerAttribute's binding of complex parameter cannot be overridden.\" (#7799) at aspnet/Mvc","RelatedBody":"I want to use the new `[ApiController]` attribute for the automatic '400 if model state is invalid behaviour', but still be explicit about the binding of parameters. For example:\r\n```c#\r\n[HttpGet]\r\npublic async Task<ActionResult> GetItems(\r\n            CancellationToken cancel,\r\n            [FromQuery]OffsetDateTime fromTime,\r\n            [FromQuery]OffsetDateTime toTime)\r\n```\r\nI have a custom model binder for handling those NodaTime types, but they're receiving `null` as the model value, presumably because ASP.NET is still trying to read them from the body because of the ApiController attribute. If I remove the attribute it works again. \r\n\r\nI had assumed that by being explicit about the binding source on the method, it'd override the  behaviour defined by a controller attribute, but this doesn't seem to be the case?\r\n\r\n(As an aside, can I opt-in *just* the model state handling, but not the other behaviours of `ApiController`?)"},{"Id":"7707408975","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:35:45","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7804","RelatedDescription":"Opened issue \"Port fix for https://github.com/aspnet/Mvc/issues/7609 to 2.1.1\" (#7804) at aspnet/Mvc","RelatedBody":"Issue: https://github.com/aspnet/Mvc/issues/7609"},{"Id":"7707090917","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:13:54","Actor":"richardgavel","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7803","RelatedDescription":"Opened issue \"Header binding with a nullable bool does not bind\" (#7803) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\n\r\nBug\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\nCreate a controller that takes in a parameter using [FromHeader] binding whose data type is bool? and invoke it with a non-null value.\r\n\r\n#### Description of the problem:\r\n\r\nBinding a nullable bool from the header results in null for the passed in value, despite successful binding when the parameter is changed to a normal bool.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7706998125","Type":"IssuesEvent","CreatedAt":"2018-05-21T20:54:17","Actor":"zeus82","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7796","RelatedDescription":"Closed issue \"ASP.NET Core 2.1 'Feature' Project Structure Not Working\" (#7796) at aspnet/Mvc","RelatedBody":"I'm trying to port a ASP.NET Core 2.0 project to 2.1.  It uses the feature layout:\r\n\r\n    Website.csproj\r\n        |--Features\r\n            |--Home\r\n                |--HomeController.cs\r\n                |--Index.cshtml\r\n                |--About.cshtml\r\n                |--Contact.cshtml\r\n                |--Privacy.cshtml\r\n\r\nThis is how I configure Mvc:\r\n\r\n    services\r\n        .AddMvc()\r\n        .AddRazorOptions(options =>\r\n        {\r\n            // {0} - Action Name\r\n            // {1} - Controller Name\r\n            // {2} - Area Name\r\n            // {3} - Feature Name\r\n            // Replace normal view location entirely\r\n            options.ViewLocationFormats.Clear();\r\n            options.ViewLocationFormats.Add(\"/Features/{3}/{1}/{0}.cshtml\");\r\n            options.ViewLocationFormats.Add(\"/Features/{3}/{0}.cshtml\");\r\n            options.ViewLocationFormats.Add(\"/Features/Shared/{0}.cshtml\");\r\n            options.ViewLocationExpanders.Add(new FeatureViewLocationExpander());\r\n        })\r\n        .SetCompatibilityVersion(CompatibilityVersion.Version_2_1); // This line is new to 2.1, there is nothing like this in my 2.0 project\r\n\r\nThis is my ViewLocationExpander:\r\n\r\n\tpublic class FeatureViewLocationExpander : IViewLocationExpander\r\n\t{\r\n\t\tpublic IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations)\r\n\t\t{\r\n\t\t\t// Error checking removed for brevity\r\n\t\t\tvar controllerActionDescriptor =\r\n\t\t\t  context.ActionContext.ActionDescriptor as ControllerActionDescriptor;\r\n\t\t\tstring featureName = controllerActionDescriptor.Properties[\"feature\"] as string; //KeyNotFound Exception\r\n\t\t\tforeach (var location in viewLocations)\r\n\t\t\t{\r\n\t\t\t\tyield return location.Replace(\"{3}\", featureName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpublic void PopulateValues(ViewLocationExpanderContext context)\r\n\t\t{\r\n\t\t}\r\n\t}\r\n\r\nIn 2.1 I get a KeyNotFoundException on  `controllerActionDescriptor.Properties[\"feature\"]`, Anyone know how to make this work in 2.1?"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7707347705","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:17:43","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1799","RelatedDescription":"Closed issue \"Unusual behavior when implementing IUserSecurityStampStore\" (#1799) at aspnet/Identity","RelatedBody":"I am implementing Custom Stores without Entity Framework. But there seems to be a problem because `UserManager` always changes `SecurityStamp` prior to calling `IUserStore.Update`. Which results in failing of `IUserStore.Update` because persisted `SecurityStamp` and Current Security Stamp do not match. This behavior forces implementation of Custom Stores to use Entity Framework or some other equivalent ORM. Setting new `SecurityStamp` should be responsibility of `IUserStore.Update` and `IUserStore.Create`. Is this behavior by design?\r\n"},{"Id":"7707346531","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:17:22","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1801","RelatedDescription":"Opened pull request \"Add additional test assertions\" (#1801) at aspnet/Identity","RelatedBody":""},{"Id":"7707292262","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:02:20","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1798","RelatedDescription":"Closed issue \"AddRoles<CustomRoleType> does not correctly add EntityFrameworkCore.RoleStore<CustomRoleType> for non-string keys\" (#1798) at aspnet/Identity","RelatedBody":"The following code:\r\n\r\n```\r\nservices.AddIdentityCore<IdentityUser<Guid>>()\r\n        .AddRoles<IdentityRole<Guid>>()\r\n        .AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n(some time later)\r\n\r\nserviceProvider.GetRequiredService<RoleManager<IdentityRole<Guid>>>();\r\n```\r\n\r\nResults in the exception:\r\n\r\n```\r\nException has occurred: CLR/System.AggregateException\r\nAn unhandled exception of type 'System.AggregateException' occurred in System.Private.CoreLib.dll: 'One or more errors occurred.'\r\n Inner exceptions found, see $exception in variables window for more details.\r\n Innermost exception \t System.ArgumentException : Object of type 'Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]' cannot be converted to type 'Microsoft.AspNetCore.Identity.IRoleStore`1[Microsoft.AspNetCore.Identity.IdentityRole`1[System.Guid]]'.\r\n```\r\n\r\nIf you explicit add a `RoleStore<IdentityRole<Guid>>` the issue is resolved.\r\n\r\n```\r\nusing Microsoft.AspNetCore.Identity.EntityFrameworkCore;\r\n...\r\nservices.AddScoped<IRoleStore<IdentityRole<Guid>>, RoleStore<IdentityRole<Guid>, ApplicationDbContext, Guid>>();\r\n```\r\n\r\nThis is probably because the classes\r\n\r\n```\r\npublic class RoleStore<TRole> : RoleStore<TRole, DbContext, string>\r\n\r\n(and)\r\n\r\npublic class RoleStore<TRole, TContext> : RoleStore<TRole, TContext, string>\r\n```\r\nin [RoleStore.cs](https://github.com/aspnet/Identity/blob/dev/src/EF/RoleStore.cs) require a the key to be a string."},{"Id":"7705475882","Type":"IssuesEvent","CreatedAt":"2018-05-21T15:36:19","Actor":"adams-hub","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1800","RelatedDescription":"Opened issue \"Identity errors not displayed properly when using UseStatusCodePagesWithReExecute\" (#1800) at aspnet/Identity","RelatedBody":"When using UseStatusCodePagesWithReExecute, custom error StatusCodes like those found in GenerateRecoveryCodes.cshtml.cs do not display using the route as defined by UseStatusCodePagesWithReExecute  in the startup config.\r\n\r\nEg. `return NotFound($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");` \r\n\r\nRetuning a StatusCode(404) without an object displays fine in the custom error layout, but when returned with an object like StatusCode(404, \"Custom message...\"), it's returned as a string result."},{"Id":"7703874277","Type":"IssuesEvent","CreatedAt":"2018-05-21T10:01:24","Actor":"kamilwattoo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1799","RelatedDescription":"Opened issue \"Unusual behavior when implementing IUserSecurityStampStore\" (#1799) at aspnet/Identity","RelatedBody":"I am implementing Custom Stores without Entity Framework. But there seems to be a problem because `UserManager` always changes `SecurityStamp` prior to calling `IUserStore.Update`. Which results in failing of `IUserStore.Update` because persisted `SecurityStamp` and Current Security Stamp do not match. This behavior forces implementation of Custom Stores to use Entity Framework or some other equivalent ORM. Setting new `SecurityStamp` should be responsibility of `IUserStore.Update` and `IUserStore.Create`. Is this behavior by design?\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7708006543","Type":"IssuesEvent","CreatedAt":"2018-05-22T02:15:19","Actor":"GordoMalvado","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2602","RelatedDescription":"Opened issue \"Having RequestSizeLimit smaller than MaxRequestBufferSize causes a 502.3 for IIS hosted instead of the original response.\" (#2602) at aspnet/KestrelHttpServer","RelatedBody":"Just created a new project on Visual Studio and did the following:\r\n- set the RequestSizeLimit to 10 (yes, 10 bytes) via attribute ,globally or through a middleware, does not matter\r\n- Try to read and catch the Request too large exception and try to return a 413 (code is below)\r\n- End up with a 502.3 from IIS if the request has more than 1.1~ MB. If it is smaller, then i get my 413 as expected.\r\n\r\n`using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\nnamespace WebApplication1.Controllers\r\n{\r\n    [Route(\"api/values\")]\r\n    public class ValuesController : Controller\r\n    {\r\n        // GET api/values\r\n        \r\n\r\n\t\t// POST api/values\r\n\t\t[HttpPost]\r\n\t\t[RequestSizeLimit(10)]\r\n\t\tpublic async Task<IActionResult> Post()\r\n\t\t{\r\n\t\t\tstring Ret = \"\";\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tusing (StreamReader SR = new StreamReader(Request.Body))\r\n\t\t\t\t{\r\n\t\t\t\t\tRet = SR.ReadToEnd();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\treturn await new ValueTask<ObjectResult>(StatusCode(413, ex.Message));\r\n\t\t\t}\r\n\t\t\treturn await new ValueTask<ObjectResult>(StatusCode(200, Ret));\r\n\r\n\t\t}\r\n\r\n\t\t[HttpGet]\r\n\t\tpublic IEnumerable<string> Get()\r\n\t\t{\r\n\t\t\treturn new string[] { \"value1\", \"value2\" };\r\n\t\t}\r\n\r\n\t\t// GET api/values/5\r\n\t\t[HttpGet(\"{id}\")]\r\n\t\tpublic string Get(int id)\r\n\t\t{\r\n\t\t\treturn \"value\";\r\n\t\t}\r\n\t}\r\n}\r\n`"},{"Id":"7707891157","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:31:25","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2601","RelatedDescription":"Opened issue \"Flaky Test: ResponseTests.TransferEncodingNotSetOnHeadResponse\" (#2601) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7707882982","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:28:27","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2600","RelatedDescription":"Opened issue \"Flaky Test:  KeepAliveTimeoutTests.TestKeepAliveTimeout\" (#2600) at aspnet/KestrelHttpServer","RelatedBody":"# Failure\r\n```\r\nSystem.IO.IOException : Unable to write data to the transport connection: An established connection was aborted by the software in your host machine.\r\n---- System.Net.Sockets.SocketException : An established connection was aborted by the software in your host machine\r\n   at System.Net.Sockets.NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n   at System.IO.Stream.<>c.<BeginEndWriteAsync>b__53_0(Stream stream, ReadWriteParameters args, AsyncCallback callback, Object state)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMethod, Func`3 endMethod)\r\n   at System.IO.Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.StreamWriter.<FlushAsyncInternal>d__68.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Testing.TestConnection.<Send>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<ConnectionKeptAliveBetweenRequests>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.KeepAliveTimeoutTests.<<TestKeepAliveTimeout>b__3_0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n----- Inner Stack Trace -----\r\n   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object state)\r\n   at System.Net.Sockets.NetworkStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 size, AsyncCallback callback, Object state)\r\n```\r\nhttp://aspnetci/viewLog.html?buildId=471976&tab=buildResultsDiv&buildTypeId=XPlat_Windows_Win2008r2_Universe\r\n\r\n# History\r\nhttp://aspnetci/project.html?tab=testDetails&testNameId=4796706685945883110&projectId=AspNetEf&order=TEST_STATUS_DESC"},{"Id":"7707867852","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:22:37","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2599","RelatedDescription":"Opened issue \"Flaky Test: HttpsConnectionAdapterTests.UsesProvidedServerCertificateSelectorEachTime\" (#2599) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7707857219","Type":"IssuesEvent","CreatedAt":"2018-05-22T01:18:20","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2598","RelatedDescription":"Opened issue \"Flaky Test:  RequestTests.ConnectionClosedTokenFiresOnClientFIN(listenOptions: http://127.0.0.1:0)\" (#2598) at aspnet/KestrelHttpServer","RelatedBody":"# Failure\r\n```\r\nSystem.TimeoutException : The operation at /_/test/Kestrel.FunctionalTests/RequestTests.cs:606 timed out after reaching the limit of 30000ms.\r\n   at Microsoft.AspNetCore.Testing.TaskExtensions.<TimeoutAfter>d__0`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.<ConnectionClosedTokenFiresOnClientFIN>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\nhttp://aspnetci/viewLog.html?buildId=468378&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest\r\n\r\n# History\r\nhttp://aspnetci/project.html?tab=testDetails&testNameId=-3390381350268622125&projectId=AspNetEf&order=TEST_STATUS_DESC"},{"Id":"7707441834","Type":"IssuesEvent","CreatedAt":"2018-05-21T22:46:08","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2597","RelatedDescription":"Opened issue \"Flaky Test: Hang on Ubuntu\" (#2597) at aspnet/KestrelHttpServer","RelatedBody":"# Failure\r\n```\r\n[23:19:48] :\t [Step 3/3]   KestrelHttpServer     |   Starting test group: Libuv.FunctionalTests/netcoreapp2.2\r\n...\r\n[23:20:17] :\t [Step 3/3]   KestrelHttpServer     |   [xUnit.net 00:00:27.7549778]     RegisterIPEndPoint_Port443_Success [SKIP]\r\n[23:20:18] :\t [Step 3/3]   KestrelHttpServer     |   Skipped  RegisterIPEndPoint_Port443_Success\r\n[23:20:28] :\t [Step 3/3]   KestrelHttpServer     |   [xUnit.net 00:00:38.4688527]     RemoteIPv6Address [SKIP]\r\n[23:20:28] :\t [Step 3/3]   KestrelHttpServer     |   Skipped  RemoteIPv6Address\r\nCurrent time: 15:24:22\r\n```\r\nhttp://aspnetci/viewLog.html?buildTypeId=XPlat_Linux_UbuntuUniverseCoreCLR&buildId=471509&branch_XPlat_Linux_UbuntuUniverseCoreCLR=%3Cdefault%3E"},{"Id":"7707345974","Type":"PullRequestEvent","CreatedAt":"2018-05-21T22:17:14","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2588","RelatedDescription":"Merged pull request \"Enable test file logging on Jenkins\" (#2588) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7706138100","Type":"PullRequestEvent","CreatedAt":"2018-05-21T17:49:45","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2356","RelatedDescription":"Merged pull request \"Go to Rosyn 2.9\" (#2356) at aspnet/Razor","RelatedBody":"Moved to Roslyn version 2.9.0-beta4-62911-02. This is the version that exists in VS 15.8 preview 2.\r\n\r\nUniverse PR: https://github.com/aspnet/Universe/pull/1167"},{"Id":"7702152223","Type":"PullRequestEvent","CreatedAt":"2018-05-20T23:39:47","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2361","RelatedDescription":"Merged pull request \"Fix dispose logic for EditorDocument\" (#2361) at aspnet/Razor","RelatedBody":"This could throw when the document is disposed and wasn't open in the\r\neditor.\r\n\r\nImproved the tests to cover dispose as well for both cases."},{"Id":"7702129969","Type":"PullRequestEvent","CreatedAt":"2018-05-20T23:23:25","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2361","RelatedDescription":"Opened pull request \"Fix dispose logic for EditorDocument\" (#2361) at aspnet/Razor","RelatedBody":"This could throw when the document is disposed and wasn't open in the\r\neditor.\r\n\r\nImproved the tests to cover dispose as well for both cases."},{"Id":"7700091558","Type":"PullRequestEvent","CreatedAt":"2018-05-19T20:06:25","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2360","RelatedDescription":"Merged pull request \"Fix mef attributes project path provider\" (#2360) at aspnet/Razor","RelatedBody":""},{"Id":"7700038669","Type":"PullRequestEvent","CreatedAt":"2018-05-19T19:28:04","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2360","RelatedDescription":"Opened pull request \"Fix mef attributes project path provider\" (#2360) at aspnet/Razor","RelatedBody":""},{"Id":"7698048151","Type":"IssuesEvent","CreatedAt":"2018-05-18T21:11:02","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2359","RelatedDescription":"Closed issue \"New file type (e.g. 'csjs') implementing Razor engine to use C# code with javascript outside of cshtml file\" (#2359) at aspnet/Razor","RelatedBody":"Render the js code into the file by something like @Html.RazorJavascript(\"~/Scripts/code.csjs\")"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7707144427","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:26:33","Actor":"Fosol","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/146","RelatedDescription":"Closed issue \"How to nest files in a DNX project?\" (#146) at aspnet/Tooling","RelatedBody":"My search for answers has led me here.\n\nBy default a DNX project nest files like config.json -> config.debug.json\n\nI want to be able to nest files like config.json -> config.development.debug.json\n\nHow do I do this? I can no longer edit my project file to do this because someone has decided to extract all that functionality and hide it away in some black box. \n\nFeel free to point me to the right place to ask this question.\n\nThanks,\n Jeremy\n"},{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"7582805417","Type":"IssuesEvent","CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Opened issue \" Unable to start debugging\" (#1071) at aspnet/Tooling","RelatedBody":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n"},{"Id":"7576035394","Type":"IssuesEvent","CreatedAt":"2018-04-24T05:17:55","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."},{"Id":"7567897452","Type":"IssuesEvent","CreatedAt":"2018-04-22T14:52:17","Actor":"rberger247","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Opened issue \"Visual studio freezes when I run add-migration \" (#1070) at aspnet/Tooling","RelatedBody":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":485,"FavoriteCount":272,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-22T05:30:12.9362584Z","RunDurationInMilliseconds":7802}