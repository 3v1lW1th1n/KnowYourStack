{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7876461785","Type":"PullRequestEvent","CreatedAt":"2018-06-26T01:13:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1878","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] clean intermediates if NuGets change\" (#1878) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1741\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1828\r\n\r\nPR #1741 is a good attempt at fixing this, but...\r\n- It is a little heavy handed and basically \"nukes the world\".\r\n- It does not reproduce an issue in a test and \"fix it\", it fixes an\r\n  \"unknown\" #deletebinobj problem.\r\n\r\nI also have a few nitpicks about PR #1741:\r\n- It only comes into effect if `BuildingInsideVisualStudio` is `True`.\r\n  We should also fix command-line builds.\r\n- The `$(ProjectLockFile).stamp` file isn't added to `FileWrites`.\r\n\r\nSo let's improve on #1741! As it had some good ideas, we just need to\r\nnarrow its focus.\r\n\r\nFirst, I reproduced a real issue in a test with the following\r\nscenario:\r\n- Create a Xamarin.Forms 2.3.4 app that uses the 25.4.x support\r\n  libraries\r\n- Build it\r\n- Update the NuGets to Xamarin.Forms 3.0.x and the 27.x support\r\n  libraries\r\n- Build again\r\n- Stuff breaks... namely the following message:\r\n\r\n```\r\n    bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2153,3): error MSB4018: The \"GenerateJavaStubs\" task failed unexpectedly.\r\n        System.IO.FileNotFoundException: Could not load assembly 'System.IO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Perhaps it doesn't exist in the Mono for Android profile?\r\n        File name: 'System.IO.dll'\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\DirectoryAssemblyResolver.cs:line 241\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\DirectoryAssemblyResolver.cs:line 191\r\n        at Mono.Cecil.MetadataResolver.Resolve(TypeReference type) in external\\mono\\external\\cecil\\Mono.Cecil\\MetadataResolver.cs:line 101\r\n        at Mono.Cecil.ModuleDefinition.Resolve(TypeReference type) in external\\mono\\external\\cecil\\Mono.Cecil\\ModuleDefinition.cs:line 774\r\n        at Mono.Cecil.TypeReference.Resolve() in external\\mono\\external\\cecil\\Mono.Cecil\\TypeReference.cs:line 280\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.GetBaseType(TypeDefinition type) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 14\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.<GetTypeAndBaseTypes>d__1.MoveNext() in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 21\r\n        at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.IsSubclassOf(TypeDefinition type, String typeName) in external\\Java.Interop\\src\\Java.Interop.Tools.Cecil\\Java.Interop.Tools.Cecil\\TypeDefinitionRocks.cs:line 55\r\n        at Java.Interop.Tools.JavaCallableWrappers.JavaTypeScanner.AddJavaTypes(List`1 javaTypes, TypeDefinition type) in external\\Java.Interop\\src\\Java.Interop.Tools.JavaCallableWrappers\\Java.Interop.Tools.JavaCallableWrappers\\JavaTypeScanner.cs:line 46\r\n        at Java.Interop.Tools.JavaCallableWrappers.JavaTypeScanner.GetJavaTypes(IEnumerable`1 assemblies, IAssemblyResolver resolver) in external\\Java.Interop\\src\\Java.Interop.Tools.JavaCallableWrappers\\Java.Interop.Tools.JavaCallableWrappers\\JavaTypeScanner.cs:line 36\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Run(DirectoryAssemblyResolver res) in src\\Xamarin.Android.Build.Tasks\\Tasks\\GenerateJavaStubs.cs:line 138\r\n        at Xamarin.Android.Tasks.GenerateJavaStubs.Execute() in src\\Xamarin.Android.Build.Tasks\\Tasks\\GenerateJavaStubs.cs:line 91\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [bin\\TestDebug\\temp\\BuildAfterUpgradingNuget\\UnnamedProject.csproj]\r\n```\r\n\r\nThe real problem here though is that many of the intermediate files in\r\n`obj\\Debug\\lp` (among others) are out of sync. Namely we can see\r\nmessages like this from the `ResolveLibraryProjectImports` MSBuild\r\ntask in the build log:\r\n\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.animated.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Animated.Vector.Drawable.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.annotations\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Annotations.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Compat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.ui\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.UI.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.core.utils\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Core.Utils.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.design\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Design.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.fragment\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Fragment.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.media.compat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Media.Compat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.transition\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Transition.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v4\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v4.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.appcompat\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.AppCompat.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.cardview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.CardView.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.mediarouter\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.MediaRouter.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.palette\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.Palette.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.v7.recyclerview\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.v7.RecyclerView.dll: extracted files are up to date\r\n    Skipped resource lookup for C:\\Users\\myuser\\.nuget\\packages\\xamarin.android.support.vector.drawable\\27.0.2.1\\lib\\MonoAndroid81\\Xamarin.Android.Support.Vector.Drawable.dll: extracted files are up to date\r\n\r\nThese are *bad*, since the extracted files were from the 25.4.x\r\nsupport libraries! It is happening because the timestamps of these\r\nsystem-wide `%UserProfile%\\.nuget` NuGet packages are quite old.\r\n\r\nSo a solution for now, based on #1741:\r\n- When NuGet packages change\r\n- Clean some subset of files/directories -- not a full `Clean`\r\n\r\nI borrowed the logic for calculating `$(_NuGetAssetsFile)` from #1741,\r\nsince it was working pretty well. I added a\r\n`_CleanIntermediateIfNuGetsChange` MSBuild target that runs the\r\n`_CleanMonoAndroidIntermediateDir` target as this was the smallest\r\ndeletion I could figure out that fixes the problem. At first I tried\r\ndeleting other subsets of files/directories, but couldn't find a\r\ncombination that worked.\r\n\r\nThis change does have some impact on build times, when\r\n`_CleanIntermediateIfNuGetsChange` runs and deletes files, it takes\r\n1-2 seconds on my machine for the test case. There will also be\r\nfurther build time taken from other targets that run because files\r\nwere deleted. However, we would likely prefer a slightly slower,\r\ncorrect build, than a faster incorrect one... It is certaining going\r\nto be faster than the `Build`, error message, `Rebuild` cycle -- or\r\nnuking `bin` and `obj`.\r\n\r\nDown the road, we could consider some other change to refactor how\r\n`obj\\Debug\\lp` is generated and make it resilient to NuGet changes."},{"Id":"7876461770","Type":"IssuesEvent","CreatedAt":"2018-06-26T01:13:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1828","RelatedDescription":"Closed issue \"DeleteBinObj reproduction case (Rebuild required)\" (#1828) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone this repo: https://github.com/jonathanpeppers/glidex (was at this [commit](https://github.com/jonathanpeppers/glidex/commit/065f02664e8034207aa9cc2afb4e3f83f14c9e42))\r\n1. Build with `msbuild glidex.sln /t:Restore /t:Build`\r\n1. Switch branches with `git checkout xf3`\r\n1. Build with `msbuild glidex.sln /t:Restore /t:Build`\r\n\r\n```\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.sln\" (Restore;Build target) (1) ->\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.sample\\glidex.sample.csproj\" (default target) (3:6) ->\r\n(_GenerateJavaStubs target) ->\r\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1910,3): error : error XA4212: Type `Android.Support.V4.App.JobIntentService/JobServiceEngineImpl` implements `Android.Runtime.IJavaO\r\nbject` but does not inherit `Java.Lang.Object` or `Java.Lang.Throwable`. This is not supported. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.sample\\glidex.sample.csproj]\r\n\r\n\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.sln\" (Restore;Build target) (1) ->\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj\" (default target) (5:6) ->\r\n(_UpdateAndroidResgen target) ->\r\n  Resources\\values\\styles.xml(2): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light.DarkActionBar'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(3): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'colorPrimary'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'colorPrimaryDark'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowActionBar'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'windowActionModeOverlay'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(2): error APT0000: No resource found that matches the given name: attr 'windowNoTitle'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light.Dialog'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n  Resources\\values\\styles.xml(4): error APT0000: No resource found that matches the given name: attr 'colorAccent'. [C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n\r\n    230 Warning(s)\r\n    10 Error(s)\r\n```\r\n\r\nIf you run `msbuild glidex.sln /t:Rebuild`, it succeeds...\r\n\r\n```\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.sln\" (Rebuild target) (1) ->\r\n\"C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj\" (Rebuild target) (5) ->\r\n(_ValidateAndroidPackageProperties target) ->\r\n  C:\\Users\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\Properties\\AndroidManifest.xml : warning XA4211: AndroidManifest.xml //uses-sdk/@android:targetSdkVersion '26' is less than $(TargetFrameworkVersion) ''. Using API-27 for ACW compilation. [C:\\Us\r\ners\\myuser\\Desktop\\Git\\glidex\\glidex.forms.sample\\glidex.forms.sample.csproj]\r\n\r\n    198 Warning(s)\r\n    0 Error(s)\r\n```\r\n\r\n### Expected Behavior\r\n\r\nI should not have to rebuild my solution when switching branches.\r\n\r\nThe diff between the two branches isn't too crazy: https://github.com/jonathanpeppers/glidex/compare/xf3\r\n\r\n### Actual Behavior\r\n\r\nI have to rebuild when switching branches.\r\n\r\n### Version Information\r\n\r\nI can repro on VS Windows with either:\r\n- 15.7.3\r\n- 15.8.0 P2\r\n\r\n### Log File\r\n\r\nZipped up binary logs: [glidex.zip](https://github.com/xamarin/xamarin-android/files/2106348/glidex.zip)"},{"Id":"7875847350","Type":"IssuesEvent","CreatedAt":"2018-06-25T21:53:41","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1811","RelatedDescription":"Closed issue \"WCF Fault Exception Cannot Deserialize FaultDetail\" (#1811) at xamarin/xamarin-android","RelatedBody":"Hi,\r\n\r\nI would like to know how the issue 59318 from Bugzilla is doing (https://bugzilla.xamarin.com/show_bug.cgi?id=59318).\r\n\r\nI still have the issue with Visual Studio 2017 15.7.3 and Xamarin.Android v27.0.2.\r\n\r\nBest Regards"},{"Id":"7875799041","Type":"IssuesEvent","CreatedAt":"2018-06-25T21:42:06","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1805","RelatedDescription":"Closed issue \"VS for Mac Xamarin.Android Archive for Publishing Broken Without Building First\" (#1805) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.Forms solution that has an Android project.\r\n2. Right click the Android project and choose \"Archive for Publishing.\"\r\n3. Almost immediately a \"Package creation failed\" error occurs.\r\n4. Workaround: For whatever reason I then attempted building the Android project under the release configuration first, then chose \"Archive for Publishing\" and then the archive works.\r\n\r\n### Expected Behavior\r\nThe Android project should create a published archive of the project (.apk)\r\n\r\n### Actual Behavior\r\nPackage creation fails. \r\n\r\nHowever, as noted above if you first build the Android project under the release configuration and then choose to \"Archive for Publishing\" the archive works as expected.\r\n\r\n### Version Information\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: d308199c-14c5-4fad-bbae-24606d319b97\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4 (14160)\r\nBuild 9F1027a\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/azcreatescode/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3  (API level 15)\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nLiveXAML 1.3.31\r\nMvvmCross Template pack 2.0.1\r\nPrism QuickStart TemplatePack 1.5.0\r\nRedth's Addins 1.0.9\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n### Screenshare Link\r\nScreenshare Steps: [Android Archive Bug](http://adamzucchi.com/stage/xamarin/AndroidArchiveBug/index.html)\r\n"},{"Id":"7875778285","Type":"IssuesEvent","CreatedAt":"2018-06-25T21:37:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1579","RelatedDescription":"Closed issue \"Assembly not found for Android 7.1 support\" (#1579) at xamarin/xamarin-android","RelatedBody":"Howdy,\r\n\r\nI'm not blocked but here are some product feedback thoughts going through my brain...\r\n\r\n\r\n<img width=\"321\" alt=\"screen shot 2018-04-19 at 3 26 43 pm\" src=\"https://user-images.githubusercontent.com/127353/38973005-0eda2014-43e7-11e8-9fee-4fdd4a776df0.png\">\r\n\r\n- Why is this error being displayed?\r\n- Should I care?\r\n- The app works at API23 (x86 simulator) so why am I being told this?\r\n- Should I be worried? it's red, has crosses and those are msft/system assemblies.\r\n- I wonder what newbies would think?\r\n\r\n\r\n### Steps to Reproduce\r\n\r\nhttps://gist.github.com/ghuntley/8834ccf4894a31d1dbb264821d425626\r\n\r\n### Version Information\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: a32bd9d1-8328-4615-8629-3d85d971cc40\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/ghuntley/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nLiveXAML 1.3.31\r\nMFractor 3.05.00\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```"},{"Id":"7875759219","Type":"IssuesEvent","CreatedAt":"2018-06-25T21:32:57","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1281","RelatedDescription":"Closed issue \"ResX Localization. Unable to get a string of the desired locale, when checked option \"Embed assemblies in native code\"\" (#1281) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add to project more 3 language files (resx);\r\n2. Set cheked option \"embed assemblies in native code\";\r\n3. Change the current culture;\r\n4. Set the text to textview;\r\n5. Repeat steps 4 and 5 for other languages;\r\n\r\n<!--\r\ntest solution: \r\n[ResxLocalizationProblem.zip](https://github.com/xamarin/xamarin-android/files/1702908/ResxLocalizationProblem.zip)\r\n-->\r\n\r\n### Expected Behavior: The string will be in the correct locale;\r\n\r\n### Actual Behavior: You can get a string from only two locales;\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.6\r\nVisualStudio.15.Release/15.5.6+27130.2027\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2017   00369-60000-00001-AA844\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA844\r\nMicrosoft Visual C# 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA844\r\nMicrosoft Visual F# 4.1\r\n\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.2.9000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.2.9000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.2.9000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2017 ENU   15.0.27005.00\r\nMicrosoft Office Developer Tools for Visual Studio 2017 ENU\r\n\r\nResXManager   1.11.893.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWebJobs Tools v1.0.0   15.0.31106.0\r\nWebJobs Tools v1.0.0\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n[log.txt](https://github.com/xamarin/xamarin-android/files/1703057/log.txt)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7875349744","Type":"PullRequestEvent","CreatedAt":"2018-06-25T20:07:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1870","RelatedDescription":"Merged pull request \"Makefile tweaks\" (#1870) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7875343422","Type":"PullRequestEvent","CreatedAt":"2018-06-25T20:06:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1872","RelatedDescription":"Merged pull request \"[Mono.Android] Avoid using Guid.NewGuid () for dynamic constructor names\" (#1872) at xamarin/xamarin-android","RelatedBody":"Reduce usage of slow `Guid.NewGuid ()` calls. All we need is method\r\nunique name here and unique integer number should be all we need.\r\n\r\nWhen looking further into\r\nhttps://github.com/xamarin/xamarin-android/issues/1832 I noticed that\r\n`ConstructorBuilder` uses `Guid.NewGuid ()` as well.\r\n\r\nIt also creates new assembly builder which is slow too and involves\r\ncall to `System.Guid:FastNewGuidArray ()` thrue\r\n`System.Reflection.Emit.ModuleBuilder:.cctor ()`. I think we can avoid\r\ncreating new module as we already \"pollute\" `System.Object` in\r\n`JNINativeWrapper` and thus we can put the constructors there as well.\r\n\r\nAfter that change, together with\r\nhttps://github.com/xamarin/xamarin-android/pull/1868, our\r\nXamarin.Android template app doesn't call the `Guid.NewGuid ()` during\r\nthe startup anymore.\r\n\r\nIn case of 'xamarin-forms-test/XamlSample', the first time the\r\n`Guid.NewGuid ()` is called, is from XForms\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/14af670f5a200d164284fa4f0b3e4f7ce03b53df/Xamarin.Forms.Platform.Android/VisualElementRenderer.cs#L152\r\n\r\nThe impact of these 2 relatively small changes is quite nice (from both PRs #1868  and #1872). For the template XA application (Debug configuration with profiling enabled on x86 emulator) it saves:\r\n\r\nsaved | location | description\r\n------:|---------|-------------\r\n5ms | `Android.Runtime.JNIEnv:Initialize` | the removal of the `NewGuid ()` calls\r\n3ms | `Android.Runtime.AndroidTypeManager:RegisterNativeMembers` | the removal of the `NewGuid ()` calls\r\n11ms | `ConstructorBuilder:.cctor ()` | the removal of the builders\r\n\r\nWhere the whole `Android.Runtime.JNIEnv:Initialize` took 298ms previously. It also means less code to JIT\r\n\r\nOriginal\r\n\r\n\tCompiled methods: 2063\r\n\tGenerated code size: 589860\r\n\r\nNew\r\n\r\n\tCompiled methods: 1954\r\n\tGenerated code size: 562413\r\n"},{"Id":"7875264965","Type":"IssuesEvent","CreatedAt":"2018-06-25T19:50:16","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1881","RelatedDescription":"Opened issue \"Aapt2 - Xamarin.Forms-Performance-Integration project crashes at runtime\" (#1881) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. I noticed on Jenkins plots, this app has not been recording its times properly: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/plot/Tests%20times/#plot-8694435842335223270.csv\r\n1. It made me think, \"whoops, is this app crashing on startup?\"\r\n1. It appears to be since this build: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/1033/\r\n1. The build includes a commit that \"fixes\" Aapt2 support where it is properly enabled: https://github.com/xamarin/xamarin-android/commit/1c2e5fdd9d7b371ec9df05132f90f6996d71b1f4\r\n1. I get a crash at runtime if I install the app with `bin/Debug/bin/xabuild /t:Install` and launch it\r\n1. Changing the project to `<AndroidUseAapt2>False</AndroidUseAapt2>` fixes the crash\r\n\r\nCrash log:\r\n```\r\n06-25 19:26:41.156 29645 29645 I MonoDroid: UNHANDLED EXCEPTION:\r\n06-25 19:26:41.156 29645 29645 I MonoDroid: Android.Views.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout ---> Android.Views.InflateException: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout ---> Java.Lang.Reflect.InvocationTargetException: Exception of type 'Java.Lang.Reflect.InvocationTargetException' was thrown. ---> Java.Lang.UnsupportedOperationException: Failed to resolve attribute at index 3: TypedValue{t=0x2/d=0x7f02011d a=2}\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:    --- End of inner exception stack trace ---\r\n06-25 19:26:41.157 29645 29645 I chatty  : uid=10103(Xamarin.Forms_Performance_Integration) identical 1 line\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:    --- End of inner exception stack trace ---\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00094] in <f0e20cf700b04c12b196f36c4720ea06>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualObjectMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00030] in <f0e20cf700b04c12b196f36c4720ea06>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Android.Views.LayoutInflater.Inflate (System.Int32 resource, Android.Views.ViewGroup root) [0x00046] in <f33011ab28e74826967e27e97c70d5db>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.AppCompat.TabbedPageRenderer.OnElementChanged (Xamarin.Forms.Platform.Android.ElementChangedEventArgs`1[TElement] e) [0x00061] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].SetElement (TElement element) [0x000fc] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.VisualElementRenderer`1[TElement].Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) [0x00027] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.Platform.CreateRenderer (Xamarin.Forms.VisualElement element, Android.Support.V4.App.FragmentManager fragmentManager) [0x00031] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.AppCompat.FragmentContainer.OnCreateView (Android.Views.LayoutInflater inflater, Android.Views.ViewGroup container, Android.OS.Bundle savedInstanceState) [0x00015] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Android.Support.V4.App.Fragment.n_OnCreateView_Landroid_view_LayoutInflater_Landroid_view_ViewGroup_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_inflater, System.IntPtr native_container, System.IntPtr native_savedInstanceState) [0x00022] in <27c17fe440cf491ba8255bcefade6e02>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at (wrapper dynamic-method) System.Object.7cd23379-425c-4cf7-9ec5-ac2a3e1e5185(intptr,intptr,intptr,intptr,intptr)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid: --- End of stack trace from previous location where exception was thrown ---\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Java.Interop.JniEnvironment+InstanceMethods.CallNonvirtualVoidMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniObjectReference type, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x000b9] in <f0e20cf700b04c12b196f36c4720ea06>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00066] in <f0e20cf700b04c12b196f36c4720ea06>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Android.App.Activity.OnStart () [0x0000c] in <f33011ab28e74826967e27e97c70d5db>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Platform.Android.FormsAppCompatActivity.OnStart () [0x00000] in <1481f85a917c4f2b882ea161e9bc082f>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Xamarin.Forms.Performance.Integration.Droid.MainActivity.OnStart () [0x00016] in <12268734404e475fb9068218a597bed4>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at Android.App.Activity.n_OnStart (System.IntPtr jnienv, System.IntPtr native__this) [0x0000a] in <f33011ab28e74826967e27e97c70d5db>:0\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   at (wrapper dynamic-method) System.Object.bb0b027b-d819-4413-aed7-818e7b3a6611(intptr,intptr)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:   --- End of managed Android.Views.InflateException stack trace ---\r\n06-25 19:26:41.157 29645 29645 I MonoDroid: android.view.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout\r\n06-25 19:26:41.157 29645 29645 I MonoDroid: Caused by: android.view.InflateException: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout\r\n06-25 19:26:41.157 29645 29645 I MonoDroid: Caused by: java.lang.reflect.InvocationTargetException\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at java.lang.reflect.Constructor.newInstance(Constructor.java:334)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.createView(LayoutInflater.java:647)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:790)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:730)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.inflate(LayoutInflater.java:423)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at md58432a647068b097f9637064b8985a5e0.FragmentContainer.n_onCreateView(Native Method)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at md58432a647068b097f9637064b8985a5e0.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.Fragment.performCreateView(Fragment.java:1974)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1067)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:602)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at xamarin.forms.performance.integration.MainActivity.n_onStart(Native Method)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at xamarin.forms.performance.integration.MainActivity.onStart(MainActivity.java:48)\r\n06-25 19:26:41.157 29645 29645 I MonoDroid:     at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1334)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.Activity.performStart(Activity.java:7029)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2741)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2856)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.os.Handler.dispatchMessage(Handler.java:106)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.os.Looper.loop(Looper.java:164)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at java.lang.reflect.Method.invoke(Native Method)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid: Caused by: java.lang.UnsupportedOperationException: Failed to resolve attribute at index 3: TypedValue{t=0x2/d=0x7f02011d a=2}\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.content.res.TypedArray.getColorStateList(TypedArray.java:538)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.support.design.widget.TabLayout.<init>(TabLayout.java:303)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     at android.support.design.widget.TabLayout.<init>(TabLayout.java:261)\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:     ... 31 more\r\n06-25 19:26:41.158 29645 29645 I MonoDroid:\r\n06-25 19:26:41.158 29645 29645 D AndroidRuntime: Shutting down VM\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: FATAL EXCEPTION: main\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: Process: Xamarin.Forms_Performance_Integration, PID: 29645\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: java.lang.RuntimeException: Unable to start activity ComponentInfo{Xamarin.Forms_Performance_Integration/xamarin.forms.performance.integration.MainActivity}: android.view.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2778)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2856)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: Caused by: android.view.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: Caused by: android.view.InflateException: Binary XML file line #1: Error inflating class android.support.design.widget.TabLayout\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: Caused by: java.lang.reflect.InvocationTargetException\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at java.lang.reflect.Constructor.newInstance(Constructor.java:334)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.createView(LayoutInflater.java:647)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:790)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:730)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.inflate(LayoutInflater.java:423)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at md58432a647068b097f9637064b8985a5e0.FragmentContainer.n_onCreateView(Native Method)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at md58432a647068b097f9637064b8985a5e0.FragmentContainer.onCreateView(FragmentContainer.java:51)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.Fragment.performCreateView(Fragment.java:1974)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1067)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:602)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at xamarin.forms.performance.integration.MainActivity.n_onStart(Native Method)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at xamarin.forms.performance.integration.MainActivity.onStart(MainActivity.java:48)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1334)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.Activity.performStart(Activity.java:7029)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2741)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2856)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime: Caused by: java.lang.UnsupportedOperationException: Failed to resolve attribute at index 3: TypedValue{t=0x2/d=0x7f02011d a=2}\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.content.res.TypedArray.getColorStateList(TypedArray.java:538)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.design.widget.TabLayout.<init>(TabLayout.java:303)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        at android.support.design.widget.TabLayout.<init>(TabLayout.java:261)\r\n06-25 19:26:41.163 29645 29645 E AndroidRuntime:        ... 31 more\r\n06-25 19:26:41.173 16683 17478 W ActivityManager:   Force finishing activity Xamarin.Forms_Performance_Integration/xamarin.forms.performance.integration.MainActivity\r\n06-25 19:26:41.178 16683 16699 I ActivityManager: Showing crash dialog for package Xamarin.Forms_Performance_Integration\r\n```\r\n\r\n### Expected Behavior\r\n\r\nEnabling Aapt2 should not crash our Xamarin.Forms test project.\r\n\r\n### Actual Behavior\r\n\r\nEnabling Aapt2 causes our Xamarin.Forms test project to crash.\r\n\r\n### Version Information\r\n\r\nxamarin-android master at: 0b5ce8fb5e702b06c1d7f1d8d08a91b14b0e675d\r\n\r\nPresumably has done this since: 1c2e5fdd9d7b371ec9df05132f90f6996d71b1f4"},{"Id":"7875153292","Type":"IssuesEvent","CreatedAt":"2018-06-25T19:26:39","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1832","RelatedDescription":"Closed issue \"JNINativeWrapper shouldn't use Guids\" (#1832) at xamarin/xamarin-android","RelatedBody":"When recently profiling Xamarin.Android application startup, we observed that [`JNINativeWrapper`](https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Android.Runtime/JNINativeWrapper.cs) is using `Guid.NewGuid()`: https://github.com/xamarin/xamarin-android/blob/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Mono.Android/Android.Runtime/JNINativeWrapper.cs#L51\r\n\r\n`Guid.NewGuid()` is ***SLOW***. (It pulls in the crypto stack!) It should not be used unless it is actually needed, and it is not needed here. (We just need \"unique\" values; `Interlocked.Increment()` would suffice.)\n\n> VS bug [#635205](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/635205)"},{"Id":"7875152290","Type":"PullRequestEvent","CreatedAt":"2018-06-25T19:26:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1868","RelatedDescription":"Merged pull request \"[Mono.Android] Avoid using Guid.NewGuid () for dynamic method names\" (#1868) at xamarin/xamarin-android","RelatedBody":"Reduce usage of slow `Guid.NewGuid ()` calls. All we need is method\r\nunique name here and unique integer number should be all we need.\r\n\r\nhttps://github.com/xamarin/xamarin-android/issues/1832\r\n\r\nFYI, during the startup of `xamarin-forms-samples/XamlSamples` app,\r\nthe counter is incremented 54 times."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7876896555","Type":"IssuesEvent","CreatedAt":"2018-06-26T03:55:40","Actor":"DennisWelu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3149","RelatedDescription":"Opened issue \"Master behavior of Popover should be allowed on MacOS desktop\" (#3149) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nMasterBehavior of Popover has no affect to a MasterDetailPage on MacOS desktop apps. The equivalent behavior setting in UWP, for example, still allows the master pane to be toggled visible/hidden. This behavior changed with a merged fix in version 3.1: https://github.com/xamarin/Xamarin.Forms/issues/2507\r\n\r\n### Steps to Reproduce\r\n\r\n1. File > New > Blank Forms App\r\n2. Add new macOS project\r\n3. Add a MasterDetailPage implementation\r\n4. Set the master-detail page to use ```MasterBehavior.Popover```\r\n5. Add a button to toggle the master page IsPresented value between true and false\r\n5. Run on macOS and press the button\r\n\r\n### Expected Behavior\r\nThe master pane visibility should toggle on/off with each button press\r\n\r\n### Actual Behavior\r\nThe master pane always remains visible\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.1.x\r\n- Last known good version: XF 3.0.x\r\n- Platform Target Frameworks:\r\n  - macOS:  10.13.4\r\n\r\n### Workaround\r\n\r\nI was able to extend MasterDetailPage and use a custom renderer based on the current renderer. The difference in behavior between UWP, for example, and MacOS, was simply these lines:\r\n\r\nMacOS: https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.MacOS/Renderers/MasterDetailPageRenderer.cs#L149\r\n\r\nUWP: https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.UAP/MasterDetailPageRenderer.cs#L347\r\n\r\nIt's the same basic approach but the MacOS implementation did not have the allowance for Popover. So...I changed that line in the MacOS renderer to:\r\n\r\n```\r\n            if (Device.Idiom == TargetIdiom.Desktop && !view.Hidden && MasterDetailPage.MasterBehavior != MasterBehavior.Popover)\r\n```\r\n"},{"Id":"7876214273","Type":"PullRequestEvent","CreatedAt":"2018-06-25T23:42:14","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3148","RelatedDescription":"Opened pull request \"[Android] Force animations to finish immediately when power save mode is on\" (#3148) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFor Android APIs below Lollipop, this changes nothing.\r\n\r\nFor Lollipop and higher, the app will now listen for changes to the power save mode status and respond accordingly. When power save is on, animations will immediately move to their finished state. If power save becomes active while an animation is in progress, the animation will be immediately moved to its finished state.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #1556\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Core/XAML (all platforms)\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"7876184110","Type":"IssuesEvent","CreatedAt":"2018-06-25T23:31:41","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2759","RelatedDescription":"Closed issue \"[Android] Label's HorizontalTextAlignment resetting after redraw\" (#2759) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen the text of a Label is changed after it's drawn, the `HorizontalTextAlignment` acts strangely. I know its not descriptive enough, but it's better explained in the repro project.\r\n\r\nI saw three possibilities when testing this issue:\r\n- The Label appears right, but when the app minimized and opened again, the HorizontalAlignment resets.\r\n- The Label already already appears with the wrong `HorizontalTextAlignment` and, if the app is minimized and opened, it stays wrong.\r\n- The same as before, but when minimized and opened, the `HorizontalTextAlignment` is fixed and goes back to normal.\r\n\r\nBasically, run the repro project and you'll see three Labels, all with `HorizontalTextAlignment` set to Center:\r\n- The first one is a single lined Label that has its Text changed 200ms after the Page's constructor is ran.\r\n- The second one is the same as the first, but with a multiline text.\r\n- The third one is a single lined Label that has its Text changed on `OnSizeAllocated` and `VerticalTextAlignment` set to `Center` as well.\r\n\r\nThe first two Labels are displaying correctly, but the third one will appear with the wrong horizontal alignment (I added the `VerticalTextAlignment` just to show that it doesn't have this issue) right from the start.\r\n\r\nAfter that, minimize and open the app again. The alignments invert, with the first Label resetting to Left and the third Label going to the Center. The second Label is there just to show that this issue is not happening with multiline texts.\r\n\r\nNow, if you go back to the project and comment line 38 (remove the second Label from StackLayout's children), open the app again, minimize it and open it again, the third Label, that displayed correctly after the app came back from background with the second Label on the Page, no longer gets fixed, remaining aligned with the Left.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the project and notice the Labels alignment (all should be centered but the third one isn't).\r\n2. Minimize and open the app.\r\n3. The first Label is left-aligned and the third one is fixed.\r\n4. Comment line 38 and re-run the project.\r\n5. The app starts as last time.\r\n6. Minimize and open the app.\r\n7. The \"third\" Label is not fixed as before.\r\n\r\n### Expected Behavior\r\n\r\nAll Labels get centered.\r\n\r\n### Actual Behavior\r\n\r\nSometimes they're centered, other times they are not.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: none\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks:\r\n  - Android: 8.1\r\n\r\n### Screenshots\r\n\r\nWith three Labels:\r\n![firstapp](https://user-images.githubusercontent.com/12024080/40199598-6b62e982-59f0-11e8-93cf-ef95eff1c89e.png)\r\n\r\nWith three Labels after coming from background (the \"First label\" is wrong and the \"Third Label\" is fixed):\r\n![firstapp-afterminimize](https://user-images.githubusercontent.com/12024080/40199599-6b88334a-59f0-11e8-89b6-c1a838808be3.png)\r\n\r\nWith two Labels after coming from background (the \"Third label\" is not fixed):\r\n![secondapp-afterminimize](https://user-images.githubusercontent.com/12024080/40199600-6bbb05b8-59f0-11e8-94a6-ee687237043e.png)\r\n\r\n### Reproduction Link\r\n\r\n[LabelAlignment.zip](https://github.com/xamarin/Xamarin.Forms/files/2014469/LabelAlignment.zip)\r\n"},{"Id":"7876163690","Type":"IssuesEvent","CreatedAt":"2018-06-25T23:24:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1542","RelatedDescription":"Closed issue \"ListView update through another view throws exception\" (#1542) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nFoundation.MonoTouchException: Objective-C exception thrown.  Name: NSInternalInconsistencyException Reason: Invalid update: invalid number of rows in section 0.  The number of rows contained in an existing section after the update (1) must be equal to the number of rows contained in that section before the update (1), plus or minus the number of rows inserted or deleted from that section (0 inserted, 1 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x000000010f4cf12b __exceptionPreprocess + 171\r\n\t1   libobjc.A.dylib                     0x0000000110338f41 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x000000010f4d42f2 +[NSException raise:format:arguments:] + 98\r\n\t3   Foundation                          0x000000010cd6ad69 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 193\r\n\t4   UIKit                               0x0000000109e5e209 -[UITableView _endCellAnimationsWithContext:] + 19416\r\n\t5   UIKit                               0x0000000109e79075 -[UITableView endUpdates] + 75\r\n\t6   MyPasswords.iOS                     0x00000001098739b9 xamarin_dyn_objc_msgSend + 217\r\n\t7   ???                                 0x0000000127bb38c2 0x0 + 4961548482\r\n\r\n  at ObjCRuntime.Runtime.ThrowNSException (System.IntPtr ns_exception) [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/ObjCRuntime/Runtime.cs:362\r\n  at ObjCRuntime.Runtime.throw_ns_exception (System.IntPtr exc) [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/runtime/Delegates.generated.cs:130\r\n  at at (wrapper native-to-managed) ObjCRuntime.Runtime:throw_ns_exception (intptr)\r\n  at at (wrapper managed-to-native) ObjCRuntime.Messaging:void_objc_msgSend (intptr,intptr)\r\n  at UIKit.UITableView.EndUpdates () [0x00008] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/build/ios/native/UIKit/UITableView.g.cs:294\r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.UpdateItems (System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Int32 section, System.Boolean resetWhenGrouped) [0x0015c] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Platform.iOS.ListViewRenderer.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in <13d193f5a21b4e309afc67e0a5508db5>:0\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:771\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e, System.Boolean fixWindows) [0x0001a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:981\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00000] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\TemplatedItemsList.cs:968\r\n  at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000a] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:233\r\n  at Xamarin.Forms.ListProxy+<>c__DisplayClass33_0.<OnCollectionChanged>b__0 () [0x00018] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:206\r\n  at Xamarin.Forms.ListProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x000a0] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:225\r\n  at Xamarin.Forms.ListProxy+WeakNotifyProxy.OnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00031] in D:\\agent\\_work\\1\\s\\Xamarin.Forms.Core\\ListProxy.cs:394\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000f] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:288\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:351\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].RemoveItem (System.Int32 index) [0x0002b] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/System/compmod/system/collections/objectmodel/observablecollection.cs:205\r\n  at System.Collections.ObjectModel.Collection`1[T].Remove (T item) [0x00027] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/collections/objectmodel/collection.cs:113\r\n  at MyPasswords.ViewModels.EntryViewModel+<VerifyIsFavorite>d__60.MoveNext () [0x00038] in /Users/XXX/Projects/MyPasswords/MyPasswords/ViewModels/EntryViewModel.cs:247\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152\r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.2/src/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018\r\n  at UIKit.UIKitSynchronizationContext+<Post>c__AnonStorey0.<>m__0 () [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIKitSynchronizationContext.cs:24\r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/Foundation/NSAction.cs:163\r\n  at at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/6857dfcc/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n  at MyPasswords.iOS.Application.Main (System.String[] args) [0x00001] in /Users/XXX/Projects/MyPasswords/iOS/Main.cs:12\r\n\r\n### Steps to Reproduce\r\n\r\nI have A tabbed page and I have the same view in both of them with different data binding source (AllData and Favorites)\r\n\r\nI do two tests and one fails:\r\n\r\n1)\r\n\r\n- Open the app\r\n- Make directly a change from the alldata listview to the favorites listvew (click on the add to favorites button)\r\n\r\nThis one CRUSHES\r\n\r\n2) \r\n\r\n- Open the app\r\n- Click on the favorites tab\r\n- Click back on the alldata tab\r\n- Make a change as previous.\r\n\r\nThis one works and I don't understand why. I have saved the two objects in App and I use the App class to update the objects.\r\n\r\n### Expected Behavior\r\n\r\nTo update the Favorites listview\r\n\r\n### Actual Behavior\r\n\r\nThe app crushes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: > 2.3.4.270\r\n- Last known good version: 2.3.4.270 \r\n- IDE: Xamarin Studio\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.2\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\r\n  "},{"Id":"7876077899","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:57:28","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1777","RelatedDescription":"Closed issue \"Cannot build .NET Core app that reference Xamarin.Forms\" (#1777) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen you reference Xamarin.Forms from a .NET Core app, the build fails with:\r\n\r\n> error MSB4062: The \"Xamarin.Forms.Build.Tasks.GetTasksAbi\" task could not be loaded from the assembly /Users/fak/.nuget/packages/xamarin.forms/2.5.0.122203/build/netstandard1.0/Xamarin.Forms.Build.Tasks.dll. Could not load file or assembly 'Microsoft.Build.Utilities.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified. [/Users/fak/Dropbox/Projects/Ooui.Try2/PlatformSamples/AspNetCoreMvc/AspNetCoreMvc.csproj]\r\n\r\n### Steps to Reproduce\r\n\r\n1. Make a .NET Core app\r\n2. Reference XF 2.5\r\n3. Build\r\n\r\n### Expected Behavior\r\n\r\nBuild succeeds\r\n\r\n### Actual Behavior\r\n\r\nThe above error is returned.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- IDE: VSCode + VS for Mac\r\n"},{"Id":"7876063213","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:53:06","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1473","RelatedDescription":"Closed issue \"Invalid XAML renders in Preview, passes XAML compilation then fails to render at runtime\" (#1473) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nRan into an issue where I had an errant character in my XAML which resulted in runtime issues. This took a while to troubleshoot because the XAML itself renders in preview and even passes compilation checks when XAML compilation is enabled. The resulting runtime experience is just a blank form with no exceptions being thrown.\r\n\r\nI have only tested this on iOS, I do not know the experience on Android\r\n\r\n### Steps to Reproduce\r\n1. Place Invalid Character after ContentPage declaration in XAML file\r\nThe following example has an invalid character on line 3\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" x:Class=\"Mobile.Example.InvalidXaml\">\r\n    >\r\n    <ContentPage.Content>\r\n        <StackLayout>\r\n            <Label Text=\"Will not render at runtime\" />\r\n        </StackLayout>\r\n\t</ContentPage.Content>\r\n</ContentPage>\r\n```\r\n\r\n### Expected Behavior\r\n\r\n- XAML preview should replicate the same experience rendering the XAML as it does at runtime\r\n- XAML compilation should throw an error\r\n\r\n### Actual Behavior\r\n\r\nXAML preview displays the form without issue, XAML passes compilation checks and runtime displays a blank form\r\n\r\n### Basic Information\r\n\r\n- Xamarin.Forms 2.5.0.121934\r\n- IDE: Visual Studio for Mac Community 7.3.2 (build 12)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: 11.2\r\n\r\n### Screenshots\r\n\r\n#### Preview Screenshot: \r\n![Preview Screenshot](https://d3vv6lp55qjaqc.cloudfront.net/items/1F2V2Y1X3K0X3k1Y0j12/Screen%20Shot%202017-12-27%20at%203.56.07%20PM.png)\r\n#### Runtime Screenshot:\r\n![Runtime Screenshot](https://d3vv6lp55qjaqc.cloudfront.net/items/1B1d3i1r160T0P1Q470o/Screen%20Shot%202017-12-27%20at%203.56.37%20PM.png)"},{"Id":"7876055985","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:50:53","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1483","RelatedDescription":"Closed issue \"Xamarin.Forms.ActivityIndicator in Forms v 2.5 doesn't work (UWP)\" (#1483) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nActivity indicator was working in previous version (Forms v 2.4.x) on UWP.  Updating to Forms v. 2.5 broke it.  Android still works as expected.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nActivityIndicator should be visible and animated while IsRunning and IsVisible properties are True, and change invisible when false.\r\n\r\n\r\n### Actual Behavior\r\nThe area of the view is a grey box, the animation is (barely) visible only once.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Xamarinf.Forms v 2.5.x\r\n- Last known good version: 2.4.0.91020\r\n- IDE:  VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  10586 -15063<!-- The version of the UWP SDK you are compiling against, e.g. --> \r\n\r\n### Screenshots\r\n\r\nWrong visual:\r\n![activitynowork](https://user-images.githubusercontent.com/6353954/34472300-81250f7a-ef24-11e7-9908-0a824c2ab489.PNG)\r\n\r\nCorrect:\r\n![activitywork](https://user-images.githubusercontent.com/6353954/34472354-16eebf96-ef26-11e7-90a6-572c73064782.PNG)\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7876012659","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:37:51","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1342","RelatedDescription":"Closed issue \"[iOS] ListView throws Exception on ObservableCollection.Add/Remove\" (#1342) at xamarin/Xamarin.Forms","RelatedBody":"Original: https://bugzilla.xamarin.com/show_bug.cgi?id=60813\r\n\r\n### Description\r\n\r\nWhen a ListView is in a Page that is not activated (e.g. not active tab inside a TabbedPage) and its ItemsSource is updated it throws an error.\r\n\r\n### Steps to Reproduce\r\n\r\n1. The attached sample shows a TabbedPage with each tab containing a ListView\r\n2. Tap \"Add1\" MenuAction\r\n3. Item is added to the ListView\r\n4. Tap \"Add2\" MenuAction\r\n5. Crash\r\n\r\n#### Alternative steps\r\n\r\n1. Navigate to 2nd tab\r\n2. Navigate back to 1st tab\r\n3. Tap \"Add2\" MenuAction\r\n4. Item is added to the 2nd ListVIew\r\n5. Conclusion: Doesn't crash when navigated first\r\n\r\n### Expected Behavior\r\n\r\nThe ListViews should receive an item for each tap on the MenuActions\r\n\r\n### Actual Behavior\r\n\r\nWhen the ListView was not navigated first, it throws an Exception\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.4.280, 2.5.0.91635\r\n- Last known good version: N/A\r\n- IDE: VS15 Windows\r\n- Platform Target Frameworks:\r\n  - iOS:  9\r\n- Affected Devices: Simulator and iPad Mini 3 both running iOS 11.1\r\n\r\n### Reproduction Link\r\n\r\n[FormsIOSListViewCrash.zip](https://github.com/xamarin/Xamarin.Forms/files/1538388/FormsIOSListViewCrash.zip)\r\n\r\n### Workaround\r\n\r\nCurrently you have to somehow programmatically make the ListView appear before adding an item. If the ListView is inside a tab that is not visible, show it by setting the [CurrentPage](https://developer.xamarin.com/api/property/Xamarin.Forms.MultiPage%3CT%3E.CurrentPage/) Property.\r\nIf it is in a MasterDetailPage, you could try showing it by toggling the [IsPresented](https://developer.xamarin.com/api/property/Xamarin.Forms.MasterDetailPage.IsPresented/) Property.\r\n\r\n"},{"Id":"7875922675","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:12:47","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1927","RelatedDescription":"Closed issue \"iOS ListViewRenderer has a bug in row insertion/deletion logic.\" (#1927) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nSee commit 1f770f65886213e28677092ccea355ee799cfa51 (the current commit on master at the time of writing).\r\n\r\nThe code in Xamarin.Forms/Xamarin.Forms.Platform.iOS/Renderers/ListViewRenderer.cs: 532-544\r\nreads:\r\n\r\n\t\t\tswitch (e.Action)\r\n\t\t\t{\r\n\t\t\t\tcase NotifyCollectionChangedAction.Add:\r\n\r\n\t\t\t\t\tUpdateEstimatedRowHeight();\r\n\t\t\t\t\tif (e.NewStartingIndex == -1 || groupReset)\r\n\t\t\t\t\t\tgoto case NotifyCollectionChangedAction.Reset;\r\n\r\n\t\t\t\t\tControl.BeginUpdates();\r\n\t\t\t\t\tControl.InsertRows(GetPaths(section, e.NewStartingIndex, e.NewItems.Count), InsertRowsAnimation);\r\n\t\t\t\t\tControl.EndUpdates();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\nThis code is buggy and leads to crashes when the ListView is dynamically updated using ObservableCollection as its data source. This is because updates to the UITableView are not issued in an appropriate way. \r\n\r\nImagine an empty list. When you try to dynamically add an element using ObservableCollection.Add(),\r\nthe event is intercepted and the code above is executed. The problem is that the dataSource for UITableView gets updated *before* BeginUpdates() gets called. This causes a crash coming from UITableView internals that reads:\r\n\r\n\"NSInternalInconsistencyException Reason: Invalid update: invalid number of rows in section 0.  The number of rows contained in an existing section after the update (1) must be equal to the number of rows contained in that section before the update (1), plus or minus the number of rows inserted or deleted from that section (1 inserted, 0 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).\"\r\n\r\nThis is because the data source was updated way before the code on hand was run. The data source should reflect the situation before the update at the time BeginUpdates() gets called, then the update to the data source should be applied, then the InsertRows() should be called and finally EndUpdates() should be issued.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create a new project with a single page containing a ListView bound to ObservableCollection<string> as its ItemSource and a single button.\r\n2. On a button action, call Add(\"test\") on the ObservableCollection.\r\n3. Run the project on an iOS device and click on the button.\r\n\r\n### Expected Behavior\r\n\r\nThe \"test\" row should be added to the list.\r\n\r\n### Actual Behavior\r\n\r\nA crash:\r\n\r\n\"NSInternalInconsistencyException Reason: Invalid update: invalid number of rows in section 0. The number of rows contained in an existing section after the update (1) must be equal to the number of rows contained in that section before the update (1), plus or minus the number of rows inserted or deleted from that section (1 inserted, 0 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).\"\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio OS X 7.3.2(12) and Visual Studio 2017 on a PC (15.5.2)\r\n- Platform Target Frameworks: \r\n  - iOS:  All\r\n  - Android: Irrelevant\r\n  - UWP:  Irrelevant\r\n- Android Support Library Version: Irrelevant\r\n- Nuget Packages: Irrelevant\r\n- Affected Devices: All iOS devices"},{"Id":"7875871864","Type":"IssuesEvent","CreatedAt":"2018-06-25T21:59:51","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1527","RelatedDescription":"Closed issue \"Missing auto generate event handler when editing XAML in VS 2017\" (#1527) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen editing XAML in VS 2017 for a .Net Standard Xamarin.Forms project, VS fails to auto generate event handler, such as `Clicked` or `Activated` event.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Open an XAML file for UI, such as `MainPage.xaml`.\r\n2.  Add an `<Button />`.\r\n3.  Add `Clicked` event.\r\n\r\n### Expected Behavior\r\nVS auto generates a event with name `Button_Clicked` and an method in `MainPage.xaml.cs` file.\r\n\r\n### Actual Behavior\r\nVS just treats `Clicked` as a common property of `<Button />`.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: no\r\n- IDE: VS 2017\r\n- Nuget Packages: Xamarin.Forms 2.5.0.121934\r\n\r\n### Screenshots\r\n\r\n![gmqw21bk8rmx](https://user-images.githubusercontent.com/3023607/34668924-630ec9aa-f4aa-11e7-91b1-6b94c6bc25bc.jpg)\r\n"},{"Id":"7875533006","Type":"IssuesEvent","CreatedAt":"2018-06-25T20:45:18","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3147","RelatedDescription":"Closed issue \"Xamarin.Forms.Platform.Android.SwitchRenderer.UpdateOnColor () throws NRE Exception on android\" (#3147) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWe updated latest of Xamarin.forms v 3.1.0.583944 and on android 8.0 it crashes with exception details below. We used `switch` in one of the page:\r\n\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at Xamarin.Forms.Platform.Android.SwitchRenderer.UpdateOnColor () [0x00078] in <7999cc4bd5664eca8a72469344172ca3>:0 \r\n  at Xamarin.Forms.Platform.Android.SwitchRenderer.Android.Widget.CompoundButton.IOnCheckedChangeListener.OnCheckedChanged (Android.Widget.CompoundButton buttonView, System.Boolean isChecked) [0x00016] in <7999cc4bd5664eca8a72469344172ca3>:0 \r\n  at Android.Widget.CompoundButton+IOnCheckedChangeListenerInvoker.n_OnCheckedChanged_Landroid_widget_CompoundButton_Z (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_buttonView, System.Boolean isChecked) [0x0000f] in <d6a544155d4e4629ab4abf6b6d559591>:0 \r\n  at (wrapper dynamic-method) System.Object.44c09ad3-6222-4d7d-85b9-34891139c349(intptr,intptr,intptr,bool)\r\n\tat md51558244f76c53b6aeda52c8a337f2c37.SwitchRenderer.n_onCheckedChanged(Native Method)\r\n\tat md51558244f76c53b6aeda52c8a337f2c37.SwitchRenderer.onCheckedChanged(SwitchRenderer.java:46)\r\n\tat android.widget.CompoundButton.setChecked(CompoundButton.java:171)\r\n\tat android.widget.Switch.setChecked(Switch.java:1075)\r\n\tat mono.java.lang.RunnableImplementor.n_run(Native Method)\r\n\tat mono.java.lang.RunnableImplementor.run(RunnableImplementor.java:30)\r\n\tat android.os.Handler.handleCallback(Handler.java:790)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n\tat android.os.Looper.loop(Looper.java:164)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6494)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n```\r\n \r\n\r\n### Expected Behavior\r\nIt should work with `Switch` control.\r\n### Actual Behavior\r\nApp crashes on opening that particular page containing the `Switch` control \r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.583944\r\n- Last known good version: 3.0.0.561731\r\n- IDE: VS for mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android:  Android 8 onwards.\r\n  - \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms -Version 3.1.0.583944\r\n- Affected Devices: Android Google pixel, pixel 2\r\n\r\n### Screenshots\r\nN/A\r\n\r\n### Reproduction Link\r\nN/A\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7876022278","Type":"IssuesEvent","CreatedAt":"2018-06-25T22:40:40","Actor":"ivanicin","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4337","RelatedDescription":"Opened issue \"Share extension doesn't work for App Store apps\" (#4337) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. New solution Mac app\r\n2. Set info.plist bundle identifier\r\n3. Enable App Sandbox in Entitlements.plist\r\n4. Create provisioning profile on Apple Developer and set the app to be signed with it\r\n5. Add share extension to solution and edit info.plist so that \r\n6. Set info.plist bundle identifier to [step 2 identifier].share for extension\r\n7. Create provisioning profile on Apple Developer for the extension and set the extension to be signed with it\r\n8. Run the app\r\n### Expected Behavior\r\nExtension should appear among extensions as it would on iOS app\r\n### Actual Behavior\r\nExtensions doesn't appear\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: f546b303-006e-4f34-8fa8-4662985b4489\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4 (14160)\r\nBuild 9F1027a\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/ivanicin/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[dummy.zip](https://github.com/xamarin/xamarin-macios/files/2134947/dummy.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"7875171741","Type":"IssuesEvent","CreatedAt":"2018-06-25T19:30:37","Actor":"comfr3ak","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4315","RelatedDescription":"Closed issue \"Native Binding Project Compiles Library With No Methods Or Classes\" (#4315) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create iOS binding project\r\n2. Build project\r\n3. Examine output DLL in object browser and see no methods or classes\r\n\r\n### Expected Behavior\r\n\r\nShould have the methods and classes on the dll to use in ios xamarin project\r\n\r\n### Actual Behavior\r\n\r\nProject compiles successfully but DLL has no methods or entry points to use\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA044\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40601.0\r\nASP.NET and Web Tools 2017\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27625.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 173513e369ffb7a1c4d5dccf83696d9aac2ab2d0.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2035\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n1>------ Rebuild All started: Project: iXpandBindingslib, Configuration: Release Any CPU ------\r\n1>  Connecting to Mac server 192.168.1.126...\r\n1>  Connecting to Mac server 192.168.1.126...\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(3268,5): warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName.\r\n1>  iXpandBindingslib -> C:\\2020CAM\\RELEASE_4\\RELEASE_4_X\\CLIENT_GEN_2\\1CS\\iXpandBindingslib\\bin\\Release\\iXpandBindingslib.dll\r\n========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[iXpandBindingslib.zip](https://github.com/xamarin/xamarin-macios/files/2123585/iXpandBindingslib.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":20,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":33,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-06-26T05:30:57.4980698Z","RunDurationInMilliseconds":4136}