{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":234,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null},{"Title":"Announcing F# support for .NET Core and .NET Standard projects in Visual Studio","PublishedOn":"2017-11-15T19:00:49+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"We&#8217;re pleased to announce that Visual Studio 2017 15.5 Preview 4 now supports F# projects targeting .NET Core, .NET Standard, and .NET Framework through the .NET Core SDK. Some of you have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/announcing-f-support-for-net-core-and-net-standard-projects-in-visual-studio/","RawContent":null},{"Title":"Welcome to C# 7.2 and Span","PublishedOn":"2017-11-15T19:00:26+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"C# 7.2 is the latest point release of C#, and adds a number of small but useful features. All the features are described in wonderful detail in the docs. Start with the overview, What&#8217;s new in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/welcome-to-c-7-2-and-span/","RawContent":null},{"Title":".NET Core November 2017 Update","PublishedOn":"2017-11-15T05:25:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November Update. This includes .NET Core 1.0.8, 1.1.5 and 2.0.1 and .NET Core SDK 1.1.5 and 2.0.3. Details regarding the security issues addressed by this release...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-core-november-2017-update/","RawContent":null},{"Title":".NET Framework November 2017 Security and Quality Rollup","PublishedOn":"2017-11-15T03:54:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the November 2017 Security and Quality Rollup. Security This release contains no new security updates. The most recent .NET security updates were shipped with the September...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/14/net-framework-november-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6816687850","Type":"IssuesEvent","CreatedAt":"2017-11-06T20:30:07","Actor":"Petermarcu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/88","RelatedDescription":"Closed issue \"File system watcher crash\" (#88) at dotnet/home","RelatedBody":"Not sure where to open this issue.\r\nI'm experiencing crashes since I migrated to .net core 2.0 while running my site.\r\nThe following is the exception and stack trace:\r\n```\r\nAn unhandled exception of type 'System.ArgumentException' occurred in System.Private.CoreLib.dll\r\nThe path is not of a legal form.\r\n\r\nSystem.Private.CoreLib.dll!System.IO.Path.GetFullPath(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.InMemoryDirectoryInfo(string rootDir, System.Collections.Generic.IEnumerable<string> files, bool normalized)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string rootDir, System.Collections.Generic.IEnumerable<string> files)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileSystemGlobbing.dll!Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher matcher, string file)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.ReportChangeForMatchedEntries(string path)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnFileSystemEntryChange(string fullPath)\tUnknown\tNo symbols loaded.\r\n \tMicrosoft.Extensions.FileProviders.Physical.dll!Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.OnRenamed(object sender, System.IO.RenamedEventArgs e)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.NotifyRenameEventArgs(System.IO.WatcherChangeTypes action, string name, string oldName)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ParseEventBufferAndNotifyForEach(byte[] buffer)\tUnknown\tNo symbols loaded.\r\n \tSystem.IO.FileSystem.Watcher.dll!System.IO.FileSystemWatcher.ReadDirectoryChangesCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* overlappedPointer)\tUnknown\tNo symbols loaded.\r\n \tSystem.Private.CoreLib.dll!System.Threading._IOCompletionCallback.PerformIOCompletionCallback(uint errorCode, uint numBytes, System.Threading.NativeOverlapped* pOVERLAP)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nI'm not sure how to fix this. I can reproduce it although it's not easy since I think it has to do with timing..."},{"Id":"6797468573","Type":"PullRequestEvent","CreatedAt":"2017-11-01T23:04:17","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Opened pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6886438076","Type":"IssuesEvent","CreatedAt":"2017-11-21T19:28:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/49","RelatedDescription":"Opened issue \".NET Core Alpine Image Ready for Testing\" (#49) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Image Ready for Testing\r\n\r\nAn [Alpine](https://hub.docker.com/_/alpine/)-based Docker image is now available for .NET Core. Alpine is much smaller than Debian, which we have used for the .NET Core base image to date. There have been many requests for an Alpine image. We are pleased to make it available. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image.\r\n\r\nWe have added two new images:\r\n\r\n- `2.1-runtime-alpine`\r\n- `2.1-runtime-deps-alpine`\r\n\r\nAlpine support is part of the .NET Core 2.1 release. .NET Core 2.1 images are currently provided at the [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/) repo, including the new Alpine images. .NET Core 2.1 images will be promoted to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo when .NET Core 2.1 is shipped as a Preview, expected to be early 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker-nightly #500](https://github.com/dotnet/dotnet-docker-nightly/issues/500)\r\n\r\n## Details\r\n\r\n* [dotnet/dotnet-docker-nightly #480](https://github.com/dotnet/dotnet-docker-nightly/pull/480)\r\n* [dotnet/announcements #20](https://github.com/dotnet/announcements/issues/20)\r\n* [dotnet/dotnet-docker-samples #94](https://github.com/dotnet/dotnet-docker-samples/pull/94)\r\n\r\nThe primary goal of Alpine is very small deployments. We have been considering various design decisions to make .NET Core Alpine base images as small as possible to align with that. In this first iteration, we enabled [.NET Core 2.0 Globalization Invariant Mode](https://github.com/dotnet/announcements/issues/20) in order to reduce the default size of the image. This change reduced the image by ~30MB. You can see the reduction in size for .NET Core images relative to Debian in the following table.\r\n\r\n|2.1 Image|Debian|Alpine|\r\n|-----    |------|------|\r\n|`-deps`   |153MB (68MB compressed) |13.8 MB (6MB compressed)|\r\n|`-runtime`|222MB (96MB compressed) |82.5 (34MB compressed)|\r\n\r\nNote: The compressed size is what you will see in a [registry](https://hub.docker.com/r/microsoft/dotnet-nightly/tags/) and is the wire-size cost.\r\n\r\nWe are also considering saving more space by native-compiling fewer assemblies. .NET Core runtime assemblies are native-compiled with the [crossgen tool](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md) in the [Ready2Run format](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/readytorun-overview.md). Native-compiled code delivers superior startup performance but at the cost of 2-3x larger files. We have the opportunity to compile less, skipping compiling assemblies in part or in whole. We believe that we can save at least another 10MB through compiling less without a material drop in performance. For scenarios that value size over startup or where wire cost is significant, it may be valuable to aggressively reduce the number/% of compilation.\r\n\r\nAlpine images are only available for .NET Core 2.1. At the current time, only Runtime images are available. We intend to offer SDK images at a later date.\r\n\r\nUse cases that cannot tolerate Globalization invariant mode can reset the `DOTNET_SYSTEM_GLOBALIZATION_INVARIANT` environment variable and install the ICU package. Please check out [.NET Core Docker Alpine Production Sample (Preview)](https://github.com/dotnet/dotnet-docker-samples/blob/master/dotnetapp-prod-alpine-preview/README.md) to see examples of using this image with and without Globalization Invariant Mode enabled.\r\n\r\n## Call to Action\r\n\r\nPlease test your workloads with the new Alpine image. In particular, we want to know if enabling .NET Core Globalization Invariant Mode is acceptable/appreciated.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7039012863","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:55:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15660","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#15660) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7038955069","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:18:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15663","RelatedDescription":"Opened pull request \"Remove reflection block on methods with MethodAttributes.RequireSecObject flag\" (#15663) at dotnet/coreclr","RelatedBody":"This is not applicable for CoreCLR since CoreCLR does not have CAS, and this flag was overloaded for other purpose.\r\n\r\nFixes #15662"},{"Id":"7038932532","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:04:29","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14267","RelatedDescription":"Closed pull request \"Update CoreClr, CoreFx to stable, servicing-25921-02, respectively (release/2.0.0)\" (#14267) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify<details><summary>Discarded auto-update commits (click to expand)</summary><auto-pr-discard-list>\r\n\r\n * [`67f6f9f`](https://github.com/dotnet-maestro-bot/coreclr/commits/67f6f9febb89778d7e8b908df0e7bc799ff9a1a9) Update CoreClr, CoreFx to stable, servicing-25921-02, respectively\r\n   * :x: **Ubuntu arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/513/)\r\n   * :x: **Ubuntu16.04 arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/501/)\r\n   * :hourglass: **CentOS7.1 x64 Debug Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/502/)\r\n   * :hourglass: **CentOS7.1 x64 Release Priority 1 Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/97/)\r\n   * :hourglass: **CROSS Check** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/512/)\r\n   * :hourglass: **OSX10.12 x64 Checked Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_osx10.12_flow_prtest/559/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/508/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (11/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/518/)\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (2/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (10/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/513/)\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (5/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (13/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu x64 Checked Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_ubuntu_flow_prtest/513/)\r\n   * :hourglass: **Ubuntu x64 Formatting** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_ubuntu_formatting_prtest/513/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/501/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (4/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (12/13 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Windows_NT arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/519/)\r\n   * :hourglass: **Windows_NT arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_windows_nt_prtest/518/)\r\n   * :hourglass: **Windows_NT x64 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/396/)\r\n   * :hourglass: **Windows_NT x64 Debug Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_windows_nt_prtest/525/)\r\n   * :hourglass: **Windows_NT x64 Formatting** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/508/)\r\n   * :hourglass: **Windows_NT x64 Release Priority 1 Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_windows_nt_pri1_prtest/519/)\r\n   * :hourglass: **Windows_NT x86 Checked Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x86_checked_windows_nt_prtest/510/)\r\n   * :hourglass: **Windows_NT x86 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/396/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/512/)\r\n   * :heavy_check_mark: **Ubuntu x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_ubuntu_formatting_prtest/513/)\r\n   * :heavy_check_mark: **Windows_NT x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/508/)\r\n * [`1c45cf6`](https://github.com/dotnet-maestro-bot/coreclr/commits/1c45cf668a3db63e7a758b141615cea177ce0ee3) Update CoreClr, CoreFx to servicing-25917-03, servicing-25917-01, respectively\r\n   * :x: **OSX10.12 x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_osx10.12_flow_prtest/554/)\r\n   * :x: **Ubuntu arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/508/)\r\n   * :x: **Ubuntu16.04 arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/496/)\r\n   * :x: **Windows_NT arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/514/)\r\n   * :x: **Windows_NT arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_windows_nt_prtest/513/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/503/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (4/5 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (14/15 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/513/)\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (1/5 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (11/15 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/508/)\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (2/5 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (12/15 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/496/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (3/5 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (13/15 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Windows_NT x64 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/391/)\r\n   * :hourglass: **Windows_NT x86 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/391/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/497/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/92/)\r\n   * :heavy_check_mark: **Tizen armel Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/503/)\r\n   * :heavy_check_mark: **Tizen armel Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/513/)\r\n   * :heavy_check_mark: **Ubuntu x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_ubuntu_flow_prtest/508/)\r\n   * :heavy_check_mark: **Windows_NT x64 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/391/)\r\n   * :heavy_check_mark: **Windows_NT x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_windows_nt_prtest/520/)\r\n   * :heavy_check_mark: **Windows_NT x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/503/)\r\n   * :heavy_check_mark: **Windows_NT x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_windows_nt_pri1_prtest/514/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x86_checked_windows_nt_prtest/505/)\r\n   * :heavy_check_mark: **Windows_NT x86 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/391/)\r\n * [`b609a11`](https://github.com/dotnet-maestro-bot/coreclr/commits/b609a111053034a71552abadcaddbfd04e3c09d0) Update CoreClr, CoreFx to servicing-25917-03, servicing-25915-01, respectively\r\n   * :x: **Tizen armel Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/506/)\r\n   * :x: **Ubuntu arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/502/)\r\n   * :x: **Ubuntu16.04 arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/490/)\r\n   * :x: **Windows_NT arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/508/)\r\n   * :x: **Windows_NT arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_windows_nt_prtest/507/)\r\n   * :hourglass: **CentOS7.1 x64 Release Priority 1 Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/86/)\r\n   * :hourglass: **CROSS Check** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/501/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/497/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (7/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/506/)\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (4/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/502/)\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (6/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/490/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (9/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Windows_NT arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/508/)\r\n   * :hourglass: **Windows_NT x64 Formatting** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/497/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/491/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/86/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/501/)\r\n   * :heavy_check_mark: **OSX10.12 x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_osx10.12_flow_prtest/548/)\r\n   * :heavy_check_mark: **Tizen armel Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/497/)\r\n   * :heavy_check_mark: **Ubuntu x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_ubuntu_flow_prtest/502/)\r\n   * :heavy_check_mark: **Ubuntu x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_ubuntu_formatting_prtest/502/)\r\n   * :heavy_check_mark: **Windows_NT x64 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/385/)\r\n   * :heavy_check_mark: **Windows_NT x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_windows_nt_prtest/514/)\r\n   * :heavy_check_mark: **Windows_NT x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/497/)\r\n   * :heavy_check_mark: **Windows_NT x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_windows_nt_pri1_prtest/508/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x86_checked_windows_nt_prtest/499/)\r\n   * :heavy_check_mark: **Windows_NT x86 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/385/)\r\n * [`ac56350`](https://github.com/dotnet-maestro-bot/coreclr/commits/ac563508ffe4632374723b91e496315c8d605ef2) Update CoreClr, CoreFx to servicing-25917-02, servicing-25915-01, respectively\r\n   * :x: **Ubuntu arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/499/)\r\n   * :x: **Ubuntu16.04 arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/487/)\r\n   * :x: **Windows_NT arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/505/)\r\n   * :x: **Windows_NT arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_windows_nt_prtest/504/)\r\n   * :hourglass: **CentOS7.1 x64 Debug Build and Test** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/488/)\r\n   * :hourglass: **CentOS7.1 x64 Debug Build and Test** Triggered. (1/2 on centos71-20171005) [Details]()\r\n   * :hourglass: **Tizen armel Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/496/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (3/5 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/503/)\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (3/11 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/499/)\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (2/11 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/487/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (5/11 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Windows_NT x64 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/384/)\r\n   * :hourglass: **Windows_NT x86 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/384/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/488/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/83/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/500/)\r\n   * :heavy_check_mark: **OSX10.12 x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_osx10.12_flow_prtest/547/)\r\n   * :heavy_check_mark: **Tizen armel Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/496/)\r\n   * :heavy_check_mark: **Tizen armel Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/503/)\r\n   * :heavy_check_mark: **Ubuntu x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_ubuntu_flow_prtest/498/)\r\n   * :heavy_check_mark: **Ubuntu x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_ubuntu_formatting_prtest/498/)\r\n   * :heavy_check_mark: **Windows_NT x64 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/384/)\r\n   * :heavy_check_mark: **Windows_NT x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_windows_nt_prtest/513/)\r\n   * :heavy_check_mark: **Windows_NT x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/494/)\r\n   * :heavy_check_mark: **Windows_NT x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_windows_nt_pri1_prtest/507/)\r\n   * :heavy_check_mark: **Windows_NT x86 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x86_checked_windows_nt_prtest/498/)\r\n   * :heavy_check_mark: **Windows_NT x86 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/384/)\r\n * [`687643d`](https://github.com/dotnet-maestro-bot/coreclr/commits/687643df1905ddc728ee6e5650eeb6c9b2cf2765) Update CoreClr, CoreFx to servicing-25911-01, servicing-25915-01, respectively\r\n   * :x: **Tizen armel Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/475/)\r\n   * :x: **Ubuntu arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/479/)\r\n   * :x: **Ubuntu16.04 arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/468/)\r\n   * :x: **Windows_NT x64 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/366/)\r\n   * :x: **Windows_NT x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_windows_nt_prtest/494/)\r\n   * :x: **Windows_NT x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_windows_nt_pri1_prtest/488/)\r\n   * :x: **Windows_NT x86 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x86_checked_windows_nt_prtest/479/)\r\n   * :x: **Windows_NT x86 CoreCLR Perf Tests Correctness** Build finished.  [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/365/)\r\n   * :hourglass: **CROSS Check** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/482/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_debug_tizen_prtest/475/)\r\n   * :hourglass: **Tizen armel Cross Debug Build** Triggered. (7/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/485/)\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (4/4 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Tizen armel Cross Release Build** Triggered. (10/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_ubuntu_prtest/479/)\r\n   * :hourglass: **Ubuntu arm Cross Release Build** Triggered. (5/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Started. [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_ubuntu16.04_prtest/468/)\r\n   * :hourglass: **Ubuntu16.04 arm Cross Debug Build** Triggered. (6/10 on ubuntu1404-20170120) [Details]()\r\n   * :hourglass: **Windows_NT x64 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x64_smoketest_prtest/366/)\r\n   * :hourglass: **Windows_NT x86 CoreCLR Perf Tests Correctness** Started. [Details](https://ci2.dot.net/job/dotnet_coreclr/job/perf/job/release_2.0.0/job/perf_perflab_Windows_NT_x86_smoketest_prtest/365/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Debug Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/debug_centos7.1_prtest/470/)\r\n   * :heavy_check_mark: **CentOS7.1 x64 Release Priority 1 Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_release_centos7.1_pri1_flow_prtest/65/)\r\n   * :heavy_check_mark: **CROSS Check** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/CROSS_check_prtest/482/)\r\n   * :heavy_check_mark: **OSX10.12 x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_osx10.12_flow_prtest/529/)\r\n   * :heavy_check_mark: **Tizen armel Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/armel_cross_release_tizen_prtest/485/)\r\n   * :heavy_check_mark: **Ubuntu x64 Checked Build and Test** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/checked_ubuntu_flow_prtest/480/)\r\n   * :heavy_check_mark: **Ubuntu x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_ubuntu_formatting_prtest/476/)\r\n   * :heavy_check_mark: **Windows_NT arm Cross Debug Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_debug_windows_nt_prtest/486/)\r\n   * :heavy_check_mark: **Windows_NT arm Cross Release Build** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/arm_cross_release_windows_nt_prtest/486/)\r\n   * :heavy_check_mark: **Windows_NT x64 Formatting** Build finished.  [Details](https://ci.dot.net/job/dotnet_coreclr/job/release_2.0.0/job/x64_windows_nt_formatting_prtest/476/)\r\n\r\n</auto-pr-discard-list></details>"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7039312780","Type":"IssuesEvent","CreatedAt":"2017-12-29T05:18:10","Actor":"bojanrajkovic","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8302","RelatedDescription":"Opened issue \"dotnet run breaks argument passing to app\" (#8302) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Download the attached sample.\r\n2. Run `dotnet run -- -tfoo -`\r\n\r\nSample: [dotnet-run-argument-issues-repro.zip](https://github.com/dotnet/cli/files/1592588/dotnet-run-argument-issues-repro.zip)\r\n\r\n## Expected  behavior\r\n\r\nThe following output:\r\n\r\n```\r\nArguments: [-tfoo, -]\r\nRemaining: [-]\r\nTest argument value: foo\r\n```\r\n\r\nThis correct behavior can be obtained by running `dotnet bin/Debug/netcoreapp2.0/dotnet-run-argument-issues-repro.dll -tfoo -`.r\r\n\r\n## Actual behavior\r\n\r\n```\r\nArguments: [-tfoo]\r\nRemaining: []\r\nTest argument value: foo\r\n```\r\n\r\nThe `-` is being eaten by `dotnet run`, despite the fact it's been told to stop argument parsing (`--`).\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  17.10\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.2/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n"},{"Id":"7036363203","Type":"IssuesEvent","CreatedAt":"2017-12-28T08:18:00","Actor":"borgdylan","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8301","RelatedDescription":"Opened issue \"Question: How is MSBuild actually called?\" (#8301) at dotnet/cli","RelatedBody":"I am still aiming to swap the MsBuild that ships with the CLI with the system one (which works for me when used by itself). Using msbuild by itself means no helper commands like sln, test etc. Using the CLI as it gets installed means no mono support. Is there an environment variable I can change or a file I can change to point to the system wide msbuilf that I have installed?\r\n\r\n\r\n"},{"Id":"7036322426","Type":"PullRequestEvent","CreatedAt":"2017-12-28T08:00:38","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8300","RelatedDescription":"Opened pull request \"Merge release/2.0.0 to release/2.1\" (#8300) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.0.0 into release/2.1.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.0.0-to-release/2.1-20171228-080036\ngit reset --hard upstream/release/2.1\ngit merge upstream/release/2.0.0\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.0.0-to-release/2.1-20171228-080036 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7036730892","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:30:41","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Closed issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036717658","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:26:06","Actor":"Styxxy","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/614","RelatedDescription":"Opened issue \"DocumentationFile outputs both to project root as in output folder (when only specifying filename)\" (#614) at dotnet/standard","RelatedBody":"When specifying only a filename in the DocumentationFile in the csproj, the generated xml documentation file will be outputted to both the root of the project as well as in the output path.\r\n\r\nGiven following csproj:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>\r\n    <DocumentationFile>my_library.xml</DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd we have one class in our class libary:\r\n```cs\r\nnamespace my_library\r\n{\r\n    /// <summary>\r\n    /// Test\r\n    /// </summary>\r\n    public class Test\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nThe documentation file is generated in following directories:\r\n\r\n- project-root\r\n- project-root/bin/$(Configuration)/net47\r\n- project-root/bin/$(Configuration)/netstandard2.0\r\n\r\nIn the _old_ csproj format, the documentation file would be only outputted to the output folder."},{"Id":"7036709386","Type":"IssuesEvent","CreatedAt":"2017-12-28T10:23:14","Actor":"0xF6","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/612","RelatedDescription":"Closed issue \"Merge Library?\" (#612) at dotnet/standard","RelatedBody":"Now to merge.NET Standard libraries into one library?"},{"Id":"7035640765","Type":"IssuesEvent","CreatedAt":"2017-12-28T01:54:35","Actor":"rexcfnghk","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/613","RelatedDescription":"Opened issue \"Issue with referencing a .NET Standard 2.0 project with an classic ASP.NET project targeting .NET Framework 4.6.1\" (#613) at dotnet/standard","RelatedBody":"I refer to my original issue submitted to Autofac [here](https://github.com/autofac/Autofac.WebApi/issues/32). I originally thought it was an Autofac issue but turns out it is not as I can reproduce it without Autofac.\r\n\r\n# Summary\r\n`MissingMethodException` is thrown when resolving for a component through a delegate that returns a type defined in a .NET Standard 2.0 library, under the context of an classic ASP.NET Web API project.\r\n\r\n# Steps to reproduce\r\n1. Create two projects as follows\r\n    - A .NET Standard 2.0 library\r\n    - A classic ASP.NET Web API project targeting .NET Framework 4.6.1\r\n2. Define an interface and an implementing class pair in the .NET standard library as follows:\r\n```c#\r\npublic interface IFoo { void DoSomething(); }\r\n\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo(HttpClient httpClient) => _httpClient = httpClient;\r\n\r\n    public void DoSomething() { /* No-op */ }\r\n}\r\n```\r\n3. Reference the .NET Standard library from the ASP.NET Web API project\r\n4. Implement a dummy controller that takes `IFoo` as a constructor parameter, like:\r\n```c#\r\npublic class DummyController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public DummyController() => _foo = new Foo(new HttpClient);\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\nNote that I have a parameterless contructor for `DummyController`.\r\n6. Run the ASP.NET Web API application and visit `/api/dummy/test`.\r\n\r\n# Expected behaviour\r\n`\"a\"` is returned.\r\n\r\n# Actual behaviour\r\n`Autofac.Core.DependencyResolutionException` is thrown.\r\n\r\nStack trace:\r\n<pre>\r\nAn error has occurred.An error occurred when trying to create a controller of type 'DummyController'. Make sure that the controller has a parameterless public constructor.System.InvalidOperationException   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n   at System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(HttpRequestMessage request)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()An error has occurred.Method not found: 'Void AutofacNetStandara.Library.Foo..ctor(System.Net.Http.HttpClient)'.System.MissingMethodException   at AutofacNetStandard.Web.Controllers.DummyController..ctor()\r\n   at lambda_method(Closure )\r\n   at System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(HttpRequestMessage request, HttpControllerDescriptor controllerDescriptor, Type controllerType)\r\n</pre>\r\n---------\r\n# Additional things I have tried\r\n1. Reference the same .NET Standard project from a .NET Framework 4.6.1 **Console** project, with the `Main` method initailizing `Foo`:\r\n```c#\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        var foo = new Foo(new HttpClient());\r\n\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```\r\nNo runtime exceptions are thrown and `foo` variable is initialised correctly.\r\n2. Moving the initialising of `Foo._httpClient` to the default constructor of `Foo` and call the empty constructor from the web project instead, like:\r\n```c#\r\n// In the .NET Standard 2.0 library\r\npublic class Foo : IFoo\r\n{\r\n    private readonly HttpClient _httpClient;\r\n\r\n    public Foo() => _httpClient = new HttpClient();\r\n\r\n    public void DoSomething() { }\r\n}\r\n\r\n// In the ASP.NET project, targeting .NET 4.6.1\r\npublic class ValuesController : ApiController\r\n{\r\n    private readonly IFoo _foo;\r\n\r\n    public ValuesController() => _foo = new Foo();\r\n\r\n    [HttpGet]\r\n    public IHttpActionResult Test() => Ok(\"a\");\r\n}\r\n```\r\n`\"a\"` is returned as expected when visiting the route `/api/values/test`.\r\n"},{"Id":"7035205864","Type":"IssuesEvent","CreatedAt":"2017-12-27T21:53:55","Actor":"danmosemsft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/608","RelatedDescription":"Closed issue \"Proposal: add GetEnvironmentVariableAsBool to netstandard\" (#608) at dotnet/standard","RelatedBody":"Currently the dotnet cli has a function which is located at: [src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs Line 106](https://github.com/dotnet/cli/blob/fffe3142ad8043743d83885df2166fd2f80dceca/src/Microsoft.DotNet.Cli.Utils/EnvironmentProvider.cs#L106)\r\n\r\nI think it would be useful to consider this functionality for inclusion into the `System.Environment` namespace.\r\n\r\nThis issue is to raise the idea and garner discussion. I do not believe it would conflict with anything already present, though I've not performed a thorough examination to prove it."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7039241938","Type":"IssuesEvent","CreatedAt":"2017-12-29T04:24:04","Actor":"NVentimiglia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26098","RelatedDescription":"Closed issue \"Exception thrown: 'System.NullReferenceException' - No Stack Trace\" (#26098) at dotnet/corefx","RelatedBody":"I have a netcoreapp2.0 console app. I am throwing an unhandled exception somewhere in my class library. I have no idea whereas there is no stack trace or usual information. I see closed issues with other people having similar problems. Not sure what to do, this is really annoying.\r\n"},{"Id":"7039212112","Type":"IssuesEvent","CreatedAt":"2017-12-29T04:02:39","Actor":"NVentimiglia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26098","RelatedDescription":"Opened issue \"Exception thrown: 'System.NullReferenceException' - No Stack Trace\" (#26098) at dotnet/corefx","RelatedBody":"I have a dotnetcore console app. I am throwing an unhandled exception somewhere in my class library. I have no idea whereas there is no stack trace or usual information. I see closed issues with other people having similar problems. Not sure what to do, this is really annoying.\r\n\r\n`\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n`"},{"Id":"7039196595","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:52:22","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/20816","RelatedDescription":"Closed issue \"System.Net.Http.Headers.ContentDispositionHeaderValue.EncodeAndQuoteMime should allow quotes\" (#20816) at dotnet/corefx","RelatedBody":"If `System.Net.Http.Headers.ContentDispositionHeaderValue.FileName` is set to a value with quotes, [this](https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/Headers/ContentDispositionHeaderValue.cs#L441) throws an error:\r\n\r\n```c#\r\n        private string EncodeAndQuoteMime(string input)\r\n        {\r\n            ...\r\n            if (result.IndexOf(\"\\\"\", 0, StringComparison.Ordinal) >= 0) // Only bounding quotes are allowed.\r\n            {\r\n                throw new ArgumentException(string.Format(CultureInfo.InvariantCulture,\r\n                    SR.net_http_headers_invalid_value, input));\r\n            }\r\n            ...\r\n        }\r\n```\r\n\r\nAs far as I can tell, `quoted-string` should be allowed, as per [RFC 2616](https://tools.ietf.org/html/rfc2616#section-2.2). \r\n\r\nIt seems strange that this error can be thrown at all, considering that you can even give it non-ASCII and it will encode it properly.\r\n\r\n[EDIT] Add C# syntax highlighting by @karelz"},{"Id":"7039191827","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:49:21","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/20994","RelatedDescription":"Closed issue \"CoreFX is more restrictive parsing if-match header values than the equivalent with the FullCLR.\" (#20994) at dotnet/corefx","RelatedBody":"One of our customers, nmbradford, is moving to PowerShell 6 from Windows PowerShell and has hit an incompatibility between CoreFX and FullCLR's handling of if-match header values.  \r\n\r\nFor example, the following Works on Windows PowerShell:\r\n```\r\n$headers = @{}\r\n$headers.Add(\"if-match\",\"12345\")\r\nInvoke-WebRequest -Uri \"http://httpbin.org/headers\" -Headers $headers\r\n```\r\n\r\nOn PowerShell 6 with the CoreFx, the same results in a FormatException thrown by `System.Net.Http.Headers.HttpHeaderParser.ParseValue`.\r\n\r\nHis expectation is the header value should work on PowerShell/CoreFx as it does with Windows PowerShell/FullCLR.  Instead, he needs to special case this header for it to work.\r\n\r\nSee https://github.com/PowerShell/PowerShell/issues/2895 for the related PowerShell issue."},{"Id":"7039161414","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:29:23","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24373","RelatedDescription":"Closed issue \"Give access to raw list of headers in HttpResponseHeaders\" (#24373) at dotnet/corefx","RelatedBody":"If a header is not accessible through HttpResponseHeaders (in my case Last-Modified) it would be convenient to have access to the raw list of headers:\r\n\r\nresponse.Headers.Values(\"Last-Modified\")\r\n\r\nCurrently this does not give a result, although I put the header in the response (as I can check by testing it in Postman)."},{"Id":"7039131065","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:11:00","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24496","RelatedDescription":"Closed issue \"System.Net.Http.HttpContent.ReadAsStringAsync fails for ISO-8859-15 (Latin-9)\" (#24496) at dotnet/corefx","RelatedBody":"I'm trying to read the HTTP response from a web service, where the content type header is:\r\n\r\n```\r\nContent-Type: text/html; charset=ISO-8859-15\r\n```\r\n\r\nWhen invoking `System.Net.Http.HttpContent.ReadAsStringAsync()` my app fails with `System.InvalidOperationException`  \"*The character set provided in ContentType is invalid. Cannot read content as string using an invalid character set.*\"\r\n\r\n`ISO-8859-15` (Latin-9) though is a valid charset, and the problem seems to be in the incomplete list of charsets hardcoded in .NET (System.Globalization I think). \r\n\r\nIs this a bug? Is there another way to read content encoded with this (or any other) charset, other than going lower level into the data stream?"},{"Id":"7039073478","Type":"IssuesEvent","CreatedAt":"2017-12-29T02:34:52","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25816","RelatedDescription":"Closed issue \"Core doesn't read the server certificate\" (#25816) at dotnet/corefx","RelatedBody":"@hammond-of-texas commented on [Fri Dec 08 2017](https://github.com/dotnet/core/issues/1142)\r\n\r\n# Issue Title\r\n\r\nCore doesn't read the server certificate\r\n\r\n# General\r\n\r\nIn general, a simple request like this will work in .Net:\r\n\r\n```c#\r\n        static void Main(string[] args)\r\n        {\r\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(\"https://www.sbb.ch\");\r\n            HttpWebResponse response = (HttpWebResponse) request.GetResponse();\r\n            X509Certificate cert = request.ServicePoint.Certificate;\r\n        }\r\n```\r\n\r\nThe same thing will fail in core 2.0 with a \"System.PlatformNotSupportedException: 'Operation is not supported on this platform.'\" exception.\r\n\r\n---\r\n\r\n@richlander commented on [Sat Dec 09 2017](https://github.com/dotnet/core/issues/1142#issuecomment-350486532)\r\n\r\nPTAL @davidsh \r\n\r\n"},{"Id":"7039062324","Type":"IssuesEvent","CreatedAt":"2017-12-29T02:27:44","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/23788","RelatedDescription":"Closed issue \"System.Net.Http.StreamContent.ReadOnlyStream size awareness\" (#23788) at dotnet/corefx","RelatedBody":"Streams typically returned by `HttpClient` (`StreamContent.ReadOnlyStream` - I am **explicitely** trying not to use buffered streams, so `MemoryStream` is out of question) are neither size nor position-aware.\r\n\r\nhttps://github.com/dotnet/corefx/blob/6bf1e7c3032d3c24d5a41bbd880549ef4a8de2da/src/System.Net.Http/src/System/Net/Http/HttpContent.cs#L248-L275\r\n\r\nThis is for obvious reasons: the `Content-Length` header is not actually required to be sent at all times (see [RFC](https://tools.ietf.org/html/rfc7230#section-3.3.3)). I guess I could return a wrapped stream which exposes `Content-Length`, if sent by the server.\r\n\r\n~Additionally - because I'm not sure it's worth adding another issue for, when this is more of a question as of now than an actual \"pull request poll\", `System.IO.Compression.DeflateStream` does not support seek operations. Now, I will be the first to admit I don't exactly know how the deflate algorithm works. I was just curious of the reasoning behind that, since it is already memory-backed, and surely it should be easy enough to implement forward-seeking, by just quickly glancing at the current implementation. `SeekOrigin.End` may become problematic with `StreamContent.ReadOnlyStream` in regards to the fact that it does not expose the complete amount of bytes returned by the server, or would do so in an unusual way (regarding the point above).~\r\n>Removed because actual code suggests it works a little differently.\r\n\r\nI guess my question here is: is adding a way to tell actual content-length inside a network stream something worth creating a pull request for? ~Additionally, is it worth trying to implement seek operations in `DeflateStream` ?~\r\n"},{"Id":"7039033525","Type":"PullRequestEvent","CreatedAt":"2017-12-29T02:09:04","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26097","RelatedDescription":"Opened pull request \"Add test for calling Type.GetType via reflection\" (#26097) at dotnet/corefx","RelatedBody":"Regression test for https://github.com/dotnet/coreclr/issues/15662"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7039252527","Type":"IssuesEvent","CreatedAt":"2017-12-29T04:32:22","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23963","RelatedDescription":"Opened issue \"CodeLens blinks for a long time\" (#23963) at dotnet/roslyn","RelatedBody":"![blinking-codelens](https://user-images.githubusercontent.com/12466233/34429495-be2cfe56-ec0d-11e7-9372-1249199af3b4.gif)\r\n\r\nIt was not easy to capture, because it's not very consistent. Sometimes there is not blinking (the spot gets filled in once and settles). Sometimes it settles after a couple of blinks. In the screenshot above it blinked for 15 seconds.\r\n\r\nVersion 15.6.0 Preview 1.1\r\nVisualStudio.15.Preview/15.6.0-pre.1.1+27205.2004"},{"Id":"7039136723","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:14:27","Actor":"taori","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23962","RelatedDescription":"Opened issue \"Debugging issue if property with name \"Environment\" exists\" (#23962) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n![grafik](https://user-images.githubusercontent.com/5545184/34428535-1e4b03b0-ec4e-11e7-8d13-db5661594feb.png)\r\n\r\n**Expected Behavior**:\r\n\r\nThis code should not fail or crash. It should either not compile if it can't distinguish between members or pick the property as i would expect it to\r\n\r\n**Actual Behavior**:\r\n\r\nAs you can see in the image Environment is recognized as property by resharper as i would expect it. However when accessing \"Environment.Authentication\" an exception occurs. In the inspection window you can see the debugger thinks i want to use \"System.Environment\" - which i don't. "},{"Id":"7038877168","Type":"PullRequestEvent","CreatedAt":"2017-12-29T00:27:58","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23961","RelatedDescription":"Opened pull request \"Implement async using statement binding and lowering\" (#23961) at dotnet/roslyn","RelatedBody":"The approach here is to re-use all the binding and lowering logic for `using`, but extend it to support `using await`. The `BoundUsingStatement` gets a new field to hold an optional `BoundAwaitExpression` which will be used during lowering to do `await <expr>.DisposeAsync()` instead of `<expr>Dispose()`.\r\nAll the elements of the bound tree that relate to the `IDisposable` interface become overloaded to deal with `IDisposableAsync` in the async scenario.\r\nI've done a little bit of IDE testing, which prompted me to fix some control flow analysis."},{"Id":"7038824017","Type":"PullRequestEvent","CreatedAt":"2017-12-28T23:54:50","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23960","RelatedDescription":"Opened pull request \"Fixing completion in async foreach/using\" (#23960) at dotnet/roslyn","RelatedBody":"The keyword `await` should be offered for completion after `using` and `foreach`.\r\nAlso, `var` and `new` should be appropriately offered in `using await ($$` and `foreach await (var i in $$`."},{"Id":"7038330395","Type":"IssuesEvent","CreatedAt":"2017-12-28T20:06:27","Actor":"KirillOsenkov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23959","RelatedDescription":"Opened issue \"Improvements to Roslyn command-line build experience\" (#23959) at dotnet/roslyn","RelatedBody":"- [ ] If one forgot to run Restore.cmd before build, detect that and print an error message: \"You need to restore before building\"\r\n- [ ] If running Build.cmd from Developer Command Prompt, print a yellow warning: \"WARNING: you are building from a Developer Command Prompt. We are bypassing isolated reproducible build and using the MSBuild and SDK from your command prompt instead. This may fail and is unsupported. Use a regular command prompt for a reliable reproducible build.\"\r\n- [ ] Build.cmd should support a command-line argument to force reproducible build even if in Dev command prompt: `-ignoreDevCommandPrompt`"},{"Id":"7038299954","Type":"PullRequestEvent","CreatedAt":"2017-12-28T19:55:20","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23695","RelatedDescription":"Closed pull request \"Ruleset should also apply to \"unused using\" diagnostic\" (#23695) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nSet rule or compilation option to treat the \"unused using\" warning as an error. The compilation should fail when there is an unused using.\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/22579\r\n\r\n### Workarounds, if any\r\nNone that I know of.\r\n\r\n### Risk\r\n### Performance impact\r\nLow. The diagnostics for unused usings are computed after other diagnostics, and so the existing filtering didn't apply. The fix adds similar filtering on those late-added diagnostics.\r\n\r\n### Is this a regression from a previous update?\r\nNo.\r\n\r\n### How was the bug found?\r\nReported by customer."},{"Id":"7038286168","Type":"PullRequestEvent","CreatedAt":"2017-12-28T19:49:57","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23935","RelatedDescription":"Merged pull request \"Command-line options starting with dash are not file paths\" (#23935) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nInvoke the compiler with invalid command-line argument which starts with a `-` but also contains a `/`. The compiler throws an assertion.\r\nFor example, `-debug+/debug:portable`.\r\nThe assertion is that options can start with `-`, but paths shouldn't. The reason we're treating this argument as a possible path is because it contains a `/` (which is recognized by a heuristic for Linux paths).\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/21508\r\n\r\n### Workarounds, if any\r\nSpecify valid command-line arguments.\r\n\r\n### Risk\r\n### Performance impact\r\nLow. Adding a character check during command-line parsing.\r\n\r\n### Is this a regression from a previous update?\r\nNo\r\n\r\n### How was the bug found?\r\nReported by team-member."},{"Id":"7038286161","Type":"IssuesEvent","CreatedAt":"2017-12-28T19:49:57","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/21508","RelatedDescription":"Closed issue \"Command Line parser fails on `-debug+/debug:portable`\" (#21508) at dotnet/roslyn","RelatedBody":"Command Line parser fails on `-debug+/debug:portable`\r\n\r\n```\r\n   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)   at System.Environment.get_StackTrace()   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)   at System.Diagnostics.Debug.Assert(Boolean condition)   at Microsoft.CodeAnalysis.CommandLineParser.<ParseFileArgument>d__41.MoveNext()   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.CommonParse(IEnumerable`1 args, String baseDirectory, String sdkDirectoryOpt, String additionalReferenceDirectories)   at Microsoft.CodeAnalysis.CommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommonCompiler..ctor(CommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompiler..ctor(CSharpCommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc..ctor(String responseFile, BuildPaths buildPaths, String[] args, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 13\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc.Run(String[] args, BuildPaths buildPaths, TextWriter textWriter, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 22\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.RunLocalCompilation(String[] arguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 47\r\n   at Microsoft.CodeAnalysis.CommandLine.BuildClient.RunCompilation(IEnumerable`1 originalArguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/BuildClient.cs:line 85\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.Run(IEnumerable`1 arguments, RequestLanguage language, CompileFunc compileFunc) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 42\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Program.Main(String[] args) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/CSharp/CscCore/Program.cs:line 10\r\nUnhandled Exception: System.Diagnostics.Debug+DebugAssertException:\r\n\r\n   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at System.Diagnostics.Debug.Assert(Boolean condition)\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ParseFileArgument>d__41.MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.CommonParse(IEnumerable`1 args, String baseDirectory, String sdkDirectoryOpt, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommonCompiler..ctor(CommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompiler..ctor(CSharpCommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc..ctor(String responseFile, BuildPaths buildPaths, String[] args, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 13\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc.Run(String[] args, BuildPaths buildPaths, TextWriter textWriter, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 22\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.RunLocalCompilation(String[] arguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 47\r\n   at Microsoft.CodeAnalysis.CommandLine.BuildClient.RunCompilation(IEnumerable`1 originalArguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/BuildClient.cs:line 85\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.Run(IEnumerable`1 arguments, RequestLanguage language, CompileFunc compileFunc) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 42\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Program.Main(String[] args) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/CSharp/CscCore/Program.cs:line 10\r\n   at System.Diagnostics.Debug.UnixDebugLogger.ShowAssertDialog(String stackTrace, String message, String detailMessage)\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at System.Diagnostics.Debug.Assert(Boolean condition)\r\n   at Microsoft.CodeAnalysis.CommandLineParser.<ParseFileArgument>d__41.MoveNext()\r\n   at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.CommonParse(IEnumerable`1 args, String baseDirectory, String sdkDirectoryOpt, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommandLineParser.Parse(IEnumerable`1 args, String baseDirectory, String sdkDirectory, String additionalReferenceDirectories)\r\n   at Microsoft.CodeAnalysis.CommonCompiler..ctor(CommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompiler..ctor(CSharpCommandLineParser parser, String responseFile, String[] args, BuildPaths buildPaths, String additionalReferenceDirectories, IAnalyzerAssemblyLoader assemblyLoader)\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc..ctor(String responseFile, BuildPaths buildPaths, String[] args, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 13\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Csc.Run(String[] args, BuildPaths buildPaths, TextWriter textWriter, IAnalyzerAssemblyLoader analyzerLoader) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/Csc.cs:line 22\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.RunLocalCompilation(String[] arguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 47\r\n   at Microsoft.CodeAnalysis.CommandLine.BuildClient.RunCompilation(IEnumerable`1 originalArguments, BuildPaths buildPaths, TextWriter textWriter) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/BuildClient.cs:line 85\r\n   at Microsoft.CodeAnalysis.CommandLine.CoreClrBuildClient.Run(IEnumerable`1 arguments, RequestLanguage language, CompileFunc compileFunc) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/Shared/CoreClrBuildClient.cs:line 42\r\n   at Microsoft.CodeAnalysis.CSharp.CommandLine.Program.Main(String[] args) in /Users/tyoverby/workspace/c#/roslyn/src/Compilers/CSharp/CscCore/Program.cs:line 10\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7039164670","Type":"PullRequestEvent","CreatedAt":"2017-12-29T03:31:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5163","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5163) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7039014543","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:56:53","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5163","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5163) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7038481864","Type":"IssuesEvent","CreatedAt":"2017-12-28T21:08:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5162","RelatedDescription":"Opened issue \"Marshal.GetFunctionForPointer should throw exception when it cannot create the stub\" (#5162) at dotnet/corert","RelatedBody":"It returns null when the stub was not pre-generated during AOT."},{"Id":"7038363515","Type":"IssuesEvent","CreatedAt":"2017-12-28T20:20:04","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5160","RelatedDescription":"Closed issue \"bitmask of unsigned short fails to produce the right answer in WebAssembly\" (#5160) at dotnet/corert","RelatedBody":"using the following code in HelloWasm\\Program.cs\r\n\r\n```\r\nushort flag = 0x0002;\r\nushort mask  = 0x0003;\r\nif((flag & mask) != flag)\r\n    PrintLine(\"failed and member test\");\r\n```\r\n\r\nbecause it doesn't happen if the variables are just short, I think this is related to sign extension."},{"Id":"7038337470","Type":"PullRequestEvent","CreatedAt":"2017-12-28T20:09:23","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5161","RelatedDescription":"Opened pull request \"Usage based metadata manager fixes\" (#5161) at dotnet/corert","RelatedBody":"See individual commits for description."},{"Id":"7038293709","Type":"IssuesEvent","CreatedAt":"2017-12-28T19:52:53","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5160","RelatedDescription":"Opened issue \"bitmask of unsigned short fails to produce the right answer in WebAssembly\" (#5160) at dotnet/corert","RelatedBody":"using the following code in HelloWasm\\Program.cs\r\n\r\n```\r\nushort flag = 0x0002;\r\nushort mask  = 0x0003;\r\nif((flag & mask) != flag)\r\n    PrintLine(\"failed and member test\");\r\n```\r\n\r\nbecause it doesn't happen if the variables are just short, I think this is related to sign extension."},{"Id":"7038206751","Type":"PullRequestEvent","CreatedAt":"2017-12-28T19:19:37","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5159","RelatedDescription":"Opened pull request \"Add CoreFX Static Libraries to Interop and Linker Args\" (#5159) at dotnet/corert","RelatedBody":"This adds CoreFX's static libraries, which were added for generation in https://github.com/dotnet/corefx/pull/25628 . The added interop code is shared from CoreFX and CoreCLR. \r\n\r\nAlso added curl and zlib as Unix arguments to make WebAPI-based projects work. I don't think this is a particularly extensible approach. Do we have a better way of adding dependency libraries as linker arguments? \r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7033942081","Type":"IssuesEvent","CreatedAt":"2017-12-27T13:59:08","Actor":"skarllot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1832","RelatedDescription":"Opened issue \"TargetFramework for Xamarin platforms\" (#1832) at dotnet/sdk","RelatedBody":"I cannot set `TargetFramework` to `monoandroid10`, `xamarinios10` or `uap10.0`.  The following errors are throw:\r\n\r\n```bash\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'xamarinios10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'monoandroid10' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.TargetFrameworkInference.targets(96,5): error : The TargetFramework value 'uap10.0' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\r\n```\r\n\r\nThe following configuration is being used:\r\n\r\n```xml\r\n<TargetFrameworks>netstandard1.3;net46;monoandroid10;xamarinios10;uap10.0</TargetFrameworks>\r\n```"},{"Id":"7025969737","Type":"PullRequestEvent","CreatedAt":"2017-12-23T18:49:12","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1831","RelatedDescription":"Merged pull request \"Insert NuGet Build 4.6.0-preview2-4759 into sdk\" (#1831) at dotnet/sdk","RelatedBody":"Insert NuGet Build 4.6.0-preview2-4759 into sdk master branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"943234846079496192","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/Xm2utapspg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":15,"RawContent":null},{"Id":"942039735144452097","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/UjBOoFqFp5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":18,"RawContent":null},{"Id":"941295101212549121","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/qJHWFDaUGf","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2017-12-29T05:30:20.7597489Z","RunDurationInMilliseconds":7421}