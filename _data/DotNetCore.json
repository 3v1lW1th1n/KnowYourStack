{"Data":{"Blog":{"FeedItems":[{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9743448913","Type":"PullRequestEvent","CreatedAt":"2019-06-03T01:51:25","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24777","RelatedDescription":null,"RelatedBody":"In a previous PR\r\n(https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba#diff-8447e54277bb962d167a77bb260760d7R1879),\r\nGetCacheSizePerLogicalCpu was changed to no longer rely on cpuid on\r\namd64 systems; instead it uses GetLogicalProcessorCacheSizeFromOS().\r\nUnfortunately that function consisted of a number of `#if`s, none of\r\nwhich were active on macs, and we just returned 0. This caused us to\r\ndefault to a gen0size of only 0.25MB, causing many GCs.\r\n\r\nFixed by adding a new case that uses `sysctlbyname`.\r\n\r\nFix #24658"},{"Id":"9743448811","Type":"PullRequestEvent","CreatedAt":"2019-06-03T01:51:23","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24777","RelatedDescription":"Closed pull request \"Fix PAL_GetLogicalProcessorCacheSizeFromOS on mac\" (#24777) at dotnet/coreclr","RelatedBody":"In a previous PR\r\n(https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba#diff-8447e54277bb962d167a77bb260760d7R1879),\r\nGetCacheSizePerLogicalCpu was changed to no longer rely on cpuid on\r\namd64 systems; instead it uses GetLogicalProcessorCacheSizeFromOS().\r\nUnfortunately that function consisted of a number of `#if`s, none of\r\nwhich were active on macs, and we just returned 0. This caused us to\r\ndefault to a gen0size of only 0.25MB, causing many GCs.\r\n\r\nFixed by adding a new case that uses `sysctlbyname`.\r\n\r\nFix #24658"},{"Id":"9742983128","Type":"PullRequestEvent","CreatedAt":"2019-06-02T21:49:51","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24915","RelatedDescription":"Opened pull request \"CopyBlk copyprop\" (#24915) at dotnet/coreclr","RelatedBody":"Is a bit messy, but seeking feedback (assuming tests pass)\r\n\r\nPropagate through struct copies backwards, picking up:\r\n```\r\nx1 (def) = x0 (last use)\r\nx2 (def) = x1 (last use)\r\n```\r\nConverting to\r\n```\r\nx2 (def) = x0 (last use)\r\n```\r\nNext, propagate forwards through struct copies for usage, picking up:\r\n```\r\nx2 (def) = x0 (last use)\r\nuse x2 (last use)\r\n```\r\nConverting to\r\n```\r\nuse x0 (last use)\r\n```\r\n\r\nWhile it resolves almost all the copies in awaiting ValueTasks (and all the copies in the sample in https://github.com/dotnet/coreclr/issues/18542#issuecomment-497850725) in async/await one remains as one of the LclVars doesn't get marked as a last use 😢 \r\n\r\nResolves: https://github.com/dotnet/coreclr/issues/18542"},{"Id":"9742973481","Type":"IssuesEvent","CreatedAt":"2019-06-02T21:44:18","Actor":"svick","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24914","RelatedDescription":"Opened issue \"Cannot build System.Private.CoreLib in Visual Studio\" (#24914) at dotnet/coreclr","RelatedBody":"I have issues building System.Private.CoreLib.sln in Visual Studio. What I did:\r\n\r\n0. `git clean -xdf`.\r\n1. `build.cmd`. This completes successfully.\r\n2. Open and build System.Private.CoreLib.sln in VS 2017:\r\n\r\n    > CSC : error CS1617: Invalid option '8.0' for /langversion. Use '/langversion:?' to list supported values.\r\n\r\n    I think this means that VS 2017 is no longer supported, which is fine, but it's still listed in [the documentation](https://github.com/dotnet/coreclr/blob/master/Documentation/building/windows-instructions.md).\r\n\r\n3. Open and build System.Private.CoreLib.sln in VS 2019 (16.1.1) or VS 2019 Preview (16.2.0 Preview 1.0):\r\n\r\n    > C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    > CSC : error CS2001: Source file 'C:\\code\\coreclr\\bin\\obj/Windows_NT.x64.Debug/System.Private.CoreLib/netcoreapp2.1\\../Eventing/NativeRuntimeEventSource.cs' could not be found.\r\n\r\n4. Delete the missing file from the project in an attempt to fix it and build in VS 2019:\r\n\r\n    >C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    >shared\\System\\Reflection\\AssemblyMetadataAttribute.cs(10,60,10,61): error CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.\r\n    >src\\Internal\\Console.cs(30,44,30,45): error CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.\r\n    > … (thousands instances of the same error follow)\r\n\r\n5. Build in VS 2019 Preview with the missing file deleted:\r\n\r\n    >C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    >shared\\System\\Version.cs(32,73,32,99): error CS0117: 'SR' does not contain a definition for 'ArgumentOutOfRange_Version'\r\n    >shared\\System\\Version.cs(35,73,35,99): error CS0117: 'SR' does not contain a definition for 'ArgumentOutOfRange_Version'\r\n    > … (thousands instances of similar errors follow)\r\n\r\nAm I doing something wrong?"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9743568587","Type":"PullRequestEvent","CreatedAt":"2019-06-03T02:32:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11469","RelatedDescription":"Opened pull request \"Update branding to preview 7\" (#11469) at dotnet/cli","RelatedBody":""},{"Id":"9743520779","Type":"PullRequestEvent","CreatedAt":"2019-06-03T02:16:51","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11468","RelatedDescription":"Opened pull request \"Merge master to release/3.0.1xx for preview6\" (#11468) at dotnet/cli","RelatedBody":""},{"Id":"9743510913","Type":"PullRequestEvent","CreatedAt":"2019-06-03T02:13:21","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/11466","RelatedDescription":"Closed pull request \"Merge release/2.2.2xx to release/3.0.1xx\" (#11466) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9743207055","Type":"PullRequestEvent","CreatedAt":"2019-06-03T00:01:15","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11467","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to master\" (#11467) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9742609343","Type":"PullRequestEvent","CreatedAt":"2019-06-02T18:33:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11464","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11464) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9741889737","Type":"PullRequestEvent","CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1226) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n"},{"Id":"9741879866","Type":"PullRequestEvent","CreatedAt":"2019-06-02T12:43:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1226) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n"},{"Id":"9739591237","Type":"PullRequestEvent","CreatedAt":"2019-06-01T12:54:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1225) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n"},{"Id":"9739573584","Type":"PullRequestEvent","CreatedAt":"2019-06-01T12:44:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1225) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n"},{"Id":"9739500553","Type":"PullRequestEvent","CreatedAt":"2019-06-01T12:03:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1224) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9743572034","Type":"IssuesEvent","CreatedAt":"2019-06-03T02:33:25","Actor":"buyaa-n","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38154","RelatedDescription":"Opened issue \"New modifier with different type is not hiding base property\" (#38154) at dotnet/corefx","RelatedBody":"New modifier with different type is not hiding base property, throwing `System.InvalidOperationException: The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.` \r\nIt is workign as expected when base derived property types are same.\r\nThis issue is edge case, with very low priority. \r\n```csharp\r\n[Fact]\r\npublic void DerivedClassHidingBasePropertySerializesAsExpected()\r\n{\r\n    var original = new FooBar1 { foo = \"value\" };  //System.InvalidOperationException : The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.\r\n    var json = JsonSerializer.ToString(original);\r\n    var expectedJson = @\"{\"\"foo\"\":\"\"value\"\"}}\";\r\n    Assert.Equal(expectedJson, json);\r\n}\r\n[Fact]\r\npublic void DerivedClassHidingBasePropertyDeserializesAsExpected()\r\n{\r\n    var json = @\"{\"\"foo\"\"/:\"\"value\"\"}\";\r\n    var deserialized = JsonSerializer.Parse<FooBar1>(json); // System.InvalidOperationException : The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.\r\n    Assert.NotNull(deserialized.foo);\r\n    Assert.Equal(\"value\", deserialized.foo);\r\n}\r\n\t\t\r\npublic class FooBar1 : Foo1\r\n{\r\n    public new string foo { get; set; }\r\n}\r\npublic class Foo1\r\n{\r\n    public object foo { get; set; }\r\n}"},{"Id":"9743539468","Type":"PullRequestEvent","CreatedAt":"2019-06-03T02:23:17","Actor":"buyaa-n","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38153","RelatedDescription":"Opened pull request \"Some tests improted from Newton Json\" (#38153) at dotnet/corefx","RelatedBody":"Importing tests from Newton json not finished, for now I have checked around half of them, as not much interesting bugs found and many of the tests are not supported I am going to add what I have got until now and start working on improving code coverage. Will check back corresponding newton json tests with each code area I worked/looked"},{"Id":"9743512751","Type":"IssuesEvent","CreatedAt":"2019-06-03T02:14:00","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/35499","RelatedDescription":"Closed issue \"Feature request: Add Environment.LongTickCount\" (#35499) at dotnet/corefx","RelatedBody":"Environment.TickCount rolls over, which makes it inconvenient to use. See e.g. https://github.com/dotnet/corefx/pull/35401\r\n\r\nTo remedy this, we should add Environment.LongTickCount. This is trivial to implement on Windows using GetTickCount64. \r\n\r\n```C#\r\npublic static class Environment\r\n{\r\n    public static long LongTickCount { get; } // or TickCount64\r\n}\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9743569700","Type":"IssuesEvent","CreatedAt":"2019-06-03T02:32:39","Actor":"ryzngard","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36111","RelatedDescription":"Closed issue \"FAR crashes ServiceHub.RoslynCodeAnalysisService32.exe\" (#36111) at dotnet/roslyn","RelatedBody":"**Version Used**: eb082c8f9afb24b196d634adc3844de72af65259\r\n\r\n**Steps to Reproduce**: Link to internal repo available upon request\r\n\r\n**Expected Behavior**: FAR terminates\r\n\r\n**Actual Behavior**: Gold bar indicates external process has crashed and FAR progress indicator loops forever\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.Contract.ThrowIfNull<System.__Canon>(System.__Canon value, string message) Line 19\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.VerifyForwardedTypes(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol> equivalentTypesWithDifferingAssemblies, Microsoft.CodeAnalysis.Compilation compilation, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.INamedTypeSymbol> verifiedKeys, bool isSearchSymbolCompilation) Line 530\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.VerifyForwardedTypes(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol> equivalentTypesWithDifferingAssemblies, Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 519\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.OriginalSymbolsMatchCore(Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 468\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.OriginalSymbolsMatch(Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 395\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.FindImplementationsForInterfaceMemberAsync.AnonymousMethod__1(Microsoft.CodeAnalysis.ISymbol m) Line 178\tC#\r\n \tSystem.Collections.Immutable.dll!System.Linq.ImmutableArrayExtensions.FirstOrDefault<Microsoft.CodeAnalysis.ISymbol>(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ISymbol> immutableArray, System.Func<Microsoft.CodeAnalysis.ISymbol, bool> predicate) Line 405\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.FindImplementationsForInterfaceMemberAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.ITypeSymbol> typeSymbolAndProjectId, Microsoft.CodeAnalysis.ISymbol interfaceMember, Microsoft.CodeAnalysis.Solution solution, System.Threading.CancellationToken cancellationToken) Line 213\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementationsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, System.Threading.CancellationToken cancellationToken) Line 250\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractMethodOrPropertyOrEventSymbolReferenceFinder<Microsoft.CodeAnalysis.IMethodSymbol>.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.IMethodSymbol> symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 33\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.PropertyAccessorSymbolReferenceFinder.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.IMethodSymbol> symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 23\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractReferenceFinder<Microsoft.CodeAnalysis.IMethodSymbol>.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 749\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.DetermineAllSymbolsCoreAsync.AnonymousMethod__0() Line 136\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.(ref Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_1.<<DetermineAllSymbolsCoreAsync>b__0>d stateMachine) Line 316\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.DetermineAllSymbolsCoreAsync.AnonymousMethod__0()\tUnknown\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9742719935","Type":"PullRequestEvent","CreatedAt":"2019-06-02T19:30:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7479) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft"},{"Id":"9742027874","Type":"PullRequestEvent","CreatedAt":"2019-06-02T13:57:07","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7479) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9741123505","Type":"PullRequestEvent","CreatedAt":"2019-06-02T05:00:02","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 12\" (#7478) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)"},{"Id":"9740921159","Type":"PullRequestEvent","CreatedAt":"2019-06-02T02:21:52","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":null,"RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)"},{"Id":"9740920849","Type":"PullRequestEvent","CreatedAt":"2019-06-02T02:21:38","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Closed pull request \"Port GC changes from coreclr - 12\" (#7478) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)"},{"Id":"9740912375","Type":"PullRequestEvent","CreatedAt":"2019-06-02T02:15:03","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 12\" (#7478) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)"},{"Id":"9740809506","Type":"PullRequestEvent","CreatedAt":"2019-06-02T00:51:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7476) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"9740808372","Type":"PullRequestEvent","CreatedAt":"2019-06-02T00:50:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 11\" (#7477) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)"},{"Id":"9738323277","Type":"PullRequestEvent","CreatedAt":"2019-06-01T00:07:59","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 11\" (#7477) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)"},{"Id":"9738262531","Type":"PullRequestEvent","CreatedAt":"2019-05-31T23:44:16","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7476) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9743554877","Type":"PullRequestEvent","CreatedAt":"2019-06-03T02:28:02","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Opened pull request \"Update branding to preview 7\" (#3294) at dotnet/sdk","RelatedBody":""},{"Id":"9743454964","Type":"PullRequestEvent","CreatedAt":"2019-06-03T01:53:37","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Opened pull request \"Merge master to release/3.0.1xx for preview6\" (#3293) at dotnet/sdk","RelatedBody":""},{"Id":"9742725988","Type":"IssuesEvent","CreatedAt":"2019-06-02T19:33:19","Actor":"fernacolo","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3292","RelatedDescription":"Opened issue \"Custom TaskScheduler replaced by the default one for no apparent reason\" (#3292) at dotnet/sdk","RelatedBody":"I'm trying to build a custom `TaskScheduler` that uses the priority of each task to make scheduling decisions. Basically, if there are two or more tasks ready to run, it should schedule the one that has more priority.\r\n\r\nI can put priority information in a custom `SynchronizationContext` and communicate it to my custom `TaskScheduler`. The problem is that certain `await` patterns cause the scheduler to be lost for no apparent reason. Here is the smallest repro code I could make:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ReproApp\r\n{\r\n    internal static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(RuntimeInformation.FrameworkDescription);\r\n            var scheduler = new MyTaskScheduler();\r\n            var context = new MySynchronizationContext(scheduler);\r\n            context.Post(Run, null);\r\n            Thread.Sleep(3000);\r\n        }\r\n\r\n        private static void Run(object state)\r\n        {\r\n            RunAsync(); // no await here, intentional.\r\n        }\r\n\r\n        private static async Task RunAsync()\r\n        {\r\n            Logger.WriteLine(\"Before InternalRunAsync\"); // <-- Scheduler OK.\r\n            await InternalRunAsync();\r\n            Logger.WriteLine(\"After InternalRunAsync\"); // <-- Scheduler changed. WHY???\r\n        }\r\n\r\n        private static async Task InternalRunAsync()\r\n        {\r\n            Logger.WriteLine(\"Before Delay\"); // <-- Scheduler OK.\r\n            await Task.Delay(TimeSpan.FromSeconds(1.5));\r\n            Logger.WriteLine(\"After Delay\"); // <-- Scheduler OK.\r\n        }\r\n    }\r\n\r\n    internal static class Logger\r\n    {\r\n        private static readonly Stopwatch sw = Stopwatch.StartNew();\r\n\r\n        public static void WriteLine(string msg)\r\n        {\r\n            var nativeThreadId = AppDomain.GetCurrentThreadId();\r\n            var threadId = Thread.CurrentThread.ManagedThreadId;\r\n            var syncContext = SynchronizationContext.Current?.ToString() ?? \"null\";\r\n            var scheduler = TaskScheduler.Current.ToString();\r\n            Console.WriteLine(\r\n                $\"[{(int) sw.Elapsed.TotalMilliseconds} native:{nativeThreadId} managed:{threadId} syncCtx:{syncContext} sch:{scheduler}] {msg}\");\r\n        }\r\n    }\r\n\r\n    internal sealed class MySynchronizationContext : SynchronizationContext\r\n    {\r\n        private readonly MyTaskScheduler scheduler;\r\n\r\n        public MySynchronizationContext(MyTaskScheduler scheduler)\r\n        {\r\n            this.scheduler = scheduler;\r\n        }\r\n\r\n        public override SynchronizationContext CreateCopy()\r\n        {\r\n            return new MySynchronizationContext(scheduler);\r\n        }\r\n\r\n        public override void Post(SendOrPostCallback d, object state)\r\n        {\r\n            void SetContextAndCall()\r\n            {\r\n                SetSynchronizationContext(this);\r\n                d(state);\r\n            }\r\n\r\n            new Task(SetContextAndCall).Start(scheduler);\r\n        }\r\n\r\n        public override void Send(SendOrPostCallback d, object state)\r\n        {\r\n            void SetContextAndCall()\r\n            {\r\n                SetSynchronizationContext(this);\r\n                d(state);\r\n            }\r\n\r\n            new Task(SetContextAndCall).RunSynchronously(scheduler);\r\n        }\r\n    }\r\n\r\n    internal sealed class MyTaskScheduler : TaskScheduler\r\n    {\r\n        protected override void QueueTask(Task task)\r\n        {\r\n            ThreadPool.QueueUserWorkItem(RunTask, task);\r\n        }\r\n\r\n        private void RunTask(object state)\r\n        {\r\n            var task = (Task) state;\r\n            TryExecuteTask(task);\r\n        }\r\n\r\n        protected override bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)\r\n        {\r\n            return TryExecuteTask(task);\r\n        }\r\n\r\n        protected override IEnumerable<Task> GetScheduledTasks()\r\n        {\r\n            return new List<Task>();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd here is the output:\r\n\r\n```\r\n.NET Core 3.0.0-preview5-27626-15\r\n[0 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:DotnetBug.MyTaskScheduler] Before InternalRunAsync\r\n[2 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:DotnetBug.MyTaskScheduler] Before Delay\r\n[1513 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:DotnetBug.MyTaskScheduler] After Delay\r\n[1514 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:System.Threading.Tasks.ThreadPoolTaskScheduler] After InternalRunAsync\r\n```\r\n\r\nThe 4th log entry shows that my task scheduler was mysteriously replaced by the default. Why?\r\n\r\nThis prevents my prioritization solution to work properly because everything running on the wrong task scheduler will not be scheduled with the correct priority.\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"451238584","IsPullRequest":true,"CreatedAt":"2019-06-02T21:49:50","Actor":"benaadams","Number":"24915","RawContent":null,"Title":"CopyBlk copyprop","State":"open","Body":"Propagate through struct copies backwards, picking up:\r\n```\r\nx1 (def) = x0 (last use)\r\nx2 (def) = x1 (last use)\r\n```\r\nConverting to\r\n```\r\nx2 (def) = x0 (last use)\r\n```\r\nNext, propagate forwards through struct copies for usage, picking up:\r\n```\r\nx2 (def) = x0 (last use)\r\nuse x2 (last use)\r\n```\r\nConverting to\r\n```\r\nuse x0 (last use)\r\n```\r\n\r\nExample change to `<ReadBlockAsyncInternal>d__20:MoveNext():this`\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/58768002-f2aec880-858b-11e9-904c-9a44b87fdbad.png)\r\n\r\nWhile it resolves almost all the copies in `awaiti`ng ValueTasks (and all the copies in the sample in https://github.com/dotnet/coreclr/issues/18542#issuecomment-497850725) in async/await one remains (as above) 😢 \r\n\r\nResolves: https://github.com/dotnet/coreclr/issues/18542\r\n\r\nIs a bit messy, but seeking feedback (assuming tests pass) /cc @CarolEidt @AndyAyersMS @mikedn @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/24915","RelatedDescription":"Open PR \"CopyBlk copyprop\" (#24915)"},{"Id":"451238132","IsPullRequest":false,"CreatedAt":"2019-06-02T21:44:18","Actor":"svick","Number":"24914","RawContent":null,"Title":"Cannot build System.Private.CoreLib in Visual Studio","State":"open","Body":"I have issues building System.Private.CoreLib.sln in Visual Studio. What I did:\r\n\r\n0. `git clean -xdf`.\r\n1. `build.cmd`. This completes successfully.\r\n2. Open and build System.Private.CoreLib.sln in VS 2017:\r\n\r\n    > CSC : error CS1617: Invalid option '8.0' for /langversion. Use '/langversion:?' to list supported values.\r\n\r\n    I think this means that VS 2017 is no longer supported, which is fine, but it's still listed in [the documentation](https://github.com/dotnet/coreclr/blob/master/Documentation/building/windows-instructions.md).\r\n\r\n3. Open and build System.Private.CoreLib.sln in VS 2019 (16.1.1) or VS 2019 Preview (16.2.0 Preview 1.0):\r\n\r\n    > C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    > CSC : error CS2001: Source file 'C:\\code\\coreclr\\bin\\obj/Windows_NT.x64.Debug/System.Private.CoreLib/netcoreapp2.1\\../Eventing/NativeRuntimeEventSource.cs' could not be found.\r\n\r\n4. Delete the missing file from the project in an attempt to fix it and build in VS 2019:\r\n\r\n    >C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    >shared\\System\\Reflection\\AssemblyMetadataAttribute.cs(10,60,10,61): error CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.\r\n    >src\\Internal\\Console.cs(30,44,30,45): error CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.\r\n    > … (thousands instances of the same error follow)\r\n\r\n5. Build in VS 2019 Preview with the missing file deleted:\r\n\r\n    >C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-011743\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n    >shared\\System\\Version.cs(32,73,32,99): error CS0117: 'SR' does not contain a definition for 'ArgumentOutOfRange_Version'\r\n    >shared\\System\\Version.cs(35,73,35,99): error CS0117: 'SR' does not contain a definition for 'ArgumentOutOfRange_Version'\r\n    > … (thousands instances of similar errors follow)\r\n\r\nAm I doing something wrong?","Url":"https://github.com/dotnet/coreclr/issues/24914","RelatedDescription":"Open issue \"Cannot build System.Private.CoreLib in Visual Studio\" (#24914)"},{"Id":"451213527","IsPullRequest":true,"CreatedAt":"2019-06-02T17:13:17","Actor":"VSadov","Number":"24913","RawContent":null,"Title":"[WIP][Test] Test2","State":"open","Body":"to run tests","Url":"https://github.com/dotnet/coreclr/pull/24913","RelatedDescription":"Open PR \"[WIP][Test] Test2\" (#24913)"},{"Id":"451080096","IsPullRequest":true,"CreatedAt":"2019-06-02T14:45:41","Actor":"dotnet-maestro[bot]","Number":"24906","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#24906)"},{"Id":"451198639","IsPullRequest":false,"CreatedAt":"2019-06-02T14:35:36","Actor":"johnkellyoxford","Number":"24912","RawContent":null,"Title":"Codegen: Checking for ISA support affects inline codegen","State":"open","Body":"[SharpLab](https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBDAzgWwB8ABAJgEYBYAKGIAYACY8gOgDkBXfGKASzFwBuGvSasAShwB2GXtxYBhCPgAOvADY8AyjwBu/GEJGNmLSTLkwWASRl8pufkdomJ02fNsZ7jgSwAaABxIwtTGDABSEAAWUgBqMGAY0AwAvGJm7pY2drwOTiwJSdDkpIEAPABm6hDYGAB8oaJaAJ64nPhFyVBpGR08BV3QKKEiAMxMpAwKDADeNAyLDADaALIwGNEQACbWquoAFOubO3sq6gDyKrIQDiwAggDmj7C4jrowtup5eY8MhAxjltdvsrjc7k8XoZ3jAwXJeAAvOq8W4ASgAugslsQJswkAwhlBShVqrUGgx7tttgdCcSqjU6vUGJpKhg0ATEt06aTGQw+I9ohhUVjFvNqEsJQxeJUGActLgrNZcFoOCoVNAMDBtsLxZLRSK9diAOwMeVWSnUllsvm8AVC0KGhgAXxoBolxBN2xglWwHHUGAdSxdusWBrWG2BZ0OQNOoOuKIhz1eMK+PykfwBMZB5zht1wDyT0N4Hzh+ERyLRmJDTFx5HxtLK9LJTItbAgCmiiQA1jTOSVGzzyVb2Q2SQzyfzBTqJWKJQBID2mhUPKkHYc2u2owOLYMSg04sT44goClUtsd7u2AAyEAgKl7xSJA/H9WW6IYuCgYBHfafY+bb4MF6uBCgas6GpUKQHLo2A9LwvR0IIUoMOUH5fiwV4wOmmxIbwADUeHToa4GOosME9B8j69J+YDLLw6LbqRkE9NBsEMAAVghSGcahdbcQRRF6nOJGkXOlHdL0rbtp2YA9uJ0DsvJUBbm6SxzrupGLMBGB0e+6RKYxEoaTuBr7rWR4nhaF6ydet73qOTaMoBNE/o+3IvoB2mCXMqmLMxsrkch6SIchqE0RhWGPDhUoCb5PnVo6gVKdRX66YZEFQYFnHBdxKEMHxHGxQlakiY6Ym/pJq5KYpv4qcVizqXFErabpvQGXFxnOjQTpAA=)\r\n\r\nWriting and comparing some intrinsic code for vectors compared to `Sys.Numerics.Vector4` equivalents, I noticed a significant slowdown (~20%) in a tight loop of vectorised addition. I verified the native for the actual add methods is identical, and it is, with the `if (Sse.IsSupported)` check. However, when it is inlined as part of the loop method (as desired), the codegen is not identical, and \r\n```\r\nvaddps xmm0, xmm0, xmm0\r\n``` \r\nis transformed to \r\n```\r\nvmovaps xmm1, xmm0\r\nvaddps xmm0, xmm1, xmm0\r\n```\r\n, which I think is a completely pointless op, as it doesn't have an effect on the end result (and it slows it down, so clearly not for optimization or anything)\r\n\r\nTested on .NET Core preview 5 as well as on whatever preview version SharpLab is running\r\n\r\n[Image for easy visualisation of issue](https://imgur.com/a/PmkqmdE)","Url":"https://github.com/dotnet/coreclr/issues/24912","RelatedDescription":"Open issue \"Codegen: Checking for ISA support affects inline codegen\" (#24912)"},{"Id":"451152594","IsPullRequest":false,"CreatedAt":"2019-06-02T13:50:42","Actor":"danmosemsft","Number":"24908","RawContent":null,"Title":"Assertion failure in syncblk.cpp line 2995 -- Failure in GC/Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.sh","State":"closed","Body":"Was on OSX x64 checked.\r\n```\r\n\r\nAssert failure(PID 42855 [0x0000a767], Thread: 5902791 [0x5a11c7]): m_alignpad == 0\r\n File: /Users/vsts/agent/2.150.3/work/1/s/src/vm/syncblk.cpp Line: 2995\r\n Image: /Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Payload/corerun\r\n\r\n/Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Work/5e5d0580-0674-4c72-a7cc-63fa0bd8e594/Exec/GC/Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.sh: line 266: 42855 Abort trap: 6 $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code: 1\r\nRaw output file: /Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Work/5e5d0580-0674-4c72-a7cc-63fa0bd8e594/Exec/GC/Scenarios/Reports/GC.Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Payload/corerun FinalizeTimeout.exe ''\r\nMain start\r\nFinalizer start\r\nFinalizer end\r\nMain end\r\nFinalizer start\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Payload\r\n> /Users/dotnet-bot/dotnetbuild/work/50643849-342e-4293-8048-c89175fa32f7/Work/5e5d0580-0674-4c72-a7cc-63fa0bd8e594/Exec/GC/Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.sh\r\nExpected: True\r\nActual: False\r\n\r\nStack trace\r\n   at GC_Scenarios._FinalizeTimeout_FinalizeTimeout_FinalizeTimeout_._FinalizeTimeout_FinalizeTimeout_FinalizeTimeout_sh() in /Users/vsts/agent/2.150.3/work/1/s/bin/tests/OSX.x64.Checked/TestWrappers/GC.Scenarios/GC.Scenarios.XUnitWrapper.cs:line 1608\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24908","RelatedDescription":"Closed issue \"Assertion failure in syncblk.cpp line 2995 -- Failure in GC/Scenarios/FinalizeTimeout/FinalizeTimeout/FinalizeTimeout.sh\" (#24908)"},{"Id":"451191506","IsPullRequest":false,"CreatedAt":"2019-06-02T13:22:03","Actor":"TonyValenti","Number":"24911","RawContent":null,"Title":".net core 3 large object heap compaction","State":"open","Body":"We have a .net 4x app that we are having LOH fragmentation issues with. To work around the issue, we are now only using node-based collections.\r\n\r\nDoes .net core 3 ever compact the LOH?  Is there any way to make .net 4 compact the LOH?","Url":"https://github.com/dotnet/coreclr/issues/24911","RelatedDescription":"Open issue \".net core 3 large object heap compaction\" (#24911)"},{"Id":"451155910","IsPullRequest":true,"CreatedAt":"2019-06-02T05:40:32","Actor":"franksinankaya","Number":"24909","RawContent":null,"Title":"find src/jit -type f -exec sed -i -e 's/->gtCostEx/->GetCostEx()/g' ","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24909","RelatedDescription":"Open PR \"find src/jit -type f -exec sed -i -e 's/->gtCostEx/->GetCostEx()/g' \" (#24909)"},{"Id":"451097395","IsPullRequest":false,"CreatedAt":"2019-06-01T15:39:16","Actor":"RealDotNetDave","Number":"24907","RawContent":null,"Title":"Perf: Using Any() on a Collection","State":"open","Body":"I have done testing on performance between Clr 4.7.2 and Core 3. I have found a performance issue with using Any() on a collection. Below is the test code, the collection has 10,000 items in it.\r\n\r\npublic bool TestCollectionValidationWithAny01()\r\n{\r\n    return _fakePersonFixedCollection.Any();\r\n}\r\n\r\nThe performance results are:\r\n'COLLECTION HAS ITEMS: With Any()' | X64 | Clr | 6,213.0 ns\r\n'COLLECTION HAS ITEMS: With Any()' | X64 | Core | 13,957.9 ns\r\n\r\nBenchmarkDotNet Configuration:\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.503 (1809/October2018Update/Redstone5)\r\nUnknown processor\r\n.NET Core SDK=3.0.100-preview5-011568\r\n  [Host]     : .NET Core 3.0.0-preview5-27626-15 (CoreCLR 4.6.27622.75, CoreFX 4.700.19.22408), 64bit RyuJIT\r\n  Job-DPAAVV : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.8.3801.0\r\n  Job-ZMVORE : .NET Core 3.0.0-preview5-27626-15 (CoreCLR 4.6.27622.75, CoreFX 4.700.19.22408), 64bit RyuJIT\r\nOutlierMode=All  InvocationCount=1  IterationCount=25  \r\nMinIterationCount=50  MinWarmupIterationCount=10  UnrollFactor=1  \r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24907","RelatedDescription":"Open issue \"Perf: Using Any() on a Collection\" (#24907)"},{"Id":"451054224","IsPullRequest":true,"CreatedAt":"2019-06-01T06:59:44","Actor":"cshung","Number":"24905","RawContent":null,"Title":"[WIP] Avoid moving the bitOffset twice when enumerating safepoints","State":"open","Body":"The deleted code is trying to move the `bitOffset` so that it accounts for the number of bits used for the safepoints, but it is already advanced inside the `EnumerateSafePoints` function. ","Url":"https://github.com/dotnet/coreclr/pull/24905","RelatedDescription":"Open PR \"[WIP] Avoid moving the bitOffset twice when enumerating safepoints\" (#24905)"},{"Id":"450990526","IsPullRequest":true,"CreatedAt":"2019-06-01T00:17:12","Actor":"sywhang","Number":"24901","RawContent":null,"Title":"Move EventPipeEventSource deletion to a better place","State":"closed","Body":"Inside the destructor of `EventPipeEventSource` we call EventPipe::DeleteProvider(). This always failed because we already removed the s_pConfig and s_pSessions by the time we call this destructor. Moving it to a better spot so that we can successfully call DeleteProvider(). ","Url":"https://github.com/dotnet/coreclr/pull/24901","RelatedDescription":"Closed or merged PR \"Move EventPipeEventSource deletion to a better place\" (#24901)"},{"Id":"450997427","IsPullRequest":true,"CreatedAt":"2019-05-31T23:42:00","Actor":"stephentoub","Number":"24902","RawContent":null,"Title":"Fix FileStream.FlushAsync() to behave like Flush()","State":"closed","Body":"Flush() behaves like Flush(false) and writes out any buffered data but doesn't P/Invoke to FlushFileBuffers/FSync to flush the OS buffers.\r\n\r\nBut whereas FlushAsync() is supposed to just be an async equivalent of Flush() (that's what every consumer of a Stream expects), it's actually behaving like Flush(true).  This makes FlushAsync() inconsistent and much more expensive.  (This is separate from FlushAsync not actually being async, which is an impactful problem to be solved separately.)\r\n\r\nThis changes FlushAsync to behave like Flush()/Flush(false) rather than Flush(true).  If someone wants the FlushFileBuffers/FSync behavior, they can call Flush(true).\r\n\r\n@JeremyKuhne, @jkotas, are you ok with this?","Url":"https://github.com/dotnet/coreclr/pull/24902","RelatedDescription":"Closed or merged PR \"Fix FileStream.FlushAsync() to behave like Flush()\" (#24902)"},{"Id":"450980726","IsPullRequest":true,"CreatedAt":"2019-05-31T23:04:39","Actor":"hoyosjs","Number":"24899","RawContent":null,"Title":"Add workaround for native tool installation CI hang","State":"closed","Body":"@wtgodbe @RussKeldorph ","Url":"https://github.com/dotnet/coreclr/pull/24899","RelatedDescription":"Closed or merged PR \"Add workaround for native tool installation CI hang\" (#24899)"},{"Id":"450941165","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:31","Actor":"dotnet-maestro-bot","Number":"24891","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @CarolEidt\n* @jkotas\n* @VSadov\n* @jkoritzinsky\n* @jashook\n* @AaronRobinsonMSFT\n* @briansull\n* @echesakovMSFT\n* @47805090+elinor-fung\n* @janvorli\n* @RussKeldorph\n* @stephentoub\n* @MichalStrehovsky\n* @mikem8361\n* @josalem\n* @hoyosjs\n* @jorive\n* @cshung\n* @danmosemsft\n* @sywhang\n* @safern\n* @sandreenko\n* @davidwrighton\n* @kouvel\n* @AndyAyersMS\n* @davmason\n* @sdmaclea\n* @JeremyKuhne\n* @tannergooding\n* @tarekgh\n* @am11\n* @BruceForstall\n* @fadimounir\n* @GrabYourPitchforks\n* @trylek\n* @dotnet-maestro[bot]\n* @erozenfeld\n* @JohnTortugo\n* @BrianBohe\n* @Anipik\n* @luhenry\n* @andy-ms\n* @buyaa-n\n* @krwq\n* @Maoni0\n* @noahfalk\n* @dotnet-maestro-bot\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24891","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#24891)"},{"Id":"451006975","IsPullRequest":true,"CreatedAt":"2019-05-31T22:47:27","Actor":"cshung","Number":"24904","RawContent":null,"Title":"AutoTrace - stress testing for EventPipe","State":"open","Body":"AutoTrace is a testability feature for the diagnostics server. Once the diagnostics server is ready to accept a connection, it will launch a configurable external process and wait until a certain number of connections is made to the server before letting the runtime to move on. This allows for deterministic stress testing of EventPipe. In the past, I have used the feature to launch `dotnet-trace` to trace through the whole process for some automated tests, and by doing so, find some bugs in EventPipe, and I believe it will find us more in the future when I expand my test bed to more variants (debuggee/profilee/others ...)\r\n\r\nFor now, the feature is completely turned off from compilation, it has zero impact to the runtime. To use it,  one must turn it on and recompile during stress testing. The choice to do so is just risk management. If the environment variable `AUTO_TRACE_CMD` is not set, nothing would happen (modulo reading a few environment variables access and a tiny number of checks). If we believe it is okay, I wish we can just turn it on (for CHECK only maybe).\r\n\r\nSpecial thanks to @josalem for productizing the code.","Url":"https://github.com/dotnet/coreclr/pull/24904","RelatedDescription":"Open PR \"AutoTrace - stress testing for EventPipe\" (#24904)"},{"Id":"450999937","IsPullRequest":false,"CreatedAt":"2019-05-31T22:14:38","Actor":"jashook","Number":"24903","RawContent":null,"Title":"Remove Microsoft.Net.Compilers.Toolset 3.1.0-beta2-19206-01 prebuilt for source-build","State":"open","Body":"It is possible this has been removed with recent changes, verify once https://github.com/dotnet/coreclr/issues/24888 is fixed.\r\n\r\n/cc @RussKeldorph @dseefeld ","Url":"https://github.com/dotnet/coreclr/issues/24903","RelatedDescription":"Open issue \"Remove Microsoft.Net.Compilers.Toolset 3.1.0-beta2-19206-01 prebuilt for source-build\" (#24903)"},{"Id":"450988872","IsPullRequest":false,"CreatedAt":"2019-05-31T21:30:57","Actor":"brianrob","Number":"24900","RawContent":null,"Title":"Windows PGO Optimization Broken Due to #23897","State":"open","Body":"Windows PGO optimization is broken as of #23897 per ```git bisect```.\r\n\r\nThe runs fail with ```System.Exception: Failed training for CLRx86WINmas: the last training scenario did not produce any data```.","Url":"https://github.com/dotnet/coreclr/issues/24900","RelatedDescription":"Open issue \"Windows PGO Optimization Broken Due to #23897\" (#24900)"},{"Id":"450980270","IsPullRequest":true,"CreatedAt":"2019-05-31T21:02:44","Actor":"wtgodbe","Number":"24898","RawContent":null,"Title":"Revert \"[master] Update dependencies from dotnet/arcade\"","State":"closed","Body":"Reverts dotnet/coreclr#24882, as it contains a known deadlock. CC @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/24898","RelatedDescription":"Closed or merged PR \"Revert \"[master] Update dependencies from dotnet/arcade\"\" (#24898)"},{"Id":"450962074","IsPullRequest":true,"CreatedAt":"2019-05-31T20:08:19","Actor":"kouvel","Number":"24897","RawContent":null,"Title":"Remove some tiering event trace asserts that can fail if tracing is stopped at a particular point","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/24807","Url":"https://github.com/dotnet/coreclr/pull/24897","RelatedDescription":"Open PR \"Remove some tiering event trace asserts that can fail if tracing is stopped at a particular point\" (#24897)"},{"Id":"450956316","IsPullRequest":true,"CreatedAt":"2019-05-31T19:51:38","Actor":"jorive","Number":"24896","RawContent":null,"Title":"Fix `EventPipe::Disable` threading issues.","State":"open","Body":"`EventPipe::WriteEvent*` does not use the `EventPipe::Crst` which created race conditions with other methods such as EventPipe::Disable.","Url":"https://github.com/dotnet/coreclr/pull/24896","RelatedDescription":"Open PR \"Fix `EventPipe::Disable` threading issues.\" (#24896)"},{"Id":"450955201","IsPullRequest":true,"CreatedAt":"2019-05-31T19:48:54","Actor":"wtgodbe","Number":"24895","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @RussKeldorph @mmitche ","Url":"https://github.com/dotnet/coreclr/pull/24895","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#24895)"},{"Id":"450954889","IsPullRequest":true,"CreatedAt":"2019-05-31T19:47:29","Actor":"stephentoub","Number":"24894","RawContent":null,"Title":"Adjust several `where T : class?` constraints","State":"open","Body":"Fixing a few constraints and attributes.\r\n\r\nFor `ConditionalWeakTable`, keys aren't allowed to be null, so I changed the `class?` to `class`.\r\n\r\nFor `WeakReference<T>`, we need to make the TryGetTarget have both `[NotNullWhen(true)]` and `[MaybeNull]`, as the former won't imply the latter.  I went back and forth on whether to add `[AllowNull]` to the `ctor` and `SetTarget` arguments, but for now decided not to add them; I could probably be convinced either way.\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/coreclr/pull/24894","RelatedDescription":"Open PR \"Adjust several `where T : class?` constraints\" (#24894)"},{"Id":"450948995","IsPullRequest":true,"CreatedAt":"2019-05-31T19:29:24","Actor":"sywhang","Number":"24893","RawContent":null,"Title":"Move Eventpipe shutdown","State":"open","Body":"Moving the call to EventPipe::Shutdown to be near the end of part 1 in EEShutDownHelper. This should address #24849. ","Url":"https://github.com/dotnet/coreclr/pull/24893","RelatedDescription":"Open PR \"Move Eventpipe shutdown\" (#24893)"},{"Id":"450942130","IsPullRequest":true,"CreatedAt":"2019-05-31T19:10:02","Actor":"josalem","Number":"24892","RawContent":null,"Title":"Fix error path for Diagnostics IPC","State":"open","Body":"* Fix initialize methods to set m_Header correctly\r\n* put check in to ensure incoming message header has reasonable size\r\n\r\nCC - @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/24892","RelatedDescription":"Open PR \"Fix error path for Diagnostics IPC\" (#24892)"},{"Id":"450939788","IsPullRequest":true,"CreatedAt":"2019-05-31T19:03:04","Actor":"hoyosjs","Number":"24890","RawContent":null,"Title":"Disable eventpipe tests for investigation","State":"open","Body":"@jorive ","Url":"https://github.com/dotnet/coreclr/pull/24890","RelatedDescription":"Open PR \"Disable eventpipe tests for investigation\" (#24890)"},{"Id":"450925325","IsPullRequest":true,"CreatedAt":"2019-05-31T18:24:44","Actor":"adamsitnik","Number":"24889","RawContent":null,"Title":"follow the ICU User Guide recommendation to optimize the perf of InvariantCultureIgnoreCase on Linux","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/37691\r\n\r\nI have profiled the benchmarks attached in https://github.com/dotnet/corefx/issues/37691 and figured out that `ucol_getSortKey()` slows `InvariantCultureIgnoreCase` string comparison on Linux.\r\n\r\nhttp://icu-project.org/apiref/icu4c/ucol_8h.html#a1f83f9c96a0950e2c22bd5c5c31ff6bf says:\r\n\r\n> Note that sort keys are often less efficient than simply doing comparison. For more details, see the ICU User Guide.\r\n\r\nWhile [ICU User Guide](ftp://ftp.software.ibm.com/software/globalization/icu/3.2/icu-3.2-userguide.pdf):\r\n\r\n> ucol_getSortKey() can operate in 'preflighting' mode, which returns the amount ofmemory needed to store the resulting sort key. This mode is automatically activated if theoutput buffer size passed is set to zero. Should the sort key become longer than the bufferprovided, function again slips into preflighting mode. The overall performance is poorerthan if the function is called with a zero output buffer . If the size of the sort key returnedis greater than the size of the buffer provided, the content of the result buffer is undefined.In that case, the result buffer could be reallocated to its proper size and the sort keygenerator function can be used again. \r\nThe best way to generate a series of sort keys is to do the following:\r\n1.Create a big temporary buffer on the stack. Typically, this buffer is allocated onlyonce, and reused with every sort key generated. There is no need to keep it as small aspossible. A recommended size for the temporary buffer is four times the length of thelongest string processed.\r\n2.Start the loop. Call ucol_getSortKey()to find out how big the sort key buffer shouldbe, and fill in the temporary buffer at the same time.\r\n3.If the temporary buffer is too small, allocate or reallocate more space for in anoverflow buffer to handle the overflow situations. Fill in the sort key values in theoverflow buffer.\r\n4.Allocate the sort key buffer with the size returned by ucol_getSortKey() and callmemcpy to copy the sort key content from the temp buffer to the sort key buffer. \r\n5.Loop back to step 1 until you are done.\r\n6.Delete the overflow buffer if you created one.\r\n\r\nSo I just applied it to the code.\r\n\r\n@tarekgh @GrabYourPitchforks PTAL\r\n\r\nI have to leave home now, I am going to provide the updated perf numbers tomorrow. Please don't merge until then. \r\n","Url":"https://github.com/dotnet/coreclr/pull/24889","RelatedDescription":"Open PR \"follow the ICU User Guide recommendation to optimize the perf of InvariantCultureIgnoreCase on Linux\" (#24889)"},{"Id":"450900114","IsPullRequest":true,"CreatedAt":"2019-05-31T18:22:44","Actor":"stephentoub","Number":"24887","RawContent":null,"Title":"Add Microsoft.Diagnostics.Runtime to external tests depproj","State":"closed","Body":"cc: @jkotas, @wtgodbe ","Url":"https://github.com/dotnet/coreclr/pull/24887","RelatedDescription":"Closed or merged PR \"Add Microsoft.Diagnostics.Runtime to external tests depproj\" (#24887)"},{"Id":"450916834","IsPullRequest":false,"CreatedAt":"2019-05-31T18:02:04","Actor":"jashook","Number":"24888","RawContent":null,"Title":"Coreclr fails to build using source-build","State":"open","Body":"We specifically use .dotnet/dotnet instead of eng/dotnet.sh which does not correctly allow source build to override the dotnet to be used.","Url":"https://github.com/dotnet/coreclr/issues/24888","RelatedDescription":"Open issue \"Coreclr fails to build using source-build\" (#24888)"},{"Id":"450895355","IsPullRequest":true,"CreatedAt":"2019-05-31T17:05:41","Actor":"tannergooding","Number":"24886","RawContent":null,"Title":"Removing the TestAllOnes, TestAllZeros, and TestMixOnesZeros methods from the Sse41 class","State":"open","Body":"This is the coreclr side to https://github.com/dotnet/corefx/pull/38102","Url":"https://github.com/dotnet/coreclr/pull/24886","RelatedDescription":"Open PR \"Removing the TestAllOnes, TestAllZeros, and TestMixOnesZeros methods from the Sse41 class\" (#24886)"},{"Id":"450789363","IsPullRequest":false,"CreatedAt":"2019-05-31T13:03:58","Actor":"justinvp","Number":"24885","RawContent":null,"Title":"Collection<T>.AddRange should validate its parameters","State":"open","Body":"I missed this in #23166. Current it's defined as:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/b8d5b7b760f64d39e00554189ea0e5c66ed6bd62/src/System.Private.CoreLib/shared/System/Collections/ObjectModel/Collection.cs#L72\r\n\r\nBut it should be something like:\r\n\r\n```c#\r\npublic void AddRange(IEnumerable<T> collection)\r\n{\r\n    if (items.IsReadOnly)\r\n    {\r\n        ThrowHelper.ThrowNotSupportedException(ExceptionResource.NotSupported_ReadOnlyCollection);\r\n    }\r\n\r\n    if (collection == null)\r\n    {\r\n        ThrowHelper.ThrowArgumentNullException(ExceptionArgument.collection);\r\n    }\r\n\r\n    int index = items.Count;\r\n    InsertItemsRange(index, collection!); // TODO-NULLABLE: Remove ! when [DoesNotReturn] respected\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24885","RelatedDescription":"Open issue \"Collection<T>.AddRange should validate its parameters\" (#24885)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"451269077","IsPullRequest":true,"CreatedAt":"2019-06-03T02:32:15","Actor":"wli3","Number":"11469","RawContent":null,"Title":"Update branding to preview 7","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11469","RelatedDescription":"Open PR \"Update branding to preview 7\" (#11469)"},{"Id":"451266397","IsPullRequest":true,"CreatedAt":"2019-06-03T02:16:50","Actor":"wli3","Number":"11468","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11468","RelatedDescription":"Open PR \"Merge master to release/3.0.1xx for preview6\" (#11468)"},{"Id":"451136746","IsPullRequest":true,"CreatedAt":"2019-06-03T02:13:21","Actor":"dotnet-bot","Number":"11466","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11466","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11466)"},{"Id":"451249554","IsPullRequest":true,"CreatedAt":"2019-06-03T00:01:15","Actor":"dotnet-bot","Number":"11467","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11467","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11467)"},{"Id":"451078555","IsPullRequest":true,"CreatedAt":"2019-06-02T18:33:15","Actor":"dotnet-maestro[bot]","Number":"11464","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11464","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11464)"},{"Id":"451078917","IsPullRequest":true,"CreatedAt":"2019-06-02T12:44:56","Actor":"dotnet-maestro[bot]","Number":"11465","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 1:08 PM\r\n- **Commit**: 7359a18d42369a6e078a76370ed904f90589d1ea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19281.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190601.1\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 1b687f22bef2ba1ec7d4ff2f8c080b5c833e077c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19301.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11465","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11465)"},{"Id":"451078530","IsPullRequest":true,"CreatedAt":"2019-06-02T12:40:37","Actor":"dotnet-maestro[bot]","Number":"11463","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11463","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11463)"},{"Id":"451029894","IsPullRequest":true,"CreatedAt":"2019-06-01T12:01:20","Actor":"wli3","Number":"11462","RawContent":null,"Title":"Merges/release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11462","RelatedDescription":"Closed or merged PR \"Merges/release/2.2.2xx to release/3.0.1xx\" (#11462)"},{"Id":"451022299","IsPullRequest":true,"CreatedAt":"2019-06-01T00:20:55","Actor":"johnbeisner","Number":"11461","RawContent":null,"Title":"On a x64 OS, the x86 SDK bundle installer displays the incorrect installation directory","State":"open","Body":"On a x64 OS, the x86 SDK bundle installer was trying to incorrectly install to \"C:\\Program Files\\dotnet\". The MSIs were correcting the MsiProperty [see below], but the installation directory on display is still incorrect.\r\n\r\n\r\n\r\n```\r\nMSI (s) (BC:B0) [15:19:43:943]: WIN64DUALFOLDERS: 'C:\\Program Files (x86)\\' will substitute 17 characters in 'C:\\Program Files\\dotnet\\' folder path. (mask argument = 0, the folder pair's iSwapAttrib member = 0).\r\nMSI (s) (BC:B0) [15:19:43:943]: PROPERTY CHANGE: Modifying DOTNETHOME property. Its current value is 'C:\\Program Files\\dotnet'. Its new value: 'C:\\Program Files (x86)\\dotnet\\'.\r\n```\r\n\r\n\r\n**WiX documentation:**\r\nProgramFilesFolder - gets the well-known folder for CSIDL_PROGRAM_FILESX86.\r\nProgramFiles64Folder - gets the well-known folder for CSIDL_PROGRAM_FILES.\r\nProgramFiles6432Folder - gets the well-known folder for CSIDL_PROGRAM_FILES on 64-bit Windows and CSIDL_PROGRAM_FILESX86 on 32-bit Windows.\r\n\r\nAddresses: https://github.com/dotnet/sdk/issues/3267\r\n","Url":"https://github.com/dotnet/cli/pull/11461","RelatedDescription":"Open PR \"On a x64 OS, the x86 SDK bundle installer displays the incorrect installation directory\" (#11461)"},{"Id":"451004832","IsPullRequest":false,"CreatedAt":"2019-05-31T22:36:37","Actor":"nguerrera","Number":"11460","RawContent":null,"Title":"Source-Build: Remove System.Data.SqlClient prebuilt from toolset","State":"open","Body":"Package | Version | Status  \r\n -- | -- | --\r\nSystem.Data.SqlClient |\t4.3.0 | |\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11460","RelatedDescription":"Open issue \"Source-Build: Remove System.Data.SqlClient prebuilt from toolset\" (#11460)"},{"Id":"451004262","IsPullRequest":false,"CreatedAt":"2019-05-31T22:33:58","Actor":"nguerrera","Number":"11459","RawContent":null,"Title":"Source-Build: Eliminate DotNetHostResolver from core-sdk","State":"open","Body":"Core-sdk   Prebuilts: |   |   |\r\n-- | -- | --\r\n**Package** | **Version** | **Status** |   |  \r\nruntime.win-x64.Microsoft.NETCore.DotNetHostResolver | 3.0.0-preview4-27615-11 | Exclude from Source-build  \r\nruntime.win-x86.Microsoft.NETCore.DotNetHostResolver | 3.0.0-preview4-27615-11 | Exclude from Source-build  \r\n\r\nFix https://github.com/dotnet/cli/issues/11459\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11459","RelatedDescription":"Open issue \"Source-Build: Eliminate DotNetHostResolver from core-sdk\" (#11459)"},{"Id":"451003970","IsPullRequest":false,"CreatedAt":"2019-05-31T22:32:34","Actor":"nguerrera","Number":"11458","RawContent":null,"Title":"Source-Build: Eliminate Microsoft.DotNet.Cli.Utils prebuilt from cli-migrate","State":"open","Body":"cli-migrate   Prebuilts: |   |   |\r\n-- | -- | --\r\n**Package** | **Version** | **Status**\r\nMicrosoft.DotNet.Cli.Utils | 1.0.1 | Use Source Built Version \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11458","RelatedDescription":"Open issue \"Source-Build: Eliminate Microsoft.DotNet.Cli.Utils prebuilt from cli-migrate\" (#11458)"},{"Id":"450768804","IsPullRequest":true,"CreatedAt":"2019-05-31T21:04:14","Actor":"dotnet-maestro[bot]","Number":"11455","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 6:58 PM\r\n- **Commit**: 64427bdb934241a66e0123d060d6f7a3f0977098\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19280.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11455","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11455)"},{"Id":"450861383","IsPullRequest":false,"CreatedAt":"2019-05-31T15:41:18","Actor":"Thraka","Number":"11457","RawContent":null,"Title":"Improve dotnet pack command to create templates","State":"open","Body":"The current CLI requires users to install and use `nuget pack`  to create a template for the dotnet SDK. This incurs a penalty on non-Windows computers where the user will have to install Mono and get nuget.exe running just to create templates.\r\n\r\nThe existing `dotnet pack` command should support targeting a nuspec (or something.props?) and look for the settings that `nuget pack` does and output a template.\r\n\r\nDocs bug: dotnet/docs#11066","Url":"https://github.com/dotnet/cli/issues/11457","RelatedDescription":"Open issue \"Improve dotnet pack command to create templates\" (#11457)"},{"Id":"450848771","IsPullRequest":false,"CreatedAt":"2019-05-31T15:13:51","Actor":"decriptor","Number":"11456","RawContent":null,"Title":"Make error messages a bit more helpful","State":"open","Body":"A specific example is the `-g` or `--global` argument. Instead of just saying `Unrecognized command or argument '-g'` maybe state that `tool` doesn't have a `-g` argument.\r\n\r\n§ {~\\tmp}PS>dotnet tool list\r\nPlease specify either the global option (--global) or the tool path option (--tool-path).                             Usage: dotnet tool list [options]                                                                                                                                                                                                           Options:\r\n-g, --global         List tools in the current user's tools directory.\r\n--tool-path <PATH>   The directory containing the tools to list.\r\n-h, --help           Show command line help.\r\n\r\n\r\n§ {~\\tmp}PS>dotnet tool -g list\r\nUnrecognized command or argument '-g'                                                                                 Usage: dotnet tool list [options]                                                                                                                                                                                                           Options:\r\n-g, --global         List tools in the current user's tools directory.\r\n--tool-path <PATH>   The directory containing the tools to list.\r\n-h, --help           Show command line help.\r\n\r\n\r\n§ {~\\tmp}PS>dotnet tool list -g\r\nPackage Id         Version          Commands\r\n\r\ndotnet-cowsay      1.3.0            dotnet-cowsay\r\ndotnet-try         1.0.19266.1      dotnet-try\r\n§ {~\\tmp}PS>                        \r\n","Url":"https://github.com/dotnet/cli/issues/11456","RelatedDescription":"Open issue \"Make error messages a bit more helpful\" (#11456)"},{"Id":"450766437","IsPullRequest":true,"CreatedAt":"2019-05-31T12:41:29","Actor":"dotnet-maestro[bot]","Number":"11454","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190530.5\r\n- **Date Produced**: 5/31/2019 8:14 AM\r\n- **Commit**: edab73adbf6f7ba08a91026e2a0b57eaa2d0baf7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19280.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11454","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11454)"},{"Id":"450766296","IsPullRequest":true,"CreatedAt":"2019-05-31T12:36:09","Actor":"dotnet-maestro[bot]","Number":"11453","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11453","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11453)"},{"Id":"450544629","IsPullRequest":true,"CreatedAt":"2019-05-30T23:09:35","Actor":"johnbeisner","Number":"11452","RawContent":null,"Title":"Run install-script tests only when merging into master.","State":"open","Body":"Run install-script tests only when merging into master.\r\n\r\nRationale:\r\ndevelopers do not want to run installation tests\r\nwe are only developing the installation scripts in dotnet/cli:master\r\n\r\nTrivial:\r\nAdding the '2.2' channel-to-version-resolution test for SDK installations\r\n","Url":"https://github.com/dotnet/cli/pull/11452","RelatedDescription":"Open PR \"Run install-script tests only when merging into master.\" (#11452)"},{"Id":"450277063","IsPullRequest":true,"CreatedAt":"2019-05-30T13:00:45","Actor":"dotnet-maestro[bot]","Number":"11451","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190529.2\r\n- **Date Produced**: 5/29/2019 10:17 PM\r\n- **Commit**: cbe9ed1639f193a075beeca6e6e6aff121a08382\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19279.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11451","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11451)"},{"Id":"450274527","IsPullRequest":true,"CreatedAt":"2019-05-30T12:58:39","Actor":"dotnet-maestro[bot]","Number":"11450","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190529.4\r\n- **Date Produced**: 5/30/2019 1:40 AM\r\n- **Commit**: d6749cfae26412c188e26c247b15919afccef127\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19279.4\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11450","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11450)"},{"Id":"450274384","IsPullRequest":true,"CreatedAt":"2019-05-30T12:53:16","Actor":"dotnet-maestro[bot]","Number":"11449","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11449","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11449)"},{"Id":"450153480","IsPullRequest":true,"CreatedAt":"2019-05-30T06:33:05","Actor":"jayaranigarg","Number":"11448","RawContent":null,"Title":"TestPLatform insertion 16.1.1","State":"open","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1","Url":"https://github.com/dotnet/cli/pull/11448","RelatedDescription":"Open PR \"TestPLatform insertion 16.1.1\" (#11448)"},{"Id":"450150914","IsPullRequest":true,"CreatedAt":"2019-05-30T06:23:32","Actor":"jayaranigarg","Number":"11447","RawContent":null,"Title":"TestPlatform insertion 16.1.1","State":"open","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1\r\n","Url":"https://github.com/dotnet/cli/pull/11447","RelatedDescription":"Open PR \"TestPlatform insertion 16.1.1\" (#11447)"},{"Id":"450144791","IsPullRequest":false,"CreatedAt":"2019-05-30T06:01:34","Actor":"yyjdelete","Number":"11446","RawContent":null,"Title":"`dotnet tool install --global {1}` in `CannotFindCommandAvailableAsTool` should not be translated","State":"open","Body":"It's an raw command and should not be translated.\r\nSeems the file are updated automatically from another place?\r\n\r\nSee it's translated in\r\nhttps://github.com/dotnet/cli/blob/ae5ff2c666e5288ef6dbbba15f36782210b6412d/src/Microsoft.DotNet.Cli.Utils/xlf/LocalizableStrings.zh-Hans.xlf#L104\r\nhttps://github.com/dotnet/cli/blob/ae5ff2c666e5288ef6dbbba15f36782210b6412d/src/Microsoft.DotNet.Cli.Utils/xlf/LocalizableStrings.ko.xlf#L104","Url":"https://github.com/dotnet/cli/issues/11446","RelatedDescription":"Open issue \"`dotnet tool install --global {1}` in `CannotFindCommandAvailableAsTool` should not be translated\" (#11446)"},{"Id":"450070204","IsPullRequest":true,"CreatedAt":"2019-05-30T00:01:43","Actor":"dotnet-bot","Number":"11445","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11445","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11445)"},{"Id":"450063096","IsPullRequest":false,"CreatedAt":"2019-05-29T23:28:50","Actor":"ericstj","Number":"11444","RawContent":null,"Title":"Deps file for MSBuild shouldn't downgrade common task dependencies.","State":"open","Body":"## Steps to reproduce\r\nProduce a task with a dependency on a new version of roslyn.\r\n\r\n## Expected  behavior\r\nTask works on latest SDK\r\n\r\n## Actual behavior\r\nTask fails to load with ref-def mismatch for roslyn DLLs since old version (2.1.0) is listed in MSBuild's deps file and carried in the MSBuild bin folder.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-011681\r\n Commit:    2f5626d019\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   D:\\dotnet\\corefx\\.dotnet\\sdk\\3.0.100-preview6-011681\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27629-07\r\n  Commit:  a3967b6096\r\n\r\n.NET Core SDKs installed:\r\n  2.2.103 [D:\\dotnet\\corefx\\.dotnet\\sdk]\r\n  3.0.100-preview6-011681 [D:\\dotnet\\corefx\\.dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19230-05 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27629-07 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27629-07 [D:\\dotnet\\corefx\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n@nguerrera suggested a tactical fix https://github.com/dotnet/arcade/issues/2748#issuecomment-497140703\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11444","RelatedDescription":"Open issue \"Deps file for MSBuild shouldn't downgrade common task dependencies.\" (#11444)"},{"Id":"450049675","IsPullRequest":false,"CreatedAt":"2019-05-29T22:43:58","Actor":"xavierjohn","Number":"11442","RawContent":null,"Title":"Published exe is missing version information.","State":"closed","Body":"## Steps to reproduce\r\nCreate the default Hello World console application.\r\npublish it\r\n`dotnet publish -o c:\\temp\\hello -r win10-x64`\r\n\r\n## Expected  behavior\r\nThe generated HelloWorld.exe has Product name & Version filled in just like HelloWorld.dll.\r\n\r\n## Actual behavior\r\nFile version, Product Name, Product version are all empty.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.203\r\n Commit:    e5bab63eca\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.203\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.4\r\n  Commit:  f95848e524\r\n\r\n.NET Core SDKs installed:\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.203 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11442","RelatedDescription":"Closed issue \"Published exe is missing version information.\" (#11442)"},{"Id":"450060702","IsPullRequest":false,"CreatedAt":"2019-05-29T20:53:52","Actor":"BartoGabriel","Number":"11443","RawContent":null,"Title":"Input of keys in another language","State":"open","Body":"\r\nWhen creating a new project from a template, in case there are possible actions to be executed, it does not take well the keys pressed in another language.\r\n\r\nFor example, in my machine in Spanish I am being asked to press S or N, and when I press S it says that it is incorrect and expects me to press Y (English).\r\n\r\nSpanish:\r\n![imagen](https://user-images.githubusercontent.com/5618170/58590488-928dee80-823a-11e9-91c7-0374cb7e562d.png)\r\n\r\nEnglish:\r\n![imagen](https://user-images.githubusercontent.com/5618170/58590504-9c175680-823a-11e9-9aea-d9751d121d15.png)\r\n","Url":"https://github.com/dotnet/cli/issues/11443","RelatedDescription":"Open issue \"Input of keys in another language\" (#11443)"},{"Id":"449987952","IsPullRequest":false,"CreatedAt":"2019-05-29T19:44:32","Actor":"nguerrera","Number":"11441","RawContent":null,"Title":"Source-Build: Eliminate Microsoft.DotNet.Cli.CommandLine in CLI","State":"open","Body":"cc @dseefeld \r\n\r\nCLI Prebuilts |   |   |\r\n-- | -- | --\r\n**Package** | **Version** | **Status**  \r\nMicrosoft.DotNet.Cli.CommandLine | 0.1.1 | Use Source Built Version \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11441","RelatedDescription":"Open issue \"Source-Build: Eliminate Microsoft.DotNet.Cli.CommandLine in CLI\" (#11441)"},{"Id":"449976780","IsPullRequest":false,"CreatedAt":"2019-05-29T19:23:13","Actor":"cmeeren","Number":"11440","RawContent":null,"Title":"Unable to install any tools using dotnet tool install","State":"closed","Body":"I am trying to install a global tool. However, I always get the same error message regardless of the tool I try to install (e.g. also for `dotnetsay`):\r\n\r\n```\r\nC:\\Users\\Christer\\Source\\Repos\\faketest>dotnet tool install fake-cli -g\r\nFailed to install tool package 'fake-cli': Could not find a part of the path 'C:\\Users\\Christer\\.dotnet\\tools\\.store\\.stage\\0qd2mqpa.m45\\fake-cli'.\r\nTool 'fake-cli' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\nI have tried for several hours to clean up my environment, PATH, reinstall VS, etc., but I can't figure out why this doesn't work.\r\n\r\nI get the same problem when specifying a tool path.\r\n\r\nI'm sorry for what is evidently a support request, but I haven't found anything on google, SO, etc. I'm one step short of reinstalling my whole system and have nowhere else to turn.\r\n\r\nWhat could be wrong? Why doesn't this work? What could I do to troubleshoot further?\r\n\r\ndotnet info:\r\n\r\n```\r\nC:\\Users\\Christer\\Source\\Repos\\faketest>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.700\r\n Commit:    c2ef055a0f\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.700\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/cli/issues/11440","RelatedDescription":"Closed issue \"Unable to install any tools using dotnet tool install\" (#11440)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-01T12:03:53","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"449798213","IsPullRequest":true,"CreatedAt":"2019-05-31T17:00:11","Actor":"dotnet-maestro[bot]","Number":"1216","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190528.7\r\n- **Date Produced**: 5/29/2019 4:03 AM\r\n- **Commit**: c7d48ca7732b7717e84d8375588d83866104ef58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19278.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190529.8\r\n- **Date Produced**: 5/30/2019 8:05 AM\r\n- **Commit**: e23119d577e644d2c2a25419c88c1181681358e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19279.8\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 9:51 AM\r\n- **Commit**: 82408cd90f4d4573d502e8df2ca437b35e6a37f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19281.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1216)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-05-31T01:08:56","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"open","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Open PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"},{"Id":"449768348","IsPullRequest":true,"CreatedAt":"2019-05-29T12:16:21","Actor":"dotnet-maestro[bot]","Number":"1215","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1215","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1215)"},{"Id":"449369049","IsPullRequest":false,"CreatedAt":"2019-05-28T16:35:35","Actor":"llolic","Number":"1214","RawContent":null,"Title":"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.","State":"open","Body":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?","Url":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Open issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214)"},{"Id":"449247865","IsPullRequest":true,"CreatedAt":"2019-05-28T12:54:12","Actor":"dotnet-maestro[bot]","Number":"1213","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190527.2\r\n- **Date Produced**: 5/27/2019 11:45 PM\r\n- **Commit**: d58a8ade31b4731759c92df00d0f6398c52f3d83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19277.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1213","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1213)"},{"Id":"448751215","IsPullRequest":false,"CreatedAt":"2019-05-27T09:16:48","Actor":"KexyBiscuit","Number":"1212","RawContent":null,"Title":"NETSDK1073 occurs on netcoreapp3.0 projects","State":"open","Body":"```\r\n>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012085\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(194,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.6.0-preview5.19224.8\" /> <!--It doesn't matter what's referenced-->\r\n</ItemGroup>\r\n```","Url":"https://github.com/dotnet/standard/issues/1212","RelatedDescription":"Open issue \"NETSDK1073 occurs on netcoreapp3.0 projects\" (#1212)"},{"Id":"448462812","IsPullRequest":true,"CreatedAt":"2019-05-25T13:11:36","Actor":"dotnet-maestro[bot]","Number":"1211","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1211)"},{"Id":"448458458","IsPullRequest":true,"CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Number":"1210","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1210)"},{"Id":"448225868","IsPullRequest":false,"CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Number":"1209","RawContent":null,"Title":"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup","State":"open","Body":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)","Url":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Open issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209)"},{"Id":"448158285","IsPullRequest":true,"CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Number":"1208","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1208)"},{"Id":"448135323","IsPullRequest":true,"CreatedAt":"2019-05-24T12:21:08","Actor":"dotnet-maestro[bot]","Number":"1207","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1207","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1207)"},{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"445645996","IsPullRequest":true,"CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Number":"1198","RawContent":null,"Title":"Add missing members to MemoryMarshal","State":"closed","Body":"This fixes #1193.","Url":"https://github.com/dotnet/standard/pull/1198","RelatedDescription":"Closed or merged PR \"Add missing members to MemoryMarshal\" (#1198)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"},{"Id":"445640404","IsPullRequest":true,"CreatedAt":"2019-05-20T20:27:35","Actor":"terrajobst","Number":"1197","RawContent":null,"Title":"Add asymmetric key import/export APIs","State":"closed","Body":"This fixes #1178.","Url":"https://github.com/dotnet/standard/pull/1197","RelatedDescription":"Closed or merged PR \"Add asymmetric key import/export APIs\" (#1197)"},{"Id":"446103850","IsPullRequest":true,"CreatedAt":"2019-05-20T13:38:53","Actor":"dotnet-maestro[bot]","Number":"1201","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 11:22 AM\r\n- **Commit**: e58b35cd0f8fe6caa194ca7e48388d8d59854fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19270.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1201","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1201)"},{"Id":"445816606","IsPullRequest":true,"CreatedAt":"2019-05-19T13:14:40","Actor":"dotnet-maestro[bot]","Number":"1200","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190518.5\r\n- **Date Produced**: 5/18/2019 11:19 PM\r\n- **Commit**: 36ad1c62d4bb753a489d4c055b909af2cb6d407f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19268.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1200)"},{"Id":"445713531","IsPullRequest":true,"CreatedAt":"2019-05-18T13:13:40","Actor":"dotnet-maestro[bot]","Number":"1199","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190517.12\r\n- **Date Produced**: 5/18/2019 4:32 AM\r\n- **Commit**: c671ce2be16ae3c6086a061d9d94b81005217735\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19267.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1199","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1199)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"451269269","IsPullRequest":false,"CreatedAt":"2019-06-03T02:33:25","Actor":"buyaa-n","Number":"38154","RawContent":null,"Title":"New modifier with different type is not hiding base property","State":"open","Body":"New modifier with different type is not hiding base property, throwing `System.InvalidOperationException: The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.` \r\nIt is workign as expected when base derived property types are same.\r\nThis issue is edge case, with very low priority. \r\n```csharp\r\n[Fact]\r\npublic void DerivedClassHidingBasePropertySerializesAsExpected()\r\n{\r\n    var original = new FooBar1 { foo = \"value\" };  //System.InvalidOperationException : The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.\r\n    var json = JsonSerializer.ToString(original);\r\n    var expectedJson = @\"{\"\"foo\"\":\"\"value\"\"}}\";\r\n    Assert.Equal(expectedJson, json);\r\n}\r\n[Fact]\r\npublic void DerivedClassHidingBasePropertyDeserializesAsExpected()\r\n{\r\n    var json = @\"{\"\"foo\"\"/:\"\"value\"\"}\";\r\n    var deserialized = JsonSerializer.Parse<FooBar1>(json); // System.InvalidOperationException : The JSON property name for 'System.Text.Json.Serialization.Tests.FooBar1.foo' collides with another property.\r\n    Assert.NotNull(deserialized.foo);\r\n    Assert.Equal(\"value\", deserialized.foo);\r\n}\r\n\t\t\r\npublic class FooBar1 : Foo1\r\n{\r\n    public new string foo { get; set; }\r\n}\r\npublic class Foo1\r\n{\r\n    public object foo { get; set; }\r\n}","Url":"https://github.com/dotnet/corefx/issues/38154","RelatedDescription":"Open issue \"New modifier with different type is not hiding base property\" (#38154)"},{"Id":"451267560","IsPullRequest":true,"CreatedAt":"2019-06-03T02:23:17","Actor":"buyaa-n","Number":"38153","RawContent":null,"Title":"Some tests improted from Newton Json","State":"open","Body":"Importing tests from Newton json not finished, for now I have checked around half of them, as not much interesting bugs found and many of the tests are not supported I am going to add what I have got until now and start working on improving code coverage. Will check back corresponding newton json tests with each code area I worked/looked","Url":"https://github.com/dotnet/corefx/pull/38153","RelatedDescription":"Open PR \"Some tests improted from Newton Json\" (#38153)"},{"Id":"451253853","IsPullRequest":true,"CreatedAt":"2019-06-03T00:39:29","Actor":"ViktorHofer","Number":"38151","RawContent":null,"Title":"Enable project restore for test projects","State":"open","Body":"Requires https://github.com/dotnet/arcade/pull/2902\r\nRequires https://github.com/dotnet/arcade/pull/2865\r\n\r\nChanges:\r\n- Enabled project restore for test projects\r\n- Stop binplacing test projects\r\n- Remove the hard-coded `9.9.9` shared framework version together with the static runtimeconfig files and map it to the `ProductVersion`.\r\n- Replace .NET Standard executable test helper libraries with the specific frameworks as .NET Standard executables are not supported. This was necessary to enable loading execution with the generated runtimeconfig files.\r\n- Use PackageReferences instead of SupplementalTestData\r\n- Use runtimeconfig templates instead of custom ones with hardcoded shared framework versions\r\n- Change a few depproj files to targets that run as part of the arcade restore\r\n- Change use of `TargetGroup` to `TargetFramework` in all test projects and external projects to support project restore.\r\n- Change ref paths to use the msbuild normalizedirectory helper function as default references are now compared by full paths which require to have the correct slash encodings (ie for ref exclusions).\r\n- Remove some dead code in various places in the repo\r\n\r\n@stephentoub this will resolve the ongoing issues with transitive dependencies in test projects, i.e. the one that you hit with your recent change in Microsoft.DotNet.RemoteExecutor.","Url":"https://github.com/dotnet/corefx/pull/38151","RelatedDescription":"Open PR \"Enable project restore for test projects\" (#38151)"},{"Id":"451202278","IsPullRequest":true,"CreatedAt":"2019-06-03T00:26:43","Actor":"MarcoRossignoli","Number":"38147","RawContent":null,"Title":"Improve test CustomValidationAttribute","State":"closed","Body":"Address PR feedback https://github.com/dotnet/corefx/pull/38140#discussion_r289618791\r\n\r\ncc: @jkotas @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/38147","RelatedDescription":"Closed or merged PR \"Improve test CustomValidationAttribute\" (#38147)"},{"Id":"451150933","IsPullRequest":true,"CreatedAt":"2019-06-03T00:25:38","Actor":"danmosemsft","Number":"38145","RawContent":null,"Title":"Fix tests to match exception output change","State":"closed","Body":"Update tests to match https://github.com/dotnet/coreclr/pull/24390","Url":"https://github.com/dotnet/corefx/pull/38145","RelatedDescription":"Closed or merged PR \"Fix tests to match exception output change\" (#38145)"},{"Id":"451241703","IsPullRequest":true,"CreatedAt":"2019-06-02T22:28:26","Actor":"bgrainger","Number":"38150","RawContent":null,"Title":"Improve ReadOnlySequence.Slice docs","State":"open","Body":"For #32021.\r\n\r\n* Change description of _end_ `SequencePosition` to be exclusive.\r\n* Make parameter descriptions consistent across overloads.\r\n* Add missing periods.","Url":"https://github.com/dotnet/corefx/pull/38150","RelatedDescription":"Open PR \"Improve ReadOnlySequence.Slice docs\" (#38150)"},{"Id":"451233998","IsPullRequest":false,"CreatedAt":"2019-06-02T19:33:19","Actor":"fernacolo","Number":"38149","RawContent":null,"Title":"Custom TaskScheduler replaced by the default one for no apparent reason","State":"open","Body":"I'm trying to build a custom `TaskScheduler` that uses the priority of each task to make scheduling decisions. Basically, if there are two or more tasks ready to run, it should schedule the one that has more priority.\r\n\r\nI can put priority information in a custom `SynchronizationContext` and communicate it to my custom `TaskScheduler`. The problem is that certain `await` patterns cause the scheduler to be lost for no apparent reason. Here is the smallest repro code I could make:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Runtime.InteropServices;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ReproApp\r\n{\r\n    internal static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(RuntimeInformation.FrameworkDescription);\r\n            var scheduler = new MyTaskScheduler();\r\n            var context = new MySynchronizationContext(scheduler);\r\n            context.Post(Run, null);\r\n            Thread.Sleep(3000);\r\n        }\r\n\r\n        private static void Run(object state)\r\n        {\r\n            RunAsync(); // no await here, intentional.\r\n        }\r\n\r\n        private static async Task RunAsync()\r\n        {\r\n            Logger.WriteLine(\"Before InternalRunAsync\"); // <-- Scheduler OK.\r\n            await InternalRunAsync();\r\n            Logger.WriteLine(\"After InternalRunAsync\"); // <-- Scheduler changed. WHY???\r\n        }\r\n\r\n        private static async Task InternalRunAsync()\r\n        {\r\n            Logger.WriteLine(\"Before Delay\"); // <-- Scheduler OK.\r\n            await Task.Delay(TimeSpan.FromSeconds(1.5));\r\n            Logger.WriteLine(\"After Delay\"); // <-- Scheduler OK.\r\n        }\r\n    }\r\n\r\n    internal static class Logger\r\n    {\r\n        private static readonly Stopwatch sw = Stopwatch.StartNew();\r\n\r\n        public static void WriteLine(string msg)\r\n        {\r\n            var nativeThreadId = AppDomain.GetCurrentThreadId();\r\n            var threadId = Thread.CurrentThread.ManagedThreadId;\r\n            var syncContext = SynchronizationContext.Current?.ToString() ?? \"null\";\r\n            var scheduler = TaskScheduler.Current.ToString();\r\n            Console.WriteLine(\r\n                $\"[{(int) sw.Elapsed.TotalMilliseconds} native:{nativeThreadId} managed:{threadId} syncCtx:{syncContext} sch:{scheduler}] {msg}\");\r\n        }\r\n    }\r\n\r\n    internal sealed class MySynchronizationContext : SynchronizationContext\r\n    {\r\n        private readonly MyTaskScheduler scheduler;\r\n\r\n        public MySynchronizationContext(MyTaskScheduler scheduler)\r\n        {\r\n            this.scheduler = scheduler;\r\n        }\r\n\r\n        public override SynchronizationContext CreateCopy()\r\n        {\r\n            return new MySynchronizationContext(scheduler);\r\n        }\r\n\r\n        public override void Post(SendOrPostCallback d, object state)\r\n        {\r\n            void SetContextAndCall()\r\n            {\r\n                SetSynchronizationContext(this);\r\n                d(state);\r\n            }\r\n\r\n            new Task(SetContextAndCall).Start(scheduler);\r\n        }\r\n\r\n        public override void Send(SendOrPostCallback d, object state)\r\n        {\r\n            void SetContextAndCall()\r\n            {\r\n                SetSynchronizationContext(this);\r\n                d(state);\r\n            }\r\n\r\n            new Task(SetContextAndCall).RunSynchronously(scheduler);\r\n        }\r\n    }\r\n\r\n    internal sealed class MyTaskScheduler : TaskScheduler\r\n    {\r\n        protected override void QueueTask(Task task)\r\n        {\r\n            ThreadPool.QueueUserWorkItem(RunTask, task);\r\n        }\r\n\r\n        private void RunTask(object state)\r\n        {\r\n            var task = (Task) state;\r\n            TryExecuteTask(task);\r\n        }\r\n\r\n        protected override bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)\r\n        {\r\n            return TryExecuteTask(task);\r\n        }\r\n\r\n        protected override IEnumerable<Task> GetScheduledTasks()\r\n        {\r\n            return new List<Task>();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd here is the output:\r\n\r\n```\r\n.NET Core 3.0.0-preview5-27626-15\r\n[0 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:ReproApp.MyTaskScheduler] Before InternalRunAsync\r\n[2 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:ReproApp.MyTaskScheduler] Before Delay\r\n[1513 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:ReproApp.MyTaskScheduler] After Delay\r\n[1514 native:4 managed:4 syncCtx:ReproApp.MySynchronizationContext sch:System.Threading.Tasks.ThreadPoolTaskScheduler] After InternalRunAsync\r\n```\r\n\r\nThe 4th log entry shows that my task scheduler was mysteriously replaced by the default. Why?\r\n\r\nThis prevents my prioritization solution to work properly because everything running on the wrong task scheduler will not be scheduled with the correct priority.\r\n","Url":"https://github.com/dotnet/corefx/issues/38149","RelatedDescription":"Open issue \"Custom TaskScheduler replaced by the default one for no apparent reason\" (#38149)"},{"Id":"451078390","IsPullRequest":true,"CreatedAt":"2019-06-02T18:21:12","Actor":"dotnet-maestro[bot]","Number":"38134","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19281.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19281.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19301.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19301.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38134","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#38134)"},{"Id":"451204488","IsPullRequest":false,"CreatedAt":"2019-06-02T15:35:24","Actor":"bsagal","Number":"38148","RawContent":null,"Title":"[API Proposal] Add ReadOnlySequence<T>.TrySlice ","State":"open","Body":"When using ReadOnlySequence<T> if i want to see if i can get and get the `length` bytes stating from position `start` i need the following code:\r\n\r\n```c#\r\n    static bool TrySlice<T>(this ReadOnlySequence<T> seq, int start, int length, out ReadOnlySequence<T> result) {\r\n        var slice = seq.Slice(start);\r\n        if (slice.Length < length) {\r\n            result = default;\r\n            return false;\r\n        }\r\n        result = slice.Slice(length);\r\n        return true;\r\n    }\r\n```\r\n\r\nThis code needs to allocate extra ReadOnlySequence, witch could be much better achieved in the sequence its self.","Url":"https://github.com/dotnet/corefx/issues/38148","RelatedDescription":"Open issue \"[API Proposal] Add ReadOnlySequence<T>.TrySlice \" (#38148)"},{"Id":"451085335","IsPullRequest":true,"CreatedAt":"2019-06-02T15:14:19","Actor":"dotnet-maestro[bot]","Number":"38137","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190601.1\r\n- **Date Produced**: 6/1/2019 1:14 PM\r\n- **Commit**: 68aabc3ae3f5e775601e924320cbaea44dc2be25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19301.1\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190602.1\r\n- **Date Produced**: 6/2/2019 1:17 PM\r\n- **Commit**: 5b593e7bb6f4f213c5b324f36c05c7581a1a3222\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19302.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38137","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#38137)"},{"Id":"451187253","IsPullRequest":true,"CreatedAt":"2019-06-02T14:01:04","Actor":"dotnet-maestro[bot]","Number":"38146","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/2/2019 1:12 AM\r\n- **Commit**: 6d783b29087b5f260c9a64f347867bf6f6391bfe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19301.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19301.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19301.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38146","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#38146)"},{"Id":"451040601","IsPullRequest":false,"CreatedAt":"2019-06-02T13:59:18","Actor":"ares128","Number":"38132","RawContent":null,"Title":"Immutable collection read are way too slow than Normal collections","State":"closed","Body":"As i think immutable collection read operations will not do checks with concurrent access, it should be faster than normal collection. but test shows a different result.\r\n\r\n\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.503 (1809/October2018Update/Redstone5)\r\nIntel Core i5-7300U CPU 2.60GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores\r\n.NET Core SDK=2.2.204\r\n  [Host]     : .NET Core 2.2.5 (CoreCLR 4.6.27617.05, CoreFX 4.6.27618.01), 64bit RyuJIT\r\n  DefaultJob : .NET Core 2.2.5 (CoreCLR 4.6.27617.05, CoreFX 4.6.27618.01), 64bit RyuJIT\r\n\r\n\r\n|               Method | Count |       Mean |    Error |    StdDev |     Median |\r\n|--------------------- |------ |-----------:|---------:|----------:|-----------:|\r\n|             TestHash |     5 |   898.1 ns | 26.41 ns |  76.21 ns |   873.2 ns |\r\n| TestImmutableHashset |     5 | 2,485.9 ns | 73.78 ns | 212.86 ns | 2,438.5 ns |\r\n|             TestHash |   200 |   904.7 ns | 18.36 ns |  36.24 ns |   898.7 ns |\r\n| TestImmutableHashset |   200 | 3,980.9 ns | 79.65 ns | 130.86 ns | 3,971.3 ns |\r\n\r\n\r\n// * Summary *\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.17763.503 (1809/October2018Update/Redstone5)\r\nIntel Core i5-7300U CPU 2.60GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores\r\n.NET Core SDK=2.2.204\r\n  [Host]     : .NET Core 2.2.5 (CoreCLR 4.6.27617.05, CoreFX 4.6.27618.01), 64bit RyuJIT\r\n  DefaultJob : .NET Core 2.2.5 (CoreCLR 4.6.27617.05, CoreFX 4.6.27618.01), 64bit RyuJIT\r\n\r\n\r\n|            Method | Count |        Mean |      Error |     StdDev |\r\n|------------------ |------ |------------:|-----------:|-----------:|\r\n|          UseArray |     5 |    160.6 ns |   3.203 ns |   2.839 ns |\r\n|           UseList |     5 |    204.6 ns |   2.791 ns |   2.330 ns |\r\n| UseImmutableArray |     5 |    276.5 ns |   4.826 ns |   4.278 ns |\r\n|  UseImmutableList |     5 |  1,581.7 ns |  21.870 ns |  20.457 ns |\r\n|          UseArray |   200 |  3,180.2 ns |  52.322 ns |  48.942 ns |\r\n|           UseList |   200 |  4,196.8 ns |  64.607 ns |  50.441 ns |\r\n| UseImmutableArray |   200 |  3,210.4 ns |  33.345 ns |  29.559 ns |\r\n|  UseImmutableList |   200 | 31,295.6 ns | 485.202 ns | 453.858 ns |\r\n\r\nTest code shown below\r\n\r\n\r\n```\r\n\r\npublic class TestHashset\r\n    {\r\n        [Params(5, 200)]\r\n        public int Count { get; set; }\r\n\r\n        private HashSet<int> hashSet;\r\n\r\n        private ImmutableHashSet<int> immutableHashSet;\r\n\r\n        [GlobalSetup]\r\n        public void Setup()\r\n        {\r\n            var rnd = new Random();\r\n            this.hashSet = new HashSet<int>();\r\n\r\n            for (int i = 0; i < this.Count; i++)\r\n            {\r\n                this.hashSet.Add(rnd.Next(1000));\r\n            }\r\n\r\n            this.immutableHashSet = this.hashSet.ToImmutableHashSet();\r\n        }\r\n\r\n        [Benchmark]\r\n        public int TestHash()\r\n        {\r\n            int got = 0;\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                if (this.hashSet.Contains(i))\r\n                {\r\n                    got++;\r\n                }\r\n            }\r\n\r\n            return got;\r\n        }\r\n\r\n        [Benchmark]\r\n        public int TestImmutableHashset()\r\n        {\r\n            int got = 0;\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                if (this.immutableHashSet.Contains(i))\r\n                {\r\n                    got++;\r\n                }\r\n            }\r\n\r\n            return got;\r\n        }\r\n    }\r\n\r\n```\r\n\r\n```\r\n\r\n      public class TestCollection\r\n    {\r\n        [Params(5, 200)]\r\n        public int Count { get; set; }\r\n\r\n        private List<(string s, double l)> list;\r\n\r\n\r\n        [GlobalSetup]\r\n        public void Setup()\r\n        {\r\n            var rnd = new Random();\r\n            this.list = new List<(string s, double l)>();\r\n            for (int i = 0; i < this.Count; i++)\r\n            {\r\n                var v = rnd.NextDouble();\r\n                this.list.Add((v.ToString(), v));\r\n            }\r\n        }\r\n\r\n        private double TestEnumable(IEnumerable<double> local)\r\n        {\r\n            var all = 0d;\r\n\r\n            foreach (var d in local)\r\n            {\r\n                all += d;\r\n            }\r\n\r\n            var max = 0d;\r\n\r\n            foreach (var d in local)\r\n            {\r\n                max = max > d ? max : d;\r\n            }\r\n\r\n            return max + all;\r\n        }\r\n\r\n        [Benchmark]\r\n        public double UseArray()\r\n        {\r\n            return this.TestEnumable(this.list.Select(s => s.l).ToArray());\r\n        }\r\n        [Benchmark]\r\n        public double UseList()\r\n        {\r\n            return this.TestEnumable(this.list.Select(s => s.l).ToList());\r\n        }\r\n        [Benchmark]\r\n        public double UseImmutableArray()\r\n        {\r\n            return this.TestEnumable(this.list.Select(s => s.l).ToImmutableArray());\r\n        }\r\n        [Benchmark]\r\n        public double UseImmutableList()\r\n        {\r\n            return this.TestEnumable(this.list.Select(s => s.l).ToImmutableList());\r\n        }\r\n\r\n    }\r\n```","Url":"https://github.com/dotnet/corefx/issues/38132","RelatedDescription":"Closed issue \"Immutable collection read are way too slow than Normal collections\" (#38132)"},{"Id":"451080564","IsPullRequest":true,"CreatedAt":"2019-06-02T13:55:41","Actor":"dotnet-maestro[bot]","Number":"38135","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview7.19281.7\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19281.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview7.19301.4\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#38135)"},{"Id":"451123691","IsPullRequest":true,"CreatedAt":"2019-06-02T04:20:36","Actor":"MarcoRossignoli","Number":"38140","RawContent":null,"Title":"Fix CustomValidationAttribute.TypeId","State":"closed","Body":"fixes https://github.com/dotnet/corefx/issues/38078\r\n\r\nnetfx version https://referencesource.microsoft.com/#System.ComponentModel.DataAnnotations/DataAnnotations/CustomValidationAttribute.cs,107\r\n\r\ncc: @bricelam @jkotas @danmosemsft \r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38140","RelatedDescription":"Closed or merged PR \"Fix CustomValidationAttribute.TypeId\" (#38140)"},{"Id":"451150724","IsPullRequest":false,"CreatedAt":"2019-06-02T04:09:31","Actor":"danmosemsft","Number":"38144","RawContent":null,"Title":"Instructions for patching private CLR do not work","State":"open","Body":"https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/developer-guide.md#testing-with-private-coreclr-bits says I can build from the root, then apply a private CoreCLR using `dotnet msbuild /p:CoreCLROverridePath=d:\\git\\coreclr\\bin\\Product\\Windows_NT.x64.Release\\ ./external/runtime/runtime.depproj`\r\nhowever that gives\r\n```\r\nError:\r\n\r\n    An assembly specified in the application dependencies manifest (Microsoft.NETCore.App.deps.json) was not found:\r\n\r\n      package: 'Microsoft.NETCore.App', version: '9.9.9'\r\n\r\n      path: 'runtimes/rid/native/comhost.dll'\r\n\r\n  ----- end 20:37:24.40 ----- exit code -2147450740 ----------------------------------------------------------\r\n```\r\nthe workaround is to  run dotnet msbuild on src/pretest.builds before running a test and after building runtime.depproj\r\n\r\n@ericstj @safern","Url":"https://github.com/dotnet/corefx/issues/38144","RelatedDescription":"Open issue \"Instructions for patching private CLR do not work\" (#38144)"},{"Id":"451149918","IsPullRequest":false,"CreatedAt":"2019-06-02T03:55:04","Actor":"davidfowl","Number":"38143","RawContent":null,"Title":"Add methods for urlpath/virtualpath manipulation","State":"open","Body":"This is coming up while people are porting their ASP.NET application to ASP.NET Core because there was a general purpose utility that was the moral equivalent of Path for handling what was coined a virtual path basically (the path part of a URI). Here's the existing API surface (in the System.Web namespace):\r\n\r\n```C#\r\npublic static class VirtualPathUtility\r\n{\r\n    public static string AppendTrailingSlash(string virtualPath);\r\n    public static string GetDirectory(string virtualPath);\r\n    public static string GetFileName(string virtualPath);\r\n    public static bool IsAbsolute(string virtualPath);\r\n    public static string MakeRelative(string fromPath, string toPath);\r\n    public static string RemoveTrailingSlash(string virtualPath);\r\n    public static string ToAbsolute(string virtualPath);\r\n    public static string ToAbsolute(string virtualPath, string applicationPath);\r\n    public static string ToAppRelative(string virtualPath, string applicationPath);\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/38143","RelatedDescription":"Open issue \"Add methods for urlpath/virtualpath manipulation\" (#38143)"},{"Id":"451141000","IsPullRequest":true,"CreatedAt":"2019-06-02T01:15:59","Actor":"joshudson","Number":"38142","RawContent":null,"Title":"#8895 fix the rest of the handle leaks so the pull request in coreclr…","State":"open","Body":"… actually works as it it should.\r\n\r\nI really wish there was a cleaner way to go about this, but writable file handles leaking into fork() children cause problems for IO error detection. I can't restrict this to readonly handles only because `SafeHandle(IntPtr)` can't handle that, and it would be its own horrible level mixing anyway.","Url":"https://github.com/dotnet/corefx/pull/38142","RelatedDescription":"Open PR \"#8895 fix the rest of the handle leaks so the pull request in coreclr…\" (#38142)"},{"Id":"451129783","IsPullRequest":false,"CreatedAt":"2019-06-01T22:15:25","Actor":"JustArchi","Number":"38141","RawContent":null,"Title":"Changing console's OutputEncoding on linux to unicode generates garbage","State":"open","Body":"Hello.\r\n\r\nI've experimented a bit in my cross-platform app by declaring `Console.OutputEncoding = Encoding.Unicode;` globally before first console entry gets written.\r\n\r\nOn Windows, as expected, the output encoding is changed nicely and the console displays whole range of symbols, including cyrillic characters.\r\n\r\nOn Linux, the encoding is also changed, but the console generates garbage from this point onwards, where previously the cyrillic characters would also show properly (probably due to UTF-8 already being default there).\r\n\r\nJudging by my own research based on **[this](https://github.com/dotnet/corefx/blob/master/src/System.Console/src/System/ConsolePal.Unix.cs#L748)** line, I'd expect that changing encoding on linux would truly be a no-op operation which doesn't affect anything, or at worst produces an exception to handle during runtime, but instead it broke display that worked previously.\r\n\r\nI'm not sure if this is intended or not, I apologize in advance if it is but I couldn't find any issue that relates to my problem. Feel free to close it in this case.\r\n\r\nOtherwise, feel free to check the issue yourself, it should be enough to launch code similar to below on any linux machine:\r\n\r\n```c#\r\nConsole.OutputEncoding = Encoding.Unicode;\r\nConsole.WriteLine(\"привет\");\r\n```\r\n\r\nIn my case, it prints `?@825B`. It's important to test it with cyrillic or something more obscure, as `00` in ASCII characters and similar will be written as `NULL`s on the terminal, thus not displayed.\r\n\r\nAs you can expect, this issue also affects OS X.\r\n\r\nThank you in advance for looking into this issue.","Url":"https://github.com/dotnet/corefx/issues/38141","RelatedDescription":"Open issue \"Changing console's OutputEncoding on linux to unicode generates garbage\" (#38141)"},{"Id":"451015795","IsPullRequest":true,"CreatedAt":"2019-06-01T19:27:51","Actor":"stephentoub","Number":"38127","RawContent":null,"Title":"Change use of AllowRenegotiation in HttpConnectionPool","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/35239\r\n\r\nPutting this up as a PR in case we decide to go ahead with this as the fix.\r\n\r\ncc: @davidsh, @wfurt, @bartonjs, @GrabYourPitchforks, @krwq, @geoffkizer ","Url":"https://github.com/dotnet/corefx/pull/38127","RelatedDescription":"Closed or merged PR \"Change use of AllowRenegotiation in HttpConnectionPool\" (#38127)"},{"Id":"451085633","IsPullRequest":true,"CreatedAt":"2019-06-01T13:44:25","Actor":"stephentoub","Number":"38138","RawContent":null,"Title":"Fix downlevel build-break in System.Net.WebSockets.WebSocketProtocol","State":"closed","Body":"cc: @ericstj, @scalablecory ","Url":"https://github.com/dotnet/corefx/pull/38138","RelatedDescription":"Closed or merged PR \"Fix downlevel build-break in System.Net.WebSockets.WebSocketProtocol\" (#38138)"},{"Id":"451081435","IsPullRequest":true,"CreatedAt":"2019-06-01T13:30:48","Actor":"dotnet-maestro[bot]","Number":"38136","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190531.2\r\n- **Date Produced**: 6/1/2019 12:42 AM\r\n- **Commit**: 436debb93c390e144f9c25b5d1922ac7780745f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview7.19281.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19281.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19281.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38136","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#38136)"},{"Id":"451065198","IsPullRequest":true,"CreatedAt":"2019-06-01T09:16:59","Actor":"MarcoRossignoli","Number":"38133","RawContent":null,"Title":"Ignore indexer properties","State":"open","Body":"closes https://github.com/dotnet/corefx/issues/38131\r\n\r\ncc: @ahsonkhan @steveharter ","Url":"https://github.com/dotnet/corefx/pull/38133","RelatedDescription":"Open PR \"Ignore indexer properties\" (#38133)"},{"Id":"451037793","IsPullRequest":false,"CreatedAt":"2019-06-01T03:12:59","Actor":"ahsonkhan","Number":"38131","RawContent":null,"Title":"JsonSerializer does not ignore or gracefully fail when serializing a class with a public indexer.","State":"open","Body":"**Sample repro:**\r\n```C#\r\npublic class IndexerTest\r\n{\r\n    int _index = 0;\r\n\r\n    public int this[int index]\r\n    {\r\n        get => _index;\r\n        set\r\n        {\r\n            _index = value;\r\n        }\r\n    }\r\n}\r\n\r\n[Fact]\r\npublic static void ClassWithIndexerTest()\r\n{\r\n    var foo = new IndexerTest();\r\n\r\n    // Json.NET behavior:\r\n    Assert.Equal(\"{}\", JsonConvert.SerializeObject(foo));\r\n\r\n    // Expected, something like the following OR a meaningful error:\r\n    Assert.Equal(\"{}\", JsonSerializer.ToString(foo));\r\n}\r\n```\r\n\r\n**Actual behavior:**\r\n```text\r\nSystem.Text.Json.Serialization.Tests.StreamTests.ClassWithIndexerTest [FAIL]\r\n        System.ArgumentException : Cannot bind to the target method because its signature is not compatible with that of the delegate type.\r\n        Stack Trace:\r\n          /_/src/System.Private.CoreLib/src/System/Delegate.CoreCLR.cs(338,0): at System.Delegate.CreateDelegate(Type type, MethodInfo method, Boolean throwOnBindFailure)\r\n          /_/src/System.Private.CoreLib/shared/System/Delegate.cs(42,0): at System.Delegate.CreateDelegate(Type type, MethodInfo method)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\MemberAccessor.cs(72,0): at System.Text.Json.Serialization.MemberAccessor.CreateDelegate[TDelegate](MethodInfo methodInfo)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\MemberAccessor.cs(40,0): at System.Text.Json.Serialization.MemberAccessor.CreatePropertyGetter[TClass,TProperty](PropertyInfo propertyInfo)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonPropertyInfoCommon.cs(39,0): at System.Text.Json.Serialization.JsonPropertyInfoCommon`3.Initialize(Type parentClassType, Type declaredPropertyType, Type runtimePropertyType, PropertyInfo propertyInfo, Type elementType, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonClassInfo.AddProperty.cs(93,0): at System.Text.Json.Serialization.JsonClassInfo.CreateProperty(Type declaredPropertyType, Type runtimePropertyType, PropertyInfo propertyInfo, Type parentClassType, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonClassInfo.AddProperty.cs(26,0): at System.Text.Json.Serialization.JsonClassInfo.AddProperty(Type propertyType, PropertyInfo propertyInfo, Type classType, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonClassInfo.cs(104,0): at System.Text.Json.Serialization.JsonClassInfo..ctor(Type type, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializerOptions.cs(281,0): at System.Text.Json.Serialization.JsonSerializerOptions.GetOrAddClass(Type classType)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\WriteStackFrame.cs(45,0): at System.Text.Json.Serialization.WriteStackFrame.Initialize(Type type, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Write.Helpers.cs(112,0): at System.Text.Json.Serialization.JsonSerializer.WriteCore(PooledByteBufferWriter output, Object value, Type type, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Write.Helpers.cs(86,0): at System.Text.Json.Serialization.JsonSerializer.WriteCoreString(Object value, Type type, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Write.String.cs(44,0): at System.Text.Json.Serialization.JsonSerializer.ToStringInternal(Object value, Type type, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Write.String.cs(21,0): at System.Text.Json.Serialization.JsonSerializer.ToString[TValue](TValue value, JsonSerializerOptions options)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\tests\\Serialization\\Stream.WriteTests.cs(43,0): at System.Text.Json.Serialization.Tests.StreamTests.ClassWithIndexerTest()\r\n```\r\n\r\ncc @JeremyKuhne, @steveharter, @buyaa-n  ","Url":"https://github.com/dotnet/corefx/issues/38131","RelatedDescription":"Open issue \"JsonSerializer does not ignore or gracefully fail when serializing a class with a public indexer.\" (#38131)"},{"Id":"451021155","IsPullRequest":true,"CreatedAt":"2019-06-01T00:12:12","Actor":"baulig","Number":"38129","RawContent":null,"Title":"HttpClient.SendAsync() should not attempt to read response body on a HEAD or PUT request.","State":"open","Body":"When using `HttpClient.SendAsync()` to issue a `HEAD` request, we shouldn't attempt to allocate a buffer for the return content regardless of the `HttpCompletionOption` (because `ResponseContentRead` is the default).\r\n\r\nThe problem is that even though the server won't send any response, the `Content-Length` could be quite large, so we would unnecessarily allocate a huge buffer.  Furthermore, you even get an exception if the length is above 2 GB (`HttpContent.MaxBufferSize` is `int.MaxValue`).\r\n\r\nWe have a regression in Mono about this: https://github.com/mono/mono/issues/14214.\r\n\r\nI have investigated this and what's happening is that when using `FinishSendAsyncBuffered()`, the `response.Content` is an instance of `HttpConnection.HttpConnectionResponseContent`, so `response.Content.LoadIntoBufferAsync()` is called.\r\n\r\nThe then calls `CreateMemoryStream(maxBufferSize, out error)`, the `Headers.ContentLength` is (in our example 2167849215) larger than `int.MaxValue` and it throws.  But even it it were smaller, we'd still allocate a potentially huge buffer for no reason.","Url":"https://github.com/dotnet/corefx/pull/38129","RelatedDescription":"Open PR \"HttpClient.SendAsync() should not attempt to read response body on a HEAD or PUT request.\" (#38129)"},{"Id":"451020725","IsPullRequest":true,"CreatedAt":"2019-06-01T00:09:14","Actor":"safern","Number":"38128","RawContent":null,"Title":"Add nullable annotations to System.Collections ref assembly","State":"open","Body":"cc: @dotnet/nullablefc @jkotas @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/38128","RelatedDescription":"Open PR \"Add nullable annotations to System.Collections ref assembly\" (#38128)"},{"Id":"450995349","IsPullRequest":true,"CreatedAt":"2019-05-31T23:17:58","Actor":"wtgodbe","Number":"38125","RawContent":null,"Title":"Merge master into release/3.0","State":"closed","Body":"Hail-mary attempt to kickstart the CI. Duplicate of https://github.com/dotnet/corefx/pull/38116","Url":"https://github.com/dotnet/corefx/pull/38125","RelatedDescription":"Closed or merged PR \"Merge master into release/3.0\" (#38125)"},{"Id":"451012621","IsPullRequest":true,"CreatedAt":"2019-05-31T23:17:56","Actor":"dotnet-maestro[bot]","Number":"38126","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/standard","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 11:05 PM\r\n- **Commit**: 034dbc3c88aa1663fbbc6a22a3563c8a2c99d604\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19281.5\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38126","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/standard\" (#38126)"},{"Id":"450979970","IsPullRequest":true,"CreatedAt":"2019-05-31T22:34:22","Actor":"JeremyKuhne","Number":"38124","RawContent":null,"Title":"Fix mutating static issue","State":"closed","Body":"The default options static was getting mutated. Moving to ReadStack which doesn't have this issue.\r\n\r\nFixes #38092 ","Url":"https://github.com/dotnet/corefx/pull/38124","RelatedDescription":"Closed or merged PR \"Fix mutating static issue\" (#38124)"},{"Id":"450972015","IsPullRequest":true,"CreatedAt":"2019-05-31T21:03:02","Actor":"JeremyKuhne","Number":"38123","RawContent":null,"Title":"There have been CI failures for the core json serializer write test. …","State":"closed","Body":"…Narrowing down the exclusion until we figure out what is happening for the reported failures as a blanket exclusion significantly cuts our coverage.","Url":"https://github.com/dotnet/corefx/pull/38123","RelatedDescription":"Closed or merged PR \"There have been CI failures for the core json serializer write test. …\" (#38123)"},{"Id":"451024669","IsPullRequest":false,"CreatedAt":"2019-05-31T06:51:59","Actor":"RussKie","Number":"38130","RawContent":null,"Title":"The name 'fontFamily' and 'fontSize' do not exist in the current context","State":"open","Body":"* .NET Core Version: \r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n* Have you experienced this same bug with .NET Framework?: **No**\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nI speculate, but it looks like a debugger visualiser for `Font` may be broken - it expect `familyFont` and `fontSize` which are absent.\r\nI don't believe it is a WinForms issue per se, but I was unable to trace the source of the issue.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nWhile testing dotnet/winforms#656 I observed the following:\r\n![image](https://user-images.githubusercontent.com/4403806/58685493-48824580-83bf-11e9-8acd-273552e7f372.png)\r\n\r\nCalling `ToString()` produces the expected result:\r\n![image](https://user-images.githubusercontent.com/4403806/58686837-4ae69e80-83c3-11e9-94b2-d3ff19849d44.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe debugger should correct display the font name.\r\n\r\n**Minimal repro:**\r\n\r\n1. Set a breakpoint in `Font_SetWithHandler_CallsFontChanged` \r\n2. Debug the test\r\n3. Check the value of `SystemFonts.MenuFont`\r\n","Url":"https://github.com/dotnet/corefx/issues/38130","RelatedDescription":"Open issue \"The name 'fontFamily' and 'fontSize' do not exist in the current context\" (#38130)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"451029434","IsPullRequest":false,"CreatedAt":"2019-06-03T02:32:39","Actor":"amcasey","Number":"36111","RawContent":null,"Title":"FAR crashes ServiceHub.RoslynCodeAnalysisService32.exe","State":"closed","Body":"**Version Used**: eb082c8f9afb24b196d634adc3844de72af65259\r\n\r\n**Steps to Reproduce**: Link to internal repo available upon request\r\n\r\n**Expected Behavior**: FAR terminates\r\n\r\n**Actual Behavior**: Gold bar indicates external process has crashed and FAR progress indicator loops forever\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.Contract.ThrowIfNull<System.__Canon>(System.__Canon value, string message) Line 19\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.VerifyForwardedTypes(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol> equivalentTypesWithDifferingAssemblies, Microsoft.CodeAnalysis.Compilation compilation, System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.INamedTypeSymbol> verifiedKeys, bool isSearchSymbolCompilation) Line 530\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.VerifyForwardedTypes(System.Collections.Generic.Dictionary<Microsoft.CodeAnalysis.INamedTypeSymbol, Microsoft.CodeAnalysis.INamedTypeSymbol> equivalentTypesWithDifferingAssemblies, Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 519\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.OriginalSymbolsMatchCore(Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 468\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.OriginalSymbolsMatch(Microsoft.CodeAnalysis.ISymbol searchSymbol, Microsoft.CodeAnalysis.ISymbol symbolToMatch, Microsoft.CodeAnalysis.Solution solution, Microsoft.CodeAnalysis.Compilation searchSymbolCompilation, Microsoft.CodeAnalysis.Compilation symbolToMatchCompilation, System.Threading.CancellationToken cancellationToken) Line 395\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.FindImplementationsForInterfaceMemberAsync.AnonymousMethod__1(Microsoft.CodeAnalysis.ISymbol m) Line 178\tC#\r\n \tSystem.Collections.Immutable.dll!System.Linq.ImmutableArrayExtensions.FirstOrDefault<Microsoft.CodeAnalysis.ISymbol>(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.ISymbol> immutableArray, System.Func<Microsoft.CodeAnalysis.ISymbol, bool> predicate) Line 405\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Shared.Extensions.ITypeSymbolExtensions.FindImplementationsForInterfaceMemberAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.ITypeSymbol> typeSymbolAndProjectId, Microsoft.CodeAnalysis.ISymbol interfaceMember, Microsoft.CodeAnalysis.Solution solution, System.Threading.CancellationToken cancellationToken) Line 213\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementationsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, System.Threading.CancellationToken cancellationToken) Line 250\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractMethodOrPropertyOrEventSymbolReferenceFinder<Microsoft.CodeAnalysis.IMethodSymbol>.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.IMethodSymbol> symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 33\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.PropertyAccessorSymbolReferenceFinder.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId<Microsoft.CodeAnalysis.IMethodSymbol> symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 23\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.Finders.AbstractReferenceFinder<Microsoft.CodeAnalysis.IMethodSymbol>.DetermineCascadedSymbolsAsync(Microsoft.CodeAnalysis.FindSymbols.SymbolAndProjectId symbolAndProjectId, Microsoft.CodeAnalysis.Solution solution, System.Collections.Immutable.IImmutableSet<Microsoft.CodeAnalysis.Project> projects, Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchOptions options, System.Threading.CancellationToken cancellationToken) Line 749\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.DetermineAllSymbolsCoreAsync.AnonymousMethod__0() Line 136\tC#\r\n \tmscorlib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.(ref Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.<>c__DisplayClass21_1.<<DetermineAllSymbolsCoreAsync>b__0>d stateMachine) Line 316\tC#\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.FindSymbols.FindReferencesSearchEngine.DetermineAllSymbolsCoreAsync.AnonymousMethod__0()\tUnknown\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/36111","RelatedDescription":"Closed issue \"FAR crashes ServiceHub.RoslynCodeAnalysisService32.exe\" (#36111)"},{"Id":"451233870","IsPullRequest":true,"CreatedAt":"2019-06-02T20:54:16","Actor":"CyrusNajmabadi","Number":"36125","RawContent":null,"Title":"Fix bug with parsing a range expression.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36122\r\n\r\nNote: i believe this is a breaking change (if ranges have shipped).  That's because you *technically* could have written something like this before:\r\n\r\n```c#\r\nstruct Whatever\r\n{\r\n     public static explicit operator Whatever(Range r) => ...;\r\n}\r\n\r\n//\r\n\r\n(Whatever)..a\r\n```\r\n\r\nPreviously, this would make a range, but then cast it to the Whatever type.  Now, this will properly think this is not a cast, changing the meaning to have the `(Whatever)` be the lower bound of the range.  I believe this is correct based on a reading of the spec (as well as beter matching a user's intuition):\r\n\r\nSpecifically:\r\n\r\n> To resolve cast_expression ambiguities, the following rule exists: A sequence of one or more tokens (White space) enclosed in parentheses is considered the start of a cast_expression only if at least one of the following are true:\r\n> \r\n> 1. ~not applicable~\r\n> 2. The sequence of tokens is correct grammar for a type, and the token immediately following the closing parentheses is the token \"~\", the token \"!\", the token \"(\", an identifier (Unicode character escape sequences), a literal (Literals), or any keyword (Keywords) except as and is.\r\n\r\nSince `..` is none of those tokens, this should not be a cast expression.\r\n\r\nNow, if ranges are still in preview, then this is definitely safe to just fix right now.  If it's shipped, you'll have to make a breaking change call.  Personally, i think the risk is tiny so i think it's worth doing.","Url":"https://github.com/dotnet/roslyn/pull/36125","RelatedDescription":"Open PR \"Fix bug with parsing a range expression.\" (#36125)"},{"Id":"451230998","IsPullRequest":true,"CreatedAt":"2019-06-02T20:22:31","Actor":"CyrusNajmabadi","Number":"36124","RawContent":null,"Title":"Don't offer 'convert if to conditional' if it crosses a preprocessor directive.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36117\r\n\r\nThe original code actually had a preprocessor-directive check.  But the check was a little too narrow.  This PR expands the check to handle the broader case.  I also used this as an opportunity to unify a bunch of duplicate C#/VB code that was written prior to the great syntax unification.","Url":"https://github.com/dotnet/roslyn/pull/36124","RelatedDescription":"Open PR \"Don't offer 'convert if to conditional' if it crosses a preprocessor directive.\" (#36124)"},{"Id":"451230627","IsPullRequest":false,"CreatedAt":"2019-06-02T20:18:43","Actor":"CyrusNajmabadi","Number":"36123","RawContent":null,"Title":"New test methods are not run until i restart VS","State":"open","Body":"I've been noticing this a while, but haven't gotten around to filing this until now.  For reasons i cannot figure out, the test-runner in VS never wants to run tests i've just added.  For example, i added this test:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/58766842-82c32280-8538-11e9-9707-503797fbc24c.png)\r\n\r\nThe test then shows up in the test explorer:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/58766849-8f477b00-8538-11e9-9f91-e2edcb68d7ea.png)\r\n\r\nBut no matter what i do, i cannot get any sort of test run to actually execute it.  Sayng \"run test\" in the method body doesn't work.   Right clicking on the test in the explorer and trying to run it doesn't work.\r\n\r\nThe output shows this:\r\n\r\n```\r\n[6/2/2019 1:14:14.794 PM Informational] ========== Run finished: 122 tests run (0:00:30.7122483) ==========\r\n[6/2/2019 1:16:12.582 PM Informational] Executing test method: Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.UseConditionalExpression.UseConditionalExpressionForReturnTests.TestMissingWhenCrossingPreprocessorDirective\r\n[6/2/2019 1:16:12.837 PM Informational] ---------- Run started ----------\r\n[6/2/2019 1:16:13.935 PM Warning] Test run will use DLL(s) built for framework .NETFramework,Version=v4.5 and platform X86. Following DLL(s) do not match framework/platform settings.\r\nMicrosoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests.dll is built for Framework 4.7.2 and Platform AnyCPU.\r\nGo to http://go.microsoft.com/fwlink/?LinkID=236877&clcid=0x409 for more details on managing these settings.\r\n\r\n[6/2/2019 1:16:14.555 PM Informational] [xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (32-bit Desktop .NET 4.0.30319.42000)\r\n[6/2/2019 1:16:15.245 PM Informational] [xUnit.net 00:00:00.69]   Discovering: Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\r\n[6/2/2019 1:16:19.553 PM Informational] [xUnit.net 00:00:05.00]   Discovered:  Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\r\n[6/2/2019 1:16:19.638 PM Informational] [xUnit.net 00:00:05.08]   Starting:    Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\r\n[6/2/2019 1:16:23.650 PM Informational] [xUnit.net 00:00:09.09]   Finished:    Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.UnitTests\r\n[6/2/2019 1:16:23.832 PM Informational] [xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.1-pre.build.4059 (32-bit Universal Windows)\r\n[6/2/2019 1:16:24.121 PM Informational] ========== Run finished: 1 tests run (0:00:11.2767712) ==========\r\n```\r\n\r\nAnd, in the end i see:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/58766866-d59cda00-8538-11e9-969b-0d68d8a8954b.png)\r\n\r\nBasically, no matter what i do, *new* test methods just do not get picked up by the *execution* engine, though they are picked up by the UI.  \r\n\r\nIf i close and open VS, then things are fine and these tests are now run.\r\n\r\nIt's super annoying (esp. given how long it takes to restart VS).","Url":"https://github.com/dotnet/roslyn/issues/36123","RelatedDescription":"Open issue \"New test methods are not run until i restart VS\" (#36123)"},{"Id":"451227701","IsPullRequest":false,"CreatedAt":"2019-06-02T19:48:59","Actor":"Korporal","Number":"36122","RawContent":null,"Title":"Apparent C# 8 bug in Range implementation","State":"open","Body":"**C# 8 beta - Visual Studio 16.1.1**: \r\n\r\n\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\n        public static T[] FromStart<T>(this T[] Source, int Count, int Offset = 0)\r\n        {\r\n            return Source[(Offset)..(Offset + Count)];\r\n        }\r\n```\r\n\r\n\r\n**Expected Behavior**:\r\n\r\nCompiler treats this the same as:\r\n\r\n```cs\r\n        public static T[] FromStart<T>(this T[] Source, int Count, int Offset = 0)\r\n        {\r\n            return Source[Offset..(Offset + Count)];\r\n        }\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nComplains and issues CS0118.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36122","RelatedDescription":"Open issue \"Apparent C# 8 bug in Range implementation\" (#36122)"},{"Id":"451207090","IsPullRequest":false,"CreatedAt":"2019-06-02T16:03:34","Actor":"danmosemsft","Number":"36121","RawContent":null,"Title":"Regular method missing return type should not be assumed to be a static constructor","State":"open","Body":"**Version Used**: \r\n 04252e from master, 21 May 19\r\n\r\n**Steps to Reproduce**:\r\n```c#\r\nclass X\r\n{\r\n    private static Foo(int i) {}\r\n}\r\n```\r\nhttps://sharplab.io/#v2:EYLgtghgzgLgpgJwDQBMQGoA+ABATAAgA0BYAKAG8z9r8AHBASwDcJ59sBGANnwDEB7fgAoGAOxj4GASnzkAvmTlA===\r\n\r\n**Expected Behavior**:\r\n```\r\nerror CS1520: Method must have a return type\r\n```\r\n\r\n**Actual Behavior**:\r\n```\r\nerror CS0515: 'X.X(int)': access modifiers are not allowed on static constructors\r\nerror CS1520: Method must have a return type\r\nerror CS0132: 'X.X(int)': a static constructor must be parameterless\r\n```\r\n\r\nIn this case `Foo` is unlikely to be a failed attempt at a static constructor because (1) it has the wrong name (2) it has parameters (3) it has an access modifier. It is vastly more likely I just forgot the return type on a regular method.\r\n\r\nIf the method name does not match the type name, the compiler should not give diagnostics for static constructors. ","Url":"https://github.com/dotnet/roslyn/issues/36121","RelatedDescription":"Open issue \"Regular method missing return type should not be assumed to be a static constructor\" (#36121)"},{"Id":"451201796","IsPullRequest":false,"CreatedAt":"2019-06-02T15:07:53","Actor":"vsfeedback","Number":"36120","RawContent":null,"Title":"Support Go to Definition in Object Browser for imported assemblies","State":"open","Body":"VSF_TYPE_MARKDOWNCurrently, the `Go to Definition` command only works in `Object Browser` for the code in the solution. Symbols coming from external assemblies, like e.g. NuGet packages, do not support the `Go to Definition` command.\n\nHowever, if I use and imported symbol in code, the C# editor will offer me the `Go to Definition` command and either show the API surface from the Assembly metadata, decompile the assembly and show the decompiled source, or use SourceLink to show the source code from an external repository.\n\nIt would be great if the `Object Browser` would offer the same capabilities and behaviour for `Go to Definition` as the code editor.\n\n### Example\n\nConsidering the following C# source:\n\n``` csharp\nnamespace MyNamespace\n{\n    class Class1\n    {\n        void Foo()\n        {\n            _ = Newtonsoft.Json.JsonConvert.Null;\n        }\n    }\n}\n```\n\nIf I place my cursor on `JsonConvert`, the context menu offers me the `Go to Definition` command which (because of my current settings) shows me the decompiled source of `JsonConvert` class in the `Newtonsoft.Json` assembly that I have referenced as a ` PackageReference` in my project file.\n\nWhen opening `Object Browser` and setting `Browse` to `My Solution`, the referenced `Newtonsoft.Json` assembly is listed, but the `Go to Definition` command does not appear in the context menu of any of its containing types nor on any symbol defined on a type.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/589562/support-go-to-definition-in-object-browser-for-imp.html\nVSTS ticketId: 902393_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/30/2019, 08:16 PM (2 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36120","RelatedDescription":"Open issue \"Support Go to Definition in Object Browser for imported assemblies\" (#36120)"},{"Id":"451184043","IsPullRequest":true,"CreatedAt":"2019-06-02T12:00:45","Actor":"dotnet-bot","Number":"36119","RawContent":null,"Title":"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into release/dev16.2-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36119","RelatedDescription":"Open PR \"Merge release/dev16.2-preview2 to release/dev16.2-preview2-vs-deps\" (#36119)"},{"Id":"451184005","IsPullRequest":true,"CreatedAt":"2019-06-02T12:00:20","Actor":"dotnet-bot","Number":"36118","RawContent":null,"Title":"Merge release/dev16.2-preview2 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview2 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.2-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36118","RelatedDescription":"Open PR \"Merge release/dev16.2-preview2 to master\" (#36118)"},{"Id":"451175079","IsPullRequest":false,"CreatedAt":"2019-06-02T10:09:48","Actor":"RayKoopa","Number":"36117","RawContent":null,"Title":"\"if statement can be simplified\" does not respect preprocessor","State":"open","Body":"**Version Used**: \r\nVS 2019 16.1.1 (cannot test in Beta at the moment as it broke compiling my main project :( ).\r\n\r\n**Steps to Reproduce**:\r\n1. Create sample C# project with the following Main method:\r\n```cs\r\nprivate static int Main()\r\n{\r\n    bool check = true/*of course, some actual calculation would be done here*/;\r\n#if DEBUG\r\n    if (check)\r\n        return 3;\r\n#endif\r\n    return 2;\r\n}\r\n```\r\nThis code has the requirements of returning 3 in DEBUG builds if `check` is `true`, otherwise 2. In non-DEBUG builds, it always returns 2.\r\n\r\n**Expected Behavior**:\r\nThe if statement cannot be simplified due to the constraints put on it by the preprocessor `#if DEBUG`.\r\n\r\n**Actual Behavior**:\r\nHowever, VS suggests **IDE0046: 'if' statement can be simplified** to create the following:\r\n```cs\r\nprivate static int Main()\r\n{\r\n    bool check = true;\r\n#if DEBUG\r\n    return check ? 3 : 2;\r\n\r\n#endif\r\n}\r\n```\r\nThis breaks the logic of any non-DEBUG build as the return is completely gone from them (it would even break compilation for normal methods requiring a return). The above requirements are not met anymore.","Url":"https://github.com/dotnet/roslyn/issues/36117","RelatedDescription":"Open issue \"\"if statement can be simplified\" does not respect preprocessor\" (#36117)"},{"Id":"451097730","IsPullRequest":true,"CreatedAt":"2019-06-02T08:29:38","Actor":"mavasani","Number":"36112","RawContent":null,"Title":"Port DisposeAnalyzers to release/dev16.2-preview2","State":"closed","Body":"Ports the following PRs from master to release/dev16.2-preview2:\r\n1. https://github.com/dotnet/roslyn/pull/35248\r\n2. https://github.com/dotnet/roslyn/pull/36097","Url":"https://github.com/dotnet/roslyn/pull/36112","RelatedDescription":"Closed or merged PR \"Port DisposeAnalyzers to release/dev16.2-preview2\" (#36112)"},{"Id":"451136691","IsPullRequest":true,"CreatedAt":"2019-06-02T00:00:52","Actor":"dotnet-bot","Number":"36116","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36116","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#36116)"},{"Id":"451135993","IsPullRequest":true,"CreatedAt":"2019-06-01T23:47:54","Actor":"cston","Number":"36115","RawContent":null,"Title":"Enable some VB tests on CoreCLR","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36115","RelatedDescription":"Open PR \"Enable some VB tests on CoreCLR\" (#36115)"},{"Id":"451132929","IsPullRequest":false,"CreatedAt":"2019-06-01T23:03:42","Actor":"sharwell","Number":"36114","RawContent":null,"Title":"Manual allocation performance testing: AnalyzerRunner for DiagnosticAnalyzerService on Roslyn.sln","State":"open","Body":"**Version Used**: 2136892a80c2b4460338f19088d1915cc1b0fdc6\r\n\r\n### Scenario details\r\n\r\nThis test executes the DiagnosticAnalyzerService with the following configuration:\r\n\r\n* Database persistence is enabled (SQLite at this time)\r\n* The database does not exist in advance\r\n* Full solution analysis is disabled for both C# and Visual Basic\r\n\r\n### Steps to run the test\r\n\r\n1. Delete the **%TEMP%\\\\RoslynTests\\\\AnalyzerRunner\\\\temp-db** folder (if it exists)\r\n\r\n1. Run AnalyzerRunner in release mode with the following command line (this is the **IIncrementalAnalyzer DiagnosticAnalyzerService** profile)\r\n\r\n    > $(SolutionDir)artifacts\\\\bin\\\\AnalyzerRunner\\\\$(Configuration)\\\\net472\\\\ $(SolutionDir)Roslyn.sln /ia Diagnostic /persist /profileroot $(SolutionDir)artifacts\\\\profileRoot\r\n\r\n1. Start PerfView GC-only profiling during the 5 second delay before project analysis starts\r\n    * Make sure to use a circular buffer large enough to hold the complete result data\r\n\r\n1. Stop profiling when the AnalyzerRunner completes","Url":"https://github.com/dotnet/roslyn/issues/36114","RelatedDescription":"Open issue \"Manual allocation performance testing: AnalyzerRunner for DiagnosticAnalyzerService on Roslyn.sln\" (#36114)"},{"Id":"451129226","IsPullRequest":true,"CreatedAt":"2019-06-01T22:07:12","Actor":"sharwell","Number":"36113","RawContent":null,"Title":"Update AnalyzerRunner to support IIncrementalAnalyzer testing","State":"open","Body":"This is a supporting change for upcoming profile-based optimization of SQLite and the incremental analyzer infrastructure for VS for Mac scenarios.\r\n\r\n/cc @Therzok ","Url":"https://github.com/dotnet/roslyn/pull/36113","RelatedDescription":"Open PR \"Update AnalyzerRunner to support IIncrementalAnalyzer testing\" (#36113)"},{"Id":"450994669","IsPullRequest":true,"CreatedAt":"2019-06-01T17:04:01","Actor":"mavasani","Number":"36097","RawContent":null,"Title":"Upgrade Microsoft.CodeAnalysis.FlowAnalysis.Utilities PackageReference to latest version","State":"closed","Body":"Additionally, we do not mark the package reference to in Features.csproj as PrivateAsset as this leads to the assembly not getting included in the Features NuGet package and causes Omnisharp's analyzer execution to throw missing dependency assembly load errors.","Url":"https://github.com/dotnet/roslyn/pull/36097","RelatedDescription":"Closed or merged PR \"Upgrade Microsoft.CodeAnalysis.FlowAnalysis.Utilities PackageReference to latest version\" (#36097)"},{"Id":"451022957","IsPullRequest":false,"CreatedAt":"2019-06-01T00:25:52","Actor":"gafter","Number":"36110","RawContent":null,"Title":"Should warn when calling a method that returns a [MaybeNull] unconstrained type parameter","State":"open","Body":"When a method is declared to return `[MaybeNull] T`\r\n``` c#\r\nclass X<T>\r\n{\r\n    [MaybeNull] T FirstOrDefault();\r\n}\r\n```\r\nAnd is instantiated where `T` remains unconstrained\r\n``` c#\r\nclass Y<U> : X<U>\r\n{\r\n    T M()\r\n    {\r\n        return base.FirstOrDefault(); // ?\r\n    }\r\n}\r\n```\r\nthere should be a warning at the callsite just as there would be a warning for writing `default(U)`","Url":"https://github.com/dotnet/roslyn/issues/36110","RelatedDescription":"Open issue \"Should warn when calling a method that returns a [MaybeNull] unconstrained type parameter\" (#36110)"},{"Id":"451021541","IsPullRequest":true,"CreatedAt":"2019-06-01T00:14:48","Actor":"AlekseyTs","Number":"36109","RawContent":null,"Title":"Add initial support for 'notnull' generic type constraint.","State":"open","Body":"See https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md\r\nAlso fixes #36005.","Url":"https://github.com/dotnet/roslyn/pull/36109","RelatedDescription":"Open PR \"Add initial support for 'notnull' generic type constraint.\" (#36109)"},{"Id":"451021130","IsPullRequest":true,"CreatedAt":"2019-06-01T00:12:05","Actor":"JoeRobich","Number":"36108","RawContent":null,"Title":"Move Misplaced Using diagnostic down to the feature layer","State":"open","Body":"Other codestyle diagnostics are in the Feature layer. This one was added to the wrong place.","Url":"https://github.com/dotnet/roslyn/pull/36108","RelatedDescription":"Open PR \"Move Misplaced Using diagnostic down to the feature layer\" (#36108)"},{"Id":"451019413","IsPullRequest":true,"CreatedAt":"2019-06-01T00:00:45","Actor":"dotnet-bot","Number":"36107","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36107","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36107)"},{"Id":"451017561","IsPullRequest":true,"CreatedAt":"2019-05-31T23:48:05","Actor":"JoeRobich","Number":"36106","RawContent":null,"Title":"Create new solution snapshot following option changes","State":"open","Body":"CodeStyle analyzers were not reanalyzing following Options being changed in Tool > Options.","Url":"https://github.com/dotnet/roslyn/pull/36106","RelatedDescription":"Open PR \"Create new solution snapshot following option changes\" (#36106)"},{"Id":"451015027","IsPullRequest":true,"CreatedAt":"2019-05-31T23:32:18","Actor":"cston","Number":"36105","RawContent":null,"Title":"Remove NonNullTypesOn/Off helper methods","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36105","RelatedDescription":"Open PR \"Remove NonNullTypesOn/Off helper methods\" (#36105)"},{"Id":"451012554","IsPullRequest":false,"CreatedAt":"2019-05-31T23:17:35","Actor":"vsfeedback","Number":"36104","RawContent":null,"Title":"Export settings not export all text editor code styles","State":"open","Body":"VSF_TYPE_MARKDOWNso there are a lot of parameters in **Options &gt; Text Editor &gt; C# &gt; Code Style &gt; General** that are not exported to **Export Setting** file. i installed a fresh not synced VS instance and exported the setting environment and imported to a modified VS instance and i noticed that not all of code styles are changes, after furthure investigating i realized that not all of the code style rules exported in vssettings file, you can simply test this with below steps:\n\n1- export your vs setting (File 1)\n2- change rule **Prefer auto properties** to **Warning**\n3- export your vs setting (File 2)\n4- examinig the File 1 and 2 with a comparer and relize those are exactly the same\n\nthis is ok with top like 5 rules so i sure it should be working but i'm sure some of them are not working, not sure how many but some of them not exported in vssettings file.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/536234/export-settings-not-export-all-text-editor-code-st.html\nVSTS ticketId: 849141_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/16/2019, 11:43 PM (44 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nRock Li [MSFT] on 4/23/2019, 02:26 AM (38 days ago): <p>Hi Masih, I performed the repro steps you provided that found something interesting:</p><ol>\n<li> Export settings file01 from a fresh VS instance, did not restart VS and change the code style option \"<strong style=\"color:rgba(0, 0, 0, 1);\">Prefer auto properties</strong><span style=\"color:rgba(0, 0, 0, 1);background-color:rgb(255, 255, 255);\"> to </span><strong style=\"color:rgba(0, 0, 0, 1);\">Warning</strong>\", continue to export settings file02.</li><li>Open file01 and file02 by VS, and use command window compare them, almost no difference as picture one shows: </li></ol><p>       </p><p><img id=\"69783\" src=\"https://developercommunity.visualstudio.com/storage/temp/69783-one.png\"></p><p>\t3. Repeat the steps but restart VS every times once the settings changed, the compare has a different result: </p><p><img id=\"69784\" src=\"https://developercommunity.visualstudio.com/storage/temp/69784-two.png\"></p><p>I guess something could not correct reload after you changing the settings, so it was not exported immediately.</p><p>could you try restart VS when you change and export settings? does the issue still repro?</p>\n</ol>\n\nMasih Akbari on 4/23/2019, 04:23 AM (38 days ago): (private comment)\nVisual Studio Feedback System on 4/23/2019, 08:01 PM (37 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nRock Li [MSFT] on 4/23/2019, 08:02 PM (37 days ago): <p>Thanks for taking the time to report this issue to us. We’ve created a bug for this issue as internal tracking. The status on this Developer Community item will be updated as that bug is resolved. Thanks again for your feedback.&nbsp;</p>\nVisual Studio Feedback System on 4/28/2019, 11:24 PM (32 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 4/28/2019, 11:55 PM (32 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36104","RelatedDescription":"Open issue \"Export settings not export all text editor code styles\" (#36104)"},{"Id":"451010154","IsPullRequest":true,"CreatedAt":"2019-05-31T23:03:59","Actor":"chborl","Number":"36103","RawContent":null,"Title":"editor config notice ","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36103","RelatedDescription":"Open PR \"editor config notice \" (#36103)"},{"Id":"451009262","IsPullRequest":false,"CreatedAt":"2019-05-31T22:59:15","Actor":"cston","Number":"36102","RawContent":null,"Title":"Replace BoundDagEvaluation.Equals and GetHashCode with specific method for testing equivalence","State":"open","Body":"`BoundDagEvaluation.Equals(BoundDagEvaluation other)` compares original input and ignores any type evaluations (see https://github.com/dotnet/roslyn/pull/35669). That seems misleading for a general `Equals` method.\r\n\r\nSince the method is only used for testing equivalence, perhaps `Equals(BoundDagEvaluation)` should be renamed (perhaps `IsEquivalentEvaluation`) and the `GetHashCode()` override could be removed.","Url":"https://github.com/dotnet/roslyn/issues/36102","RelatedDescription":"Open issue \"Replace BoundDagEvaluation.Equals and GetHashCode with specific method for testing equivalence\" (#36102)"},{"Id":"451006687","IsPullRequest":false,"CreatedAt":"2019-05-31T22:46:01","Actor":"jasonmalinowski","Number":"36101","RawContent":null,"Title":"There is no API to determine whether we are in a #nullable enable context","State":"open","Body":"If the IDE needs to know if we're in a #nullable enable'd context, there's no API today to do so. This comes up in a bunch of cases: if we're generating code from one file to another and one file has it enabled but the other doesn't, we need to know to drop annotations or add #nullable enable or other things.","Url":"https://github.com/dotnet/roslyn/issues/36101","RelatedDescription":"Open issue \"There is no API to determine whether we are in a #nullable enable context\" (#36101)"},{"Id":"450999951","IsPullRequest":true,"CreatedAt":"2019-05-31T22:14:41","Actor":"ivanbasov","Number":"36100","RawContent":null,"Title":"support retries in integration tests","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36100","RelatedDescription":"Open PR \"support retries in integration tests\" (#36100)"},{"Id":"450995742","IsPullRequest":false,"CreatedAt":"2019-05-31T21:57:28","Actor":"jasonmalinowski","Number":"36099","RawContent":null,"Title":"Ensure we don't leak wrapped symbols from public Workspace APIs","State":"open","Body":"We have a few APIs on the Workspace level that return ISymbols; we should make sure we always return the unwrapped symbols otherwise we might break third parties.","Url":"https://github.com/dotnet/roslyn/issues/36099","RelatedDescription":"Open issue \"Ensure we don't leak wrapped symbols from public Workspace APIs\" (#36099)"},{"Id":"450994857","IsPullRequest":true,"CreatedAt":"2019-05-31T21:53:51","Actor":"heejaechang","Number":"36098","RawContent":null,"Title":"this is alternative approach to https://github.com/dotnet/roslyn/pull/35571 - moved error and todo list initialization to VS workspace.","State":"open","Body":"basically, this introduce EventListener model and make event listener to be initialized lazily. giving features a way to get out from Workspace constructor. and yet can participate in the event without tight coupling from Workspace.\r\nfixes https://github.com/dotnet/roslyn/issues/35514","Url":"https://github.com/dotnet/roslyn/pull/36098","RelatedDescription":"Open PR \"this is alternative approach to https://github.com/dotnet/roslyn/pull/35571 - moved error and todo list initialization to VS workspace.\" (#36098)"},{"Id":"450991660","IsPullRequest":false,"CreatedAt":"2019-05-31T21:41:15","Actor":"RikkiGibson","Number":"36096","RawContent":null,"Title":"Nullable inference in conditional expressions","State":"open","Body":"```cs\r\n#nullable enable\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        string? x = \"\"42\"\";\r\n        string? y = \"\"43\"\";\r\n        if (x?.Length == 2 ? y?.Length == 2 : y?.Length == 3)\r\n        {\r\n            Console.WriteLine(x.Length); // 1\r\n            Console.WriteLine(y.Length); // warns today, but perhaps shouldn't warn\r\n        }\r\n        else\r\n        {\r\n            Console.WriteLine(x.Length); // 2\r\n            Console.WriteLine(y.Length); // 3\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNote that if `x?.Length == 2` is changed to the constant `true`, only one warning is given: the one marked `// 3` in the sample.","Url":"https://github.com/dotnet/roslyn/issues/36096","RelatedDescription":"Open issue \"Nullable inference in conditional expressions\" (#36096)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"451194717","IsPullRequest":true,"CreatedAt":"2019-06-02T19:30:13","Actor":"Dotnet-GitSync-Bot","Number":"7479","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft","Url":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7479)"},{"Id":"451144350","IsPullRequest":true,"CreatedAt":"2019-06-02T05:00:00","Actor":"Suchiman","Number":"7478","RawContent":null,"Title":"Port GC changes from coreclr - 12","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)","Url":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 12\" (#7478)"},{"Id":"451016904","IsPullRequest":true,"CreatedAt":"2019-06-02T00:51:41","Actor":"Dotnet-GitSync-Bot","Number":"7476","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7476)"},{"Id":"451020527","IsPullRequest":true,"CreatedAt":"2019-06-02T00:50:41","Actor":"Suchiman","Number":"7477","RawContent":null,"Title":"Port GC changes from coreclr - 11","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)","Url":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 11\" (#7477)"},{"Id":"450927985","IsPullRequest":false,"CreatedAt":"2019-05-31T18:31:30","Actor":"VSadov","Number":"7475","RawContent":null,"Title":"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert","State":"open","Body":"\r\nOne result of this is a significant behavior differences between Release and Debug in UWP apps.\r\n\r\nI think coreclr version is more intuitive. We should make corert version to match that.\r\n\r\n=== coreclr:\r\n\r\n```C#\r\nSTDMETHODIMP CLRServicesImpl::GarbageCollect(DWORD dwFlags)\r\n{\r\n    CONTRACTL\r\n    {\r\n        NOTHROW;\r\n        GC_TRIGGERS;\r\n        MODE_PREEMPTIVE;\r\n    }\r\n    CONTRACTL_END;\r\n\r\n    HRESULT hr = S_OK;\r\n    BEGIN_EXTERNAL_ENTRYPOINT(&hr)\r\n    {\r\n        GCX_COOP_THREAD_EXISTS(GET_THREAD());\r\n        if (dwFlags & GC_FOR_APPX_SUSPEND) {\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect(2, true, collection_blocking | collection_optimized);\r\n        }\r\n        else\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect();      unconditional collect\r\n    }\r\n    END_EXTERNAL_ENTRYPOINT;\r\n    return hr;\r\n}\r\n```\r\n\r\n=== corert:\r\n\r\n```C#\r\n        [NativeCallable]\r\n        static int GarbageCollect__STUB(System.IntPtr pComThis, int flags)\r\n        {\r\n            try\r\n            {\r\n                GC.Collect(2, GCCollectionMode.Optimized, /* blocking = */ true);    optimized collect\r\n\r\n                if (InteropEventProvider.IsEnabled())\r\n                    InteropEventProvider.Log.TaskJupiterGarbageCollect();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // If we set IErrorInfo/IRestrictedErrorInfo, Jupiter might leak\r\n                return ex.HResult;\r\n            }\r\n\r\n            return Interop.COM.S_OK;\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7475","RelatedDescription":"Open issue \"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert\" (#7475)"},{"Id":"450547580","IsPullRequest":true,"CreatedAt":"2019-05-31T18:24:33","Actor":"Suchiman","Number":"7473","RawContent":null,"Title":"Port GC changes from coreclr - 10","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7434\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882):**\r\n- https://github.com/dotnet/coreclr/commit/6a1c28f05642ac0420b78f35ad32a00b6aef0488 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73ef3c13c9b710cb04b67a904b098fb196c224c7 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00e7aa00a42debda47a7dbe2b54e924670eaefdd ([already merged](https://github.com/dotnet/corert/pull/4627))\r\n- https://github.com/dotnet/coreclr/commit/5b10f0eb85d8e8ccdcf9b5e38e5dd372e241e24e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7d801aa30e40c6e01536dd0355199842ee5e4c8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/165ffa6a0bb2d8b57e83aa95a395a798ad5f5f4f (manual port)\r\n- https://github.com/dotnet/coreclr/commit/bd3424913138d10f9c4fdb6176fb471e8d1ba1d7 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5b02b0104f3ceba491b7b25fcb4d997e477d2840 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/558f8e99680ab5b6ea9d4796236e12439363657f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0b86feb1d2830cc1de5db16ee86c0998c01ca30a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c (manual port)","Url":"https://github.com/dotnet/corert/pull/7473","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 10\" (#7473)"},{"Id":"450701509","IsPullRequest":true,"CreatedAt":"2019-05-31T13:00:36","Actor":"MichalStrehovsky","Number":"7474","RawContent":null,"Title":"Emit all symbols as global on Windows","State":"closed","Body":"Symbols don't end up in the PDB otherwise and the only things with symbols are methods with debug information and things that have a non-null `_nodeFactory.GetSymbolAlternateName`.\r\n\r\nThis regressed in #7249.","Url":"https://github.com/dotnet/corert/pull/7474","RelatedDescription":"Closed or merged PR \"Emit all symbols as global on Windows\" (#7474)"},{"Id":"450408735","IsPullRequest":true,"CreatedAt":"2019-05-31T04:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7471","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7471","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7471)"},{"Id":"449790158","IsPullRequest":true,"CreatedAt":"2019-05-30T20:47:37","Actor":"trylek","Number":"7465","RawContent":null,"Title":"CPAOT fixes for Linux","State":"closed","Body":"I found out that the R2R I was producing with CPAOT\r\nwas crashing in CoreCLR PAL during memory mapping and\r\nit silently switched over to runtime JIT without any\r\nindications of doing so.\r\n\r\nThe problem is that the relative offset of all section\r\nstart RVA's within a page must match the corresponding\r\nfile offsets. As PEBuilder doesn't support this logic,\r\nI ended up copying a bunch of enumerations from the\r\nrelated CoreFX code and I added logic to patch the\r\nsection headers manually. At some point we might want\r\nto flow some of these changes back to the CoreFX repo.\r\n\r\nI have also moved the machine OS override logic to\r\nR2RPEBuilder for better encapsulation. As a side effect\r\nof the TargetBuilder propagatioin I have fixed code\r\npadding to select the proper instruction on all\r\narchitectures.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7465","RelatedDescription":"Closed or merged PR \"CPAOT fixes for Linux\" (#7465)"},{"Id":"450411333","IsPullRequest":true,"CreatedAt":"2019-05-30T17:09:07","Actor":"MichalStrehovsky","Number":"7472","RawContent":null,"Title":"Selective integration to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7472","RelatedDescription":"Closed or merged PR \"Selective integration to nmirror\" (#7472)"},{"Id":"450353364","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:27","Actor":"MichalStrehovsky","Number":"7469","RawContent":null,"Title":"Enable devirtualization/stackalloc optimization with RyuJIT","State":"closed","Body":"(Implementation for both CPAOT and full AOT, since the non-shared parts are just a couple lines)\r\n\r\nWe've had a TODO for a while that disabled devirtualization on valuetype methods because we didn't have a representation of unboxing thunks in the type system (the result of a devirtualization that lands on a valuetype method is an unboxing thunk).\r\n\r\nWith this, I'm adding an unboxing thunk `MethodDesc` _within the JitInterface only_. Unboxing thunks are weird enough that we don't want them to roam around the whole system, but if they're just something we hand to RyuJIT when needed and convert them back to the real thing when we're done, it's less of a trouble. I'm fully expecting that we're going to see these escaping into the dependency system from time to time, causing bugs. But that's life.\r\n\r\n* Most of the commit is a general purpose `MethodDelegator` class that delegates calls to a different `MethodDesc`.\r\n* We use the `MethodDelegator` within the JitInterface to create a wrapper for non-unboxing methods to represent an unboxing thunk.\r\n* We make it so that the unboxing wrapper is returned from `resolveVirtualMethod` when the result of resolution is a valuetype method.\r\n* We then make it possible for RyuJIT to unwrap it with `getUnboxedEntry`\r\n* We also unwrap it in `getCallInfo` so that it doesn't get into the dependency system.\r\n\r\nFixes #7463.","Url":"https://github.com/dotnet/corert/pull/7469","RelatedDescription":"Closed or merged PR \"Enable devirtualization/stackalloc optimization with RyuJIT\" (#7469)"},{"Id":"449590916","IsPullRequest":false,"CreatedAt":"2019-05-30T16:55:26","Actor":"jkotas","Number":"7463","RawContent":null,"Title":"Missing devirtualization + conversion to stackallocation optimization","State":"closed","Body":"```\r\nusing System;\r\n\r\ninterface IMyInterface\r\n{\r\n    void foo();\r\n}\r\n\r\nstruct MyStruct : IMyInterface\r\n{\r\n    public void foo() { }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Work<T>(T s)\r\n    {\r\n        if (s is IMyInterface) ((IMyInterface)s).foo();\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        for (int i = 0; i < 10000000; i++)\r\n            Work<MyStruct>(default);\r\n        Console.WriteLine(GC.CollectionCount(0));\r\n    }\r\n}\r\n```\r\n\r\n`dotnet publish -c Release -r win-x64`\r\nActual result: 57\r\nExpected result: 0","Url":"https://github.com/dotnet/corert/issues/7463","RelatedDescription":"Closed issue \"Missing devirtualization + conversion to stackallocation optimization\" (#7463)"},{"Id":"450358407","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:17","Actor":"stephentoub","Number":"7470","RawContent":null,"Title":"Expose Environment.TickCount64","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/35499","Url":"https://github.com/dotnet/corert/pull/7470","RelatedDescription":"Closed or merged PR \"Expose Environment.TickCount64\" (#7470)"},{"Id":"449918770","IsPullRequest":true,"CreatedAt":"2019-05-30T12:32:49","Actor":"Dotnet-GitSync-Bot","Number":"7467","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7467","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7467)"},{"Id":"450157595","IsPullRequest":false,"CreatedAt":"2019-05-30T06:47:15","Actor":"lukaszorg","Number":"7468","RawContent":null,"Title":"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error ","State":"open","Body":"Creating an App Package for publication in the store results in the following errors:\r\n\r\nError: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App\r\nError ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.6\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App\r\n\r\nWe are targeting Surface Hub (Creators Update 1703) so we cannot use newer version of microsoft.net.native.compiler.  \r\nWe have found not documented parameter for nutc_driver (/d2threads1) that helps building the solution on local machines. \r\nIs there any way to pass this flag on build agents? \r\nAre there any other workarounds?\r\n","Url":"https://github.com/dotnet/corert/issues/7468","RelatedDescription":"Open issue \"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error \" (#7468)"},{"Id":"449916034","IsPullRequest":true,"CreatedAt":"2019-05-29T20:01:50","Actor":"MichalStrehovsky","Number":"7466","RawContent":null,"Title":"Delete netci.groovy","State":"closed","Body":"Bye Jenkins.","Url":"https://github.com/dotnet/corert/pull/7466","RelatedDescription":"Closed or merged PR \"Delete netci.groovy\" (#7466)"},{"Id":"449601675","IsPullRequest":true,"CreatedAt":"2019-05-29T11:55:19","Actor":"jkotas","Number":"7464","RawContent":null,"Title":"Print descriptive error for GeneratePackageOnBuild","State":"closed","Body":"Fixes #7460","Url":"https://github.com/dotnet/corert/pull/7464","RelatedDescription":"Closed or merged PR \"Print descriptive error for GeneratePackageOnBuild\" (#7464)"},{"Id":"449495977","IsPullRequest":false,"CreatedAt":"2019-05-29T11:55:19","Actor":"timmydo","Number":"7460","RawContent":null,"Title":"Publish native shared library fails because project.deps.json not found","State":"closed","Body":"csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Library</OutputType>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nprogram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    [AttributeUsage(AttributeTargets.Method)]\r\n    public sealed class NativeCallableAttribute : Attribute\r\n    {\r\n        public string EntryPoint;\r\n        public CallingConvention CallingConvention;\r\n        public NativeCallableAttribute() { }\r\n    }\r\n}\r\n\r\nnamespace BlahBlah\r\n{\r\n    using System;\r\n    using System.Runtime.InteropServices;\r\n\r\n    public static class NativeMethods\r\n    {\r\n        [NativeCallable(EntryPoint = \"Blah\", CallingConvention = CallingConvention.StdCall)]\r\n        public static void Blah(IntPtr blah)\r\n        {\r\n        }\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n```\r\nC:\\Users\\timmydo\\source\\repos\\corert1\\corert1\r\nλ  dotnet publish /p:NativeLib=Shared -r win-x64 -c Debug\r\nMicrosoft (R) Build Engine version 16.2.0-preview-19274-01+7708b265e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 758.81 ms for C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj.\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n     Creating library bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.lib and object bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.exp\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012078\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(152,5): error MSB3030: Could not copy the file \"C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\bin\\Debug\\netstandard2.0\\win-x64\\corert1.deps.json\" because it was not found. [C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj]\r\n```\r\n\r\nIt seems the culprit is GeneratePackagesOnBuild. If you remove that, it works.","Url":"https://github.com/dotnet/corert/issues/7460","RelatedDescription":"Closed issue \"Publish native shared library fails because project.deps.json not found\" (#7460)"},{"Id":"449548102","IsPullRequest":true,"CreatedAt":"2019-05-29T04:33:43","Actor":"Dotnet-GitSync-Bot","Number":"7461","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7461","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7461)"},{"Id":"449473749","IsPullRequest":true,"CreatedAt":"2019-05-29T00:44:47","Actor":"Dotnet-GitSync-Bot","Number":"7459","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @marek-safar","Url":"https://github.com/dotnet/corert/pull/7459","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7459)"},{"Id":"449408805","IsPullRequest":true,"CreatedAt":"2019-05-28T20:55:22","Actor":"Dotnet-GitSync-Bot","Number":"7458","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7458","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7458)"},{"Id":"448964820","IsPullRequest":true,"CreatedAt":"2019-05-28T20:55:07","Actor":"jkotas","Number":"7454","RawContent":null,"Title":"Fix superfluous delegate allocations in Unix WaitSubsystem","State":"closed","Body":"Fixes #7452","Url":"https://github.com/dotnet/corert/pull/7454","RelatedDescription":"Closed or merged PR \"Fix superfluous delegate allocations in Unix WaitSubsystem\" (#7454)"},{"Id":"448595379","IsPullRequest":false,"CreatedAt":"2019-05-28T20:55:07","Actor":"jkotas","Number":"7452","RawContent":null,"Title":"Waiting on WaitHandle allocates on Unix","State":"closed","Body":"Repro:\r\n\r\n```\r\nusing System;\r\nusing System.Threading;\r\n\r\nclass Program\r\n{\r\n    static EventWaitHandle e = new EventWaitHandle(false, EventResetMode.AutoReset);\r\n\r\n    static void Work()\r\n    {\r\n        for (; ; ) e.Set();\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        new Thread(Work).Start();\r\n\r\n        int start = Environment.TickCount;\r\n        for (int i = 0; i < 1000000; i++)\r\n        {\r\n            e.WaitOne();\r\n        }\r\n        int end = Environment.TickCount;\r\n        Console.WriteLine($\"Time: {end-start}\");\r\n        Console.WriteLine($\"GCs: {GC.CollectionCount(0)}\");\r\n    }\r\n}\r\n```\r\n\r\nExpected result: GCs: 0\r\nActual result: GCs: 30+","Url":"https://github.com/dotnet/corert/issues/7452","RelatedDescription":"Closed issue \"Waiting on WaitHandle allocates on Unix\" (#7452)"},{"Id":"449179795","IsPullRequest":true,"CreatedAt":"2019-05-28T15:30:22","Actor":"Dotnet-GitSync-Bot","Number":"7457","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7457","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7457)"},{"Id":"449038942","IsPullRequest":true,"CreatedAt":"2019-05-28T06:28:24","Actor":"Dotnet-GitSync-Bot","Number":"7456","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft","Url":"https://github.com/dotnet/corert/pull/7456","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7456)"},{"Id":"449012492","IsPullRequest":true,"CreatedAt":"2019-05-27T23:41:22","Actor":"tonerdo","Number":"7455","RawContent":null,"Title":"[Intepreter] Method Call","State":"open","Body":"This WIP PR calling static or non-virtual instance methods. It adds support for the following opcode:\r\n\r\n* `call`\r\n\r\nwhich should allow methods like the following to be interpreted:\r\n\r\n```csharp\r\npublic static void CallMethod()\r\n{\r\n    Console.WriteLine(\"Hello World Intepreted\");\r\n}\r\n```\r\n\r\n~At this time it doesn't actually work, it doesn't throw an error either nor does the program return a non-zero exit code. I need help figuring out what is wrong.~\r\n\r\ncc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/7455","RelatedDescription":"Open PR \"[Intepreter] Method Call\" (#7455)"},{"Id":"448546712","IsPullRequest":false,"CreatedAt":"2019-05-27T13:39:53","Actor":"zhangchaoza","Number":"7451","RawContent":null,"Title":"libucrt.lib error","State":"closed","Body":"When I compile a application on Windows  ,I get this error:\r\n\r\n`LINK : fatal error LNK1104: 无法打开文件“libucrt.lib”`\r\n\r\nDetails:\r\n\r\n```\r\nD:\\Source\\GitHub\\zhangchao\\corert-samples\\MakeGenericMethodDemo\\MakeGenericMethodDemo.csproj 的还原在 74.63 ms 内完成。\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: 你正在使用 .NET Core 的预览版。请查看 https://aka.ms/dotnet-core-preview [D:\\Source\\GitHub\\zhangchao\\corert-samples\\MakeGenericMethodDemo\\MakeGenericMethodDemo.csproj]\r\n  MakeGenericMethodDemo -> D:\\Source\\GitHub\\zhangchao\\corert-samples\\MakeGenericMethodDemo\\bin\\Release\\netcoreapp3.0\\win-x64\\MakeGenericMethodDemo.dll\r\nLINK : fatal error LNK1104: 无法打开文件“libucrt.lib” [D:\\Source\\GitHub\\zhangchao\\corert-samples\\MakeGenericMethodDemo\\MakeGenericMethodDemo.csproj]\r\nC:\\Users\\zacka\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27527-01\\build\\Microsoft.NETCore.Native.targets(333,5): error MSB3073: 命令“\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64\\link.exe\"  @\"obj\\Release\\netcoreapp3.0\\win-x64\\native\\link.rsp\"”已退出，代码为 1104。 [D:\\Source\\GitHub\\zhangchao\\corert-samples\\MakeGenericMethodDemo\\MakeGenericMethodDemo.csproj]\r\n```\r\n\r\nOS:win10 18898.1000\r\ndotnet core:3.0.100-preview5-011568\r\ncorert:1.0.0-alpha-27527-01\r\nvs:vs2017 \r\n\r\nIs there any ways to resolve this error?","Url":"https://github.com/dotnet/corert/issues/7451","RelatedDescription":"Closed issue \"libucrt.lib error\" (#7451)"},{"Id":"448624826","IsPullRequest":false,"CreatedAt":"2019-05-27T00:41:54","Actor":"KodrAus","Number":"7453","RawContent":null,"Title":"ASP.NET Core 3.0 hits GetRuntimeInterfaceMap() is not supported on this runtime","State":"open","Body":"Using the preview .NET SDK `3.0.100-preview5-011568` with target framework: `netcoreapp3.0`.\r\n\r\nIt looks like the latest preview versions of ASP.NET Core MVC use `GetRuntimeInterfaceMap`, which isn't supported by CoreRT:\r\n\r\n```\r\nSystem.PlatformNotSupportedException: GetRuntimeInterfaceMap() is not supported on this runtime.\r\n   at System.Reflection.Runtime.TypeInfos.RuntimeTypeInfo.GetInterfaceMap(Type) + 0x4f\r\n   at System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type) + 0x8b\r\n   at Microsoft.Extensions.Internal.AwaitableInfo.IsTypeAwaitable(Type, AwaitableInfo&) + 0x3b1\r\n   at Microsoft.Extensions.Internal.CoercedAwaitableInfo.IsTypeAwaitable(Type, CoercedAwaitableInfo&) + 0x3d\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor..ctor(MethodInfo, TypeInfo, Object[]) + 0x163\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Create(MethodInfo, TypeInfo, Object[]) + 0x75\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerCache.GetCachedResult(ControllerContext) + 0x156\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerProvider.OnProvidersExecuting(ActionInvokerProviderContext) + 0x148\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionInvokerFactory.CreateInvoker(ActionContext) + 0x8f\r\n```\r\n\r\nRight now, I'm only hitting this on _async_ action results. So:\r\n\r\n```csharp\r\npublic async Task<ActionResult> Set(string id)\r\n{\r\n    await SomeCall(id);\r\n    return Ok();\r\n}\r\n```\r\n\r\nwill hit this, but something like:\r\n\r\n```csharp\r\npublic ActionResult Set(string id)\r\n{\r\n    // Where `Defer` captures a `Action<Task>` that is executed\r\n    // in the `OnActionExecuted` call\r\n    return Defer(async () => await SomeCall(id));\r\n}\r\n```\r\n\r\nwill execute successfully.","Url":"https://github.com/dotnet/corert/issues/7453","RelatedDescription":"Open issue \"ASP.NET Core 3.0 hits GetRuntimeInterfaceMap() is not supported on this runtime\" (#7453)"},{"Id":"448520212","IsPullRequest":true,"CreatedAt":"2019-05-26T05:45:17","Actor":"Dotnet-GitSync-Bot","Number":"7450","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7450","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7450)"},{"Id":"448356067","IsPullRequest":true,"CreatedAt":"2019-05-25T18:34:42","Actor":"Dotnet-GitSync-Bot","Number":"7449","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7449","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7449)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"451268345","IsPullRequest":true,"CreatedAt":"2019-06-03T02:28:02","Actor":"wli3","Number":"3294","RawContent":null,"Title":"Update branding to preview 7","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Open PR \"Update branding to preview 7\" (#3294)"},{"Id":"451262824","IsPullRequest":true,"CreatedAt":"2019-06-03T01:53:36","Actor":"wli3","Number":"3293","RawContent":null,"Title":"WIP Merge master to release/3.0.1xx for preview6","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Open PR \"WIP Merge master to release/3.0.1xx for preview6\" (#3293)"},{"Id":"451127590","IsPullRequest":false,"CreatedAt":"2019-06-01T20:53:12","Actor":"AntonPlotnikov","Number":"3291","RawContent":null,"Title":"DotNetAppHost's version info and icon","State":"open","Body":"Hello. I need to add a version info and custom icon for DotNetAppHost? We use potable mode (Framework-dependent deployment), and there are some branding and security requirements. Unfortunately, I can add version info only to application's main assembly file (dll), not to exe file (we use RID win7-x64) during building in Visual Studio 2019. Is it any way to do this during MSBuild process?\r\n![2019-06-01_23-57-09](https://user-images.githubusercontent.com/18666703/58753548-558b5b80-84c9-11e9-9deb-c51f6890484b.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3291","RelatedDescription":"Open issue \"DotNetAppHost's version info and icon\" (#3291)"},{"Id":"451078446","IsPullRequest":true,"CreatedAt":"2019-06-01T12:04:11","Actor":"dotnet-maestro[bot]","Number":"3290","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3290","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3290)"},{"Id":"451028964","IsPullRequest":true,"CreatedAt":"2019-06-01T01:20:29","Actor":"MSLukeWest","Number":"3289","RawContent":null,"Title":"Adding ResolveReferences target to PublishItemsOutputGroup dependencies","State":"open","Body":"This is needed in order for this output group to contain output from referenced projects.","Url":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Open PR \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289)"},{"Id":"448511917","IsPullRequest":false,"CreatedAt":"2019-06-01T00:22:18","Actor":"run1206","Number":"3267","RawContent":null,"Title":"Verbiage of success message on 32bit .NET Core 2.2 SDK has wrong folder location","State":"closed","Body":"After the 32-bit .NET Core 2.2 SDK finishes installing, the success message reads:\r\n\"The following were installed at C:\\Program Files\\dotnet...\"\r\nThe SDK files are correctly saved in the 32-bit location, but the folder location in the message is for the 64-bit SDK location.\r\n\r\nPlease see attached image for reference.\r\n![20190525_192301](https://user-images.githubusercontent.com/16143658/58375537-50576b00-7f23-11e9-8ea4-762ea46fa727.jpg)\r\n\r\nSuccess message should point to \"C:\\Program Files (x86)\\dotnet\\\" for the 32bit installer.","Url":"https://github.com/dotnet/sdk/issues/3267","RelatedDescription":"Closed issue \"Verbiage of success message on 32bit .NET Core 2.2 SDK has wrong folder location\" (#3267)"},{"Id":"450415518","IsPullRequest":true,"CreatedAt":"2019-05-31T23:21:24","Actor":"sbomer","Number":"3279","RawContent":null,"Title":"Set ILLink defaults","State":"closed","Body":"These defaults root the non-framework assemblies.\r\n@nguerrera @fadimounir @swaroop-sridhar PTAL","Url":"https://github.com/dotnet/sdk/pull/3279","RelatedDescription":"Closed or merged PR \"Set ILLink defaults\" (#3279)"},{"Id":"449528063","IsPullRequest":true,"CreatedAt":"2019-05-31T21:02:35","Actor":"dotnet-bot","Number":"3269","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3269","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3269)"},{"Id":"450799201","IsPullRequest":false,"CreatedAt":"2019-05-31T18:06:56","Actor":"DustinCampbell","Number":"3287","RawContent":null,"Title":"Getting package assets cache messages on build with the latest master bits","State":"closed","Body":"@nguerrera, @dsplaisted: I started getting loads of messages during build in the winforms-designer repo after updating to the most recent SDK:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012135\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5):\r\nmessage NETSDK1062: Unable to use package assets cache due to I/O error . This can occur when the\r\nsame project is built more than once in parallel. Performance may be degraded,  but the build result will \r\nnot be impacted. [D:\\Projects\\winforms-designer\\src\\WinFormsSurface\\WinFormsS urface.csproj]\r\n```\r\n\r\nAre these messages possibly related to https://github.com/dotnet/sdk/pull/3268? It looks like this error comes from ResolvePackageAssets.cs and those are the most recent changes around the code that triggers this message. Setting `<DisablePackageAssetsCache>true</DisablePackageAssetsCache>` makes the messages go away, but it doesn't seem like the right fix.","Url":"https://github.com/dotnet/sdk/issues/3287","RelatedDescription":"Closed issue \"Getting package assets cache messages on build with the latest master bits\" (#3287)"},{"Id":"450641573","IsPullRequest":true,"CreatedAt":"2019-05-31T18:06:56","Actor":"dsplaisted","Number":"3284","RawContent":null,"Title":"Fix failure to read assets cache file the first time it's written","State":"closed","Body":"Fixes issue reported by @nguerrera, introduced in #3268:\r\n\r\n> Seeing message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when the same project is built more than once in parallel. Performance may be degraded, but the build result will not be impacted. [D:\\Temp\\demo\\demo.csproj]\r\n>\r\n> Looks like the change you made has the file still open for write when we try to read it back on first build.\r\n>\r\n> Can you take a look, this will be a significant perf regression in preview 6\r\n\r\nFix #3287","Url":"https://github.com/dotnet/sdk/pull/3284","RelatedDescription":"Closed or merged PR \"Fix failure to read assets cache file the first time it's written\" (#3284)"},{"Id":"450472482","IsPullRequest":true,"CreatedAt":"2019-05-31T17:54:26","Actor":"fadimounir","Number":"3281","RawContent":null,"Title":"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects","State":"closed","Body":"Packaging projects depend on ComputeFilesToPublish only instead of ComputeAndCopyFilesToPublishDirectory, so this refactoring will enable R2R and ILLinker to execute.","Url":"https://github.com/dotnet/sdk/pull/3281","RelatedDescription":"Closed or merged PR \"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects\" (#3281)"},{"Id":"450077235","IsPullRequest":true,"CreatedAt":"2019-05-31T17:36:11","Actor":"peterhuene","Number":"3275","RawContent":null,"Title":"Log error when building for Windows Desktop on non-Windows.","State":"closed","Body":"This PR causes the SDK to log an error (NETSDK1100) if the user attempts to\r\nbuild a Windows Desktop targeted application on a non-Windows platform.\r\n\r\nThis works via any explicit or implicit (i.e. from the SDK) framework reference\r\nto `Microsoft.WindowsDesktop.App*`; if the current platform is not Windows and\r\nthe framework reference exists, the error is logged.\r\n\r\nFixes dotnet/cli#11410 and dotnet/cli#10842.","Url":"https://github.com/dotnet/sdk/pull/3275","RelatedDescription":"Closed or merged PR \"Log error when building for Windows Desktop on non-Windows.\" (#3275)"},{"Id":"450829429","IsPullRequest":false,"CreatedAt":"2019-05-31T14:33:34","Actor":"atanasa","Number":"3288","RawContent":null,"Title":"dotnet publish does not resolve version conflicts with packages in the store manifest","State":"open","Body":"I have a project that depends on the `Newtonsoft.Json` package version **10.0.1**.\r\nI have a store manifest file that includes `Newtonsoft.Json` package version **10.0.3**.\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n### Steps to reproduce:\r\n1. Create a store manifest file:\r\n```xml\r\n<StoreArtifacts>\r\n   <Package Id=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n</StoreArtifacts>\r\n```\r\n1. Create an executable project that specifies that manifest:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.1\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <TargetManifestFiles>manifest.xml</TargetManifestFiles>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n1. Run `dotnet publish` and observe the output of the publish\r\n\r\n### Expected:\r\nWhen I run `dotnet publish` the output should not contain Newtonsoft.Json.dll (as the version in the \"store\" is higher).\r\n\r\n### Actual:\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n\r\nI've created a simple repro solution:\r\n[ReproResolvePublishedAssemblies.zip](https://github.com/dotnet/sdk/files/3241624/ReproResolvePublishedAssemblies.zip)\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3288","RelatedDescription":"Open issue \"dotnet publish does not resolve version conflicts with packages in the store manifest\" (#3288)"},{"Id":"450787725","IsPullRequest":false,"CreatedAt":"2019-05-31T13:00:19","Actor":"davkean","Number":"3286","RawContent":null,"Title":"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds","State":"open","Body":"Create a project with the following:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>foobar</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nExpected: Friendly error similar to command-line:\r\n\r\n```\r\n  C:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(96,\r\n5): error NETSDK1013: The TargetFramework value 'foobar' was not recognized. It may be misspelled. If not, then the Tar\r\ngetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly. [C:\\Users\\davkean\\Source\\\r\nRepos\\ConsoleApp424\\ConsoleApp424\\ConsoleApp424.csproj]\r\n```\r\n\r\nActual:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nNuGet.Frameworks.FrameworkException: Invalid framework identifier ''.\r\n   at NuGet.Frameworks.NuGetFramework.GetShortFolderName(IFrameworkNameProvider mappings)\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.GetTargetAndThrowIfNotFound(LockFile lockFile, NuGetFramework framework, String runtime)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tConsoleApp424\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t208\t\r\n```\r\n\r\nWhat's worse is that you have lots of TFMs you have no idea which is the broken one as the error doesn't include it.","Url":"https://github.com/dotnet/sdk/issues/3286","RelatedDescription":"Open issue \"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds\" (#3286)"},{"Id":"450765833","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:31","Actor":"dotnet-maestro[bot]","Number":"3285","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3285","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3285)"},{"Id":"450273987","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:04","Actor":"dotnet-maestro[bot]","Number":"3278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3278)"},{"Id":"450571724","IsPullRequest":true,"CreatedAt":"2019-05-31T06:07:03","Actor":"peterhuene","Number":"3283","RawContent":null,"Title":"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.","State":"closed","Body":"This PR fixes filtering of satellite assemblies when publishing an\r\napplication targeting netcoreapp3.0.\r\n\r\nAn incorrect property name in the `_FilterSatelliteResourcesForPublish` target\r\nwas causing the satellite filtering done for publish to have no effect.\r\n\r\nThis was only a problem when not reusing the build output for publish;\r\nunfortunately this is currently the case for netcoreapp3.0 targeted\r\napplications due to references that are marked as `PrivateAssets=\"all\"`.\r\n\r\nThis PR fixes the property name and adds test coverage for publishing\r\nwhen targeting netcoreapp3.0 with filtered satellite assemblies.\r\n\r\nFixes #3277.","Url":"https://github.com/dotnet/sdk/pull/3283","RelatedDescription":"Closed or merged PR \"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.\" (#3283)"},{"Id":"450115097","IsPullRequest":false,"CreatedAt":"2019-05-31T06:07:03","Actor":"dsplaisted","Number":"3277","RawContent":null,"Title":"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0","State":"closed","Body":"Publish the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <SatelliteResourceLanguages>en;de;pt</SatelliteResourceLanguages>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Humanizer\" Version=\"2.6.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n## Expected\r\n\r\nPublish folder should only have resource subfolders for `de` and `pt`.\r\n\r\n## Actual\r\n\r\nThe publish folder will include the Humanizer resources for all languages the package supports:\r\n\r\n![image](https://user-images.githubusercontent.com/145043/58606671-4f8b4580-8251-11e9-9e22-593e29ceab4d.png)\r\n\r\n## Notes\r\n\r\nWhen targeting .NET Core 2.2, the publish output is correctly filtered.  Also, when targeting .NET Core 3.0, the build output is correctly filtered, but the publish output is not.\r\n\r\nFYI @peterhuene @livarcocc, we should fix this for 3.0","Url":"https://github.com/dotnet/sdk/issues/3277","RelatedDescription":"Closed issue \"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0\" (#3277)"},{"Id":"450525123","IsPullRequest":true,"CreatedAt":"2019-05-31T04:37:01","Actor":"dsplaisted","Number":"3282","RawContent":null,"Title":"Better test logging","State":"closed","Body":"This PR removes all direct uses of the CLI Utils `Command` class, and instead routes them through the SDK's `TestCommand`.  This will log the start info, STDOUT, and STDERR.\r\n\r\nThis will, for example, make it a lot easier to see what the problem is from the test logs when a test fails because the right shared framework isn't installed.  The error information in that case goes to STDERR, which a lot of the tests which used `Command.Create` weren't capturing.\r\n\r\nFYI @dotnet/dotnet-cli, we should continue to follow the new pattern of using `DotnetCommand` and `RunExeCommand` instead of `Command.Create` in future tests.","Url":"https://github.com/dotnet/sdk/pull/3282","RelatedDescription":"Closed or merged PR \"Better test logging\" (#3282)"},{"Id":"450457056","IsPullRequest":true,"CreatedAt":"2019-05-30T21:22:34","Actor":"fadimounir","Number":"3280","RawContent":null,"Title":"Fix property name in error messages","State":"closed","Body":"Change `ReadyToRun` to `PublishReadyToRun` in error messages","Url":"https://github.com/dotnet/sdk/pull/3280","RelatedDescription":"Closed or merged PR \"Fix property name in error messages\" (#3280)"},{"Id":"450071695","IsPullRequest":true,"CreatedAt":"2019-05-30T17:40:01","Actor":"livarcocc","Number":"3274","RawContent":null,"Title":"Merge release/2.2.2xx into release/2.2.3xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3274","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx into release/2.2.3xx\" (#3274)"},{"Id":"450070741","IsPullRequest":true,"CreatedAt":"2019-05-30T17:39:42","Actor":"livarcocc","Number":"3273","RawContent":null,"Title":"Merge release/2.1.6xx into release/2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3273","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx into release/2.1.7xx\" (#3273)"},{"Id":"450081027","IsPullRequest":true,"CreatedAt":"2019-05-30T00:56:27","Actor":"cdmihai","Number":"3276","RawContent":null,"Title":"Add build and clean tests for static graph","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3276","RelatedDescription":"Open PR \"Add build and clean tests for static graph\" (#3276)"},{"Id":"448585673","IsPullRequest":true,"CreatedAt":"2019-05-29T23:46:24","Actor":"dsplaisted","Number":"3268","RawContent":null,"Title":"Use PackageDownload in VS, fix design time build failures","State":"closed","Body":"- Use PackageDownload when supported on full MSBuild.  Fixes https://github.com/dotnet/cli/issues/10440\r\n- Don't fail design-time builds when the target framework or RuntimeIdentifier doesn't match what's in the (now outdated) assets file.  Fixes #2322\r\n  - I'd like to add tests to cover this, but haven't yet","Url":"https://github.com/dotnet/sdk/pull/3268","RelatedDescription":"Closed or merged PR \"Use PackageDownload in VS, fix design time build failures\" (#3268)"},{"Id":"449768564","IsPullRequest":true,"CreatedAt":"2019-05-29T14:03:17","Actor":"dotnet-maestro[bot]","Number":"3271","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3271)"},{"Id":"449528087","IsPullRequest":true,"CreatedAt":"2019-05-29T00:02:08","Actor":"dotnet-bot","Number":"3270","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3270","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3270)"},{"Id":"447922530","IsPullRequest":true,"CreatedAt":"2019-05-28T21:32:50","Actor":"dotnet-bot","Number":"3264","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3264","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3264)"},{"Id":"448467678","IsPullRequest":false,"CreatedAt":"2019-05-25T14:01:14","Actor":"DoCode","Number":"3266","RawContent":null,"Title":"dotnet msbuild -t:restore or -t:publish : NU1201: Not compatible with netcoreapp2.2","State":"open","Body":"### Steps to reproduce\r\n\r\nI try to restore and publish a cross-targeting and cross-platform project with netcoreapp/netstandard/net472 and linux-x64/win-x64 mix-match with:\r\n```ps1\r\n# Restoring:\r\ndotnet msbuild -t:restore -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:restore -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n\r\n# AND publishing:\r\ndotnet msbuild -t:publish -p:targetframework=net472 -p:runtimeidentifier=win-x64 Api.csproj\r\n# OR\r\ndotnet msbuild -t:publish -p:targetframework=netcoreapp2.2 -p:runtimeidentifier=linux-x64 Api.csproj\r\n```\r\n\r\n#### The projects\r\n**Api.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp2.2;net472</TargetFrameworks>\r\n    <RuntimeIdentifiers>linux-x64;win-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n    <ProjectReference Include=\"Store.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Core.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n**Store.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Sdk.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard2.0;net472</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Core.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n**Cli.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"Sdk.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe projects should be restored for all TFM's and RID's.\r\n\r\n### Actual behavior\r\n\r\nThe following error is thrown:\r\n```\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2). Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / linux-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Core is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Core supports: net472 (.NETFramework,Version=v4.7.2)\r\nD:\\projects\\_lab\\dotnet-sdk-issues\\msbuild-restore\\Api.csproj : error NU1201: Project Store is not compatible with netcoreapp2.2 (.NETCoreApp,Version=v2.2) / win-x64. Project Store supports: net472 (.NETFramework,Version=v4.7.2)\r\n```","Url":"https://github.com/dotnet/sdk/issues/3266","RelatedDescription":"Open issue \"dotnet msbuild -t:restore or -t:publish : NU1201: Not compatible with netcoreapp2.2\" (#3266)"},{"Id":"450060047","IsPullRequest":false,"CreatedAt":"2019-05-25T01:04:11","Actor":"kakiyama1018","Number":"3272","RawContent":null,"Title":"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2","State":"open","Body":"I'm trying to ship some code samples to users that will work regardless of whether they have .NET SDK 2.1 or 2.2.\r\n\r\nAccording to...\r\nhttps://docs.microsoft.com/en-us/dotnet/core/versions/selection\r\n... it states that:\r\n\r\n\"A given SDK supports a fixed set of frameworks, capped to the target framework of the runtime it ships with. For example, the .NET Core 2.0 SDK includes the .NET Core 2.0 runtime, which is an implementation of the netcoreapp2.0 target framework. The .NET Core 2.0 SDK supports netcoreapp1.0, netcoreapp1.1, and netcoreapp2.0 but not netcoreapp2.1 (or higher). You install the .NET Core 2.1 SDK to build for netcoreapp2.1.\"\r\n\r\nAs such, I've chosen to have...\r\n  <TargetFramework>netcoreapp2.1</TargetFramework>.\r\n... in the .csproj in hopes that the sample can be built on machines that have either .NET Core SDK 2.1 or 2.2.\r\n\r\nHowever, we are running into the following build-time error on machines that simply have .NET Core SDK 2.2 installed:\r\n\r\nerror NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n\r\nWhy can't we build an application that targets 2.1 on a machine that has .NET Core SDK 2.2, as the documentation implies to be allowed (since the target of 2.1 is lower than the SDK version that is installed on the machine)?","Url":"https://github.com/dotnet/sdk/issues/3272","RelatedDescription":"Open issue \"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2\" (#3272)"},{"Id":"448393743","IsPullRequest":false,"CreatedAt":"2019-05-25T00:37:41","Actor":"vatsan-madhavan","Number":"3265","RawContent":null,"Title":"WPF Theme Assemblies are not usable under the current FrameworkReference design","State":"open","Body":"See discussion in https://github.com/dotnet/sdk/pull/3259 for context. \r\n\r\nBackground: \r\n\r\nWPF's theme assemblies (`PresentationFramework.Aero`, `PresentationFramework.Aero2`, `PresentationFramework.AeroLite`, `PresentationFramework.Classic`, `PresentationFramework.Luna` and `PresentationFramework.Royale`) expose the same types. \r\n\r\nFor e.g., [DataGridHeaderBorder](https://docs.microsoft.com/en-us/dotnet/api/microsoft.windows.themes.datagridheaderborder?view=netframework-4.8). \r\n\r\nThese assemblies can be used in two ways. \r\n\r\nTypically, they are used as resource assemblies. i.e., they are not referenced from the project, and instead, XAML resources within them are consumed  as resources using `<ResourceDictionary ..>`. When used this way, all of these assemblies can (and often are) used in to supply themes contextually (i.e., depending on the system theme, for e.g., or some other user preference). \r\n\r\nLess commonly, they are directly referenced and their types are either consumed in XAML or directly in code. When used this way, only one assembly can be referenced directly. If more than one assembly needs to be referenced, namespace aliasing has to be used. \r\n\r\nProblem: \r\n\r\nThe current SDK/FrameworkReference design in .NET Core _always_ enables references to each of these assemblies. This makes them virtually unusable. We need a better scheme/solution. \r\n\r\n/cc @nguerrera, @rladuca, @dsplaisted \r\ncc @dotnet/wpf-developers \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3265","RelatedDescription":"Open issue \"WPF Theme Assemblies are not usable under the current FrameworkReference design\" (#3265)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1134142130094346245","CreatedAt":"2019-05-30T16:58:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1133749843564740608","CreatedAt":"2019-05-29T15:00:01+00:00","UserScreenname":"dotnet","Text":"ML .NET Model Lifecycle with Azure DevOps CI/CD pipelines\nhttps://t.co/zlCqa4I8vn https://t.co/K17nKopaZn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":24,"RawContent":null},{"Id":"1133746063792205826","CreatedAt":"2019-05-29T14:45:00+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, watch @terrajobst adding return statements and control flow analysis to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1133416391522918401","CreatedAt":"2019-05-28T16:55:00+00:00","UserScreenname":"dotnet","Text":"Porting desktop apps to .NET Core by @oliagavrysh. https://t.co/XV5Ed3Nku8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":44,"RawContent":null},{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":1,"RawContent":null},{"Id":"1129054452357271553","CreatedAt":"2019-05-16T16:02:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the .NET, C#, and F# teams https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-06-03T05:30:33.8371849Z","RunDurationInMilliseconds":10019}