{"Data":{"GitHub":{"Issues":[{"Id":"360150496","IsPullRequest":false,"CreatedAt":"2018-09-14T04:14:16","Actor":"justinormont","Number":"911","RawContent":null,"Title":"TLS Links for Improved Security","State":"open","Body":"For general web security, we should use HTTP**S** links instead of HTTP. \r\n\r\nWithin the ML.NET repo, I see ~60 locations where we use HTTP:\r\n  https://github.com/dotnet/machinelearning/search?p=3&q=http%3A%2F%2F&unscoped_q=http%3A%2F%2F\r\n\r\nTask:\r\n* Verify that HTTPS links are equivalent\r\n* Where possible, change links to utilize HTTPS\r\n\r\nQ: Assuming we can alter all HTTP links to HTTPS, should we block new HTTP links as part of a git check-in test? A check-in test would help reduce unintentional HTTP links; for example, I missed [this http://aka.ms link](https://github.com/dotnet/machinelearning/blob/f0f04ef8854bd1ae05987072e2f0fd660d4be662/build.proj#L84)  as a reviewer.","Url":"https://github.com/dotnet/machinelearning/issues/911","RelatedDescription":"Open issue \"TLS Links for Improved Security\" (#911)"},{"Id":"360110315","IsPullRequest":false,"CreatedAt":"2018-09-14T00:09:36","Actor":"Zruty0","Number":"910","RawContent":null,"Title":"Fix AP and OGD metadata propagation and behavior","State":"open","Body":"In the process of writing #909 I discovered that AP is now seemingly uncalibrated, and cannot accept float labels, and OGD throws at training. \r\n\r\nEnable the `OnlineLinearWorkout` test in #909 and fix the resulting bugs.","Url":"https://github.com/dotnet/machinelearning/issues/910","RelatedDescription":"Open issue \"Fix AP and OGD metadata propagation and behavior\" (#910)"},{"Id":"360109902","IsPullRequest":true,"CreatedAt":"2018-09-14T00:07:08","Actor":"Zruty0","Number":"909","RawContent":null,"Title":"Fix for trainer estimator metadata propagation","State":"open","Body":"Added tests for metadata propagation on existing trainers, also fixed SDCA to pass metadata correctly.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/909","RelatedDescription":"Open PR \"Fix for trainer estimator metadata propagation\" (#909)"},{"Id":"360104699","IsPullRequest":false,"CreatedAt":"2018-09-13T23:38:45","Actor":"wschin","Number":"908","RawContent":null,"Title":"Command Line Usages","State":"open","Body":"Are command line tool exposed to users with some docs? It looks it's not straightforward for external users to use command line to train a model. Thanks.","Url":"https://github.com/dotnet/machinelearning/issues/908","RelatedDescription":"Open issue \"Command Line Usages\" (#908)"},{"Id":"360096062","IsPullRequest":false,"CreatedAt":"2018-09-13T22:56:25","Actor":"dckorben","Number":"907","RawContent":null,"Title":"Evaluator.Evaluate throws \"Expected exactly one column with role 'Score', but found 0.'\"","State":"open","Body":"Windows 10 Enterprise 1803\r\n.net 4.7.2\r\n\r\n### Issue\r\n- **What did you do?**\r\nLoaded Data, Created FastForestRegression Predictor, Trained Model Successfully\r\nCreated Regression Evaluator under new Direct API\r\nCalled Evaluated on Training or Validation Data Set\r\n- **What happened?**\r\nthrew  \"Expected exactly one column with role 'Score', but found 0.'\"\r\n- **What did you expect?**\r\nRegression Metrics Dictionary returned\r\n\r\n### Source code / logs\r\nSentimentPredictionTests contains comments to what seems to be similar effect for another evaluator. \r\n\r\n`          // Evaluate.\r\n            // It does not work. It throws error \"Failed to find 'Score' column\" when Evaluate is called`\r\n\r\nMy cursory review of the source makes it seem it is not possible to specify a \"Score\" role column at the moment. Attempted to decorate the model class a number of different ways to no effect. This could be a redundant issue covered somewhere else I wasn't able to identify.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/907","RelatedDescription":"Open issue \"Evaluator.Evaluate throws \"Expected exactly one column with role 'Score', but found 0.'\"\" (#907)"},{"Id":"360079284","IsPullRequest":false,"CreatedAt":"2018-09-13T21:50:04","Actor":"abgoswam","Number":"906","RawContent":null,"Title":"TensorFlowTransform does not dispose TFSession","State":"open","Body":"Currently the TensorFlowTransform does not dispose the TFSession object. \r\n\r\nThis prevents us from using the Dispose pattern on the TensorFlowTransform to clean up un-managed resources\r\n","Url":"https://github.com/dotnet/machinelearning/issues/906","RelatedDescription":"Open issue \"TensorFlowTransform does not dispose TFSession\" (#906)"},{"Id":"360023244","IsPullRequest":false,"CreatedAt":"2018-09-13T18:57:13","Actor":"ericstj","Number":"905","RawContent":null,"Title":"Model Saving / Loading memory usage","State":"open","Body":"In reviewing the TensorFlow saving/loading code [PR](https://github.com/dotnet/machinelearning/pull/853) I noticed that we were creating very large byte arrays in the [frozen model case](https://github.com/dotnet/machinelearning/blob/52aff025df29cc02c00999c5ca4a0833a658d142/src/Microsoft.ML.TensorFlow/TensorflowTransform.cs#L123).  I believe these can be *very* large models (100MB - many GB) so we might approach the upper limit of the size of managed arrays, not to mention the memory usage of shuttling these bytes into a managed array, just so that they can then be interpreted/read into TensorFlow's object model.\r\n\r\nMy understanding of the ModelSaveContext / ModelLoadContext get backed with a ZipArchive.  This will be backed by a stream (file or memory) and thus not load the entire ML.NET model into memory at one time.  As entries are accessed these get loaded as streams which load from disk on demand / decompress on demand.  As such the backing stack for model loading/saving permits a minimal memory footprint for loading and saving models.  The problem comes in with usage.  Many cases where folks are using ReadByteArray they should instead be using a Stream that is constrained to the length of the entry.\r\n\r\nI discussed this a bit with @abgoswam and prototyped a sample stream that would wrap the context's BinaryReader/Writer stream and only expose a region.  I'm sure we have a better impl floating around somewhere.\r\n\r\nI looked a a few of the usage cases of `ReadByteArray` and the following all look suspect of containing large payloads:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5e08fa1ea7bfb54f28ed0815cb6413e0068e6dd1/src/Microsoft.ML.Api/SerializableLambdaTransform.cs#L66-L74\r\n\r\nI imagine they payload passed to the `LoadDelegate` could be arbitrarily large and should be streamed.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/307b38f4c86cc31a6a0dbff8c1a302d66f4fe7e7/src/Microsoft.ML.Data/DataLoadSave/PartitionedFileLoader.cs#L226-L234\r\n\r\nIt looks like the byte array gets stored off in a memory stream until it later gets read as files.  I don't see much value in the additional byte-array.  Why not instead keep a stream open to the entry in the ModelLoadContext for the lifetime of the loader?\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5e08fa1ea7bfb54f28ed0815cb6413e0068e6dd1/src/Microsoft.ML.Transforms/OptionalColumnTransform.cs#L99-L103\r\n\r\nSimilar to above.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5e08fa1ea7bfb54f28ed0815cb6413e0068e6dd1/src/Microsoft.ML.Parquet/ParquetLoader.cs#L193-L195\r\n\r\nSimilar to above.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/52aff025df29cc02c00999c5ca4a0833a658d142/src/Microsoft.ML.TensorFlow/TensorflowTransform.cs#L123-L141\r\nIn the TensorFlowTransform case I don't see a great alternative since the [TF API](https://github.com/tensorflow/tensorflow/blob/3be04971716fcaf0c11ad9262e60efa428553e14/tensorflow/c/c_api.h#L1018-L1020) we call expects a byte buffer and doesn't have a stream-like API for importing the graph (as far as I can tell).  It's possible I'm missing something though.  A slightly hacky alternative would be to make a memory mapped file, write to that, and pass the [pointer](https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.safehandles.safememorymappedviewhandle?view=netframework-4.7.2#methods) of the memory mapped file to tensorflow.  That way we're never dealing in large byte arrays.  We could have some size threshold at which we switch from using a byte array to a memory mapped file. Since there would likely be some tradeoff to creating the MMF.\r\n\r\n/cc @Zruty0 ","Url":"https://github.com/dotnet/machinelearning/issues/905","RelatedDescription":"Open issue \"Model Saving / Loading memory usage\" (#905)"},{"Id":"359947109","IsPullRequest":false,"CreatedAt":"2018-09-13T15:26:17","Actor":"yaeldekel","Number":"904","RawContent":null,"Title":"Enable unit tests using Inception and ssd_mobilenet TensorFlow models","State":"open","Body":"Upload the models to MyGet with the appropriate license, and enable the unit tests which are currently skipped.","Url":"https://github.com/dotnet/machinelearning/issues/904","RelatedDescription":"Open issue \"Enable unit tests using Inception and ssd_mobilenet TensorFlow models\" (#904)"},{"Id":"359944478","IsPullRequest":false,"CreatedAt":"2018-09-13T15:20:16","Actor":"yaeldekel","Number":"903","RawContent":null,"Title":"Pixel extractor transform needs to have a per-channel offset argument","State":"open","Body":"Some TensorFlow models require preprocessing of the image where a different offset is subtracted from every channel. For example: https://github.com/pudae/tensorflow-densenet/blob/master/preprocessing/densenet_preprocessing.py#L39. \r\nThe ML.NET pixel extractor transform only has a global offset parameter, which means that preprocessing would need to be done outside of ML.NET.","Url":"https://github.com/dotnet/machinelearning/issues/903","RelatedDescription":"Open issue \"Pixel extractor transform needs to have a per-channel offset argument\" (#903)"},{"Id":"359855211","IsPullRequest":false,"CreatedAt":"2018-09-13T11:29:43","Actor":"lefig","Number":"902","RawContent":null,"Title":"Feature Importance with ML.NET","State":"open","Body":"Hi all,\r\n\r\nI have been revisiting some models recently to deduce feature importance. To remove highly correlated items, features of no importance etc.\r\n\r\nAnd judging from the issues raised so far, this theme has come up already. Such as Feature Importance with ML.NET #599.\r\n\r\nIdeally, it should be possible to run a pipeline task not to generate a full model, but to profile the model data using a method such as nearest neighbour or PCA before rather than after the event.\r\n\r\nWould it be possible to add such a feature (no pun intended:)) to the release road map?\r\n\r\nThanks\r\nFig","Url":"https://github.com/dotnet/machinelearning/issues/902","RelatedDescription":"Open issue \"Feature Importance with ML.NET\" (#902)"},{"Id":"359693812","IsPullRequest":true,"CreatedAt":"2018-09-12T23:57:29","Actor":"Zruty0","Number":"901","RawContent":null,"Title":"Legacy API namespace rename","State":"open","Body":"Fixes #756 .","Url":"https://github.com/dotnet/machinelearning/pull/901","RelatedDescription":"Open PR \"Legacy API namespace rename\" (#901)"},{"Id":"359679972","IsPullRequest":true,"CreatedAt":"2018-09-12T23:27:05","Actor":"yaeldekel","Number":"900","RawContent":null,"Title":"Fix bug in pixel extractor transform, and add more unit tests.","State":"closed","Body":"Fixes #897 .\r\nThe pixel extractor mixes up the green and blue values in one place, and does the wrong thing with the alpha value in another place.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/900","RelatedDescription":"Closed or merged PR \"Fix bug in pixel extractor transform, and add more unit tests.\" (#900)"},{"Id":"359641403","IsPullRequest":false,"CreatedAt":"2018-09-12T23:27:05","Actor":"yaeldekel","Number":"897","RawContent":null,"Title":"Bug in pixel extractor transform","State":"closed","Body":"The values of the blue and green channels are mixed up in lines 530-531 of ImagePixelExtractorTransform.cs.","Url":"https://github.com/dotnet/machinelearning/issues/897","RelatedDescription":"Closed issue \"Bug in pixel extractor transform\" (#897)"},{"Id":"359668990","IsPullRequest":true,"CreatedAt":"2018-09-12T22:02:13","Actor":"Ivanidzo4ka","Number":"899","RawContent":null,"Title":"Categorical estimator","State":"open","Body":"Converts Categorical transform to Estimator chain","Url":"https://github.com/dotnet/machinelearning/pull/899","RelatedDescription":"Open PR \"Categorical estimator\" (#899)"},{"Id":"359666507","IsPullRequest":false,"CreatedAt":"2018-09-12T21:53:06","Actor":"zeahmed","Number":"898","RawContent":null,"Title":"Need to have vector trimming and padding functionality to deal with fixed size text inputs for DNNs.","State":"open","Body":"Convolution based text classification models and fixed length seq2seq models in Tensorflow ( or in any other DNN platform in general) requires fixed length vector of integers as input. However, in ML.Net sentences/documents transform into variable length vectors when split into words/characters.\r\n\r\nTo enable these scenarios, we need to find out a way to trim/pad vector to make them fixed length. May be make a trimming and padding transform.\r\n\r\nThis task item was derived from the investigation of issue #747 ","Url":"https://github.com/dotnet/machinelearning/issues/898","RelatedDescription":"Open issue \"Need to have vector trimming and padding functionality to deal with fixed size text inputs for DNNs.\" (#898)"},{"Id":"359619332","IsPullRequest":true,"CreatedAt":"2018-09-12T19:27:01","Actor":"Zruty0","Number":"896","RawContent":null,"Title":"Transformer for Concat","State":"open","Body":"Proper conversion of ConcatTransform","Url":"https://github.com/dotnet/machinelearning/pull/896","RelatedDescription":"Open PR \"Transformer for Concat\" (#896)"},{"Id":"359578778","IsPullRequest":false,"CreatedAt":"2018-09-12T17:25:16","Actor":"ericstj","Number":"895","RawContent":null,"Title":"Native dependencies of ML.NET","State":"open","Body":"We should review and try to unify and document the native dependencies of ML.NET, in particular the VC-runtime.\r\n\r\nIdeally we should try and build the native components in the same way that .NET Core does so that we don't impose any new requirements (eg: installing a different / specific version of the VC redist).\r\n\r\nI checked a few DLLs using link /dump /imports and noticed a lot of instances of VCRUNTIME140 which we do not depend on for coreclr/clrcompression/clrjit/etc.\r\n\r\nI just did this check for Windows but we should also look at a similar thing on linux.\r\n\r\nWe should also examine binary redists (like TensorFlow) so that we can understand if they are different and at least document their dependencies.\r\n\r\n/cc @shauheen @tannergooding @danmosemsft @eerhardt ","Url":"https://github.com/dotnet/machinelearning/issues/895","RelatedDescription":"Open issue \"Native dependencies of ML.NET\" (#895)"},{"Id":"359508125","IsPullRequest":false,"CreatedAt":"2018-09-12T14:29:34","Actor":"mbilenko","Number":"894","RawContent":null,"Title":"Build is failing (CMake issue for VS Dev console, VS version issue for Windows console)","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:  Microsoft Windows [Version 10.0.16299.492]\r\n- **.NET Version (eg., dotnet --info)**:   2.1.401\r\n\r\n### Issue\r\n\r\n- **What did you do?**  cloned the repo\r\n- **What happened?**   build.cmd failed :(\r\n- **What did you expect?**   build.cmd not to fail \r\n\r\n### Source code / logs\r\nTried both Developer CMD for VS 2017, then vanilla cmd.   \r\nBelow is the log for Developer CMD (CMake issue).   \r\nFor Vanilla CMD, the error is that it incorrectly identifies VS version and tries to look for 14.0 (pasted below after \"=======\"). \r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning>build.cmd\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 3.0.0-preview1-03129-01...\r\nInitializing BuildTools...\r\nDone initializing tools.\r\nRunning: c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\Tools\\dotnetcli\\dotnet msbuild /nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log /p:Configuration=Debug  /flp:v=normal  /flp2:warningsonly;logfile=msbuild.wrn  /flp3:errorsonly;logfile=msbuild.err  build.proj\r\n  Restoring all projects...\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Api\\Microsoft.ML.Api.csproj...\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj...\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj...\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj...\r\n  Installing StyleCop.Analyzers 1.1.0-beta008.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing System.Threading.Tasks.Dataflow 4.8.0.\r\n  Installing System.CodeDom 4.4.0.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.nuget.g.targets.\r\n  Restore completed in 8,89 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj...\r\n  Restore completed in 8,89 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Api\\Microsoft.ML.Api.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Api\\Microsoft.ML.Api.csproj.nuget.g.targets.\r\n  Restore completed in 9,48 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Api\\Microsoft.ML.Api.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj...\r\n  Restore completed in 498,26 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.HalLearners\\Microsoft.ML.HalLearners.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.nuget.g.targets.\r\n  Restore completed in 75,34 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.\r\n  Restore completed in 648,76 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj...\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.nuget.g.targets.\r\n  Restore completed in 208,36 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.\r\n  Installing System.Drawing.Common 4.5.0.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.LightGBM\\Microsoft.ML.LightGBM.csproj...\r\n  Installing LightGBM 2.1.2.2.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.LightGBM\\Microsoft.ML.LightGBM.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.LightGBM\\Microsoft.ML.LightGBM.csproj.nuget.g.targets.\r\n  Restore completed in 1,8 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.LightGBM\\Microsoft.ML.LightGBM.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.nuget.g.targets.\r\n  Restore completed in 7,31 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Onnx\\Microsoft.ML.Onnx.csproj...\r\n  Installing Google.Protobuf 3.5.1.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.nuget.g.targets.\r\n  Restore completed in 2,9 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Onnx\\Microsoft.ML.Onnx.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Onnx\\Microsoft.ML.Onnx.csproj.nuget.g.targets.\r\n  Restore completed in 318,75 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Onnx\\Microsoft.ML.Onnx.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.nuget.g.targets.\r\n  Restore completed in 52,38 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PipelineInference\\Microsoft.ML.PipelineInference.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.PipelineInference\\Microsoft.ML.PipelineInference.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.PipelineInference\\Microsoft.ML.PipelineInference.csproj.nuget.g.targets.\r\n  Restore completed in 57,72 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PipelineInference\\Microsoft.ML.PipelineInference.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.nuget.g.targets.\r\n  Restore completed in 43,02 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.StandardLearners\\Microsoft.ML.StandardLearners.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.StandardLearners\\Microsoft.ML.StandardLearners.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.StandardLearners\\Microsoft.ML.StandardLearners.csproj.nuget.g.targets.\r\n  Restore completed in 46,57 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.StandardLearners\\Microsoft.ML.StandardLearners.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.nuget.g.targets.\r\n  Restore completed in 52,58 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.nuget.g.targets.\r\n  Restore completed in 49,52 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj...\r\n  Installing Parquet.Net 2.1.3.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.nuget.g.targets.\r\n  Restore completed in 77,24 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML\\Microsoft.ML.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML\\Microsoft.ML.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML\\Microsoft.ML.csproj.nuget.g.targets.\r\n  Restore completed in 58,42 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML\\Microsoft.ML.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.nuget.g.targets.\r\n  Restore completed in 1,15 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj...\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Xml.XmlSerializer 4.0.11.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing xunit.runner.visualstudio 2.3.1.\r\n  Installing xunit 2.3.1.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing Microsoft.NET.Test.Sdk 15.8.0.\r\n  Installing xunit.analyzers 0.7.0.\r\n  Installing xunit.assert 2.3.1.\r\n  Installing xunit.core 2.3.1.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing BenchmarkDotNet 0.11.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Composition 1.2.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp.Workspaces 2.8.2.\r\n  Installing Microsoft.CodeCoverage 15.8.0.\r\n  Installing Microsoft.TestPlatform.TestHost 15.8.0.\r\n  Installing xunit.extensibility.execution 2.3.1.\r\n  Installing System.Reflection.Metadata 1.5.0.\r\n  Installing xunit.extensibility.core 2.3.1.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Xml.XPath.XmlDocument 4.3.0.\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Composition.Hosting 1.2.0.\r\n  Installing System.Composition.Convention 1.2.0.\r\n  Installing System.Collections.Immutable 1.4.0.\r\n  Installing System.Management 4.5.0.\r\n  Installing System.Composition.AttributedModel 1.2.0.\r\n  Installing System.Composition.Runtime 1.2.0.\r\n  Installing Microsoft.DotNet.InternalAbstractions 1.0.0.\r\n  Installing System.Composition.TypedParts 1.2.0.\r\n  Installing Microsoft.CodeAnalysis.Workspaces.Common 2.8.2.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.2.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 1.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 1.0.3.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.TestPlatform.ObjectModel 15.8.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing CommandLineParser 2.2.1.\r\n  Installing xunit.abstractions 2.0.1.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.2.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Linq.Parallel 4.3.0.\r\n  Installing System.CodeDom 4.5.0.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 1.0.3.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Reflection.TypeExtensions 4.1.0-rc2-24027.\r\n  Installing System.Collections 4.0.11-rc2-24027.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.Linq 4.1.0-rc2-24027.\r\n  Installing System.Reflection.Extensions 4.0.1-rc2-24027.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing System.Diagnostics.Debug 4.0.11-rc2-24027.\r\n  Installing System.Resources.ResourceManager 4.0.1-rc2-24027.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Globalization 4.0.11-rc2-24027.\r\n  Installing System.Console 4.0.0-rc2-24027.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing System.Reflection 4.1.0-rc2-24027.\r\n  Installing System.Runtime.Extensions 4.1.0-rc2-24027.\r\n  Installing System.IO 4.1.0-rc2-24027.\r\n  Installing System.Linq.Expressions 4.0.11-rc2-24027.\r\n  Installing System.Runtime 4.1.0-rc2-24027.\r\n  Installing System.ComponentModel.EventBasedAsync 4.0.11.\r\n  Installing System.Threading.Thread 4.0.0.\r\n  Installing System.Reflection.Metadata 1.3.0.\r\n  Installing System.Diagnostics.TextWriterTraceListener 4.0.0.\r\n  Installing System.Runtime.Loader 4.0.0.\r\n  Installing System.Diagnostics.TraceSource 4.0.0.\r\n  Installing System.Diagnostics.Process 4.1.0.\r\n  Installing System.Xml.XPath.XmlDocument 4.0.1.\r\n  Installing System.ComponentModel.TypeConverter 4.1.0.\r\n  Installing System.Runtime.Serialization.Json 4.0.2.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Collections.Immutable 1.2.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing System.Threading.ThreadPool 4.0.10.\r\n  Installing Microsoft.Win32.Registry 4.0.0.\r\n  Installing System.Text.Encoding 4.0.11-rc2-24027.\r\n  Installing System.Reflection.Primitives 4.0.1-rc2-24027.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XPath 4.0.1.\r\n  Installing System.Xml.XmlDocument 4.0.1.\r\n  Installing System.ComponentModel 4.0.1.\r\n  Installing System.Threading.Tasks 4.0.11-rc2-24027.\r\n  Installing System.ComponentModel.Primitives 4.1.0.\r\n  Installing System.Collections.Specialized 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1-rc2-24027.\r\n  Installing System.Private.DataContractSerialization 4.1.1.\r\n  Installing System.Threading 4.0.11-rc2-24027.\r\n  Installing System.ObjectModel 4.0.12-rc2-24027.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1-rc2-24027.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.nuget.g.targets.\r\n  Restore completed in 1,11 min for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.nuget.g.targets.\r\n  Restore completed in 1,14 min for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CpuMath.UnitTests.netstandard\\Microsoft.ML.CpuMath.UnitTests.netstandard.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CpuMath.UnitTests.netstandard\\Microsoft.ML.CpuMath.UnitTests.netstandard.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CpuMath.UnitTests.netstandard\\Microsoft.ML.CpuMath.UnitTests.netstandard.csproj.nuget.g.targets.\r\n  Restore completed in 712,12 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CpuMath.UnitTests.netstandard\\Microsoft.ML.CpuMath.UnitTests.netstandard.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj...\r\n  Installing FSharp.Core 4.5.2.\r\n  Installing System.ValueTuple 4.4.0.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.nuget.g.targets.\r\n  Restore completed in 1,94 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.InferenceTesting\\Microsoft.ML.InferenceTesting.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.InferenceTesting\\Microsoft.ML.InferenceTesting.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.InferenceTesting\\Microsoft.ML.InferenceTesting.csproj.nuget.g.targets.\r\n  Restore completed in 331,06 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.InferenceTesting\\Microsoft.ML.InferenceTesting.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj...\r\n  Installing Microsoft.Win32.SystemEvents 4.5.0.\r\n  Installing MlNetMklDeps 0.0.0.5.\r\n  Installing Microsft.ML.TensorFlow.TestModels 0.0.2-test.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.HalLearners\\Microsoft.ML.HalLearners.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.HalLearners\\Microsoft.ML.HalLearners.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.nuget.g.targets.\r\n  Restore completed in 1,99 min for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.HalLearners\\Microsoft.ML.HalLearners.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj...\r\n  Restore completed in 2,15 min for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj...\r\n  Restore completed in 48,56 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj...\r\n  Restore completed in 43,41 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.\r\n  Restoring packages for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\tools-local\\Microsoft.ML.CodeAnalyzer\\Microsoft.ML.CodeAnalyzer.csproj...\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.nuget.g.targets.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.nuget.g.targets.\r\n  Restore completed in 193,08 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.\r\n  Restore completed in 204,37 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.\r\n  Restore completed in 294,5 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.\r\n  Installing System.Reflection.TypeExtensions 4.4.0.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CodeAnalyzer\\Microsoft.ML.CodeAnalyzer.csproj.nuget.g.props.\r\n  Generating MSBuild file c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.CodeAnalyzer\\Microsoft.ML.CodeAnalyzer.csproj.nuget.g.targets.\r\n  Restore completed in 3,6 sec for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\tools-local\\Microsoft.ML.CodeAnalyzer\\Microsoft.ML.CodeAnalyzer.csproj.\r\n  Building redist components...\r\n  Downloading 'https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.10.0.zip' to 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0.zip'.\r\n  Downloading 'https://github.com/tensorflow/tensorflow/blob/master/LICENSE' to 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\LICENSE'.\r\n  Generating checksum for 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0.zip' into 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0.zip.sha'...\r\n  Decompressing 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0.zip' into 'c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0'...\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\lib\\tensorflow.dll -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\runtimes\\win-x64\\native\\tensorflow.dll\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\include\\tensorflow\\c\\LICENSE -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\THIRD_PARTY_NOTICES.txt\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\\\LICENSE -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\LICENSE.txt\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\lib\\tensorflow.dll -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/x64.Debug\\Native\\tensorflow.dll\r\n  Building native components...\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\r\n  **********************************************************************\r\n  ** Visual Studio 2017 Developer Command Prompt v15.0.26430.15\r\n  ** Copyright (c) 2017 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: 'x86_x64'\r\n  Commencing native build of dotnet/machinelearning\r\n\r\n  Calling \"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\\\gen-buildsys-win.bat\" \"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\\" \"15 2017\" x64\r\n  -- Selecting Windows SDK version 10.0.15063.0 to target Windows 10.0.16299.\r\n  -- The C compiler identification is unknown\r\n  -- The CXX compiler identification is unknown\r\n  CMake Error in CMakeLists.txt:\r\n    No CMAKE_C_COMPILER could be found.\r\n\r\n\r\n\r\n  CMake Error in CMakeLists.txt:\r\n    No CMAKE_CXX_COMPILER could be found.\r\n\r\n\r\n\r\n  -- Configuring incomplete, errors occurred!\r\n  See also \"C:/Users/mbilenko/Documents/GitHub/machinelearning/bin/obj/x64.Debug/Native/CMakeFiles/CMakeOutput.log\".\r\n  See also \"C:/Users/mbilenko/Documents/GitHub/machinelearning/bin/obj/x64.Debug/Native/CMakeFiles/CMakeError.log\".\r\n  Failed to generate native component build project!\r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj(61,5): error MSB3073: The command \"\"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd\" Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj(61,5): error MSB3073: The command \"\"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd\" Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:02:45.35\r\nCommand execution failed with exit code 1.\r\n \r\n=========   Vanilla CMD log: \r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning>build.cmd\r\nTools are already initialized.\r\nRunning: c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\Tools\\dotnetcli\\dotnet msbuild /nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log /p:Configuration=Debug  /flp:v=normal  /flp2:warningsonly;logfile=msbuild.wrn  /flp3:errorsonly;logfile=msbuild.err  build.proj\r\n  Restoring all projects...\r\n  Restore completed in 51,9 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.\r\n  Restore completed in 51,9 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.\r\n  Restore completed in 59,8 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.\r\n  Restore completed in 59,8 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Api\\Microsoft.ML.Api.csproj.\r\n  Restore completed in 3 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.\r\n  Restore completed in 3,02 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.HalLearners\\Microsoft.ML.HalLearners.csproj.\r\n  Restore completed in 3,27 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.\r\n  Restore completed in 2,76 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.\r\n  Restore completed in 1,65 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.\r\n  Restore completed in 2,08 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.\r\n  Restore completed in 25,71 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.\r\n  Restore completed in 3,67 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.LightGBM\\Microsoft.ML.LightGBM.csproj.\r\n  Restore completed in 7,48 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Onnx\\Microsoft.ML.Onnx.csproj.\r\n  Restore completed in 2,37 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.\r\n  Restore completed in 3,08 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.\r\n  Restore completed in 3,51 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.PipelineInference\\Microsoft.ML.PipelineInference.csproj.\r\n  Restore completed in 10,09 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.StandardLearners\\Microsoft.ML.StandardLearners.csproj.\r\n  Restore completed in 2,44 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.\r\n  Restore completed in 3,77 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.\r\n  Restore completed in 2,64 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.\r\n  Restore completed in 7,89 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.\r\n  Restore completed in 9,61 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Microsoft.ML\\Microsoft.ML.csproj.\r\n  Restore completed in 16,14 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CpuMath.UnitTests.netstandard\\Microsoft.ML.CpuMath.UnitTests.netstandard.csproj.\r\n  Restore completed in 11,33 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.\r\n  Restore completed in 27,55 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.\r\n  Restore completed in 27,41 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.\r\n  Restore completed in 3,56 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.InferenceTesting\\Microsoft.ML.InferenceTesting.csproj.\r\n  Restore completed in 3,9 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.\r\n  Restore completed in 6,47 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.\r\n  Restore completed in 21,44 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.\r\n  Restore completed in 4,05 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.\r\n  Restore completed in 4,36 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\tools-local\\Microsoft.ML.CodeAnalyzer\\Microsoft.ML.CodeAnalyzer.csproj.\r\n  Restore completed in 4,97 ms for c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.\r\n  Building redist components...\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\lib\\tensorflow.dll -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\runtimes\\win-x64\\native\\tensorflow.dll\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\include\\tensorflow\\c\\LICENSE -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\THIRD_PARTY_NOTICES.txt\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\\\LICENSE -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj//packages/Microsoft.ML.TensorFlow.Redist\\LICENSE.txt\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/obj/AnyCPU.Debug\\Microsoft.ML.TensorFlow.Redist\\libtensorflow-cpu-windows-x86_64-1.10.0\\lib\\tensorflow.dll -> c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\bin/x64.Debug\\Native\\tensorflow.dll\r\n  Building native components...\r\n  c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\r\n  \"\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\\\VsDevCmd.bat\"\" не является внутренней или внешней\r\n  командой, исполняемой программой или пакетным файлом.\r\nEXEC : error : Visual Studio 2015 or 2017 required [c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj]\r\n         Please see https://github.com/dotnet/machinelearning/tree/master/Documentation for build instructions.\r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj(61,5): error MSB3073: The command \"\"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd\" Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nEXEC : error : Visual Studio 2015 or 2017 required [c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj]\r\nc:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.proj(61,5): error MSB3073: The command \"\"c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\src\\Native\\build.cmd\" Debug x64 --mkllibpath c:\\Users\\mbilenko\\Documents\\GitHub\\machinelearning\\packages/mlnetmkldeps\\0.0.0.5\\runtimes\\win-x64\\native\" exited with code 1.\r\n    0 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:03.63\r\nCommand execution failed with exit code 1.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/894","RelatedDescription":"Open issue \"Build is failing (CMake issue for VS Dev console, VS version issue for Windows console)\" (#894)"},{"Id":"359315860","IsPullRequest":false,"CreatedAt":"2018-09-12T04:57:42","Actor":"jignparm","Number":"893","RawContent":null,"Title":"ONNX/Sonoma - add strong name signing to dlls.","State":"open","Body":"ML.Net requires strong-name signed assemblies for loading dlls.","Url":"https://github.com/dotnet/machinelearning/issues/893","RelatedDescription":"Open issue \"ONNX/Sonoma - add strong name signing to dlls.\" (#893)"},{"Id":"359315596","IsPullRequest":false,"CreatedAt":"2018-09-12T04:56:11","Actor":"jignparm","Number":"892","RawContent":null,"Title":"ONNX/Sonoma -- Port to .NetStandard","State":"open","Body":"Replace the windows only  C++/CLI layer for unmanged code interop with Pinvoke calls to  comply with .NetStandard and remove .NetFramework dependency","Url":"https://github.com/dotnet/machinelearning/issues/892","RelatedDescription":"Open issue \"ONNX/Sonoma -- Port to .NetStandard\" (#892)"},{"Id":"359315191","IsPullRequest":false,"CreatedAt":"2018-09-12T04:53:34","Actor":"jignparm","Number":"891","RawContent":null,"Title":"ONNX/Sonoma - remove dependency on Python model_export utility","State":"open","Body":"Sonoma ships with a model_export utility to generates a manifest.json file containing input/output shapes, names, and types.\r\n\r\nIt's not required for ONNX models in ml.net, and causes extra user hops -- this dependency needs to be removed.","Url":"https://github.com/dotnet/machinelearning/issues/891","RelatedDescription":"Open issue \"ONNX/Sonoma - remove dependency on Python model_export utility\" (#891)"},{"Id":"359261749","IsPullRequest":true,"CreatedAt":"2018-09-11T23:35:40","Actor":"ericstj","Number":"890","RawContent":null,"Title":"[WIP] Add GPU package of tensorflow","State":"open","Body":"Best reviewed commit-by-commit.\r\n\r\nThis adds a GPU build package for tensorflow and attempts to use it for tests.\r\n\r\nI'm not certain yet about the mechanism for opting into the GPU build, this was really just a sample to see what we could do.","Url":"https://github.com/dotnet/machinelearning/pull/890","RelatedDescription":"Open PR \"[WIP] Add GPU package of tensorflow\" (#890)"},{"Id":"359246664","IsPullRequest":false,"CreatedAt":"2018-09-11T22:25:03","Actor":"justinormont","Number":"889","RawContent":null,"Title":"Hot linking to a UCI dataset","State":"open","Body":"I noticed we are hot linking to a UCI dataset:\r\nhttps://github.com/dotnet/machinelearning/blob/a6e3c0a79c225c84f882cb8c8c6013f070cf0e7a/build.proj#L80\r\n\r\nWe should get CELA approval for hot linking, and if possible get approval to redistribute the full dataset in either the [/test/data/](https://github.com/dotnet/machinelearning/tree/6ed90b713f0dbf51a355dab189988554991a7b16/test/data) folder (if small), or the CDN (if large). \r\n\r\nWe should still explore Git LFS for hosting datasets. [[relevant discussion](https://github.com/dotnet/machinelearning/pull/198#issuecomment-391042287)]\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/889","RelatedDescription":"Open issue \"Hot linking to a UCI dataset\" (#889)"},{"Id":"359228389","IsPullRequest":true,"CreatedAt":"2018-09-11T21:20:02","Actor":"Anipik","Number":"888","RawContent":null,"Title":"Added numeric ranking Performance Tests","State":"open","Body":"Added benchmarking performance tests for Numeric ranking.\r\n\r\ncc @justinormont @sfilipi @danmosemsft @eerhardt @shauheen \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/888","RelatedDescription":"Open PR \"Added numeric ranking Performance Tests\" (#888)"},{"Id":"359189638","IsPullRequest":true,"CreatedAt":"2018-09-11T19:28:54","Actor":"eerhardt","Number":"887","RawContent":null,"Title":"Move IComponentFactory from EntryPoints namespace","State":"open","Body":"I chose the same namespace as `ComponentCatalog` is in, which is the root `Microsoft.ML.Runtime` namespace. If we ever move `ComponentCatalog` to a different namespace, we could move this as well.\r\n\r\nI spot checked as many places as I could to remove unnecessary `using Microsoft.ML.Runtime.EntryPoints` statements.\r\n\r\nFix #861 ","Url":"https://github.com/dotnet/machinelearning/pull/887","RelatedDescription":"Open PR \"Move IComponentFactory from EntryPoints namespace\" (#887)"},{"Id":"359176721","IsPullRequest":true,"CreatedAt":"2018-09-11T18:55:37","Actor":"eerhardt","Number":"886","RawContent":null,"Title":"Cleanup ComponentCatalog code","State":"open","Body":"Format document in VS.\r\nRemove unused method.\r\nUse readonly property declarations.\r\nDrop unnecessary partial keyword.\r\nRemove unnecessary define.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/886","RelatedDescription":"Open PR \"Cleanup ComponentCatalog code\" (#886)"},{"Id":"358877756","IsPullRequest":true,"CreatedAt":"2018-09-11T18:32:07","Actor":"Zruty0","Number":"882","RawContent":null,"Title":"TensorFlow static extensions, SDCA multiclass static extensions","State":"closed","Body":"Code changes to enable end-to-end static pipe training for TF and multiclass","Url":"https://github.com/dotnet/machinelearning/pull/882","RelatedDescription":"Closed or merged PR \"TensorFlow static extensions, SDCA multiclass static extensions\" (#882)"},{"Id":"359167602","IsPullRequest":false,"CreatedAt":"2018-09-11T18:31:19","Actor":"wschin","Number":"885","RawContent":null,"Title":"Create IDataView from unsafe pointer like float*","State":"open","Body":"There is a CreateDataView function which can accept a customized data type (`IList<TRow> data`) and optionally a schema (`SchemaDefinition schemaDefinition`). Is it possible to pass a data structure like\r\n`class NativeTensor{\r\n  long size;\r\n  float* addr;\r\n};`\r\nto `IList<TRow> data` with a proper definition of schema. I have searched through the code base but didn't find any test with `schemaDefinition!=null`.","Url":"https://github.com/dotnet/machinelearning/issues/885","RelatedDescription":"Open issue \"Create IDataView from unsafe pointer like float*\" (#885)"},{"Id":"358883471","IsPullRequest":true,"CreatedAt":"2018-09-11T17:40:37","Actor":"TomFinley","Number":"883","RawContent":null,"Title":"Static SDCA Multiclass, and Multiclass Evaluator","State":"closed","Body":"Related to #632.","Url":"https://github.com/dotnet/machinelearning/pull/883","RelatedDescription":"Closed or merged PR \"Static SDCA Multiclass, and Multiclass Evaluator\" (#883)"},{"Id":"359004976","IsPullRequest":false,"CreatedAt":"2018-09-11T11:31:21","Actor":"SuperDaveWhite","Number":"884","RawContent":null,"Title":"Setting column weights in KmeansPlusPlus","State":"open","Body":"I find no clue as to how column weights can be adjusted for KmeansPlusPlus or any other type of ML. Gitter board shows no answer after several days. Is there an example? I did download the source code for ML.net and found nothing in the KMeans constructors. I assume ML.net will be doing this on the import or is it something not implemented so far? What is the road map to making this usable for where  KmeansPlusPlus needs to be tuned?\r\n\r\nIn Accord.net it's WeightColumn = (new double[] { .95, 0.05, .05, .95 }) . There is some WeightColumn to as a string, but no documentation how it would be used.\r\n\r\npublic Microsoft.ML.Runtime.EntryPoints.Optional<string> WeightColumn { get; set; }\r\n","Url":"https://github.com/dotnet/machinelearning/issues/884","RelatedDescription":"Open issue \"Setting column weights in KmeansPlusPlus\" (#884)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-14T05:30:35.9132512Z","RunDurationInMilliseconds":1127}