{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7697803616","Type":"PullRequestEvent","CreatedAt":"2018-05-18T20:12:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1693","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix timestamps in various intermediate folders\" (#1693) at xamarin/xamarin-android","RelatedBody":"When taking an audit of our build times, I was testing the following\r\nscenario:\r\n- `msbuild Droid.csproj /t:Install /bl:first.binlog`\r\n- `msbuild Droid.csproj /t:Install /bl:second.binlog`\r\n\r\nIn theory, the \"second\" build should be very fast and basically not do\r\nanything. Unfortunately that was not the case.\r\n\r\nIn my example, I saw build logs such as:\r\n\r\n    Target _LinkAssembliesNoShrink\r\n        Building target \"_LinkAssembliesNoShrink\" partially, because some output files are out of date with respect to their input files.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\.nuget\\packages\\xamarin.forms\\3.0.0.482510\\lib\\MonoAndroid10\\FormsViewGroup.dll, Output=obj\\Debug\\android\\assets\\FormsViewGroup.dll] Input file is newer than output file.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\.nuget\\packages\\xamarin.forms\\3.0.0.482510\\lib\\MonoAndroid10\\Xamarin.Forms.Core.dll, Output=obj\\Debug\\android\\assets\\Xamarin.Forms.Core.dll] Input file is newer than output file.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\.nuget\\packages\\xamarin.forms\\3.0.0.482510\\lib\\MonoAndroid10\\Xamarin.Forms.Platform.Android.dll, Output=obj\\Debug\\android\\assets\\Xamarin.Forms.Platform.Android.dll] Input file is newer than output file.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\.nuget\\packages\\xamarin.forms\\3.0.0.482510\\lib\\MonoAndroid10\\Xamarin.Forms.Platform.dll, Output=obj\\Debug\\android\\assets\\Xamarin.Forms.Platform.dll] Input file is newer than output file.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\.nuget\\packages\\xamarin.forms\\3.0.0.482510\\lib\\MonoAndroid10\\Xamarin.Forms.Xaml.dll, Output=obj\\Debug\\android\\assets\\Xamarin.Forms.Xaml.dll] Input file is newer than output file.\r\n        LinkAssemblies\r\n\r\nLooking at the `LinkAssemblies` MSBuild task, I didn't see anything\r\nthat would be setting the timestamps on copied files.\r\n\r\nFor timestamps to be correct, we should either:\r\n- Use `MonoAndroidHelper.SetLastAccessAndWriteTimeUtc` in C#\r\n- Use the `<Touch />` MSBuild task after using the `<Copy />` MSBuild\r\n  task\r\n\r\nThis lead me to write a `CheckTimestamps` unit test that does the\r\nfollowing:\r\n- Store `DateTime.UtcNow` in a variable\r\n- Build an app\r\n- Make sure nothing in `bin` or `obj` are older than the start time\r\n\r\nThis uncovered even more out of date files such as:\r\n- `mono.android.jar`\r\n- Assemblies in `obj/Debug/linksrc` or `$(MonoAndroidLinkerInputDir)`\r\n\r\nFixes made in various places:\r\n- `<LinkAssemblies />` task needed to use\r\n  `MonoAndroidHelper.SetLastAccessAndWriteTimeUtc` everywhere\r\n  `MonoAndroidHelper.CopyIfChanged` is used\r\n- The `_CopyIntermediateAssemblies` target appeared to have a typo. It\r\n  was running a `<Touch />` on `ResolvedUserAssemblies` where it\r\n  looked like it should be `ResolvedAssemblies` from the above\r\n  `<Copy />`\r\n- The `_AddStaticResources` target needed a `<Touch />` for\r\n  `mono.android.jar`\r\n\r\nThis fix should improve our incremental build times dramatically, as\r\nthese timestamps caused other targets to run that slow things down."},{"Id":"7697735575","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:56:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1700","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Failed to load ILRepack.Lib.MSBuild.Task.dll\" (#1700) at xamarin/xamarin-android","RelatedBody":"When building via monodroid we get a build error\r\n\r\n\tError initializing task ILRepack: System.IO.FileNotFoundException:\r\n\tFile name: '[path]/monodroid/external/xamarin-android/src/Xamarin.Android.Build.Tasks/ILRepack.Lib.MSBuild.Task.dll'\r\n\r\nwhich it really really weird because the .targets in the NuGet is using\r\n\r\n\t$(MSBuildThisFileDirectory)ILRepack.Lib.MSBuild.Task.dll\r\n\r\nand that is somehow resolving to a path outside of the the `packages`\r\nfolder....\r\n\r\nSo lets load the assembly in the `ILRepack.targets` manually\r\nfrom the location we know it will be."},{"Id":"7697361683","Type":"PullRequestEvent","CreatedAt":"2018-05-18T18:29:43","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1703","RelatedDescription":"Opened pull request \"[macOS] Drop requirement for Xcode when building Mono runtime\" (#1703) at xamarin/xamarin-android","RelatedBody":"Mono SDK build currently checks for presence of Xcode when building on macOS.\r\nHowever, Xcode isn't required to build neither Mono (for desktop or Android) nor\r\nXamarin.Android itself. This commit drops the dependency when building the\r\nAndroid toolchains. The only build requirement, as far as tools are concerned,\r\non macOS are the command line tools from Apple."},{"Id":"7697205363","Type":"PullRequestEvent","CreatedAt":"2018-05-18T17:55:44","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1702","RelatedDescription":"Opened pull request \"[DO NOT MERGE] Better mkbundle interop\" (#1702) at xamarin/xamarin-android","RelatedBody":"**NOTE: this PR can be merged *ONLY* after Xamarin.Android can update its Mono\r\nto a version which [includes this commit](https://github.com/mono/mono/commit/170e9442c976ed6cd4a499093e11a9e12e7368bb).\r\nIt would be best that Mono bump to pull the commit would be added to this PR, so that the tests succeed and we have no broken\r\nbuilds.**\r\n\r\nXamarin.Android side of the Mono's mkbundle update which makes it easier (and\r\nsafer) to introduce changes in the template generated by mkbundle when creating\r\nthe application bundle.\r\n\r\nCode generated by mkbundle calls into the Mono runtime and in order for this to\r\nwork on Xamarin.Android, libmonodroid needs to properly initialize the bundle or\r\nthe application won't work (`dlsym` won't be able to find the Mono runtime\r\nsymbols). This has been done by patching the generated code using plain\r\nsearch-and-replace which is very fragile even to the slightest changes and it\r\ndoesn't guarantee that any new additions won't break the Xamarin.Android\r\nbundle (see https://github.com/xamarin/xamarin-android/issues/1651)\r\n\r\nMono's mkbundle has been updated (see\r\nhttps://github.com/mono/mono/commit/170e9442c976ed6cd4a499093e11a9e12e7368bb)\r\nto support third parties, like Xamarin.Android, which need to use special\r\nmethods to initialize the bundle. The third party provides a small bit of source\r\ncode with a dispatch structure (mkbundle has its own default version of the\r\nstructure) which contains pointers to all the Mono runtime methods required by\r\nthe initialization code. The provided code is inserted by mkbundle in place of\r\nits default version. If there are any incompatibilities between the two\r\nstructures (such as missing pointers, invalid signature, additional pointers\r\netc) then the bundle will not build, thus allowing the third party to notice the\r\nproblem early and update its version of the structure. Likewise, if the build\r\nsucceeds but the pointers aren't correctly initialized (i.e. they are `null`), a\r\nruntime check will discover the fact and fail the application gracefully.\r\n\r\nThe bit of inserted code also contains platform-specific logging function in\r\nplace of the calls to `fprintf` used by mkbundle previously. For Xamarin.Android\r\nit means that all the error messages will end up in logcat.\r\n\r\nXamarin.Android's version of the structure and the error logging function are\r\nfound in the `mkbundle-api.h` C header which is used *both* when building\r\nlibmonodroid (to ensure that when initializing the generated bundle libmonodroid\r\nis ABI-compatible with it) and is copied to the framework directory to be used\r\nwhen generating the application bundle.\r\n\r\nSample of XA-generated bundle code:\r\nhttps://gist.github.com/grendello/465ecec96b3bee801e6bbc5a28019833"},{"Id":"7696477783","Type":"IssuesEvent","CreatedAt":"2018-05-18T15:26:08","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1651","RelatedDescription":"Reopened issue \"Bundled app initialization error (vs 15.7 preview)\" (#1651) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a xamarin app for Android\r\n2. Enable \"Bundle Assemblies into Native Code\" option : <BundleAssemblies>true</BundleAssemblies> in csproj\r\n3. Build and launch app in VS 2017 15.7 preview\r\n\r\n### Expected Behavior\r\n\r\nNo crash.\r\nThis is actually what happens with VS 2017 15.6.7\r\n\r\n### Actual Behavior\r\n\r\nApp crashes (when using VS 2017 15.7 preview) with the following error:\r\nbundled app initialization error: dlopen failed: cannot locate symbol \"mono_jit_set_aot_mode\" referenced by libmonodroid_bundle_app.so\r\n\r\n### Version Information (causing the error)\r\n\r\nVersion 15.7.0 Preview 5.0\r\nVisualStudio.15.Preview/15.7.0-pre.5.0+27625.0\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nXamarin   4.10.0.440 (943b34d9d)\r\nXamarin.Android SDK   8.3.0.18 (HEAD/1f8462ef1)\r\n\r\n### Version Information (no error)\r\n\r\nVersion 15.6.7\r\nVisualStudio.15.Release/15.6.7+27428.2043\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nXamarin   4.9.0.753 (f0f46392f)\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\n\n> VS bug [#618947](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/618947)"},{"Id":"7696404518","Type":"PullRequestEvent","CreatedAt":"2018-05-18T15:13:12","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1682","RelatedDescription":"Closed pull request \"[tests] update NUnit.ConsoleRunner\" (#1682) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=1685026\r\n\r\nOn master, Windows builds have been frequently timing out on the\r\ncompletion of the Xamarin.Android.Build.Tests NUnit tests:\r\n\r\n    2018-05-14T16:11:30.6755378Z   Test Run Summary\r\n    2018-05-14T16:11:30.6755639Z     Overall result: Warning\r\n    2018-05-14T16:11:30.6755977Z     Test Count: 314, Passed: 275, Failed: 0, Warnings: 0, Inconclusive: 0, Skipped: 39\r\n    2018-05-14T16:11:30.6756344Z       Skipped Tests - Ignored: 39, Explicit: 0, Other: 0\r\n    2018-05-14T16:11:30.6758931Z     Start time: 2018-05-14 15:48:47Z\r\n    2018-05-14T16:11:30.6772121Z       End time: 2018-05-14 16:11:30Z\r\n    2018-05-14T16:11:30.6772666Z       Duration: 1362.691 seconds\r\n    2018-05-14T16:11:30.6772900Z\r\n    2018-05-14T16:11:30.6989428Z   Results (nunit2) saved as TestResult-Xamarin.Android.Build.Tests.xml\r\n    2018-05-14T19:34:35.2647344Z Attempting to cancel the build...\r\n    2018-05-14T19:34:40.2864864Z ##[warning]build-tools\\scripts\\RunTests.targets(30,5): Warning MSB4220: Waiting for the currently executing task \"Exec\" to cancel.\r\n\r\nVSTS is hitting the 4 hour build timeout we have configured, and so\r\nVSTS is cancelling the running `<Exec />` MSBuild task. It is very\r\nstrange, because it seems to be timing out *after* it starts writing\r\nthe test results file...\r\n\r\nUpdating NUnit.ConsoleRunner to see if this helps any:\r\n\r\nNUnit.ConsoleRunner 3.7.0 -> 3.8.0"},{"Id":"7695964944","Type":"IssuesEvent","CreatedAt":"2018-05-18T13:59:03","Actor":"ceblanda","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1701","RelatedDescription":"Opened issue \"WebView history is wrong when second page is loaded using Ajax and the UserAgent has been modified\" (#1701) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Run the attached BackButtonTest app on a physical device running Android 5.0 or higher, which loads the JQueryMobile Navigation page .  Scroll down and tap the link \"To the homepage, with Ajax\"\r\n2.  Tap the hardware back button.  You will see an alert that shows the history.length.  It is 1, it should be 2.  clear the alert.  The page does not change back to the initial page.  Quit the app.\r\n3.  Run the app a second time, this time scroll down and tap the link \"To the homepage, no Ajax\".  Tap the hardware back button.  This time the alert displays 2, and upon clearing it the page will change back.\r\n4. Scroll to the \"with Ajax\" link and tap it, then tap the hardware back button.  Now the history shows 2 and the page will change back.\r\n5.  Stop the app and edit \\BackButtonTest.Droid\\CustomWebViewRenderer.cs and comment out line 41 which adds to the UserAgentString.  Repeat steps 1 & 2, this time the history.length is 2 and the page does change back\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n[BackButtonTest.zip](https://github.com/xamarin/xamarin-android/files/2017125/BackButtonTest.zip)\r\n\r\n\r\n### Expected Behavior\r\nThe back button should work the same in all cases.\r\n\r\n### Actual Behavior\r\nThe back button does not work when the UserAgentString is modified AND the page is loaded with Ajax.\r\n\r\n### Version Information\r\nThis works on a device running Android 4.4.2, but does not work on devices running Android 5.0 and above.  According to the documentation, the Android Webview User Agent was changed for KitKat (4.4.4).  I can not recreate the issue using my emulators, only physical devices.  The version of Xamarin does not appear to affect the issue\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7698727201","Type":"PullRequestEvent","CreatedAt":"2018-05-19T02:22:57","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2669","RelatedDescription":"Merged pull request \"[iOS] `PanGestureRecognizer`s on iOS will now pass through pans to other views.\" (#2669) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`PanGestureRecognizer`s on iOS will now pass through pans to other views if you set the new platform specific to true. Please note that this is an opt-in bug fix.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2299\r\n\r\n### API Changes ###\r\n\r\nadded iOS Platform Specific:\r\n- `Application.Current.On<iOS>().SetPanGestureRecognizerShouldRecognizeSimultaneously(true/false);`\r\n- `bool Application.Current.On<iOS>().GetPanGestureRecognizerShouldRecognizeSimultaneously();`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7698718691","Type":"IssuesEvent","CreatedAt":"2018-05-19T02:15:36","Actor":"davidortinau","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2774","RelatedDescription":"Closed issue \"Upgrading to Xamarin forms 3.0 breaks intellisense.\" (#2774) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have a project where intellisense works fine for .xaml files, but if i upgrade xamarin forms from 2.5.1.444934 to anything 3.0 or higher it stops working, rolling back changes solves the problem.  This only breaks for .xaml, .cs files work fine.  I also tried some brand new projects, shared project works fine on 3.0 but .net standard intellisense doesn't work even on a new project.\r\n\r\nI am also using the latest version of resharper.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create new project: Visual C#, Cross-Platform, Mobile App (Xamarin.Forms), Blank App, .NET Standard\r\n2. Open MainPage.xaml in the .NET Standard 2.0 project.\r\n3. Try adding a new control or property and I get no intellisense at all.\r\n\r\n### Expected Behavior\r\nUpdating an existing project to 3.0 or higher, or creating a new project, I would expect intellisense to work for .xaml files.\r\n### Actual Behavior\r\nIntellisense does not work for xaml files.\r\n### Basic Information\r\nI also use resharper if that could be effecting things, version: 2018.1 (most recent)\r\n- Version with issue:\r\n- Last known good version:\r\nXamarin forms 2.5.1.444934\r\n\r\nAll default versions below:\r\n\r\n- IDE: Visual Studio 2017 15.7.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:   11.10 <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.3 <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  10.0 Build 16299<!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7698701787","Type":"IssuesEvent","CreatedAt":"2018-05-19T02:01:54","Actor":"YGuerin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2776","RelatedDescription":"Opened issue \"[Intellisense] Resources from MergedWith and ResourceDictionary.MergedDictionaries are not displayed in Intellisense\" (#2776) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn VS, 15.7.1, Resources from MergedWith and ResourceDictionary.MergedDictionaries are not displayed in Intellisense \r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a first dictionary Dictionary1 with one resource Resource1\r\n2. Create a second dictionary Dictionary2 with one resource Resource2\r\n3. Create a resource Resource3 in App.xaml\r\n4. In App.xaml :\r\n- Refer Dictionary1 with ResourceDictionary.MergedWith\r\n- Refer Dictionary2 with ResourceDictionary.MergedDictionaries\r\n6. In MainPage.xaml, use Intellisense to find the previous resources as a StaticResource\r\n\r\n### Expected Behavior\r\nAll resources are displayed with Intellisense \r\n\r\n### Actual Behavior\r\nOnly resources in App.xaml are displayed\r\n\r\n### Basic Information\r\n\r\n- Version with issue: XF 3.0.0.482510\r\n- Last known good version: -\r\n- IDE: Visual Studio 15.7.1\r\n- Platform Target Frameworks: \r\n  - iOS:  11.10.1.177\r\n  - Android: 8.3.0.19\r\n\r\n### Reproduction Link\r\n\r\n[App2.zip](https://github.com/xamarin/Xamarin.Forms/files/2019036/App2.zip)"},{"Id":"7698504923","Type":"PullRequestEvent","CreatedAt":"2018-05-18T23:52:06","Actor":"Clancey","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2775","RelatedDescription":"Opened pull request \"Visual element packager\" (#2775) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nFixed a crash with null renderers. Or invalid indexes\r\nJason Smith should approve!\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7698498300","Type":"IssuesEvent","CreatedAt":"2018-05-18T23:48:50","Actor":"kfuller002","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2774","RelatedDescription":"Opened issue \"Upgrading to Xamarin forms 3.0 breaks intellisense.\" (#2774) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have a project where intellisense works fine for .xaml files, but if i upgrade xamarin forms from 2.5.1.444934 to anything 3.0 or higher it stops working, rolling back changes solves the problem.  This only breaks for .xaml, .cs files work fine.  I also tried some brand new projects, shared project works fine on 3.0 but .net standard intellisense doesn't work even on a new project.\r\n\r\nI am also using the latest version of resharper.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create new project: Visual C#, Cross-Platform, Mobile App (Xamarin.Forms), Blank App, .NET Standard\r\n2. Open MainPage.xaml in the .NET Standard 2.0 project.\r\n3. Try adding a new control or property and I get no intellisense at all.\r\n\r\n### Expected Behavior\r\nUpdating an existing project to 3.0 or higher, or creating a new project, I would expect intellisense to work for .xaml files.\r\n### Actual Behavior\r\nIntellisense does not work for xaml files.\r\n### Basic Information\r\nI also use resharper if that could be effecting things, version: 2018.1 (most recent)\r\n- Version with issue:\r\n- Last known good version:\r\nXamarin forms 2.5.1.444934\r\n\r\nAll default versions below:\r\n\r\n- IDE: Visual Studio 2017 15.7.1\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:   11.10 <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 8.3 <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  10.0 Build 16299<!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7697685622","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:44:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2772","RelatedDescription":"Opened pull request \"[iOS] Restore NativeViewWrapper registration\" (#2772) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUncomment NativeViewWrapper ExportRenderer.\r\n\r\nAlso added a check for the presence of renderers in each platform to prevent such a thing from being missed in the future.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2757 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7697465610","Type":"PullRequestEvent","CreatedAt":"2018-05-18T18:52:48","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4103","RelatedDescription":"Merged pull request \"[foundation] Fix empty NSData.ToArray() crash\" (#4103) at xamarin/xamarin-macios","RelatedBody":"When `NSData` is empty, the `ToArray()` method throws `System.ArgumentNullException`.\r\nIn this case `NSData.Bytes` is null.\r\n\r\nI added a length check before copying the array.\r\n"},{"Id":"7696182646","Type":"PullRequestEvent","CreatedAt":"2018-05-18T14:35:17","Actor":"kunigaku","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4103","RelatedDescription":"Opened pull request \"[foundation] Fix empty NSData.ToArray() crash\" (#4103) at xamarin/xamarin-macios","RelatedBody":"When `NSData` is empty, the `ToArray()` method throws `System.ArgumentNullException`.\r\nIn this case `NSData.Bytes` is null.\r\n\r\nI added a length check before copying the array.\r\n"},{"Id":"7695147253","Type":"IssuesEvent","CreatedAt":"2018-05-18T11:12:07","Actor":"atinlko","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4102","RelatedDescription":"Opened issue \"Unexpected error (MT0000) in release mode\" (#4102) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<--\r\nPlease fill in the *entire* template below.\r\n\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\n\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\ni upgraded visual studio for mac today and i tried to build the solution in release mode and its giving me unexpected error (MT0000). if i build the project in debug mode, it works fine. my visual studio details are as given below\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac Version 7.5.1 (build 22) Installation UUID: 190c3db0-6b4c-4501-9a69-44b1e6b2a73d Runtime: Mono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit) GTK+ 2.24.23 (Raleigh theme) Xamarin.Mac 4.4.1.178 (master / eeaeb7e6) Package version: 510010047 NuGet Version: 4.3.1.4445 .NET Core Runtime: /usr/local/share/dotnet/dotnet Runtime Versions: 2.0.5 2.0.0 1.1.1 1.0.4 SDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks SDK Versions: 2.1.4 2.0.0 1.0.3 MSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks Xamarin.Profiler Version: 1.6.2 Location: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler Xamarin.Android Version: 8.3.0.19 (Visual Studio Community) Android SDK: /Users/johnwallace/Library/Developer/Xamarin/android-sdk-macosx Supported Android versions: 4.0.3 (API level 15) 4.4 (API level 19) 5.0 (API level 21) SDK Tools Version: 24.4.0 SDK Platform Tools Version: 23.0.1 SDK Build Tools Version: 23.0.1 Java SDK: /usr java version \"1.7.0_71\" Java(TM) SE Runtime Environment (build 1.7.0_71-b14) Java HotSpot(TM) 64-Bit Server VM (build 24.71-b01, mixed mode) Android Designer EPL code available here: https://github.com/xamarin/AndroidDesigner.EPL Apple Developer Tools Xcode 9.3.1 (14154.1) Build 9E501 Xamarin.Mac Version: 4.4.1.178 (Visual Studio Community) Xamarin.iOS Version: 11.10.1.178 (Visual Studio Community) Hash: 408d3574 Branch: d15-7 Build date: 2018-05-08 18:56:30-0400 Xamarin Inspector Version: 1.4.0 Hash: b3f92f9 Branch: master Build date: Fri, 19 Jan 2018 22:00:34 GMT Client compatibility: 1 Build Information Release ID: 705010022 Git revision: 60442dd643a20c7a4ae1f8705b8d1de8972eee78 Build date: 2018-05-15 01:43:39+00 Xamarin addins: 4194ffe4868321e4c3477bd56aed579bda4c6fbb Operating System Mac OS X 10.13.3 Darwin 17.4.0 Darwin Kernel Version 17.4.0 Sun Dec 17 09:19:54 PST 2017 root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64 Enabled user installed addins Internet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\n MTOUCH : error MT0000: Unexpected error - Please file a bug report at http://bugzilla.xamarin.com\r\n    System.NullReferenceException: Object reference not set to an instance of an object\r\n      at Registrar.StaticRegistrar.GetBlockWrapperCreator (Registrar.Registrar+ObjCMethod obj_method, System.Int32 parameter) [0x000e1] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:4086 \r\n      at Registrar.StaticRegistrar.Specialize (Registrar.AutoIndentStringBuilder sb, Registrar.Registrar+ObjCMethod method, System.Collections.Generic.List`1[T] exceptions) [0x0216b] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:3683 \r\n      at Registrar.StaticRegistrar.Specialize (Registrar.AutoIndentStringBuilder sb) [0x00f1e] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:2963 \r\n    MTOUCH : error MT0000: Unexpected error - Please file a bug report at http://bugzilla.xamarin.com\r\n    System.NullReferenceException: Object reference not set to an instance of an object\r\n      at Registrar.StaticRegistrar.GetBlockWrapperCreator (Registrar.Registrar+ObjCMethod obj_method, System.Int32 parameter) [0x000e1] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:4086 \r\n      at Registrar.StaticRegistrar.Specialize (Registrar.AutoIndentStringBuilder sb, Registrar.Registrar+ObjCMethod method, System.Collections.Generic.List`1[T] exceptions) [0x0216b] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:3683 \r\n      at Registrar.StaticRegistrar.Specialize (Registrar.AutoIndentStringBuilder sb) [0x00f1e] in /Users/builder/data/lanes/5944/408d3574/source/xamarin-macios/tools/common/StaticRegistrar.cs:2963 \r\nDone building target \"_CompileToNative\" in project \"RfidAeroCheck.iOS.csproj\" -- FAILED.\r\n\r\nDone building project \"RfidAeroCheck.iOS.csproj\" -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7693292828","Type":"IssuesEvent","CreatedAt":"2018-05-18T02:42:16","Actor":"LeeCenY","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3959","RelatedDescription":"Reopened issue \"Native and Xamarin UITextView CanPerform method \"paste\"  differential\" (#3959) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n```\r\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender {\r\n    \r\n    NSLog(@\"%@\", NSStringFromSelector(action));\r\n    return NO;\r\n}\r\n```\r\n\r\n```\r\n       public override bool CanPerform(Selector action, NSObject withSender)\r\n\t{\r\n               System.Diagnostics.Debug.WriteLine(action.Name);\r\n               return false;  \r\n\t}\r\n\r\n```\r\n\r\n2. \r\nXcode Native Objective-c\r\n```\r\n2018-04-19 16:53:13.460358+0800 TestHit[6797:2452366] cut:\r\n2018-04-19 16:53:13.461737+0800 TestHit[6797:2452366] copy:\r\n2018-04-19 16:53:13.462519+0800 TestHit[6797:2452366] select:\r\n2018-04-19 16:53:13.463245+0800 TestHit[6797:2452366] selectAll:\r\n2018-04-19 16:53:13.463931+0800 TestHit[6797:2452366] paste:\r\n2018-04-19 16:53:13.464647+0800 TestHit[6797:2452366] delete:\r\n2018-04-19 16:53:13.465333+0800 TestHit[6797:2452366] _promptForReplace:\r\n2018-04-19 16:53:13.466005+0800 TestHit[6797:2452366] _transliterateChinese:\r\n2018-04-19 16:53:13.468088+0800 TestHit[6797:2452366] _insertDrawing:\r\n2018-04-19 16:53:13.468843+0800 TestHit[6797:2452366] _showTextStyleOptions:\r\n2018-04-19 16:53:13.469919+0800 TestHit[6797:2452366] _lookup:\r\n2018-04-19 16:53:13.470630+0800 TestHit[6797:2452366] _addShortcut:\r\n2018-04-19 16:53:13.471318+0800 TestHit[6797:2452366] _accessibilitySpeak:\r\n2018-04-19 16:53:13.471982+0800 TestHit[6797:2452366] _accessibilitySpeakLanguageSelection:\r\n2018-04-19 16:53:13.472642+0800 TestHit[6797:2452366] _accessibilityPauseSpeaking:\r\n2018-04-19 16:53:13.473196+0800 TestHit[6797:2452366] _share:\r\n2018-04-19 16:53:13.473781+0800 TestHit[6797:2452366] makeTextWritingDirectionRightToLeft:\r\n2018-04-19 16:53:13.474556+0800 TestHit[6797:2452366] makeTextWritingDirectionLeftToRight:\r\n```\r\n\r\nVisual Studio  Xamarin\r\n```\r\ncut:\r\ncopy:\r\nselect:\r\nselectAll:\r\ndelete:\r\n_promptForReplace:\r\n_transliterateChinese:\r\n_insertDrawing:\r\n_showTextStyleOptions:\r\n_lookup:\r\n_define:\r\n_addShortcut:\r\n_accessibilitySpeak:\r\n_accessibilitySpeakLanguageSelection:\r\n_accessibilityPauseSpeaking:\r\n_share:\r\nmakeTextWritingDirectionRightToLeft:\r\nmakeTextWritingDirectionLeftToRight:\r\nannotateAction:\r\n\r\n```\r\n\r\n3. CanPerform method return false;  Xamarin Still  show \"paste\", Native not show.\r\n\r\n### Expected Behavior\r\n\r\nnot show\r\n\r\n### Actual Behavior\r\n\r\nXamarin Still  show \"paste\"\r\n\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: 891dc29f-4210-4ba9-a91b-9564b6fea41d\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\n版本: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\n运行时: /usr/local/share/dotnet/dotnet\r\n运行时版本:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK 版本:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDK: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n版本: 1.6.1\r\n位置:/Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Community)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\n版本: 8.2.0.16 (Visual Studio Community)\r\nAndroid SDK: /Users/ttlgzmac6/Library/Developer/Xamarin/android-sdk-macosx\r\n\t受支持的 Android 版本:\r\n\t\t2.3   (API 级别 10)\r\n\t\t4.0.3 (API 级别 15)\r\n\t\t4.4   (API 级别 19)\r\n\t\t5.0   (API 级别 21)\r\n\t\t6.0   (API 级别 23)\r\n\t\t7.0   (API 级别 24)\r\n\t\t7.1   (API 级别 25)\r\n\t\t8.1   (API 级别 27)\r\n\r\nSDK 工具版本: 25.2.5\r\nSDK 平台工具版本: 27.0.1\r\nSDK 生成工具版本: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL 代码在此处提供:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7692231699","Type":"IssuesEvent","CreatedAt":"2018-05-17T20:59:36","Actor":"cainunable","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4101","RelatedDescription":"Opened issue \"Not all assemblies for Xamarin.Sdk have link tasks\" (#4101) at xamarin/xamarin-macios","RelatedBody":"\r\nOur existing Xamarin.iOS project is in the process of a major refactor. Part of this has included relying more on NuGet, although I am not certain that is this the root of the problem.  Currently our project builds and runs fine on the simulator, but if we try to build for a device we get \r\n```\r\nerror MT0099 : Internal error : Not all assemblies for Xamarin.Sdk have link tasks.\r\n```\r\nI have not yet been able to figure out the exact cause of the issue.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Build Release Project for Generic Device\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\nProject builds correctly and can be deployed in our test environment\r\n\r\n### Actual Behavior\r\n\r\n\"error MT0099 : Internal error : Not all assemblies for Xamarin.Sdk have link tasks.\" is received in log\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.1 (build 22)\r\nInstallation UUID: 16431a6a-5dc0-42b2-8f61-58c958f7f21c\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3.1 (14154.1)\r\nBuild 9E501\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.178 (Visual Studio Community)\r\nHash: 408d3574\r\nBranch: d15-7\r\nBuild date: 2018-05-08 18:56:30-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/canderson/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t7.1   (API level 25)\r\n\r\nSDK Tools Version: 23.0.5\r\nSDK Platform Tools Version: 21.0.0\r\nSDK Build Tools Version: 21.1.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705010022\r\nGit revision: 60442dd643a20c7a4ae1f8705b8d1de8972eee78\r\nBuild date: 2018-05-15 01:43:39+00\r\nXamarin addins: 4194ffe4868321e4c3477bd56aed579bda4c6fbb\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n\r\n\r\n[BuildError5-17.txt](https://github.com/xamarin/xamarin-macios/files/2014697/BuildError5-17.txt)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"7692173123","Type":"IssuesEvent","CreatedAt":"2018-05-17T20:47:49","Actor":"mauroa","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3818","RelatedDescription":"Closed issue \"Neverending build on device (due to Mac Agent disconnecting?)\" (#3818) at xamarin/xamarin-macios","RelatedBody":"Ok, this is driving my crazy, iPhone device build stopped working **at all**.\r\n\r\nWhen I try to build my Xamarin.iOS project in the latest Visual Studio in iPhone-device configuration, it never finishes building - does not fail, does not succeed, just keeps building.  \r\n\r\nThe problem might be that I am getting those logs in Xamarin output, it repeats every few minutes:\r\n\r\n> Connection to '192.168.15.128' completed successfully\r\n> Agent Build 4.9.0.752 is not connected...\r\n> Starting registered Agents: Build 4.9.0.752...\r\n> Starting Build 4.9.0.752...\r\n> Starting Agent Build 4.9.0.752...\r\n> Agent Build 4.9.0.752 is running\r\n> Build 4.9.0.752 started\r\n> Starting registered Agents: ...\r\n> The Agents have been started successfully\r\n> Agent Build 4.9.0.752 is not connected...\r\n> Starting registered Agents: Build 4.9.0.752...\r\n> Starting Build 4.9.0.752...\r\n> Starting Agent Build 4.9.0.752...\r\n> Agent Build 4.9.0.752 is running\r\n> Build 4.9.0.752 started\r\n> Starting registered Agents: ...\r\n> The Agents have been started successfully\r\n> Agent Build 4.9.0.752 is not connected...\r\n> Starting registered Agents: Build 4.9.0.752...\r\n> Starting Build 4.9.0.752...\r\n> Starting Agent Build 4.9.0.752...\r\n> Agent Build 4.9.0.752 is running\r\n> Build 4.9.0.752 started\r\n> Starting registered Agents: ...\r\n> The Agents have been started successfully\r\n\r\nWhen I do iPhone Simulator build, it takes 1-3 minutes, succeeds and deploys OK.\r\n\r\nBut even when building for the simulator, I sometimes (like every 20 minutes I guess) get to situation when after successful build, I am presented with the Mac Agent connection dialog, where my Mac has the 'connected' icon, but when I close the dialog, I get some popup alert that active connection is needed - so what I need to do is Disconnect and Connect again in order to be able to deploy to the simulator.\r\nThis little issue is happening a few weeks, it is present since a few releases back. **But the neverending-build issue is only happening since I updated VS to 15.6.4** (but I have skipped a few releases between, like 15.6.2 and 3 I guess, so it might not be related exactly to 15.6.4).\r\n\r\nPlease also note that I have tried changing many of the properties in iOS project settings, tried rebooting windows, rebooting OS X, rebooting iPhone... basically spend whole day trying to make it work. And sometimes it actually did build (like 3 times during the whole day I guess), but there were erros with deploying (I was trying on iPhone 4 iOS 7, which used to work, like kAMDIncorrectArchitectureError). Then again the next builds were failing.\r\nAlso once in the million neverending tries, the build actually failed with error `Invalid bitcode signature`.\r\n\r\n### Environment\r\n\r\nOS X 10.13.3 inside VMware 14.1.1, XCode 9.2\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.4\r\nVisualStudio.15.Release/15.6.4+27428.2015\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA614\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40314.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62715-05. Commit Hash: db02128e6e3c4bdfc93e6ec425ac9162b4d4fe80\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.752 (0faa808ee)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.1.28 (3979d08)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Build Logs\r\nIntellisense output:\r\n\r\n> [Failure] Could not find file 'D:\\Dokumenty-D\\aplikace\\MyApp\\MyApp.iOS\\obj\\iPhone\\Debug\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs'.\r\n> [Failure] Could not find file 'D:\\Dokumenty-D\\aplikace\\MyApp\\MyApp.iOS\\obj\\iPhone\\Debug\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs'.\r\n> [Failure] Could not find file 'D:\\Dokumenty-D\\aplikace\\MyApp\\MyApp.iOS\\obj\\iPhone\\Debug\\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs'.\r\n\r\nBuild output after 40 minutes of building, just one line:\r\n\r\n> 1>------ Rebuild All started: Project: MyApp.iOS, Configuration: Debug iPhone ------\r\n\r\nBuild output after cancelling the build:\r\nQuite a long diagnostic output, see the attachment:\r\n[log.txt](https://github.com/xamarin/xamarin-macios/files/1850001/log.txt)\r\n\r\nGuys, please fix Xamarin!\n\n> VS bug [#591998](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/591998)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":73,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":10,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":23,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":22,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":21,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":77,"FavoriteCount":33,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":21,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":76,"RawContent":null},{"Id":"993570225420406784","CreatedAt":"2018-05-07T19:16:16+00:00","UserScreenname":"xamarinhq","Text":"Try the latest release of #XamarinForms 3.0: https://t.co/UlSNk3NClU https://t.co/dGpHZriLc4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":163,"FavoriteCount":115,"RawContent":null}]}},"RunOn":"2018-05-19T05:30:41.9739349Z","RunDurationInMilliseconds":4503}