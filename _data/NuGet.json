{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12251279429","Type":"PullRequestEvent","CreatedAt":"2020-05-05T23:08:05","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7980","RelatedDescription":"Merged pull request \"V3 feed for tests\" (#7980) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12251035729","Type":"PullRequestEvent","CreatedAt":"2020-05-05T22:28:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7980","RelatedDescription":"Opened pull request \"V3 feed for tests\" (#7980) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"12250679279","Type":"PullRequestEvent","CreatedAt":"2020-05-05T21:38:15","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7979","RelatedDescription":"Opened pull request \"Packages with duplicated entries in zip file should be blocked on upload.\" (#7979) at NuGet/NuGetGallery","RelatedBody":"A new validation was added at the ValidateBeforeGeneratePackageAsync method.\r\n\r\n#7922 "},{"Id":"12248360323","Type":"IssuesEvent","CreatedAt":"2020-05-05T17:22:00","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7919","RelatedDescription":"Closed issue \"[C2R] Stop registration4 and registration comparer running\" (#7919) at NuGet/NuGetGallery","RelatedBody":"- [x] Stop monitoring reg4 and registration comparer cursors\r\n  - [x] DEV\r\n  - [x] INT\r\n  - [x] PROD\r\n- [x] Stop the jobs\r\n  - [x] DEV\r\n  - [x] INT\r\n  - [x] PROD"},{"Id":"12238722593","Type":"IssuesEvent","CreatedAt":"2020-05-04T20:19:29","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7955","RelatedDescription":"Closed issue \"upload pack faild to NuGet.Server \" (#7955) at NuGet/NuGetGallery","RelatedBody":"1、NuGet.Server 3.4.1\r\n2、if file name contain chinese in package (2 file names of the same length\r\n) ,server it will response 406\r\n===\r\nexception:\r\n![Snipaste_2020-04-20_15-58-20](https://user-images.githubusercontent.com/17698581/79738344-33900700-832f-11ea-9f12-f4189731245f.png)\r\n\r\n\r\nCannot correctly extract the file name containing Chinese char"},{"Id":"12238710004","Type":"PullRequestEvent","CreatedAt":"2020-05-04T20:18:07","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7938","RelatedDescription":"Merged pull request \"[ReleasePrep][2020-04-07] RI dev to master\" (#7938) at NuGet/NuGetGallery","RelatedBody":"Deployment work item: https://github.com/nuget/nugetgallery/issues/7937"},{"Id":"12238701000","Type":"IssuesEvent","CreatedAt":"2020-05-04T20:17:08","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7924","RelatedDescription":"Closed issue \"ASP.net C# pg 11.6 and npgsql 4.0.10\" (#7924) at NuGet/NuGetGallery","RelatedBody":"ASP.net C#(.net 4.5) pg 11.6(AWS) and npgsql 4.0.10 is not working. when i try to connect my pg db through ado.net im getting {\"The operation has timed out.\"} this error suggest me ASAP."},{"Id":"12238660632","Type":"IssuesEvent","CreatedAt":"2020-05-04T20:12:57","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7957","RelatedDescription":"Closed issue \"NUGET.SERVER - server packages from local\" (#7957) at NuGet/NuGetGallery","RelatedBody":"I have set up a local server with nuget.server. I can push packages to the repos. When I try to do install like so: \r\nnuget install <package>\r\nUnable to load the service index for source '<mylocalrepos>' \r\nThe content at '<mylocalrepos>' is not a valid JSON object\r\nAm i missing something here? The source is defined in Nuget.Config as http://myserver/nuget\r\n\r\n"},{"Id":"12238623201","Type":"IssuesEvent","CreatedAt":"2020-05-04T20:08:59","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7978","RelatedDescription":"Opened issue \"App service outages investigation\" (#7978) at NuGet/NuGetGallery","RelatedBody":"Figure out what was happening with outages during Gallery app service deployments during the week of 4/27"},{"Id":"12238619015","Type":"IssuesEvent","CreatedAt":"2020-05-04T20:08:30","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7976","RelatedDescription":"Closed issue \"Azure Bootcamp\" (#7976) at NuGet/NuGetGallery","RelatedBody":"Azure Bootcamp"},{"Id":"12238200007","Type":"IssuesEvent","CreatedAt":"2020-05-04T19:22:49","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7977","RelatedDescription":"Opened issue \"[Package Renames] Unblock deployments to existing search instances\" (#7977) at NuGet/NuGetGallery","RelatedBody":"We will be running two search instances side-by-side:\r\n\r\n* `011` - The existing search service used to serve production traffic, without popularity transfers\r\n* `012` - The new search service used to A/B test popularity transfers\r\n\r\nWe should be able to deploy the latest bits to both of these instances:\r\n\r\n* [ ] Add a configuration to disable popularity transfers on a specific search instance\r\n* [ ] Add the popularity transfers auxiliary file to all existing search deployments\r\n  * [ ] DEV\r\n  * [ ] INT\r\n  * [ ] PROD\r\n* [ ] Validate all jobs and services work on the existing `011` instance\r\n  * [ ] `auxiliary2azuresearch`\r\n  * [ ] `catalog2azuresearch`\r\n  * [ ] Search service\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12252431246","Type":"IssuesEvent","CreatedAt":"2020-05-06T02:58:28","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9538","RelatedDescription":"Opened issue \"[Bug Bash][Test Failure] PM UI can’t show distinguishable background color between selected and hovered package sources\" (#9538) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.7.0.6598\r\nVS Version: Master\\30029.156\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Launch VS with any color theme (Blue/Blue (Extra Contrast)/Dark/Light) and create a Console App (.NET Core) template.\r\n2. Open the PM UI, click the arrow-down button of “Package source” drop down list and hover on another source (not the selected).\r\n## Expected\r\nThe background color between selected and hovered package sources should be distinguishable.\r\n## Actual\r\nPM UI can’t show distinguishable background color between selected and hovered package sources as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/81134691-19d5fd00-8f88-11ea-9f13-f1237af89dcb.png)\r\n## Notes\r\n1. Move from internal bug 753473.\r\n2. It's not a regression bug because it did repro on D16.0stg\\28417.107."},{"Id":"12252409852","Type":"IssuesEvent","CreatedAt":"2020-05-06T02:53:50","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9537","RelatedDescription":"Opened issue \"[Bug Bash][Suggestion][Test Failure] Update button in Package Manager Settings window should be focused when selecting by pressing Alt+U\" (#9537) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.7.0.6598\r\nVS Version: Master\\30029.156\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1. Launch VS and click menu \"Tools\" -> \"Nuget Package Manager\" -> \"Package Manger Settings\".\r\n2. Select \"Package Sources\" in the left pane.\r\n3. Press Alt+U. \r\n## Expected\r\nUpdate button should be focused when selecting by pressing Alt+U.\r\n## Actual\r\nUpdate button in Package Manager Settings window is not focused when selecting by pressing Alt+U as attached screenshot. Users don’t know if it is selected or not.\r\n## Notes\r\n1. Move from internal bug 651997.\r\n2. It's not a regression bug because it did repro on D15.8 27918.00 + NuGet Client Release-4.8.0-RTM 4.8.0.5348.\r\n\r\n"},{"Id":"12250334190","Type":"IssuesEvent","CreatedAt":"2020-05-05T20:56:30","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9536","RelatedDescription":"Opened issue \"Test: on macOS, TimestampSignatureAsync_TimestampingCountersignature_SucceedsAsync starts to fail after switching to latest Pkcs package\" (#9536) at NuGet/Home","RelatedBody":"On macOS,  test TimestampSignatureAsync_TimestampingCountersignature_SucceedsAsync failed after switching to latest `System.Security.Cryptography.Pkcs` package. (version change from 5.0.0-alpha1.19473.1 to 5.0.0-preview.3.20214.6)\r\n\r\nError message:\r\n`NuGet.Packaging.Signing.TimestampException : The timestamp response is invalid. Nonces did not match.`\r\n\r\nStack trace\r\n```\r\n at NuGet.Packaging.Signing.Rfc3161TimestampProvider.ValidateTimestampResponse(Byte[] nonce, Byte[] messageHash, IRfc3161TimestampToken timestampToken) in /Users/runner/runners/2.166.4/work/1/s/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampProvider.cs:line 211\r\n   at NuGet.Packaging.Signing.Rfc3161TimestampProvider.GetTimestampAsync(TimestampRequest request, ILogger logger, CancellationToken token) in /Users/runner/runners/2.166.4/work/1/s/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampProvider.cs:line 126\r\n   at NuGet.Packaging.Signing.Rfc3161TimestampProvider.TimestampSignatureAsync(PrimarySignature primarySignature, TimestampRequest request, ILogger logger, CancellationToken token) in /Users/runner/runners/2.166.4/work/1/s/src/NuGet.Core/NuGet.Packaging/Signing/Timestamp/Rfc3161TimestampProvider.cs:line 69\r\n   at NuGet.Packaging.FuncTest.TimestampProviderTests.TimestampSignatureAsync_TimestampingCountersignature_SucceedsAsync() in /Users/runner/runners/2.166.4/work/1/s/test/NuGet.Core.FuncTests/NuGet.Packaging.FuncTest/SigningTests/TimestampProviderTests.cs:line 474\r\n--- End of stack trace from previous location ---\r\n```"},{"Id":"12249502183","Type":"IssuesEvent","CreatedAt":"2020-05-05T19:23:03","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9535","RelatedDescription":"Opened issue \"[CPVM] MVP Bugs\" (#9535) at NuGet/Home","RelatedBody":"CPVM epic for the bugs that need to be fixed for the MVP.\r\n\r\n"},{"Id":"12249267925","Type":"IssuesEvent","CreatedAt":"2020-05-05T18:57:29","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9534","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Partner repo validation\" (#9534) at NuGet/Home","RelatedBody":"Partner with internal teams to test the solution on a real repo.\r\nBoth functionality and perf need to be validated.\r\n\r\n"},{"Id":"12248598542","Type":"IssuesEvent","CreatedAt":"2020-05-05T17:46:48","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9533","RelatedDescription":"Closed issue \"UpdateNuGetModuleManifest.ps1 threw exception during build, but didn't stop build. PMC commands not registered.\" (#9533) at NuGet/Home","RelatedBody":"UpdateNuGetModuleManifest.ps1 is supposed to update NuGet.psd1 during the build to contain PowerShellCmdlets strong name ... to support loading the ngened version of that assembly.\r\nHowever, since the build order/timing occasionally failed, an empty string, instead of the strong name was replaced.\r\nThus, ImportModule of NuGet.psd1 when launching PMC silently failed.\r\n- that caused \"install-package\" and other similar commands to not work in PMC.\r\n\r\n\r\nSeveral fixes for this were merged into dev yesterday in: https://github.com/NuGet/NuGet.Client/commit/25367b02e7781b57660e5ad29c425aaf74d7011c\r\n\r\n- changed bool in import-module call to no longer silently fail.\r\n- added trap into UpdateNuGetModuleManifest.ps1, so that any failure (like the one we were hitting), would fail the build.\r\n- in NuGetConsole.Host.PowerShell, added projref to NuGet.PackageManagement.PowerShellCmdlets - so that the PowerShellCmdlets dll would always be there before we ran UpdateNuGetModuleManifest.ps1\r\n- Use BuildVariationFolder instead of VisualStudioVersion property when launching UpdateNuGetModuleManifest.ps1 so that it worked in RTM branch of the CI build."},{"Id":"12248588670","Type":"IssuesEvent","CreatedAt":"2020-05-05T17:45:46","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9533","RelatedDescription":"Opened issue \"UpdateNuGetModuleManifest.ps1 threw exception during build, but didn't stop build.\" (#9533) at NuGet/Home","RelatedBody":"UpdateNuGetModuleManifest.ps1 is supposed to update NuGet.psd1 during the build to contain PowerShellCmdlets strong name ... to support loading the ngened version of that assembly.\nHowever, since the build order/timing occasionally failed, an empty string, instead of the strong name was replaced.\nThus, ImportModule of NuGet.psd1 when launching PMC silently failed.\n\n\nSeveral fixes for this were merged into dev yesterday in: https://github.com/NuGet/NuGet.Client/commit/25367b02e7781b57660e5ad29c425aaf74d7011c\n\n- changed bool in import-module call to no longer silently fail.\n- added trap into UpdateNuGetModuleManifest.ps1, so that any failure (like the one we were hitting), would fail the build.\n- in NuGetConsole.Host.PowerShell, added projref to NuGet.PackageManagement.PowerShellCmdlets - so that the PowerShellCmdlets dll would always be there before we ran UpdateNuGetModuleManifest.ps1\n- Use BuildVariationFolder instead of VisualStudioVersion property when launching UpdateNuGetModuleManifest.ps1 so that it worked in RTM branch of the CI build."},{"Id":"12247591741","Type":"IssuesEvent","CreatedAt":"2020-05-05T16:07:14","Actor":"ericstj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9532","RelatedDescription":"Opened issue \"Regression: RuntimeJsonFormat.WriteRuntimeGraph writes invalid JSON\" (#9532) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuGet API\r\n\r\nNuGet version (x.x.x.xxx):\r\n5.6.0-preview.3.6558\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, 5.5.1\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Call `RuntimeJsonFormat.WriteRuntimeGraph(file, graph)` to write a RuntimeGraph to file.\r\n\r\n2. Call `RuntimeJsonFormat.ReadRuntimeGraph(file)` to read the file from 1.\r\n\r\nExpect:\r\n**Success**\r\n\r\nActual:\r\n```\r\nUnhandled exception. System.InvalidOperationException: Cannot access child value on Newtonsoft.Json.Linq.JValue.\r\n   at Newtonsoft.Json.Linq.JToken.get_Item(Object key)\r\n   at NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(JToken json)\r\n   at NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(TextReader textReader)\r\n   at NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(Stream stream)\r\n   at NuGet.RuntimeModel.JsonRuntimeFormat.ReadRuntimeGraph(String filePath)\r\n```\r\nIf you examine the `file` you can see that `WriteRuntimeGraph` no longer includes the top-level object.  It writes `\"runtimes\": { ... }` instead of `{ \"runtimes\": { ... } }`\r\n\r\n### Sample Project\r\n[runtimeTest.zip](https://github.com/NuGet/Home/files/4581990/runtimeTest.zip)\r\n\r\nThe bug is here: https://github.com/NuGet/NuGet.Client/commit/657aa2d254f85b5636ac7ac03c476b2a5079649a#diff-a929422d44edcc504a3beaf00e6cbf14L42\r\n\r\nThe WriteObjectStart method used to create a new JObject, add a property to that object and start a new object for that property, but now it only writes a property and starts an object for that property.\r\n\r\nThe WriteRuntimeGraph method assumes that WriteObjectStart will create the root object.\r\nhttps://github.com/NuGet/NuGet.Client/commit/657aa2d254f85b5636ac7ac03c476b2a5079649a#diff-360db93f4ab729027d7a199a4ab6c1c4R67-L103\r\n\r\n/cc @dtivel @nkolev92 @zivkan \r\n\r\nThis is blocking uptake of NuGet (needed for new `net5.0` TFM) into dotnet/runtime since it broke our runtime.json generation.  I may be able to workaround this but I wanted to raise this regression. /cc @viktorhofer"},{"Id":"12247373456","Type":"IssuesEvent","CreatedAt":"2020-05-05T15:47:48","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9531","RelatedDescription":"Closed issue \"Test: SimpleBindingRedirectsNonWeb is flaky\" (#9531) at NuGet/Home","RelatedBody":"Test `SimpleBindingRedirectsNonWeb ` is flaky and it times out after 10 minutes on certain CI machines (w001 and w004) for many times.\r\nIf logging onto the CI machine during the E2E test, we can see the test hangs as following:\r\n![image](https://user-images.githubusercontent.com/45407901/81082499-33077c80-8ea8-11ea-89fe-18af6592d626.png)"},{"Id":"12247310131","Type":"IssuesEvent","CreatedAt":"2020-05-05T15:42:14","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9531","RelatedDescription":"Opened issue \"Test: SimpleBindingRedirectsNonWeb is flaky\" (#9531) at NuGet/Home","RelatedBody":"Test `SimpleBindingRedirectsNonWeb ` is flaky and it times out after 10 minutes on certain CI machines (w001 and w004) for many times.\r\nIf logging onto the CI machine during the E2E test, we can see the test hangs as following:\r\n![image](https://user-images.githubusercontent.com/45407901/81082499-33077c80-8ea8-11ea-89fe-18af6592d626.png)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-06T05:30:42.427493Z","RunDurationInMilliseconds":1497}