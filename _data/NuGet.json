{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null},{"Title":"Welcoming SymbolSource to the .NET Foundation","PublishedOn":"2018-05-01T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to welcome SymbolSource.org to the .NET Foundation! SymbolSource has been providing a valuable service to the .NET Community for years with the ability to host Symbols for public NuGet...","Href":"https://devblogs.microsoft.com/nuget/welcoming-symbolsource-to-dot-net-foundation/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10025421446","Type":"IssuesEvent","CreatedAt":"2019-07-17T02:11:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7351","RelatedDescription":"Opened issue \"[Azure Search] Search queries with mismatched quotes cause 500\" (#7351) at NuGet/NuGetGallery","RelatedBody":"`Tags:\"\"Bing\"`\r\n`Tags:\"\"windows\"`\r\n\r\nThese throw an exception.\r\n\r\n`\r\nFailed to parse query string at line 1, column 7. See https://aka.ms/azure-search-full-query for supported syntax.\r\n`\r\n\r\n\r\n"},{"Id":"10025140211","Type":"PullRequestEvent","CreatedAt":"2019-07-17T00:49:19","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7350","RelatedDescription":"Merged pull request \"Pull lodash up so we can use the latest.\" (#7350) at NuGet/NuGetGallery","RelatedBody":"Lifts our lodash dependency so we can reference the latest security fixes."},{"Id":"10025076591","Type":"PullRequestEvent","CreatedAt":"2019-07-17T00:30:56","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7350","RelatedDescription":"Opened pull request \"Pull lodash up so we can use the latest.\" (#7350) at NuGet/NuGetGallery","RelatedBody":"Lifts our lodash dependency so we can reference the latest security fixes."},{"Id":"10025015210","Type":"PullRequestEvent","CreatedAt":"2019-07-17T00:13:07","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7349","RelatedDescription":"Opened pull request \"Update jQuery\" (#7349) at NuGet/NuGetGallery","RelatedBody":"Taking the update to jQuery 3.x\r\n\r\nMitigates an XSS attack.\r\n\r\nRemoved reference to removed apis.\r\nUsed https://github.com/jquery/jquery-migrate/blob/master/warnings.md#jqmigrate-jqueryfndelegate-is-deprecated for warning and https://jquery.com/upgrade-guide/3.0/ for upgrade assistance.\r\n\r\nDid not remove use of deprecated apis."},{"Id":"10024237667","Type":"PullRequestEvent","CreatedAt":"2019-07-16T21:17:59","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7348","RelatedDescription":"Merged pull request \"Update web.config for httpmodules\" (#7348) at NuGet/NuGetGallery","RelatedBody":"The AsyncFileUploadModule moved assemblies from NuGetGallery to NuGetGallery.Services.\r\n\r\nUpdate the web.config to reflect this change."},{"Id":"10024150039","Type":"PullRequestEvent","CreatedAt":"2019-07-16T21:03:29","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7348","RelatedDescription":"Opened pull request \"Update web.config for httpmodules\" (#7348) at NuGet/NuGetGallery","RelatedBody":"The AsyncFileUploadModule moved assemblies from NuGetGallery to NuGetGallery.Services.\r\n\r\nUpdate the web.config to reflect this change."},{"Id":"10023814913","Type":"PullRequestEvent","CreatedAt":"2019-07-16T20:11:41","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7347","RelatedDescription":"Opened pull request \"Eliminate package title\" (#7347) at NuGet/NuGetGallery","RelatedBody":"Package title was eliminated from\r\n* DisplayPackage.cshtml\r\n* _ListPackage.cshtml\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7149"},{"Id":"10022846387","Type":"IssuesEvent","CreatedAt":"2019-07-16T17:42:56","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7233","RelatedDescription":"Closed issue \"[Azure Search] Functional test V2 search at deployment time\" (#7233) at NuGet/NuGetGallery","RelatedBody":"- [x] Add functional tests that exercise the protocol\r\n  - [x] V2 Search\r\n    - [x] Paging (skip + take)\r\n    - [x] Count only\r\n    - [x] Prerelease true/false\r\n    - [x] semVerLevel\r\n    - [x] Sort by parameter\r\n    - [x] All query fields (\"packageid:\", \"tags:\", etc)\r\n\r\nWe should avoid trying to test relevancy or ranking here and just focus on protocol.\r\n\r\nIt's okay to have known packages like BaseTestPackage that we use as test data.\r\n"},{"Id":"10016704782","Type":"IssuesEvent","CreatedAt":"2019-07-16T00:29:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7346","RelatedDescription":"Opened issue \"There is a trailing space after \"Dependent repositories\"\" (#7346) at NuGet/NuGetGallery","RelatedBody":"![image](https://user-images.githubusercontent.com/94054/61257467-f8b8cd00-a725-11e9-97d9-bfdf25e5dd7c.png)\r\n\r\n/cc @loic-sharma @mogah \r\n\r\nUnforgivable "}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10025339724","Type":"IssuesEvent","CreatedAt":"2019-07-17T01:48:16","Actor":"bender2k14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8327","RelatedDescription":"Closed issue \"Used -DependencyVersion Highest but non-latest version installed\" (#8327) at NuGet/Home","RelatedBody":"I am confused about the behavior of `Install-Package` when executed from Visual Studio's Package Manager Console.  I am using `-DependencyVersion Highest` but a less-than-highest version is being installed, and I don't understand why.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: Package Manager Console Host Version 5.1.0.6013\r\nNuGet version: 3.5.0.1938\r\nVS version: Visual Studio Enterprise 2019 version 16.1.5\r\nOS version: Windows 10 v1803 (17134.885)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Observe that the [NuGet package of `Serilog.AspNetCore`](https://www.nuget.org/packages/Serilog.AspNetCore/2.1.1) depends on `Microsoft.Extensions.Logging (>= 2.0.0)`.\r\n\r\n2. Observe that the latest release (i.e., non-preview) version of [`Microsoft.Extensions.Logging`](https://www.nuget.org/packages/Microsoft.Extensions.Logging/) (as of this writing) is 2.2.0.\r\n\r\n3. In the Package Manager Console of Visual Studio, run `Install-Package Serilog.AspNetCore -DependencyVersion Highest`.\r\n\r\n4.  Observe that version 2.0.0 of `Microsoft.Extensions.Logging` was installed (also see logs below).\r\n\r\n## Expected behavior\r\n\r\nI expected version 2.2.0 of `Microsoft.Extensions.Logging` to be installed since I used `-DependencyVersion Highest`.\r\n\r\nSomething I wonder is if there are additional implicit constraints that caused 2.0.0 to be installed instead of 2.2.0.  That would explain this behavior, but then I want to know how to make those implicit constraints explicit.\r\n\r\n## Other suggested things\r\n\r\n### (Non-Verbose) Logs\r\n```\r\nPM> Install-Package Serilog.AspNetCore -DependencyVersion Highest\r\nRestoring packages for C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\Temp.csproj...\r\nInstalling NuGet package Serilog.AspNetCore 2.1.1.\r\nCommitting restore...\r\nWriting assets file to disk. Path: C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\obj\\project.assets.json\r\nRestore completed in 212.54 ms for C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\Temp.csproj.\r\nSuccessfully installed 'Microsoft.AspNetCore.Hosting.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Hosting.Server.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Http.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Http.Features 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Configuration.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.DependencyInjection 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.DependencyInjection.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.FileProviders.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Hosting.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Logging 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Logging.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Options 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Primitives 2.0.0' to Temp\r\nSuccessfully installed 'Serilog 2.5.0' to Temp\r\nSuccessfully installed 'Serilog.AspNetCore 2.1.1' to Temp\r\nSuccessfully installed 'Serilog.Extensions.Logging 2.0.0' to Temp\r\nSuccessfully installed 'System.Runtime.CompilerServices.Unsafe 4.4.0' to Temp\r\nSuccessfully installed 'System.Text.Encodings.Web 4.4.0' to Temp\r\nExecuting nuget actions took 622.13 ms\r\nTime Elapsed: 00:00:01.3739645\r\n```\r\n\r\n### Sample Project\r\n\r\nHere is a zip of the solution I used to create the above logs.\r\n\r\n[Temp.zip](https://github.com/NuGet/Home/files/3387928/Temp.zip)\r\n"},{"Id":"10024597063","Type":"IssuesEvent","CreatedAt":"2019-07-16T22:26:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8339","RelatedDescription":"Opened issue \"The PM UI should not be refreshed if the UI is not visible\" (#8339) at NuGet/Home","RelatedBody":"It's a waste of cycles, as the reload would happen happen anyways, when the control is loaded (the loaded event).\r\n\r\nRelated: \r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.loaded?view=netframework-4.8\r\nhttps://blogs.msdn.microsoft.com/mikehillberg/2006/09/19/the-loaded-event-and-the-initialized-event/\r\n\r\n//cc @dtivel "},{"Id":"10024424679","Type":"IssuesEvent","CreatedAt":"2019-07-16T21:51:20","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8338","RelatedDescription":"Opened issue \"Restore with RestoreLockedMode  and no lock file should error.\" (#8338) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nThe restore with RestoreLockedMode  = true and no lock file does not work or error but a new lock file is created. \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a project with RestoreLockedMode = true and delete the lock file if present.\r\n\r\n2. Build/restore. \r\n\r\nResult: No error and the lock file is created. \r\n\r\n\r\n\r\n"},{"Id":"10022929053","Type":"IssuesEvent","CreatedAt":"2019-07-16T17:55:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8302","RelatedDescription":"Closed issue \"Nuget restore on VS solution open throws exceptions\" (#8302) at NuGet/Home","RelatedBody":"OS version: Win 10 Enterprise (1709) 16299.1217\r\nVisual Studio 2017 15.9.13\r\n\r\nWe recently changed our projects to the sdk-style format (excluding 3 Winforms projects). Since the change, Nuget restore throws several exceptions when opening the solution.\r\n(I understand that Nuget restore is called automatically when the solution opens if you have sdk-style projects)\r\n\r\nError occurred while restoring NuGet packages: System.InvalidOperationException: The operation failed as details for project XYZZY  could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpec>d__6.MoveNext()\r\n\r\nManual restore (via the solution context menu) is disabled for 60-90 seconds while this happens, but after that, manual restore is very fast (everything is up to date).\r\nIf I close and open the solution, it happens again, despite the fact that nothing has changed.\r\n\r\nWe have 150 projects in our solution. The nuget exception always occurs on project XYZZY for me (though a colleague sees different projects). This project is a very simple one, with 1 nuget dependency (that every project has) and 1 project dependency.\r\n"},{"Id":"10020813100","Type":"IssuesEvent","CreatedAt":"2019-07-16T13:26:21","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8337","RelatedDescription":"Closed issue \"Tests:  tests not cleaning up\" (#8337) at NuGet/Home","RelatedBody":"Some package signing-related tests open handles on files but do not close them properly. Thus, these tests fail to clean up after themselves."},{"Id":"10016133213","Type":"IssuesEvent","CreatedAt":"2019-07-15T22:03:39","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8337","RelatedDescription":"Opened issue \"Tests:  tests not cleaning up\" (#8337) at NuGet/Home","RelatedBody":"Some package signing-related tests open handles on files but do not close them properly. Thus, these tests fail to clean up after themselves."},{"Id":"10015977312","Type":"IssuesEvent","CreatedAt":"2019-07-15T21:34:07","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8336","RelatedDescription":"Closed issue \"Test:  InstallPackagesNupkgOnline is failing with SSL error\" (#8336) at NuGet/Home","RelatedBody":"The E2E test [`InstallPackagesNupkgOnline`](https://github.com/NuGet/NuGet.Client/blob/bd0c5fb12076a7f1678d825541a978caa4ac0bc0/test/EndToEnd/tests/InstallPackageTest.ps1#L2851) is failing with the error:\r\n\r\n`System.Exception: Failed to parse package identities from file https://az320820.vo.msecnd.net/packages/microsoft.aspnet.mvc.4.0.20505.nupkg with exception: An error occurred while sending the request.`"},{"Id":"10015163259","Type":"IssuesEvent","CreatedAt":"2019-07-15T19:22:55","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8336","RelatedDescription":"Opened issue \"Test:  InstallPackagesNupkgOnline is failing with SSL error\" (#8336) at NuGet/Home","RelatedBody":"The E2E test [`InstallPackagesNupkgOnline`](https://github.com/NuGet/NuGet.Client/blob/bd0c5fb12076a7f1678d825541a978caa4ac0bc0/test/EndToEnd/tests/InstallPackageTest.ps1#L2851) is failing with the error:\r\n\r\n`System.Exception: Failed to parse package identities from file https://az320820.vo.msecnd.net/packages/microsoft.aspnet.mvc.4.0.20505.nupkg with exception: An error occurred while sending the request.`"},{"Id":"10015101567","Type":"IssuesEvent","CreatedAt":"2019-07-15T19:13:08","Actor":"jdege","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8335","RelatedDescription":"Opened issue \"Nuget.exe restore foo.sln fails if %platform% contains spaces\" (#8335) at NuGet/Home","RelatedBody":"I'm not seeing any reference here to nuget.exe relying upon the %platform% enviornment variable: [https://docs.microsoft.com/en-us/nuget/tools/cli-ref-environment-variables](https://docs.microsoft.com/en-us/nuget/tools/cli-ref-environment-variables)\r\n\r\nBut when I run \"nuget.exe restore mysln.sln\", and I have %platform\" = \"Any CPU\" (for reasons that have nothing to do with nuget restore), I see \"Any CPU\" in the error message.\r\n\r\n`...\\VisualStudio\\v16.0\\Fakes\\Microsoft.QualityTools.Testing.Fakes.targets(13,5): error MSB4184: The expression \"System.IO.Path]::Combine(...\\, obj\\\"Any CPU\"\\Debug\\Fakes)\" cannot be evaluated. Illegal characters in path.`"},{"Id":"10014970424","Type":"IssuesEvent","CreatedAt":"2019-07-15T18:52:34","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8334","RelatedDescription":"Opened issue \"Should vcxproj be in the approved list for the nuget.targets\" (#8334) at NuGet/Home","RelatedBody":"https://github.com/NuGet/NuGet.Client/blob/f5916a527c442f896f787c593252b37a345da835/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L239\r\n\r\nC++ projects do not support PR yet so not sure why this is necessary. \r\n\r\nThere could be some weird reason such as enabling nuget.exe restore to work. \r\n\r\nThis needs investigated.\r\n\r\nIdeally, C++ just supports PR, but that's out of NuGet's hands. "},{"Id":"10013865340","Type":"IssuesEvent","CreatedAt":"2019-07-15T16:05:50","Actor":"TFTomSun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8311","RelatedDescription":"Closed issue \"GeneratePathProperty metadata on package reference does not generate the property\" (#8311) at NuGet/Home","RelatedBody":"The feature GeneratePathProperty introduced with Visual Studio 15.9. seems not to work for me.\r\n\r\nI'm using Visual Studio 15.9.11\r\n\r\nMy code\r\n```xml\r\n\r\n<ItemGroup>\r\n    <PackageReference Include=\"CrossCutting.Build\" Version=\"[*,9999.0]\" GeneratePathProperty=\"true\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Target Name=\"Mylog\" AfterTargets=\"CoreCompile\">\r\n    <Message Importance=\"high\" Text=\"PkgCrossCutting_Build: $(PkgCrossCutting_Build)\"></Message>\r\n  </Target>\r\n\r\n\r\n\r\n```\r\nExpected output:\r\nPkgCrossCutting_Build: [path to the resolved package]\r\n\r\nActual output\r\nPkgCrossCutting_Build:\r\n\r\nThe property seems not to be generated at all.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-07-17T05:30:47.0903809Z","RunDurationInMilliseconds":2412}