{"Data":{"GitHub":{"Issues":[{"Id":"442041389","IsPullRequest":true,"CreatedAt":"2019-05-09T04:14:11","Actor":"yamachu","Number":"3682","RawContent":null,"Title":"Replace VectorType with VectorDataViewType in SchemaComprehension document","State":"open","Body":"ref: https://github.com/dotnet/machinelearning/pull/3022\r\n\r\nThe document did not follow the change https://github.com/dotnet/machinelearning/pull/3022 , so replace it.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3682","RelatedDescription":"Open PR \"Replace VectorType with VectorDataViewType in SchemaComprehension document\" (#3682)"},{"Id":"439789900","IsPullRequest":false,"CreatedAt":"2019-05-09T03:23:36","Actor":"pkumar07","Number":"3654","RawContent":null,"Title":"Add AVX intrinsics implementation for Factorization Machine","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 version 1709\r\n- **.NET Version (eg., dotnet --info)**: 3.0.100-preview-010184\r\n\r\n### Issue\r\n\r\nI'm trying to add C++ AVX intrinsics implementation for Factorization Machine and doing a dynamic dispatch from `FactorizationMachineInterface.cs`. I'm using `Avx.IsSupported` to check for AVX support and then call the `CalculateGradientAndUpdateNativeAVX/SSE` function declared as an extern.\r\n\r\nThe build fails with the following error for netcoreapp3.0. Would appreciate your suggestions to fix this.\r\n\r\n![buildfail](https://user-images.githubusercontent.com/22417834/57106643-cd0b7680-6ce2-11e9-855a-3d763580a535.PNG)\r\n\r\n\r\n### Source code / logs\r\n\r\nHere is the Microsoft.ML.StandardTrainers.csproj snippet I'm using:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework Condition=\"'$(UseIntrinsics)' != 'true'\">netstandard2.0</TargetFramework>\r\n    <TargetFrameworks Condition=\"'$(UseIntrinsics)' == 'true'\">netstandard2.0;netcoreapp3.0</TargetFrameworks>\r\n    <IncludeInPackage>Microsoft.ML</IncludeInPackage>\r\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\r\n    <LangVersion>7.3</LangVersion>\r\n    <DebugType>pdbonly</DebugType>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj\" />\r\n    <ProjectReference Include=\"..\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj\" />\r\n    <ProjectReference Include=\"..\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <Compile Remove=\"FactorizationMachine/FactorizationMachineInterface.netstandard.cs\" />\r\n    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"4.5.2\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netstandard2.0'\">\r\n    <Compile Remove=\"FactorizationMachine/FactorizationMachineInterface.netcoreapp.cs\" />\r\n    <PackageReference Include=\"System.Memory\" Version=\"$(SystemMemoryVersion)\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nFYI: \r\nThe build fails when targeting to netcoreapp3.0 even with no modifications to the source code. i.e. \r\n```<TargetFramework>netstandard2.0</TargetFramework>```\r\nto\r\n``` <TargetFrameworks>netstandard2.0;netcoreapp3.0</TargetFrameworks>```\r\n\r\n@glebuk @singlis ","Url":"https://github.com/dotnet/machinelearning/issues/3654","RelatedDescription":"Closed issue \"Add AVX intrinsics implementation for Factorization Machine\" (#3654)"},{"Id":"442004210","IsPullRequest":false,"CreatedAt":"2019-05-09T01:01:01","Actor":"danucalovj","Number":"3681","RawContent":null,"Title":"ML.NET API - Exploration Time vs Epochs + Loss/AUC (Enhancement)","State":"open","Body":"This is more of a feature enhancement rather than an issue. Please let me know if this is the correct venue to submit this to.\r\n\r\nIn both the Model Builder GUI and the CLI for AutoML, the only option to customize training time is through the **max exploration time** setting. Example of CLI options:\r\n\r\n![image](https://user-images.githubusercontent.com/12853868/57419929-a7d2a880-71b9-11e9-908e-1ce2d41e84e2.png)\r\n\r\nThis is a really neat way of changing things around instead of using epochs, using a time-based approach. But this could lead to undertraining a data set fairly easily, especially large ones, or produce a model that due to the fact that it hasn't been trained long enough (through several epochs throughout the entire dataset) didn't produce a good accuracy rate as expected.\r\n\r\nI'm going to take a wild guess (can't find documentation for this) that the time based approach takes into account AUC or Loss as a criteria (or another common metric) to stop the training, is that correct? In other words if I have a small dataset and I set a training time of 4 hours, but the AUC or Loss didn't improve over X iterations it calls it a day and gives me the best result, is that correct?\r\n\r\nIt would be nice if the AutoML function (Model Builder, CLI and API) provided a way to (in addition to the time-based approach, or as an alternative to):\r\n\r\n1. Set epochs for training rather than time based approach.\r\n2. Set metric to look for when stopping a training, i.e.: auc, loss, etc.\r\n3. Set thresholds of metrics to stop a training. i.e.: if after X number of epochs it doesn't improve, call it a day.","Url":"https://github.com/dotnet/machinelearning/issues/3681","RelatedDescription":"Open issue \"ML.NET API - Exploration Time vs Epochs + Loss/AUC (Enhancement)\" (#3681)"},{"Id":"441965015","IsPullRequest":false,"CreatedAt":"2019-05-08T22:50:19","Actor":"danucalovj","Number":"3680","RawContent":null,"Title":"Max File Size Limits for Model Builder","State":"open","Body":"Issue:\r\n\r\nUsing the ML.NET Model Builder, there is a max file size limit of 1 GB per the GUI:\r\n\r\n![image](https://user-images.githubusercontent.com/12853868/57413374-c11f2900-71a8-11e9-94ce-617f8d17babe.png)\r\n\r\nNo documentation on the limit available to my knowledge. If there is, can someone provide me the link?\r\n\r\nIs there a way to change the limit?\r\n\r\nAnd, is this a limit also using the AutoML CLI?","Url":"https://github.com/dotnet/machinelearning/issues/3680","RelatedDescription":"Open issue \"Max File Size Limits for Model Builder\" (#3680)"},{"Id":"440489493","IsPullRequest":false,"CreatedAt":"2019-05-08T21:02:12","Actor":"nilay-kothari","Number":"3664","RawContent":null,"Title":"How can I use FaceNet Tensorflow model with ML.Net?","State":"closed","Body":"I studied the sample code to use TensorFlow model to classsify image. Now I am trying to use FaceNet model created at https://github.com/davidsandberg/facenet, but I am not clear on how to proceed.\r\n\r\nAny suggestions?","Url":"https://github.com/dotnet/machinelearning/issues/3664","RelatedDescription":"Closed issue \"How can I use FaceNet Tensorflow model with ML.Net?\" (#3664)"},{"Id":"441777694","IsPullRequest":false,"CreatedAt":"2019-05-08T14:53:07","Actor":"popasUC","Number":"3679","RawContent":null,"Title":"Please add support for Visual Basic.Net","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\nIt looks like this Visual Studio extension does not currently work in Visual Basic .Net projects.\r\n\r\n- **What did you do?**\r\nInstalled the ML.Net Model Builder extension in Visual Studio 2019.\r\nCreated a new VB.Net project and a new C# project.\r\n\r\n- **What happened?**\r\nThe ML.Net Model Builder extension worked in the C# project (Add - Machine Learning opened the ML.Net Model Builder tab). Pass for C#.\r\n\r\nThe ML.Net Model Builder extension did not work in the VB.Net project (Add - Machine Learning was not even available). FAIL for VB.Net.\r\n\r\n- **What did you expect?**\r\nIt would be nice for this extension to work in VB.Net projects as well.\r\nYou would more than double your audience!\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3679","RelatedDescription":"Open issue \"Please add support for Visual Basic.Net\" (#3679)"},{"Id":"441580476","IsPullRequest":false,"CreatedAt":"2019-05-08T06:57:13","Actor":"larsbeck","Number":"3678","RawContent":null,"Title":"Cannot load a trained model: \"A local file header is corrupt\"","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: Microsoft.NETCore.App 3.0.0-preview4-27615-11\r\n\r\n### Issue\r\nCannot load a trained model.\r\n\r\n- **What did you do?**\r\nTrained a model with AutoML, saved it to \"model.zip\" (see attached) and then I tried to load it via:\r\n`\r\nvar mlContext = new MLContext();\r\nvar mlModel = mlContext.Model.Load(\"model.zip\", out _);\r\n`\r\n- **What happened?**\r\nAn exception is thrown: \"A local file header is corrupt\"\r\n- **What did you expect?**\r\nThe model to be loaded so I can make a prediction.\r\n### Source code / logs\r\n[model.zip](https://github.com/dotnet/machinelearning/files/3155902/model.zip)\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3678","RelatedDescription":"Open issue \"Cannot load a trained model: \"A local file header is corrupt\"\" (#3678)"},{"Id":"441491746","IsPullRequest":false,"CreatedAt":"2019-05-07T23:51:07","Actor":"Suchiman","Number":"3677","RawContent":null,"Title":"Model Builder formats floating point numbers using current culture in C# code","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 1809 de-DE\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.0 Preview 5\r\n\r\n### Issue\r\n\r\n- I've installed the extension from https://marketplace.visualstudio.com/items?itemName=MLNET.07\r\n- Then i've added Machine Learning and stepped through the wizard until it generated code\r\n- Generated code didn't compile because floating point numbers were using `,` and not `.`\r\n\r\n### Source code / logs\r\n```csharp\r\npublic static IEstimator<ITransformer> BuildTrainingPipeline(MLContext mlContext)\r\n{\r\n    // Data process configuration with pipeline data transformations \r\n    var dataProcessPipeline = mlContext.Transforms.Text.FeaturizeText(\"Message_tf\", \"Message\")\r\n                                .Append(mlContext.Transforms.CopyColumns(\"Features\", \"Message_tf\"))\r\n                                .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"))\r\n                                .AppendCacheCheckpoint(mlContext);\r\n\r\n    // Set the training algorithm \r\n    var trainer = mlContext.BinaryClassification.Trainers.LbfgsLogisticRegression(new LbfgsLogisticRegressionBinaryTrainer.Options() { L2Regularization = 0, 7094225f, L1Regularization = 0, 09696315f, OptimizationTolerance = 1E-07f, HistorySize = 20, MaximumNumberOfIterations = 864052206, InitialWeightsDiameter = 0, 2569083f, DenseOptimizer = true, LabelColumnName = \"Label\", FeatureColumnName = \"Features\" });\r\n\r\n    return trainingPipeline;\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/3677","RelatedDescription":"Open issue \"Model Builder formats floating point numbers using current culture in C# code\" (#3677)"},{"Id":"441466691","IsPullRequest":true,"CreatedAt":"2019-05-07T22:07:31","Actor":"najeeb-kazmi","Number":"3676","RawContent":null,"Title":"Fix SoftMax precision by utilizing double in the internal calculations","State":"open","Body":"Fixes #3648 \r\n\r\nUses `double` when calculating softmax exponent scores and only cast to `float` at the final step returning the probabilities.\r\n\r\ncc: @rauhs ","Url":"https://github.com/dotnet/machinelearning/pull/3676","RelatedDescription":"Open PR \"Fix SoftMax precision by utilizing double in the internal calculations\" (#3676)"},{"Id":"441354172","IsPullRequest":false,"CreatedAt":"2019-05-07T17:39:23","Actor":"greenygh0st","Number":"3675","RawContent":null,"Title":"Predict() cannot find file on disk even though it exists","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: macOS\r\n- **.NET Version (eg., dotnet --info)**: 2.2.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nRan the ObjectDetection example from https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ObjectDetection_Onnx\r\n\r\n- **What happened?**\r\nThe Predict() method of the model produced an IO error that the file could not be found\r\n\r\n- **What did you expect?**\r\nFor the sample to properly classify the images.\r\n\r\n---\r\nI also confirmed that the file does exist on disk and that the file readable passing sample.ImagePath to File.ReadAllText() in additional line I added about the Predict() line.\r\n\r\n![image](https://user-images.githubusercontent.com/1551020/57320674-0e29cf00-70c5-11e9-8d45-5ee2b655560b.png)\r\n\r\n### Source code / logs\r\n\r\n![image](https://user-images.githubusercontent.com/1551020/57320303-37962b00-70c4-11e9-8d25-be019e95dd98.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3675","RelatedDescription":"Open issue \"Predict() cannot find file on disk even though it exists\" (#3675)"},{"Id":"441252235","IsPullRequest":false,"CreatedAt":"2019-05-07T14:04:53","Actor":"luisquintanilla","Number":"3674","RawContent":null,"Title":"Permutation Feature Importance on Text Data","State":"open","Body":"This question/issue is related to dotnet/docs#12216\r\n\r\nUsing data that looks like the following (ignore accuracy, this was generated data for demo purposes):\r\n\r\nAudienceReview|CriticReview|Rating\r\n|---|---|---|\r\nIt was a true masterpiece|I hated it |2\r\nWorst movie ever|I did not like it|1\r\nIt was nice|It was nice|1\r\n\r\nI created the data model `InputData`:\r\n\r\n```csharp\r\npublic class InputData\r\n{\r\n    [LoadColumn(0)]\r\n    public string AudienceReview { get; set; }\r\n    [LoadColumn(1)]\r\n    public string CriticReview { get; set; }\r\n    [LoadColumn(2)]\r\n    [ColumnName(\"Label\")]\r\n    public float Rating { get; set; }\r\n}\r\n```\r\n\r\nAnd used the following pipeline:\r\n\r\n```csharp\r\nDataOperationsCatalog.TrainTestData dataSplit = mlContext.Data.TrainTestSplit(data);\r\nIDataView trainData = dataSplit.TrainSet;\r\nIDataView testSet = dataSplit.TestSet;\r\n\r\nvar trainingPipeline = mlContext.Transforms.Text.FeaturizeText(\"AudienceReview\")\r\n    .Append(mlContext.Transforms.Text.FeaturizeText(\"CriticReview\"))\r\n    .Append(mlContext.Transforms.Concatenate(\"Features\", new string[] { \"AudienceReview\", \"CriticReview\" }))\r\n    .Append(mlContext.Regression.Trainers.Sdca());\r\n\r\nvar trainedModel = trainingPipeline.Fit(trainData);\r\n\r\nvar pfi = mlContext.Regression.PermutationFeatureImportance(trainedModel.LastTransformer, trainedModel.Transform(testSet), permutationCount: 3);\r\n```\r\n\r\nI would expect the result of using PFI to contain metrics for two features, `AudienceReview` and `CriticReview`. Instead, I get 268 features.  I believe this is because it is taking the result of `FeaturizeText` and treating each element in the vector as a feature as opposed to the entire vector. Is that the intent?","Url":"https://github.com/dotnet/machinelearning/issues/3674","RelatedDescription":"Open issue \"Permutation Feature Importance on Text Data\" (#3674)"},{"Id":"441130850","IsPullRequest":false,"CreatedAt":"2019-05-07T09:25:34","Actor":"sergey-tihon","Number":"3673","RawContent":null,"Title":"Restore trainer code from model.zip ","State":"open","Body":"How can I restore the code that was used to create `model.zip`? Is model archive is self-containing?\r\n\r\n### Use case:\r\nLet's say I have 10 models in production, created by few engineers. \r\nAfter some time (1 year) I find out that one model does not perform as good as it was before and I want to retrain it using the same algorithms but with more training data.\r\n\r\nShould I maintain all version of trainers (code & params) and their relationships with generated model files separately or I will be able to restore code in the future?\r\n\r\nSomething like\r\n```\r\nmlnet gen-proj \"model.zip\" --lang C#\r\n```   \r\n\r\n### Note\r\n\r\nAlso may be useful to have AutoML logs packed inside (optionally)\r\nIf model is trained and saved by Azure ML it may be useful to know how many minutes was spend on training and what models was tried...","Url":"https://github.com/dotnet/machinelearning/issues/3673","RelatedDescription":"Open issue \"Restore trainer code from model.zip \" (#3673)"},{"Id":"441128194","IsPullRequest":false,"CreatedAt":"2019-05-07T09:19:50","Actor":"PeterPann23","Number":"3672","RawContent":null,"Title":"Perhaps show how to understand what class has what score","State":"open","Body":"One gets an set of scores only no documented way to map the value to class.  \n\nPerhaps add some samples like:\nvar predEngine = mlContext.Model.CreatePredictionEngine&lt;IrisData, IrisPrediction&gt;(trainedModel);\nVBuffer&lt;float&gt; keys = default;\npredEngine.OutputSchema[\"PredictedLabel\"].GetKeyValues(ref keys);\nvar labelsArray = keys.DenseValues().ToArray();\nfor (var i = 0; i &lt; keys.Length; i++)\n    Console.WriteLine($\"key {labelsArray[i]} = {metrics.PerClassLogLoss[i]:P4}\");\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 3a185e45-64a6-62d0-14ce-98dcb476c011\n* Version Independent ID: 2e425649-9cc1-3aff-a82c-59b04ae34702\n* Content: [MulticlassClassificationMetrics.PerClassLogLoss Property (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.multiclassclassificationmetrics.perclasslogloss?view=ml-dotnet#Microsoft_ML_Data_MulticlassClassificationMetrics_PerClassLogLoss)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @sfilipi\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3672","RelatedDescription":"Open issue \"Perhaps show how to understand what class has what score\" (#3672)"},{"Id":"441106929","IsPullRequest":false,"CreatedAt":"2019-05-07T08:32:39","Actor":"PeterPann23","Number":"3671","RawContent":null,"Title":"The Metrics documentation does not help","State":"open","Body":"\r\n[Enter feedback here]\r\nHi,\r\n\r\nI feel that this level of documentation doesn't really help those that are reading it. It's okay that you provide the formulas of how you calculate the properties however 95% of those that would open help to read about it it will likely be more confused than helped.  One should document/ explain what a property means in relation to the accuracy of the model tested.\r\n\r\nLogLossReduction has one sentence that is confusing but helps \r\n\r\n> For example, if the RIG equals 20, it can be interpreted as \"the probability of a correct prediction is 20% better than random guessing.\r\n\r\nSo when executing the samples, I take the Iris clustering sample, it returns LogLossReduction of  0.9967811419606234, you and I know that this is 99.67% and not 0.99% however **RIG equals 20** is ambiguous and could be reworded as. \r\n\r\n> For example, if the LogLossReduction equals 0.20, it can be interpreted as \"the probability of a correct prediction is 20% better than random guessing.\r\n\r\n\r\nAlso, testing the metrics of N rows will not pass a \"confidence\" that a \"flip of a coin\" prediction is accurate, simply stating that a % of data must be used also doesn't help as 20% of 10 rows is not representative. \r\n\r\nIdeally one would also mention how the number can be influenced so that the users can understand how to improve the models accuracy, perhaps have links to [Feature Importance](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/explain-machine-learning-model-permutation-feature-importance-ml-net). \r\n\r\nIdeally those that give the framework a spin should be able to understand the results generated model as well as how to improve it.\r\n\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: db0c3c11-e826-253d-983d-bc64f22bb609\r\n* Version Independent ID: db553462-9f1c-789d-caf2-408edc18d7d1\r\n* Content: [MulticlassClassificationMetrics.LogLoss Property (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.multiclassclassificationmetrics.logloss?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/MulticlassClassificationMetrics.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3671","RelatedDescription":"Open issue \"The Metrics documentation does not help\" (#3671)"},{"Id":"440031596","IsPullRequest":false,"CreatedAt":"2019-05-06T22:59:08","Actor":"dbaechtel","Number":"3660","RawContent":null,"Title":"No Wiki. Lack of documentation.","State":"closed","Body":"### System information\r\n\r\nany\r\n\r\n### Issue\r\n\r\nNo Wiki. \r\nLack of documentation.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3660","RelatedDescription":"Closed issue \"No Wiki. Lack of documentation.\" (#3660)"},{"Id":"440911538","IsPullRequest":false,"CreatedAt":"2019-05-06T21:42:12","Actor":"samueleresca","Number":"3670","RawContent":null,"Title":"Shuffle input cursor reader failed with an exception","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Mac OS Mojave 10.14.4 (18E226)\r\n- **.NET Version (eg., dotnet --info)**:  \r\n```\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview3-010431/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27606-03\r\n  Commit:  39eb528ff8\r\n\r\n```\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI'm loading my dataset using the 'CsvLoad' in the following way: [CsvFile.Load](https://github.com/samueleresca/LyricsClassifier/blob/76143426e515be5a5cb6808cb4fa599325b9ddd2/LyricsClassifier/Program.fs#L143)\r\n\r\nThe data pass through the following features engineering process:  [dataProcessPipeline](https://github.com/samueleresca/LyricsClassifier/blob/76143426e515be5a5cb6808cb4fa599325b9ddd2/LyricsClassifier/Program.fs#L69)\r\n\r\nThe runtime throws an exception at the [Fit step](https://github.com/samueleresca/LyricsClassifier/blob/76143426e515be5a5cb6808cb4fa599325b9ddd2/LyricsClassifier/Program.fs#L110)\r\n\r\n- **What happened?**\r\nThe runtime throws the following exception:\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (Shuffle input cursor reader failed with an exception) (Shuffle input cursor reader failed with an exception) ---> System.InvalidOperationException: Shuffle input cursor reader failed with an exception ---> System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data ---> System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data ---> System.FormatException: Input string was not in a correct format.\r\n   at System.Number.StringToNumber(ReadOnlySpan`1 str, NumberStyles options, NumberBuffer& number, NumberFormatInfo info, Boolean parseDecimal)\r\n   at System.Number.ParseInt32(ReadOnlySpan`1 s, NumberStyles style, NumberFormatInfo info)\r\n```\r\n\r\n- **What did you expect?**\r\n\r\nThe runtime throws a `System.FormatException`, but Is not clear which specific input refers.\r\n\r\n### Source code / logs\r\n\r\n[LyricsClassifier/LyricsClassifier/Program.fs](https://github.com/samueleresca/LyricsClassifier/blob/76143426e515be5a5cb6808cb4fa599325b9ddd2/LyricsClassifier/Program.fs)","Url":"https://github.com/dotnet/machinelearning/issues/3670","RelatedDescription":"Open issue \"Shuffle input cursor reader failed with an exception\" (#3670)"},{"Id":"440899720","IsPullRequest":false,"CreatedAt":"2019-05-06T21:21:12","Actor":"mikeTWC1984","Number":"3669","RawContent":null,"Title":"Powershell Integration - getting errors","State":"open","Body":"### System information\r\n\r\n- **Windows 10, Linux (Ubuntu)**:\r\n- **netstandard2, core 2**:\r\n- **ML version 1.0.0-preview**:\r\n\r\n### Issue\r\n\r\nI'm trying to integrate ML.NET with powershell. I'm using [Sentiment Analysis sample](https://github.com/dotnet/samples/tree/master/machine-learning/tutorials/SentimentAnalysis) for testing. Sample code runs just fine as a console app, but throws errors if executed as Powershell Cmdlet. It doesn't matter if it's binary cmdlet  (C#, using same exact code as console app) or pure PS. It doesn't work even if I save sample as a class library (and calling static methods via PS).\r\n\r\n- **Shuffle input cursor reader failed with an exception**\r\nIf disabling shuffling, getting this:\r\n- **Splitter/consolidator worker encountered exception while consuming source data**\r\n\r\nThis happens when calling fit method after trainer is added to the pipeline (I can call fit on estimator with no error). I tried Log regression and Fast Tree trainers (getting same errors)\r\n\r\nNot sure if there is any fundamental blocker, but I think it would be extremely useful to get it work with PowerShell \r\n\r\n### Source code / logs\r\n\r\n```PowerShell\r\n\r\n<# Downloading assemblies and data set\r\n\r\n# download nuget if needed\r\n# iwr \"https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\" -OutFile \"nuget.exe\"\r\n\r\nnuget install Microsoft.ML -version 1.0.0-preview\r\n\r\nmkdir bin\r\n\r\ngci \"*\\lib\\netstandard*\\*.dll\" | copy-item -Destination \".\\bin\"\r\n\r\n$url = \"https://raw.githubusercontent.com/lucasalexander/mlnet-samples/master/sentiment-analysis/data/yelp_labelled.txt\"\r\nInvoke-WebRequest -Uri $url -OutFile \"yelp_labelled.txt\"\r\n\r\n#>\r\n\r\n\r\nAdd-Type -Path \"$pwd\\bin\\*.dll\" \r\n\r\n\r\n$dataPath = \"$pwd\\yelp_labelled.txt\"\r\n\r\n$mlCOntext = [Microsoft.ML.MLContext]::new()\r\n\r\n$columns = [System.Collections.Generic.List``1[Microsoft.ML.Data.TextLoader+Column]]::new()\r\n\r\n$columns.Add([Microsoft.ML.Data.TextLoader+Column]::new(\"SentimentText\", \"String\", 0))\r\n$columns.Add([Microsoft.ML.Data.TextLoader+Column]::new(\"Label\", \"Boolean\", 1))\r\n\r\n$columns.Add([Microsoft.ML.Data.TextLoader+Column]::new(\"PredictedLabel\", \"Boolean\", 2))\r\n$columns.Add([Microsoft.ML.Data.TextLoader+Column]::new(\"Probability\", \"Single\", 3))\r\n$columns.Add([Microsoft.ML.Data.TextLoader+Column]::new(\"Score\", \"Single\", 4))\r\n\r\n$opt = [Microsoft.ML.Data.TextLoader+Options]::new()\r\n$opt.Separators = \"`t\"\r\n$opt.Columns = $columns\r\n$opt.HasHeader = $false\r\n\r\n\r\n$dataView = [Microsoft.ML.TextLoaderSaverCatalog]::LoadFromTextFile($mlCOntext.Data, $dataPath, $opt)\r\n\r\n# preview data\r\n# [Microsoft.ML.DebuggerExtensions]::Preview($dataView).rowview | foreach { $_.Values.Value -join \" | \" }\r\n\r\n\r\n$splitDataView =  $mlCOntext.Data.TrainTestSplit($dataView, 0.2)\r\n$trainSet = $splitDataView.TrainSet\r\n$testSet = $splitDataView.TestSet\r\n\r\n\r\n$estimator = [Microsoft.ML.TextCatalog]::FeaturizeText($mlCOntext.Transforms.Text, \"Features\", \"SentimentText\")\r\n\r\n\r\n$optTrain = [Microsoft.ML.Trainers.SdcaLogisticRegressionBinaryTrainer+Options]::new()\r\n$optTrain.FeatureColumnName = \"Features\"\r\n$optTrain.LabelColumnName = \"Label\"\r\n\r\n\r\n# this will avoid 'Shuffle input cursor' error, but raise 'Splitter/consolidator' error\r\n$optTrain.Shuffle = $false  \r\n\r\n$trainer = [Microsoft.ML.StandardTrainersCatalog]::SdcaLogisticRegression($mlCOntext.BinaryClassification.Trainers, $optTrain)\r\n\r\n<# fast tree trainer, but getting Splitter/consolidator error again\r\n$topt = [Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer+Options]::new()\r\n$topt.FeatureColumnName = \"Features\"\r\n$topt.LabelColumnName = \"Label\"\r\n$trainer = [Microsoft.ML.TreeExtensions]::FastTree($mlCOntext.BinaryClassification.Trainers, $topt)\r\n#>\r\n\r\n\r\n$pipe = [Microsoft.ML.LearningPipelineExtensions]::Append($estimator, $trainer, \"Everything\")\r\n\r\n\r\n$model = $pipe.Fit($trainSet)  # ERROR OCCURS HERE !!!\r\n\r\n# if apply fit on estimator no error will occur and predict/evaluate block will work (with some dummy results)\r\n\r\n# $model = $estimator.Fit($splitDataView.TrainSet)\r\n\r\n$predict = $model.Transform($TestSet)\r\n\r\n$mlCOntext.BinaryClassification.Evaluate($predict, \"Label\")\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3669","RelatedDescription":"Open issue \"Powershell Integration - getting errors\" (#3669)"},{"Id":"440821521","IsPullRequest":true,"CreatedAt":"2019-05-06T20:32:35","Actor":"shauheen","Number":"3668","RawContent":null,"Title":"Fixes the build badges to show correct status","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/3650\r\nThe build badges are showing incorrect status, fixing the issue.","Url":"https://github.com/dotnet/machinelearning/pull/3668","RelatedDescription":"Closed or merged PR \"Fixes the build badges to show correct status\" (#3668)"},{"Id":"440808785","IsPullRequest":true,"CreatedAt":"2019-05-06T18:23:04","Actor":"artidoro","Number":"3667","RawContent":null,"Title":"Fix to the official build (API Compat tool)","State":"closed","Body":"PR #3623 breaks the official build because the .Net Core 2.1 runtime is not found.\r\nWe have it locally in the tools directory, so a solution is to make it point to that local installation of the runtime. \r\n\r\nFixes #3666.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3667","RelatedDescription":"Closed or merged PR \"Fix to the official build (API Compat tool)\" (#3667)"},{"Id":"440808269","IsPullRequest":false,"CreatedAt":"2019-05-06T18:23:04","Actor":"artidoro","Number":"3666","RawContent":null,"Title":"Official build failure due to the API Compat tool PR","State":"closed","Body":"PR #3623 breaks the official tool.\r\n\r\n![image](https://user-images.githubusercontent.com/11949572/57243531-393ff000-6feb-11e9-8b29-8f2e29d9beb0.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3666","RelatedDescription":"Closed issue \"Official build failure due to the API Compat tool PR\" (#3666)"},{"Id":"440557595","IsPullRequest":false,"CreatedAt":"2019-05-06T06:34:29","Actor":"PeterPann23","Number":"3665","RawContent":null,"Title":"Pipeline Lazy loading csv files looks to be not all that lazy and loading vectors still gives issues","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Server 2019, 3TB Ram\r\n- **.NET Version (eg., dotnet --info)**:  Core 3.0, ML.Net 1.0.0.0 \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nGenerated data for training model based on 12 monthly training files as CSV (6TB).\r\nGenerate data for training CSV model based on 1 year data input then save it a binary file (604GB). I can't work with loading all fields in a single vector as the vector starts at position 1 and not position 0. If I would have the trained lable at the end of the CSV column then perhaps, at the moment I get a runtime error stating that the trained model has 1 more column than the provided vector of 40730 fields.  \r\n\r\n- **What happened?**\r\nThe training the CSV file takes 99.99% of available ram on the PC, the binary file does no such thing. The issue with the vector definition in the csv file seems to be still an issue.\r\n\r\n- **What did you expect?**\r\nAs the documentation states it does lazy loading I'd expect it to not take all memory and loading all fields as a vector, train and predict still doesn't work.\r\n\r\n\r\n### Source code / logs\r\n\r\n```\r\nvar options =new LightGbmMulticlassTrainer.Options {\r\n                  LabelColumnName   = KeyColumn,\r\n                  FeatureColumnName = Features,\r\n                  Silent= false,\r\n                  Verbose=true,\r\n                  NumberOfThreads=8\r\n              };\r\n\r\n\r\nvar pipeline = mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: KeyColumn, inputColumnName: Label)\r\n              .Append(MLContext.Transforms.Concatenate(Features, Mapper.GetFieldNames()))\r\n              .Append(mlContext.MulticlassClassification.Trainers.LightGbm(options))                          \r\n              .Append(mlContext.Transforms.CopyColumns(inputColumnName: KeyColumn, outputColumnName: nameof(PredictedResult.PredictedLabelIndex)))\r\n     \r\n```\r\nLoading this class will cause the trained model to fail accepting the features. not sure if it includes the label in the training, not sure if the error is due to the column count.\r\n```\r\npublic static IDataView GetDataViewAsVector(MLContext mlContext, FileInfo trainingFile, long? maxRows = null, bool asBinary=false)\r\n{\r\n    var loader = mlContext.Data.CreateTextLoader(options: new TextLoader.Options()\r\n    {\r\n        Columns = new[] {\r\n       new TextLoader.Column(name:\"Label\", dataKind: DataKind.String, index: 0),\r\n       new TextLoader.Column(name:\"Features\",dataKind:DataKind.Single,minIndex:1,maxIndex:40731),\r\n    },\r\n        HasHeader = false,\r\n        Separators = new[] { '|' },\r\n        UseThreads = true,\r\n    });\r\n    var dv = loader.Load(trainingFile.FullName);\r\n     if (asBinary)\r\n     {\r\n         using(var fs= new FileStream(path:trainingFile.FullName.Replace(\".csv\",\".bin\"),mode:FileMode.CreateNew))\r\n             mlContext.Data.SaveAsBinary(dv,fs);\r\n     }\r\n    return dv;\r\n}\r\n\r\n\r\npublic class DataBase\r\n    {\r\n        [LoadColumn(0)]     \r\n        public string Label { get; set; }\r\n\r\n         //error in column definition\r\n        [LoadColumn(1,40731),VectorType(40730)]  \r\n        public float[] Features { get; set; }\r\n\r\n        public DataBase()\r\n        {\r\n            Features = new float[220];\r\n        }\r\n    }\r\n```\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3665","RelatedDescription":"Open issue \"Pipeline Lazy loading csv files looks to be not all that lazy and loading vectors still gives issues\" (#3665)"},{"Id":"439850957","IsPullRequest":true,"CreatedAt":"2019-05-03T22:18:11","Actor":"Dmitry-A","Number":"3658","RawContent":null,"Title":"[AutoML] bump version to 0.4.0","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3658","RelatedDescription":"Closed or merged PR \"[AutoML] bump version to 0.4.0\" (#3658)"},{"Id":"440215004","IsPullRequest":false,"CreatedAt":"2019-05-03T20:45:18","Actor":"eerhardt","Number":"3663","RawContent":null,"Title":"[Extensions.ML] AddPredictionEnginePool should support models as embedded resources","State":"open","Body":"Today AddPredictionEnginePool supports `FromFile` and `FromUri`. Another scenario is to add the ML model as an embedded resource in a project, so you don't have to worry about copying and finding a file - it will always be in the code assembly. Or potentially you may have different models for different languages, and you can replace the resource depending on the current culture.\r\n\r\nWe should add suport for embedded resource files to Extensions.ML.","Url":"https://github.com/dotnet/machinelearning/issues/3663","RelatedDescription":"Open issue \"[Extensions.ML] AddPredictionEnginePool should support models as embedded resources\" (#3663)"},{"Id":"440209057","IsPullRequest":false,"CreatedAt":"2019-05-03T20:28:30","Actor":"eerhardt","Number":"3662","RawContent":null,"Title":"[AutoML] Generated model file should target netstandard2.0","State":"open","Body":"Using `mlnet auto-train`, the generated `.Model` file should target `netstandard2.0`. Currently it is targeting `netcoreapp2.1` which is not correct.\r\n\r\nML.NET supports a lot of app types - .NET Core is just one of them. The model project should be targeting netstandard.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/b5438d1dcdce7059d88f5c17e16be4aabfaec3bd/src/mlnet/Templates/Console/ModelProject.tt#L8-L10","Url":"https://github.com/dotnet/machinelearning/issues/3662","RelatedDescription":"Open issue \"[AutoML] Generated model file should target netstandard2.0\" (#3662)"},{"Id":"440034105","IsPullRequest":false,"CreatedAt":"2019-05-03T12:57:59","Actor":"sergey-tihon","Number":"3661","RawContent":null,"Title":"Better docs/samples for Data.SaveAsText & Data.SaveAsBinary","State":"open","Body":"I do classification of MS Office document, in my case `feature generation` is relatively slow process, that why I want to do in once and save my data set to file like `data.tsv` and then experiment with different models and parameters.\r\n\r\nLet's say we I defined model class\r\n```csharp\r\nprivate class IrisInputAllFeatures\r\n{\r\n    [ColumnName(\"Label\"), LoadColumn(4)]\r\n    public string IgnoredLabel { get; set; }\r\n\r\n    [LoadColumn(0, 3)]\r\n    public float Features { get; set; }\r\n}\r\n```\r\n\r\nthen I wrote the code that generate / export data\r\n\r\n```csharp\r\nvar dataSet = new [] {\r\n   new IrisInputAllFeatures() { ... },\r\n   new IrisInputAllFeatures() { ... } \r\n}\r\n```\r\n\r\nthe next thing that I expect is to be able to save all my data in file in format supported by `LoadFromTextFile` method (to be able reuse `IrisInputAllFeatures` class in both places),  like\r\n\r\n```csharp\r\nData.SaveToTextFile(\"DataSet.tsv\", dataSet);\r\n```\r\n\r\nIs there a way to save data to the file based on `ColumnName`, `LoadColumn` attributes?","Url":"https://github.com/dotnet/machinelearning/issues/3661","RelatedDescription":"Open issue \"Better docs/samples for Data.SaveAsText & Data.SaveAsBinary\" (#3661)"},{"Id":"439943132","IsPullRequest":false,"CreatedAt":"2019-05-03T08:36:08","Actor":"rauhs","Number":"3659","RawContent":null,"Title":"LightGBM error when using UseCat with count Feature selection","State":"open","Body":"### Issue\r\n\r\nversion: 0.11\r\n\r\n- **What did you do?**\r\n1. I trained a LightGBM multi-class classifier with `UseCat` to `true`.\r\n1. I added a `SelectFeaturesBasedOnCount` on the final `Features`.\r\n\r\nIf it matters: I also use early stopping (does this prune some trees?).\r\n\r\n- **What happened?**\r\n\r\nI got an exception after training was done (successfully) and ML.NET tries to construct the `InternalRegressionTree`:\r\n```\r\nSystem.InvalidOperationException: 'Categorical split features is zero length'\r\n```\r\n\r\nStack\r\n```\r\n>\tMicrosoft.ML.Core.dll!Microsoft.ML.Contracts.Check(bool f, string msg) Line 491\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.CheckValid(System.Action<bool, string> checker) Line 471\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.InternalRegressionTree(int[] splitFeatures, double[] splitGain, double[] gainPValue, float[] rawThresholds, float[] defaultValueForMissing, int[] lteChild, int[] gtChild, double[] leafValues, int[][] categoricalSplitFeatures, bool[] categoricalSplit) Line 224\tC#\r\n \tMicrosoft.ML.FastTree.dll!Microsoft.ML.Trainers.FastTree.InternalRegressionTree.Create(int numLeaves, int[] splitFeatures, double[] splitGain, float[] rawThresholds, float[] defaultValueForMissing, int[] lteChild, int[] gtChild, double[] leafValues, int[][] categoricalSplitFeatures, bool[] categoricalSplit) Line 188\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.Booster.GetModel(int[] categoricalFeatureBoudaries) Line 257\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainCore(Microsoft.ML.IChannel ch, Microsoft.ML.IProgressChannel pch, Microsoft.ML.LightGBM.Dataset dtrain, Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.CategoricalMetaData catMetaData, Microsoft.ML.LightGBM.Dataset dvalid) Line 375\tC#\r\n \tMicrosoft.ML.LightGBM.dll!Microsoft.ML.LightGBM.LightGbmTrainerBase<Microsoft.ML.Data.VBuffer<float>, Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainModelCore(Microsoft.ML.TrainContext context) Line 117\tC#\r\n \tMicrosoft.ML.Data.dll!Microsoft.ML.Trainers.TrainerEstimatorBase<Microsoft.ML.Data.MulticlassPredictionTransformer<Microsoft.ML.Trainers.OvaModelParameters>, Microsoft.ML.Trainers.OvaModelParameters>.TrainTransformer(Microsoft.Data.DataView.IDataView trainSet, Microsoft.Data.DataView.IDataView validationSet, Microsoft.ML.IPredictor initPredictor) Line 148\tC#\r\n \tMlnEval.exe!ConsoleApp1.MlNetSpecific.MlNetLightGbmMultiClassTrainer.TrainAndEval(ConsoleApp1.Dev.AppState app) Line 107\tC#\r\n \tMlnEval.exe!ConsoleApp1.Program.Main(string[] args) Line 116\tC#\r\n\r\n```\r\n\r\nUnfortunately I failed to come up with a minimal reproducible example. Seems this requires a certain data setup.\r\n\r\n### Partial analysis\r\n\r\nIt looks like here:\r\nhttps://github.com/dotnet/machinelearning/blob/c5aab770622f1f56bddf8bbaf96f7798762c45ff/src/Microsoft.ML.LightGbm/WrappedLightGbmBooster.cs#L236-L251\r\n\r\n`cats` array is actually 0 length but `categoricalSplit[node]` is still set to true.\r\n\r\nwhich then later on will throw here:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c5aab770622f1f56bddf8bbaf96f7798762c45ff/src/Microsoft.ML.FastTree/TreeEnsemble/InternalRegressionTree.cs#L465-L469\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3659","RelatedDescription":"Open issue \"LightGBM error when using UseCat with count Feature selection\" (#3659)"},{"Id":"439841782","IsPullRequest":true,"CreatedAt":"2019-05-03T01:27:17","Actor":"Dmitry-A","Number":"3657","RawContent":null,"Title":"[AutoML] undo temp change in build.proj","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3657","RelatedDescription":"Closed or merged PR \"[AutoML] undo temp change in build.proj\" (#3657)"},{"Id":"439833986","IsPullRequest":true,"CreatedAt":"2019-05-03T00:02:43","Actor":"Dmitry-A","Number":"3656","RawContent":null,"Title":"[AutoML] temp change to get around vsts publish failure","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3656","RelatedDescription":"Closed or merged PR \"[AutoML] temp change to get around vsts publish failure\" (#3656)"},{"Id":"439802435","IsPullRequest":true,"CreatedAt":"2019-05-02T22:20:04","Actor":"Dmitry-A","Number":"3655","RawContent":null,"Title":"[AutoML] Change wording for CouldNotFinshOnTime message","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3655","RelatedDescription":"Closed or merged PR \"[AutoML] Change wording for CouldNotFinshOnTime message\" (#3655)"},{"Id":"439734076","IsPullRequest":true,"CreatedAt":"2019-05-02T18:47:32","Actor":"srsaggam","Number":"3653","RawContent":null,"Title":"[AutoML] Cleaner way to exit the main()","State":"open","Body":"We could just return the exit code from main()\r\nInstead of Environment.Exit(exitcode)\r\n\r\nThe reason it wasn't working before was the fact that we were spawning foreground threads.\r\n\r\nIt seems to be the standard.\r\nhttps://github.com/dotnet/cli/blob/21cda4adb6d88d240978e24fcfeb3ebe73f5fdd7/src/dotnet/Program.cs#L30-L83\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3653","RelatedDescription":"Open PR \"[AutoML] Cleaner way to exit the main()\" (#3653)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-09T05:30:34.3933669Z","RunDurationInMilliseconds":924}