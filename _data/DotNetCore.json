{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Entity Framework Core 3.0 Preview 7 and Entity Framework 6.3 Preview 7","PublishedOn":"2019-07-23T17:06:53+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are making new previews of EF Core 3.0 and EF 6.3 available on nuget.org.\n.NET Core 3.0 Preview 7 and ASP.NET Core 3.0 Preview 7 were also made available today.\nWe encourage you to install...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-7-and-entity-framework-6-3-preview-7/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 7","PublishedOn":"2019-07-23T17:00:54+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 7. We&#8217;ve transitioned from creating new features to polishing the release. Expect a singular focus on quality for the remaining preview...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-7/","RawContent":null},{"Title":"Announcing ML.NET 1.2 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-07-17T19:25:46+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are excited to announce ML.NET 1.2 and updates to Model Builder and the CLI. ML.NET is an open-source and cross-platform machine learning framework for .NET developers. ML.NET also includes Model...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-2-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Write Better Code Faster with Roslyn Analyzers","PublishedOn":"2019-07-10T16:40:11+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Roslyn, the .NET compiler platform, helps you catch bugs even before you run your code. One example is Roslyn’s spellcheck analyzer that is built into Visual Studio. Let’s say you are creating a...","Href":"https://devblogs.microsoft.com/dotnet/write-better-code-faster-with-roslyn-analyzers/","RawContent":null},{"Title":".NET Core July 2019 Updates – 2.1.12 and 2.2.6","PublishedOn":"2019-07-09T17:50:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core July 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a...","Href":"https://devblogs.microsoft.com/dotnet/net-core-july-2019/","RawContent":null},{"Title":".NET Framework July 2019 Security and Quality Rollup","PublishedOn":"2019-07-09T17:22:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the July 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update for .NET Framework.\nSecurity\nCVE-2019-1006 – WCF/WIF SAML Token Authentication Bypass...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-july-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"},{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10047192673","Type":"IssuesEvent","CreatedAt":"2019-07-19T16:54:03","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Opened issue \".NET Core master branches have switched to \"5.0\"\" (#118) at dotnet/announcements","RelatedBody":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available."},{"Id":"9971220766","Type":"IssuesEvent","CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Opened issue \"System.Text.Json usability study results\" (#117) at dotnet/announcements","RelatedBody":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304."},{"Id":"9963969636","Type":"IssuesEvent","CreatedAt":"2019-07-08T03:13:39","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Opened issue \"Updates to releases.json (.NET Core release metadata)\" (#116) at dotnet/announcements","RelatedBody":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, msbuild, nuget, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is a partial example of the new array based on the upcoming July update. \r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n  \"sdks\": [\r\n    {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": [\r\n            {\r\n            \"name\": \"\",\r\n            \"rid\": \"\",\r\n            \"url\": \"\",\r\n            \"hash\": \"\"\r\n            }\r\n        ]\r\n    }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the communitiy which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility comprimises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10153365979","Type":"IssuesEvent","CreatedAt":"2019-08-06T04:10:48","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26026","RelatedDescription":"Opened issue \"[Linux][Arm32] update ubuntu 14.04 arm32 queue to ubuntu 16.04\" (#26026) at dotnet/coreclr","RelatedBody":"Currently our outerloop arm32 machines are the older ubuntu 14.04 jetson tk1s. These machines are currently not handling workloads, and it is worth updating to the new tx2 queues."},{"Id":"10153271264","Type":"IssuesEvent","CreatedAt":"2019-08-06T03:42:08","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/26025","RelatedDescription":"Opened issue \"[Linux][Arm] assert currentProcessCpuCount == g_processAffinitySet.Count() in GC/API/GC/KeepAliveNull/KeepAliveNull.sh\" (#26025) at dotnet/coreclr","RelatedBody":"```\r\nGC/API/GC/KeepAliveNull/KeepAliveNull.sh [FAIL]\r\n      \r\n      Assert failure(PID 24052 [0x00005df4], Thread: 24052 [0x5df4]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n          File: /__w/2/s/src/vm/gcenv.os.cpp Line: 114\r\n          Image: /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun\r\n      \r\n      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh: line 252: 24052 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/Reports/GC.API/GC/KeepAliveNull/KeepAliveNull.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun KeepAliveNull.exe ''\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      > set CORE_ROOT=/ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload\r\n      > /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /__w/2/s/bin/tests/Linux.arm.Checked/TestWrappers/GC.API/GC.API.XUnitWrapper.cs(2856,0): at GC_API._GC_KeepAliveNull_KeepAliveNull_._GC_KeepAliveNull_KeepAliveNull_sh()\r\n      Output:\r\n        \r\n        Assert failure(PID 24052 [0x00005df4], Thread: 24052 [0x5df4]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n            File: /__w/2/s/src/vm/gcenv.os.cpp Line: 114\r\n            Image: /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun\r\n        \r\n        /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh: line 252: 24052 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n        \r\n        Return code:      1\r\n        Raw output file:      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/Reports/GC.API/GC/KeepAliveNull/KeepAliveNull.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun KeepAliveNull.exe ''\r\n        Expected: 100\r\n        Actual: 134\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=/ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload\r\n        > /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh\r\n```"},{"Id":"10152875225","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:54:28","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26006","RelatedDescription":"Merged pull request \"Delete some dead code\" (#26006) at dotnet/coreclr","RelatedBody":""},{"Id":"10152857181","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:49:38","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26005","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#26005) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n"},{"Id":"10152686436","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:00:08","Actor":"Maoni0","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26024","RelatedDescription":"Merged pull request \"pinned heap design doc\" (#26024) at dotnet/coreclr","RelatedBody":""},{"Id":"10152684504","Type":"PullRequestEvent","CreatedAt":"2019-08-06T00:59:30","Actor":"Maoni0","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26024","RelatedDescription":"Opened pull request \"pinned heap design doc\" (#26024) at dotnet/coreclr","RelatedBody":""},{"Id":"10152569558","Type":"PullRequestEvent","CreatedAt":"2019-08-06T00:23:25","Actor":"elinor-fung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26023","RelatedDescription":"Opened pull request \"Use Arcade's internal tool restore project for restoring IBCMerge\" (#26023) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10153431369","Type":"PullRequestEvent","CreatedAt":"2019-08-06T04:31:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12148","RelatedDescription":"Opened pull request \"[release/3.0.100-preview8] Update dependencies from aspnet/AspNetCore\" (#12148) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3cd0c0b2-118b-4b45-565e-08d7114adc5e)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190805.7\r\n- **Date Produced**: 8/6/2019 4:30 AM\r\n- **Commit**: 4a42afc5aea63750638e118560d43db04bd9ccc2\r\n- **Branch**: refs/heads/release/3.0-preview8\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19405.7\r\n\r\n[marker]: <> (End:3cd0c0b2-118b-4b45-565e-08d7114adc5e)\r\n\r\n"},{"Id":"10152854369","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:48:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12147","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12147) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/6/2019 1:13 AM\r\n- **Commit**: 4f452f6da9d6aeb389d79432febb160b5aab4eed\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19405.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"},{"Id":"10152731605","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:13:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12147","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12147) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/6/2019 1:13 AM\r\n- **Commit**: 4f452f6da9d6aeb389d79432febb160b5aab4eed\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19405.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10148408284","Type":"PullRequestEvent","CreatedAt":"2019-08-05T13:05:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1398","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1398) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10148399846","Type":"PullRequestEvent","CreatedAt":"2019-08-05T13:04:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1397","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1397) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10148334878","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:55:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1398","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1398) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10148326398","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:54:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1397","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1397) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10148058089","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:15:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1396","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1396) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10148054004","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:14:47","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1395","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1395) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10147992200","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:05:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1396","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1396) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"10147988432","Type":"PullRequestEvent","CreatedAt":"2019-08-05T12:04:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1395","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1395) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10153434680","Type":"IssuesEvent","CreatedAt":"2019-08-06T04:32:08","Actor":"JamesNK","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/40051","RelatedDescription":"Opened issue \"HTTP2: Flakyness when server doesn't completely read request\" (#40051) at dotnet/corefx","RelatedBody":"I have created a repro for an error that sometimes shows up.\r\n\r\nRepro:\r\n1. `git clone https://github.com/JamesNK/grpc-dotnet.git`\r\n2. `git checkout jamesnk/stress-maxsize`\r\n3. `dotnet test test\\FunctionalTests --filter Name~ReceivedMessageExceedsSize_ThrowError`\r\n\r\nLogic in the test is like:\r\n1. Client makes a non-streaming call to the server and sends a large request body\r\n2. Server ends response without reading complete request body\r\n3. Client asserts response\r\n4. Go to 1.\r\n\r\nMultiple threads clients sharing one HttpClient are repeating this in parallel. One thread will not error.\r\n\r\nHttpClient consistently throws this error:\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException : A task was canceled.\r\n  Stack Trace: \r\n    at TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\r\n    at Http2Connection.SendStreamDataAsync(Int32 streamId, ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\r\n    at Http2Stream.SendDataAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\r\n    at HttpContent.CopyToAsyncCore(ValueTask copyTask)\r\n    at Http2Stream.SendRequestBodyAsync(CancellationToken cancellationToken)\r\n    at Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n    at HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n    at RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n    at HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n    at TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber) in TaskExtensions.cs line: 58\r\n    at <<ReceivedMessageExceedsSize_ThrowError>b__1>d.MoveNext() in MaxMessageSizeTests.cs line: 77\r\n    at --- End of stack trace from previous location where exception was thrown ---\r\n    at MaxMessageSizeTests.ReceivedMessageExceedsSize_ThrowError() in MaxMessageSizeTests.cs line: 87\r\n    at GenericAdapter`1.BlockUntilCompleted()\r\n    at NoMessagePumpStrategy.WaitForCompletion(AwaitAdapter awaitable)\r\n    at AsyncToSyncAdapter.Await(Func`1 invoke)\r\n    at TestMethodCommand.RunTestMethod(TestExecutionContext context)\r\n    at TestMethodCommand.Execute(TestExecutionContext context)\r\n    at <>c__DisplayClass1_0.<Execute>b__0()\r\n    at BeforeAndAfterTestCommand.RunTestMethodInThreadAbortSafeZone(TestExecutionContext context, Action action)\r\n```\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview9-013697\r\n Commit:    baac5f4d5c\r\n```\r\n\r\n// @geoffkizer "},{"Id":"10153046009","Type":"IssuesEvent","CreatedAt":"2019-08-06T02:39:43","Actor":"herrozerro","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/40050","RelatedDescription":"Opened issue \"[System.Text.Json]: Recursive property in IEnumerable type results in stackoverflow\" (#40050) at dotnet/corefx","RelatedBody":"Related to #37313\r\n\r\n`void Main()\r\n{\r\n\ttestThing thing = new testThing();\r\n\r\n\tvar s = System.Text.Json.JsonSerializer.Serialize(thing);\r\n}\r\n\r\npublic class testThing\r\n{\r\n\tpublic IEnumerable<testThing> things {get;set;}\r\n}`\r\n\r\nEnvironment: 3.0.100-preview7-012821\r\n\r\nWorks with list, but IEnumerable breaks it."},{"Id":"10153005314","Type":"IssuesEvent","CreatedAt":"2019-08-06T02:28:46","Actor":"BAlbrich","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/40046","RelatedDescription":"Closed issue \"Unable to generate XmlSerializer for netstandard libraries using Microsoft.XmlSerializer.Generator\" (#40046) at dotnet/corefx","RelatedBody":"Steps:\r\n1. Create a new netstandard 2.0 library.\r\n2. Add assemblyref://Microsoft.XmlSerializer.Generator (2.1.0-preview7.19362.9)\r\n3. Build.\r\n\r\nResult:\r\n1>Method 'System.Xml.Serialization.XmlSerializer.GenerateSerializer' was not found. This is likely because you are using an older version of the framework. Please update to .NET Core v2.1 or later.\r\n1>Sgen utility failed to pregenerate serialization code for D:\\Projects.GitHub\\TestXmlSerializer\\TestXmlSerializer\\obj\\Debug\\netstandard2.0\\TestXmlSerializer.dll."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10152831241","Type":"IssuesEvent","CreatedAt":"2019-08-06T01:42:29","Actor":"kendrahavens","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37751","RelatedDescription":"Opened issue \"Change 'Live Code Analysis' text\" (#37751) at dotnet/roslyn","RelatedBody":"The 'Live Code Analysis' task center notification is causing confusion as many users believe any errors/delays occurring in Visual Studio are due to this process. This process is actually several low priority background tasks which are often paused when Visual Studio is executing higher priority tasks.\r\n\r\nThe purpose of the notification was only to acknowledge that Visual Studio often executes a variety of tasks in the background that should not interfere with the user experience, but would be detectable if users are monitoring their Task Manager.\r\n\r\n### Current UI\r\n![image](https://user-images.githubusercontent.com/8293542/62505026-d4459300-b7af-11e9-949e-074f9a5b4e06.png)\r\n\r\n### Proposed change\r\n* Show when this state is paused and waiting on higher priority tasks\r\n* Change title to be more generic so users don't believe \"live analysis\" is the culprit by default when experiencing slow UI.\r\n![image](https://user-images.githubusercontent.com/8293542/62504926-7022cf00-b7af-11e9-99d2-164a0d0f0f76.png)\r\n"},{"Id":"10152815612","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:38:04","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37750","RelatedDescription":"Opened pull request \"Enable EnC tests on Core\" (#37750) at dotnet/roslyn","RelatedBody":""},{"Id":"10152790800","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:30:56","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37739","RelatedDescription":"Merged pull request \"Merge release/dev16.2 to release/dev16.3-preview2\" (#37739) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-to-release/dev16.3-preview2\ngit reset --hard upstream/release/dev16.3-preview2\ngit merge upstream/release/dev16.2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10152788389","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:30:18","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37745","RelatedDescription":"Merged pull request \"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps\" (#37745) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10152787689","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:30:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37746","RelatedDescription":"Merged pull request \"Merge master to features/param-nullchecking\" (#37746) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10152688693","Type":"PullRequestEvent","CreatedAt":"2019-08-06T01:00:44","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37741","RelatedDescription":"Merged pull request \"Merge release/dev16.3-preview2-vs-deps to master-vs-deps\" (#37741) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10152603414","Type":"IssuesEvent","CreatedAt":"2019-08-06T00:33:42","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/37749","RelatedDescription":"Opened issue \"Failed assertions when declaring ref variables in EE\" (#37749) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/62503003-1b7b5600-b7a7-11e9-8943-d17537536d42.png)\r\n\r\n**Steps to Reproduce**:\r\nStep into a method:\r\n\r\n```C#\r\n    static void Main()\r\n    {\r\n        var a = new int[1];\r\n        ref readonly var x = ref F(a);\r\n    }\r\n```\r\n\r\nType \r\n```C#\r\nref readonly var z = ref x;\r\n```\r\n\r\nto Immediate Window.\r\n\r\n**Expected Behavior**:\r\n\r\nNo assert.\r\n\r\n**Actual Behavior**:\r\n\r\n---------------------------\r\nAssertion Failed: Abort=Quit, Retry=Debug, Ignore=Continue\r\n---------------------------\r\nundeclared local Local System.Int32 z\r\n\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.LocalsScanner.CheckDeclared(LocalSymbol local)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.LocalsScanner.VisitPseudoVariable(BoundPseudoVariable node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundPseudoVariable.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitAssignmentOperator(BoundAssignmentOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor)\r\n```"},{"Id":"10152551979","Type":"PullRequestEvent","CreatedAt":"2019-08-06T00:17:58","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/37748","RelatedDescription":"Opened pull request \"Exclude documents we can't change from referenced documents for chang…\" (#37748) at dotnet/roslyn","RelatedBody":"…e namespace\r\n\r\n#37521"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10153051013","Type":"PullRequestEvent","CreatedAt":"2019-08-06T02:41:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7669","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7669) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"10149412157","Type":"PullRequestEvent","CreatedAt":"2019-08-05T15:10:07","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7669","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7669) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10146455203","Type":"PullRequestEvent","CreatedAt":"2019-08-05T08:11:44","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7665","RelatedDescription":"Merged pull request \"Fix stack traces when reflection is disabled\" (#7665) at dotnet/corert","RelatedBody":"This enables stack trace metadata when `IlcDisableReflection == true` and `IlcGenerateStackTraceData == true`. Enabling stack trace metadata had no effect before this change.\r\n\r\nThis also has a side effect of always generating the metadata blob. This is necessary because `ModuleList` tends to ignore modules that don't have the embedded metadata blob (https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/System.Private.TypeLoader/src/Internal/Runtime/TypeLoader/ModuleList.cs#L713-L720). Emitting an empty blob fixes the bug where delegate interop didn't work with reflection disabled."},{"Id":"10146265912","Type":"PullRequestEvent","CreatedAt":"2019-08-05T07:41:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7659","RelatedDescription":"Merged pull request \"Prevent computing bad layout\" (#7659) at dotnet/corert","RelatedBody":"Value type fields that contain GC pointers need to start at pointer boundaries.\r\n\r\nCoreCLR does this check a bit differently (it technically allows unaligned fields, provided the GC pointer inside the valuetype ends up being aligned with respect to the beginning of the type, but in reality, I don't think it's possible to end up in such situation - the layout of the field type itself would end up being invalid).\r\n\r\nFixes one of the CPAOT failures."},{"Id":"10145686190","Type":"PullRequestEvent","CreatedAt":"2019-08-05T05:39:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7668","RelatedDescription":"Merged pull request \"Add link to CoreRT Future issue\" (#7668) at dotnet/corert","RelatedBody":""},{"Id":"10145685464","Type":"PullRequestEvent","CreatedAt":"2019-08-05T05:39:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7668","RelatedDescription":"Opened pull request \"Add link to CoreRT Future issue\" (#7668) at dotnet/corert","RelatedBody":""},{"Id":"10144261872","Type":"PullRequestEvent","CreatedAt":"2019-08-04T19:18:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7666","RelatedDescription":"Merged pull request \"Add a note about `strip` program\" (#7666) at dotnet/corert","RelatedBody":""},{"Id":"10144241977","Type":"PullRequestEvent","CreatedAt":"2019-08-04T19:07:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7667","RelatedDescription":"Opened pull request \"Add a doc on debugging CoreRT programs\" (#7667) at dotnet/corert","RelatedBody":"A couple useful tips."},{"Id":"10144241682","Type":"PullRequestEvent","CreatedAt":"2019-08-04T19:07:43","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7666","RelatedDescription":"Opened pull request \"Add a note about `strip` program\" (#7666) at dotnet/corert","RelatedBody":""},{"Id":"10144241361","Type":"PullRequestEvent","CreatedAt":"2019-08-04T19:07:32","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7665","RelatedDescription":"Opened pull request \"Fix stack traces when reflection is disabled\" (#7665) at dotnet/corert","RelatedBody":"This enables stack trace metadata when `IlcDisableReflection == true` and `IlcGenerateStackTraceData == true`. Enabling stack trace metadata had no effect before this change.\r\n\r\nThis also has a side effect of always generating the metadata blob. This is necessary because `ModuleList` tends to ignore modules that don't have the embedded metadata blob (https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/System.Private.TypeLoader/src/Internal/Runtime/TypeLoader/ModuleList.cs#L713-L720). Emitting an empty blob fixes the bug where delegate interop didn't work with reflection disabled."},{"Id":"10141314577","Type":"IssuesEvent","CreatedAt":"2019-08-03T13:05:03","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7664","RelatedDescription":"Closed issue \"[Question] Clean up milestones\" (#7664) at dotnet/corert","RelatedBody":"Not a biggie, but could older milestones be closed?  See [September](https://github.com/dotnet/corert/milestone/15) and [October](https://github.com/dotnet/corert/milestone/14)."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10153326338","Type":"PullRequestEvent","CreatedAt":"2019-08-06T03:58:52","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3507","RelatedDescription":"Merged pull request \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3507) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190805.07\r\n- **Date Produced**: 8/5/2019 9:13 PM\r\n- **Commit**: d01b2fb7bc6bd4911e157fbd51353059a3ba1a6c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28405-07\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"477159325","IsPullRequest":false,"CreatedAt":"2019-08-06T04:10:48","Actor":"jashook","Number":"26026","RawContent":null,"Title":"[Linux][Arm32] update ubuntu 14.04 arm32 queue to ubuntu 16.04","State":"open","Body":"Currently our outerloop arm32 machines are the older ubuntu 14.04 jetson tk1s. These machines are currently not handling workloads, and it is worth updating to the new tx2 queues.","Url":"https://github.com/dotnet/coreclr/issues/26026","RelatedDescription":"Open issue \"[Linux][Arm32] update ubuntu 14.04 arm32 queue to ubuntu 16.04\" (#26026)"},{"Id":"477153383","IsPullRequest":false,"CreatedAt":"2019-08-06T03:42:08","Actor":"jashook","Number":"26025","RawContent":null,"Title":"[Linux][Arm] assert currentProcessCpuCount == g_processAffinitySet.Count() in GC/API/GC/KeepAliveNull/KeepAliveNull.sh","State":"open","Body":"```\r\nGC/API/GC/KeepAliveNull/KeepAliveNull.sh [FAIL]\r\n      \r\n      Assert failure(PID 24052 [0x00005df4], Thread: 24052 [0x5df4]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n          File: /__w/2/s/src/vm/gcenv.os.cpp Line: 114\r\n          Image: /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun\r\n      \r\n      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh: line 252: 24052 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/Reports/GC.API/GC/KeepAliveNull/KeepAliveNull.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun KeepAliveNull.exe ''\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n      To run the test:\r\n      > set CORE_ROOT=/ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload\r\n      > /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /__w/2/s/bin/tests/Linux.arm.Checked/TestWrappers/GC.API/GC.API.XUnitWrapper.cs(2856,0): at GC_API._GC_KeepAliveNull_KeepAliveNull_._GC_KeepAliveNull_KeepAliveNull_sh()\r\n      Output:\r\n        \r\n        Assert failure(PID 24052 [0x00005df4], Thread: 24052 [0x5df4]): currentProcessCpuCount == g_processAffinitySet.Count()\r\n            File: /__w/2/s/src/vm/gcenv.os.cpp Line: 114\r\n            Image: /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun\r\n        \r\n        /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh: line 252: 24052 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n        \r\n        Return code:      1\r\n        Raw output file:      /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/Reports/GC.API/GC/KeepAliveNull/KeepAliveNull.output.txt\r\n        Raw output:\r\n        BEGIN EXECUTION\r\n        /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload/corerun KeepAliveNull.exe ''\r\n        Expected: 100\r\n        Actual: 134\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        To run the test:\r\n        > set CORE_ROOT=/ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Payload\r\n        > /ssd/dotnetbuild/work/66290456-48d2-448c-ae61-9d5ab09b9d72/Work/ea6de819-2a26-464b-aba9-057e7137059f/Exec/GC/API/GC/KeepAliveNull/KeepAliveNull.sh\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26025","RelatedDescription":"Open issue \"[Linux][Arm] assert currentProcessCpuCount == g_processAffinitySet.Count() in GC/API/GC/KeepAliveNull/KeepAliveNull.sh\" (#26025)"},{"Id":"476895200","IsPullRequest":true,"CreatedAt":"2019-08-06T01:54:27","Actor":"jkotas","Number":"26006","RawContent":null,"Title":"Delete some dead code","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26006","RelatedDescription":"Closed or merged PR \"Delete some dead code\" (#26006)"},{"Id":"476840604","IsPullRequest":true,"CreatedAt":"2019-08-06T01:49:37","Actor":"dotnet-maestro[bot]","Number":"26005","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26005","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#26005)"},{"Id":"477117758","IsPullRequest":true,"CreatedAt":"2019-08-06T01:00:08","Actor":"Maoni0","Number":"26024","RawContent":null,"Title":"pinned heap design doc","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26024","RelatedDescription":"Closed or merged PR \"pinned heap design doc\" (#26024)"},{"Id":"477111146","IsPullRequest":true,"CreatedAt":"2019-08-06T00:23:24","Actor":"elinor-fung","Number":"26023","RawContent":null,"Title":"Use Arcade's internal tool restore project for restoring IBCMerge","State":"open","Body":"With the recent update to a newer version of Arcade, the DefaultVersions.props no longer sets default `RestoreSources` values. Our ibcmerge.csproj was relying on this. We should just use Arcade's system for restoring IBC merge instead.\r\n\r\nThis change only makes the restore go through Arcade. We have more work to do to use Arcade for actually running IBC merge (#24751), but this at least makes the official build stop failing at restoring internal tools.\r\n\r\ncc @dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/26023","RelatedDescription":"Open PR \"Use Arcade's internal tool restore project for restoring IBCMerge\" (#26023)"},{"Id":"477104951","IsPullRequest":false,"CreatedAt":"2019-08-05T23:52:13","Actor":"jakobbotsch","Number":"26022","RawContent":null,"Title":"[RyuJIT] Incorrect frame alignment with simple rsp-based frames","State":"open","Body":"`Foo` in the following throws a null-ref exception because of a SEGFAULT due to `vmovapd` used on an unaligned location:\r\n\r\n```csharp\r\nprivate static int Main()\r\n{\r\n    s_f = default; // no helper call\r\n    Console.WriteLine(((Func<S40, Vector128<int>, long>)Foo)(default, default));\r\n    return 100;\r\n}\r\n\r\nprivate static Vector128<int> s_f;\r\nprivate static long Foo(S40 a, Vector128<int> looksAligned)\r\n{\r\n    s_f = looksAligned;\r\n    return 0;\r\n}\r\n\r\nprivate struct S40\r\n{\r\n    public long A, B, C, D, E;\r\n}\r\n```\r\nThe code generated is:\r\n```asm\r\n; Assembly listing for method test:Foo(struct,struct):long\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;* V00 arg0         [V00    ] (  0,  0   )  struct (40) zero-ref    do-not-enreg[S]\r\n;  V01 arg1         [V01,T00] (  1,  1   )  simd16  ->  [rsp+0x30]  \r\n;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   \"OutgoingArgSpace\"\r\n;\r\n; Lcl frame size = 0\r\n\r\nG_M9171_IG01:\r\n       C5F877               vzeroupper \r\n       6690                 nop      \r\n\r\nG_M9171_IG02:\r\n       48B8F80B006C577F0000 mov      rax, 0x7F576C000BF8\r\n       488B00               mov      rax, gword ptr [rax]\r\n       C5F928442430         vmovapd  xmm0, xmmword ptr [rsp+30H] // rsp+30H is unaligned\r\n       C5F9114008           vmovupd  xmmword ptr [rax+8], xmm0\r\n       33C0                 xor      rax, rax\r\n\r\nG_M9171_IG03:\r\n       C3                   ret      \r\n\r\n; Total bytes of code 32, prolog size 5 for method test:Foo(struct,struct):long\r\n; ============================================================\r\n```\r\n\r\ncc @BruceForstall @CarolEidt ","Url":"https://github.com/dotnet/coreclr/issues/26022","RelatedDescription":"Open issue \"[RyuJIT] Incorrect frame alignment with simple rsp-based frames\" (#26022)"},{"Id":"477100086","IsPullRequest":true,"CreatedAt":"2019-08-05T23:29:12","Actor":"elinor-fung","Number":"26021","RawContent":null,"Title":"Prefix error messages in init-tools to make them logging commands in Azure DevOps","State":"open","Body":"Prefix error messages in init-tools to make logging commands in Azure DevOps (such that they show up as errors in the timeline and telemetry)","Url":"https://github.com/dotnet/coreclr/pull/26021","RelatedDescription":"Open PR \"Prefix error messages in init-tools to make them logging commands in Azure DevOps\" (#26021)"},{"Id":"477098280","IsPullRequest":true,"CreatedAt":"2019-08-05T23:20:53","Actor":"AaronRobinsonMSFT","Number":"26020","RawContent":null,"Title":"Add support for servicing (post-build.yml)","State":"open","Body":"Blocked by https://github.com/dotnet/arcade/pull/3572\r\n\r\ncc @JohnTortugo @mmitche \r\n\r\n@dotnet/coreclr-infra ","Url":"https://github.com/dotnet/coreclr/pull/26020","RelatedDescription":"Open PR \"Add support for servicing (post-build.yml)\" (#26020)"},{"Id":"477094529","IsPullRequest":true,"CreatedAt":"2019-08-05T23:05:09","Actor":"jashook","Number":"26019","RawContent":null,"Title":"Disable test based on repeated failures","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26019","RelatedDescription":"Open PR \"Disable test based on repeated failures\" (#26019)"},{"Id":"477093621","IsPullRequest":true,"CreatedAt":"2019-08-05T23:01:41","Actor":"jashook","Number":"26018","RawContent":null,"Title":"Superpmi mch merge","State":"open","Body":"Another requirement to use chem.\r\n\r\n/cc @dotnet/jit-contrib. ","Url":"https://github.com/dotnet/coreclr/pull/26018","RelatedDescription":"Open PR \"Superpmi mch merge\" (#26018)"},{"Id":"477078335","IsPullRequest":true,"CreatedAt":"2019-08-05T22:04:10","Actor":"tannergooding","Number":"26017","RawContent":null,"Title":"Updating Math.Round and MathF.Round to be IEEE compliant so that the intrinsic and managed form are deterministic.","State":"open","Body":"### Description\r\n\r\nThe managed implementations of the Math.Round functions were not IEEE compliant and would return a different result between Debug and Release mode. In .NET Core 3 with the tiered JIT support they now return a different result for the first 29 calls of the function before the JIT recognizes them as \"hot\" and they are rejitted.\r\n\r\n### Customer Impact\r\n\r\nCustomers calling `Math.Round` or `MathF.Round` may get different behavior between two consecutive calls to the functions.\r\n\r\n### Regression?\r\n\r\nYes, as per the description.\r\n\r\n### Risk\r\n\r\nLow. This is pulling in a port of a known good implementation from the BSD SoftFloat library. It was additionally validated that all 4 billion inputs for the single-precision input range are returning the correct values as compared to the intrinsic forms of these APIs (which compile down to the `roundss` and `roundsd` instructions).","Url":"https://github.com/dotnet/coreclr/pull/26017","RelatedDescription":"Open PR \"Updating Math.Round and MathF.Round to be IEEE compliant so that the intrinsic and managed form are deterministic.\" (#26017)"},{"Id":"477064010","IsPullRequest":false,"CreatedAt":"2019-08-05T21:21:56","Actor":"tmat","Number":"26016","RawContent":null,"Title":"Edit and Continue regressed in 3.0","State":"open","Body":"Repro:\r\n\r\n1. Create a simple console app that targets `netcoreapp3.0`:\r\n\r\n```C#\r\nclass Program\r\n{\r\n  static void Main(string[] args)\r\n  {\r\n      Console.WriteLine(\"Hello World!\"); // Add a breakpoint\r\n  }\r\n}\r\n```\r\n\r\n2. Place breakpoint.\r\n3. Start debugging and break at specific line;\r\n4. Add a new method to the class:\r\n\r\n```C#\r\nstatic void Foo()\r\n{ \r\n}\r\n```\r\n\r\n5. EnC will fail and the debug session will stop.\r\n\r\nThe error occurs in the runtime while applying the change.\r\n\r\nThe same repro works fine when targeting .NET Framework (net472, for example). \r\nI have also tried .NET Core 2.1.12 and it works there as well.","Url":"https://github.com/dotnet/coreclr/issues/26016","RelatedDescription":"Open issue \"Edit and Continue regressed in 3.0\" (#26016)"},{"Id":"477062216","IsPullRequest":true,"CreatedAt":"2019-08-05T21:16:59","Actor":"vitek-karas","Number":"26015","RawContent":null,"Title":"Binder minor cleanup","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/26015","RelatedDescription":"Open PR \"Binder minor cleanup\" (#26015)"},{"Id":"477059028","IsPullRequest":false,"CreatedAt":"2019-08-05T21:14:47","Actor":"iskiselev","Number":"26014","RawContent":null,"Title":"Prefer32Bit is ignored","State":"closed","Body":"Project file setting <Prefer32Bit>true</Prefer32Bit> is ignored on CoreCLR 3.0 it produce x64 executable. Technically, produced executable is only entry point and is unmanaged - so corflags will even not show anything. But this flag option is still visible in VisualStudio, which mislead.\r\n\r\nI'm not sure where it should be reported - here, in core-setup, sdk or Visual Studio.","Url":"https://github.com/dotnet/coreclr/issues/26014","RelatedDescription":"Closed issue \"Prefer32Bit is ignored\" (#26014)"},{"Id":"477055823","IsPullRequest":false,"CreatedAt":"2019-08-05T20:59:14","Actor":"jashook","Number":"26013","RawContent":null,"Title":"[Linux Musl][Arm64] Failure to submit to helix","State":"open","Body":"```\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error : Work item Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299 in job f47973ed-9ced-40ec-90a2-9f066eaaa8fb has failed, logs available here: https://helix.dot.net/api/2019-06-17/jobs/f47973ed-9ced-40ec-90a2-9f066eaaa8fb/workitems/Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299/console. [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n##[error].packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error : Work item Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299 in job f47973ed-9ced-40ec-90a2-9f066eaaa8fb has failed, logs available here: https://helix.dot.net/api/2019-06-17/jobs/f47973ed-9ced-40ec-90a2-9f066eaaa8fb/workitems/Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299/console.\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error : InvalidOperationException: Sequence contains no elements [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at System.Linq.ThrowHelper.ThrowNoElementsException() [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at System.Linq.Enumerable.First[TSource](IEnumerable`1 source) [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.CreateFakeTestResultAsync(HttpClient client, String testRunId, String workItemFriendlyName) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 173 [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.CheckHelixJobAsync(HttpClient client, String jobName, String testRunId, CancellationToken cancellationToken) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 59 [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.ExecuteCoreAsync(HttpClient client, CancellationToken cancellationToken) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 33 [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :    at Microsoft.DotNet.Helix.AzureDevOps.AzureDevOpsHelixTask.Execute() in /_/src/Microsoft.DotNet.Helix/Sdk/AzureDevOpsHelixTask.cs:line 76 [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n/__w/2/s/.packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error :  [/__w/2/s/tests/helixpublishwitharcade.proj]\r\n##[error].packages/microsoft.dotnet.helix.sdk/2.0.0-beta.19402.16/tools/Microsoft.DotNet.Helix.Sdk.MultiQueue.targets(67,5): error : InvalidOperationException: Sequence contains no elements\r\n   at System.Linq.ThrowHelper.ThrowNoElementsException()\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.CreateFakeTestResultAsync(HttpClient client, String testRunId, String workItemFriendlyName) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 173\r\n   at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.CheckHelixJobAsync(HttpClient client, String jobName, String testRunId, CancellationToken cancellationToken) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 59\r\n   at Microsoft.DotNet.Helix.AzureDevOps.CheckHelixJobStatus.ExecuteCoreAsync(HttpClient client, CancellationToken cancellationToken) in /_/src/Microsoft.DotNet.Helix/Sdk/CheckHelixJobStatus.cs:line 33\r\n   at Microsoft.DotNet.Helix.AzureDevOps.AzureDevOpsHelixTask.Execute() in /_/src/Microsoft.DotNet.Helix/Sdk/AzureDevOpsHelixTask.cs:line 76\r\n\r\n  Stopping Azure Pipelines Test Run Linux arm64 Checked @ (Alpine.38.Arm64.Open)Ubuntu.1604.Arm64.Docker.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.8-helix-arm64v8-a45aeeb-20190620184035\r\n\r\nBuild FAILED.\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=295340&view=logs&jobId=c4f05322-0119-5c43-60a1-eb927f127ca4","Url":"https://github.com/dotnet/coreclr/issues/26013","RelatedDescription":"Open issue \"[Linux Musl][Arm64] Failure to submit to helix\" (#26013)"},{"Id":"477047337","IsPullRequest":false,"CreatedAt":"2019-08-05T20:38:08","Actor":"jashook","Number":"26012","RawContent":null,"Title":"[OSX] Failure to initialize build tools.","State":"open","Body":"build-test.sh still unfortunately uses build tools. On OSX strangely we are intermitedenly seeing:\r\n\r\n```\r\nUsing RID osx-x64 for BuildTools native tools\r\nInitializing BuildTools...\r\nERROR: An error occurred when trying to initialize the tools.\r\nPlease check the detailed log that follows.\r\nRunning: /Users/vsts/agent/2.155.1/work/1/s/init-tools.sh\r\nRunning: /Users/vsts/agent/2.155.1/work/1/s/.dotnet/dotnet restore \"/Users/vsts/agent/2.155.1/work/1/s/init-tools.msbuild\" --no-cache --packages /Users/vsts/agent/2.155.1/work/1/s/.packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=3.0.0-preview4-04022-01 /p:ToolsDir=/Users/vsts/agent/2.155.1/work/1/s/Tools\r\n```\r\n\r\nSee: https://dev.azure.com/dnceng/public/_build/results?buildId=295344","Url":"https://github.com/dotnet/coreclr/issues/26012","RelatedDescription":"Open issue \"[OSX] Failure to initialize build tools.\" (#26012)"},{"Id":"477032794","IsPullRequest":false,"CreatedAt":"2019-08-05T20:02:12","Actor":"iskiselev","Number":"26011","RawContent":null,"Title":"Big stack usage on exception handling win-x64","State":"open","Body":"On Windows x64 CoreCLR use 9 KiB of stack space per each frame that has catch block that will rethrow exception up to frame that will finally handle exception. On x86 stack space is not used for the same pattern at all. Per our test it is not used on Linux-X64 too.\r\n.Net Framework x64 is also affected by the same problem (it use 8 KiB for ,Net Framework 4.7.2 and more for 3.5.).\r\nHere is test sample:\r\n```c#\r\nusing System;\r\n\r\nnamespace teststackoverflow\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            if (args.Length != 1 || !int.TryParse(args[0], out var maxRecursion))\r\n            {\r\n                maxRecursion = 250;\r\n            }\r\n            try\r\n            {\r\n\r\n                WithExceptionRecurse(1, maxRecursion);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(\"WithExceptionRecurse thrown\");\r\n            }\r\n        }\r\n\r\n        static void WithExceptionRecurse(int count, int maxRecursion)\r\n        {\r\n            try\r\n            {\r\n                Console.WriteLine(\"Frame {0}\", count);\r\n                if (count > maxRecursion)\r\n                {\r\n                    Console.WriteLine(\"Frame {0} Throws\", count);\r\n                    throw new Exception(count.ToString());\r\n                }\r\n                WithExceptionRecurse(count+1, maxRecursion);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(\"Frame Exception {0}\", count);\r\n                //RecursionTest.WriteStack();\r\n\r\n                throw;\r\n            }\r\n        }\r\n    }\r\n\r\n    /*internal class RecursionTest\r\n    {\r\n        [DllImport(\"kernel32.dll\")]\r\n        static extern void GetCurrentThreadStackLimits(out UIntPtr lowLimit, out UIntPtr highLimit);\r\n\r\n        public static unsafe void WriteStack()\r\n        {\r\n            UIntPtr low;\r\n            UIntPtr high;\r\n\r\n            GetCurrentThreadStackLimits(out low, out high);\r\n            var size = ((long) high - (long) low) / 1024; // in KB\r\n            ulong current = (ulong) (UIntPtr) (void*) &size;\r\n            var left = ((long) current - (long) low) / 1024; // in KB\r\n\r\n\r\n            bool isSufficientStack = false;\r\n            try\r\n            {\r\n                RuntimeHelpers.EnsureSufficientExecutionStack();\r\n                isSufficientStack = true;\r\n            }\r\n            catch (Exception)\r\n            {\r\n            }\r\n\r\n            Console.WriteLine($\"Stack: size={size}, left={left}, isSufficientStack={isSufficientStack}\");\r\n        }\r\n    }*/\r\n}\r\n```\r\n\r\nIf this app will be published with `dotnet publish -c release -r win-x86 --self-contained`, that can be called without StackOverfolowExcpetion with deep recursions, i.e 250.\r\nBut if it was published with `dotnet publish -c release -r win-x64 --self-contained`, it will fail with StackOverfolowExcpetion with only recursion layer 160.\r\n\r\nIt is even bigger problem on .Net Framework hosted inside w3wp, as it allocates only 512 KiB of stack - so it is reproducible with only 51 recursion there. Looks like some work have been done to provide a way to override stack size for w3wp in .Net Core hosting scenarios (#21450), which may help in hosted scenarios on CoreCLR.\r\n\r\nI've added commented diagnostic code that should show available stack space (if it  will be uncommented).\r\n\r\nIs it possible to update Win-x64 codegen to not use stack space at all (same as x86) or at least use smaller amount of stack space in recursive throw scenarios?","Url":"https://github.com/dotnet/coreclr/issues/26011","RelatedDescription":"Open issue \"Big stack usage on exception handling win-x64\" (#26011)"},{"Id":"477010722","IsPullRequest":false,"CreatedAt":"2019-08-05T19:02:50","Actor":"stephentoub","Number":"26010","RawContent":null,"Title":"STATUS_STACK_BUFFER_OVERRUN in corefx consuming updated coreclr","State":"open","Body":"https://github.com/dotnet/corefx/pull/39995#issuecomment-518300413\r\n![image](https://user-images.githubusercontent.com/2642209/62488304-f6c8b380-b791-11e9-940f-a542148ea2f2.png)\r\n\r\nFrom @jkotas:\r\n\"This is most likely caused by @janvorli change dotnet/coreclr#25795 . @janvorli Could you please take a look?\"","Url":"https://github.com/dotnet/coreclr/issues/26010","RelatedDescription":"Open issue \"STATUS_STACK_BUFFER_OVERRUN in corefx consuming updated coreclr\" (#26010)"},{"Id":"476547625","IsPullRequest":true,"CreatedAt":"2019-08-05T18:21:44","Actor":"dotnet-maestro[bot]","Number":"25998","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19403.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25998","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25998)"},{"Id":"476991589","IsPullRequest":true,"CreatedAt":"2019-08-05T18:13:06","Actor":"CarolEidt","Number":"26009","RawContent":null,"Title":"Repro for #25468","State":"open","Body":"Also some additional dump & debugging support.","Url":"https://github.com/dotnet/coreclr/pull/26009","RelatedDescription":"Open PR \"Repro for #25468\" (#26009)"},{"Id":"476968606","IsPullRequest":false,"CreatedAt":"2019-08-05T17:13:24","Actor":"bclothier","Number":"26008","RawContent":null,"Title":"AV due to non-compliant type infos passed to CLR","State":"open","Body":"When using `CImportTlb` to build a CLR type from a type library, we encountered a situation where non-compliant library can cause an AV in CLR, specifically this line:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/4cf8a6b082d9bb1789facd996d8265d3908757b2/src/md/enc/imptlb.cpp#L4602\r\n\r\nSee [this comment](\r\nhttps://github.com/rubberduck-vba/Rubberduck/pull/4706#issuecomment-517883758) for details. Basically, the type infos we receive incorrectly have `Vars` filled for a `TKIND_MODULE`, and those `VARDESC`s have flags of `VAR_STATIC`. Some of those do have valid pointers but others won't and thus `lpvarValue` is zero. So resolving the `vt` member causes an AV. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/26008","RelatedDescription":"Open issue \"AV due to non-compliant type infos passed to CLR\" (#26008)"},{"Id":"476914265","IsPullRequest":true,"CreatedAt":"2019-08-05T15:09:25","Actor":"Dotnet-GitSync-Bot","Number":"26007","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/26007","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx\" (#26007)"},{"Id":"476447741","IsPullRequest":true,"CreatedAt":"2019-08-05T14:42:01","Actor":"dotnet-maestro[bot]","Number":"25997","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190802.8\r\n- **Date Produced**: 8/3/2019 4:15 AM\r\n- **Commit**: 18e5616f62e7ef3438749cc54170cc3bc74138df\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19402.8\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25997","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#25997)"},{"Id":"476830904","IsPullRequest":true,"CreatedAt":"2019-08-05T14:40:40","Actor":"dotnet-maestro[bot]","Number":"26004","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19404.2\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/26004","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#26004)"},{"Id":"476611074","IsPullRequest":true,"CreatedAt":"2019-08-05T07:08:31","Actor":"KodrAus","Number":"25999","RawContent":null,"Title":"Use a platform-agnostic name for coredistools lib","State":"closed","Body":"Hi! :wave:\r\n\r\nI've been playing with `R2RDump` on OSX and ran into an issue with the expected native library name being Windows specific.\r\n\r\nThe `coredistools` library that's actually published doesn't appear to work on non-Windows platforms yet (looks like it's old), but if I build `coredistools` locally in my OSX environment then I can use it successfully with `R2RDump`.","Url":"https://github.com/dotnet/coreclr/pull/25999","RelatedDescription":"Closed or merged PR \"Use a platform-agnostic name for coredistools lib\" (#25999)"},{"Id":"476620859","IsPullRequest":false,"CreatedAt":"2019-08-05T01:41:52","Actor":"VincentBu","Number":"26003","RawContent":null,"Title":"Test failed: JIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190803.1/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_~2F_CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_cmd\r\n\r\n**Failed tests:**\r\nJIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_cmd\r\n\r\n**Log:**\r\n```\r\nProcess terminated. Assertion failed.\r\nCheck the arguments in the caller!\r\n   at System.Collections.Generic.ArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)\r\n   at System.Collections.Generic.List`1.Sort(Int32 index, Int32 count, IComparer`1 comparer)\r\n   at System.Text.RegularExpressions.RegexCharClass.Canonicalize() in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCharClass.cs:line 1096\r\n   at System.Text.RegularExpressions.RegexCharClass.ToStringClass() in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCharClass.cs:line 1033\r\n   at System.Text.RegularExpressions.RegexFCD.FirstChars(RegexTree t) in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexFCD.cs:line 69\r\n   at System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree(RegexTree tree) in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexWriter.cs:line 136\r\n   at System.Text.RegularExpressions.RegexWriter.Write(RegexTree tree) in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexWriter.cs:line 56\r\n   at System.Text.RegularExpressions.Regex..ctor(String pattern, RegexOptions options, TimeSpan matchTimeout, Boolean addToCache) in /_/src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs:line 128\r\n   at BenchmarksGame.RegexRedux_1.Bench(TextReader inputReader, Boolean verbose)\r\n   at BenchmarksGame.RegexRedux_1.Main(String[] args)\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Work\\\\041a1baf-da71-47a6-8868-d43318676cfa\\\\Exec\\\\JIT\\\\Performance\\\\Reports\\\\JIT.Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-1\\\\regex-redux-1.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\\\\corerun.exe\\\" regex-redux-1.exe \r\nExpected: 100\r\nActual: -2146232797\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Work\\\\041a1baf-da71-47a6-8868-d43318676cfa\\\\Exec\\\\JIT\\\\Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-1\\\\regex-redux-1.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26003","RelatedDescription":"Open issue \"Test failed: JIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_._CodeQuality_BenchmarksGame_regex_redux_regex_redux_1_regex_redux_1_cmd\" (#26003)"},{"Id":"476620179","IsPullRequest":false,"CreatedAt":"2019-08-05T01:37:16","Actor":"VincentBu","Number":"26002","RawContent":null,"Title":"Test failed: managed_Compilation._Compilation_Compilation_._Compilation_Compilation_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190803.1/workItem/PayloadGroup0/analysis/xunit/managed_Compilation._Compilation_Compilation_~2F_Compilation_Compilation_cmd\r\n\r\n**Failed tests:**\r\nmanaged_Compilation._Compilation_Compilation_._Compilation_Compilation_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 4968 [0x00001368], Thread: 8048 [0x1f70]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GetCLRRuntimeHost + 0x59B650 (0x00007fff`c738b9c0)\r\n<no module>! <no symbol> + 0x0 (0x00007fff`6a09084c)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`0022c778)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`0022c780)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`0022c780)\r\n<no module>! <no symbol> + 0x0 (0x0000004a`d6b7cd90)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`0022c780)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`0022c778)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`00190310)\r\nCORECLR! GetCLRRuntimeHost + 0x59BA66 (0x00007fff`c738bdd6)\r\n<no module>! <no symbol> + 0x0 (0x00007fff`6a0904b7)\r\n<no module>! <no symbol> + 0x0 (0x000001bd`00161fa0)\r\n<no module>! <no symbol> + 0x0 (0x0000004a`d6b7cdb8)\r\n<no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n<no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n-----\r\n.AV on tid=0x1f70 (8048), cxr=0000004AD6B7C580, exr=0000004AD6B7CA70\r\nFAILED: false\r\n\r\nCORECLR! coreclr_shutdown_2 + 0xEB34 (0x00007fff`c6d8dca4)\r\nCORECLR! GetCLRRuntimeHost + 0x13030A (0x00007fff`c6f2067a)\r\nCORECLR! GetCLRRuntimeHost + 0x12FD62 (0x00007fff`c6f200d2)\r\nCORECLR! GetCLRRuntimeHost + 0x12FCD6 (0x00007fff`c6f20046)\r\nCORECLR! GetCLRRuntimeHost + 0x130563 (0x00007fff`c6f208d3)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007fff`f2fa5e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007fff`f2f7fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007fff`f2fe96fa)\r\nCORECLR! GetCLRRuntimeHost + 0x59B650 (0x00007fff`c738b9c0)\r\n<no module>! <no symbol> + 0x0 (0x00007fff`6a09084c)\r\n    File: f:\\\\workspace\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\excep.cpp Line: 7639\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Work\\\\2baf6f54-90c9-4727-8e54-e158cd568059\\\\Exec\\\\managed\\\\Compilation\\\\Reports\\\\managed.Compilation\\\\Compilation\\\\Compilation.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\\\\corerun.exe\\\" Compilation.exe \r\nStarting the test\r\nUsing reference to: C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\\\\System.Private.CoreLib.dll\r\nTest compiled\r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\4a24df55-6bc0-4420-b77f-02b8a2f12bf9\\\\Work\\\\2baf6f54-90c9-4727-8e54-e158cd568059\\\\Exec\\\\managed\\\\Compilation\\\\Compilation\\\\Compilation.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26002","RelatedDescription":"Open issue \"Test failed: managed_Compilation._Compilation_Compilation_._Compilation_Compilation_cmd\" (#26002)"},{"Id":"476618283","IsPullRequest":false,"CreatedAt":"2019-08-05T01:23:41","Actor":"VincentBu","Number":"26001","RawContent":null,"Title":"Test failed: Interop_COM._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_cmd","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190803.1/workItem/Interop/analysis/xunit/Interop_COM._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_~2F_NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_cmd\r\n\r\n**Failed tests:**\r\nInterop_COM._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 2784 [0x00000ae0], Thread: 648 [0x0288]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GetCLRRuntimeHost + 0x12503D (0x00007ffe`684c53ad)\r\nCORECLR! GetCLRRuntimeHost + 0xD3BE3 (0x00007ffe`68473f53)\r\nCORECLR! GetCLRRuntimeHost + 0xD5A0A (0x00007ffe`68475d7a)\r\nCORECLR! GetCLRRuntimeHost + 0xD867D (0x00007ffe`684789ed)\r\nCORECLR! GetCLRRuntimeHost + 0xD8488 (0x00007ffe`684787f8)\r\nCORECLR! GetCLRRuntimeHost + 0x80B35D (0x00007ffe`68bab6cd)\r\nCORECLR! GetCLRRuntimeHost + 0x809F26 (0x00007ffe`68baa296)\r\nCORECLR! GetCLRRuntimeHost + 0x79E84F (0x00007ffe`68b3ebbf)\r\nCORECLR! GetCLRRuntimeHost + 0x7969F0 (0x00007ffe`68b36d60)\r\nCORECLR! GetCLRRuntimeHost + 0x7966A0 (0x00007ffe`68b36a10)\r\nCORECLR! GetCLRRuntimeHost + 0x7828C9 (0x00007ffe`68b22c39)\r\nCORECLR! GetCLRRuntimeHost + 0x7825E6 (0x00007ffe`68b22956)\r\nCORECLR! GetCLRRuntimeHost + 0x7852B1 (0x00007ffe`68b25621)\r\nCORECLR! GetCLRRuntimeHost + 0x59BE30 (0x00007ffe`6893c1a0)\r\nCORECLR! GetCLRRuntimeHost + 0x1715B2 (0x00007ffe`68511922)\r\nCORECLR! GetCLRRuntimeHost + 0x59B4B6 (0x00007ffe`6893b826)\r\n<no module>! <no symbol> + 0x0 (0x00007ffe`091d0d12)\r\n<no module>! <no symbol> + 0x0 (0x00000000`00000004)\r\nCORECLR! GetCLRRuntimeHost + 0x32D3D6 (0x00007ffe`686cd746)\r\n-----\r\n.AV on tid=0x288 (648), cxr=0000004F089F6580, exr=0000004F089F6A70\r\nFAILED: false\r\n\r\nCORECLR! coreclr_shutdown_2 + 0xEB34 (0x00007ffe`6833dca4)\r\nCORECLR! GetCLRRuntimeHost + 0x13030A (0x00007ffe`684d067a)\r\nCORECLR! GetCLRRuntimeHost + 0x12FD62 (0x00007ffe`684d00d2)\r\nCORECLR! GetCLRRuntimeHost + 0x12FCD6 (0x00007ffe`684d0046)\r\nCORECLR! GetCLRRuntimeHost + 0x130563 (0x00007ffe`684d08d3)\r\nNTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffe`92035e90)\r\nNTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffe`9200fa1b)\r\nNTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffe`920796fa)\r\nCORECLR! GetCLRRuntimeHost + 0x12503D (0x00007ffe`684c53ad)\r\nCORECLR! GetCLRRuntimeHost + 0xD3BE3 (0x00007ffe`68473f53)\r\n    File: f:\\\\workspace.3\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\excep.cpp Line: 7639\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\eee83513-d80e-4433-bee8-a2dba2bf27da\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\eee83513-d80e-4433-bee8-a2dba2bf27da\\\\Work\\\\8d7ab4df-4d32-43c4-95a2-18a1bb397e87\\\\Exec\\\\Interop\\\\COM\\\\Reports\\\\Interop.COM\\\\NETClients\\\\IDispatch\\\\NETClientIDispatch\\\\NETClientIDispatch.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\eee83513-d80e-4433-bee8-a2dba2bf27da\\\\Payload\\\\corerun.exe\\\" NETClientIDispatch.exe \r\nCalling DoubleNumeric_ReturnByRef ...\r\nCall to DoubleNumeric_ReturnByRef complete\r\nCalling Add_Float_ReturnAndUpdateByRef ...\r\nCall to Add_Float_ReturnAndUpdateByRef complete: 0.1 + 0.2 = 0.3; 0.3 == 0.3\r\nCalling Add_Double_ReturnAndUpdateByRef ...\r\nCall to Add_Double_ReturnAndUpdateByRef complete: 0.1 + 0.2 = 0.30000000000000004; 0.30000000000000004 == 0.30000000000000004\r\nCalling TriggerException with Disp 127...\r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\eee83513-d80e-4433-bee8-a2dba2bf27da\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\eee83513-d80e-4433-bee8-a2dba2bf27da\\\\Work\\\\8d7ab4df-4d32-43c4-95a2-18a1bb397e87\\\\Exec\\\\Interop\\\\COM\\\\NETClients\\\\IDispatch\\\\NETClientIDispatch\\\\NETClientIDispatch.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/26001","RelatedDescription":"Open issue \"Test failed: Interop_COM._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_._NETClients_IDispatch_NETClientIDispatch_NETClientIDispatch_cmd\" (#26001)"},{"Id":"476611332","IsPullRequest":true,"CreatedAt":"2019-08-05T00:26:28","Actor":"EgorBo","Number":"26000","RawContent":null,"Title":"JIT: Optimize \"constant_string\".Length","State":"open","Body":"Replace `\"Hello\".Length` with just `5`. Or \r\n\r\n. See https://github.com/dotnet/coreclr/issues/3633\r\n\r\n```csharp\r\nstatic int Test()\r\n{\r\n   return \"Hello\".Length;\r\n}\r\n```\r\nBefore:\r\n```asm\r\n; Method ConsoleApp177.Program:Test():int\r\nG_M38358_IG01:\r\nG_M38358_IG02:\r\n       mov      rax, 0xD1FFAB1E\r\n       mov      rax, gword ptr [rax]\r\n       mov      eax, dword ptr [rax+8]\r\nG_M38358_IG03:\r\n       ret      \r\n; Total bytes of code: 17\r\n```\r\nAfter:\r\n```asm\r\n; Method ConsoleApp177.Program:Test():int\r\nG_M38358_IG01:\r\nG_M38358_IG02:\r\n       mov      eax, 5\r\nG_M38358_IG03:\r\n       ret      \r\n; Total bytes of code: 6\r\n```\r\n\r\nMorph:\r\n```\r\n    *  RETURN    int   \r\n    \\--*  ARR_LENGTH int   \r\n        \\--*  CNS_STR   ref   <string constant>\r\n\r\n    ↓ ↓\r\n\r\n    *  RETURN    int   \r\n    \\--*  CNS_INT   int    5\r\n```\r\n\r\nAlso, according to jit-diff (see below) it improves things like:\r\n```csharp\r\nSystem.IO.Path:ChangeExtension(\"..\");\r\nSystem.IO.Path:GetFullPath(\"..\");\r\nSystem.Byte:ToString(\"X2\");\r\nSystem.Convert:ToBase64String(\"..\");\r\nSystem.DateTimeParse:ParseByFormat(\"..\");\r\nSystem.Enum:ValueToHexString(\"..\");\r\n...\r\n```","Url":"https://github.com/dotnet/coreclr/pull/26000","RelatedDescription":"Open PR \"JIT: Optimize \"constant_string\".Length\" (#26000)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"477163721","IsPullRequest":true,"CreatedAt":"2019-08-06T04:31:05","Actor":"dotnet-maestro[bot]","Number":"12148","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3cd0c0b2-118b-4b45-565e-08d7114adc5e)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190805.7\r\n- **Date Produced**: 8/6/2019 4:30 AM\r\n- **Commit**: 4a42afc5aea63750638e118560d43db04bd9ccc2\r\n- **Branch**: refs/heads/release/3.0-preview8\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19405.7\r\n\r\n[marker]: <> (End:3cd0c0b2-118b-4b45-565e-08d7114adc5e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12148","RelatedDescription":"Open PR \"[release/3.0.100-preview8] Update dependencies from aspnet/AspNetCore\" (#12148)"},{"Id":"477120500","IsPullRequest":true,"CreatedAt":"2019-08-06T01:48:52","Actor":"dotnet-maestro[bot]","Number":"12147","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/6/2019 1:13 AM\r\n- **Commit**: 4f452f6da9d6aeb389d79432febb160b5aab4eed\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview9.19405.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12147","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12147)"},{"Id":"477091432","IsPullRequest":true,"CreatedAt":"2019-08-05T23:27:37","Actor":"dotnet-maestro[bot]","Number":"12146","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190805.4\r\n- **Date Produced**: 8/5/2019 10:51 PM\r\n- **Commit**: 397f924e8da45975d38f5d2c2a1e097399365eba\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19405.4\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12146","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12146)"},{"Id":"477061010","IsPullRequest":true,"CreatedAt":"2019-08-05T22:27:43","Actor":"dotnet-maestro[bot]","Number":"12145","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1323e428-028e-4f02-070d-08d7114b0b3e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190805.07\r\n- **Date Produced**: 8/5/2019 9:13 PM\r\n- **Commit**: d01b2fb7bc6bd4911e157fbd51353059a3ba1a6c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-28405-07\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28405-07\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.0-preview8-28405-07\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.0-preview8-28405-07\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.0-preview8-28405-07\r\n\r\n[marker]: <> (End:1323e428-028e-4f02-070d-08d7114b0b3e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12145","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#12145)"},{"Id":"476825991","IsPullRequest":true,"CreatedAt":"2019-08-05T16:29:03","Actor":"dotnet-maestro[bot]","Number":"12143","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:51 PM\r\n- **Commit**: 3717c89af67bc055ad07599cddf08330a7878f32\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12143","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12143)"},{"Id":"476822509","IsPullRequest":true,"CreatedAt":"2019-08-05T16:27:50","Actor":"dotnet-maestro[bot]","Number":"12140","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12140","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12140)"},{"Id":"476928807","IsPullRequest":true,"CreatedAt":"2019-08-05T16:08:22","Actor":"dotnet-maestro[bot]","Number":"12144","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190805.1\r\n- **Date Produced**: 8/5/2019 3:37 PM\r\n- **Commit**: 2ff6a5c0f8b2905e42d8bb6ff70e53d3f056f6ef\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19405.1\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12144","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12144)"},{"Id":"476367914","IsPullRequest":false,"CreatedAt":"2019-08-05T16:04:19","Actor":"elvisFabian","Number":"12124","RawContent":null,"Title":"dotnet test LogFileName break change in 2.2.300","State":"closed","Body":"The last docker image `mcr.microsoft.com/dotnet/core/sdk:2.2` upgrade **DOTNET_SDK_VERSION** to **2.2.300**\r\n\r\n\r\n## Steps to reproduce\r\n- Create multiples test projects\r\n- run: `dotnet test --logger \"trx;LogFileName=TestResults.trx\"`\r\n\r\n## Expected  behavior\r\nCreate a unique file name per test project \r\n\r\n## Actual behavior\r\n\r\n**Using DOTNET_SDK_VERSION=2.2.202**\r\n```\r\nResults File: TestResults_2019-08-02_17-34-32-725.trx\r\nResults File: TestResults_2019-08-02_17-34-36-381.trx\r\nResults File: TestResults_2019-08-02_17-34-39-323.trx\r\n```\r\n\r\n**Using DOTNET_SDK_VERSION=2.2.300**\r\n```\r\nWARNING: Overwriting results file: TestResults.trx\r\nresult/TestResults.trx\r\n\r\nWARNING: Overwriting results file: TestResults.trx\r\nResults File: TestResults.trx\r\n\r\nWARNING: Overwriting results file: TestResults.trx\r\nResults File: TestResults.trx\r\n```\r\n\r\n## Workaround\r\nFix the tag of docker image to `FROM mcr.microsoft.com/dotnet/core/sdk:2.2.200`\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12124","RelatedDescription":"Closed issue \"dotnet test LogFileName break change in 2.2.300\" (#12124)"},{"Id":"476825838","IsPullRequest":true,"CreatedAt":"2019-08-05T15:58:17","Actor":"dotnet-maestro[bot]","Number":"12142","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:51 PM\r\n- **Commit**: 3717c89af67bc055ad07599cddf08330a7878f32\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12142","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12142)"},{"Id":"476822815","IsPullRequest":true,"CreatedAt":"2019-08-05T12:43:54","Actor":"dotnet-maestro[bot]","Number":"12141","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12141","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12141)"},{"Id":"476546570","IsPullRequest":true,"CreatedAt":"2019-08-04T12:54:11","Actor":"dotnet-maestro[bot]","Number":"12138","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 12:49 PM\r\n- **Commit**: ee824bdd8d041c4eb731f000f7dadcf458274f69\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19403.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12138","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12138)"},{"Id":"476546470","IsPullRequest":true,"CreatedAt":"2019-08-04T12:51:30","Actor":"dotnet-maestro[bot]","Number":"12137","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 12:49 PM\r\n- **Commit**: ee824bdd8d041c4eb731f000f7dadcf458274f69\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19403.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12137","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#12137)"},{"Id":"476545836","IsPullRequest":true,"CreatedAt":"2019-08-04T12:44:06","Actor":"dotnet-maestro[bot]","Number":"12136","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12136","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12136)"},{"Id":"476545827","IsPullRequest":true,"CreatedAt":"2019-08-04T12:43:11","Actor":"dotnet-maestro[bot]","Number":"12135","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12135)"},{"Id":"476538965","IsPullRequest":false,"CreatedAt":"2019-08-04T10:39:37","Actor":"TFTomSun","Number":"12134","RawContent":null,"Title":"Why does dotnet update reinstall the existing version?","State":"open","Body":"`dotnet update -g MyTool `\r\nseems to reinstall the tool, which takes quite long. In case the version is up to date i get the following output:\r\n\r\n> 'MyTool' was reinstalled with the latest stable version (version '1.0.1564914607')\r\n\r\n\r\n What I wish is just an check for a newer version, and install it if available. Is there any undocumented flag to achieve that?\r\n\r\nWhy do I need that? I distribute workflows (e.g. Build pipelines) via global tools. And provide shell scripts for the workflows. So whenever the shell script is executed it shall run with the latest global tool behind, but in the same time the shell script should start as fast as possible. Thats why the reinstallation of the tools when they are already up to date is a bit annoying.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12134","RelatedDescription":"Open issue \"Why does dotnet update reinstall the existing version?\" (#12134)"},{"Id":"476512417","IsPullRequest":true,"CreatedAt":"2019-08-04T04:35:45","Actor":"dotnet-maestro[bot]","Number":"12133","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190803.6\r\n- **Date Produced**: 8/4/2019 4:04 AM\r\n- **Commit**: b6f1a505833b552e425a8833f0b4bf9ca0c2e84a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19403.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12133","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12133)"},{"Id":"476507088","IsPullRequest":true,"CreatedAt":"2019-08-04T02:51:11","Actor":"dotnet-maestro[bot]","Number":"12132","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190803.5\r\n- **Date Produced**: 8/4/2019 2:20 AM\r\n- **Commit**: 9f2b53443625493d425e3f8235567f2541098d33\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19403.5\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12132","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12132)"},{"Id":"476495110","IsPullRequest":true,"CreatedAt":"2019-08-03T23:01:48","Actor":"dotnet-maestro[bot]","Number":"12131","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190803.4\r\n- **Date Produced**: 8/3/2019 10:30 PM\r\n- **Commit**: 3148acfb105a16aa6c535d00eb0e50ec03992f3f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19403.4\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12131","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12131)"},{"Id":"476467326","IsPullRequest":true,"CreatedAt":"2019-08-03T17:03:17","Actor":"dotnet-maestro[bot]","Number":"12130","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190803.2\r\n- **Date Produced**: 8/3/2019 4:27 PM\r\n- **Commit**: a69555ad965be37858738ec9fccd4a1df87800b2\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19403.2\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12130","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12130)"},{"Id":"476451026","IsPullRequest":false,"CreatedAt":"2019-08-03T13:17:39","Actor":"TFTomSun","Number":"12129","RawContent":null,"Title":"CLI option to Build with full .NET Framework MSBuild","State":"open","Body":"I'm currently trying to build a net472 application that has a ComReference. ComReferences are not yet support by the msbuild that is integrated in the dotnet core sdk.\r\n\r\nI would like to propose a feature that allows us to use the dotnet cli to spawn a full .net framework MSBuild process. Something like\r\n\r\n> dotnet msbuild-net /t:Publish ....\r\n\r\nI think it wouldn't be a big issue to implement this. But it would help the developers to prepare everything for the future. Currently I would now have to find a why to get the path to the full msbuild.exe. Btw. is there a easy way to determine the latest msbuild.exe on a machine (e.g. via envrionment variable?\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12129","RelatedDescription":"Open issue \"CLI option to Build with full .NET Framework MSBuild\" (#12129)"},{"Id":"476445467","IsPullRequest":true,"CreatedAt":"2019-08-03T12:39:23","Actor":"dotnet-maestro[bot]","Number":"12127","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12127","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12127)"},{"Id":"476445511","IsPullRequest":true,"CreatedAt":"2019-08-03T12:39:00","Actor":"dotnet-maestro[bot]","Number":"12128","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12128","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12128)"},{"Id":"476424642","IsPullRequest":true,"CreatedAt":"2019-08-03T07:52:21","Actor":"dotnet-maestro[bot]","Number":"12126","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190802.9\r\n- **Date Produced**: 8/3/2019 7:16 AM\r\n- **Commit**: 7b6654d164037368a2d6b2bede3d6d52f22bc893\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19402.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12126","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12126)"},{"Id":"476417973","IsPullRequest":true,"CreatedAt":"2019-08-03T06:04:07","Actor":"dotnet-maestro[bot]","Number":"12125","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190802.8\r\n- **Date Produced**: 8/3/2019 5:28 AM\r\n- **Commit**: cd613fe7032fd598080c043c143c91fe48ed7f2d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19402.8\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12125","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12125)"},{"Id":"476366913","IsPullRequest":true,"CreatedAt":"2019-08-02T22:20:03","Actor":"dotnet-maestro[bot]","Number":"12123","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190802.5\r\n- **Date Produced**: 8/2/2019 9:44 PM\r\n- **Commit**: 698a343128142e39ad02e6e389c554872df97678\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19402.5\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12123","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12123)"},{"Id":"476359226","IsPullRequest":true,"CreatedAt":"2019-08-02T21:47:20","Actor":"dotnet-maestro[bot]","Number":"12122","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190802.4\r\n- **Date Produced**: 8/2/2019 9:16 PM\r\n- **Commit**: c15f1e145f23188f743d335c4bc5acc8b24bf9f2\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19402.4\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12122","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12122)"},{"Id":"476319260","IsPullRequest":true,"CreatedAt":"2019-08-02T19:42:55","Actor":"dotnet-maestro[bot]","Number":"12121","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190802.2\r\n- **Date Produced**: 8/2/2019 7:12 PM\r\n- **Commit**: 27996712afc8f0cbc20142eb47ce497d198c2b78\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19402.2\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12121","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12121)"},{"Id":"476147164","IsPullRequest":true,"CreatedAt":"2019-08-02T12:42:28","Actor":"dotnet-maestro[bot]","Number":"12120","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190801.1\r\n- **Date Produced**: 8/1/2019 3:46 PM\r\n- **Commit**: b23fd25e1070aa8075b66f9d208835fa67af3dbb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 5.0.100-alpha1.19401.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12120","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#12120)"},{"Id":"476146983","IsPullRequest":true,"CreatedAt":"2019-08-02T12:41:58","Actor":"dotnet-maestro[bot]","Number":"12119","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190801.23\r\n- **Date Produced**: 8/2/2019 6:58 AM\r\n- **Commit**: 941d6497356e00ea6b2bc35a22a67f4ecf988fd6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19401.23\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12119","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12119)"},{"Id":"476034253","IsPullRequest":true,"CreatedAt":"2019-08-02T07:52:08","Actor":"dotnet-maestro[bot]","Number":"12118","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190801.10\r\n- **Date Produced**: 8/2/2019 7:16 AM\r\n- **Commit**: 8dd1be947460e9627c161caf581035a9c9ef5d4a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview9.19401.10\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12118","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12118)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"476843973","IsPullRequest":true,"CreatedAt":"2019-08-05T13:05:59","Actor":"dotnet-maestro[bot]","Number":"1398","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1398","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1398)"},{"Id":"476843431","IsPullRequest":true,"CreatedAt":"2019-08-05T13:04:49","Actor":"dotnet-maestro[bot]","Number":"1397","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1397","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1397)"},{"Id":"476821836","IsPullRequest":true,"CreatedAt":"2019-08-05T12:15:23","Actor":"dotnet-maestro[bot]","Number":"1396","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1396)"},{"Id":"476821605","IsPullRequest":true,"CreatedAt":"2019-08-05T12:14:47","Actor":"dotnet-maestro[bot]","Number":"1395","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1395","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1395)"},{"Id":"476550793","IsPullRequest":true,"CreatedAt":"2019-08-04T13:07:29","Actor":"dotnet-maestro[bot]","Number":"1394","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 9:19 AM\r\n- **Commit**: 4408bcb04b4e3a6174d9ec9660fadc71185af712\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1394)"},{"Id":"476550563","IsPullRequest":true,"CreatedAt":"2019-08-04T13:05:09","Actor":"dotnet-maestro[bot]","Number":"1393","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 9:19 AM\r\n- **Commit**: 4408bcb04b4e3a6174d9ec9660fadc71185af712\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19404.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19404.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1393","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1393)"},{"Id":"476545674","IsPullRequest":true,"CreatedAt":"2019-08-04T12:15:06","Actor":"dotnet-maestro[bot]","Number":"1392","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1392","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1392)"},{"Id":"476545661","IsPullRequest":true,"CreatedAt":"2019-08-04T12:14:53","Actor":"dotnet-maestro[bot]","Number":"1391","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190803.1\r\n- **Date Produced**: 8/3/2019 1:03 PM\r\n- **Commit**: 3b75ef38a33579dcd32f2912ee69e886356b0f18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19403.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19403.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1391","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1391)"},{"Id":"476449316","IsPullRequest":true,"CreatedAt":"2019-08-03T13:04:37","Actor":"dotnet-maestro[bot]","Number":"1390","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190802.28\r\n- **Date Produced**: 8/3/2019 2:44 AM\r\n- **Commit**: 8a958aa3d1cf2e91f6e9cf839e023ad4f8d489f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19402.28\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19402.28\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19402.28\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1390","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1390)"},{"Id":"476448944","IsPullRequest":true,"CreatedAt":"2019-08-03T13:00:12","Actor":"dotnet-maestro[bot]","Number":"1389","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190802.28\r\n- **Date Produced**: 8/3/2019 2:44 AM\r\n- **Commit**: 8a958aa3d1cf2e91f6e9cf839e023ad4f8d489f2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19402.28\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19402.28\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19402.28\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1389","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1389)"},{"Id":"476445367","IsPullRequest":true,"CreatedAt":"2019-08-03T12:14:47","Actor":"dotnet-maestro[bot]","Number":"1388","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1388","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1388)"},{"Id":"476445350","IsPullRequest":true,"CreatedAt":"2019-08-03T12:14:32","Actor":"dotnet-maestro[bot]","Number":"1387","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190802.16\r\n- **Date Produced**: 8/3/2019 12:35 AM\r\n- **Commit**: d8457f6ba527aef165ff6fb0aded44bf8123ce83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19402.16\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19402.16\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1387","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1387)"},{"Id":"476164729","IsPullRequest":true,"CreatedAt":"2019-08-02T13:02:57","Actor":"dotnet-maestro[bot]","Number":"1386","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190801.3\r\n- **Date Produced**: 8/2/2019 12:21 AM\r\n- **Commit**: c4e7347021eabaac1bdc0b0e13dc46f8c1e37419\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19401.3\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19401.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19401.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1386","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1386)"},{"Id":"476146337","IsPullRequest":true,"CreatedAt":"2019-08-02T12:14:50","Actor":"dotnet-maestro[bot]","Number":"1385","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190801.23\r\n- **Date Produced**: 8/2/2019 6:58 AM\r\n- **Commit**: 941d6497356e00ea6b2bc35a22a67f4ecf988fd6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19401.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19401.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19401.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19401.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19401.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19401.23\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1385","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1385)"},{"Id":"475661515","IsPullRequest":true,"CreatedAt":"2019-08-01T12:54:03","Actor":"dotnet-maestro[bot]","Number":"1384","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190731.8\r\n- **Date Produced**: 8/1/2019 2:10 AM\r\n- **Commit**: a12c557a72988070b8624cc7ecc46899629895c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19381.8\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19381.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19381.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1384","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1384)"},{"Id":"475644095","IsPullRequest":true,"CreatedAt":"2019-08-01T12:14:44","Actor":"dotnet-maestro[bot]","Number":"1383","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190731.19\r\n- **Date Produced**: 8/1/2019 12:27 AM\r\n- **Commit**: 48787606d809963cc800151cbfbefe0a74ae74b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19381.19\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1383","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1383)"},{"Id":"475352106","IsPullRequest":false,"CreatedAt":"2019-07-31T20:52:29","Actor":"mwpowellhtx","Number":"1382","RawContent":null,"Title":"Reconsider Debug.Listeners API exposure","State":"open","Body":"I am staring at a use case right now that I need to listen for ``System.Diagnostics.Debug.WriteLine`` messages and a listener would be just what I need to get the job done. Therefore, I strongly suggest [reconsidering Debug.Listeners exposure](/dotnet/standard/issues/84). Absent that we must look at adding unnecessary layers of overhead to our ``Debug.WriteLine`` listening efforts when a listener would fit the bill nicely.","Url":"https://github.com/dotnet/standard/issues/1382","RelatedDescription":"Open issue \"Reconsider Debug.Listeners API exposure\" (#1382)"},{"Id":"473325489","IsPullRequest":true,"CreatedAt":"2019-07-31T15:11:11","Actor":"dotnet-maestro[bot]","Number":"1370","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190730.3\r\n- **Date Produced**: 7/30/2019 6:57 PM\r\n- **Commit**: def377f94747dac91482aad67b33a1c011ffc770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19380.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1370","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1370)"},{"Id":"475124222","IsPullRequest":true,"CreatedAt":"2019-07-31T12:57:06","Actor":"dotnet-maestro[bot]","Number":"1381","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190730.6\r\n- **Date Produced**: 7/30/2019 8:44 PM\r\n- **Commit**: 5b6a74d8455aab11f64377f3200ace1df71110ea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19380.6\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19380.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19380.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1381","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1381)"},{"Id":"474306086","IsPullRequest":true,"CreatedAt":"2019-07-30T16:43:12","Actor":"JohnTortugo","Number":"1379","RawContent":null,"Title":"Patch reference to _PublishUsingPipelines","State":"closed","Body":"For context see description of this Arcade PR: https://github.com/dotnet/arcade/pull/3482\r\n\r\n/cc @riarenas @jcagme ","Url":"https://github.com/dotnet/standard/pull/1379","RelatedDescription":"Closed or merged PR \"Patch reference to _PublishUsingPipelines\" (#1379)"},{"Id":"474564366","IsPullRequest":true,"CreatedAt":"2019-07-30T12:56:42","Actor":"dotnet-maestro[bot]","Number":"1380","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190729.12\r\n- **Date Produced**: 7/30/2019 5:11 AM\r\n- **Commit**: b2ff0db61cc9348775d73a8934ad80218ded8bc0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19379.12\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19379.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19379.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1380","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1380)"},{"Id":"474034730","IsPullRequest":true,"CreatedAt":"2019-07-29T13:03:24","Actor":"dotnet-maestro[bot]","Number":"1378","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190728.4\r\n- **Date Produced**: 7/29/2019 4:09 AM\r\n- **Commit**: e36291288fc182e94a919f45e61a8924f953c3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19378.4\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19378.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19378.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1378)"},{"Id":"473740823","IsPullRequest":true,"CreatedAt":"2019-07-28T13:03:23","Actor":"dotnet-maestro[bot]","Number":"1376","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190727.2\r\n- **Date Produced**: 7/28/2019 5:49 AM\r\n- **Commit**: 57df8b38e4e70fc25aabe3d061cd1745cff0b26b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19377.2\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19377.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19377.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1376","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1376)"},{"Id":"473635514","IsPullRequest":true,"CreatedAt":"2019-07-27T13:03:22","Actor":"dotnet-maestro[bot]","Number":"1375","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190726.14\r\n- **Date Produced**: 7/27/2019 4:10 AM\r\n- **Commit**: 8a6389529afdc0dd53d4c94fe665695ec54c21af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19376.14\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19376.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19376.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1375","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1375)"},{"Id":"473583225","IsPullRequest":false,"CreatedAt":"2019-07-27T01:16:07","Actor":"GrabYourPitchforks","Number":"1374","RawContent":null,"Title":"Obsolete String.Copy in netstandard","State":"open","Body":"This is obsoleted in .NET Core 3 (see https://github.com/dotnet/corefx/issues/32563). It needs to be obsoleted in netstandard as well for consistency.","Url":"https://github.com/dotnet/standard/issues/1374","RelatedDescription":"Open issue \"Obsolete String.Copy in netstandard\" (#1374)"},{"Id":"473519038","IsPullRequest":true,"CreatedAt":"2019-07-26T21:14:24","Actor":"wtgodbe","Number":"1373","RawContent":null,"Title":"Enable YAML Stages publishing","State":"closed","Body":"Resolves https://github.com/dotnet/standard/issues/1372 & takes care of https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/YamlStagesPublishing.md for Standard.\r\n\r\n@riarenas @safern PTAL\r\n\r\nDiff is easier to reason about if you just look at https://github.com/dotnet/standard/pull/1373/commits/a2553ad6d898cf5c2db8940eb6ad4c1f65448557 - the other commit just fixes indentation","Url":"https://github.com/dotnet/standard/pull/1373","RelatedDescription":"Closed or merged PR \"Enable YAML Stages publishing\" (#1373)"},{"Id":"473459061","IsPullRequest":false,"CreatedAt":"2019-07-26T21:14:24","Actor":"wtgodbe","Number":"1372","RawContent":null,"Title":"Use YAML stages publishing","State":"closed","Body":"See https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/YamlStagesPublishing.md for guidance - needs to done by 8/13.","Url":"https://github.com/dotnet/standard/issues/1372","RelatedDescription":"Closed issue \"Use YAML stages publishing\" (#1372)"},{"Id":"473345599","IsPullRequest":true,"CreatedAt":"2019-07-26T13:07:57","Actor":"dotnet-maestro[bot]","Number":"1371","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190725.17\r\n- **Date Produced**: 7/26/2019 6:46 AM\r\n- **Commit**: 98227597b152076cb02c55bb695c572c14284e32\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19375.17\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19375.17\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19375.17\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1371","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1371)"},{"Id":"472873123","IsPullRequest":true,"CreatedAt":"2019-07-25T13:51:44","Actor":"dotnet-maestro[bot]","Number":"1369","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190724.11\r\n- **Date Produced**: 7/25/2019 6:46 AM\r\n- **Commit**: bdd0814360d4c3a58860919f292a306242f27da1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19374.11\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19374.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19374.11\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1369","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1369)"},{"Id":"472753186","IsPullRequest":false,"CreatedAt":"2019-07-25T09:12:42","Actor":"guliteb","Number":"1368","RawContent":null,"Title":"System.Management Plans?","State":"open","Body":"I am developing UWP and want to access some system information via WMI.\r\n\r\nSo I want to ask if there is plan to support System.Management namespace in the future.\r\n\r\nThanks.","Url":"https://github.com/dotnet/standard/issues/1368","RelatedDescription":"Open issue \"System.Management Plans?\" (#1368)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"477163948","IsPullRequest":false,"CreatedAt":"2019-08-06T04:32:08","Actor":"JamesNK","Number":"40051","RawContent":null,"Title":"HTTP2: Flakyness when server doesn't completely read request","State":"open","Body":"I have created a repro for an error that sometimes shows up on the grpc-dotnet CI server.\r\n\r\nRepro:\r\n1. `git clone https://github.com/JamesNK/grpc-dotnet.git`\r\n2. `git checkout jamesnk/stress-maxsize`\r\n3. `dotnet test test\\FunctionalTests --filter Name~ReceivedMessageExceedsSize_ThrowError`\r\n\r\nLogic in the test is like:\r\n1. Client makes a non-streaming call to the server and sends a large request body\r\n2. Server ends response without reading complete request body\r\n3. Client asserts response\r\n4. Go to 1.\r\n\r\nWhen one thread is executing this will not error.\r\n\r\nWhen multiple threads share one HttpClient it consistently throws this error:\r\n\r\n```\r\nSystem.Threading.Tasks.TaskCanceledException : A task was canceled.\r\n  Stack Trace: \r\n    at TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\r\n    at Http2Connection.SendStreamDataAsync(Int32 streamId, ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\r\n    at Http2Stream.SendDataAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\r\n    at HttpContent.CopyToAsyncCore(ValueTask copyTask)\r\n    at Http2Stream.SendRequestBodyAsync(CancellationToken cancellationToken)\r\n    at Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n    at HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n    at RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n    at HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n    at TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber) in TaskExtensions.cs line: 58\r\n    at <<ReceivedMessageExceedsSize_ThrowError>b__1>d.MoveNext() in MaxMessageSizeTests.cs line: 77\r\n    at --- End of stack trace from previous location where exception was thrown ---\r\n    at MaxMessageSizeTests.ReceivedMessageExceedsSize_ThrowError() in MaxMessageSizeTests.cs line: 87\r\n    at GenericAdapter`1.BlockUntilCompleted()\r\n    at NoMessagePumpStrategy.WaitForCompletion(AwaitAdapter awaitable)\r\n    at AsyncToSyncAdapter.Await(Func`1 invoke)\r\n    at TestMethodCommand.RunTestMethod(TestExecutionContext context)\r\n    at TestMethodCommand.Execute(TestExecutionContext context)\r\n    at <>c__DisplayClass1_0.<Execute>b__0()\r\n    at BeforeAndAfterTestCommand.RunTestMethodInThreadAbortSafeZone(TestExecutionContext context, Action action)\r\n```\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview9-013697\r\n Commit:    baac5f4d5c\r\n```\r\n\r\n// @geoffkizer ","Url":"https://github.com/dotnet/corefx/issues/40051","RelatedDescription":"Open issue \"HTTP2: Flakyness when server doesn't completely read request\" (#40051)"},{"Id":"477139721","IsPullRequest":false,"CreatedAt":"2019-08-06T02:39:43","Actor":"herrozerro","Number":"40050","RawContent":null,"Title":"[System.Text.Json]: Recursive property in IEnumerable type results in stackoverflow","State":"open","Body":"Possibly related to #37313\r\n\r\n\r\n```\r\n    void Main()\r\n    {\r\n\t    testThing thing = new testThing();\r\n\r\n\t    var s = System.Text.Json.JsonSerializer.Serialize(thing);\r\n    }\r\n\r\n    public class testThing\r\n    {\r\n\t    public IEnumerable<testThing> things {get;set;}\r\n    }\r\n```\r\n\r\nEnvironment: 3.0.100-preview7-012821\r\n\r\nWorks with list, but IEnumerable breaks it.","Url":"https://github.com/dotnet/corefx/issues/40050","RelatedDescription":"Open issue \"[System.Text.Json]: Recursive property in IEnumerable type results in stackoverflow\" (#40050)"},{"Id":"477090157","IsPullRequest":false,"CreatedAt":"2019-08-06T02:28:46","Actor":"BAlbrich","Number":"40046","RawContent":null,"Title":"Unable to generate XmlSerializer for netstandard libraries using Microsoft.XmlSerializer.Generator","State":"closed","Body":"Steps:\r\n1. Create a new netstandard 2.0 library.\r\n2. Add assemblyref://Microsoft.XmlSerializer.Generator (2.1.0-preview7.19362.9)\r\n3. Build.\r\n\r\nResult:\r\n1>Method 'System.Xml.Serialization.XmlSerializer.GenerateSerializer' was not found. This is likely because you are using an older version of the framework. Please update to .NET Core v2.1 or later.\r\n1>Sgen utility failed to pregenerate serialization code for D:\\Projects.GitHub\\TestXmlSerializer\\TestXmlSerializer\\obj\\Debug\\netstandard2.0\\TestXmlSerializer.dll.","Url":"https://github.com/dotnet/corefx/issues/40046","RelatedDescription":"Closed issue \"Unable to generate XmlSerializer for netstandard libraries using Microsoft.XmlSerializer.Generator\" (#40046)"},{"Id":"477121995","IsPullRequest":true,"CreatedAt":"2019-08-06T01:21:04","Actor":"Anipik","Number":"40049","RawContent":null,"Title":"changing netcoreapp targetframework from 3.0 to 5.0 and adding support for targetgroup = netcoreapp5.0","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/40049","RelatedDescription":"Open PR \"changing netcoreapp targetframework from 3.0 to 5.0 and adding support for targetgroup = netcoreapp5.0\" (#40049)"},{"Id":"477109653","IsPullRequest":false,"CreatedAt":"2019-08-06T00:15:50","Actor":"Pilchie","Number":"40048","RawContent":null,"Title":"System.Management does not work with .net core 3.0 prev 7","State":"open","Body":"_From @HolyOne on Sunday, August 4, 2019 10:10:32 AM_\r\n\r\nI have an existing class using System.Management code which works.\r\n\r\nI created a .net core 3 web app (I run on visual studio with Administrator permisions)\r\nI get marshal error when I try to connect WMI at the first line.\r\n\r\nThis is the line I call\r\n`   DNS = new ManagementScope (@\"\\\\localhost\\root\\MicrosoftDNS\") ;`\r\n\r\nThis is the error I get\r\n**System.Runtime.InteropServices.MarshalDirectiveException:** 'Cannot marshal 'parameter #3': Cannot marshal a string by-value with the [Out] attribute.'\r\n\r\nI do not use any win32 dll call or out parameter in my code so I thought it must be an internal error on System.Management or .net core 3 preview\r\n\r\n![image](https://user-images.githubusercontent.com/293601/62422290-bf3a0880-b6b8-11e9-9680-fca506719139.png)\r\n\r\nThank you\r\n\r\n_Copied from original issue: aspnet/AspNetCore#12860_","Url":"https://github.com/dotnet/corefx/issues/40048","RelatedDescription":"Open issue \"System.Management does not work with .net core 3.0 prev 7\" (#40048)"},{"Id":"477089090","IsPullRequest":false,"CreatedAt":"2019-08-05T23:41:38","Actor":"josundt","Number":"40045","RawContent":null,"Title":"JsonSerializer support for circular references","State":"closed","Body":"Object/collection graphs containing circular references (or multiple references to the same entity), can be handled in a few different ways when serializing/deserializing to/from JSON.\r\n\r\nBest practice is naturally to avoid graphs with circular references when using JSON serialization, but techniques to deal with it exist, and some times it may be needed. We use it a few places in our software.\r\n\r\nNewtonSoft.Json supports this, and I guess it is a goal for System.Text.Json to make the feature gap with NewtonSoft as small possible.\r\n\r\nDuring serialization, when an object/collection that has already been serialized is referenced for the second time or more, the common technique I've seen is to replace the repeated objects/collection in the JSON with a \r\n```json\r\n{ \"$ref\": \"some-sort-of-pointer\" }\r\n```\r\n\r\nSome use **JSONPath** to reference the object/array serialized previously in the JSON document.\r\n\r\nNewtonSoft.Json uses a different techique with specific serialization settings: It adds an extra **\"$id\"** property to all serialized objects in the JSON document, and the \"$ref\" value is the \"$id\" property of the object/array serialized previously.\r\n\r\nExample using NewtonSoft.Json:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Newtonsoft.Json;\r\n\r\nnamespace CircularSerialization\r\n{\r\n    public class Bike\r\n    {\r\n        public List<Tire> Tires { get; set; } = new List<Tire>();\r\n    }\r\n\r\n    public class Tire\r\n    {\r\n        public Bike Bike { get; set; }\r\n    }\r\n\r\n    static class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            var bike = new Bike();\r\n            bike.Tires.Add(new Tire { Bike = bike });\r\n            bike.Tires.Add(new Tire { Bike = bike });\r\n\r\n            var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore\r\n            };\r\n            var serialized = JsonConvert.SerializeObject(bike, settings);\r\n\r\n            Console.Write(serialized);\r\n            // {\"$id\":\"1\",\"Tires\":[{\"$id\":\"2\",\"Bike\":{\"$ref\":\"1\"}},{\"$id\":\"3\",\"Bike\":{\"$ref\":\"1\"}}]}\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI guess that if **System.Text.Json.JsonSerializer** will support circular/multiple references, some more memory allocation will be required during serialization/deserialization when the setting is switched on (so such a setting should naturally be off by default).\r\n\r\nIs there a plan to support options for handling circular references in **JsonSerializerSettings**?\r\nAnd if so, will you support the \"$id\" technique or the JSONPath techique, or maybe support both?\r\n\r\nReference:\r\nhttps://github.com/douglascrockford/JSON-js/blob/master/cycle.js","Url":"https://github.com/dotnet/corefx/issues/40045","RelatedDescription":"Closed issue \"JsonSerializer support for circular references\" (#40045)"},{"Id":"477097550","IsPullRequest":true,"CreatedAt":"2019-08-05T23:18:10","Actor":"ahsonkhan","Number":"40047","RawContent":null,"Title":"Do not do hidden/unavoidable sync stream writes when using the Utf8JsonWriter (during grow).","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/39837\r\n\r\nThis change is noisy because of the change to use a private field (`_currentIndex`) everywhere the auto-prop `BytesPending` was previously used.\r\nThis is because, what is now `_currentIndex`, must be reset to 0 after growing to keep indexing on/writing to the `IBW.GetSpan()` as cheap as possible. We can't reset the public `BytesPending` property to 0 in the case of writing to the stream.\r\n\r\n**The change that's worth reviewing is the Utf8JsonWriter.cs file, particularly Grow (+ tests).**\r\nEverything else is a rename.\r\n\r\ncc @stephentoub, @bartonjs, @davidfowl  ","Url":"https://github.com/dotnet/corefx/pull/40047","RelatedDescription":"Open PR \"Do not do hidden/unavoidable sync stream writes when using the Utf8JsonWriter (during grow).\" (#40047)"},{"Id":"477083630","IsPullRequest":false,"CreatedAt":"2019-08-05T22:22:00","Actor":"MarcusWichelmann","Number":"40044","RawContent":null,"Title":"Use new fanotify Linux API in FileSystemWatcher","State":"open","Body":"Currently the FileSystemWatcher implementation for Linux is based on the inotify kernel API which is very inefficient and has some strong limitations.\r\nBut there is this new kernel API called `fanotify` with some advantages like being able to watch large directory trees recursively.\r\n\r\nDo you have any plans using this API in the `FileSystemWatcher` when it's available? For older kernels, a fallback to inotify would probably still be necessary.","Url":"https://github.com/dotnet/corefx/issues/40044","RelatedDescription":"Open issue \"Use new fanotify Linux API in FileSystemWatcher\" (#40044)"},{"Id":"477071290","IsPullRequest":true,"CreatedAt":"2019-08-05T21:42:43","Actor":"bartonjs","Number":"40043","RawContent":null,"Title":"[release/3.0] Validate the algorithmParameters value in Pkcs8PrivateKeyInfo..ctor","State":"open","Body":"If the algorithmParameters value is not null, empty, or a single BER value then\r\nthe Encode method will throw an ArgumentException, despite not taking any\r\narguments.\r\n\r\nRather than let the exception be confusing and run late, catch it in the\r\nconstructor (throwing the same CryptographicException as other ctors in this\r\nnamespace that expect a single BER value parameter).\r\n\r\nFound during docs writing.\r\nPort of #40002 to release/3.0.\r\n","Url":"https://github.com/dotnet/corefx/pull/40043","RelatedDescription":"Open PR \"[release/3.0] Validate the algorithmParameters value in Pkcs8PrivateKeyInfo..ctor\" (#40043)"},{"Id":"476866752","IsPullRequest":true,"CreatedAt":"2019-08-05T21:35:45","Actor":"dotnet-maestro[bot]","Number":"40025","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19404.5\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19404.5\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19404.2\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40025","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx\" (#40025)"},{"Id":"477066550","IsPullRequest":true,"CreatedAt":"2019-08-05T21:29:02","Actor":"scalablecory","Number":"40042","RawContent":null,"Title":"[release/3.0] Fix HPACK decoder failing inconsistently with 0-length header names","State":"open","Body":"This is port of #39907 to 3.0 release branch.\r\nfixes #39873\r\n\r\nDescription\r\n\r\nA server sending 0-length header names will cause the client to read up to around MaxResponseHeadersLength bytes from header blocks, eventually ending with an exception when it reads too much data or reaches end of headers.\r\nFix is to throw an exception immediately rather than waiting for it to domino into one of those other failures.\r\n\r\nCustomer Impact\r\n\r\nA user explicitly increasing MaxResponseHeadersLength against an incorrectly implemented server may read more data than necessary before closing with a protocol error.\r\n\r\nNo demonstrated vulnerability without the fix, but uneasy enough about it that we want it in.\r\n\r\nRegression?\r\n\r\nNo\r\n\r\nRisk\r\n\r\nThe scope is specific to HTTP2 and covers specific invalid behavior. A single `if` added to check for invalid input.","Url":"https://github.com/dotnet/corefx/pull/40042","RelatedDescription":"Open PR \"[release/3.0] Fix HPACK decoder failing inconsistently with 0-length header names\" (#40042)"},{"Id":"477053136","IsPullRequest":true,"CreatedAt":"2019-08-05T20:52:20","Actor":"scalablecory","Number":"40040","RawContent":null,"Title":"Fixe DynamicTable.Resize failing when it grows the table.","State":"open","Body":"Fixes DynamicTable.Resize failing when it grows. It was not handling the case when the insert index wrapped the ring buffer. Resolves #39967\r\nUpdates DynamicTable.EnsureAvailable to null out unused headers. Allows earlier GC, but mainly helps debugging.\r\nAdd HeaderField.ToString() to assist with debugging.","Url":"https://github.com/dotnet/corefx/pull/40040","RelatedDescription":"Open PR \"Fixe DynamicTable.Resize failing when it grows the table.\" (#40040)"},{"Id":"476989842","IsPullRequest":true,"CreatedAt":"2019-08-05T20:49:05","Actor":"tmat","Number":"40035","RawContent":null,"Title":"Fix off-by-one error when calculating GUID handle generation in MetadataAggregator.GetGenerationHandle","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/40035","RelatedDescription":"Closed or merged PR \"Fix off-by-one error when calculating GUID handle generation in MetadataAggregator.GetGenerationHandle\" (#40035)"},{"Id":"476823595","IsPullRequest":false,"CreatedAt":"2019-08-05T20:41:38","Actor":"eiriktsarpalis","Number":"40022","RawContent":null,"Title":"HTTP2: Hanging requests when multiplexing with cancellations on Windows","State":"closed","Body":"I'm seeing a condition in which http2 requests hang indefinitely when multiplexed with cancelled requests. The issues occurs on Windows but I haven't been able to reproduce in Ubuntu or OSX.\r\n\r\n## Reproduction Steps\r\n\r\nInstall the nightly build (off master):\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-013662\r\n Commit:    7031ddb3f6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\eitsarpa\\AppData\\Local\\Temp\\dotnet-nightly-190805\\sdk\\5.0.100-alpha1-013662\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview8-28379-02\r\n  Commit:  3a87ac0079\r\n```\r\nRun the http stress suite from [this branch](https://github.com/eiriktsarpalis/corefx/tree/c51d5e3d8ea7cb911af41d5a278b5818090546a1/src/System.Net.Http/tests/StressTests/HttpStress) using the following arguments:\r\n```\r\n$  dotnet run -c Release -- -n 2 -ops 0 -maxContentLength 5  -clientTimeout 20 -cancelRate 0.1\r\n```\r\nEffectively this runs the stress suite using 2 concurrent workers sharing the same HttpClient instance, repeating a single GET request with a response body of length 5. A 10% of all requests will be cancelled at random. Here's the final output from a single stress session:\r\n```\r\nHttpStress Run Final Report\r\n\r\n[8/5/2019 11:10:13 AM] Total: 237,165 Runtime: 00:20:08\r\n         0: GET                       Success: 221,445  Canceled: 15,620        Fail: 100\r\n            TOTAL                     Success: 221,445  Canceled: 15,620        Fail: 100\r\n\r\nLatency(ms) : n=237165, p50=0.31, p75=0.39, p99=46.41, p999=70.47, max=20018.38\r\n\r\nThere were a total of 100 failures classified into 1 different types:\r\n\r\nFailure Type 1/1:\r\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Net.Http.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\r\n   at System.Net.Http.Http2Connection.SendHeadersAsync(HttpRequestMessage request, CancellationToken cancellationToken, Boolean mustFlush)\r\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at HttpStress.RequestContext.SendAsync(HttpRequestMessage request, HttpCompletionOption httpCompletion, Nullable`1 token) in C:\\Users\\eitsarpa\\devel\\HttpStress\\ClientOperations.cs:line 91\r\n   at HttpStress.ClientOperations.<>c.<<get_Operations>b__1_0>d.MoveNext() in C:\\Users\\eitsarpa\\devel\\HttpStress\\ClientOperations.cs:line 173\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at HttpStress.StressClient.<>c__DisplayClass11_0.<<StartCore>g__RunWorker|0>d.MoveNext() in C:\\Users\\eitsarpa\\devel\\HttpStress\\StressClient.cs:line 109\r\n\r\n         0: GET                       Fail: 100\r\n            TOTAL                     Fail: 100\r\n```\r\nA few notes regarding this repro:\r\n* The issue seems to impact a very low percentage of requests (0.04% in this instance).\r\n* Surfaced `TaskCanceledException`s correspond to requests that have not been signaled for cancellation.\r\n* Reproduces both with http.sys and kestrel, so this is very likely a client issue.\r\n* The issue reproduces on Windows pretty consistently in my test environment (using a D4 instance in Azure). I have not been able to reproduce the issue on a D4 instance running Ubuntu 16.04 (using the same nightly build) or OSX.\r\n* Setting `-n 1` (running with just one worker) makes the issue go away.\r\n* Setting `-cancelRate 0` (no cancelled requests) makes the issue go away.\r\n* Setting `-clientTimeout` to a high number makes the stress suite stall.\r\n* Changing the `-maxContentLength` parameter does not impact ability to reproduce issue.","Url":"https://github.com/dotnet/corefx/issues/40022","RelatedDescription":"Closed issue \"HTTP2: Hanging requests when multiplexing with cancellations on Windows\" (#40022)"},{"Id":"477032588","IsPullRequest":false,"CreatedAt":"2019-08-05T20:01:38","Actor":"benbhall","Number":"40039","RawContent":null,"Title":"Availability of nullable attributes outside of Core 3.0","State":"open","Body":"First issue here be kind :)\r\n\r\nFollowing on from https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md, we now have a way to annotate our existing APIs for nullable reference types with https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/Diagnostics/CodeAnalysis/NullableAttributes.cs (mirrored from CoreLib sources). \r\n\r\nIt took some digging to figure out what to do for a Core 2.1 project . I think the https://github.com/dotnet/docs/blob/master/docs/csharp/nullable-attributes.md assumes the reader is using Core 3.0. Is this only going into Core 3.0?\r\n\r\nIf so, would it be worth making it available in a NuGet to provide a complete nullable reference type experience in other framework versions, rather than leaving it to developers to implement their own?","Url":"https://github.com/dotnet/corefx/issues/40039","RelatedDescription":"Open issue \"Availability of nullable attributes outside of Core 3.0\" (#40039)"},{"Id":"476916709","IsPullRequest":false,"CreatedAt":"2019-08-05T19:50:12","Actor":"SebHonorine","Number":"40027","RawContent":null,"Title":"IAsyncQueryProvider what is expected in TResult IAsyncQueryProvider.ExecuteAsyn","State":"closed","Body":"Hello there,\r\nAs I created on stack overflow :\r\nhttps://stackoverflow.com/questions/57314896/iasyncqueryprovider-mock-issue-when-migrated-to-net-core-3-adding-tresult-iasyn\r\n\r\nI have no idea what is expected in this part of the code : \r\n`        TResult IAsyncQueryProvider.ExecuteAsync<TResult>(Expression expression, CancellationToken cancellationToken)\r\n        {\r\n}`\r\n\r\nMy unit testing is still broken since i updated for .Net core 3.0 and chenged my getEnumerator() for GetAsyncEnumerator()\r\n\r\nSee : https://github.com/dotnet/corefx/issues/39946\r\n\r\nif you guys have any idea. \r\n\r\nThanks and sorry for bothering you guys.","Url":"https://github.com/dotnet/corefx/issues/40027","RelatedDescription":"Closed issue \"IAsyncQueryProvider what is expected in TResult IAsyncQueryProvider.ExecuteAsyn\" (#40027)"},{"Id":"476999855","IsPullRequest":true,"CreatedAt":"2019-08-05T18:34:32","Actor":"buyaa-n","Number":"40038","RawContent":null,"Title":"[release/2.1] Compatibility: updates for Mac OSX 10.15  related to 2.x branches","State":"open","Body":"#### Description\r\n\t\t\r\n1. Build fix as in https://github.com/dotnet/corefx/pull/39940\r\n2. Test fix for System.Runtime.Serialization.Json.Tests related to non breaking space\r\n3. Test fix for System.Globalization.Tests related to region name \"China mainland\"\r\n\r\n#### Customer Impact\r\nNone\t\t\r\n#### Regression?\r\nNo\t\t\r\n#### Risk\r\nNone\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40038","RelatedDescription":"Open PR \"[release/2.1] Compatibility: updates for Mac OSX 10.15  related to 2.x branches\" (#40038)"},{"Id":"476993815","IsPullRequest":false,"CreatedAt":"2019-08-05T18:19:12","Actor":"buyaa-n","Number":"40037","RawContent":null,"Title":"Compatibility: System.IO.MemoryMappedFiles.Tests failing with new Mac OSX 10.15","State":"open","Body":"4 tests failing with new Mac OS Catalina from System.IO.MemoryMappedFiles.Tests. Its happening with or without running as sudo. Failure similar to https://github.com/dotnet/corefx/issues/34718 but that one was for docker\r\n```xml\r\n<test name=\"System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests.ValidAccessLevelCombinations(mapAccess: ReadWriteExecute, viewAccess: ReadWriteExecute)\" type=\"System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests\" method=\"ValidAccessLevelCombinations\" time=\"0.0221614\" result=\"Fail\">\r\n        <failure exception-type=\"System.UnauthorizedAccessException\">\r\n          <message><![CDATA[System.UnauthorizedAccessException : Access to the path is denied.\\n---- System.IO.IOException : Operation not permitted]]></message>\r\n          <stack-trace><![CDATA[   at System.IO.MemoryMappedFiles.MemoryMappedView.CreateView(SafeMemoryMappedFileHandle memMappedFileHandle, MemoryMappedFileAccess access, Int64 requestedOffset, Int64 requestedSize) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedView.Unix.cs:line 124\r\n   at System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64 offset, Int64 size, MemoryMappedFileAccess access) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs:line 455\r\n   at System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests.<>c__DisplayClass1_0.<ValidAccessLevelCombinations>b__0() in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.MemoryMappedFiles/tests/MemoryMappedViewAccessor.Tests.cs:line 87\r\n   at System.AssertExtensions.ThrowsIf[T](Boolean condition, Action action) in /Users/dotnet/Documents/dotnet/corefx/src/Common/tests/CoreFx.Private.TestUtilities/System/AssertExtensions.cs:line 236\r\n   at System.IO.MemoryMappedFiles.Tests.MemoryMappedViewAccessorTests.ValidAccessLevelCombinations(MemoryMappedFileAccess mapAccess, MemoryMappedFileAccess viewAccess) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.MemoryMappedFiles/tests/MemoryMappedViewAccessor.Tests.cs:line 81\r\n----- Inner Stack Trace -----\r\n]]></stack-trace>\r\n        </failure>\r\n      </test>\r\n```\r\nFull test result: https://gist.github.com/buyaa-n/6cf58377ccde90703728de02e3e2ddef#file-system-io-memorymappedfiles-tests-result-xml-L415\r\ncc @wfurt @safern ","Url":"https://github.com/dotnet/corefx/issues/40037","RelatedDescription":"Open issue \"Compatibility: System.IO.MemoryMappedFiles.Tests failing with new Mac OSX 10.15\" (#40037)"},{"Id":"476992526","IsPullRequest":true,"CreatedAt":"2019-08-05T18:15:45","Actor":"cston","Number":"40036","RawContent":null,"Title":"Port Microsoft.VisualBasic.MyServices.Internal.ContextValue(Of T)","State":"open","Body":"Port `Microsoft.VisualBasic.MyServices.Internal.ContextValue(Of T)` from https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic/runtime/msvbalib.\r\n\r\nNote: The implementation here uses `ThreadLocal(Of IDictionary)` rather than `System.Runtime.Remoting.Messaging.CallContext` when not executing in ASP.NET because `System.Runtime.Remoting` is not available on .NET Core.\r\n\r\nFixes #40012\r\n","Url":"https://github.com/dotnet/corefx/pull/40036","RelatedDescription":"Open PR \"Port Microsoft.VisualBasic.MyServices.Internal.ContextValue(Of T)\" (#40036)"},{"Id":"476982954","IsPullRequest":false,"CreatedAt":"2019-08-05T17:50:39","Actor":"buyaa-n","Number":"40034","RawContent":null,"Title":"Compatability: System.IO.FileSystem.Watcher.Tests failing on new Mac OSX 10.15","State":"open","Body":"One test failing from System.IO.FileSystem.Watcher.Tests on Mac Catalina:\r\n```xml\r\n<test name=\"System.IO.Tests.File_Move_Tests.File_Move_From_Unwatched_To_Watched\" type=\"System.IO.Tests.File_Move_Tests\" method=\"File_Move_From_Unwatched_To_Watched\" time=\"4.1481931\" result=\"Fail\">\r\n        <failure exception-type=\"Xunit.Sdk.TrueException\">\r\n          <message><![CDATA[Created event did not occur as expected\\nExpected: True\\nActual:   False]]></message>\r\n          <stack-trace><![CDATA[   at System.IO.Tests.FileSystemWatcherTest.ExecuteAndVerifyEvents(FileSystemWatcher watcher, WatcherChangeTypes expectedEvents, Action action, Boolean assertExpected, String[] expectedPaths, Int32 timeout) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs:line 272\r\n   at System.IO.Tests.FileSystemWatcherTest.ExpectEvent(FileSystemWatcher watcher, WatcherChangeTypes expectedEvents, Action action, Action cleanup, String[] expectedPaths, Int32 attempts, Int32 timeout) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs:line 182\r\n   at System.IO.Tests.FileSystemWatcherTest.ExpectEvent(FileSystemWatcher watcher, WatcherChangeTypes expectedEvents, Action action, Action cleanup, String expectedPath, Int32 attempts, Int32 timeout) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs:line 152\r\n   at System.IO.Tests.File_Move_Tests.FileMove_FromUnwatchedToWatched(WatcherChangeTypes eventType) in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs:line 164\r\n   at System.IO.Tests.File_Move_Tests.File_Move_From_Unwatched_To_Watched() in /Users/dotnet/Documents/dotnet/corefx/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.File.Move.cs:line 55]]></stack-trace>\r\n        </failure>\r\n      </test>\r\n```","Url":"https://github.com/dotnet/corefx/issues/40034","RelatedDescription":"Open issue \"Compatability: System.IO.FileSystem.Watcher.Tests failing on new Mac OSX 10.15\" (#40034)"},{"Id":"476972751","IsPullRequest":true,"CreatedAt":"2019-08-05T17:24:11","Actor":"buyaa-n","Number":"40033","RawContent":null,"Title":"Fixing test failure caused from non breaking space","State":"open","Body":"Fixes #40032 a test failure caused from non breaking space, happening on new Mac Version","Url":"https://github.com/dotnet/corefx/pull/40033","RelatedDescription":"Open PR \"Fixing test failure caused from non breaking space\" (#40033)"},{"Id":"476968331","IsPullRequest":false,"CreatedAt":"2019-08-05T17:12:42","Actor":"buyaa-n","Number":"40032","RawContent":null,"Title":"System.Runtime.Serialization.Json.Tests failing from non breaking space on Mac Catalina","State":"open","Body":"System.Runtime.Serialization.Json.Tests failing from non breaking space didn't match with regular space on Mac Catalina\r\n```xml\r\n <test name=\"DataContractJsonSerializerTests.DCJS_VerifyDateTimeForFormatStringDCJsonSerSettings\" type=\"DataContractJsonSerializerTests\" method=\"DCJS_VerifyDateTimeForFormatStringDCJsonSerSettings\" time=\"0.0310487\" result=\"Fail\">\r\n        <failure exception-type=\"Xunit.Sdk.TrueException\">\r\n          <message><![CDATA[strings differ at index 16\r\n                     ↓\r\n[expected]:8:32.00 a. m.\\\",\\\"12:00:00.00 a.\r\n[actual  ]:8:32.00 a. m.\\\",\\\"12:00:00.00 a.\r\n                     ↑\r\n[Expected (with length=81)]:\\n[\\\"03:58:32.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"03:58:32.00 a. m.\\\"]\r\n[Actual (with length=81)]:\\n[\\\"03:58:32.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"03:58:32.00 a. m.\\\"]\r\nTest failed for input: System.Collections.Generic.List`1[System.DateTime]\\nExpected: [\\\"03:58:32.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"03:58:32.00 a. m.\\\"]\r\nActual: [\\\"03:58:32.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"12:00:00.00 a. m.\\\",\\\"03:58:32.00 a. m.\\\"]\r\nExpected: True\\nActual:   False]]></message>\r\n          <stack-trace><![CDATA[   at DataContractJsonSerializerTests.SerializeAndDeserialize[T](T value, String baseline, DataContractJsonSerializerSettings settings, Func`1 serializerFactory, Boolean skipStringCompare) in /Users/dotnet/Documents/dotnet/corefx/src/System.Runtime.Serialization.Json/tests/DataContractJsonSerializer.cs:line 2985\r\n   at DataContractJsonSerializerTests.DCJS_VerifyDateTimeForFormatStringDCJsonSerSettings() in /Users/dotnet/Documents/dotnet/corefx/src/System.Runtime.Serialization.Json/tests/DataContractJsonSerializer.cs:line 2602]]></stack-trace>\r\n        </failure>\r\n      </test>\r\n```","Url":"https://github.com/dotnet/corefx/issues/40032","RelatedDescription":"Open issue \"System.Runtime.Serialization.Json.Tests failing from non breaking space on Mac Catalina\" (#40032)"},{"Id":"476958723","IsPullRequest":false,"CreatedAt":"2019-08-05T16:47:49","Actor":"buyaa-n","Number":"40031","RawContent":null,"Title":"Refactor/upgrade deprecated code usage for Mac OSX 10.15 Crypthography","State":"open","Body":"With new version of MAC OS Catalina many crypthography related methods deprecated. For now related warnings are suppresed with https://github.com/dotnet/corefx/pull/39938 which need further investigion and upgrade/renewal","Url":"https://github.com/dotnet/corefx/issues/40031","RelatedDescription":"Open issue \"Refactor/upgrade deprecated code usage for Mac OSX 10.15 Crypthography\" (#40031)"},{"Id":"476957536","IsPullRequest":false,"CreatedAt":"2019-08-05T16:44:52","Actor":"geoffkizer","Number":"40030","RawContent":null,"Title":"HTTP2: _expect100ContinueWaiter should use TaskCreationOptions.RunContinuationsAsynchronously","State":"open","Body":"https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/Http2Stream.cs#L119\r\n\r\nIt's using TaskContinuationOptions.RunContinuationsAsynchronously, which is incorrect.","Url":"https://github.com/dotnet/corefx/issues/40030","RelatedDescription":"Open issue \"HTTP2: _expect100ContinueWaiter should use TaskCreationOptions.RunContinuationsAsynchronously\" (#40030)"},{"Id":"476952228","IsPullRequest":false,"CreatedAt":"2019-08-05T16:30:57","Actor":"danmosemsft","Number":"40029","RawContent":null,"Title":"Use gated checkin to protect trimming wins by linking representative apps and measuring size on disk","State":"open","Body":"We want to make CoreFX more trimmable (so customers can trim their apps, and also so that Xamarin can use more of it on devices) and we want to protect any size improvements we make this way.\r\n\r\nThe idea is to in gated checkin - \r\n1. Pull down down some representative apps in binary form (perhaps from corefx-testdata repo) along with presumably any SDK they require (such as latest ASP.NET implementation assemblies)\r\n2. Use linker to trim them against current CoreFX implementation AND against previous CoreFX implementation (the latter presumably gotten from recent SDK)\r\n3. Block checkin if size has increased more than a non trivial amount (this is the tricky part, we probably don't want to block adding new code - that should be won back in a separate effort - but we do want to block new interdependencies which may have been inadvertently created)\r\n\r\nWe may not have such representative apps today, but we can start with Hello World while we figure out what they should be and create/obtain them.\r\n\r\ncc @marek-safar @ericstj ","Url":"https://github.com/dotnet/corefx/issues/40029","RelatedDescription":"Open issue \"Use gated checkin to protect trimming wins by linking representative apps and measuring size on disk\" (#40029)"},{"Id":"476947674","IsPullRequest":true,"CreatedAt":"2019-08-05T16:19:42","Actor":"geoffkizer","Number":"40028","RawContent":null,"Title":"[release/3.0] HTTP2: Fix exceptions thrown from SendHeadersAsync to be consistent","State":"open","Body":"Port #39985 to 3.0\r\nFixes #39966\r\n\r\n**Description**\r\nThis ensures we have consistent and correct exception behavior when the server initiates a shutdown  or the connection fails while we are trying to issue new requests on the connection.\r\n\r\n**Customer Impact**\r\nPreviously, unprocessed requests could be incorrectly failed in this case; now they will be correctly retried on a new connection.\r\nPreviously, customers could see an HttpRequestException with no message in the rare case that shutdown occurs before processing any requests (either server-initiated or caused by failure like a bad HTTP2 handshake). Now customers will receive an appropriate exception message in this case.\r\n\r\n**Regression?**\r\nNo\r\n\r\n**Risk**\r\nLow\r\n\r\n@danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/40028","RelatedDescription":"Open PR \"[release/3.0] HTTP2: Fix exceptions thrown from SendHeadersAsync to be consistent\" (#40028)"},{"Id":"476901371","IsPullRequest":false,"CreatedAt":"2019-08-05T14:46:51","Actor":"josundt","Number":"40026","RawContent":null,"Title":"Make JsonStringEnumConverter non-sealed","State":"open","Body":"In our APIs, we serialize most enums as strings (no case conversion) since string enums make APIs more self-explanatory, but for **flag enums** we serialize with the numeric value since strings would prevent bitwise flag enum operations. \r\n\r\nWith NewtonSoft.Json, we accomplished the described serialization behavior by creating our own converter that inherited from NewtonSoft's `StringEnumConverter`.\r\n\r\nThis would have been possible and even easier with System.Text.Json, if only the `JsonStringEnumConverter` class was not **sealed**.\r\n\r\nIf it was not sealed, I could have done this simply by overriding the `CanConvert` method like below:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Text.Json;\r\nusing System.Text.Json.Serialization;\r\n\r\nnamespace MyNamespace\r\n{\r\n    public class JsonStringEnumNumericFlagConverter : JsonStringEnumConverter\r\n    {\r\n        public JsonStringEnumNumericFlagConverter()\r\n            : base() {}\r\n\r\n        public JsonStringEnumNumericFlagConverter(JsonNamingPolicy namingPolicy = null, bool allowIntegerValues = true)\r\n            : base(namingPolicy, allowIntegerValues) {}\r\n\r\n        public override bool CanConvert(Type typeToConvert)\r\n        {\r\n            return typeToConvert.IsEnum\r\n                && typeToConvert.GetCustomAttributes(typeof(FlagsAttribute), false).Length == 0;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nCan you please make this extensibility point available (\"un-sealing\" the class)?","Url":"https://github.com/dotnet/corefx/issues/40026","RelatedDescription":"Open issue \"Make JsonStringEnumConverter non-sealed\" (#40026)"},{"Id":"476841231","IsPullRequest":true,"CreatedAt":"2019-08-05T13:44:59","Actor":"dotnet-maestro[bot]","Number":"40024","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19404.5\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19404.5\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 3:02 PM\r\n- **Commit**: 8df22b4642c83e646b4472860442ab1fb11fb3cd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19404.2\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19404.2\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40024","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup dotnet/corefx\" (#40024)"},{"Id":"476839804","IsPullRequest":true,"CreatedAt":"2019-08-05T13:36:23","Actor":"dotnet-maestro[bot]","Number":"40023","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190804.2\r\n- **Date Produced**: 8/4/2019 1:18 PM\r\n- **Commit**: 4b44a3ccc7e4021b31eb22c59ab27e9e9dbc3d24\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19404.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/40023","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#40023)"},{"Id":"477063061","IsPullRequest":false,"CreatedAt":"2019-07-28T19:57:53","Actor":"KubaO","Number":"40041","RawContent":null,"Title":"System.Xml.Serialization needs a dynamic element name for interop","State":"open","Body":"There's some awful XML out there that uses such a multitude of element names that it's infeasible to map them all out in explicit `XMLElement` attributes. Heck, such XML is usually produced with  dynamically generated names. It's a horrible practice - not to be encouraged, but we should be able to simplify the life of people who need to interoperate with such XML.\r\n\r\nIt'd be nice if we could do this:\r\n\r\n```\r\nclass AwfulElement {\r\n  [XmlDynamicElementName]\r\n  string name;\r\n  [XmlText(typeOf(int))]\r\n  int aNumber;\r\n  ...\r\n}\r\n```\r\n\r\nOther names for the proposed attribute may be `XmlInteropDynamicElementName` to signify that this is for interop purposes only, or `XmlAwfulDynamicElementName` to make it abundantly clear what it is :/\r\n\r\n### Rationale\r\n\r\nAs it stands, `XmlSerializer` infrastructure does a very poor job of supporting this - it requires quite a bit of semi-efficient code. Imagine you wanted a bunch of such elements in a collection with the following spec (note that currently it requires having an `INamedElement`, but with the support for the proposed attribute there'd be no need for it):\r\n\r\n```\r\npartial class AwfulCollection<T> : IXmlSerializable, IEnumerable<T> where T : INamedElement, new();\r\n\r\nclass AwfulParent {\r\n  public AwfulCollection<AwfulElement> Elements;\r\n}\r\n\r\n<?xml>\r\n<AwfulParemt>\r\n  <Awful1\\>\r\n  <Awful2\\>\r\n</AwfulParent>\r\n```\r\n\r\nI'll spare the details, but implementing this generic `AwfulCollection` is a pain. With the support for the proposed attribute, the usual array could be used:\r\n\r\n```\r\nclass LessAwfulParent {\r\n  public AwfulElement[] Element;\r\n}\r\n```\r\n\r\n### Spec\r\n\r\nThe attribute definition would be rather basic. A `DefaultElementName` property is a fallback if the name the attribute applies to is null. An exception would be thrown on serialization if both the name-attributed field as well as the default name were empty. On deserialization, the `name` is filled in with the name of the element.\r\n\r\n```\r\n[System.AttributeUsageAttribute(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)]\r\n    public partial class XmlDynamicElementNameAttribute: System.Attribute\r\n    {\r\n        public XmlDynamicElementNameAttribute() { }\r\n        public XmlDynamicElementNameAttribute(string defaultElementName) { }\r\n        public string DefaultElementName { get { throw null; } set { } }\r\n        public System.Xml.Schema.XmlSchemaForm Form { get { throw null; } set { } }\r\n        public string Namespace { get { throw null; } set { } }\r\n    }\r\n```","Url":"https://github.com/dotnet/corefx/issues/40041","RelatedDescription":"Open issue \"System.Xml.Serialization needs a dynamic element name for interop\" (#40041)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"477126162","IsPullRequest":false,"CreatedAt":"2019-08-06T01:42:28","Actor":"kendrahavens","Number":"37751","RawContent":null,"Title":"Change 'Live Code Analysis' text","State":"open","Body":"The 'Live Code Analysis' task center notification is causing confusion as many users believe any errors/delays occurring in Visual Studio are due to this process. This process is actually several low priority background tasks which are often paused when Visual Studio is executing higher priority tasks.\r\n\r\nThe purpose of the notification was only to acknowledge that Visual Studio often executes a variety of tasks in the background that should not interfere with the user experience, but would be detectable if users are monitoring their Task Manager.\r\n\r\n### Current UI\r\n![image](https://user-images.githubusercontent.com/8293542/62505026-d4459300-b7af-11e9-949e-074f9a5b4e06.png)\r\n\r\n### Proposed change\r\n* Show when this state is paused and waiting on higher priority tasks\r\n* Change title to be more generic so users don't believe \"live analysis\" is the culprit by default when experiencing slow UI.\r\n![image](https://user-images.githubusercontent.com/8293542/62504926-7022cf00-b7af-11e9-99d2-164a0d0f0f76.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/37751","RelatedDescription":"Open issue \"Change 'Live Code Analysis' text\" (#37751)"},{"Id":"477125307","IsPullRequest":true,"CreatedAt":"2019-08-06T01:38:03","Actor":"tmat","Number":"37750","RawContent":null,"Title":"Enable EnC tests on Core","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/37750","RelatedDescription":"Open PR \"Enable EnC tests on Core\" (#37750)"},{"Id":"477102925","IsPullRequest":true,"CreatedAt":"2019-08-06T01:30:55","Actor":"dotnet-bot","Number":"37739","RawContent":null,"Title":"Merge release/dev16.2 to release/dev16.3-preview2","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2 into release/dev16.3-preview2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-to-release/dev16.3-preview2\ngit reset --hard upstream/release/dev16.3-preview2\ngit merge upstream/release/dev16.2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-to-release/dev16.3-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37739","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2 to release/dev16.3-preview2\" (#37739)"},{"Id":"477103340","IsPullRequest":true,"CreatedAt":"2019-08-06T01:30:18","Actor":"dotnet-bot","Number":"37745","RawContent":null,"Title":"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37745","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps\" (#37745)"},{"Id":"477103414","IsPullRequest":true,"CreatedAt":"2019-08-06T01:30:07","Actor":"dotnet-bot","Number":"37746","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37746","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#37746)"},{"Id":"477103124","IsPullRequest":true,"CreatedAt":"2019-08-06T01:00:44","Actor":"dotnet-bot","Number":"37741","RawContent":null,"Title":"Merge release/dev16.3-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview2-vs-deps into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37741","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview2-vs-deps to master-vs-deps\" (#37741)"},{"Id":"477113141","IsPullRequest":false,"CreatedAt":"2019-08-06T00:33:42","Actor":"tmat","Number":"37749","RawContent":null,"Title":"Failed assertions when declaring ref variables in Immediate Window","State":"open","Body":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/62503003-1b7b5600-b7a7-11e9-8943-d17537536d42.png)\r\n\r\n**Steps to Reproduce**:\r\nStep into a method:\r\n\r\n```C#\r\n    static void Main()\r\n    {\r\n        var a = new int[1];\r\n        ref readonly var x = ref F(a);\r\n    }\r\n```\r\n\r\nType \r\n```C#\r\nref readonly var z = ref x;\r\n```\r\n\r\nto Immediate Window.\r\n\r\n**Expected Behavior**:\r\n\r\nNo assert.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\n---------------------------\r\nAssertion Failed: Abort=Quit, Retry=Debug, Ignore=Continue\r\n---------------------------\r\nundeclared local Local System.Int32 z\r\n\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.LocalsScanner.CheckDeclared(LocalSymbol local)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundNode.LocalsScanner.VisitPseudoVariable(BoundPseudoVariable node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundPseudoVariable.Accept(BoundTreeVisitor visitor)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalkerWithStackGuard.Visit(BoundNode node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeWalker.VisitAssignmentOperator(BoundAssignmentOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/37749","RelatedDescription":"Open issue \"Failed assertions when declaring ref variables in Immediate Window\" (#37749)"},{"Id":"477110084","IsPullRequest":true,"CreatedAt":"2019-08-06T00:17:57","Actor":"genlu","Number":"37748","RawContent":null,"Title":"Exclude documents we can't change from referenced documents for chang…","State":"open","Body":"…e namespace\r\n\r\n#37521","Url":"https://github.com/dotnet/roslyn/pull/37748","RelatedDescription":"Open PR \"Exclude documents we can't change from referenced documents for chang…\" (#37748)"},{"Id":"477103594","IsPullRequest":true,"CreatedAt":"2019-08-05T23:45:15","Actor":"genlu","Number":"37747","RawContent":null,"Title":"Revert \"Full-ngen ResultProvider\"","State":"open","Body":"Reverts dotnet/roslyn#37186\r\n\r\nNow that the debugger test is fixed, partial ngen EE ResultProvider again.\r\n\r\nFYI @vatsalyaagrawal ","Url":"https://github.com/dotnet/roslyn/pull/37747","RelatedDescription":"Open PR \"Revert \"Full-ngen ResultProvider\"\" (#37747)"},{"Id":"477103311","IsPullRequest":true,"CreatedAt":"2019-08-05T23:43:49","Actor":"dotnet-bot","Number":"37744","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37744","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#37744)"},{"Id":"477103263","IsPullRequest":true,"CreatedAt":"2019-08-05T23:43:30","Actor":"dotnet-bot","Number":"37743","RawContent":null,"Title":"Merge release/dev16.2 to release/dev16.2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.2 into release/dev16.2-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-to-release/dev16.2-vs-deps\ngit reset --hard upstream/release/dev16.2-vs-deps\ngit merge upstream/release/dev16.2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-to-release/dev16.2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37743","RelatedDescription":"Open PR \"Merge release/dev16.2 to release/dev16.2-vs-deps\" (#37743)"},{"Id":"477103146","IsPullRequest":true,"CreatedAt":"2019-08-05T23:42:55","Actor":"dotnet-bot","Number":"37742","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.4-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.4-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37742","RelatedDescription":"Open PR \"Merge master-vs-deps to release/dev16.4-preview1-vs-deps\" (#37742)"},{"Id":"477102980","IsPullRequest":true,"CreatedAt":"2019-08-05T23:42:08","Actor":"dotnet-bot","Number":"37740","RawContent":null,"Title":"Merge master to release/dev16.4-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.4-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.4-preview1\ngit reset --hard upstream/release/dev16.4-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.4-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37740","RelatedDescription":"Open PR \"Merge master to release/dev16.4-preview1\" (#37740)"},{"Id":"477102921","IsPullRequest":false,"CreatedAt":"2019-08-05T23:41:53","Actor":"kendrahavens","Number":"37738","RawContent":null,"Title":"Generated code added at cursor instead of end of file, visual basic","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 Version 16.3 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n* In Visual Basic winforms projects you can generate the code for control events by selecting them from the right-hand navbar. (Note: I do not believe this option is available in C#)\r\n![image](https://user-images.githubusercontent.com/8293542/62501286-000c4d00-b79f-11e9-8a1d-93eb7642dd9f.png)\r\n\r\n**Expected Behavior**:\r\n* Add code where cursor is in the document.\r\n\r\n**Actual Behavior**:\r\n* It adds the selected event control to the file at the bottom.\r\n![image](https://user-images.githubusercontent.com/8293542/62501319-321daf00-b79f-11e9-9ec1-fed3a240c7e5.png)\r\n\r\nRelated undesired behavior when Regions are present:\r\nhttps://github.com/dotnet/roslyn/issues/37339\r\n\r\n**Suggestion**\r\n> holding shift or Alt key while selecting the event from the drop down, or an option","Url":"https://github.com/dotnet/roslyn/issues/37738","RelatedDescription":"Open issue \"Generated code added at cursor instead of end of file, visual basic\" (#37738)"},{"Id":"476978005","IsPullRequest":true,"CreatedAt":"2019-08-05T23:37:46","Actor":"JoeRobich","Number":"37723","RawContent":null,"Title":"Update LanguageServices dependencies","State":"closed","Body":"Restore Microsoft.CodeAnalysis.InteractiveHost the private assets attribute that was added in https://github.com/dotnet/roslyn/pull/34728\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/37296 & https://github.com/dotnet/roslyn/issues/36056#issuecomment-518046714","Url":"https://github.com/dotnet/roslyn/pull/37723","RelatedDescription":"Closed or merged PR \"Update LanguageServices dependencies\" (#37723)"},{"Id":"477056587","IsPullRequest":true,"CreatedAt":"2019-08-05T23:00:24","Actor":"dotnet-bot","Number":"37730","RawContent":null,"Title":"Merge release/dev16.3-preview2 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview2 into master.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.3-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37730","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview2 to master\" (#37730)"},{"Id":"477056645","IsPullRequest":true,"CreatedAt":"2019-08-05T23:00:13","Actor":"dotnet-bot","Number":"37731","RawContent":null,"Title":"Merge master to release/dev16.4-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.4-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.4-preview1\ngit reset --hard upstream/release/dev16.4-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.4-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37731","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.4-preview1\" (#37731)"},{"Id":"477057210","IsPullRequest":true,"CreatedAt":"2019-08-05T22:59:58","Actor":"dotnet-bot","Number":"37733","RawContent":null,"Title":"Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview2 into release/dev16.3-preview2-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps\ngit reset --hard upstream/release/dev16.3-preview2-vs-deps\ngit merge upstream/release/dev16.3-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview2-to-release/dev16.3-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37733","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview2 to release/dev16.3-preview2-vs-deps\" (#37733)"},{"Id":"477057251","IsPullRequest":true,"CreatedAt":"2019-08-05T22:59:48","Actor":"dotnet-bot","Number":"37734","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37734","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#37734)"},{"Id":"477057307","IsPullRequest":true,"CreatedAt":"2019-08-05T22:59:38","Actor":"dotnet-bot","Number":"37735","RawContent":null,"Title":"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-preview1 into release/dev16.4-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps\ngit reset --hard upstream/release/dev16.4-preview1-vs-deps\ngit merge upstream/release/dev16.4-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-preview1-to-release/dev16.4-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37735","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-preview1 to release/dev16.4-preview1-vs-deps\" (#37735)"},{"Id":"477057423","IsPullRequest":true,"CreatedAt":"2019-08-05T22:30:07","Actor":"dotnet-bot","Number":"37736","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37736","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#37736)"},{"Id":"477084859","IsPullRequest":false,"CreatedAt":"2019-08-05T22:26:21","Actor":"agocke","Number":"37737","RawContent":null,"Title":"ErrorLogger converts relative paths to incorrect URIs","State":"open","Body":"> Looking at it in the debugger, the problem is that [this code](https://github.com/dotnet/roslyn/blob/548db2b498394680f4384a5c59125037312f1a56/src/Compilers/Core/Portable/CommandLine/ErrorLogger.cs#L143) in Roslyn creates a System.Uri for the path, and URIs have different path normalization rules than paths (intentionally—see dotnet/corefx#31524).\r\n\r\n> That transforms the legal path\r\n\r\n> `S:\\VS\\src\\vset\\Agile\\TestPlatform\\sdk\\ObjectModel\\cs\\\\..\\DataCollectorSettings.cs`\r\n\r\n> into\r\n\r\n> `file:///S:/VS/src/vset/Agile/TestPlatform/sdk/ObjectModel/cs/DataCollectorSettings.cs`\r\n\r\n> which is also legal, but doesn’t point to the same place.\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/37737","RelatedDescription":"Open issue \"ErrorLogger converts relative paths to incorrect URIs\" (#37737)"},{"Id":"477057166","IsPullRequest":true,"CreatedAt":"2019-08-05T21:02:53","Actor":"dotnet-bot","Number":"37732","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/37732","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#37732)"},{"Id":"477041403","IsPullRequest":true,"CreatedAt":"2019-08-05T20:59:30","Actor":"JoeRobich","Number":"37727","RawContent":null,"Title":"Update signing cert used for EE.ResultProvider - 16.3 P2","State":"closed","Body":"duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.3 preview2 branch","Url":"https://github.com/dotnet/roslyn/pull/37727","RelatedDescription":"Closed or merged PR \"Update signing cert used for EE.ResultProvider - 16.3 P2\" (#37727)"},{"Id":"477041434","IsPullRequest":true,"CreatedAt":"2019-08-05T20:59:12","Actor":"JoeRobich","Number":"37729","RawContent":null,"Title":"Update signing cert used for EE.ResultProvider - 16.4 P1","State":"closed","Body":"duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.4 preview1 branch","Url":"https://github.com/dotnet/roslyn/pull/37729","RelatedDescription":"Closed or merged PR \"Update signing cert used for EE.ResultProvider - 16.4 P1\" (#37729)"},{"Id":"477041415","IsPullRequest":true,"CreatedAt":"2019-08-05T20:59:00","Actor":"JoeRobich","Number":"37728","RawContent":null,"Title":"Update signing cert used for EE.ResultProvider - 16.3 P3","State":"closed","Body":"duplicate of https://github.com/dotnet/roslyn/pull/37683 for the 16.3 preview3 branch","Url":"https://github.com/dotnet/roslyn/pull/37728","RelatedDescription":"Closed or merged PR \"Update signing cert used for EE.ResultProvider - 16.3 P3\" (#37728)"},{"Id":"477017017","IsPullRequest":true,"CreatedAt":"2019-08-05T19:19:55","Actor":"333fred","Number":"37726","RawContent":null,"Title":"Explicitly call BindExpression in GetSpeculativeSymbolInfo, instead o…","State":"open","Body":"…f Bind, to be sure that we don't return type expression info instead of actual expression info.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/37659.\r\n/cc @ivanbasov.","Url":"https://github.com/dotnet/roslyn/pull/37726","RelatedDescription":"Open PR \"Explicitly call BindExpression in GetSpeculativeSymbolInfo, instead o…\" (#37726)"},{"Id":"477015729","IsPullRequest":false,"CreatedAt":"2019-08-05T19:16:23","Actor":"agocke","Number":"37725","RawContent":null,"Title":"No specification for how to treat restricted types in async/iterator methods","State":"open","Body":"Right now there's no rule on how restricted types (like ref structs) should behave in async and iterator methods. There are clearly illegal cases: pending restricted types over `await` and `yield` is not possible to implement, so it must be illegal. \r\n\r\nHowever, it's unclear how this should behave if restricted types are *not* pended over a branch. It's possible to allow this behavior, but it becomes an obtuse and delicate balance -- all locals of restricted types are also currently disallowed because it hurts debuggibility, but not all expressions of restricted type are disallowed. While using the result of a restricted method as an expression may be safe, it seems reasonable that a user would assume that they could take the same code and introduce a local variable for the restricted type. This then becomes an error. Moreover, we may be allowing users to veer into very dangerous design territory, as minor refactorings can easily cause the code to pend the expression over an `await`, producing an error.\r\n\r\nIt seems the compiler already allows expressions of restricted types in async methods, as long as they don't pend the value over an `await`. We should decide if we like this behavior, or if we should treat this as a bug and produce a breaking change for code of this form.","Url":"https://github.com/dotnet/roslyn/issues/37725","RelatedDescription":"Open issue \"No specification for how to treat restricted types in async/iterator methods\" (#37725)"},{"Id":"477009941","IsPullRequest":false,"CreatedAt":"2019-08-05T19:00:45","Actor":"vsfeedback","Number":"37724","RawContent":null,"Title":"Remote Debugging C# & ability to view windows forms","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/676503/remote-debugging-c-ability-to-view-windows-forms.html)._\n\n---\nAbility to run and build applications remotely, even if simply downloading a copy of the built file to the local machnie from the host machine.\n\nAbility to design and view windows forms would help out quite a bit as well.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 8/5/2019, 00:35 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37724","RelatedDescription":"Open issue \"Remote Debugging C# & ability to view windows forms\" (#37724)"},{"Id":"476974010","IsPullRequest":false,"CreatedAt":"2019-08-05T17:27:20","Actor":"vsfeedback","Number":"37722","RawContent":null,"Title":"VS 15.9 - UriFormatException","State":"open","Body":"Marked Priority 1 in DC \r\n\r\n_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/383068/vs-159-uriformatexception.html)._\r\n\r\n---\r\nWhile typing in the IDE I got the following error: &quot;An exception has been encountered. This may be caused by an extension. You can get more information from the ActivityLog.xml&quot;.\r\n\r\nHere is the exception and stacktrace at the bottom of that file:\r\n\r\n```\r\nSystem.UriFormatException: Invalid URI: The Uri string is too long.\r\n   at System.UriHelper.EscapeString(String input, Int32 start, Int32 end, Char[] dest, Int32&amp; destPos, Boolean isUriString, Char force1, Char force2, Char rsvd)\r\n   at System.Uri.EscapeDataString(String stringToEscape)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.Utilities.BrowserHelper.CreateBingQueryUri(String errorCode, String title, String language, String projectType)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.Utilities.BrowserHelper.CreateBingQueryUri(DiagnosticData diagnostic)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.VisualStudioBaseDiagnosticListTable.GetHelpLinkToolTipText(DiagnosticData item)\r\n   at Microsoft.VisualStudio.LanguageServices.Implementation.TableDataSource.VisualStudioBaseDiagnosticListTable.LiveTableDataSource.TableEntriesSnapshot.TryGetValue(Int32 index, String columnName, Object&amp; content)\r\n   at Microsoft.VisualStudio.Shell.TableControl.Implementation.SnapshotTableEntryViewModel.TryGetValue(String columnName, Object&amp; content)\r\n```\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Fiona Niu[MSFT] on 11/14/2018, 11:12 PM: \r\n\r\n<p>Thank you for your feedback! In order for us to investigate this further, could you please provide repro steps, a more detailed description of the faulty behavior and the actions you were taking when the issue appeared to help us better understand this scenario?</p><p> </p><p>We look forward to hearing from you!</p>\r\n\r\n#### Fiona Niu[MSFT] on 11/22/2018, 10:39 PM: \r\n\r\n<p>Thank you for your feedback! Unfortunately, right now we don't have enough information to investigate this issue and find a solution. If this is still an issue for you, please update to our latest version. If you are still able to repro it, please provide us with more info!</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/37722","RelatedDescription":"Open issue \"VS 15.9 - UriFormatException\" (#37722)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"476914604","IsPullRequest":true,"CreatedAt":"2019-08-06T02:41:03","Actor":"Dotnet-GitSync-Bot","Number":"7669","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7669","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7669)"},{"Id":"476583874","IsPullRequest":true,"CreatedAt":"2019-08-05T08:11:44","Actor":"MichalStrehovsky","Number":"7665","RawContent":null,"Title":"Fix stack traces when reflection is disabled","State":"closed","Body":"This enables stack trace metadata when `IlcDisableReflection == true` and `IlcGenerateStackTraceData == true`. Enabling stack trace metadata had no effect before this change.\r\n\r\nThis also has a side effect of always generating the metadata blob. This is necessary because `ModuleList` tends to ignore modules that don't have the embedded metadata blob (https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/System.Private.TypeLoader/src/Internal/Runtime/TypeLoader/ModuleList.cs#L713-L720). Emitting an empty blob fixes the bug where delegate interop didn't work with reflection disabled.","Url":"https://github.com/dotnet/corert/pull/7665","RelatedDescription":"Closed or merged PR \"Fix stack traces when reflection is disabled\" (#7665)"},{"Id":"474043889","IsPullRequest":true,"CreatedAt":"2019-08-05T07:41:06","Actor":"MichalStrehovsky","Number":"7659","RawContent":null,"Title":"Prevent computing bad layout","State":"closed","Body":"Value type fields that contain GC pointers need to start at pointer boundaries.\r\n\r\nCoreCLR does this check a bit differently (it technically allows unaligned fields, provided the GC pointer inside the valuetype ends up being aligned with respect to the beginning of the type, but in reality, I don't think it's possible to end up in such situation - the layout of the field type itself would end up being invalid).\r\n\r\nFixes one of the CPAOT failures.","Url":"https://github.com/dotnet/corert/pull/7659","RelatedDescription":"Closed or merged PR \"Prevent computing bad layout\" (#7659)"},{"Id":"476665808","IsPullRequest":true,"CreatedAt":"2019-08-05T05:39:28","Actor":"jkotas","Number":"7668","RawContent":null,"Title":"Add link to CoreRT Future issue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7668","RelatedDescription":"Closed or merged PR \"Add link to CoreRT Future issue\" (#7668)"},{"Id":"476583894","IsPullRequest":true,"CreatedAt":"2019-08-04T19:18:34","Actor":"MichalStrehovsky","Number":"7666","RawContent":null,"Title":"Add a note about `strip` program","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7666","RelatedDescription":"Closed or merged PR \"Add a note about `strip` program\" (#7666)"},{"Id":"476583904","IsPullRequest":true,"CreatedAt":"2019-08-04T19:07:53","Actor":"MichalStrehovsky","Number":"7667","RawContent":null,"Title":"Add a doc on debugging CoreRT programs","State":"open","Body":"A couple useful tips.","Url":"https://github.com/dotnet/corert/pull/7667","RelatedDescription":"Open PR \"Add a doc on debugging CoreRT programs\" (#7667)"},{"Id":"476442652","IsPullRequest":false,"CreatedAt":"2019-08-03T13:05:03","Actor":"shaggygi","Number":"7664","RawContent":null,"Title":"[Question] Clean up milestones","State":"closed","Body":"Not a biggie, but could older milestones be closed?  See [September](https://github.com/dotnet/corert/milestone/15) and [October](https://github.com/dotnet/corert/milestone/14).","Url":"https://github.com/dotnet/corert/issues/7664","RelatedDescription":"Closed issue \"[Question] Clean up milestones\" (#7664)"},{"Id":"476147096","IsPullRequest":true,"CreatedAt":"2019-08-02T13:36:07","Actor":"Dotnet-GitSync-Bot","Number":"7663","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7663","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7663)"},{"Id":"475993675","IsPullRequest":true,"CreatedAt":"2019-08-02T12:03:22","Actor":"Dotnet-GitSync-Bot","Number":"7662","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @josalem","Url":"https://github.com/dotnet/corert/pull/7662","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7662)"},{"Id":"475915591","IsPullRequest":true,"CreatedAt":"2019-08-02T04:42:37","Actor":"Dotnet-GitSync-Bot","Number":"7661","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @sywhang","Url":"https://github.com/dotnet/corert/pull/7661","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7661)"},{"Id":"475661957","IsPullRequest":false,"CreatedAt":"2019-08-01T13:06:06","Actor":"kvittokonito","Number":"7660","RawContent":null,"Title":"Inconsistent usage of rd.xml on referenced projects","State":"closed","Body":"When AOT compiling projects with dependent referenced projects via CoreRT, the rd.xml of the referenced child dependent projects is read used but that feature seems to be inconsistent at best.\r\nSupported directives are properly parsed and used but unsupported directives that would error on the root project such as \"<Namespace />\" do not throw an error and instead are ignored without warning.\r\n\r\nFor example, the following directive will produce an unsupported error when it is included in the rd.xml of the root project:\r\n`<Namespace Name=\"System.Collections.Generic\" Dynamic=\"Required All\" />`\r\n\r\nHowever, this directive will simply be silently ignored if it is included in the rd.xml of a project referenced via \"<ProjectReference />\" on the csproj of the root project.","Url":"https://github.com/dotnet/corert/issues/7660","RelatedDescription":"Closed issue \"Inconsistent usage of rd.xml on referenced projects\" (#7660)"},{"Id":"473658285","IsPullRequest":true,"CreatedAt":"2019-07-29T06:41:45","Actor":"MichalStrehovsky","Number":"7657","RawContent":null,"Title":"Split interop manager to usage- and analysis-based","State":"closed","Body":"This puts interop manager on the same plan as metadata manager. The reason we need two managers is inlining: to determine what structs/delegates need marshaling data, we look at what methods got compiled. This works great as long as there's no inlining of these methods. If we inline a method used as such marker, we lose track of what needs interop data.\r\n\r\nWith this split, we can collect usage information during the IL scanning phase, and for codegen phase, we can reuse the information from the scanner.\r\n\r\nCommit 4c1058a removes a bunch of workarounds that we had in place because of this.\r\n\r\nThe commits mostly make sense (might help reviewing this big change), although I'm planning to squash them anyway. The `Don't make so much marshalling data` commit undoes something I did wrong in the `Track interop dependencies in the dependency graph` commit.\r\n\r\nFixes #6063.","Url":"https://github.com/dotnet/corert/pull/7657","RelatedDescription":"Closed or merged PR \"Split interop manager to usage- and analysis-based\" (#7657)"},{"Id":"473677246","IsPullRequest":true,"CreatedAt":"2019-07-27T21:00:42","Actor":"Suchiman","Number":"7658","RawContent":null,"Title":"Add support for embedding and processing embedded stacktrace line infos","State":"open","Body":"As discussed @MichalStrehovsky \r\n**TODO**:\r\n- configurability\r\n- compression\r\n- disabling reflection fallback\r\n\r\nUncompressed numbers for sizes:\r\nFor a debug Hello World application (which includes debug information for corelib).\r\n\r\n| Section | bytes | count |\r\n| --- | --- | --- |\r\n| rvaTokenMap | 127.788 | 10.648 |\r\n| sequencePoints | 1.012.608 | 111.737 |\r\n| stringHeap | 70.160 | 767 |","Url":"https://github.com/dotnet/corert/pull/7658","RelatedDescription":"Open PR \"Add support for embedding and processing embedded stacktrace line infos\" (#7658)"},{"Id":"470798920","IsPullRequest":false,"CreatedAt":"2019-07-27T17:34:25","Actor":"davidfowl","Number":"7640","RawContent":null,"Title":"Latest WebAPI broken","State":"closed","Body":"I haven't looked into it as yet but we made some changes that seem to result in failures after compiling with the IL compiler.\r\n\r\n```\r\nUnhandled Exception: System.PlatformNotSupportedException: Operation is not supported on this platform.\r\n   at System.Reflection.Runtime.Assemblies.RuntimeAssembly.get_CodeBase() + 0x24\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute.GetRelatedAssemblies(Assembly, Boolean, Func`2, Func`2) + 0x50\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.<GetAsemblyClosure>d__9.MoveNext() + 0x8d\r\n   at System.Linq.Enumerable.ConcatIterator`1.MoveNext() + 0x62\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateDefaultParts(String) + 0x16f\r\n   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.GetApplicationPartManager(IServiceCollection) + 0x81\r\n   at Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(IServiceCollection) + 0x17\r\n   at Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersCore(IServiceCollection) + 0xa\r\n   at Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(IServiceCollection) + 0x11\r\n   at WebApplication2.Startup.ConfigureServices(IServiceCollection) + 0xc\r\n   at WebApplication2!<BaseAddress>+0xcd7ccd\r\n   at System.InvokeUtils.CallDynamicInvokeMethod(Object, IntPtr, Object, IntPtr, IntPtr, Object, Object[], BinderBundle, Boolean, Boolean, Boolean) + 0x218\r\n   at Internal.Reflection.Execution.MethodInvokers.InstanceMethodInvoker.Invoke(Object, Object[], BinderBundle, Boolean) + 0x7f\r\n   at Internal.Reflection.Core.Execution.MethodInvoker.Invoke(Object, Object[], Binder, BindingFlags, CultureInfo) + 0x46\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo) + 0x58\r\n   at Microsoft.AspNetCore.Hosting.ConfigureServicesBuilder.InvokeCore(Object, IServiceCollection) + 0xf6\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(Type, HostBuilderContext, IServiceCollection) + 0x198\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass12_0.<UseStartup>b__0(HostBuilderContext, IServiceCollection) + 0xa1\r\n   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider() + 0x19e\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build() + 0x3a\r\n   at WebApplication2.Program.Main(String[]) + 0x1b\r\n   at WebApplication2!<BaseAddress>+0xc04c30\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7640","RelatedDescription":"Closed issue \"Latest WebAPI broken\" (#7640)"},{"Id":"472235106","IsPullRequest":false,"CreatedAt":"2019-07-27T17:10:19","Actor":"FrancoisM","Number":"7648","RawContent":null,"Title":"Build error: nutc_driver.exe returned exit code 1 with VS2019. No others errors. Ok on VS2017","State":"closed","Body":"My project has built on Azure Pipelines hosted agent for months.\r\nI switched from VS2017 to VS2019. Now it fails with \"nutc_driver.exe returned exit code 1\".\r\n\r\nI read about similar issue saying to use `<Use64BitCompiler>true</Use64BitCompiler>`. I did yet the problem remains. Other issues mention \"Out of memory\" or other errors. In my case, the log doesn't have any other errors but the one I report.\r\n\r\nI tried to uncheck \"native compilation\" but then the build took 2min (instead of over an hour), the app was about 30mb (vs 100mb usually) and would'nt install.\r\n","Url":"https://github.com/dotnet/corert/issues/7648","RelatedDescription":"Closed issue \"Build error: nutc_driver.exe returned exit code 1 with VS2019. No others errors. Ok on VS2017\" (#7648)"},{"Id":"473484940","IsPullRequest":true,"CreatedAt":"2019-07-27T09:46:44","Actor":"MichalStrehovsky","Number":"7656","RawContent":null,"Title":"Use a single ReadyToRunHelper enum","State":"closed","Body":"When I was troubleshooting the double/float helpers issue, it was really hairy because we have two copies or ReadyToRunHelper. We only need one.\r\n\r\nWhen Jan initially added the ILCompiler version in #129, it already came with `Keep in sync with https://github.com/dotnet/coreclr/blob/master/src/inc/readytorun.h`. We then added a couple helpers that don't exist in CoreCLR R2R because it was convenient, but we do want these numbers to match.\r\n\r\nI extracted the AOT specific ones to the end of the file, realizing that the ReadyToRun mode is trying to handle things it shouldn't. I deleted those.","Url":"https://github.com/dotnet/corert/pull/7656","RelatedDescription":"Closed or merged PR \"Use a single ReadyToRunHelper enum\" (#7656)"},{"Id":"473380499","IsPullRequest":true,"CreatedAt":"2019-07-26T19:08:27","Actor":"MichalStrehovsky","Number":"7653","RawContent":null,"Title":"Delete dead code in ILCompiler.ReadyToRun","State":"closed","Body":"Not sure how much of this is earmarked for the future (I left a couple that I found obvious), and how much is just leftovers from old designs that we should delete.","Url":"https://github.com/dotnet/corert/pull/7653","RelatedDescription":"Closed or merged PR \"Delete dead code in ILCompiler.ReadyToRun\" (#7653)"},{"Id":"473452930","IsPullRequest":true,"CreatedAt":"2019-07-26T19:07:42","Actor":"Dotnet-GitSync-Bot","Number":"7654","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7654","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7654)"},{"Id":"473357025","IsPullRequest":true,"CreatedAt":"2019-07-26T19:07:33","Actor":"MichalStrehovsky","Number":"7652","RawContent":null,"Title":"Add R2R implementation of getMethodSync","State":"closed","Body":"The R2R implementation is to just throw.\r\n\r\nThis doesn't throw in crossgen, but it takes an NGen-specific code path and _then_ throws when we deal with `CORINFO_HELP_MON_ENTER_STATIC`/`CORINFO_HELP_MON_EXIT_STATIC` (that the result of `getMethodSync` is the parameter for).","Url":"https://github.com/dotnet/corert/pull/7652","RelatedDescription":"Closed or merged PR \"Add R2R implementation of getMethodSync\" (#7652)"},{"Id":"473477763","IsPullRequest":true,"CreatedAt":"2019-07-26T18:15:15","Actor":"trylek","Number":"7655","RawContent":null,"Title":"One more fix for SuperILC OOM","State":"open","Body":"In my previous change I fixed OOM's caused by copying too long\r\nexecution log files but I forgot to apply the same fix to compilation\r\nlogs. This additional delta does just that.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7655","RelatedDescription":"Open PR \"One more fix for SuperILC OOM\" (#7655)"},{"Id":"473264674","IsPullRequest":true,"CreatedAt":"2019-07-26T11:03:46","Actor":"trylek","Number":"7651","RawContent":null,"Title":"Fork RyuJit and ReadyToRun version of getGSCookie","State":"closed","Body":"In CPAOT, we need a CoreCLR-compatible version of the GS cookie\r\nusing the appropriate R2R helper, not some hardcoded constant\r\npresumably used by the full AOT CoreRT runtime.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7651","RelatedDescription":"Closed or merged PR \"Fork RyuJit and ReadyToRun version of getGSCookie\" (#7651)"},{"Id":"473050887","IsPullRequest":true,"CreatedAt":"2019-07-26T06:02:22","Actor":"MichalStrehovsky","Number":"7650","RawContent":null,"Title":"Revert \"Fix enumeration value of R2R helpers [Dbl|Flt][Rem|Round]\"","State":"closed","Body":"Reverts dotnet/corert#6779\r\n\r\nThis is so that the enum matches CoreCLR readytorun.h.","Url":"https://github.com/dotnet/corert/pull/7650","RelatedDescription":"Closed or merged PR \"Revert \"Fix enumeration value of R2R helpers [Dbl|Flt][Rem|Round]\"\" (#7650)"},{"Id":"472326257","IsPullRequest":true,"CreatedAt":"2019-07-25T07:51:34","Actor":"Dotnet-GitSync-Bot","Number":"7649","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7649","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7649)"},{"Id":"472004492","IsPullRequest":true,"CreatedAt":"2019-07-24T02:07:47","Actor":"Dotnet-GitSync-Bot","Number":"7647","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7647","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7647)"},{"Id":"471969859","IsPullRequest":true,"CreatedAt":"2019-07-24T02:00:21","Actor":"nattress","Number":"7646","RawContent":null,"Title":"Add Linux / Mac ReadyToRun CI testing","State":"closed","Body":"* Remove Windows_NT only condition on CI R2R test leg\r\n* Use Top200 suite of CoreCLR tests since they reliably pass in R2R mode","Url":"https://github.com/dotnet/corert/pull/7646","RelatedDescription":"Closed or merged PR \"Add Linux / Mac ReadyToRun CI testing\" (#7646)"},{"Id":"471965978","IsPullRequest":true,"CreatedAt":"2019-07-23T21:35:43","Actor":"trylek","Number":"7645","RawContent":null,"Title":"CoreCLR Pri#1 fixes for the IsManagedSequential method","State":"open","Body":"This change fixes all remaining differences between CPAOT\r\nand Crossgen for the CoreCLR Pri#1 tests w.r.t. my recently\r\nimplemented IsManagedSequential instrumentation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7645","RelatedDescription":"Open PR \"CoreCLR Pri#1 fixes for the IsManagedSequential method\" (#7645)"},{"Id":"471750238","IsPullRequest":true,"CreatedAt":"2019-07-23T21:09:18","Actor":"trylek","Number":"7644","RawContent":null,"Title":"Mechanical move of IsManagedSequentialType to R2R field algorithm","State":"closed","Body":"Based on JanK's suggestion I'm moving IsManagedSequentialType\r\nto ReadyToRunMetadataFieldLayoutAlgorithm. In this change I'm not\r\nmaking any semantic changes to the method; I'll send out a subsequent\r\nPR for an additional delta fixing discrepancies in the method\r\nas discovered by the instrumentation I recently implemented.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7644","RelatedDescription":"Closed or merged PR \"Mechanical move of IsManagedSequentialType to R2R field algorithm\" (#7644)"},{"Id":"471340295","IsPullRequest":false,"CreatedAt":"2019-07-22T21:15:59","Actor":"nattress","Number":"7643","RawContent":null,"Title":"Compile static constructors for R2R","State":"open","Body":"CPAOT doesn't compile static constructors which has a runtime JIT cost. We should measure with them enabled (rooting them all for compilation) to assess if they give a startup benefit worth the cost of carrying them in the binary.","Url":"https://github.com/dotnet/corert/issues/7643","RelatedDescription":"Open issue \"Compile static constructors for R2R\" (#7643)"},{"Id":"471311302","IsPullRequest":false,"CreatedAt":"2019-07-22T20:29:12","Actor":"nattress","Number":"7642","RawContent":null,"Title":"Access checks in JIT interface methods","State":"open","Body":"The final section of `CEEInfo::getCallInfo` (https://github.com/dotnet/coreclr/blob/5f93d3b1c48ba6916d5f31d79cb7c17d564eecef/src/vm/jitinterface.cpp#L5597) deals with access checks validating the declarative authority of a given caller to call the callee. This is currently missing in the CPAOT compiler. Similar checks needed in `CEEInfo::getFieldInfo`.","Url":"https://github.com/dotnet/corert/issues/7642","RelatedDescription":"Open issue \"Access checks in JIT interface methods\" (#7642)"},{"Id":"471307755","IsPullRequest":false,"CreatedAt":"2019-07-22T20:23:51","Actor":"nattress","Number":"7641","RawContent":null,"Title":"Type Layout Checks","State":"open","Body":"To protect system resiliency, Crossgen emits method pre-codes (code that is guaranteed to run once before a given method is executed for the first time) that checks various properties of dependent types outside the version bubble that affect codegen of that particular method. This functionality is currently missing and needs porting into CPAOT.","Url":"https://github.com/dotnet/corert/issues/7641","RelatedDescription":"Open issue \"Type Layout Checks\" (#7641)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"477060930","IsPullRequest":true,"CreatedAt":"2019-08-06T03:58:51","Actor":"dotnet-maestro[bot]","Number":"3507","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190805.07\r\n- **Date Produced**: 8/5/2019 9:13 PM\r\n- **Commit**: d01b2fb7bc6bd4911e157fbd51353059a3ba1a6c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28405-07\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3507","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3507)"},{"Id":"477071789","IsPullRequest":true,"CreatedAt":"2019-08-05T23:44:49","Actor":"wli3","Number":"3509","RawContent":null,"Title":"Change the assertion to not to catch the RAR warning","State":"closed","Body":"It is intent to catch the warning from Conflict Resolution.\r\n\r\nContinue investigation on why RAR start to have such warning in https://github.com/dotnet/sdk/issues/3508\r\n\r\n### Description\r\n\r\n The test is blocking any SDK PR. `It_tolerates_newline_in_hint_path` is intended to prevent regression of \"crash in conflict resolution when hintpath has new line\". However, due to a msbuild change, the RAR warning also has the same partial text the test asserts on.\r\n\r\n### Customer Impact\r\n\r\nno\r\n\r\n### Regression?\r\n\r\nno\r\n\r\n### Risk\r\n\r\nLow risk.\r\n\r\n### Test changes in this PR\r\n\r\nN/A","Url":"https://github.com/dotnet/sdk/pull/3509","RelatedDescription":"Closed or merged PR \"Change the assertion to not to catch the RAR warning\" (#3509)"},{"Id":"477085186","IsPullRequest":true,"CreatedAt":"2019-08-05T22:27:34","Actor":"peterhuene","Number":"3511","RawContent":null,"Title":"Fix publishing of applications that specify a full path to the profile.","State":"open","Body":"When an application is published in Visual Studio, the full path to the publish\r\nprofile is passed as the `WebPublishProfileFile` global property.\r\n\r\nBecause the .NET Core SDK now imports the publish profile, this caused every\r\nproject referenced to also import the publish profile during restore. This may\r\nhave unintentional consequences of restoring `netstandard` projects as\r\n`netcoreapp` if a `netcoreapp` TFM is set in the publish profile, for example.\r\n\r\nHowever, during build/publish, the Web SDK is removing `WebPublishProfileFile`\r\nfrom the global properties for project references.  This causes an error due to\r\na potential mismatch between the TFM restored and the TFM being\r\nbuilt/published for dependent projects.\r\n\r\nThe fix is to import the publish profile only when the full path isn't set or\r\nif the project being built is the one being published (i.e. the project to\r\noverride project extensions for).\r\n\r\nFixes aspnet/websdk#604.","Url":"https://github.com/dotnet/sdk/pull/3511","RelatedDescription":"Open PR \"Fix publishing of applications that specify a full path to the profile.\" (#3511)"},{"Id":"477073127","IsPullRequest":false,"CreatedAt":"2019-08-05T21:48:06","Actor":"fadimounir","Number":"3510","RawContent":null,"Title":"Double writes on publish, causes R2R task failure","State":"open","Body":"I don't know if this is related to #3257, but I was able to repro this issue again using the latest Preview9 bits (8e9948a3b768811ca5b3a666ff06207a16be69ec, 3.0.100-preview9-013692).\r\n\r\nHere's the repro:\r\n1) clone https://github.com/aspnet/Benchmarks (commit hash for repro: 3ddf6558ec4d3636dc8fec4f0c142834ffa38bf5)\r\n2) dotnet publish  -f netcoreapp3.0 -r win-x64 -v n src\\BenchmarksServer  /bl\r\n\r\nThere are 3 files double-written:\r\n- Dia2Lib.dll\r\n- TraceReloggerLib.dll\r\n- OSExtensions.dll.\r\n\r\nI'll attach the binlog.\r\n\r\nAlso, this causes the R2R task to fail with errors like this one, if you add /p:PublishReadyToRun=true to the publish command:\r\n```console\r\ne:\\dotnet_preview9\\sdk\\3.0.100-preview9-013692\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(308,28): error MSB4094: \"C:\\Users\\fadim\\.nuget\\packages\\microsoft.diagnostics.tracing.traceevent\\2.0.44\\lib\\netstandard1.6\\OSExtensions.dll;C:\\Users\\fadim\\.nuget\\packages\\microsoft.diagnostics.tracing.traceevent\\2.0.44\\lib\\netstandard2.0\\OSExtensions.dll\" is an invalid value for the \"CompilationEntry\" parameter of the \"RunReadyToRunCompiler\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [D:\\GIT\\Benchmarks\\src\\BenchmarksServer\\BenchmarksServer.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3510","RelatedDescription":"Open issue \"Double writes on publish, causes R2R task failure\" (#3510)"},{"Id":"477070233","IsPullRequest":false,"CreatedAt":"2019-08-05T21:39:19","Actor":"wli3","Number":"3508","RawContent":null,"Title":"Warning from RAR with hint path has extra new line","State":"open","Body":"Given a hint path has extra new line. On full msbuild it will have warning:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Current\\Bin\\Microsoft.Common.CurrentVersion.targets(2106,5): warning MSB3246: Resolved file has a bad image, no metada\r\nta, or is otherwise inaccessible. Illegal characters in path. [C:\\work\\temp\\notNETFrameworkLibrary2\\NETFrameworkLibrary.csproj]\r\n```\r\n\r\n- [ ] Check if 16.2 has the same warning, the message might be different\r\n- [ ] core does not have that error, why?\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Library</OutputType>\r\n    <RestoreAdditionalProjectSources>$(RestoreAdditionalProjectSources);https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json</RestoreAdditionalProjectSources>\r\n    <TargetFramework>net472</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETFramework.ReferenceAssemblies\" Version=\"1.0.0-preview.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.Net.Http\">\r\n      <HintPath>\r\n      C:\\work\\sdk3\\artifacts\\tmp\\Debug\\SimpleNamesWi---6143883E\\NETFrameworkLibrary\\bin\\Debug\\net462\\NETFrameworkLibrary.dll\r\n      </HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3508","RelatedDescription":"Open issue \"Warning from RAR with hint path has extra new line\" (#3508)"},{"Id":"476972296","IsPullRequest":true,"CreatedAt":"2019-08-05T17:23:03","Actor":"jkoritzinsky","Number":"3506","RawContent":null,"Title":"Emit progid information into the CLSIDMap.","State":"open","Body":"This is the SDK-side of the work for https://github.com/dotnet/core-setup/pull/7551. These PRs allow users to activate .NET classes via COM using ProgIDs instead of CLSIDs for languages or platforms that do not support using CLSIDs.\r\n\r\nAdditionally, fixes a bug that would cause loading nested classes via COM to fail to find the type.\r\n\r\nContributes to dotnet/coreclr#25966\r\n\r\nThis PR doesn't need to wait for dotnet/core-setup#7551 to go in since the changes are backward compatible with previous versions of the COM host that don't have ProgID support.\r\n\r\ncc: @nguerrera ","Url":"https://github.com/dotnet/sdk/pull/3506","RelatedDescription":"Open PR \"Emit progid information into the CLSIDMap.\" (#3506)"},{"Id":"476666506","IsPullRequest":true,"CreatedAt":"2019-08-05T05:42:19","Actor":"wli3","Number":"3505","RawContent":null,"Title":"WIP Need apphost in build but do not pack it","State":"open","Body":"fix https://github.com/dotnet/sdk/issues/3023\r\n\r\n### Description\r\n\r\nApphost generation is disabled for dotnet tools to prevent the apphost from being packaged in the package. When debugging a WPF or Winforms project that has PackAsTool set to true, there is no exe generated with appropriate Windows PE bits set, because we disabled it as described above. Instead of disabling apphost generation when PackAsTool=true, SDK should generate it during build, but prevent it from being packaged in the nupkg.\r\n\r\n### Customer Impact\r\n\r\nWhen debugging an WPF or Winforms dotnet tool project (PackAsTool=true) in VS, the user would see the command line instead of the GUI. The app's GUI is not rendered and you get only a blank command prompt.\r\n\r\n### Regression?\r\n\r\nYes. This regressed from .NET Core SDK 3.0.100-preview3 due to https://github.com/dotnet/sdk/commit/3487007c6bf8316ce3c871aadbe75498ab2da7c4\r\n\r\n### Risk\r\n\r\nLow risk.\r\n\r\n### Test changes in this PR\r\n\r\nAdded new unit test coverage to ensure `RunCommand`(which VS debug calls) uses the apphost exe instead of the dll.","Url":"https://github.com/dotnet/sdk/pull/3505","RelatedDescription":"Open PR \"WIP Need apphost in build but do not pack it\" (#3505)"},{"Id":"476589815","IsPullRequest":false,"CreatedAt":"2019-08-04T20:17:24","Actor":"nguerrera","Number":"3504","RawContent":null,"Title":"Defensively set DisableSdkPath=true for non .NET framework VB projects","State":"open","Body":"Generally, this is benign, because we pass VBRuntime which will override the SDK path, but if there is a bug or other misconfiguration, the compiler will try to locate the SDK Path using the current runtime. This causes it to try to use Microsoft.VisualBasic.dll from the .NET framework while building against core, and leads to confounding errors such as \r\n\r\n```\r\nvbc error BC30560: 'User' is ambiguous in the namespace 'Microsoft.VisualBasic.ApplicationServices'. [C:\\Users\\nicholg\\Source\\repos\\WpfControlLibrary2\\WpfControlLibrary2\\WpfControlLibrary2.vbproj]\r\n```\r\n\r\nWithout the fix for https://github.com/dotnet/sdk/issues/3450, you get errors like above with `msbuild` instead of the \"Could not find library Microsoft.VisualBasic.dll\" that was reported for `dotnet bulild`.\r\n\r\nWe should make a defensive change to set DisableSdkPath=true so that the symptom for any failure to find the correct vb runtime is consistently cannot find Microsoft.VisualBasic.dll regardless of which compiler (.NET Core or desktop) is used.\r\n\r\nThis is not a blocking issue, though, as it changes the error symptoms only when the product has other bugs or the project has been misconfigured.\r\n\r\nRelated to https://dev.azure.com/devdiv/DevDiv/_workitems/edit/960757","Url":"https://github.com/dotnet/sdk/issues/3504","RelatedDescription":"Open issue \"Defensively set DisableSdkPath=true for non .NET framework VB projects\" (#3504)"},{"Id":"475397200","IsPullRequest":false,"CreatedAt":"2019-08-03T21:53:55","Actor":"sebastienros","Number":"3496","RawContent":null,"Title":"ResolveAssemblyReference returns 3.0 assemblies when 5.0 is requested","State":"closed","Body":"I have a project where I try to use the latest 5.0 branded aspnet core. I use a `FrameworkReference` update to do so. The machine has the latest sdk (5.0.x) and the latest aspnet core shared runtimes 3.0.x and 5.0.x.\r\n\r\nAt compilation I get this:\r\n\r\n```\r\nStartup.cs(188,21): error CS1705: Assembly 'Microsoft.AspNetCore.Mvc.NewtonsoftJson' with identity 'Microsoft.AspNetCore.Mvc.NewtonsoftJson, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.AspNetCore.Mvc.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.AspNetCore.Mvc.Core' with identity 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' [/tmp/BenchmarksServer/43sztvs0.trd/benchmarks/src/Benchmarks/Benchmarks.csproj]\r\nProgram.cs(117,21): error CS1705: Assembly 'Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv' with identity 'Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' uses 'Microsoft.AspNetCore.Hosting.Abstractions, Version=5.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.AspNetCore.Hosting.Abstractions' with identity 'Microsoft.AspNetCore.Hosting.Abstractions, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' [/tmp/BenchmarksServer/43sztvs0.trd/benchmarks/src/Benchmarks/Benchmarks.csproj]\r\n```\r\n\r\nThe .binlog shows that `ResolveAssemblyReference` is returning these conflicting assemblies where it should instead pick them from the 5.0.x folder.\r\n\r\n[msbuild.binlog.zip](https://github.com/dotnet/sdk/files/3454241/msbuild.binlog.zip)\r\n\r\nRename the file by removing the .zip extension, don't extract it (GH limitation)\r\n","Url":"https://github.com/dotnet/sdk/issues/3496","RelatedDescription":"Closed issue \"ResolveAssemblyReference returns 3.0 assemblies when 5.0 is requested\" (#3496)"},{"Id":"476449692","IsPullRequest":true,"CreatedAt":"2019-08-03T12:59:37","Actor":"dotnet-maestro[bot]","Number":"3503","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3503","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#3503)"},{"Id":"476445375","IsPullRequest":true,"CreatedAt":"2019-08-03T12:04:51","Actor":"dotnet-maestro[bot]","Number":"3502","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3502","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3502)"},{"Id":"476418956","IsPullRequest":true,"CreatedAt":"2019-08-03T05:44:40","Actor":"nguerrera","Number":"3501","RawContent":null,"Title":"Removed outdated, commented out code","State":"open","Body":"Fixing small things that distracted me while doing https://github.com/dotnet/core-sdk/pull/3741\r\n\r\nSubmitting for P9 consideration as I'd prefer not to stay confused by this for the lifetime of 3.0","Url":"https://github.com/dotnet/sdk/pull/3501","RelatedDescription":"Open PR \"Removed outdated, commented out code\" (#3501)"},{"Id":"476393427","IsPullRequest":true,"CreatedAt":"2019-08-03T00:02:28","Actor":"peterhuene","Number":"3500","RawContent":null,"Title":"Retry apphost creation. ","State":"open","Body":"This PR implements a parameterized retry count for creating the apphost.\r\n\r\nLike the `Copy` task from MSBuild, the `CreateAppHost` task now takes a\r\nparameter to specify the number of retries and the delay between retries (in\r\nmilliseconds) to perform if the creation fails.\r\n\r\nThis should help alleviate build failures when external processes are locking\r\nthe intermediate apphost during a build (especially on Windows).\r\n\r\nFixes [AB#950462](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/950462).\r\nFixes dotnet/cli#11650.","Url":"https://github.com/dotnet/sdk/pull/3500","RelatedDescription":"Open PR \"Retry apphost creation. \" (#3500)"},{"Id":"474386703","IsPullRequest":true,"CreatedAt":"2019-08-03T00:00:40","Actor":"peterhuene","Number":"3484","RawContent":null,"Title":"Retry apphost creation.","State":"closed","Body":"This PR implements a parameterized retry count for creating the apphost.\r\n\r\nLike the `Copy` task from MSBuild, the `CreateAppHost` task now takes a\r\nparameter to specify the number of retries and the delay between retries (in\r\nmilliseconds) to perform if the creation fails.\r\n\r\nThis should help alleviate build failures when external processes are locking\r\nthe intermediate apphost during a build (especially on Windows).\r\n\r\nFixes [AB#950462](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/950462).\r\nFixes dotnet/cli#11650.","Url":"https://github.com/dotnet/sdk/pull/3484","RelatedDescription":"Closed or merged PR \"Retry apphost creation.\" (#3484)"},{"Id":"476341414","IsPullRequest":false,"CreatedAt":"2019-08-02T20:20:33","Actor":"nguerrera","Number":"3499","RawContent":null,"Title":"Redundant PackageName and NuGetPackageId metadata","State":"open","Body":"There's a mix of checking PackageName and NuGetPackageId in the targets and now we seem to be setting both all the time in ResolvePackageAssets.\r\n\r\nI actually trimmed down the metadata in 2.1 to stop doing this, but it crept back in c7549ffe\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3499","RelatedDescription":"Open issue \"Redundant PackageName and NuGetPackageId metadata\" (#3499)"},{"Id":"476146474","IsPullRequest":true,"CreatedAt":"2019-08-02T12:05:08","Actor":"dotnet-maestro[bot]","Number":"3498","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190804.1\r\n- **Date Produced**: 8/4/2019 12:42 PM\r\n- **Commit**: b1c2f33f0cef32d1df6e7f388017fd6761d3fcad\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19404.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19404.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3498","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3498)"},{"Id":"475644278","IsPullRequest":true,"CreatedAt":"2019-08-01T14:11:23","Actor":"dotnet-maestro[bot]","Number":"3497","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190731.19\r\n- **Date Produced**: 8/1/2019 12:27 AM\r\n- **Commit**: 48787606d809963cc800151cbfbefe0a74ae74b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19381.19\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19381.19\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3497","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3497)"},{"Id":"475349038","IsPullRequest":true,"CreatedAt":"2019-08-01T03:37:28","Actor":"nugetlurker","Number":"3494","RawContent":null,"Title":"Insert NuGet Build 5.3.0-preview.2.6136 into sdk","State":"closed","Body":"Insert NuGet Build 5.3.0-preview.2.6136 into sdk release/3.0.100-preview8 branch","Url":"https://github.com/dotnet/sdk/pull/3494","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.3.0-preview.2.6136 into sdk\" (#3494)"},{"Id":"475361769","IsPullRequest":false,"CreatedAt":"2019-07-31T21:17:43","Actor":"nguerrera","Number":"3495","RawContent":null,"Title":"Inclusion of runtime graph for all TFMs causes existing .NET Framework projects to turn x86","State":"open","Body":"So, it seems that giving the runtime graph to nuget for all TFMs is actually a pretty severe breaking change for .NET Framework in some cases.\r\n\r\nRoslyn builds with preview 8 (maybe 7, not sure when the rid graph change landed) will switch the .NET Framework csc.exe, vbc.exe, VBCSCompiler.exe to x86 from Any CPU.\r\n\r\nThis happens because they have a ref to Microsoft.DiasymReader.Native which has runtimes/win-x86 assets. The design for .NET Framework is that when we find RID-specific assets AND there is no explicit AnyCPU and no explicit RID, then we take the win7-x86 assets and use PlatformTarget=x86. \r\n\r\n(I regret this design, but that is the design since 1.0 SDK. It was done so that .NET Framework ASP.NET Core projects could consume libuv without setting a RID or PlatformTarget. Project.json just picked the RID of the current machine, which was worse as you get different apps on different machines. We tried to make it an error and say you had to pick a PlatformTarget or RID on .NET Framework exes, but there was a ton of complaints about it and we landed on the design described above by compromise.)\r\n\r\nThe thing is that we use win7-x86, but without a RID graph, we/NuGet don't know that win-x86 assets are applicable to win7-x86. Now that we have the RID graph always, we discover these win-x86 assets for the first time and the (regrettable) design actually kicks in.\r\n\r\nMy suggestion to avoid a breaking change here is to not pass the RID graph by default for TFMs that are not .NET Core 3.0+ or .NET Standard 2.1+. We can put it behind an opt-in for other TFMs.\r\n\r\nSeparately, roslyn should explicitly set Any CPU defensively so that they are not sensitive to which SDK is used to build them.\r\n\r\ncc @jaredpar @dsplaisted ","Url":"https://github.com/dotnet/sdk/issues/3495","RelatedDescription":"Open issue \"Inclusion of runtime graph for all TFMs causes existing .NET Framework projects to turn x86\" (#3495)"},{"Id":"474566979","IsPullRequest":true,"CreatedAt":"2019-07-31T20:00:57","Actor":"dotnet-maestro[bot]","Number":"3488","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.05\r\n- **Date Produced**: 7/29/2019 3:24 PM\r\n- **Commit**: d15a0adeb874801e7bfaa4fbbb306a2efa268497\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28379-05\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3488","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3488)"},{"Id":"475103999","IsPullRequest":true,"CreatedAt":"2019-07-31T15:57:53","Actor":"dotnet-maestro[bot]","Number":"3493","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190730.3\r\n- **Date Produced**: 7/30/2019 6:57 PM\r\n- **Commit**: def377f94747dac91482aad67b33a1c011ffc770\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19380.3\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19380.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3493","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3493)"},{"Id":"474677142","IsPullRequest":true,"CreatedAt":"2019-07-30T23:33:44","Actor":"dotnet-maestro[bot]","Number":"3491","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190730.08\r\n- **Date Produced**: 7/30/2019 7:48 PM\r\n- **Commit**: c855ac718789051d5d67282c88decca445de7711\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28380-08\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3491","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3491)"},{"Id":"474614791","IsPullRequest":false,"CreatedAt":"2019-07-30T22:18:15","Actor":"JohanLarsson","Number":"3489","RawContent":null,"Title":"Pack when referencing Microsoft.CodeAnalysis.CSharp generates exclude=\"Build,Analyzers\"","State":"closed","Body":"Repro steps:\r\n\r\n1. New project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.3</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <Version>0.1.0-dev</Version>\r\n    <Authors>Author</Authors>\r\n    <Description>Descriptor</Description>\r\n    <NeutralLanguage>en</NeutralLanguage>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"2.3.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n2. Build in VS\r\n3. Check created package.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n  <metadata>\r\n    <id>PackRepro</id>\r\n    <version>0.1.0-dev</version>\r\n    <authors>Author</authors>\r\n    <owners>Author</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <description>Descriptor</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n        <dependency id=\"Microsoft.CodeAnalysis.CSharp\" version=\"2.3.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"NETStandard.Library\" version=\"1.6.1\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nI tried `<PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"2.3.1\" PrivateAssets=\"none\"/>` but it did not have any effect.\r\n\r\nIs there a way to pack this so that analyzers are not excluded?\r\nIs there documentation about this?","Url":"https://github.com/dotnet/sdk/issues/3489","RelatedDescription":"Closed issue \"Pack when referencing Microsoft.CodeAnalysis.CSharp generates exclude=\"Build,Analyzers\"\" (#3489)"},{"Id":"474858582","IsPullRequest":false,"CreatedAt":"2019-07-30T18:57:29","Actor":"davidmatson","Number":"3492","RawContent":null,"Title":"When using new-style csproj with .NET Framework, the default TargetPlatform is x86 rather than AnyCPU","State":"open","Body":"**Visual Studio Version**:\r\n2019 (16.2.0)\r\n\r\n**Summary**:\r\nWhen using the new-style (CPS?) csproj but targeting .NET Framework, the default TargetPlatform is differe than either .NET Core or old-style .NET Framework csprojs (x86 rather than AnyCPU).\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. File -> New -> Project -> .NET Core exe\r\n\r\n2. Unload the csproj and replace the target framework line with: ```<TargetFramework>net472</TargetFramework>```\r\n\r\n3. Releoad the project and check its properties\r\n\r\n**Expected Behavior**:\r\nTarget platform in AnyCPU.\r\n\r\n**Actual Behavior**:\r\nTarget platform is x86.\r\n\r\n**User Impact**:\r\nConfusing behavior when restoring NuGet packages, and inconsistency with all other C# project variants.","Url":"https://github.com/dotnet/sdk/issues/3492","RelatedDescription":"Open issue \"When using new-style csproj with .NET Framework, the default TargetPlatform is x86 rather than AnyCPU\" (#3492)"},{"Id":"474626403","IsPullRequest":false,"CreatedAt":"2019-07-30T14:40:37","Actor":"JohanLarsson","Number":"3490","RawContent":null,"Title":"Pack without explicit NETStandard.Library dependency","State":"open","Body":"Repro steps:\r\n1. New project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.3</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup>\r\n    <Version>0.1.0-dev</Version>\r\n    <Authors>Author</Authors>\r\n    <Description>Descriptor</Description>\r\n    <NeutralLanguage>en</NeutralLanguage>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <PackageLicenseExpression>MIT</PackageLicenseExpression>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"2.3.1\" PrivateAssets=\"none\"/>\r\n    <PackageReference Update=\"NETStandard.Library\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n2. Build in VS\r\n3. Inspect package:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n  <metadata>\r\n    <id>PackRepro</id>\r\n    <version>0.1.0-dev</version>\r\n    <authors>Author</authors>\r\n    <owners>Author</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <license type=\"expression\">MIT</license>\r\n    <description>Descriptor</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard1.3\">\r\n        <dependency id=\"Microsoft.CodeAnalysis.CSharp\" version=\"2.3.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"NETStandard.Library\" version=\"1.6.1\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n  </metadata>\r\n</package>\r\n```","Url":"https://github.com/dotnet/sdk/issues/3490","RelatedDescription":"Open issue \"Pack without explicit NETStandard.Library dependency\" (#3490)"},{"Id":"474545209","IsPullRequest":true,"CreatedAt":"2019-07-30T14:36:33","Actor":"dotnet-maestro[bot]","Number":"3486","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190729.29\r\n- **Date Produced**: 7/29/2019 10:51 PM\r\n- **Commit**: 84d9a013b66c3e14a67ace0a99ae84e6eb8b6a7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19379.29\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19379.29\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3486","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3486)"},{"Id":"474566203","IsPullRequest":true,"CreatedAt":"2019-07-30T12:50:34","Actor":"dotnet-maestro[bot]","Number":"3487","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190804.5\r\n- **Date Produced**: 8/5/2019 4:33 AM\r\n- **Commit**: 62a9f1bdf39ba0b719875d33e248408d3802e925\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19404.5\r\n\r\n[marker]: <> (End:c3e20d8c-7bed-4085-8124-08d70655e1d3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3487","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#3487)"},{"Id":"474481551","IsPullRequest":false,"CreatedAt":"2019-07-30T09:41:44","Actor":"mcartoixa","Number":"3485","RawContent":null,"Title":"When using custom $(BaseIntermediateOutputPath) the build still picks files from obj/","State":"open","Body":"I like to customize `$(BaseIntermediateOutputPath)` on my build servers to a centralized location so that I am very sure to start from fresh (just delete the folder and there you go).\r\nOn a development machine, Visual Studio generates files (e.g. `AssemblyInfo.cs`) in the default folder, (`obj/`, inside the project folder). When trying the build server script, it regenerates those files in the customized `$(BaseIntermediateOutputPath)` folder but it stills picks up the default ones that have been generated before for compilation...\r\n\r\nMy workaround is to add the following property on my projects in the build server script: `DefaultItemExcludesInProjectFolder=bin/**;obj/**`. My use case might be a fringe one, but I think these folders should be excluded by default, in a hardcoded way (cf. https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.targets#L39).\r\n\r\nUsing .NET Core 3.0 preview 7.","Url":"https://github.com/dotnet/sdk/issues/3485","RelatedDescription":"Open issue \"When using custom $(BaseIntermediateOutputPath) the build still picks files from obj/\" (#3485)"},{"Id":"474320728","IsPullRequest":true,"CreatedAt":"2019-07-30T03:36:59","Actor":"dotnet-maestro[bot]","Number":"3483","RawContent":null,"Title":"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190729.14\r\n- **Date Produced**: 7/30/2019 12:15 AM\r\n- **Commit**: f4b35ce6e8583b08630baf576f55424728b04081\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.0-preview8-28379-14\r\n\r\n[marker]: <> (End:0e68ca02-619f-4dab-d003-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3483","RelatedDescription":"Closed or merged PR \"[release/3.0.100-preview8] Update dependencies from dotnet/core-setup\" (#3483)"},{"Id":"474309570","IsPullRequest":true,"CreatedAt":"2019-07-30T00:06:01","Actor":"dotnet-bot","Number":"3482","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3482","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3482)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1157309583326633988","CreatedAt":"2019-08-02T15:18:01+00:00","UserScreenname":"dotnet","Text":"•Unity? ✔\n•Visual Studio? ✔\n•C#? ✔\n•41 videos on scripting fundamentals? ✔\n•$$$ - free\nCheck out our new, free lear… https://t.co/x9mazJYw7c","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":138,"FavoriteCount":45,"RawContent":null},{"Id":"1156973009279733761","CreatedAt":"2019-08-01T17:00:35+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"1156590592089964544","CreatedAt":"2019-07-31T15:41:00+00:00","UserScreenname":"dotnet","Text":"Learn how you can measure code coverage in your .NET Core projects using Coverlet.\n\nhttps://t.co/xkEUGtRScd #dotnetcore #testing","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":28,"RawContent":null},{"Id":"1156333221136625664","CreatedAt":"2019-07-30T22:38:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"1155911372049461248","CreatedAt":"2019-07-29T18:42:01+00:00","UserScreenname":"dotnet","Text":"The journey to a better game development experience starts here. Whether you’re new to game development or need a r… https://t.co/UjsTqoHRxc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":45,"FavoriteCount":14,"RawContent":null},{"Id":"1154430362157821952","CreatedAt":"2019-07-25T16:37:01+00:00","UserScreenname":"dotnet","Text":"Game development can be fun we have the right tools to help you get off the ground quickly with a new, free learnin… https://t.co/AivXhRP7Sb","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"1154105630220640257","CreatedAt":"2019-07-24T19:06:39+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.0 Preview 7\n\nhttps://t.co/gNfmpbO5bA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":172,"FavoriteCount":87,"RawContent":null},{"Id":"1154104343131410432","CreatedAt":"2019-07-24T19:01:32+00:00","UserScreenname":"dotnet","Text":"Visual Studio 2019 version 16.2 Generally Available and 16.3 Preview 1\n\nhttps://t.co/Dd5t9pJ8nn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":201,"FavoriteCount":124,"RawContent":null},{"Id":"1153711768151052289","CreatedAt":"2019-07-23T17:01:35+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core and Blazor updates in .NET Core 3.0 Preview 7 https://t.co/2gzRbk6aoK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":129,"FavoriteCount":72,"RawContent":null}]}},"RunOn":"2019-08-06T05:30:39.731001Z","RunDurationInMilliseconds":16408}