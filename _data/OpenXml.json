{"Data":{"Sdk":{"Events":[{"Id":"11122588649","Type":"PullRequestEvent","CreatedAt":"2019-12-19T04:32:57","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/657","RelatedDescription":"Opened pull request \"Update FxCop to latest version\" (#657) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11122478480","Type":"IssuesEvent","CreatedAt":"2019-12-19T04:04:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/197","RelatedDescription":"Closed issue \"Standardize on style for code base\" (#197) at OfficeDev/Open-XML-SDK","RelatedBody":"Style feels inconsistent in the code base (or at least not what I'm used to). In either case, it would be good to define a set of conventions for what styles are, and then use StyleCop (I find the analyzers to work well) and editor config to enforce some of these (which is available in VS2017 and other editors as well).\r\n\r\nI generally recommend projects follow the style used by CoreFX (https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md), but we can tweak it for this project if people have strong opinions one way or another.\r\n\r\nThoughts?\r\n\r\n/cc @tomjebo @ThomasBarnekow \r\n\r\nHere's a list of analyzers I'm planning on turning on (subject to change). The text following the ID is what will trigger the analyzer. For details, look up the documentation at https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/Master/documentation\r\n\r\n ## Maintainability\r\n\r\n- [x] **SA1119** A C# statement contains parenthesis which are unnecessary and should be removed.\r\n- [x] **SA1400** The access modifier for a C# element has not been explicitly defined.\r\n- [x] **SA1402** A C# code file contains more than one unique type.\r\n- [x] **SA1403** A C# code file contains more than one namespace.\r\n- [x] **SA1404** A Code Analysis SuppressMessage attribute does not include a justification.\r\n- [ ] ~~**SA1405** A call to Debug.Assert in C# code does not include a descriptive message.~~\r\n- [x] **SA1406** A call to Debug.Fail in C# code does not include a descriptive message.\r\n- [x] **SA1410** A call to a C# anonymous method does not contain any method parameters, yet the statement still includes parenthesis.\r\n- [x] **SA1411** An attribute declaration does not contain any parameters, yet it still includes parenthesis.\r\n- [x] **SA1412** The encoding of the file is not UTF-8 with byte order mark.\r\n- [x] **SA1413** A multi-line initializer should use a comma on the last item.\r\n\r\n## Readability\r\n\r\n- [x] **SA1100** A call to a member from an inherited class begins with base., and the local class does not contain an override or implementation of the member.\r\n- [x] **SA1106** The C# code contains an extra semicolon.\r\n- [x] **SA1107** The C# code contains more than one statement on a single line.\r\n- [x] **SA1108** A C# statement contains a comment between the declaration of the statement and the opening brace of the statement. \r\n- [x] **SA1113** A comma between two parameters in a call to a C# method or indexer, or in the declaration of a method or indexer, is not placed on the same line as the previous parameter.\r\n- [x] **SA1115** A parameter within a C# method or indexer call or declaration does not begin on the same line as the previous parameter, or on the next line.\r\n- [x] **SA1116** The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket.\r\n- [x] **SA1120** The C# comment does not contain any comment text.\r\n- [x] **SA1121** The code uses one of the basic C# types, but does not use the built-in alias for the type.\r\n- [x] **SA1122** The C# code includes an empty string, written as \"\".\r\n- [x] **SA1125** The Nullable type has been defined not using the C# shorthand.\r\n- [x] **SA1127** A generic constraint on a type or method declaration is on the same line as the declaration, within a C# code file.\r\n- [x] **SA1129** A value type was constructed using the syntax new T().\r\n- [x] **SA1130** An anonymous method was declared using the form delegate (parameters) { }, when a lambda expression would provide equivalent behavior with the syntax (parameters) => { }.\r\n- [x] **SA1131** A comparison was made between a variable and a literal or constant value, and the variable appeared on the right-hand side of the expression.\r\n- [x] **SA1132** Two or more fields were declared in the same field declaration syntax.\r\n- [x] **SA1133** Two or more attributes appeared within the same set of square brackets.\r\n- [x] **SA1134** An attribute is placed on the same line of code as another attribute or element. \r\n- [x] **SA1136** Multiple enum values are placed on the same line of code.\r\n- [x] **SA1137** Two sibling elements which each start on their own line have different levels of indentation.\r\n- [x] **SA1139** Use literal suffix notation instead of casting.\r\n\r\n## Layout rules\r\n\r\n- [ ] ~~**SA1500** BracesForMultiLineStatementsMustNotShareLine\tThe opening or closing brace within a C# statement, element, or expression is not placed on its own line.~~\r\n- [x] **SA1501** StatementMustNotBeOnSingleLine\tA C# statement containing opening and closing braces is written completely on a single line.\r\n- [x] **SA1502** ElementMustNotBeOnSingleLine\tA C# element containing opening and closing braces is written completely on a single line.\r\n- [x] **SA1503** BracesMustNotBeOmitted\tThe opening and closing braces for a C# statement have been omitted.\r\n- [x] **SA1504** AllAccessorsMustBeSingleLineOrMultiLine\tWithin a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines.\r\n- [x] **SA1505** OpeningBracesMustNotBeFollowedByBlankLine\tAn opening brace within a C# element, statement, or expression is followed by a blank line.\r\n- [x] **SA1506** ElementDocumentationHeadersMustNotBeFollowedByBlankLine\tAn element documentation header above a C# element is followed by a blank line.\r\n- [x] **SA1507** CodeMustNotContainMultipleBlankLinesInARow\tThe C# code contains multiple blank lines in a row.\r\n- [x] **SA1508** ClosingBracesMustNotBePrecededByBlankLine\tA closing brace within a C# element, statement, or expression is preceded by a blank line.\r\n- [x] **SA1509** OpeningBracesMustNotBePrecededByBlankLine\tAn opening brace within a C# element, statement, or expression is preceded by a blank line.\r\n- [x] **SA1510** ChainedStatementBlocksMustNotBePrecededByBlankLine\tChained C# statements are separated by a blank line.\r\n- [x] **SA1511** WhileDoFooterMustNotBePrecededByBlankLine\tThe while footer at the bottom of a do-while statement is separated from the statement by a blank line.\r\n- [x] **SA1512** SingleLineCommentsMustNotBeFollowedByBlankLine\tA single-line comment within C# code is followed by a blank line.\r\n- [x] **SA1513** ClosingBraceMustBeFollowedByBlankLine\tA closing brace within a C# element, statement, or expression is not followed by a blank line.\r\n- [x] **SA1514** ElementDocumentationHeaderMustBePrecededByBlankLine\tAn element documentation header above a C# element is not preceded by a blank line.\r\n- [x] **SA1515** SingleLineCommentMustBePrecededByBlankLine\tA single-line comment within C# code is not preceded by a blank line.\r\n- [x] **SA1516** ElementsMustBeSeparatedByBlankLine\tAdjacent C# elements are not separated by a blank line.\r\n- [x] **SA1517** CodeMustNotContainBlankLinesAtStartOfFile\tThe code file has blank lines at the start.\r\n- [x] **SA1518** UseLineEndingsCorrectlyAtEndOfFile\tThe line endings at the end of a file do not match the settings for the project.\r\n- [x] **SA1519** BracesMustNotBeOmittedFromMultiLineChildStatement\tThe opening and closing braces for a multi-line C# statement have been omitted.\r\n- [x] **SA1520** UseBracesConsistently\tThe opening and closing braces of a chained if/else if/else construct were included for some clauses, but omitted for others.\r\n\r\n"},{"Id":"11122475747","Type":"PullRequestEvent","CreatedAt":"2019-12-19T04:03:33","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/656","RelatedDescription":"Merged pull request \"Enable final StyleCop readability rules\" (#656) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #197 "},{"Id":"11122259049","Type":"PullRequestEvent","CreatedAt":"2019-12-19T03:11:07","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/656","RelatedDescription":"Opened pull request \"Enable final StyleCop readability rules\" (#656) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11122255903","Type":"PullRequestEvent","CreatedAt":"2019-12-19T03:10:18","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/655","RelatedDescription":"Merged pull request \"Enable final StyleCop maintainability rules\" (#655) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #197 "},{"Id":"11122192944","Type":"PullRequestEvent","CreatedAt":"2019-12-19T02:55:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/654","RelatedDescription":"Merged pull request \"Enable StyleCop layout rules\" (#654) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #197 "},{"Id":"11122138317","Type":"PullRequestEvent","CreatedAt":"2019-12-19T02:42:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/655","RelatedDescription":"Opened pull request \"Enable final StyleCop maintainability rules\" (#655) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"11122092568","Type":"PullRequestEvent","CreatedAt":"2019-12-19T02:32:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/654","RelatedDescription":"Opened pull request \"Enable StyleCop layout rules\" (#654) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #197 "},{"Id":"11121973934","Type":"IssuesEvent","CreatedAt":"2019-12-19T02:05:02","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/595","RelatedDescription":"Closed issue \".NET Native compilation\" (#595) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nA UWP project incorporating the following NuGet packages:\r\n- DocumentFormat.OpenXml (version 2.9.1)\r\n- Microsoft.Azure.Management.Fluent (version 1.22.2)\r\n- Microsoft.NETCore.UniversalWindowsPlatform (version 6.2.8)\r\n\r\nFails to build in Release config if the build is set to use the .Net native toolchain (required for Store submission).\r\n\r\n**Information**\r\n\r\n- UWP\r\n- DocumentFormat.OpenXml Version: 2.9.1\r\n\r\n**Repro**\r\n\r\nCreate a new UWP project, add the Nuget projects noted in the Description section and build in Release config (make sure \"Compile with .Net tool chain\" is checked)\r\n\r\n**Observed**\r\n\r\nA UWP project will build in release with only the OpenXml package and will build in release with only the Azure.Management.Fluent package.  **The build fails when both packages are included.**  This solution posted in #168 did not work for this issue.  Since this involves another package (Azure.Management.Fluent), I have opened an issue on the project's page:  [azure-libraries-for-net 697](https://github.com/Azure/azure-libraries-for-net/issues/697)\r\n\r\nOutput:\r\n```\r\n1>------ Rebuild All started: Project: Intact.UWP.Deployment, Configuration: Release x64 ------\r\n1>  Intact.UWP.Deployment -> C:\\Projects\\Tests\\Intact.UWP.Deployment\\Intact.UWP.Deployment\\bin\\x64\\Release\\Intact.UWP.Deployment.exe\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 150 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.3\\tools\\Microsoft.NetNative.targets(801,5): error : Internal Compiler Error\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.3\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.3\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Projects\\Tests\\Intact.UWP.Deployment\\Intact.UWP.Deployment\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\Intact.UWP.Deployment.rsp\"' returned exit code 1\r\n========== Rebuild All: 0 succeeded, 1 failed, 0 skipped ==========\r\n```\r\n\r\n\r\n**Expected**\r\n\r\nSuccessful build.\r\n"},{"Id":"11121968192","Type":"IssuesEvent","CreatedAt":"2019-12-19T02:03:40","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/616","RelatedDescription":"Closed issue \"The thread-safe issue regarding IsolatedStorage\" (#616) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [x] Question on library usage\r\n\r\n**Description**\r\n\r\nIt was known to us that OpenXMLSDK had an implementation to use IsolatedStorage for PartPackage larger than 10MB which was not thread-safe. \r\n\r\nDetails:\r\nhttps://social.msdn.microsoft.com/Forums/office/en-US/fcccab24-cd48-40fc-afbb-a7c30191a9e1/open-xml-sdk-v2-handling-multiple-threads\r\nhttps://stackoverflow.com/questions/21482820/openxml-hanging-while-writing-elements\r\n\r\nI’m wondering if that implementation has been changed since then. And if not, do you have any recommendation to handle it in a multi-thread environment? \r\n\r\n**Information**\r\n\r\n- .NET Target:  .NET Framework 4.6.2\r\n- DocumentFormat.OpenXml Version: latest\r\n"},{"Id":"11121946514","Type":"PullRequestEvent","CreatedAt":"2019-12-19T01:58:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/651","RelatedDescription":"Closed pull request \"Lazily load relations when opening parts and packages\" (#651) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #628"},{"Id":"11121864996","Type":"PullRequestEvent","CreatedAt":"2019-12-19T01:39:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/653","RelatedDescription":"Opened pull request \"Explain ProjectLoadStyle\" (#653) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2019-12-19T05:30:47.652989Z","RunDurationInMilliseconds":1596}