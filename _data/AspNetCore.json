{"Data":{"Blog":{"FeedItems":[{"Title":"Blazor Server in .NET Core 3.0 scenarios and performance","PublishedOn":"2019-10-10T18:20:32+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"Since the release of Blazor Server with .NET Core 3.0 last month lots of folks have shared their excitement with us about being able to build client-side web UI with just .NET and C#. At the same...","Href":"https://devblogs.microsoft.com/aspnet/blazor-server-in-net-core-3-0-scenarios-and-performance/","RawContent":null},{"Title":"Setting HTTP header attributes to enable Azure authentication/authorization using HTTPRepl","PublishedOn":"2019-09-23T18:25:20+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Posted on behalf of Ahmed Metwally\n  The HTTP Read-Eval-Print Loop (REPL) is a lightweight, cross-platform command-line tool that&#8217;s supported everywhere .NET Core is supported. It’s used for...","Href":"https://devblogs.microsoft.com/aspnet/setting-http-header-attributes-to-enable-azure-authentication-authorization-using-httprepl/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0","PublishedOn":"2019-09-23T15:59:58+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"ASP.NET Core and Blazor updates in .NET Core 3.0\nToday we are thrilled to announce the release of .NET Core 3.0! .NET Core 3.0 is ready for production use, and is loaded with lots of great new...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:36+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET Core 3.0 Release Candidate 1 (RC1) is now available. This release contains only a handful of bug fixes and closely represents what we expect to release for .NET Core 3.0.\nPlease see the release...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 9","PublishedOn":"2019-09-04T19:00:38+00:00","CommentsCount":117,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 9 is now available and it contains a number of improvements and updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nBlazor event...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/","RawContent":null},{"Title":"Redesigning Configuration Refresh for Azure App Configuration","PublishedOn":"2019-08-27T17:00:06+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Overview\nSince its inception, the .NET Core configuration provider for Azure App Configuration has provided the capability to monitor changes and sync them to the configuration within a running...","Href":"https://devblogs.microsoft.com/aspnet/redesigning-configuration-refresh-for-azure-app-configuration/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 8","PublishedOn":"2019-08-13T18:28:53+00:00","CommentsCount":28,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 8 is now available and it includes a bunch of new updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nProject template updates\nCleaned...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-8/","RawContent":null},{"Title":"Azure SignalR Service now supports Event Grid!","PublishedOn":"2019-08-09T06:41:06+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Azure SignalR Service now supports Event Grid!\nSince we GA&#8217;ed Azure SignalR Service in last September, serverless has become a very popular use case in Azure SignalR Service and is used by many...","Href":"https://devblogs.microsoft.com/aspnet/azure-signalr-service-now-supports-event-grid/","RawContent":null},{"Title":"HttpRepl: A command-line tool for interacting with RESTful HTTP services","PublishedOn":"2019-07-31T16:41:43+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"The ASP.NET team has built a command-line tool called HttpRepl. It lets you browse and invoke HTTP services in a similar way to working with files and folders. You give it a starting point (a base...","Href":"https://devblogs.microsoft.com/aspnet/httprepl-a-command-line-tool-for-interacting-with-restful-http-services/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 7","PublishedOn":"2019-07-23T16:55:44+00:00","CommentsCount":36,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 7 is now available and it includes a bunch of new updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nLatest Visual Studio preview...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-7/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"506096255","IsPullRequest":false,"CreatedAt":"2019-10-11T23:31:23","Actor":"Gobbeldygook","Number":"14939","RawContent":null,"Title":"Not Building a Release","State":"open","Body":"For this SignalR3.0 .NET Core Tutorial, I am getting an \r\n\r\n\"Insufficient number of arguments or no entry found.\" This is followed by \r\n\"ERROR in Entry module not found: Error: Can't resolve ./src in [Solution Root Dir]. \r\n\r\nThis makes no sense, because per the directions it is under the inner project directory as stated in the instructions. I assume that it goes [Solution Directory]\\[Project Directory], & I am doing the release under the inner project directory. so there should not be a problem. The 'src' directory exists under that Project Directory & not the Solution Directory.  It does build from the Build pull-down on the top-menu ribbon, but will not do a 'npm run release' under the ProjectDirectory, & fails with above said error. My node.js is 10.16.3. I'm using VS Community 2019. I have the ASP.NET Core/.NET Core/ASP.NET Core 3.0.100. \r\n\r\n### If you believe you have an issue that affects the security of the platform please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx) but ONLY if it is reported through email.\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '...'\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14939","RelatedDescription":"Open issue \"Not Building a Release\" (#14939)"},{"Id":"505666757","IsPullRequest":false,"CreatedAt":"2019-10-11T23:28:08","Actor":"hannespreishuber","Number":"14911","RawContent":null,"Title":"Library embeded JavaScript reference missing","State":"closed","Body":"just start with teh default Razor library project in Visual studio 2019 \r\nthere is a examplejsinterop.js and examplejsinterop.cs\r\nsubquestion why is method \"prompt\" static and not injected?\r\n\r\nas testcase \r\nmake a call from a 2nd blazor type project and do not reference in _host.cshtml the javasricpt with \r\n<script src=\"_content/RazorClassLibrary1/exampleJsInterop.js\"></script>\r\n\r\n1) there is no warning nowhere- expected result- give me feedback that I forgot something\r\n2) it would be great to automatic reference JS from components to reduce source of bugs\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14911","RelatedDescription":"Closed issue \"Library embeded JavaScript reference missing\" (#14911)"},{"Id":"506095114","IsPullRequest":false,"CreatedAt":"2019-10-11T23:25:22","Actor":"danroth27","Number":"14938","RawContent":null,"Title":"In a Blazor Server app Provide user feedback when an unhandled exception happens on the server","State":"open","Body":"In a Blazor Server app if an unhandled exception happens on the server there is no user feedback other than a generic error message in the browser console:\r\n\r\n```\r\nError: There was an unhandled exception on the current circuit, so this circuit will be terminated. For more details turn on detailed exceptions in 'CircuitOptions.DetailedErrors'. \r\n```\r\n\r\nTypically if the app loses its connection with the server we display a default UI that lets the user know the connection was lost. If the server state is no longer available we tell the user to refresh the browser. Can we do something similar when an unhandled exception brings down the circuit? Can we provide a way to customize the UI when an unhandled exception happens?\r\n\r\nWhen running in Development, the developer console should also provide the details about the exception instead of giving a generic error message.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14938","RelatedDescription":"Open issue \"In a Blazor Server app Provide user feedback when an unhandled exception happens on the server\" (#14938)"},{"Id":"506091749","IsPullRequest":false,"CreatedAt":"2019-10-11T23:09:08","Actor":"halter73","Number":"14937","RawContent":null,"Title":"ConnectionContext.Transport.Output.CompleteAsync() should only half close connection","State":"open","Body":"Today ConnectionContext.Transport.Output.CompleteAsync() fully closes the connection with both the libuv and managed socket transport. As soon as the transport send loop sees a completed ReadResult, it calls Socket.Shutdown(SocketShutdown.Both) or an equivalent. This prevents the application from reading more from ConnectionContext.Transport.Input even if the other side of the connection did not finish sending data.\r\n\r\nGiven that ConnectionContext.DisposeAsync() now exists and also fully closes the connection, the contract for ConnectionContext.Transport.Output.CompleteAsync() should change to only close the sending side of the connection. The converse should also be true for ConnectionContext.Transport.Input.CompleteAsync(). DisposeAsync() should continue to fully close the connection after the send loop completes like it does today, and Abort() will continue to immediately terminate the connection.","Url":"https://github.com/aspnet/AspNetCore/issues/14937","RelatedDescription":"Open issue \"ConnectionContext.Transport.Output.CompleteAsync() should only half close connection\" (#14937)"},{"Id":"506060788","IsPullRequest":false,"CreatedAt":"2019-10-11T21:14:21","Actor":"CliffConway","Number":"14936","RawContent":null,"Title":"Blazor app controller returns valid json but generates a json exception","State":"open","Body":"1. Using this version of ASP.NET Core '3.0.0'\r\n2. Run this code \r\nIn the razor component:-\r\n'fundamentals = await http.GetJsonAsync<Fundamental[]>(\"api/Fundamentals/VOD.L/3/2009\");'\r\nIn the Controller:-\r\n'Fundamental fundamental = await _context.Fundamentals.FindAsync(id, period, year);'\r\n3. Arguments (as shown)\r\n4. Error:-\r\nJson exception error message:-\r\nWASM: System.Text.Json.JsonException: The JSON value could not be converted to WS.Shared.Models.Fundamental. Path: $ | LineNumber: 0 | BytePositionInLine: 1449.\r\n\r\n\r\n### Expected behaviour\r\njson should be passed back to the razor component for display.\r\n\r\nJSON RETURNED BY THE API CALL:-\r\n{\"id\":\"VOD.L\",\"period\":3,\"year\":2009,\"day\":31,\"created\":\"AAAAAAAArQk=\",\"turnover\":41017.00,\"marketCapAtBSDate\":64345.23,\"currentLiabilities\":27947.00,\"intangibleNonCurrentAssets\":74938.00,\"tangibleNonCurrentAssets\":19250.00,\"nonCurrentInvestments\":41775.00,\"otherNonCurrentAssets\":3707.00,\"stocks\":412.00,\"debtors\":7490.00,\"cashAndSecurities\":5127.00,\"nonCurrentLiabilities\":39975.00,\"shareCapital\":157501.00,\"reserves\":-71339.00,\"minorities\":-1385.00,\"debt0to1Year\":9624.00,\"debt1to2Years\":8212.00,\"debt2to5Years\":11891.00,\"debtOver5Years\":18218.00,\"netBorrowings\":35042.00,\"netTangibleAssetValuePS\":21.25,\"roce\":20.59,\"roe\":9.61,\"netGearing\":40.67,\"grossGearing\":46.33,\"cash\":5.66,\"interestCover\":7.03,\"quickRatio\":0.45,\"currentRatio\":0.47,\"cashFromOperatingActivities\":14634.00,\"increaseDecreaseCashInYear\":2823.00,\"ebit\":12170.00,\"ebitda\":18984.00,\"operatingProfitReported\":5857.00,\"operatingProfitAdjusted\":11767.00,\"investmentIncome\":4496.00,\"exceptionalItems\":-5910.00,\"netInterest\":-2073.00,\"preTaxProfit\":4189.00,\"tax\":1109.00,\"profitAfterTax\":3080.00,\"minorityInterests\":2.00,\"profitForTheFinancialYear\":3078.00,\"ordinaryDividends\":4017.00,\"nonEquityDividends\":0.00,\"retainedProfit\":-939.00,\"numberOfEmployees\":null,\"operatingMargin\":17.74,\"dps\":7.59,\"dpsGrowth\":10.00,\"dividendCover\":2.24,\"normEPS\":16.97,\"reportedEPS\":5.81,\"normEPSGrowth\":39.51,\"reportedEPSGrowth\":0.00,\"cashflowPS\":22.38,\"capitalExpenditure\":12.61,\"sharesInIssue\":null}\r\n\r\n### Additional context\r\nI have validated the Json with 3 different online validators and all report valid Json.\r\n\r\n\r\nSo why the json exception error?\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14936","RelatedDescription":"Open issue \"Blazor app controller returns valid json but generates a json exception\" (#14936)"},{"Id":"506042658","IsPullRequest":false,"CreatedAt":"2019-10-11T20:24:59","Actor":"jhudsoncedaron","Number":"14935","RawContent":null,"Title":"Undocumented breaking change in IFileInfo: don't use physical path anymore when serving from packfiles","State":"open","Body":"# Issue description\r\n\r\nWhen serving content from packfiles, returning the path of the packfile in IFileInfo.PhysicalPath (for filesystem watcher) doesn't work anymore.\r\n\r\nIn reading the code, I'm convinced the change is intentional.\r\n\r\n# Software versions\r\n\r\nCheck the .NET target framework(s) being used, and include the version number(s).\r\n\r\n- [X] .NET Core 3.0\r\n- [ ] .NET Framework\r\n- [ ] .NET Standard\r\n\r\n.NET Core SDK version: 3.0.100 Commit 04339c3a26 RID win7-x64 Host 3.0.0 Commit 7d57652f33\r\n\r\nother values don't matter as this was discovered in a <strike>production</strike>stage install not in dev. Dev serves directly so ts compile can update .js files w/o a project rebuild.\r\n\r\nRef: https://github.com/aspnet/AspNetCore.Docs/issues/15020#event-2707021345","Url":"https://github.com/aspnet/AspNetCore/issues/14935","RelatedDescription":"Open issue \"Undocumented breaking change in IFileInfo: don't use physical path anymore when serving from packfiles\" (#14935)"},{"Id":"506037816","IsPullRequest":false,"CreatedAt":"2019-10-11T20:12:12","Actor":"devna13","Number":"14934","RawContent":null,"Title":"netcoreapp3.0 upgrade error","State":"open","Body":"#14342 # Describe the bug\r\nI have a web application that is referencing a nuget package from another project that is a class library in netstandard2.0. \r\nafter upgrading the asp .net web app from 2.2 to netcoreapp3.0 I'm getting this exception \r\n`System.AggregateException\r\n  HResult=0x80131500\r\n  Message=One or more errors occurred. (Could not load type 'System.Net.Http.HttpRequestMessageExtensions' from assembly 'IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=e7877f4675df049f'.)\r\n  Source=System.Private.CoreLib`\r\n\r\nI've upgraded 2 other large projects  to asp .net core 3 smoothly.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/4080343/66681609-e61c3a00-ec27-11e9-852a-9893a3e62be4.png)\r\n\r\n![err1](https://user-images.githubusercontent.com/4080343/66681301-4e1e5080-ec27-11e9-9fd4-e4aaa6fedae8.png)\r\n\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n\r\n```\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14934","RelatedDescription":"Open issue \"netcoreapp3.0 upgrade error\" (#14934)"},{"Id":"506025274","IsPullRequest":true,"CreatedAt":"2019-10-11T19:38:58","Actor":"mmitche","Number":"14933","RawContent":null,"Title":"[release/3.0] Stabilize package versions","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/14933","RelatedDescription":"Open PR \"[release/3.0] Stabilize package versions\" (#14933)"},{"Id":"505982046","IsPullRequest":false,"CreatedAt":"2019-10-11T17:55:09","Actor":"vsfeedback","Number":"14932","RawContent":null,"Title":"VS2019 How to Build a Web API2 for .Net Framework 4.8","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/758689/vs2019如何建立net-framework48的web-api2.html)._\n\n---\n(Regression)\r\n(worked-in:16.3)\n1. Building a project\n\n2. Only .Net Core 2.2, .Net Core 3.0 API\n\nHope to join back .Net Framework 4.8 Web API 2\nReason:\nBecause there are problems with both .Net Core 2.2 and 3.0 APIs, Establish the initial Web API Core, keep reorganizing the call Get API, memory will only keep going up, not down, .Net Framework Web API 2 without this issue\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/3/2019, 01:51 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### s52076663135 on 10/8/2019, 06:38 PM: \n\n感恩，我重新安裝了VS2019，.Net Framework 4.8 Web API 2 有出現，但 .Net Core 2.2 與 3.0 API 記憶體上升問題，依舊無法得到解答\n#### Visual Studio Feedback System on 10/11/2019, 00:55 AM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/aspnet/AspNetCore/issues/14932","RelatedDescription":"Open issue \"VS2019 How to Build a Web API2 for .Net Framework 4.8\" (#14932)"},{"Id":"505979992","IsPullRequest":false,"CreatedAt":"2019-10-11T17:50:17","Actor":"aspnet-hello","Number":"14931","RawContent":null,"Title":"Bad responses: DbFortunesDapper, DbFortunesDapper, DbFortunesEf, DbFortunesEf, DbFortunesRaw ...","State":"open","Body":"Some scenarios return errors:\n\n| Scenario | Environment | Last Run | Errors |\n| -------- | ----------- | -------- | ------ |\n| DbFortunesDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:57:12 PM +00:00 | 42154 |\n| DbFortunesDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:36:31 PM +00:00 | 3584 |\n| DbFortunesEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:57:53 PM +00:00 | 31873 |\n| DbFortunesEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:37:25 PM +00:00 | 3584 |\n| DbFortunesRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:55:56 PM +00:00 | 44457 |\n| DbFortunesRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:35:36 PM +00:00 | 3579 |\n| DbMultiQueryDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:41:27 PM +00:00 | 44278 |\n| DbMultiQueryDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:25:33 PM +00:00 | 3580 |\n| DbMultiQueryEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:42:52 PM +00:00 | 30799 |\n| DbMultiQueryEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:26:27 PM +00:00 | 3582 |\n| DbMultiQueryRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:40:06 PM +00:00 | 44332 |\n| DbMultiQueryRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:24:39 PM +00:00 | 3584 |\n| DbMultiUpdateDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:49:33 PM +00:00 | 44724 |\n| DbMultiUpdateDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:31:00 PM +00:00 | 3584 |\n| DbMultiUpdateEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:31:56 PM +00:00 | 3584 |\n| DbMultiUpdateRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:48:14 PM +00:00 | 44247 |\n| DbMultiUpdateRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:30:06 PM +00:00 | 3584 |\n| DbSingleQueryDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:32:55 PM +00:00 | 42318 |\n| DbSingleQueryDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:20:06 PM +00:00 | 3556 |\n| DbSingleQueryEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:34:23 PM +00:00 | 32068 |\n| DbSingleQueryEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:21:01 PM +00:00 | 3584 |\n| DbSingleQueryRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:31:43 PM +00:00 | 44496 |\n| DbSingleQueryRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:19:12 PM +00:00 | 3584 |\n| HttpClient | Linux, Physical, http, KestrelSockets | 10/10/19 1:00:48 PM +00:00 | 61179 |\n| HttpClient | Windows, Physical, http, KestrelSockets | 10/10/19 3:45:57 PM +00:00 | 3584 |\n| HttpClientFactory | Linux, Physical, http, KestrelSockets | 10/10/19 1:02:15 PM +00:00 | 71999 |\n| HttpClientFactory | Windows, Physical, http, KestrelSockets | 10/10/19 3:47:50 PM +00:00 | 4864 |\n| HttpClientParallel | Linux, Physical, http, KestrelSockets | 10/10/19 1:01:29 PM +00:00 | 7023 |\n| HttpClientParallel | Windows, Physical, http, KestrelSockets | 10/10/19 3:46:51 PM +00:00 | 3554 |\n| MvcDbFortunesDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:59:18 PM +00:00 | 30740 |\n| MvcDbFortunesDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:39:15 PM +00:00 | 3559 |\n| MvcDbFortunesEf | Linux, Physical, http, KestrelSockets | 10/10/19 1:00:01 PM +00:00 | 24801 |\n| MvcDbFortunesEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:40:11 PM +00:00 | 3584 |\n| MvcDbFortunesRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:58:35 PM +00:00 | 31517 |\n| MvcDbFortunesRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:38:20 PM +00:00 | 3565 |\n| MvcDbMultiQueryDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:45:36 PM +00:00 | 34065 |\n| MvcDbMultiQueryDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:28:17 PM +00:00 | 3560 |\n| MvcDbMultiQueryEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:46:56 PM +00:00 | 25474 |\n| MvcDbMultiQueryEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:29:12 PM +00:00 | 3582 |\n| MvcDbMultiQueryRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:44:16 PM +00:00 | 34019 |\n| MvcDbMultiQueryRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:27:22 PM +00:00 | 3578 |\n| MvcDbMultiUpdateDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:53:22 PM +00:00 | 34068 |\n| MvcDbMultiUpdateDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:33:46 PM +00:00 | 3572 |\n| MvcDbMultiUpdateEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:54:40 PM +00:00 | 25589 |\n| MvcDbMultiUpdateEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:34:41 PM +00:00 | 3584 |\n| MvcDbSingleQueryDapper | Linux, Physical, http, KestrelSockets | 10/10/19 12:37:23 PM +00:00 | 32851 |\n| MvcDbSingleQueryDapper | Windows, Physical, http, KestrelSockets | 10/10/19 3:22:50 PM +00:00 | 3558 |\n| MvcDbSingleQueryEf | Linux, Physical, http, KestrelSockets | 10/10/19 12:38:45 PM +00:00 | 26415 |\n| MvcDbSingleQueryEf | Windows, Physical, http, KestrelSockets | 10/10/19 3:23:45 PM +00:00 | 3584 |\n| MvcDbSingleQueryRaw | Linux, Physical, http, KestrelSockets | 10/10/19 12:35:52 PM +00:00 | 34176 |\n| MvcDbSingleQueryRaw | Windows, Physical, http, KestrelSockets | 10/10/19 3:21:56 PM +00:00 | 3574 |\n\n[Logs](https://aka.ms/aspnet/benchmarks/jenkins)\n","Url":"https://github.com/aspnet/AspNetCore/issues/14931","RelatedDescription":"Open issue \"Bad responses: DbFortunesDapper, DbFortunesDapper, DbFortunesEf, DbFortunesEf, DbFortunesRaw ...\" (#14931)"},{"Id":"505975411","IsPullRequest":false,"CreatedAt":"2019-10-11T17:38:59","Actor":"dazinator","Number":"14930","RawContent":null,"Title":"Blazor Authorize attribute and role claims in array format","State":"open","Body":"## Describe the bug\r\n\r\nThe `System.IdentityModel.Tokens.Jwt` package (version 5.5.0) is used in my asp.net core web api, to produce a JWT token from a `ClaimsIdentity`  - which is then returned to my client blazor wasm application.\r\n\r\nThe issue, is that the `ClaimsIdentity` has multiple role claims added to it, and `JwtSecurityTokenHandler` seems to produce a `JWT` token that condenses those multiple role claims, into a single role claim, that has a string array value of the role names. I believe this must be an optimisation to decrease the payload size.\r\n\r\nFor example, when this JWT is decoded on the client side, rather than having these individual role claims:\r\n\r\n```\r\nhttp://schemas.microsoft.com/ws/2008/06/identity/claims/role: \"Platform Administrator\"\r\nhttp://schemas.microsoft.com/ws/2008/06/identity/claims/role: \"Administrator\"\r\n```\r\n\r\nIt has a single role claim, containing an array for all of the roles:\r\n\r\n```\r\nhttp://schemas.microsoft.com/ws/2008/06/identity/claims/role: [\"Platform Administrator\",\"Administrator\"]: \r\n```\r\n\r\nHaving deserialised the this singular role claim, and then constructed a ClaimsPrincipal to perform the login on my blazor wasm client, it leads to the following problem. In Blazor you can add an `Authorize` attribute to a page, and specify roles:\r\n\r\n```\r\n@attribute [Authorize(Roles=\"Admin\")]\r\n```\r\n\r\nHowever the `Authorize` attribute mechanism always fails in this case, as the Role claim is an array of role values. It expects individual role claims of ClaimValueType= string not array.\r\n\r\nOf course, now that I have spent a lot of time debugging this issue the fix seems trivial - I can modify the way I deserialise the JWT, to transform the singular role claim into seperate claims. But I first had to experience this pain, and so might anyone else who attempts to use JWT so this seems like its something that should be addressed in the framework.\r\n\r\nI'm not sure whether my issue should be considered a bug or a feature request, but the desire is that a JWT produced by `System.IdentityModel.Tokens.Jwt` and sent to a blazor wasm client, should be able to be consumed from blazor's authorization model. Perhaps the Authorize check could be extended to cater for a role claim that is an array of role name values? Or a helper package can be provided to deserialise JWT's in a way that transforms claims into the necessary format required by blazor.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.0' and latest blazor wasm project.\r\n2. In the blazor.wasm project, create an `AuthenticationStateProvider` and have it return a ClaimsPrincipal that is constructed with these claims:\r\n\r\n```\r\n var claims = new Claim[]\r\n        {\r\n        new Claim(ClaimTypes.Name, \"Test User\"),\r\n        new Claim(ClaimTypes.Role, \"[\\\"Admin\\\",\\\"Test\\\"]\", \"Array\"), \r\n       //  new Claim(ClaimTypes.Role, \"Admin\"),\r\n      };\r\n```\r\nNotice I have commented the bottom line for now.\r\n2. Add an `@attribute [Authorize(Roles=\"Admin\")]` to a page. Navigate to it, authoziation will fail.\r\n3. Uncomment that line above, navigate to the page again - authorization succeeds.\r\n\r\n\r\n### Expected behavior\r\nAs above, I expect that a JWT produced on the server by `System.IdentityModel.Tokens.Jwt` and deserialised on a blazor wasm client to a list of its claims, should work with blazor's authorization model. If claims need to be first transformed (i.e from a single claim containing an array of values back into multiple claims) then there should be a helper library to provide this compatibility on the client.  \r\n\r\n### Screenshots\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14930","RelatedDescription":"Open issue \"Blazor Authorize attribute and role claims in array format\" (#14930)"},{"Id":"505619567","IsPullRequest":false,"CreatedAt":"2019-10-11T16:50:18","Actor":"sdyalor","Number":"14910","RawContent":null,"Title":"Just .NET Runtime for Javascript","State":"closed","Body":"Blazor is awesome, but I need language features like LINQ or DataFrame.\r\nIs there a way to wrap this on an already developed javascript project?","Url":"https://github.com/aspnet/AspNetCore/issues/14910","RelatedDescription":"Closed issue \"Just .NET Runtime for Javascript\" (#14910)"},{"Id":"505862922","IsPullRequest":false,"CreatedAt":"2019-10-11T16:38:47","Actor":"javiercn","Number":"14920","RawContent":null,"Title":"[Templates] Exclude app.db from publish to single file","State":"closed","Body":"Causes the published app to fail when the app tries to access the database","Url":"https://github.com/aspnet/AspNetCore/issues/14920","RelatedDescription":"Closed issue \"[Templates] Exclude app.db from publish to single file\" (#14920)"},{"Id":"505864312","IsPullRequest":true,"CreatedAt":"2019-10-11T16:38:12","Actor":"javiercn","Number":"14921","RawContent":null,"Title":"[Templating][Fixes #14920] Exclude app.db from publish to single file","State":"closed","Body":"Otherwise the published application fails when the code tries to\r\naccess the missing database.","Url":"https://github.com/aspnet/AspNetCore/pull/14921","RelatedDescription":"Closed or merged PR \"[Templating][Fixes #14920] Exclude app.db from publish to single file\" (#14921)"},{"Id":"505809719","IsPullRequest":false,"CreatedAt":"2019-10-11T16:29:26","Actor":"Bartmax","Number":"14914","RawContent":null,"Title":"What's the Url.Content way to convert virtual realtive path starting with ~ in 3.0 ?","State":"closed","Body":"I need to convert relative path to absolute path in a tag helper, so `~/some/path became => protocol://mydomain.tld/anyvirtualpath/some/path`\r\n\r\nI used this code on 2.2:\r\n```\r\nvar urlHelper = urlHelperFactory.GetUrlHelper(ViewContext);\r\nvar result = urlHelper.Content(\"~/some/path\");\r\n```\r\n\r\nOn 3.0, using endpoint routing, I get an exception if I add IUrlHelperFactory to IoC container because route data is empty. (or something like that)\r\n\r\nBut when trying to accomplish the same goal with LinkGeneration I cannot find a method/way to do what I want.\r\n\r\nSo what's the 3.0 way to convert virtual relative path to absolute paths?","Url":"https://github.com/aspnet/AspNetCore/issues/14914","RelatedDescription":"Closed issue \"What's the Url.Content way to convert virtual realtive path starting with ~ in 3.0 ?\" (#14914)"},{"Id":"505944660","IsPullRequest":false,"CreatedAt":"2019-10-11T16:22:31","Actor":"jomeno","Number":"14929","RawContent":null,"Title":"Using 'UseMvc' to configure MVC is not supported while using Endpoint Routing. To continue using 'UseMvc', please set 'MvcOptions.EnableEndpointRouting = false' inside 'ConfigureServices'. (Razor Pages)","State":"open","Body":"### Scenario.\r\nI just upgraded a .netcoreapp2.2 Razor Pages web app (also containing some controllers annotated as <code>[ApiController]</code>) to .netcoreapp3.3 using the docs at https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio#update-routing-startup-code.\r\n\r\nAfterwards, Javascript calls to the Api controllers started returning 404 until I included:\r\n<code>app.UseMvc()</code> in Configure method in Startup.cs which led to this warning message: \r\n\r\n\"Using 'UseMvc' to configure MVC is not supported while using Endpoint Routing. To continue using 'UseMvc', please set 'MvcOptions.EnableEndpointRouting = false' inside 'ConfigureServices'\"\r\nEverything worked fine after adding <code>services.AddMvc(o => o.EnableEndpointRouting = false)</code> in ConfigureServices in Startup.cs.\r\n\r\n### Question\r\nShouldn't <code>services.AddRazorPages()</code> provide out-of-the-box working support for Api controllers or accept an option config to enable it without the need to <code>UseMvc()</code>?\r\n\r\n### What’s in AddRazorPages()\r\nThis updates in .NET Core 3.0 blog post by @danroth27 clearly mentions that <code>AddRazorPages()</code> excludes some API-focused feautures:\r\nhttps://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-0-preview-4/\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14929","RelatedDescription":"Open issue \"Using 'UseMvc' to configure MVC is not supported while using Endpoint Routing. To continue using 'UseMvc', please set 'MvcOptions.EnableEndpointRouting = false' inside 'ConfigureServices'. (Razor Pages)\" (#14929)"},{"Id":"505878716","IsPullRequest":false,"CreatedAt":"2019-10-11T16:13:16","Actor":"jivanova","Number":"14923","RawContent":null,"Title":"[Blazor] Error is thrown when component has been disposed before invoking a method from the client-side","State":"closed","Body":"Related to https://github.com/aspnet/AspNetCore/issues/11641\r\n\r\n### Describe the bug\r\n\r\n```\r\nThere is no tracked object with id '//'. Perhaps the DotNetObjectRef instance was already disposed.\r\n```\r\n\r\nWhen a component has asynchronous client-side logic, sometimes the disposal occurs prior to the invoke of a server method and the error is thrown. The issue is related to more complex scenarios, but I have isolated it in the simplest reproducible project. \r\n\r\n### To Reproduce\r\nRepo https://github.com/jivanova/DotNetObjectRef-Error\r\n\r\nAll steps described there.\r\n\r\n### Expected behavior\r\nTo be able to track whether the instance has been disposed and prevent further triggering of methods. \r\n\r\nI have tried to call js dispose function to keep the info that the dotnetinstance has been disposed, but it's not stable solution.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14923","RelatedDescription":"Closed issue \"[Blazor] Error is thrown when component has been disposed before invoking a method from the client-side\" (#14923)"},{"Id":"505927060","IsPullRequest":false,"CreatedAt":"2019-10-11T16:12:28","Actor":"vsfeedback","Number":"14927","RawContent":null,"Title":"Blazor missing reference by default","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/761990/blazor-missing-reference-by-default.html)._\n\n---\nHello, as you can see on screenshot the Blazor app missing reference by default, and resharper tell me to add reference.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/6/2019, 09:11 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/11/2019, 01:10 AM: \n\n<p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at: <a target='_blank' href=\"https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq\">https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq</a>. In case you need answers to common questions or need assisted support, be sure to use <a target='_blank' href=\"https://visualstudio.microsoft.com/vs/support/\">https://visualstudio.microsoft.com/vs/support/</a>. We’ll keep you posted on any updates to this feedback.</p>\n\n\n---\n### Original Solutions\n\n#### ice19942335 solved on 10/6/2019, 02:01 AM, 0 votes: \n\n<p>Add line in _Imports.razor</p><p>@using Microsoft.AspNetCore.Components</p>\n","Url":"https://github.com/aspnet/AspNetCore/issues/14927","RelatedDescription":"Closed issue \"Blazor missing reference by default\" (#14927)"},{"Id":"505936819","IsPullRequest":false,"CreatedAt":"2019-10-11T16:05:05","Actor":"danroth27","Number":"14928","RawContent":null,"Title":"Improve error handling in Blazor","State":"open","Body":"From @Sebazzz. See conversation here: https://devblogs.microsoft.com/aspnet/blazor-server-in-net-core-3-0-scenarios-and-performance/#comment-941\r\n\r\n\"I very much enjoy working with Blazor Server. I’m currently building a retrospective app in it (similar to retrium). I like the almost no-effort real-time UI and state broadcasting that’s possible with Blazor. It does some time getting rid of the classic request/response mindset. [However] error handling is cumbersome, and almost everything is destructive to the current session. And if something happens, the user doesn’t see any indication something happened. The need to litter every callback with a try/catch mechanism to contain errors and show an error message. Having a global or per-component error handling routine would be nice. Some errors, like errors during callbacks are recoverable. In addition to the above, in some conditions an unhandled error won’t be visible to the user anymore. The user interface will be unresponsive and there does not appear to be way to show a general message that something went wrong. I also like to be able to attach loading logic while a callback or event is performed (or are events performed synchronously?).\"\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14928","RelatedDescription":"Open issue \"Improve error handling in Blazor\" (#14928)"},{"Id":"505922226","IsPullRequest":false,"CreatedAt":"2019-10-11T15:35:09","Actor":"Masuzu","Number":"14926","RawContent":null,"Title":".NET Core 3.0 loggers not working after deployment in Azure","State":"open","Body":"I am running a basic Asp .NET Core application initialized with the default loggers\r\n ```\r\npublic sealed class Program\r\n    {\r\n        public static async Task Main(string[] args)\r\n        {\r\n            var host = BuildWebHost(args);\r\n            await host.RunAsync();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n    }\r\n```\r\nand `appsettings.json`as follows:\r\n```\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Information\"\r\n    }\r\n  },\r\n```\r\n\r\nThe application logs information/warning/error details when run locally while calling `ILogger<MyClass>::LogInformation/Warning/Error`, however, no logs are displayed in the log streams when the application in deployed in Azure:\r\n\r\nBelow are the Azure configuration settings:\r\n![image](https://user-images.githubusercontent.com/5464705/66664715-f55db080-ec44-11e9-8317-2c01f047ccbf.png)\r\n\r\nWith .NET Core 2.2 logging was working as intended in Azure. Did something change?\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14926","RelatedDescription":"Open issue \".NET Core 3.0 loggers not working after deployment in Azure\" (#14926)"},{"Id":"505916744","IsPullRequest":true,"CreatedAt":"2019-10-11T15:24:31","Actor":"jo-ninja","Number":"14925","RawContent":null,"Title":"Fixes typo in StaticComponentRenderer.cs","State":"open","Body":"Fixes \"reponse\" => \"response\"","Url":"https://github.com/aspnet/AspNetCore/pull/14925","RelatedDescription":"Open PR \"Fixes typo in StaticComponentRenderer.cs\" (#14925)"},{"Id":"505913024","IsPullRequest":false,"CreatedAt":"2019-10-11T15:17:23","Actor":"turowicz","Number":"14924","RawContent":null,"Title":"HubConnection interface","State":"open","Body":"In contrast to the \"full\" SignalR, Core one doesn't have a HubConnection that would be possible to Mock. There is no interface for it.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/master/src/SignalR/clients/csharp/Client.Core/src/HubConnection.cs#L36","Url":"https://github.com/aspnet/AspNetCore/issues/14924","RelatedDescription":"Open issue \"HubConnection interface\" (#14924)"},{"Id":"505866215","IsPullRequest":true,"CreatedAt":"2019-10-11T13:52:04","Actor":"dotnet-maestro[bot]","Number":"14922","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore-Tooling","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dcfdcc5e-7716-47da-6308-08d6bc51899c)\r\n## From https://github.com/aspnet/AspNetCore-Tooling\r\n- **Build**: 20191010.9\r\n- **Date Produced**: 10/11/2019 4:59 AM\r\n- **Commit**: 0b0fc1c24848a406e650175a4ed609cd5838a8fc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.Mvc.Razor.Extensions** -> 5.0.0-alpha1.19510.9\r\n  - **Microsoft.AspNetCore.Razor.Language** -> 5.0.0-alpha1.19510.9\r\n  - **Microsoft.CodeAnalysis.Razor** -> 5.0.0-alpha1.19510.9\r\n  - **Microsoft.NET.Sdk.Razor** -> 5.0.0-alpha1.19510.9\r\n\r\n[marker]: <> (End:dcfdcc5e-7716-47da-6308-08d6bc51899c)\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/14922","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore-Tooling\" (#14922)"},{"Id":"505814805","IsPullRequest":true,"CreatedAt":"2019-10-11T13:51:04","Actor":"dotnet-maestro[bot]","Number":"14915","RawContent":null,"Title":"[master] Update dependencies from aspnet/EntityFrameworkCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4cbc2a9e-8529-4b8a-adce-08d67a4e0ac2)\r\n## From https://github.com/aspnet/EntityFrameworkCore\r\n- **Build**: 20191010.7\r\n- **Date Produced**: 10/11/2019 4:51 AM\r\n- **Commit**: 2f284daecc1c03696c87224d029a3db37d510fc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.EntityFrameworkCore.Tools** -> 5.0.0-alpha1.19510.7\r\n  - **Microsoft.EntityFrameworkCore.SqlServer** -> 5.0.0-alpha1.19510.7\r\n  - **dotnet-ef** -> 5.0.0-alpha1.19510.7\r\n  - **Microsoft.EntityFrameworkCore** -> 5.0.0-alpha1.19510.7\r\n  - **Microsoft.EntityFrameworkCore.InMemory** -> 5.0.0-alpha1.19510.7\r\n  - **Microsoft.EntityFrameworkCore.Relational** -> 5.0.0-alpha1.19510.7\r\n  - **Microsoft.EntityFrameworkCore.Sqlite** -> 5.0.0-alpha1.19510.7\r\n\r\n[marker]: <> (End:4cbc2a9e-8529-4b8a-adce-08d67a4e0ac2)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.AspNetCore.Analyzer.Testing** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.AspNetCore.BenchmarkRunner.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.ActivatorUtilities.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Caching.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Caching.Memory** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Caching.SqlServer** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Caching.StackExchangeRedis** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.CommandLineUtils.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.AzureKeyVault** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.Binder** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.CommandLine** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.EnvironmentVariables** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.FileExtensions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.Ini** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.Json** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.KeyPerFile** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.UserSecrets** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration.Xml** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Configuration** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.DependencyInjection.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.DependencyInjection** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.DiagnosticAdapter** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Diagnostics.HealthChecks** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.FileProviders.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.FileProviders.Composite** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.FileProviders.Embedded** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.FileProviders.Physical** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.FileSystemGlobbing** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.HashCodeCombiner.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Hosting.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Hosting** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.HostFactoryResolver.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Http** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Localization.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Localization** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.Abstractions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.AzureAppServices** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.Configuration** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.Console** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.Debug** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.EventSource** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.EventLog** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.TraceSource** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging.Testing** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.ObjectPool** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Options.ConfigurationExtensions** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Options.DataAnnotations** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Options** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.ParameterDefaultValue.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Primitives** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.TypeNameHelper.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.ValueStopwatch.Sources** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.WebEncoders** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Internal.Extensions.Refs** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.JSInterop** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Mono.WebAssembly.Interop** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.Extensions.Logging** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Internal.AspNetCore.Analyzers** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n- **Microsoft.AspNetCore.Testing** -> 5.0.0-alpha1.19509.4 (parent: Microsoft.EntityFrameworkCore)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/14915","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/EntityFrameworkCore\" (#14915)"},{"Id":"505847660","IsPullRequest":false,"CreatedAt":"2019-10-11T13:17:33","Actor":"echuck66","Number":"14919","RawContent":null,"Title":"ASPNETCORE_ENVIRONMENT issues with Startup classes and local IIS profiles","State":"open","Body":"### Describe the bug\r\nWhen running, debugging or deploying Asp.Net Core applications, environment variables are added to the web.config file, which ultimately concatenates this specific environment variable, rendering it absolutely worthless. For example, if you set the environment variable to 'Development', running or debugging the application causes the environment variable to be rendered as 'Development;Staging', 'Development;Development', 'Staging;Production', or some variation thereof. This makes determining which  Startup class, Config class and appSettings.json file impossible to determine at run time.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Start with a normal Asp.Net core application running in IISExpress.\r\n2. Set a system environment variable for ASPNETCORE_ENVIRONMENT.\r\n3. Add a profile to allow running the application through the local machine's IIS.\r\n4. Run or debug the project. <-- at this point, you can see the web.config has been mondified\r\n5. Remove the local IIS profile and run/debug/deploy again.\r\n6. Condition persists.\r\n7. Remove the IIS application definitions from the local IIS and repeat.\r\n8. Condition persists.\r\n\r\nThe web.config file will be modified to include the environment variable ASPNETCORE_ENVIRONMENT.\r\n\r\n### Expected behavior\r\nWith so many different ways to set the environment variable, I would expect the web.config file to NOT be modified with the environment variable. This completely breaks the application.\r\n\r\n\r\n### Visual Studio Version\r\nVisual Studio 2019 version 16.2.1","Url":"https://github.com/aspnet/AspNetCore/issues/14919","RelatedDescription":"Open issue \"ASPNETCORE_ENVIRONMENT issues with Startup classes and local IIS profiles\" (#14919)"},{"Id":"505841118","IsPullRequest":false,"CreatedAt":"2019-10-11T13:05:15","Actor":"marcuslindblom","Number":"14918","RawContent":null,"Title":"Change default controller based on user is authenticated or not","State":"open","Body":"What is the preferred way of dealing with default controller name. The idea I have is to route non authenticated users to the home controller and authenticated users to app controller. I want to serve the views using the default path `/` in both cases. Is a route constraint the preferred way? If so, can you point me to an example implementation?","Url":"https://github.com/aspnet/AspNetCore/issues/14918","RelatedDescription":"Open issue \"Change default controller based on user is authenticated or not\" (#14918)"},{"Id":"505839432","IsPullRequest":false,"CreatedAt":"2019-10-11T13:01:49","Actor":"sebnilsson","Number":"14917","RawContent":null,"Title":"Make \"Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter\" public again","State":"open","Body":"After upgrading a project from ASP.NET Core 2.x and .NET Core 2.x to 3.x, I found that [`Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter`](https://github.com/aspnet/AspNetCore/blob/master/src/Mvc/Mvc.Core/src/Filters/ResponseCacheFilter.cs) has become `internal`.\r\n\r\nIt previously used to be `public`, when it was [`Microsoft.AspNetCore.Mvc.Internal.ResponseCacheFilter`](https://github.com/aspnet/AspNetCore/blob/release/2.2/src/Mvc/Mvc.Core/src/Internal/ResponseCacheFilter.cs).\r\n\r\n**This brakes existing code**, which relies on resolving this filter and modifying it.","Url":"https://github.com/aspnet/AspNetCore/issues/14917","RelatedDescription":"Open issue \"Make \"Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter\" public again\" (#14917)"},{"Id":"505826295","IsPullRequest":false,"CreatedAt":"2019-10-11T12:35:54","Actor":"aL3891","Number":"14916","RawContent":null,"Title":"Blazor with multiple auth middleware","State":"open","Body":"### Describe the bug\r\nWhen using multiple auth middleware (AzureAD and AzureAdBearer in my case) blazor seems unable to find the logged in user. The user _is_ logged in though, its presented with the azure login ui and visiting a non-blazor page does correctly show the logged in user.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new blazor server app in visual studio, with work/School auth.\r\n2. In Startup.cs, replace the `AddAuthentication` and `AddControllersWithViews` calls with the following\r\n\r\n        services.AddAuthentication(options => { options.DefaultChallengeScheme = AzureADDefaults.AuthenticationScheme; })\r\n            .AddAzureAD(options => Configuration.Bind(\"AzureAd\", options))\r\n            .AddAzureADBearer(options => Configuration.Bind(\"AzureAd\", options));\r\n        \r\n        services.AddControllersWithViews(options =>\r\n        {\r\n            var policy = new AuthorizationPolicyBuilder(AzureADDefaults.BearerAuthenticationScheme, AzureADDefaults.AuthenticationScheme)\r\n                .RequireAuthenticatedUser().Build();\r\n            options.Filters.Add(new AuthorizeFilter(policy));\r\n        });\r\n\r\n3. Run and login\r\n\r\n### Expected behavior\r\nThe blazor app should show the logged in user but blazor in particular seems unable to do so.\r\n\r\nlooking at the output [with some static file stuff removed]\r\n\r\n            Request starting HTTP/2 GET https://localhost:5001/\r\n      info: Microsoft.AspNetCore.Routing.EndpointMiddleware[0]\r\n            Executing endpoint '/_Host'\r\n      info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[3]\r\n            Route matched with {page = \"/_Host\", area = \"\", action = \"\", controller = \"\"}. Executing page /_Host\r\n      info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]\r\n            Authorization was successful.\r\n      info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[103]\r\n            Executing an implicit handler method - ModelState is Valid\r\n      info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[104]\r\n            Executed an implicit handler method, returned result Microsoft.AspNetCore.Mvc.RazorPages.PageResult.\r\n      info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]\r\n            Authorization was successful.\r\n      info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[4]\r\n            Executed page /_Host in 137.3536ms\r\n      info: Microsoft.AspNetCore.Routing.EndpointMiddleware[1]\r\n            Executed endpoint '/_Host'\r\n      info: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n            Request finished in 175.8487ms 200 text/html; charset=utf-8\r\n      info: Microsoft.AspNetCore.Hosting.Diagnostics[1]\r\n            Request starting HTTP/2 POST https://localhost:5001/_blazor/negotiate text/plain;charset=UTF-8 0\r\n      info: Microsoft.AspNetCore.Routing.EndpointMiddleware[0]\r\n            Executing endpoint '/_blazor/negotiate'\r\n      info: Microsoft.AspNetCore.Routing.EndpointMiddleware[1]\r\n            Executed endpoint '/_blazor/negotiate'\r\n      info: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n            Request finished in 17.318ms 200 application/json\r\n      info: Microsoft.AspNetCore.Hosting.Diagnostics[1]\r\n            Request starting HTTP/1.1 GET https://localhost:5001/_blazor?id=NhnoRIeHHoiihpkIjnUnCg\r\n      info: Microsoft.AspNetCore.Routing.EndpointMiddleware[0]\r\n            Executing endpoint '/_blazor'\r\n      info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\r\n            Authorization failed.\r\n\r\nIt seems like authorization is successful when serving the _host but then fails later.\r\n\r\n### Additional context\r\nThere are few significant notes about this setup. AzureAD and AzureADBearer is used to use the AzureAD challenge if no auth is provided. In other words, you're ment to be able to open the app in a browser and enter the user login flow, or for a script to make a call to an api using a bearer token as well.\r\n\r\nThis means the auth filter must specify the Bearer auth first and the AzureAD second, otherwise the Bearer auth overwrites the AzureAD challenge response as user browses to a page. (at least this is my understanding)\r\n\r\ni notice though that the log only prints out one auth middleware at the end of the log there, so i wonder if blazor only checks the first auth middleware, the bearer in my case, witch isn't authorized while missing the auth middleware that actually is authorized, i'm just guessing here though\r\n\r\nThe first request looks like this and calls both auth middlewares\r\n\r\n    info: Microsoft.AspNetCore.Hosting.Diagnostics[1]\r\n          Request starting HTTP/2 GET https://localhost:5001/\r\n    info: Microsoft.AspNetCore.Routing.EndpointMiddleware[0]\r\n          Executing endpoint '/_Host'\r\n    info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[3]\r\n          Route matched with {page = \"/_Host\", area = \"\", action = \"\", controller = \"\"}. Executing page /_Host\r\n    info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[2]\r\n          Authorization failed.\r\n    info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[3]\r\n          Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.\r\n    info: Microsoft.AspNetCore.Mvc.ChallengeResult[1]\r\n          Executing ChallengeResult with authentication schemes (AzureADBearer, AzureAD).\r\n    info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[12]\r\n          AuthenticationScheme: AzureADJwtBearer was challenged.\r\n    info: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler[12]\r\n          AuthenticationScheme: AzureADOpenID was challenged.\r\n    info: Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker[4]\r\n          Executed page /_Host in 474.51980000000003ms\r\n    info: Microsoft.AspNetCore.Routing.EndpointMiddleware[1]\r\n          Executed endpoint '/_Host'\r\n    info: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n          Request finished in 580.8627ms 302\r\n\r\ni'm using the latest vs preview and 3.0.100 of the dotnet sdk\r\n\r\nThis issue also seems a bit similar to #13709 but not quite the same\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14916","RelatedDescription":"Open issue \"Blazor with multiple auth middleware\" (#14916)"},{"Id":"505736139","IsPullRequest":false,"CreatedAt":"2019-10-11T11:25:59","Actor":"jocco","Number":"14913","RawContent":null,"Title":"Model Validation runs on byte[] causing significant slowdown.","State":"closed","Body":"# Describe the bug\r\n\r\nI have added a custom InputFormatter to allow me to bind the request body to a byte[], this results in the model validation running on this array (which is a file and thus can be quite big) causing significant slow downs.\r\n\r\nThe documentation for model validation claims that this should not happen as arrays of primitive types should be short circuited\r\nhttps://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-3.0#automatic-short-circuit\r\n\r\n### To Reproduce\r\nUsing Aspnet core 3\r\n\r\nAdd a RawRequestBodyFormatter InputFormatter (source attached)\r\n[RawRequestBodyFormatter.txt](https://github.com/aspnet/AspNetCore/files/3716636/RawRequestBodyFormatter.txt)\r\n\r\n`\r\n            services.AddControllers()\r\n                .AddMvcOptions(options =>\r\n                {\r\n                    options.InputFormatters.Insert(0, item: new RawRequestBodyFormatter());\r\n`\r\n\r\nAdd a POST or PUT method that binds the body into a byte array\r\n`\r\n        [HttpPost(\"{bucket}\")]\r\n        [RequestSizeLimit(50_000_000)]\r\n        public async Task<IActionResult> Post(\r\n            [Required] string bucket,\r\n            [FromBody] byte[] blob)\r\n        {\r\n\r\n        }\r\n`\r\n\r\n\r\nWhen posting a file of 30 MBs this takes about 4 seconds to do the model validation running locally under IIS Express.\r\n\r\n### Expected behavior\r\nThe byte[] should not have validation applied to it as per the documentation. Even if the documentation is incorrect and enumerations of primitive types should have validation, there doesn't seem to be any point in validating a byte[]\r\n\r\n### Screenshots\r\nScreenshot of dotTrace showing the cpu spend in ValidationVisitor\r\n![modelValidationProfile](https://user-images.githubusercontent.com/13694867/66639662-95044a00-ec17-11e9-86e4-8023d7b87c9b.png)\r\n\r\n\r\n\r\n### Additional context\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013656 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19405.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28405-07 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/aspnet/AspNetCore/issues/14913","RelatedDescription":"Closed issue \"Model Validation runs on byte[] causing significant slowdown.\" (#14913)"},{"Id":"505716896","IsPullRequest":false,"CreatedAt":"2019-10-11T08:38:09","Actor":"taomylife521","Number":"14912","RawContent":null,"Title":"Build Failed ASP.NET Core from Source !","State":"open","Body":"### If you believe you have an issue that affects the security of the platform please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx) but ONLY if it is reported through email.\r\n\r\n### Describe the bug\r\nExecute restore.cmd\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 3.0\r\n\r\n\r\n### Expected behavior\r\nbuild sucess\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/9649318/66637310-5eddbf00-ec45-11e9-9c96-0a29ff0d07e4.png)\r\n![image](https://user-images.githubusercontent.com/9649318/66637333-656c3680-ec45-11e9-8f79-6c7c7785d62a.png)\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n![image](https://user-images.githubusercontent.com/9649318/66637376-7ddc5100-ec45-11e9-854e-057895b1c18b.png)\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14912","RelatedDescription":"Open issue \"Build Failed ASP.NET Core from Source !\" (#14912)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"Rightio-Limited","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"496088190","IsPullRequest":false,"CreatedAt":"2019-09-20T00:47:11","Actor":"rynowak","Number":"389","RawContent":null,"Title":"JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly","State":"open","Body":"## JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly\r\n\r\nJsonResult has moved to the `Microsoft.AspNetCore.Mvc.Core` assembly. This type used to be defined in `Microsoft.AspNetCore.Mvc.Formatters.Json`. While we have added `[TypeForward(...)]` that will address this issue for the majority of users, applications that use 3rd party libraries may encounter issues.\r\n\r\nLibraries that were compiled against the 2.2 version of `Microsoft.AspNetCore.Mvc.Formatters.Json` may need to recompile in order to address the problem for all user.\r\n\r\n### Version introduced\r\n\r\n3.0-preview 6\r\n\r\n### Old behavior\r\n\r\nApplication using a 2.2-based library could be built.\r\n\r\n### New behavior\r\n\r\nApplication fails compilation with an [error like](https://github.com/aspnet/AspNetCore/issues/7220):\r\n\r\n```\r\nThe type 'JsonResult' exists in both 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.AspNetCore.Mvc.Formatters.Json, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n```\r\n\r\n### Reason for change\r\n\r\nThis is part of platform-level changes to the composition of ASP.NET Core as described here: https://github.com/aspnet/Announcements/issues/325\r\n\r\n### Recommended action\r\n\r\nContact the library author and ask them to recompile the library targeting ASP.NET Core 3.0.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[JsonResult](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.jsonresult?view=aspnetcore-2.2)\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/389","RelatedDescription":"Open issue \"JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly\" (#389)"},{"Id":"496084841","IsPullRequest":false,"CreatedAt":"2019-09-20T00:30:20","Actor":"rynowak","Number":"388","RawContent":null,"Title":"Binary breaking change in removal of Microsoft.AspNetCore.Mvc.Components.Prerendering","State":"open","Body":"## Removal of Microsoft.AspNetCore.Mvc.Components.Prerendering\r\n\r\nThe assembly `Microsoft.AspNetCore.Mvc.Components.Prerendering` was removed in 3.0-preview 9. This can cause applications compiled against earlier 3.0 previews to fail at runtime even if they are not using this assembly.\r\n\r\n### Version introduced\r\n\r\n3.0-preview 9\r\n\r\n### Old behavior\r\n\r\nApplications compiled against 3.0-preview 8 or earlier are able to load `Microsoft.AspNetCore.Mvc.Components.Prerendering`\r\n\r\n### New behavior\r\n\r\nApplication crashes during startup with an exception like:\r\n\r\n```\r\n\r\n\"Unhandled exception. System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.AspNetCore.Mvc.Components.Prerendering, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified. File name: 'Microsoft.AspNetCore.Mvc.Components.Prerendering, Culture=neutral, PublicKeyToken=null'    at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly assemblyContext, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, AssemblyLoadContext assemblyLoadContext)    at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, StackCrawlMark& stackMark, AssemblyLoadContext assemblyLoadContext)    at System.Reflection.Assembly.Load(String assemblyString)    at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.<>c.<GetApplicationPartAssemblies>b__8_0(ApplicationPartAttribute name)    at System.Linq.Enumerable.SelectArrayIterator`2.ToArray()    at System.Linq.Buffer`1..ctor(IEnumerable`1 source)  \r\n```\r\n\r\n### Reason for change\r\n\r\nThis assembly was part of the Blazor programming model, and the design and layering of these components changed between preview 8 and preview 9.\r\n\r\n### Recommended action\r\n\r\nRebuild the application against 3.0 preview 9 or later.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/388","RelatedDescription":"Open issue \"Binary breaking change in removal of Microsoft.AspNetCore.Mvc.Components.Prerendering\" (#388)"},{"Id":"496008673","IsPullRequest":false,"CreatedAt":"2019-09-19T20:24:17","Actor":"pranavkm","Number":"387","RawContent":null,"Title":"Breaking API changes in Antiforgery, Cors, Diagnostics, Mvc, and Routing","State":"open","Body":"As part of the 3.0 release, the following types and methods have been removed from Antiforgery, CORS, Diagnostics, MVC and Routing. Since these are binary breaking changes, applications or libraries that reference these APIs must remove these references and recompile to be compatible with ASP.NET Core 3.0:\r\n\r\n## Types\r\n\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue`\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView`\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.WelcomePage`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.AttributeValue`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.BaseView`\r\n* `Microsoft.AspNetCore.Routing.IRouteValuesAddressMetadata`\r\n* `Microsoft.AspNetCore.Routing.RouteValuesAddressMetadata`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.Xml.ProblemDetails21Wrapper`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.Xml.ValidationProblemDetails21Wrapper`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.ViewsFeatureProvider`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageArgumentBinder`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.DefaultPageArgumentBinder`\r\n\r\n## Properties and methods\r\n\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookieName { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookiePath { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookieDomain { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.RequireSsl { get; set; }`\r\n* `Microsoft.AspNetCore.Cors.CorsService.ctor(IOptions<CorsService> options)`\r\n* `Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.ctor(ILoggerFactory, UrlEncoder, ObjectPool<UriBuildingContext>, IInlineConstraintResolver )`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.OutputFormatterCanWriteContext()`\r\n* `Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider.ctor(IOptions<MvcOptions> optionsAccessor, IInlineConstraintResolver constraintResolver, IModelMetadataProvider modelMetadataProvider);`\r\n* `Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider.ctor(IOptions<MvcOptions> optionsAccessor, IInlineConstraintResolver constraintResolver, IModelMetadataProvider modelMetadataProvider, IActionResultTypeMapper mapper)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.ctor(IOptions<MvcOptions> options)`\r\n* `Microsoft.AspNetCore.Mvc.LocalRedirectResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToActionResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToPageResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToRouteResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder.ctor(IModelBinder elementBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.ctor(IDictionary<ModelMetadata, IModelBinder> propertyBinders)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder.ctor(IModelBinder keyBinder, IModelBinder valueBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder.ctor(NumberStyles supportedStyles)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder.ctor(NumberStyles supportedStyles)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinder.ctor(IModelBinder keyBinder, IModelBinder valueBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder.ctor(Type type)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ctor(IEnumerable<object> typeAttributes)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ctor(IEnumerable<object> propertyAttributes, IEnumerable<object> typeAttributes)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.ctor(IModelMetadataProvider metadataProvider, IOptions<MvcOptions> options)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.ctor(IModelMetadataProvider modelMetadataProvider, IModelBinderFactory modelBinderFactory, IObjectModelValidator validator)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IValueProvider valueProvider, ParameterDescriptor parameter)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IValueProvider valueProvider, ParameterDescriptor parameter, object value)`\r\n* `Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor(bool suppressInputFormatterBuffering)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor(MvcOptions options)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor(bool suppressInputFormatterBuffering)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor(MvcOptions options)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, JavaScriptEncoder javaScriptEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, JavaScriptEncoder javaScriptEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.Path { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.Domain { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.CookieName { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAdapter.ctor(RazorPageBase page)`\r\n* `Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressUseValidationProblemDetailsForInvalidModelStateResponses { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.AllowInferringBindingSourceForCollectionTypesAsFromQuery { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.AllowInferringBindingSourceForCollectionTypesAsFromQuery { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowCombiningAuthorizeFilters { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowBindingHeaderValuesToNonStringModelTypes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowValidatingTopLevelNodes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatterExceptionPolicy { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.SuppressBindingUndefinedValueToEnumType { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowShortCircuitingValidationWhenNoValidatorsArePresent { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcDataAnnotationsLocalizationOptions.AllowDataAnnotationsLocalizationForEnumDisplayAttributes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcXmlOptions.AllowRfc7807CompliantProblemDetailsFormat { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowAreas { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowMappingHeadRequestsToGetHandler { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowDefaultHandlingForOptionsRequests { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcViewOptions.SuppressTempDataAttributePrefix { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcViewOptions.AllowRenderingMaxLengthAttribute { get; set; }`\r\n\r\nFor questions or further discussions about this, please use https://github.com/aspnet/AspNetCore/issues/14169\r\n\r\n[This announcement has been migrated to dotnet/docs#14708]","Url":"https://github.com/aspnet/Announcements/issues/387","RelatedDescription":"Open issue \"Breaking API changes in Antiforgery, Cors, Diagnostics, Mvc, and Routing\" (#387)"},{"Id":"492917223","IsPullRequest":false,"CreatedAt":"2019-09-12T16:45:15","Actor":"HaoK","Number":"386","RawContent":null,"Title":"Breaking change in AddAuthorization(o =>) overload lives in a different assembly","State":"open","Body":"## Breaking change in `AddAuthorization(o =>)` overload lives in a different assembly\r\n\r\nWe renamed the core `AddAuthorization` methods that used to live in `Microsoft.AspNetCore.Authorization` to be `AddAuthorizationCore`, the old `AddAuthorization` methods still exist, but are in the `Microsoft.AspNetCore.Authorization.Policy` package instead.  Apps that are using both should see no impact, but apps that were not using the policy package will need to switch to using `AddAuthorizationCore`\r\n\r\n### Version introduced\r\n\r\n3.0\r\n\r\n### Old behavior\r\n\r\n`AddAuthorization` methods existed in `Microsoft.AspNetCore.Authorization`\r\n\r\n### New behavior\r\n\r\n`AddAuthorization` methods exist in `Microsoft.AspNetCore.Authorization.Policy`, `AddAuthorizationCore` is the new name for the old methods\r\n\r\n### Reason for change\r\n\r\nWe wanted the better `AddAuthorization` name to add all of the common services needed for authorization, so we decided to take over the old name in 3.0..\r\n\r\n### Recommended action\r\n\r\nEither add a reference to `Microsoft.AspNetCore.Authorization.Policy` or use `AddAuthorizationCore` instead\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[`AddAuthorization(Action<AuthorizationOptions>)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.authorizationservicecollectionextensions.addauthorization?view=aspnetcore-2.2#Microsoft_Extensions_DependencyInjection_AuthorizationServiceCollectionExtensions_AddAuthorization_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Microsoft_AspNetCore_Authorization_AuthorizationOptions__)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n* This announcement has been migrated to: dotnet/docs#14525.","Url":"https://github.com/aspnet/Announcements/issues/386","RelatedDescription":"Open issue \"Breaking change in AddAuthorization(o =>) overload lives in a different assembly\" (#386)"},{"Id":"491793001","IsPullRequest":false,"CreatedAt":"2019-09-10T17:02:22","Actor":"blowdart","Number":"385","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service attack in the Microsoft OData library used in ASP.NET could cause a denial of service against an OData web application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the OData application.\r\n\r\nThe update addresses the vulnerability by updating the version of OData ASP.NET Core uses.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/13860\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's OData implementation or your application does not use Azure Storage to store data protect keys you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses `Microsoft.Data.OData.dll` or `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` with a vulnerable version listed below.\r\nAny ASP.NET Core based application that uses the `Microsoft.AspNetCore.All` shared framework with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.DataProtection.AzureStorage.dll | 2.1.1 <br /> 2.2.0 | 2.1.2 <br /> 2.2.1\r\nMicrosoft.Data.OData | < 5.8.4 | 5.8.4\r\nMicrosoft.AspNetCore.All | 2.1.0 - 2.1.12 <br /> 2.2.0 - 2.2.6 | 2.1.13 <br /> 2.2.7\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\nThe affected assemblies are also available separately as a NuGet package. Even if you are not using `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` or `Microsoft.Data.OData` directly you may still be affected if either package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends on `Contoso.Internals`, your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.DataProtection.AzureStorage.dll/2.1.1` is a reference to version 2.1.1 of `Microsoft.AspNetCore.DataProtection.AzureStorage.dll`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.1 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version 2.1.1\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Eric Scott](http://linked.com/in/ericwscott)\r\n\r\n### External Links\r\n\r\n[CVE-2019-1075](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1075)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/385","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData\" (#385)"},{"Id":"491792101","IsPullRequest":false,"CreatedAt":"2019-09-10T17:00:20","Actor":"blowdart","Number":"384","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles content encoding and updates the application templates to depend on the corrected code libraries.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/13859\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not ASP.NET SPA services your application is not vulnerable.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on ASP.NET Core 2.1.0-2.1.1, or ASP.NET Core 2.2.0 or any preview of ASP.NET Core 3.0.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses `Microsoft.AspNetCore.SpaServices` with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.SpaServices | 2.1.0-2.1.1 <br /> 2.2.0 | 2.1.2 <br /> 2.2.1\r\n\r\nASP.NET Core v3 will be updated with its RTM release.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\nYou must now update your existing SPA services projects to use the newer version of the vulnerable packages.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.SpaServices/2.1.0` is a reference to version 2.1.1 of `Microsoft.AspNetCore.SpaServices`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.1 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version 2.1.1\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.SpaServices` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.SpaServices` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nIan Routledge [(@ediblecode)](https://twitter.com/ediblecode)\r\n\r\n### External Links\r\n\r\n[CVE-2019-1302](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1302)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/384","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability\" (#384)"},{"Id":"487208574","IsPullRequest":true,"CreatedAt":"2019-09-05T14:48:35","Actor":"rpetrusha","Number":"383","RawContent":null,"Title":"Added breaking change template","State":"closed","Body":"## Added breaking change template\r\n\r\n","Url":"https://github.com/aspnet/Announcements/pull/383","RelatedDescription":"Closed or merged PR \"Added breaking change template\" (#383)"},{"Id":"481260943","IsPullRequest":false,"CreatedAt":"2019-08-15T17:46:23","Actor":"blowdart","Number":"382","RawContent":null,"Title":"Statement on Kestrel HTTP/2 implementation and CERT VU#605641","State":"open","Body":"[CERT VU605641](https://kb.cert.org/vuls/id/605641/) details various errors in some HTTP/2 implementations . Whilst Kestrel is not listed we've seen a number of customer questions about the bugs.\r\n\r\nThe Kestrel team were made aware of the vulnerabilities and tested them against Kestrel and our best practice code. We are unaware of any instances of the vulnerabilities affecting Kestrel at this time, but, as always we will keep a close eye on further developments.","Url":"https://github.com/aspnet/Announcements/issues/382","RelatedDescription":"Open issue \"Statement on Kestrel HTTP/2 implementation and CERT VU#605641\" (#382)"},{"Id":"480919982","IsPullRequest":false,"CreatedAt":"2019-08-14T22:40:58","Actor":"NTaylorMullen","Number":"381","RawContent":null,"Title":"[Blazor] Removing automatic backing field support for @ref in 3.0.0-preview9","State":"open","Body":"### What's happening\r\nIn ASP.NET Core 3.0 Preview 8 release we added a productivity feature in Blazor to automatically generate backing fields for elements that utilized the `@ref` attribute. Unfortunately, we missed a critical design flaw which prevents this from working end-to-end.\r\n\r\nTrying to invoke build on a project with a `Counter` component that looked like the following would result in a build error:\r\n```Razor\r\n<Counter @ref=\"myCounter\" />\r\n\r\n@code {\r\n    // This will not compile because there will be no backing field for myCounter\r\n    private readonly int _incrementingBy = myCounter.IncrementAmount;\r\n}\r\n```\r\n\r\nGiven that we're so close to a 3.0 release, we are going to cut this feature from 3.0. We will think about viable solutions to this in future releases, if we can find one, we may consider it then.\r\n\r\n### The problem deep dive\r\nTo summarize the problem effectively, I need to describe how the Razor compilation process works. It's a two-phase process:\r\n\r\n1. Discovery: All the components and directive attributes are discovered. Razor does this by generating a skeleton of each component file and then introspecting on their structure, we call these files declarations. Basically, any content in your Razor file that isn't a directive or inside of a directive block `@code` is thrown out to avoid compilation errors during this phase.\r\n2. Compiling: The actual Razor file compilation where it uses the inputs resolved in phase 1. This phase utilizes all of discovered components to properly parse HTML elements that look like components and uses all of the discovered directive attributes to properly parse those elements corresponding attributes that look like directive attributes.\r\n\r\nThe process is broken into two phases to enable Components to be written in Razor yet also impact other Razor files in the project. This is why you can write a `Counter.razor` file and still recursively use it in the same `Counter.razor` file.\r\n\r\nThe core problem is that during the `discovery` phase the Razor compiler has no awareness of the available components or directive attributes (it hasn't discovered them yet). This means, the `@ref` attribute and other component's existence is not available in this phase. This introduces a problem because a user may have written code in their `@code` block that references the supposed backing field generated from `@ref`; however, during discovery we didn't know about `@ref` so no backing field was generated. This results in Razor skeleton file that can't be compiled or introspected on (C# errors). We considered working around this limitation by hard coding `@ref` to not require the first phase but quickly found that would not work either because if a user writes `<Counter @ref=\"myCounter\" />` We need to generate a proper type name for the auto-generated backing field (`private Counter myCounter;`) which isn't reliably available because during the discovery phase we haven't yet discovered anything (it's not till phase 2 that we know of `Counter`).\r\n\r\n### Workaround\r\nIn 3.0.0-preview8 in order to utilize the `@ref` attribute you must do:\r\n\r\n```razor\r\n<button @ref=\"myButton\" @ref:suppressField />\r\n@code {\r\n    ElementReference myButton;\r\n}\r\n```\r\n\r\nOnce 3.0.0-preview9 and up ships you will be able to use the older syntax such as:\r\n\r\n```razor\r\n<button @ref=\"myButton\" />\r\n@code {\r\n    ElementReference myButton;\r\n}\r\n```","Url":"https://github.com/aspnet/Announcements/issues/381","RelatedDescription":"Open issue \"[Blazor] Removing automatic backing field support for @ref in 3.0.0-preview9\" (#381)"},{"Id":"480691511","IsPullRequest":false,"CreatedAt":"2019-08-14T13:51:16","Actor":"javiercn","Number":"380","RawContent":null,"Title":"Breaking change Identity UI uses the new static web assets","State":"open","Body":"In ASP.NET Core 3.0 we've moved Identity UI to use the new static web assets feature introduced in 3.0. As part of this move there are a few API breaking changes to note.\r\n\r\nBootstrap4 is the default UI framework for Identity UI. (Bootstrap 3 has reached end of life and you should consider migrating to a supported version).\r\n\r\nSelecting the framework is done by using the `IdentityUIFrameworkVersion` property in your project file.\r\n\r\nThe `AddIdentityUI` overload that takes a `UIFramework` parameter has been removed. If you are using Bootstrap4, simply call `AddIdentityUI()`. If you are using Bootstrap3, additionally add the following line to your project file inside a `PropertyGroup`.\r\n\r\n`<IdentityUIFrameworkVersion>Bootstrap3</IdentityUIFrameworkVersion>`\r\n\r\n[This announcement has been migrated to: dotnet/docs#14959]","Url":"https://github.com/aspnet/Announcements/issues/380","RelatedDescription":"Open issue \"Breaking change Identity UI uses the new static web assets\" (#380)"},{"Id":"477050682","IsPullRequest":false,"CreatedAt":"2019-08-05T20:46:09","Actor":"danroth27","Number":"379","RawContent":null,"Title":"Obsoleting Microsoft.AspNetCore.SpaServices and Microsoft.AspNetCore.NodeServices","State":"open","Body":"ASP.NET Core supports integration with various single-page app (SPA) frameworks, including Angular, React, and React + Redux. Initially integration with these frameworks was accomplished with ASP.NET Core specific components that handled scenarios like server-side prerendering and integration with webpack. But as time went on, industry standards changed and the SPA frameworks each released their own standard command-line interfaces (e.g., Angular CLI, create-react-app).\r\n\r\nWhen ASP.NET Core 2.1 was released in May 2018, we responded to the change in standards by providing a newer and simpler way to integrate with the SPA frameworks' own toolchains. This new integration mechanism exists in the package `Microsoft.AspNetCore.SpaServices.Extensions` and remains the basis of our Angular and React project templates since ASP.NET Core 2.1.\r\n\r\nTo clarify that the older ASP.NET Core specific components are not relevant or recommended, we are now officially obsoleting the pre-2.1 integration mechanism and marking the supporting NPM packages as deprecated.\r\n\r\nThe contents of the following NuGet packages have all been unnecessary since ASP.NET Core 2.1, and so are now being marked as obsolete:\r\n\r\n- Microsoft.AspNetCore.SpaServices\r\n- Microsoft.AspNetCore.NodeServices\r\n\r\nFor the same reason, the following NPM modules are being marked as deprecated:\r\n\r\n- aspnet-angular\r\n- aspnet-prerendering\r\n- aspnet-webpack\r\n- aspnet-webpack-react\r\n- domain-task\r\n\r\nThese packages will later be removed in .NET 5. If you are using these packages, please update your apps to use the functionality in Microsoft.AspNetCore.SpaServices.Extensions instead along with the functionality provided by the SPA frameworks you are using. To enable features like server-side prerendering and hot module reload please refer to the documentation for the corresponding SPA frameworks. The functionality in Microsoft.AspNetCore.SpaServices.Extensions is *not* obsolete and will continue to be supported.\r\n\r\nDiscussion for this issue is at aspnet/aspnetcore#12890\r\n\r\n*This announcement has been migrated to dotnet/docs#14958*","Url":"https://github.com/aspnet/Announcements/issues/379","RelatedDescription":"Open issue \"Obsoleting Microsoft.AspNetCore.SpaServices and Microsoft.AspNetCore.NodeServices\" (#379)"},{"Id":"474679821","IsPullRequest":false,"CreatedAt":"2019-07-30T16:19:27","Actor":"anurse","Number":"378","RawContent":null,"Title":"ASP.NET Core master branches have switched to \"5.0\"","State":"open","Body":"**This announcement is for contributors to ASP.NET Core repositories. Users should not be affected. Preview builds of 3.0 continue to be available at https://dotnet.microsoft.com/download/dotnet-core/3.0 . There are no preview builds of 5.0 at this time**\r\n\r\nVarious ASP.NET Core repos have switched their master branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. We will evaluate incoming work and make individual decisions on whether to back-port the work to 3.1. The version number being used is `5.0.0-alpha1`. This does not indicate a specific name or timeline for the initial preview release, it’s just a pre-release tag that allows us the flexibility to change the version as necessary. The [.NET Core Roadmap](https://github.com/dotnet/core/blob/master/roadmap.md) is the authoritative source for committed release schedules. \r\n\r\nAt present, this change is only relevant if you contribute to ASP.NET Core repositories. Otherwise, we recommend that you wait for the official 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at: aspnet/AspNetCore#12732\r\n\r\n## Details\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore)\r\n* [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* [aspnet/Blazor](https://github.com/aspnet/Blazor)\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [aspnet/Extensions](https://github.com/aspnet/Extensions)\r\n\r\nIn addition, the [aspnet/EntityFramework6](https://github.com/aspnet/EntityFramework6) repository has changed version numbers to 6.4 to reflect a version after the 6.3 release in progress. Again, there is no specific timeline or committment for this release.\r\n\r\nVersion numbers may still change during the development cycle for 5.0. This change is being done to reflect the current plans. \r\n\r\nIn large part, we switched master to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 release progresses towards the final build, we're increasing scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nAt present, there is no SDK or developer experience for 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. Look for a follow-up announcement when this experience is available.\r\n\r\n## Which branch has what?\r\n\r\nHere's a brief table listing the branches and the releases they are targeting:\r\n\r\n| Repository | 3.0 | 5.0 |\r\n| - | - | - |\r\n| [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) | [`release/3.0`](https://github.com/aspnet/AspNetCore/tree/release/3.0) | [`master`](https://github.com/aspnet/AspNetCore/tree/master) |\r\n| [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling) |[`release/3.0`](https://github.com/aspnet/AspNetCore-Tooling/tree/release/3.0) | [`master`](https://github.com/aspnet/AspNetCore-Tooling/tree/master) |\r\n| [aspnet/Blazor](https://github.com/aspnet/Blazor) | [`release/3.0`](https://github.com/aspnet/Blazor/tree/release/3.0) | [`master`](https://github.com/aspnet/Blazor/tree/master) |\r\n| [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) |[`release/3.0`](https://github.com/aspnet/EntityFrameworkCore/tree/release/3.0) | [`master`](https://github.com/aspnet/EntityFrameworkCore/tree/master) |\r\n| [aspnet/Extensions](https://github.com/aspnet/Extensions) | [`release/3.0`](https://github.com/aspnet/Extensions/tree/release/3.0) | [`master`](https://github.com/aspnet/Extensions/tree/master) |\r\n\r\nChanges for the 3.1 LTS release (planned for [November 2019](https://github.com/dotnet/core/blob/master/roadmap.md)) will be picked from changes made in 5.0 (master). The team will evaluate changes against customer impact to make these decisions.\r\n\r\nFor Entity Framework 6 development:\r\n\r\n| Repository | 6.3 | 6.4 |\r\n| - | - | - |\r\n| [aspnet/EntityFramework6](https://github.com/aspnet/EntityFramework6) | [`release/6.3`](https://github.com/aspnet/EntityFramework6/tree/release/6.3) | [`master`](https://github.com/aspnet/EntityFramework6/tree/master) |\r\n","Url":"https://github.com/aspnet/Announcements/issues/378","RelatedDescription":"Open issue \"ASP.NET Core master branches have switched to \"5.0\"\" (#378)"},{"Id":"473651882","IsPullRequest":false,"CreatedAt":"2019-07-27T15:59:32","Actor":"davidfowl","Number":"377","RawContent":null,"Title":"Pubternal APIs have been removed","State":"open","Body":"In order to better maintain the public API surface of ASP.NET Core, we've moved a large majority of the types in the *.Internal namespace to be truly internal. Members in these namespaces were always in a gray area. They were never meant to be supported as public APIs and could break in minor releases (and often did). We've moved away from pubternal for a large majority of APIs (they are still a few edge cases) an as a result, code that used to depend on these APIs will be broken when moving to 3.0.\r\n\r\nSee these issues for more details: \r\n\r\n- https://github.com/aspnet/AspNetCore/issues/4932\r\n- https://github.com/aspnet/AspNetCore/issues/11312.\r\n\r\n[This announcement has been  migrated to: dotnet/docs#14708]","Url":"https://github.com/aspnet/Announcements/issues/377","RelatedDescription":"Open issue \"Pubternal APIs have been removed\" (#377)"},{"Id":"473558588","IsPullRequest":false,"CreatedAt":"2019-07-26T22:32:45","Actor":"Tratcher","Number":"376","RawContent":null,"Title":"HttpResponse body infrastructure changes","State":"open","Body":"TLDR: The infrastructure backing HttpResponse bodies has changed. If you're using HttpResponse directly you should not need to make any code changes. Read further if you were wrapping or replacing HttpResponse.Body or accessing HttpContext.Features.\r\n\r\nVersion: 3.0.0-preview8\r\n\r\nBackground:\r\nHttpContext, HttpRequest, HttpResponse are backed by an abstraction called [Features](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/request-features?view=aspnetcore-2.2). This allows functionality to be provided by different components in the pipeline without wrapping the entire HttpContext.\r\n\r\nIn 2.x there are three APIs associated with the response body: IHttpResponseFeature.Body, IHttpSendFileFeature.SendFileAsync, and IHttpBufferingFeature.DisableResponseBuffering, but the later two were rarely implemented or used.\r\n\r\nOver the course of 3.0 several new response body APIs were added:\r\nIHttpResponseBodyPipeFeature\r\nIHttpResponseStartFeature.StartAsync\r\nIHttpResponseCompleteFeature.CompleteAsync\r\n\r\nProblem: With so many APIs it became too hard for middleware to properly intercept the response body. It was also hard for calling code to rely on those features being present on all servers.\r\n\r\nFix: Consolidate the response body APIs onto a single new feature interface [IHttpResponseBodyFeature](https://github.com/aspnet/AspNetCore/blob/4aebd29abca80242f5ff9e89e07d4f1b28788a44/src/Http/Http.Features/src/IHttpResponseBodyFeature.cs). HttpResponse has been updated accordingly, and each server has been updated to provide at least a minimal implementation for all of these APIs. We'll iterate to provide more fully featured implementations in each server but that won't require any more API changes.\r\n\r\nNote if you replace HttpResponse.Body it will now replace the entire IHttpResponseBodyFeature with a wrapper around your given stream using StreamResponseBodyFeature to provide default implementations for all of the expected APIs. Setting back the original stream will undo this change.\r\nhttps://github.com/aspnet/AspNetCore/blob/4aebd29abca80242f5ff9e89e07d4f1b28788a44/src/Http/Http/src/Internal/DefaultHttpResponse.cs#L67-L89\r\n\r\nBreaking change https://github.com/aspnet/AspNetCore/pull/12328\r\n\r\nObsolete existing 2.x APIs\r\nIHttpResponseFeature.Body\r\nIHttpSendFileFeature\r\nIHttpBufferingFeature\r\n\r\nDeleted feature interfaces that were introduced earlier in 3.0.\r\nIHttpResponseBodyPipeFeature\r\nIHttpResponseStartFeature\r\nIHttpResponseCompleteFeature\r\n\r\nIn a future major release we plan to refactor the request body features as well https://github.com/aspnet/AspNetCore/issues/12620.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/12635 for discussion.\r\n\r\nThis announcement has been migrated to: dotnet/docs#14832","Url":"https://github.com/aspnet/Announcements/issues/376","RelatedDescription":"Open issue \"HttpResponse body infrastructure changes\" (#376)"},{"Id":"473077311","IsPullRequest":false,"CreatedAt":"2019-07-25T21:25:57","Actor":"HaoK","Number":"375","RawContent":null,"Title":"Breaking change in IAuthorizationPolicyProvider","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/9759 we added a new method to `IAuthorizationPolicyProvider.GetFallbackPolicyAsync` which is the policy that will be used by the authorization middleware when no policy is specified.\r\n\r\nThis announcement has been migrated to: dotnet/docs#14834","Url":"https://github.com/aspnet/Announcements/issues/375","RelatedDescription":"Open issue \"Breaking change in IAuthorizationPolicyProvider\" (#375)"},{"Id":"472946568","IsPullRequest":false,"CreatedAt":"2019-07-25T15:58:23","Actor":"HaoK","Number":"374","RawContent":null,"Title":"Breaking change in SignInManager constructor (new parameter)","State":"open","Body":"As part of adding support for new email/confirmation flows in Identity(https://github.com/aspnet/AspNetCore/issues/8356), we added a new `IUserConfirmation<TUser>` argument to the constructor of `SignInManager`\r\n\r\nThis announcement has been migrated to: dotnet/docs#14828\r\n","Url":"https://github.com/aspnet/Announcements/issues/374","RelatedDescription":"Open issue \"Breaking change in SignInManager constructor (new parameter)\" (#374)"},{"Id":"465890178","IsPullRequest":false,"CreatedAt":"2019-07-09T17:01:09","Actor":"blowdart","Number":"373","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a spoofing vulnerability that exists in ASP.NET Core that could lead to an open redirect. An attacker who successfully exploited the vulnerability could redirect a targeted user to a malicious website.\r\n\r\nTo exploit the vulnerability, an attacker could send a link that has a specially crafted URL and convince the user to click the link.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core parses URLs.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/12007\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.HttpSys | 2.1.0, 2.1.1<br/>2.2.0 | 2.1.12<br/>2.2.6\r\nMicrosoft.AspNetCore.Server.IIS  | 2.2.0, 2.2.1, 2.2.2 | 2.2.6\r\nMicrosoft.AspNetCore.All | 2.1.0 - 2.1.11<br/>2.2.0 - 2.2.5 | 2.1.12<br/>2.2.6\r\nMicrosoft.AspNetCore.App | 2.1.0 - 2.1.11<br/>2.2.0 - 2.2.5 | 2.1.12<br/>2.2.6\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET 2.1 you should download Runtime 2.1.12 or SDK 2.1.508 for Visual Studio 2017 or SDK 2.1.605 for Visual Studio 2019 (v16.0) or SDK 2.1.701 for Visual Studio 2019 (v16.1) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.6 or SDK 2.2.108 for Visual Studio 2017 or SDK 2.2.205 for Visual Studio 2019 (v16.0) or SDK 2.2.301 for Visual Studio 2019 (v16.1) from https://dotnet.microsoft.com/download/dotnet-core/2.2\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nReported through Datalust\r\n\r\n### External Links\r\n\r\n[CVE-2019-1075](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1075)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 9, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-07-09_\r\n","Url":"https://github.com/aspnet/Announcements/issues/373","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability\" (#373)"},{"Id":"461299946","IsPullRequest":false,"CreatedAt":"2019-06-27T03:55:30","Actor":"anurse","Number":"372","RawContent":null,"Title":"SignalR JavaScript client changing package name to @microsoft/signalr","State":"open","Body":"In `3.0.0-preview7`, the SignalR JavaScript client will change from being `@aspnet/signalr` to `@microsoft/signalr`. We are doing this to reflect the fact that SignalR is useful in more than just ASP.NET Core applications, thanks to the Azure SignalR Service.\r\n\r\nTo react to this change, you will need to change your references in `package.json` files, `require` statements, and ECMAScript `import` statements. No API will change as part of this rename.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/11637 for discussions on this change.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14906]","Url":"https://github.com/aspnet/Announcements/issues/372","RelatedDescription":"Open issue \"SignalR JavaScript client changing package name to @microsoft/signalr\" (#372)"},{"Id":"459551013","IsPullRequest":false,"CreatedAt":"2019-06-23T08:36:59","Actor":"davidfowl","Number":"371","RawContent":null,"Title":"ConnectionAdapters have been removed from Kestrel","State":"open","Body":"As part of the move to move pubternal APIs to public, we've removed the concept of an `IConnectionAdapter` from Kestrel. Connection adapters are being replaced with connection middleware (very similar to http middleware in the ASP.NET Core pipeline but for lower level connections). HTTPS and Connection logging have been moved from connection adapters to connection middleware so those extension methods should continue to work seamlessly (but the guts have been re-implemented). See https://github.com/aspnet/AspNetCore/pull/11412 for more details.\r\n\r\nDiscuss this issue on https://github.com/aspnet/AspNetCore/issues/11475.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14905]","Url":"https://github.com/aspnet/Announcements/issues/371","RelatedDescription":"Open issue \"ConnectionAdapters have been removed from Kestrel\" (#371)"},{"Id":"459401188","IsPullRequest":false,"CreatedAt":"2019-06-21T23:07:26","Actor":"anurse","Number":"370","RawContent":null,"Title":"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package","State":"open","Body":"The `Microsoft.Extensions.Caching.SqlServer` package will use the new [`Microsoft.Data.SqlClient`](https://www.nuget.org/packages/Microsoft.Data.SqlClient) package starting in `3.0.0-preview7`.\r\n\r\nThis is being done to help align the database providers across the .NET Core stack. EntityFramework already migrated to this new package in `3.0.0-preview6`. If your application currently uses `System.Data.SqlClient`, we recommend converting to the new package. It is generally a drop-in replacement (with some namespace changes).\r\n\r\n**Please note the following _temporary_ limitation**: The current version of `Microsoft.Data.SqlClient` does not support 32-bit applications running on .NET Framework. When running in this configuration, you will get `BadImageFormatException`s thrown at runtime when trying to load the library. This limitation does not apply to 64-bit applications on .NET Framework or *either* bitness on .NET Core. The support matrix is below:\r\n\r\n| Architecture | **.NET Framework** | **.NET Core** |\r\n| - | - | - |\r\n| **x64 (64-bit)** | _Works_ | _Works_ |\r\n| **x86 (32-bit)** | **`BadImageFormatException`** | _Works_ |\r\n\r\nThis is a **temporary** limitation and will be fixed in time for the 3.0 RTM release.\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1876 as the discussion issue for this announcement.\r\n\r\nThis announcement has been migrated to: https://github.com/dotnet/docs/issues/14847","Url":"https://github.com/aspnet/Announcements/issues/370","RelatedDescription":"Open issue \"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package\" (#370)"},{"Id":"458928711","IsPullRequest":false,"CreatedAt":"2019-06-20T23:14:22","Actor":"BrennanConroy","Number":"369","RawContent":null,"Title":"SignalR HubConnectionContext constructors changing","State":"open","Body":"Prior to 3.0 `HubConnectionContext` had two constructors:\r\n\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory);\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory, TimeSpan clientTimeoutInterval);\r\n```\r\n\r\nIn 3.0 these 2 constructors have been removed and replaced them with a new one:\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, HubConnectionContextOptions contextOptions, ILoggerFactory loggerFactory)\r\n```\r\n\r\nThis new constructor makes use of a new options object, so we can expand the features of `HubConnectionContext` in the future without making more constructors and breaking changes.\r\n\r\nUse aspnet/AspNetCore#11431 to discuss this.\r\n\r\nThis announcement has been migrated to: https://github.com/dotnet/docs/issues/14845","Url":"https://github.com/aspnet/Announcements/issues/369","RelatedDescription":"Open issue \"SignalR HubConnectionContext constructors changing\" (#369)"},{"Id":"454800040","IsPullRequest":false,"CreatedAt":"2019-06-11T16:53:14","Actor":"anurse","Number":"368","RawContent":null,"Title":"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method","State":"open","Body":"The [`HandshakeProtocol.SuccessHandshakeData`](https://github.com/aspnet/AspNetCore/blob/c5b2bc0df2a0027832bf7d01dfb19ca39cd08ae6/src/SignalR/common/SignalR.Common/src/Protocol/HandshakeProtocol.cs#L27) field was removed and replaced with a helper method that generates a successful handshake response given a specific `IHubProtocol`. This change was made because additional fields were added to the handshake _response_ that are non-constant and change depending on the selected protocol.\r\n\r\nThis type is not designed for use from user code, it is public so it can be shared between the SignalR server and client. It may also be used by customer SignalR clients written in .NET. **Users** of SignalR should not be affected by this change.\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/11098 to discuss this.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14943]","Url":"https://github.com/aspnet/Announcements/issues/368","RelatedDescription":"Open issue \"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method\" (#368)"},{"Id":"454782204","IsPullRequest":false,"CreatedAt":"2019-06-11T16:13:43","Actor":"anurse","Number":"367","RawContent":null,"Title":"DebugLogger class made internal in ASP.NET Core 3.0","State":"open","Body":"The [`DebugLogger`](https://github.com/aspnet/Extensions/blob/28f85d7af4f2aef88939ad44a4852b8ebdbddb51/src/Logging/Logging.Debug/src/DebugLogger.cs) class was never intended to be constructed by user code. It is only constructed by the `DebugLoggerProvider` class. In 3.0 we are cleaning this up by making `DebugLogger` internal, to match with other logger implementations (such as `ConsoleLogger`, etc.).\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1823 for discussions.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14941]","Url":"https://github.com/aspnet/Announcements/issues/367","RelatedDescription":"Open issue \"DebugLogger class made internal in ASP.NET Core 3.0\" (#367)"},{"Id":"453603343","IsPullRequest":false,"CreatedAt":"2019-06-07T16:46:11","Actor":"Tratcher","Number":"366","RawContent":null,"Title":"OAuthHandler ExchangeCodeAsync signature change","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/10928, a breaking change was introduced in 3.0.0-preview7 where the signature of OAuthHandler.ExchangeCodeAsync was changed from:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(string code, string redirectUri) { throw null; }\r\n```\r\nTo:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext context) { throw null; }\r\n```\r\n\r\nThis change was made in order to flow additional parameters.\r\n\r\nOAuth handlers that override this API will need to be updated.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10991 for discussion.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14942]","Url":"https://github.com/aspnet/Announcements/issues/366","RelatedDescription":"Open issue \"OAuthHandler ExchangeCodeAsync signature change\" (#366)"},{"Id":"451701589","IsPullRequest":false,"CreatedAt":"2019-06-03T21:39:20","Actor":"pranavkm","Number":"364","RawContent":null,"Title":"Breaking changes to Microsoft.JSInterop ","State":"open","Body":"In 3.0-preview6, we're migrating Microsoft.JSInterop to use the System.Text.Json based serializer. As part of this transition, there are several breaking changes to the JSInterop library:\r\n\r\n* The helper type `Microsoft.JSInterop.Json` is being removed. Users may use a JSON serializer of their choice. We recommend using the `System.Text.Json`-based serializer since Blazor already references it. Here's the code change required to migrate to use `System.Text.Json`:\r\n\r\n```C#\r\n// Before\r\nstring value = Json.Serialize(...);\r\nMyPoco poco = Json.Deserialize<MyPoco>(\"...\");\r\n\r\n// After\r\nusing System.Text.Json.Serialization;\r\n...\r\n\r\nstring value = JsonSerializer.ToString(...);\r\nMyPoco poco = JsonSerializer.Parse<MyPoco>(\"...\");\r\n```\r\n\r\n* `DotNetObjectRef` is replaced by a generic `DotNetObjectRef<T>` that is required for both sending and receiving a managed object reference when doing interop with the browser\r\n    \r\n```C#\r\n// Before\r\nIJSRuntime.InvokeAsync(\"SomeJSMethod\", new DotNetObjectRef(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(MyObject myObject)\r\n{\r\n    ...\r\n}\r\n\r\n// After\r\nIJSRuntime.InvokeAsync(\"SomeMethod\", DotNetObjectRef.Create(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(DotNetObjectRef<MyObject> myObject)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n* Microsoft.JSInterop will use System.Text.Json to marshal interop data. To customize serialization, you may use serialization primitives such as `JsonPropertyNameAttribute`, `JsonIgnoreAttribute ` etc.\r\n\r\n* `IJSRuntime.UntrackObjectRef(DotNetObjectRef);` has been removed. To stop tracking an object reference, dispose the `DotNetObjectRef<T>` instance either on the server or the client.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/10810 for further discussions.","Url":"https://github.com/aspnet/Announcements/issues/364","RelatedDescription":"Open issue \"Breaking changes to Microsoft.JSInterop \" (#364)"},{"Id":"451308302","IsPullRequest":false,"CreatedAt":"2019-06-03T06:11:51","Actor":"davidfowl","Number":"363","RawContent":null,"Title":"Kestrel's transport abstractions have been removed and made public instead of pubternal","State":"open","Body":"As part of moving away from pubternal APIs in we're in the process of exposing the Kestrel transport layer as a public interface in 3.0. Read more details here https://github.com/aspnet/AspNetCore/issues/10308. As part of this change:\r\n\r\n- **Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions** has been removed (and all associated types)\r\n- `NoDelay` was remove from `ListenOptions` (and move to the transport options)\r\n- `SchedulingMode` was removed from `KestrelServerOptions`\r\n\r\n[This announcement has been migrated to: dotnet/docs#14881]","Url":"https://github.com/aspnet/Announcements/issues/363","RelatedDescription":"Open issue \"Kestrel's transport abstractions have been removed and made public instead of pubternal\" (#363)"},{"Id":"451301655","IsPullRequest":false,"CreatedAt":"2019-06-03T05:44:23","Actor":"BrennanConroy","Number":"362","RawContent":null,"Title":"UseSignalR and UseConnections are marked obsolete","State":"open","Body":"The methods `UseConnections` and `UseSignalR`, and the classes `ConnectionsRouteBuilder` and `HubRouteBuilder` are being marked obsolete in 3.0. And will be removed in the next major release after that.\r\n\r\nThe preferred method for using SignalR starting in 3.0 is to use Endpoint Routing. See example below.\r\n\r\nOld code:\r\n```csharp\r\napp.UseSignalR(routes =>\r\n{\r\n    routes.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nNew code:\r\n```csharp\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10754 for discussion.\r\n\r\n*This announcement has been migrated to https://github.com/dotnet/docs/issues/14928*","Url":"https://github.com/aspnet/Announcements/issues/362","RelatedDescription":"Open issue \"UseSignalR and UseConnections are marked obsolete\" (#362)"},{"Id":"451034262","IsPullRequest":false,"CreatedAt":"2019-06-01T02:24:00","Actor":"HaoK","Number":"361","RawContent":null,"Title":"SignInAsync will throw by default when given an unauthenticated identity ","State":"open","Body":"Historically, `SignInAsync` would accept any principals/identities, this included identities where `IsAuthenticated = false`. This was problematic because by default these principals would get rejected by `[Authorize]`/`RequireAuthenticatedUser()`.\r\n\r\nThere is a new flag on `AuthenticationOptions` called `RequireAuthenticatedSignIn` which is true by default as of 3.0-preview6, you can turn this off if you require the old behavior.\r\n\r\nFor more context see: https://github.com/aspnet/AspNetCore/issues/9255\r\n\r\n*This announcement has been migrated to https://github.com/dotnet/docs/issues/14929*","Url":"https://github.com/aspnet/Announcements/issues/361","RelatedDescription":"Open issue \"SignInAsync will throw by default when given an unauthenticated identity \" (#361)"},{"Id":"448250666","IsPullRequest":false,"CreatedAt":"2019-05-24T16:17:01","Actor":"Tratcher","Number":"360","RawContent":null,"Title":"Kestrel Request trailer headers moved to new collection","State":"open","Body":"In prior versions Kestrel would add HTTP/1.1 chunked trailer headers into the request headers collection when the request body was read to the end. This caused some concerns about ambiguity between headers and trailers so we decided to separate the trailers out to a new collection.\r\n\r\nHTTP/2 request trailers were unavailable in 2.2, but are now also available in this new collection in 3.0.0-preview6.\r\n\r\nNew [request extension methods](https://github.com/aspnet/AspNetCore/blob/3be11f6544485948ba17646ffa7b4242c2c5339a/src/Http/Http.Abstractions/src/Extensions/RequestTrailerExtensions.cs) have been added to access these trailers.\r\n\r\nHTTP/1.1 trailers are available once the entire request body has been read.\r\n\r\nHTTP/2 trailers are available as soon as they’re received from the client, but the client won’t send them until the entire request body has been at least buffered by the server.  You may need to read the request body to free up buffer space. Trailers will always be available if you read the request body to the end, as the trailers mark the end of the body.\r\n\r\nSee https://github.com/aspnet/AspNetCore/pull/10410 for the changes.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10519 for discussion.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14960]","Url":"https://github.com/aspnet/Announcements/issues/360","RelatedDescription":"Open issue \"Kestrel Request trailer headers moved to new collection\" (#360)"},{"Id":"444025246","IsPullRequest":false,"CreatedAt":"2019-05-14T17:00:32","Actor":"blowdart","Number":"359","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/10238\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.SignalR.Protocols.MessagePack | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4<br/>1.1.0 | 1.0.11<br/>1.1.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are also available separately as a NuGet package. If you are not using `Microsoft.AspNetCore.SignalR.Protocols.MessagePack` directly you may still be affected if you are using SignalR and the package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0892](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0982)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_\r\n","Url":"https://github.com/aspnet/Announcements/issues/359","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\" (#359)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1182360691853778944","CreatedAt":"2019-10-10T18:22:10+00:00","UserScreenname":"aspnet","Text":"Blazor Server in .NET Core 3.0 scenarios and performance\n\nhttps://t.co/zKurzbQAKd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":162,"FavoriteCount":88,"RawContent":null},{"Id":"1181691423906615296","CreatedAt":"2019-10-08T22:02:44+00:00","UserScreenname":"aspnet","Text":"We're developing documentation for the new System.Text.Json serializer. See the first installment at… https://t.co/Rs0WIPx4TT","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":29,"RawContent":null},{"Id":"1181313000302448640","CreatedAt":"2019-10-07T20:59:01+00:00","UserScreenname":"aspnet","Text":"We've got a great #ASPNET Community Standup planned for this week: \nRunning the .NET Website on… https://t.co/ge5vHt3nnj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"1179079540498239488","CreatedAt":"2019-10-01T17:04:03+00:00","UserScreenname":"aspnet","Text":"Starting soon... come join us at https://t.co/ZpgIufpi9U! https://t.co/NGrtBzefKA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":2,"RawContent":null},{"Id":"1178814205337583619","CreatedAt":"2019-09-30T23:29:42+00:00","UserScreenname":"aspnet","Text":"Join us for this week's #ASPNET Community Standup: New .NET Videos with @oliagavrysh and @shanselman \n\nTuesday | 10… https://t.co/sPZduhoGl4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":14,"RawContent":null},{"Id":"1174003673019498497","CreatedAt":"2019-09-17T16:54:22+00:00","UserScreenname":"aspnet","Text":"Starting soon! Come see the latest on @IdentityServer + @aspnet Core 3.0 from @leastprivilege, @BrockLAllen &amp;  + Ja… https://t.co/VElZjnbvAX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"1173720918482280448","CreatedAt":"2019-09-16T22:10:48+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup this Tuesday at 10 AM Pacific / 17 UTC\n\n🚀IdentityServer with… https://t.co/9kfWB3s9ZW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":15,"RawContent":null},{"Id":"1173683381646684161","CreatedAt":"2019-09-16T19:41:38+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core and Blazor updates in .NET Core 3.0 Release Candidate 1\n\nhttps://t.co/3hnNbiZCIF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":131,"FavoriteCount":82,"RawContent":null},{"Id":"1171554134459211776","CreatedAt":"2019-09-10T22:40:46+00:00","UserScreenname":"aspnet","Text":"Starting soon!\n\nCommunity Standup: \n\nJoin us for the #ASPNET Community Standup - 5th Anniversary Show featuring… https://t.co/3Lyz39ciha","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":8,"RawContent":null},{"Id":"1171165028155715584","CreatedAt":"2019-09-09T20:54:36+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #AspNet Community Standup: \n\n5th Anniversary Show featuring @shanselman @DamianEdwards\nand… https://t.co/6pZjG4JSLV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":19,"RawContent":null},{"Id":"1169333933776998401","CreatedAt":"2019-09-04T19:38:29+00:00","UserScreenname":"aspnet","Text":"Announcing .NET Core 3.0 Preview 9\n\nhttps://t.co/LWhIbpfJ7g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":153,"FavoriteCount":94,"RawContent":null},{"Id":"1169333861542694912","CreatedAt":"2019-09-04T19:38:12+00:00","UserScreenname":"aspnet","Text":"Announcing #ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 9\n\nhttps://t.co/dsDn78TFKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null}]}},"RunOn":"2019-10-12T05:30:15.4338834Z","RunDurationInMilliseconds":2938}