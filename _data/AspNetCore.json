{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T19:45:58+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6710552865","Type":"IssuesEvent","CreatedAt":"2017-10-12T22:07:20","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2241","RelatedDescription":"Closed issue \"Two actions with same Http<Method> attributes result in ambiguity on ubuntu\" (#2241) at aspnet/Home","RelatedBody":"@distomin opened this here: https://github.com/dotnet/core/issues/1026\r\n\r\nuname -a\r\nLinux N46JV 4.10.0-37-generic #41-Ubuntu SMP Fri Oct 6 20:20:37 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\ndotnet --version\r\n2.0.0\r\ndotnet new webapi\r\n\r\nAdd 2 actions in a controller with the same attribute (HttpGet for example)\r\n[HttpPost]\r\npublic Product Action4([FromForm]Product product)\r\n[HttpPost]\r\npublic Product Action5([FromBody]Product product)\r\n\r\nbuild the project, run the project and make http request.\r\n\r\nfail: Microsoft.AspNetCore.Mvc.Internal.ActionSelector[1]\r\n      Request matched multiple actions resulting in ambiguity\r\n... Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched.\r\n\r\nThey say it works on Windows platform correctly."},{"Id":"6710189548","Type":"IssuesEvent","CreatedAt":"2017-10-12T20:38:23","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2241","RelatedDescription":"Opened issue \"Two actions with same Http<Method> attributes result in ambiguity on ubuntu\" (#2241) at aspnet/Home","RelatedBody":"@distomin opened this here: https://github.com/dotnet/core/issues/1026\r\n\r\nuname -a\r\nLinux N46JV 4.10.0-37-generic #41-Ubuntu SMP Fri Oct 6 20:20:37 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\ndotnet --version\r\n2.0.0\r\ndotnet new webapi\r\n\r\nAdd 2 actions in a controller with the same attribute (HttpGet for example)\r\n[HttpPost]\r\npublic Product Action4([FromForm]Product product)\r\n[HttpPost]\r\npublic Product Action5([FromBody]Product product)\r\n\r\nbuild the project, run the project and make http request.\r\n\r\nfail: Microsoft.AspNetCore.Mvc.Internal.ActionSelector[1]\r\n      Request matched multiple actions resulting in ambiguity\r\n... Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched.\r\n\r\nThey say it works on Windows platform correctly."},{"Id":"6708662871","Type":"IssuesEvent","CreatedAt":"2017-10-12T15:11:36","Actor":"alex-brambila","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2240","RelatedDescription":"Opened issue \"Cannot find compilation library location for package ''\" (#2240) at aspnet/Home","RelatedBody":"Getting the same error w a custom Asp.Net Core 2.0 library that uses Reflection and Linq (no Razor). Works fine if I include the project in the solution, crashes w just a ref to the dll. App will be distributed to 3rd parties so can't distribute the project.\r\n\r\n`An unhandled exception occurred while processing the request.\r\nInvalidOperationException: Cannot find compilation library location for package 'DynamicQueryCore'\r\n\r\nMicrosoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List<string> assemblies)\r\n\r\n    Stack Query Cookies Headers \r\n\r\n    InvalidOperationException: Cannot find compilation library location for package 'DynamicQueryCore'\r\n        Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List<string> assemblies)\r\n        Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n        Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart+<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n        System.Linq.Enumerable+SelectManySingleSelectorIterator.MoveNext()\r\n        Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable<ApplicationPart> parts, MetadataReferenceFeature feature)\r\n        Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature<TFeature>(TFeature feature)\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n        System.Threading.LazyInitializer.EnsureInitializedCore<T>(ref T target, ref bool initialized, ref object syncLock, Func<T> valueFactory)\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n        Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n        Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n        Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n        Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n        Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(string relativePath)\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(string normalizedPath)\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n        Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(string relativePath)\r\n        Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet<IChangeToken> expirationTokens, string relativePath, bool isMainPage)\r\n        Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n        Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, string pageName, bool isMainPage)\r\n        Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, string viewName, bool isMainPage)\r\n        Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, string viewName, bool isMainPage)\r\n        Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n        Microsoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\n        System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n        System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()\r\n`\r\n"},{"Id":"6706646301","Type":"IssuesEvent","CreatedAt":"2017-10-12T08:00:15","Actor":"netsfx","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2239","RelatedDescription":"Opened issue \"Kestrel \"ignores\" listenOptions.UseHttps on asp.net Core 2.0 on Ubuntu - uses http instead - but works on Windows\" (#2239) at aspnet/Home","RelatedBody":"I want to run an asp.net core 2.0 site with Kestrel on Ubuntu with https and do:\r\n\r\n```\r\npublic static void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar host = new WebHostBuilder()\r\n\t\t\t\t.UseKestrel(options =>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.ApplicationSchedulingMode = SchedulingMode.Inline;\r\n\t\t\t\t\toptions.Listen(IPAddress.Any, 80);\r\n\t\t\t\t\toptions.Listen(IPAddress.Any, 443,\r\n\t\t\t\t   listenOptions =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlistenOptions.NoDelay = true;\r\n\t\t\t\t\t\t\t\tlistenOptions.UseHttps(\"cert.pfx\", args[0]);\r\n\t\t\t\t\t\t\t\tlistenOptions.UseConnectionLogging();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (Exception) { }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\toptions.UseSystemd();\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t.UseContentRoot(Directory.GetCurrentDirectory())\r\n\t\t\t\t.UseStartup<Startup>()\r\n\t\t\t\t.Build();\r\n\t\t\thost.Run();\r\n\t\t}\r\n```\r\nOn Windows, that works as expected:\r\nNow listening on: http://0.0.0.0:80\r\n*Now listening on: https://0.0.0.0:443*\r\n\r\nBut the same on Ubuntu yields *http* instead of *https* on port 443:\r\nNow listening on: http://0.0.0.0:80\r\n*Now listening on: http://0.0.0.0:443*\r\n\r\nThe result is that on Ubuntu port 443 will not serve https but http, which is of course not what I want.\r\n\r\nAny ideas?\r\n"},{"Id":"6706294240","Type":"IssuesEvent","CreatedAt":"2017-10-12T06:15:43","Actor":"jkotalik","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2238","RelatedDescription":"Closed issue \".netcore 2.0 Preview 2 IIS Deployment Error 502.5\" (#2238) at aspnet/Home","RelatedBody":"@nzcoward opened this here: https://github.com/dotnet/core/issues/788\r\n\r\nI am unable to run a web application built in .netcore 2.0 preview 2 in IIS.\r\n\r\nI did post a comment in #723 , however I have decided that the issue is different, as I am able to find the AspNetCoreModule after installing the Windows Hosting for .netcore 2.0 preview 2.\r\n\r\nI am able to run the application just using Kestrel, so it appears to simply be the reverse proxy provided by the module. \r\n\r\nI have done everything I can find with regards to trouble shooting as described for .netcore 1.x versions. This includes:\r\n\r\n- Adding IISConfiguration and Kestrel configuration in Program.cs (was missing in the new templates)\r\n- Ensuring the AspNetCoreModule is installed and in use by IIS\r\n- Tested both Standalone and Framework dependent deployments (including turning off the runtime framework in the application pool)\r\n- Using NetworkService as the Application Pool user\r\n- Running the deployed site using Kestrel (dotnet myapp.dll)\r\n- Review the web config and ensure it is set up correctly (<aspNetCore processPath=\"dotnet\" arguments=\".\\MyApp.dll\"...) and add logging (which logs nothing)\r\n- Set the ASPNETCORE_ENVIRONMENT environment variable in the web.config to 'Development'\r\n\r\nI don't have the official links any longer, but the basic steps from [Rick Strahl's blog](https://weblog.west-wind.com/posts/2016/Jun/06/Publishing-and-Running-ASPNET-Core-Applications-with-IIS) have been followed.\r\n\r\nNow, there is one VERY distinct difference between the errors that I have seen and mine with .netcore 2.0: the event viewer shows the error:\r\n\r\nApplication 'MACHINE/WEBROOT/APPHOST/MYAPP' with physical root 'C:\\inetpub\\wwwroot\\myapp\\' failed to start process with commandline ' ', ErrorCode = '0x80070057 : 0.\r\n\r\nThe commandline argument is empty!\r\n\r\nI did have .netcore 1.0, 1.1, previews, etc. installed on my machine previously, but they are all removed now.\r\n\r\nThe version of the AspNetCore.dll that I am running after installing the files from .netcore 2.0 WindowsHosting:\r\n\r\n![image](https://user-images.githubusercontent.com/10462479/28969198-7853e102-791b-11e7-8f62-4a7b38672d78.png)\r\n\r\nBased on the date, I assume it is the correct version, but this could be the problem! I have tried it with the previously installed version (i.e. before I installed the 2.0 one), but I didn't check the version on that installed assembly - it may be the same file... Hoping someone can tell me either way.\r\n\r\nBecause it runs in Kestrel without any problems, I do believe it is this module. \r\n\r\nnzcoward commented on Aug 4\r\nAnd after removing and then manually installing the 2.x SDKs, my projects no longer opened. Had to do a complete repair on VS 2017 to get the right things installed, and even then, not everything was installed properly.\r\n\r\nGoing back to PHP at this rate sounds like the best way to get my sanity back!\r\n\r\n@DamianEdwards\r\n\r\n     \r\nnzcoward commented on Aug 5\r\nOk - so I am not aware of anything changing, but it seems to have resolved itself as of this morning.\r\n\r\nI had given up, and went back to a WebApi2 project instead, which was easy to get up and running. I came to the conclusion that IIS itself was fine - so on a whim, I thought that I would try once more (I still had a single hair on my head, what could go wrong?)\r\n\r\nBoth Stand Alone and Framework Dependent deployments are working now.\r\n\r\nThere was ONE thing I never checked - which was that the AspNetCoreModule had installed itself into the site - it may not have been available there for whatever reason (I don't know this for certain - but I never checked). Perhaps the 4th restart of my computer managed to give that a kick.\r\n\r\nOne thing that I did change (but change back) was the site bindings. I had originally set it up with a hostname (referenced in my computer's hosts file to point to 127.0.0.1) and it sat alongside the Default Website that had *:80 binding. Now, I had thought about this earlier and disabled the Default Website, but the issue was still occurring. But the change I DID make was to set this site that wasn't working to have the *:80 binding when I deployed the WebApi2 app to it. I have since switched it back to just the api.mysite.com:80 binding and it is working.\r\n\r\nNeither of the above 2 things seem likely resolutions - surely the module was there, and if not, yet another restart wouldn't do something a previous restart hadn't - and tweaking bindings, unless somehow they were cached, seems just as unlikely.\r\n\r\nI do think that this issue is a good list of all the things to try, collated from a number of sites (official and unofficial) and blogs. It may help someone in the future if the list can be put somewhere.\r\n\r\nBut, things are working now, so the issue can be closed - I didn't want to do it myself, just in case it meant the issue was not longer easily searchable for the attempted resolutions.\r\n @nzcoward\r\n     \r\nnzcoward commented on Aug 5 • edited\r\nActually, I think I may have discovered it... I thought I had made a change yesterday, where the 502.5 was still occurring, but perhaps not. I have just deployed another app this morning, and it had the 502.5 error, except that I was able to resolve it:\r\n\r\nI had the application deployed to a folder, and had set up a virtual directory against the parent - path-wise it was a child folder also. Leaving it as a virtual directory, or letting IIS resolve the path resulted in the 502.5.\r\n\r\nSo I converted it to an application. And it works...\r\n\r\nIt is worth pointing out though, that the application is still using the parent application pool - it does not have its own.\r\n\r\nThis does actually feel like a bug with the AspNetCoreModule still - surely the application pool is defining the isolation level, and virtual directories should fall inside the scope of the app pool. Having said that, the root/parent is a blank site - there is no web.config at that level. Defining the directory as an application does indicate that there is an executable app - which may signal to the module, but does a top level site not defer to a child web.config in a virtual directory if there is one? Does this not happen in MVC5 or Owin regardless of a parent web.config existing? Curious...\r\n @sonphnt\r\n     \r\nsonphnt commented on Aug 25\r\nActually I have the same problem with error 502.5 in IIS when migrating from core 1.1 to core 2.0 final.\r\nHas anyone have the official document about how to deploy .net core 2.0 webapp to IIS?\r\n\r\nThanks"},{"Id":"6706226109","Type":"IssuesEvent","CreatedAt":"2017-10-12T05:50:18","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2238","RelatedDescription":"Opened issue \".netcore 2.0 Preview 2 IIS Deployment Error 502.5\" (#2238) at aspnet/Home","RelatedBody":"@nzcoward opened this here: https://github.com/dotnet/core/issues/788\r\n\r\nI am unable to run a web application built in .netcore 2.0 preview 2 in IIS.\r\n\r\nI did post a comment in #723 , however I have decided that the issue is different, as I am able to find the AspNetCoreModule after installing the Windows Hosting for .netcore 2.0 preview 2.\r\n\r\nI am able to run the application just using Kestrel, so it appears to simply be the reverse proxy provided by the module. \r\n\r\nI have done everything I can find with regards to trouble shooting as described for .netcore 1.x versions. This includes:\r\n\r\n- Adding IISConfiguration and Kestrel configuration in Program.cs (was missing in the new templates)\r\n- Ensuring the AspNetCoreModule is installed and in use by IIS\r\n- Tested both Standalone and Framework dependent deployments (including turning off the runtime framework in the application pool)\r\n- Using NetworkService as the Application Pool user\r\n- Running the deployed site using Kestrel (dotnet myapp.dll)\r\n- Review the web config and ensure it is set up correctly (<aspNetCore processPath=\"dotnet\" arguments=\".\\MyApp.dll\"...) and add logging (which logs nothing)\r\n- Set the ASPNETCORE_ENVIRONMENT environment variable in the web.config to 'Development'\r\n\r\nI don't have the official links any longer, but the basic steps from [Rick Strahl's blog](https://weblog.west-wind.com/posts/2016/Jun/06/Publishing-and-Running-ASPNET-Core-Applications-with-IIS) have been followed.\r\n\r\nNow, there is one VERY distinct difference between the errors that I have seen and mine with .netcore 2.0: the event viewer shows the error:\r\n\r\nApplication 'MACHINE/WEBROOT/APPHOST/MYAPP' with physical root 'C:\\inetpub\\wwwroot\\myapp\\' failed to start process with commandline ' ', ErrorCode = '0x80070057 : 0.\r\n\r\nThe commandline argument is empty!\r\n\r\nI did have .netcore 1.0, 1.1, previews, etc. installed on my machine previously, but they are all removed now.\r\n\r\nThe version of the AspNetCore.dll that I am running after installing the files from .netcore 2.0 WindowsHosting:\r\n\r\n![image](https://user-images.githubusercontent.com/10462479/28969198-7853e102-791b-11e7-8f62-4a7b38672d78.png)\r\n\r\nBased on the date, I assume it is the correct version, but this could be the problem! I have tried it with the previously installed version (i.e. before I installed the 2.0 one), but I didn't check the version on that installed assembly - it may be the same file... Hoping someone can tell me either way.\r\n\r\nBecause it runs in Kestrel without any problems, I do believe it is this module. \r\n\r\nnzcoward commented on Aug 4\r\nAnd after removing and then manually installing the 2.x SDKs, my projects no longer opened. Had to do a complete repair on VS 2017 to get the right things installed, and even then, not everything was installed properly.\r\n\r\nGoing back to PHP at this rate sounds like the best way to get my sanity back!\r\n\r\n@DamianEdwards\r\n\r\n     \r\nnzcoward commented on Aug 5\r\nOk - so I am not aware of anything changing, but it seems to have resolved itself as of this morning.\r\n\r\nI had given up, and went back to a WebApi2 project instead, which was easy to get up and running. I came to the conclusion that IIS itself was fine - so on a whim, I thought that I would try once more (I still had a single hair on my head, what could go wrong?)\r\n\r\nBoth Stand Alone and Framework Dependent deployments are working now.\r\n\r\nThere was ONE thing I never checked - which was that the AspNetCoreModule had installed itself into the site - it may not have been available there for whatever reason (I don't know this for certain - but I never checked). Perhaps the 4th restart of my computer managed to give that a kick.\r\n\r\nOne thing that I did change (but change back) was the site bindings. I had originally set it up with a hostname (referenced in my computer's hosts file to point to 127.0.0.1) and it sat alongside the Default Website that had *:80 binding. Now, I had thought about this earlier and disabled the Default Website, but the issue was still occurring. But the change I DID make was to set this site that wasn't working to have the *:80 binding when I deployed the WebApi2 app to it. I have since switched it back to just the api.mysite.com:80 binding and it is working.\r\n\r\nNeither of the above 2 things seem likely resolutions - surely the module was there, and if not, yet another restart wouldn't do something a previous restart hadn't - and tweaking bindings, unless somehow they were cached, seems just as unlikely.\r\n\r\nI do think that this issue is a good list of all the things to try, collated from a number of sites (official and unofficial) and blogs. It may help someone in the future if the list can be put somewhere.\r\n\r\nBut, things are working now, so the issue can be closed - I didn't want to do it myself, just in case it meant the issue was not longer easily searchable for the attempted resolutions.\r\n @nzcoward\r\n     \r\nnzcoward commented on Aug 5 • edited\r\nActually, I think I may have discovered it... I thought I had made a change yesterday, where the 502.5 was still occurring, but perhaps not. I have just deployed another app this morning, and it had the 502.5 error, except that I was able to resolve it:\r\n\r\nI had the application deployed to a folder, and had set up a virtual directory against the parent - path-wise it was a child folder also. Leaving it as a virtual directory, or letting IIS resolve the path resulted in the 502.5.\r\n\r\nSo I converted it to an application. And it works...\r\n\r\nIt is worth pointing out though, that the application is still using the parent application pool - it does not have its own.\r\n\r\nThis does actually feel like a bug with the AspNetCoreModule still - surely the application pool is defining the isolation level, and virtual directories should fall inside the scope of the app pool. Having said that, the root/parent is a blank site - there is no web.config at that level. Defining the directory as an application does indicate that there is an executable app - which may signal to the module, but does a top level site not defer to a child web.config in a virtual directory if there is one? Does this not happen in MVC5 or Owin regardless of a parent web.config existing? Curious...\r\n @sonphnt\r\n     \r\nsonphnt commented on Aug 25\r\nActually I have the same problem with error 502.5 in IIS when migrating from core 1.1 to core 2.0 final.\r\nHas anyone have the official document about how to deploy .net core 2.0 webapp to IIS?\r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6710841643","Type":"PullRequestEvent","CreatedAt":"2017-10-12T23:43:18","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1015","RelatedDescription":"Opened pull request \"Adding StreamingCompletion message (C#)\" (#1015) at aspnet/SignalR","RelatedBody":""},{"Id":"6710644882","Type":"IssuesEvent","CreatedAt":"2017-10-12T22:35:13","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/769","RelatedDescription":"Closed issue \"Try adding headers to the Request from a HubConnection in C# client\" (#769) at aspnet/SignalR","RelatedBody":"We need to see how hard this is to do, and decide if we need to make it easier. \r\n\r\nAssigning to @BrennanConroy for investigation."},{"Id":"6710119802","Type":"IssuesEvent","CreatedAt":"2017-10-12T20:22:22","Actor":"chinookproject","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1014","RelatedDescription":"Closed issue \"Issue in Transport.js with WebSocket.OPEN readyState\" (#1014) at aspnet/SignalR","RelatedBody":"I have a strange issue when trying to connect to my hub in JS code. I have the following code (Angular project):\r\n```\r\n    ngOnInit() {\r\n        this.hubConnection = new HubConnection('/support', { transport: TransportType.WebSockets, logging: LogLevel.Information });\r\n\r\n        this.hubConnection.on(\"Say\", (message: any) => {\r\n            console.log('message:', message);\r\n        });\r\n\r\n        this.hubConnection.start()\r\n            .then(() => { console.log('Hub connection started'); })\r\n            .catch(err => { console.log('Error while establishing connection: ', err);  });\r\n    }\r\n```\r\nBut whenever I launch the web page I get the following error back in console:\r\n\r\n`Error while establishing connection: WebSocket is not in the OPEN state`\r\n\r\nAfter some debugging in both my JS code en C# code I decided to check what was going on in `Transport.js`. The file that throws the above error. By default it does this:\r\n\r\n    send(data) {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n             // left out some code here....\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\nWhen I added a few `console.log` lines, then I get the following, with output:\r\n\r\n```\r\n    send(data) {\r\n\t\tconsole.log('this.webSocket', this.webSocket); //output: WebSocket {__zone_symbol__eventTasks: Array... (prints the websocket object)\r\n\t\tconsole.log('this.webSocket.readyState', this.webSocket.readyState); //output: 1\r\n\t\tconsole.log('WebSocket.CONNECTING', this.webSocket.readyState == WebSocket.CONNECTING); //output: false\r\n\t\tconsole.log('WebSocket.OPEN', this.webSocket.readyState == WebSocket.OPEN); //output: false\r\n\t\tconsole.log('WebSocket.CLOSING', this.webSocket.readyState == WebSocket.CLOSING); //output: false\r\n\t\tconsole.log('WebSocket.CLOSED', this.webSocket.readyState == WebSocket.CLOSED) //output: false;\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n```\r\n\r\nSo as you can see `this.webSocket.readyState` outputs `1`, which should be equal to: `WebSocket.OPEN`. But for some reason its not.\r\n\r\nWhen I change the `if` statement to match against just `1`, then it all works fine. Then I can send data to the C# code without any problems.\r\n\r\n(changed if statement)\r\n```\r\nif (this.webSocket && this.webSocket.readyState === 1) {\r\n```\r\nAny idea what the issue could be? Is it me, or is the code in `Transport.js` not right?\r\n\r\nAdditional info:\r\n---\r\n\r\nNuget:\r\n```\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR\" Version=\"1.0.0-alpha2-27280\" />\r\n  </ItemGroup>\r\n```\r\n\r\nNPM:\r\n`\"@aspnet/signalr-client\": \"^1.0.0-alpha2-final\"`\r\n\r\nBrowser chrome\r\n```\r\nGoogle Chrome is up-to-date\r\nVersion 61.0.3163.100\r\n```"},{"Id":"6709894350","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:29:53","Actor":"chinookproject","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1014","RelatedDescription":"Opened issue \"Issue in Transport.js with WebSocket.OPEN readyState\" (#1014) at aspnet/SignalR","RelatedBody":"I have a strange issue when trying to connect to my hub in JS code. I have the following code (Angular project):\r\n```\r\n    ngOnInit() {\r\n        this.hubConnection = new HubConnection('/support', { transport: TransportType.WebSockets, logging: LogLevel.Information });\r\n\r\n        this.hubConnection.on(\"Say\", (message: any) => {\r\n            console.log('message:', message);\r\n        });\r\n\r\n        this.hubConnection.start()\r\n            .then(() => { console.log('Hub connection started'); })\r\n            .catch(err => { console.log('Error while establishing connection: ', err);  });\r\n    }\r\n```\r\nBut whenever I launch the web page I get the following error back in console:\r\n\r\n`Error while establishing connection: WebSocket is not in the OPEN state`\r\n\r\nAfter some debugging in both my JS code en C# code I decided to check what was going on in `Transport.js`. The file that throws the above error. By default it does this:\r\n\r\n    send(data) {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n             // left out some code here....\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\nWhen I added a few `console.log` lines, then I get the following, with output:\r\n\r\n```\r\n    send(data) {\r\n\t\tconsole.log('this.webSocket', this.webSocket); //output: WebSocket {__zone_symbol__eventTasks: Array... (prints the websocket object)\r\n\t\tconsole.log('this.webSocket.readyState', this.webSocket.readyState); //output: 1\r\n\t\tconsole.log('WebSocket.CONNECTING', this.webSocket.readyState == WebSocket.CONNECTING); //output: false\r\n\t\tconsole.log('WebSocket.OPEN', this.webSocket.readyState == WebSocket.OPEN); //output: false\r\n\t\tconsole.log('WebSocket.CLOSING', this.webSocket.readyState == WebSocket.CLOSING); //output: false\r\n\t\tconsole.log('WebSocket.CLOSED', this.webSocket.readyState == WebSocket.CLOSED) //output: false;\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n```\r\n\r\nSo as you can see `this.webSocket.readyState` outputs `1`, which should be equal to: `WebSocket.OPEN`. But for some reason its not.\r\n\r\nWhen I change the `if` statement to match against just `1`, then it all works fine. Then I can send data to the C# code without any problems.\r\n\r\n(changed if statement)\r\n```\r\nif (this.webSocket && this.webSocket.readyState === 1) {\r\n```\r\nAny idea what the issue could be? Is it me, or is the code in `Transport.js` not right?\r\n\r\nAdditional info:\r\n---\r\n\r\nNuget:\r\n```\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR\" Version=\"1.0.0-alpha2-27280\" />\r\n  </ItemGroup>\r\n```\r\n\r\nNPM:\r\n`\"@aspnet/signalr-client\": \"^1.0.0-alpha2-final\"`\r\n\r\nBrowser chrome\r\n```\r\nGoogle Chrome is up-to-date\r\nVersion 61.0.3163.100\r\n```"},{"Id":"6709836439","Type":"PullRequestEvent","CreatedAt":"2017-10-12T19:16:12","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1013","RelatedDescription":"Opened pull request \"Adding Redis Unit tests\" (#1013) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6711630848","Type":"PullRequestEvent","CreatedAt":"2017-10-13T05:24:30","Actor":"r3dqu33n","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6948","RelatedDescription":"Closed pull request \"a\" (#6948) at aspnet/Mvc","RelatedBody":""},{"Id":"6711629722","Type":"PullRequestEvent","CreatedAt":"2017-10-13T05:23:59","Actor":"r3dqu33n","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6948","RelatedDescription":"Opened pull request \"a\" (#6948) at aspnet/Mvc","RelatedBody":""},{"Id":"6711531045","Type":"IssuesEvent","CreatedAt":"2017-10-13T04:35:44","Actor":"rahulsahay19","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6947","RelatedDescription":"Opened issue \"ASP.NET CORS Issue with Windows Auth using HTTP.SYS hosting\" (#6947) at aspnet/Mvc","RelatedBody":"Hi,\r\n\r\nI am trying couple of scenarios here. Currently, I am running on HTTP.sys using Windows Auth. Angular 4 being the Frontend App having a different port say 4200. My ASP.NET Core App, I am running on port 7000, which is serving data to FE app. Obviously, this is classic example of CORS, which I have enabled via below settings.\r\n\r\nservices.AddCors(options =>\r\n            {\r\n                options.AddPolicy(\"CorsPolicy\",\r\n                    builder => builder.AllowAnyOrigin()\r\n                       .AllowAnyMethod()\r\n                        .AllowAnyHeader()\r\n                        .AllowCredentials()\r\n                        .SetPreflightMaxAge(TimeSpan.FromSeconds(2520))\r\n                .Build());\r\n            });\r\n\r\n            \r\n            services.AddMvc();\r\n\r\nand then in Configure method\r\n\r\napp.UseCors(\"CorsPolicy\");\r\n app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n\r\nThen in controller saying\r\n [Route(\"api/[controller]\")]\r\n [EnableCors(\"CorsPolicy\")]\r\n\r\nWith that being said, this CORS policy go well with GET option only. In case of POST, PUT, it gets failed with preflight condition saying\r\n\r\n\"Failed to load http://localhost:7000/api/expense: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:4200' is therefore not allowed access. The response had HTTP status code 401.\" Is there anything missing here like any more setting is required or is this bug?\r\n\r\nThanks,\r\nRahul "},{"Id":"6711385139","Type":"IssuesEvent","CreatedAt":"2017-10-13T03:27:16","Actor":"neoGeneva","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6946","RelatedDescription":"Opened issue \"AmbiguousMatchException in Html.TextBox() when model has shadowed properties\" (#6946) at aspnet/Mvc","RelatedBody":"Calling `Html.TextBox()` for a property that is shadowing an inherited property, a AmbiguousMatchException exception is thrown.\r\n\r\nFor example, the following setup will generate the error:\r\n\r\n### Models.cs\r\n```csharp\r\nnamespace Test\r\n{\r\n    public class SearchBase\r\n    {\r\n        public string Search { get; set; }\r\n    }\r\n\r\n    public class SearchModel : SearchBase\r\n    {\r\n        public new int Search { get; }\r\n    }\r\n}\r\n```\r\n\r\n### Index.cshtml\r\n```html\r\n@model Test.SearchModel\r\n\r\n@Html.TextBox(\"Search\")\r\n```\r\n\r\n### HomeController.cs\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\nnamespace Test\r\n{\r\n    public class HomeController : Controller\r\n    {\r\n        public IActionResult Index()\r\n        {\r\n            var model = new SearchModel();\r\n\r\n            return View(model);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Generates the following exception:\r\n```\r\nSystem.Reflection.AmbiguousMatchException: Ambiguous match found.\r\n   at System.RuntimeType.GetPropertyImpl(String name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)\r\n   at System.Type.GetProperty(String name, BindingFlags bindingAttr)\r\n   at System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(Type type, String name)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.GetPropertyValue(Object container, String propertyName)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.InnerEvalComplexExpression(Object indexableObject, String expression)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.EvalComplexExpression(Object indexableObject, String expression)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(ViewDataDictionary viewData, String expression)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionMetadataProvider.FromStringExpression(String expression, ViewDataDictionary viewData, IModelMetadataProvider metadataProvider)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.AddPlaceholderAttribute(ViewDataDictionary viewData, TagBuilder tagBuilder, ModelExplorer modelExplorer, String expression)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateInput(ViewContext viewContext, InputType inputType, ModelExplorer modelExplorer, String expression, Object value, Boolean useViewData, Boolean isChecked, Boolean setId, Boolean isExplicitValue, String format, IDictionary`2 htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateTextBox(ViewContext viewContext, ModelExplorer modelExplorer, String expression, Object value, String format, Object htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateTextBox(ModelExplorer modelExplorer, String expression, Object value, String format, Object htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.TextBox(String expression, Object value, String format, Object htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(IHtmlHelper htmlHelper, String expression)\r\n   at AspNetCore._Views_Home_Index_cshtml.<ExecuteAsync>d__0.MoveNext() in C:\\Users\\Phil\\AmbiguousMatchExceptionMvc\\Views\\Home\\Index.cshtml:line 3\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"6710552808","Type":"IssuesEvent","CreatedAt":"2017-10-12T22:07:19","Actor":"Tratcher","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6945","RelatedDescription":"Opened issue \"Two actions with same Http<Method> attributes result in ambiguity on ubuntu\" (#6945) at aspnet/Mvc","RelatedBody":"_From @Petermarcu on October 12, 2017 20:38_\n\n@distomin opened this here: https://github.com/dotnet/core/issues/1026\r\n\r\nuname -a\r\nLinux N46JV 4.10.0-37-generic #41-Ubuntu SMP Fri Oct 6 20:20:37 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\ndotnet --version\r\n2.0.0\r\ndotnet new webapi\r\n\r\nAdd 2 actions in a controller with the same attribute (HttpGet for example)\r\n[HttpPost]\r\npublic Product Action4([FromForm]Product product)\r\n[HttpPost]\r\npublic Product Action5([FromBody]Product product)\r\n\r\nbuild the project, run the project and make http request.\r\n\r\nfail: Microsoft.AspNetCore.Mvc.Internal.ActionSelector[1]\r\n      Request matched multiple actions resulting in ambiguity\r\n... Microsoft.AspNetCore.Mvc.Internal.AmbiguousActionException: Multiple actions matched.\r\n\r\nThey say it works on Windows platform correctly.\n\n_Copied from original issue: aspnet/Home#2241_"},{"Id":"6710521290","Type":"IssuesEvent","CreatedAt":"2017-10-12T21:58:31","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6944","RelatedDescription":"Opened issue \"Consistency across binding attributes\" (#6944) at aspnet/Mvc","RelatedBody":"## Summary\r\n\r\nMVC has a few different flavours of binding attributes and they each do different things, largely for legacy reasons - but they also overlap in some ways which leads a lot of confusion. We've tried to keep them orthogonal in the past, but they didn't start that way, so maybe we should stop trying?\r\n\r\nCould we think about making them consistent and maybe deprecating some? Time horizon for this is long-term. I want to come up with a plan for the zoo of current stuff.\r\n\r\n## Existing Stuff\r\n\r\nWe have the following attributes:\r\n```\r\n[Modelbinder]\r\n[Bind]\r\n[BindProperty]\r\n[FromBody]/[FromHeader]/[FromServices]/[FromRoute]/[FromQuery]/[FromForm]\r\n[BindRequired]/[BindNever]/[BindingBehavior] // these are hidden away  in the .ModelBinding namespace for some reason\r\n```\r\n\r\nWe also have the following *policies* that these attributes can configure (see [BindingInfo](https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNetCore.Mvc.Abstractions/ModelBinding/BindingInfo.cs)):\r\n - Binding Source (where do we look for data) `IBindingSourceMetadata`\r\n - Model Name (what's the key-space) `IModelNameProvider`\r\n - Binder Type (specifies a model binder to use by-type) `IBinderTypeProviderMetadata`\r\n - Property Filters (Include) `IPropertyFilterProvider`\r\n - Request Predicate (filter by request type) `IRequestPredicateProvider`\r\n - Binding Behavior (never, required) - this is actually part of model metadata which is wierd - `BindingBehaviorAttribute`\r\n\r\n\r\n### WIP\r\n\r\nMore TBD\r\n"},{"Id":"6710008418","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:56:45","Actor":"scottsauber","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6943","RelatedDescription":"Opened issue \"Unit Testing Page Model Throws Null Ref On ModelState check\" (#6943) at aspnet/Mvc","RelatedBody":"While testing Razor Pages, when I create a new PageModel, it throws a null reference exception when doing the ModelState.IsValid check.  The NRE is on ModelState itself.\r\n\r\nThis seems to be a change from the way MVC's ModelState \"just worked\" when newing it up.  \r\n\r\nFor instance (some Arrange code removed for brevity)...\r\n\r\nIn MVC:\r\n```csharp\r\nvar controller = new AccountController(dependency1, dependency2);\r\nvar result = await controller.Login(new LoginViewModel()));\r\n// **Does NOT** throw NRE on ModelState.IsValid check\r\n```\r\n\r\nIn Razor Pages:\r\n```csharp\r\nvar loginModel = new LoginModel(dependency1, dependency2);\r\nvar result = await loginModel.OnPostAsync();\r\n// **DOES** throw NRE on ModelState.IsValid check, because ModelState is null.\r\n```\r\n\r\nThis is bit of an annoyance.\r\n\r\n/cc @DamianEdwards "}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6711133702","Type":"IssuesEvent","CreatedAt":"2017-10-13T01:43:16","Actor":"ronydj","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1462","RelatedDescription":"Closed issue \"CheckPasswordAsync returns false after second call\" (#1462) at aspnet/Identity","RelatedBody":"Hi Guys,\r\n\r\nI have this part of the code checking the user's password:\r\n\r\nvar isValidPassword = await Manager.CheckPasswordAsync(user, password);\r\n\r\nmy manager is a singleton instance.\r\n\r\nAfter the second call, this line is always returning false. It will only return true if I restart my application. Am I doing something wrong? I am not finding anything in the documentation..."},{"Id":"6711112915","Type":"IssuesEvent","CreatedAt":"2017-10-13T01:34:33","Actor":"ronydj","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1462","RelatedDescription":"Opened issue \"CheckPasswordAsync returns false after second call\" (#1462) at aspnet/Identity","RelatedBody":"Hi Guys,\r\n\r\nI have this part of the code checking the user's password:\r\n\r\nvar isValidPassword = await Manager.CheckPasswordAsync(user, password);\r\n\r\nmy manager is a singleton instance.\r\n\r\nAfter the second call, this line is always returning false. It will only return true if I restart my application. Am I doing something wrong? I am not finding anything in the documentation..."},{"Id":"6710468903","Type":"IssuesEvent","CreatedAt":"2017-10-12T21:44:45","Actor":"grahamehorner","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1461","RelatedDescription":"Opened issue \"TwoFactor/MultiFactor Authentication without asp.net core Identity\" (#1461) at aspnet/Identity","RelatedBody":"The current TwoFactor authentication is strongly link to the asp.net core identity, please consider allowing TwoFactor/MultiFactor authentication wihout using asp.net core Identity.\r\n\r\nexample: sites configured to use external oauth/authentication providers such as Facebook, Twitter, Google and Microsoft accounts where a authenticator application is needed to allow the uses to gain access or elevat permission for some action. "},{"Id":"6709885880","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:27:53","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1300","RelatedDescription":"Closed issue \"Possible wrong error message from ChangePasswordAsync\" (#1300) at aspnet/Identity","RelatedBody":"Hi\r\n\r\nI believe the method ChangePasswordAsync in Microsoft.AspNetCore.Identity.UserManager can return wrong error message.\r\nIf I type in a wrong currrentPassword, It will return the error message PasswordMismatch.\r\nIt shoud return a IncorrectPassword message.\r\nOtherwise there will be no diffrence in 2 different new passwords and wrong current password.\r\n\r\nHere is the method:\r\n\r\n```\r\npublic virtual async Task<IdentityResult> ChangePasswordAsync(TUser user, string currentPassword, string newPassword)\r\n        {\r\n            ThrowIfDisposed();\r\n            var passwordStore = GetPasswordStore();\r\n            if (user == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(user));\r\n            }\r\n\r\n\r\n            if (await VerifyPasswordAsync(passwordStore, user, currentPassword) != PasswordVerificationResult.Failed)\r\n            {\r\n                var result = await UpdatePasswordHash(passwordStore, user, newPassword);\r\n                if (!result.Succeeded)\r\n                {\r\n                    return result;\r\n                }\r\n                return await UpdateUserAsync(user);\r\n            }\r\n            Logger.LogWarning(2, \"Change password failed for user {userId}.\", await GetUserIdAsync(user));\r\n            return IdentityResult.Failed(ErrorDescriber.PasswordMismatch());\r\n        }\r\n```"},{"Id":"6709842023","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:17:33","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1453","RelatedDescription":"Closed issue \"Cannot consume scoped service Microsoft.AspNetCore.Identity.UserManager from singleton \" (#1453) at aspnet/Identity","RelatedBody":"Why is can not use UserManager in the singleton?"},{"Id":"6709836892","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:16:19","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1457","RelatedDescription":"Closed issue \"Default DataProtectionProvider\" (#1457) at aspnet/Identity","RelatedBody":"I am working on an application built on MVC 5, .Net 4.5, Identity 2.2.1 using Visual Studio 2017. \r\n\r\nAssume that I have started with a fresh application and not altered the default Startup.Auth neither have changed any configuration for ApplicationUserManager.DataproctectionProvider. When I debug the application, in ApplicationUserManager.Create the default value of `options.DataProtectionProvider` is Microsoft.Owin.Host.SystemWeb.DataProtection.MachineKeyDataProtectionProvider. \r\n\r\nBut the articles I have been following since beginning says that by default it will pick DpapiDataProtectionProvider. What I am missing here?\r\n\r\nSince my app will be going on Azure I am really concerned if should I explicitly implement my own MachineKeyDataProtectionProvider? \r\n\r\nP.S - I hate to raise it as an issue, please direct me to the right forum for asking queries"},{"Id":"6702772303","Type":"IssuesEvent","CreatedAt":"2017-10-11T14:14:43","Actor":"hikalkan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1460","RelatedDescription":"Opened issue \"What is Microsoft.AspNetCore.Identity.Service.* packages?\" (#1460) at aspnet/Identity","RelatedBody":"Is it a replacement for IdentityServer4? Is there any documentation for that? How and why we use that?\r\n\r\nThanks."},{"Id":"6702144196","Type":"IssuesEvent","CreatedAt":"2017-10-11T12:12:21","Actor":"mcgiany","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1459","RelatedDescription":"Opened issue \"ChangePasswordAsync Optimistic concurrency failure, object has been modified\" (#1459) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nwe experiencing weird issue with changing password in our MVC Web App.\r\nThe error \"Optimistic concurrency failure, object has been modified\" occurs when we try change password with ChangePasswordAsync method.\r\n\r\nThis is the code in controller:\r\n```\r\n[HttpPost]\r\n        [ActionName(\"ChangePassword\")]\r\n        [ValidateAntiForgeryToken]\r\n        public async Task<IActionResult> ChangePasswordPost()\r\n        {\r\n            var viewModel = await BindViewModel<ChangePasswordViewModel>();\r\n\r\n            if (ModelState.IsValid)\r\n            {\r\n                var user = await _userManagerStore.FindByNameAsync(User.Identity.Name);\r\n                var result = await _userManagerStore.ChangePasswordAsync(user, viewModel.CurrentPassword, viewModel.NewPassword);\r\n                if (result.Succeeded)\r\n                {\r\n                    // log success and redirect to index\r\nreturn RedirectToAction(\"Index\", \"Home\");\r\n                }\r\n\r\n                foreach (var error in result.Errors)\r\n                {\r\n                    ModelState.AddModelError(string.Empty, error.Description);\r\n                }\r\n            }\r\n\r\n            return View(viewModel);\r\n        }\r\n```\r\nIt fails on the error i describe above at this line:\r\n`var result = await _userManagerStore.ChangePasswordAsync(user, viewModel.CurrentPassword, viewModel.NewPassword);`\r\n\r\nBut after that, when i log out from app, i can login again with the old password (so the password didn't changed). And when try change password again, it says \"Incorrect password\"."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6710950430","Type":"PullRequestEvent","CreatedAt":"2017-10-13T00:26:22","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2107","RelatedDescription":"Merged pull request \"HTTP/2: support trailers\" (#2107) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"6709881688","Type":"PullRequestEvent","CreatedAt":"2017-10-12T19:26:53","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2111","RelatedDescription":"Merged pull request \"Set SO_REUSEADDR on managed listen sockets on Unix\" (#2111) at aspnet/KestrelHttpServer","RelatedBody":"- https://github.com/dotnet/corefx/issues/24562"},{"Id":"6709599490","Type":"PullRequestEvent","CreatedAt":"2017-10-12T18:23:58","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2108","RelatedDescription":"Merged pull request \"HTTP/2: add exception error messages and log them\" (#2108) at aspnet/KestrelHttpServer","RelatedBody":"TODO:\r\n\r\n- [x] Actually log exceptions\r\n- [x] Verify exceptions in tests"},{"Id":"6708305013","Type":"IssuesEvent","CreatedAt":"2017-10-12T14:09:24","Actor":"odysseus1973","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2113","RelatedDescription":"Opened issue \"How to listen http and https with Kestrel and Service fabric\" (#2113) at aspnet/KestrelHttpServer","RelatedBody":"Hi!\r\n\r\nHow to listen http and https with Kestrel and Service Fabric?\r\n\r\n`protected override IEnumerable<ServiceInstanceListener> CreateServiceInstanceListeners()\r\n        {\r\n            return new ServiceInstanceListener[]\r\n            {\r\n                new ServiceInstanceListener(serviceContext =>\r\n                    new KestrelCommunicationListener(serviceContext, \"SSLServiceEndpoint\", (url, listener) =>\r\n                    {\r\n                        ServiceEventSource.Current.ServiceMessage(serviceContext, $\"Starting Kestrel on {url}\");\r\n\r\n                        return new WebHostBuilder()\r\n                                    .UseKestrel(options =>\r\n                                    {\r\n                                        options.Listen(IPAddress.Any, 2000);\r\n                                        options.Listen(IPAddress.Any, 3000, listenOptions =>\r\n                                        {\r\n                                            listenOptions.UseHttps(FindCertificate(\"cert_thumbprint\", StoreLocation.LocalMachine,\r\n                                                NameType.Thumbprint));\r\n                                        });\r\n                                    })\r\n                                    .ConfigureServices(\r\n                                        services => services\r\n                                            .AddSingleton<StatelessServiceContext>(serviceContext))\r\n                                    .UseContentRoot(Directory.GetCurrentDirectory())\r\n                                    .UseStartup<Startup>()\r\n                                    .UseServiceFabricIntegration(listener, ServiceFabricIntegrationOptions.None)\r\n                                    .UseUrls(url)\r\n                                    .UseApplicationInsights()\r\n                                    .Build();\r\n                    }),\"http\")\r\n            };`\r\n\r\nPort 3000 with https work correctly, but port 2000 with http not working."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6711305003","Type":"IssuesEvent","CreatedAt":"2017-10-13T02:53:57","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1721","RelatedDescription":"Opened issue \"[2.0.x] Flaky tests:  Cannot find compilation library location for package 'System.Diagnostics.DiagnosticSource'\" (#1721) at aspnet/Razor","RelatedBody":"I've been seeing this fairly frequently. It doesn't repo on CI, so I'm not sure why it's happening, but on local builds it's pretty consistent.\r\n\r\nRepro steps:\r\n```\r\ngit clone --branch rel/2.0.3 --recursive https://github.com/aspnet/Universe.git\r\nbuild.cmd /p:Configuration=Release\r\n```\r\n\r\n```\r\n   Failed   Basic_Runtime\r\n  Error Message:\r\n   System.InvalidOperationException : Cannot find compilation library location for package 'System.Diagnostics.DiagnosticSource'\r\n  Stack Trace:\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n     at Microsoft.AspNetCore.Mvc.Razor.Extensions.IntegrationTests.CodeGenerationIntegrationTest.<>c.<CreateMvcShimReferences>b__49_0(CompilationLibrary l) in C:\\dev\\aspnet\\Universe\\modules\\Razor\\test\\Microsoft.AspNetCo\r\nre.Mvc.Razor.Extensions.Test\\IntegrationTests\\CodeGenerationIntegrationTest.cs:line 710\r\n     at System.Linq.Enumerable.<SelectManyIterator>d__16`2.MoveNext()\r\n     at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()\r\n     at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n     at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n     at Microsoft.AspNetCore.Mvc.Razor.Extensions.IntegrationTests.CodeGenerationIntegrationTest.CreateMvcShimReferences(String mvcShimName) in C:\\dev\\aspnet\\Universe\\modules\\Razor\\test\\Microsoft.AspNetCore.Mvc.Razor.Ex\r\ntensions.Test\\IntegrationTests\\CodeGenerationIntegrationTest.cs:line 712\r\n     at Microsoft.AspNetCore.Mvc.Razor.Extensions.IntegrationTests.CodeGenerationIntegrationTest.Basic_Runtime() in C:\\dev\\aspnet\\Universe\\modules\\Razor\\test\\Microsoft.AspNetCore.Mvc.Razor.Extensions.Test\\IntegrationTes\r\nts\\CodeGenerationIntegrationTest.cs:line 105\r\n```\r\ncc @Eilon "},{"Id":"6710630618","Type":"IssuesEvent","CreatedAt":"2017-10-12T22:30:54","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1538","RelatedDescription":"Closed issue \"Implement brace smart indent completion.\" (#1538) at aspnet/Razor","RelatedBody":"Brace completion should not be part of the core Razor syntax tree contract. For example [this](https://github.com/dotnet/roslyn/blob/614299ff83da9959fa07131c6d0ffbc58873b6ae/src/EditorFeatures/Core/Implementation/AutomaticCompletion/BraceCompletionSessionProvider.cs) is how Roslyn does it for CSharp."},{"Id":"6710629330","Type":"PullRequestEvent","CreatedAt":"2017-10-12T22:30:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1713","RelatedDescription":"Merged pull request \"Add smart indentation for brace completion.\" (#1713) at aspnet/Razor","RelatedBody":"This is a middle-ground approach to implementing brace completion smart indent without refactoring the entire `VisualStudioRazorParser`. Decided to use the \"smart indent\" verbiage because that's what the visual studio editor uses.\r\n\r\nHere's what this PR accomplishes. Pipe | indicates cursor\r\n\r\n## Razor code block smart indentation\r\nA user types `@{|`, Roslyn autocompletes it to `@{ |}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@{\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@{\r\n    |\r\n}\r\n```\r\n\r\n## Razor directive block smart indentation\r\nA user types `@functions {|`, Roslyn autocompletes it to `@functions {|}`. User then hits enter and **without** this PR it becomes:\r\n```\r\n@functions {\r\n    |}\r\n```\r\nThis PR fixes that and makes it:\r\n```\r\n@functions {\r\n    |\r\n}\r\n```\r\n\r\nOne significant note is that the cursor position in the above examples don't have spaces before it. That's the editor auto-indent that will auto-add those spaces if a user then attempts to add content.\r\n\r\n---------------------------------------------------------------------------------\r\n\r\n- Added a standalone brace smart indenter that listens to `ITextBuffer` changed events to determine when a brace completion event needs to be handled.\r\n- Added extension methods to handle interaction with the `ITextBuffer` and document trackers and text views.\r\n- Added a `BraceSmartIndenterTest` to verify all parts of the smart indenter.\r\n- Moved private test infrastructure classes into their own files and expanded on their functionality to enable the brace completion smart indent scenarios.\r\n\r\n#1538"},{"Id":"6701572444","Type":"IssuesEvent","CreatedAt":"2017-10-11T10:04:47","Actor":"andrew-vandenbrink","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1720","RelatedDescription":"Opened issue \"Razor pages global functions\" (#1720) at aspnet/Razor","RelatedBody":"Use case: Write static functions which can be accessed by all razor pages.\r\nThe goal: Use razor page just like php\r\n\r\nIt is written in \"razor page\" and not controller.cs or dll because I want it to be automatic recompile when I change the code during **runtime**\r\n\r\nIn the older version, we can create functions and put it on app_code folder, what is our option in asp.net core 2?"},{"Id":"6700827143","Type":"IssuesEvent","CreatedAt":"2017-10-11T07:14:14","Actor":"andrew-vandenbrink","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1719","RelatedDescription":"Opened issue \"Elegant way to get __RequestVerificationToken in razor page?\" (#1719) at aspnet/Razor","RelatedBody":"Use case: \r\n- My form tag is client based template, which means razor page won't know if my page have a form\r\n- Ajax post method require 'RequestVerificationToken' header, otherwise it will return 400 bad request\r\n\r\nBased on trick I found here\r\nhttps://stackoverflow.com/questions/46410716/example-ajax-call-back-to-an-asp-net-core-razor-page\r\n\r\nI need to create a **fake** form tag with post method, which I did in the end\r\n```<form method=\"post\"></form>``` ---> This is very not elegant\r\n\r\nAny other way to get RequestVerificationToken in elegant way?\r\n\r\n\r\n\r\n\r\n"},{"Id":"6699746940","Type":"IssuesEvent","CreatedAt":"2017-10-10T23:57:32","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1718","RelatedDescription":"Opened issue \"Harvest editor settings from the project and trigger project changes accordingly.\" (#1718) at aspnet/Razor","RelatedBody":"Today the editor settings are hard coded today. We need to enable the ability to read from the editor settings directly or indirectly and then trigger project change/updates to force reparses for Razor documents."},{"Id":"6698901838","Type":"IssuesEvent","CreatedAt":"2017-10-10T20:08:36","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1547","RelatedDescription":"Closed issue \"Span nodes are not linked outside of tests.\" (#1547) at aspnet/Razor","RelatedBody":"This means that each `Span`'s Next member is always null."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6698255499","Type":"PullRequestEvent","CreatedAt":"2017-10-10T17:47:03","Actor":"scottsauber","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Opened pull request \"Change Lockout wording of comment\" (#870) at aspnet/Templates","RelatedBody":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want."},{"Id":"6670490782","Type":"IssuesEvent","CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments"},{"Id":"6670480267","Type":"IssuesEvent","CreatedAt":"2017-10-03T23:56:26","Actor":"Rick-Anderson","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Opened issue \"QR Codes should be supported in templates\" (#869) at aspnet/Templates","RelatedBody":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. "},{"Id":"6644367490","Type":"IssuesEvent","CreatedAt":"2017-09-27T14:32:40","Actor":"joeaudette","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Opened issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868) at aspnet/Templates","RelatedBody":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217"},{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"},{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"},{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"},{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-10-13T05:30:09.9713875Z","RunDurationInMilliseconds":8626}