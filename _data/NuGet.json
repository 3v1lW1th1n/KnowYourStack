{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11908532525","Type":"PullRequestEvent","CreatedAt":"2020-03-31T01:14:37","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7925","RelatedDescription":"Merged pull request \"Add link to search for pending validations\" (#7925) at NuGet/NuGetGallery","RelatedBody":"Today the on-call engineer has to connect to the database to find the pending validations. This adds a link to the admin panel to fetch the currently pending validations:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/77881538-0eb6e100-7214-11ea-8ecd-54188763e25c.png)\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7926\r\n\r\nBuild: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3595685\r\nRelease: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=628330"},{"Id":"11907140060","Type":"PullRequestEvent","CreatedAt":"2020-03-30T21:40:01","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7927","RelatedDescription":"Opened pull request \"[A11y]Accessibility fixes 1\" (#7927) at NuGet/NuGetGallery","RelatedBody":"Addresses the following issues:\r\n[A11y]'MIT' Link is not descriptive. #7882\r\n - Updated link description to read \"License {LicenseType}\" instead of \"{LicenseType}\"\r\n\r\n[A11y]\"Learn more\" link is not descriptive. #7879\r\n - Update link description to read \"Learn more about Organizations on NuGet.Org\" from \"Learn more\"\r\n\r\n[A11y]Focus is not visible on the expand/collapse button #7885\r\n - This was actually introduced by #7326 when trying to address #7305\r\n - Undo this change, reintroduces #7305 on click.\r\n\r\n[A11y]Narrator is reading improper role for Expand/Collapse button #7889\r\n - Gave element attribute role=\"button\"\r\n\r\n[A11y]Narrator does not announce the error message \"At least one scope must be selected\" after unchecking the 'Push' button. #7876\r\n - Added aria-live region and role=\"alert\"\r\n - Delayed update of text for readme alerts so element can become visible before being updated (updating invisible elements are not read out)."},{"Id":"11898111000","Type":"IssuesEvent","CreatedAt":"2020-03-30T06:24:18","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7926","RelatedDescription":"Opened issue \"Add link to search for pending validations\" (#7926) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nToday the on-call engineer has to connect to the database to find the pending validations.\r\n\r\n### Describe the solution you'd like\r\nThe \"Validation\" admin panel should have a link to fetch the currently pending validations.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11921243785","Type":"IssuesEvent","CreatedAt":"2020-04-01T01:39:15","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9370","RelatedDescription":"Opened issue \"[LockFile] Lock file validation should fail on Version update or on Restore data inconsistency\" (#9370) at NuGet/Home","RelatedBody":"\r\n\r\n## Details about Problem\r\n\r\nThere is a difference between the lock file invalidation of PR and PC projects. \r\nA lock file contains the description of packages that a project was restored with. In addition it contains metadata as a Version, type of the Dependency etc. \r\n\r\nFor PC the version is used for invalidation of the lock file for PR it is not. \r\n\r\nThe issue is to make an explicit decision if\r\n\r\n- the version should be used for validation or \r\n- only the restore data should be used or\r\n- continue to be in the current mode\r\n\r\nScenario where this may make a difference\r\nAssuming that:\r\n- The version is used for invalidation.\r\n- New tools version will need more metadata for the lock file and increase the version. \r\n- The new tools readers still know how to read the old lock file schema. \r\n- The old tools will invalidate the lock if wrong metadata is provided in the schema.\r\n- A project generated with old tools has a lock file.\r\n- The project does not change anything in the package dependencies.\r\n- Run a restore with new tools.\r\n\r\n**Result**: The restore will fail with invalid lock file error. \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a SDK style project and enable lock file  ` \r\n    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>\r\n    <RestoreLockedMode>true</RestoreLockedMode>\r\n`\r\n2. Restore change the version of the lock file to 2. \r\n3. Restore again\r\n\r\nResult: restore works without an error.\r\n\r\nFor PC last step will fail.\r\n\r\n\r\n\r\n\r\n"},{"Id":"11919494443","Type":"IssuesEvent","CreatedAt":"2020-03-31T21:41:20","Actor":"jessehouwing","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9369","RelatedDescription":"Opened issue \"Create a x86+x64 .NET 4.6+Native nuget library and it's driving me NUTS\" (#9369) at NuGet/Home","RelatedBody":"# Details about Problem\r\nI've been trying to craft a nuspec file (to be used with nuget.exe pack) to create a nupack that has the following elements:\r\n\r\n * a 32-bit native library (must be part of project output for x86)\r\n * a 64-bit native library (must be part of project output for x64)\r\n * a 32-bit managed assembly (must be part of project output for x86)\r\n * a 64-bit managed assembly (must be part of project output for x64)\r\n * a managed assembly (must be part of project output for all platforms)\r\n\r\nAll of these target net46 and above.\r\n\r\nI've created a reference assembly as well by now.\r\n\r\nThis is what the nuspec looks like:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd\">\r\n  <metadata>\r\n    <id>MyProject.Core</id>\r\n    <dependencies>\r\n      <group targetFramework=\"net46\">\r\n        <dependency id=\"log4net\" version=\"2.0.8\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"7.0.1\" />\r\n        <dependency id=\"CSLA-Core\" version=\"4.5.501\" />\r\n      </group>\r\n    </dependencies>\r\n    <references>\r\n      <group targetFramework=\"net46\">\r\n        <reference file=\"MyProject.Reporting.dll\" />\r\n        <reference file=\"MyProject.dll\" />\r\n        <reference file=\"DotNetOpenAuth.dll\" />\r\n      </group>\r\n    </references>\r\n  </metadata>\r\n  <files>\r\n    <file src=\"../../Application/Bin/API/DotNetOpenAuth.dll\" target=\"lib/net46\" />\r\n\r\n    <!--<file src=\"tools/Install.ps1\" target=\"tools\" />-->\r\n\r\n    <file src=\"../../Application/Components/mvldes32.dll\" target=\"runtimes/win-x86/native\" />\r\n    <file src=\"../../Application/Components/mvldes64.dll\" target=\"runtimes/win-x64/native\" />\r\n    <file src=\"../../MyProject/bin/$configuration$/x64/ref/MyProject.dll\" target=\"ref/net46\" />\r\n    <file src=\"../../MyProject/bin/$configuration$/x86/MyProject.dll\" target=\"runtimes/win-x86/lib/net46\" />\r\n    <file src=\"../../MyProject/bin/$configuration$/x64/MyProject.dll\" target=\"runtimes/win-x64/lib/net46\" />\r\n\r\n    <file src=\"../../MyProject.Reporting/bin/$configuration$/x64/ref/MyProject.Reporting.dll\" target=\"ref/net46\" />\r\n    <file src=\"../../MyProject.Reporting/bin/$configuration$/x64/MyProject.Reporting.dll\" target=\"runtimes/win-x64/lib/net46\" />\r\n    <file src=\"../../MyProject.Reporting/bin/$configuration$/x86/MyProject.Reporting.dll\" target=\"runtimes/win-x86/lib/net46\" />\r\n  </files>\r\n\r\n</package>\r\n```\r\n\r\nI can't get the references to `MyProject.Reporting.dll` and `MyProject.dll` to appear in the editor after adding the nuget file.\r\n\r\n`nuget pack` complains it can't find the assemblies:\r\n\r\n```\r\nError NU5018: Invalid assembly reference 'MyProject.dll'. Ensure that a file named 'MyProject.Reporting.dll' exists in the lib directory.\r\nError NU5018: Invalid assembly reference 'MyProject.dll'. Ensure that a file named 'MyProject.dll' exists in the lib directory.\r\n```\r\n\r\nI've searched all over and have stumbled upon many similar questions, but everyone seems to get stuck on the exact pieces of the puzzle on this problem. It looks as if it may be working for .NET Core and UWP from what I gather from the samples and the docs, but I'm not entirly sure of that either.\r\n\r\nNuGet version:  5.5.0.6473\r\nVS version (if appropriate): 2019\r\nOS version (i.e. win10 v1607 (14393.321)):  win10 2004 19041.172\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nSee above nuspec\r\n\r\n## Other suggested things\r\n\r\nAll multi-platform examples here show UWP: https://github.com/NuGet/docs.microsoft.com-nuget/blob/master/docs/create-packages/Supporting-Multiple-Target-Frameworks.md\r\nSimilar issues linked to the docs page: https://github.com/NuGet/docs.microsoft.com-nuget/issues?utf8=%E2%9C%93&q=%22d70bd2f5-c04b-9207-62a0-4ecb6e8e5ca6%22&in=body\r\nDocs page: https://docs.microsoft.com/en-us/nuget/create-packages/supporting-multiple-target-frameworks\r\nMany similar questions on Stackoverflow with all kinds of solutions, but none seem to come close to what these docs suggest... https://www.bing.com/search?q=nuget+package+x86+x64+site%3astackoverflow.com\r\n\r\n"},{"Id":"11918582724","Type":"IssuesEvent","CreatedAt":"2020-03-31T20:00:12","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9250","RelatedDescription":"Reopened issue \"[Test Failure] Only “Browse” tab can’t show the embedded icon of the package from DevOps feed\" (#9250) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.6.0.6479\r\nVS Version: Master\\29902.138\r\nOS: Windows-10-Enterprise-RS5\r\n## Detailed repro steps \r\n1.\tCreate a Console App (.NET Core 3.1) in VS and open the PM UI of the solution.\r\n2.\tAdd the [DevOps feed](https://pkgs.dev.azure.com/farhub/_packaging/farhub/nuget/v3/index.json ) into the Settings->NuGet Package Manager->Package Sources.\r\n3.  Select the new added DevOps feed in the Package source dropdown box in the PM UI and install the package [**classlib.net48 -version 1.0.5** (don’t have the backlash problem in bug 9225), **dotnet.icon -version 1.0.0** (embedded icon)]\r\n4.  Check all the tabs in PM UI. \r\n## Expected\r\nThe embedded icon should show correctly in all the tabs of PM UI.\r\n## Actual\r\nOnly “Browse” tab can’t show the embedded icon of the package from DevOps feed as below screenshot.\r\n![image](https://user-images.githubusercontent.com/20632625/75776381-df38c400-5d8e-11ea-93ce-c4cda3a6d87e.png)\r\n\r\n## Note\r\nIt doesn't repro for the nuget.org feed.\r\n\r\n"},{"Id":"11917527540","Type":"IssuesEvent","CreatedAt":"2020-03-31T18:09:25","Actor":"MatthieuHernandez","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9368","RelatedDescription":"Opened issue \"copyToOutput option of contentFiles inside nuspec seems seems not work\" (#9368) at NuGet/Home","RelatedBody":"I seem to have the a problem with my, *.nuspec because when I build and use my package I see my files in the contentFiles directory but there are not copy in the bin/x64/Release directory in the project witch use the package. The files are just copied in the project directory (not in bin). \r\nDid I miss something ?\r\n\r\nNuGet product used: NuGet.exe\r\nNuGet version: 5.4.0.6315\r\ndotnet.exe: .NET Framework 4.5.2\r\nOS version: Windows 10\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package>\r\n  <metadata>\r\n    <id>$id$</id>\r\n    <version>$version$</version>\r\n    <title>$title$</title>\r\n    <authors>$author$</authors>\r\n    <owners>$author$</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>$description$</description>\r\n    <copyright>$copyright$</copyright>\r\n    <references>\r\n      <reference file=\"STApi.dll\" />\r\n    </references>\r\n\t<dependencies>\r\n      <group targetFramework=\".NETFramework4.5.2\" />\r\n    </dependencies>\r\n\t<contentFiles>\r\n      <files include=\"NLog.dll.nlog\" buildAction=\"none\" copyToOutput=\"false\"/>\r\n      <files include=\"sqlnet.ora\" buildAction=\"none\" copyToOutput=\"false\"/>\r\n      <files include=\"Tnsnames.ora\" buildAction=\"none\" copyToOutput=\"false\"/>\r\n   </contentFiles>\r\n  </metadata>\r\n  <files>\r\n    <file src=\".\\..\\STLogger\\nlog-1.0-net-1.1\\bin\\NLog.dll\" target=\"lib\\net452\"/>\r\n    <file src=\".\\..\\STtLogger\\NLog.dll.nlog\" target=\"content\"/>\r\n    <file src=\".\\..\\STDB\\sqlnet.ora\" target=\"content\"/>\r\n    <file src=\".\\..\\STDB\\Tnsnames.ora\" target=\"content\"/>\r\n  </files>\r\n</package>\r\n```\r\n\r\n"},{"Id":"11917468827","Type":"IssuesEvent","CreatedAt":"2020-03-31T18:03:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9366","RelatedDescription":"Closed issue \"Improve inner-loop testing for packages\" (#9366) at NuGet/Home","RelatedBody":"Its difficult for package authors to test their package while in development. Some context: https://twitter.com/khellang/status/1244892768717209600\r\n![image](https://user-images.githubusercontent.com/14800916/78027440-fdd4af80-737a-11ea-86d3-1054587e5119.png)\r\n\r\nRelated issue, that was closed: #1821\r\n\r\nLets discuss possible (current/future) solutions, here."},{"Id":"11917270589","Type":"IssuesEvent","CreatedAt":"2020-03-31T17:43:08","Actor":"WillAutioItrax","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9367","RelatedDescription":"Opened issue \"NuGet Migration for package.config to PackageReference does half the job and then dies.\" (#9367) at NuGet/Home","RelatedBody":"Remove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\nI am trying to do a NuGet Migration for package.config to PackageReference in VS 2019 using Xamarin Forms. The process unloads all the packages for Droid and then stops. It leaves my project with no links for nugets and no entries using PackageReference in Droid.csproj. This is for our app that has about 100 Nugets.\r\nI really like the recovery process for when it fails like for me.\r\nI have done it successfully on a sample program with a handful of packages. That time at the end I got a friendly website with a summary.\r\n\r\nWhere can I find instructions for manually making the changes required to migrate? (it would be a pain but only once and then I can continue developing)\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nNuget Package manager 5.4.0 from within VS 2019 16.4.5\r\n\r\nNuGet version (x.x.x.xxx):\r\nsee above\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\nsee above\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nWin 10 Pro 1909\r\n\r\nWorked before? If so, with which NuGet version:\r\nFailed first time (and subsequent times)\r\n\r\n## Detailed repro steps so we can see the same problem\r\nSorry - that is not possible.\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nWhere do I run either of these instructions and what goes in <COMMAND> in this case? Thanks.\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11917179574","Type":"IssuesEvent","CreatedAt":"2020-03-31T17:34:03","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9322","RelatedDescription":"Closed issue \"MsBuild version picking works badly on some non-english cultures\" (#9322) at NuGet/Home","RelatedBody":"I have the latest sources for the NuGet (20.03.2020)\r\nand for me **TestMsBuildPathFromVsPath** is failing with an error:\r\n```\r\n    Expected: ···a264bf76\\MSBuild\\15.0\\bin\r\n    Actual:   ···a264bf76\\MSBuild\\15.1\\Bin\r\n```\r\n\"\"\\15.0\\\" is selected instead of \"15.1\" while the number cannot be parsed as float.\"\r\n\r\nProblem is that the wrong MSBuild path is selected for a culture where ',' is used as float separator.\r\n\r\nHow to reproduce:\r\n1. Change current regional settings to be with a culture where ',' is used.\r\n![image](https://user-images.githubusercontent.com/17121033/77196169-1a532b00-6ae3-11ea-85ed-45df3d75fa19.png)\r\n\r\n2. Run the test:\r\n\r\n\r\nThe fix is easy InvariantCulture should be used. Ex: MsBuildToolset.cs\r\nif (float.TryParse(dirName, NumberStyles.Float, **CultureInfo.InvariantCulture**, out dirValue))\r\n"},{"Id":"11913843139","Type":"IssuesEvent","CreatedAt":"2020-03-31T12:41:50","Actor":"anangaur","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9366","RelatedDescription":"Opened issue \"Improve inner-loop testing for packages\" (#9366) at NuGet/Home","RelatedBody":"Its difficult for package authors to test their package while in development. Some context: https://twitter.com/khellang/status/1244892768717209600\r\n![image](https://user-images.githubusercontent.com/14800916/78027440-fdd4af80-737a-11ea-86d3-1054587e5119.png)\r\n\r\nRelated issue, that was closed: #1821\r\n"},{"Id":"11913281574","Type":"IssuesEvent","CreatedAt":"2020-03-31T11:43:39","Actor":"fowl2","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9365","RelatedDescription":"Opened issue \"NuGet.exe suggests incorrect argument form \"--force-evaluate\" (should be \"-ForceEvaluate\") for NU1004\" (#9365) at NuGet/Home","RelatedBody":"Looks like the help/error message is getting confused with the \"dotnet restore\" version of the command?\r\n\r\n## Repro Steps\r\n\r\n`> nuget.exe restore`\r\n> NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Disable the RestoreLockedMode MSBuild property or pass an explicit **--force-evaluate** option to run restore to update the lock file.\r\n\r\nOk sure, let's try.\r\n```\r\n> nuget.exe restore  --force-evaluate\r\nUnknown option: '--force-evaluate'\r\nNuGet.Commands.CommandException: Unknown option: '--force-evaluate'\r\n   at NuGet.CommandLine.CommandLineParser.GetPartialOptionMatch[TVal](IEnumerable`1 source, Func`2 getDisplayName, Func`2 getAltName, String option, String value)\r\n   at NuGet.CommandLine.CommandLineParser.ExtractOptions(ICommand command, IEnumerator`1 argsEnumerator)\r\n   at NuGet.CommandLine.CommandLineParser.ParseCommandLine(IEnumerable`1 commandLineArgs)\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n\r\nNuGet Version: 5.5.0\r\nPlatform: Windows 10 x64 10.0.17763.1098"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-01T05:30:42.3998262Z","RunDurationInMilliseconds":1912}