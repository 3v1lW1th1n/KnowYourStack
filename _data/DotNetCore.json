{"Data":{"Blog":{"FeedItems":[{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":67,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3694","PublishedOn":"2018-11-29T00:21:07+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We are happy to let you know that .NET Framework 4.8 is now feature complete and we have an early access build to share with you all! We will continue to stabilize this release and take more fixes...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/28/announcing-net-framework-4-8-early-access-build-3694/","RawContent":null},{"Title":".NET Framework November 2018 Preview of Quality Rollup","PublishedOn":"2018-11-28T01:04:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addressed an issue with...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/27/net-framework-november-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8713098009","Type":"IssuesEvent","CreatedAt":"2018-12-07T00:57:43","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10259","RelatedDescription":"Closed issue \"`dotnet new manifestfile` or `dotnet tool install package id --create-new-manifest-file`\" (#10259) at dotnet/cli","RelatedBody":"A way to create manifest file since we will throw when `dotnet tool install` cannot find a manifest file"},{"Id":"8713051425","Type":"PullRequestEvent","CreatedAt":"2018-12-07T00:44:03","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10444","RelatedDescription":"Merged pull request \"Update dependency files\" (#10444) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n\r\n"},{"Id":"8712408308","Type":"IssuesEvent","CreatedAt":"2018-12-06T22:07:58","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10446","RelatedDescription":"Opened issue \"dotnet new tool-manifest will put dotnet-tools.json under .config folder\" (#10446) at dotnet/cli","RelatedBody":"Open this issue for feedback. We hope to use the convention of `.config` folder to avoid the clutter of config file under the repo root. Start from local tools manifest"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8712548233","Type":"IssuesEvent","CreatedAt":"2018-12-06T22:36:35","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/973","RelatedDescription":"Closed issue \"Consider adding IDispatchConstantAttribute\" (#973) at dotnet/standard","RelatedBody":"The `IUnknownConstantAttribute` is in netstandard, but the related `IDispatchConstantAttribute` is not. We should consider whether this attribute should be added for consistency.\r\n\r\nSee dotnet/corefx#33559"},{"Id":"8712455562","Type":"PullRequestEvent","CreatedAt":"2018-12-06T22:17:24","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Merged pull request \"Move build output from `bin` to `artifacts`\" (#1002) at dotnet/standard","RelatedBody":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC"},{"Id":"8712150413","Type":"PullRequestEvent","CreatedAt":"2018-12-06T21:20:39","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Opened pull request \"Move build output from `bin` to `artifacts`\" (#1002) at dotnet/standard","RelatedBody":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC"},{"Id":"8711752589","Type":"IssuesEvent","CreatedAt":"2018-12-06T20:07:34","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/758","RelatedDescription":"Closed issue \"Not able to trim packages on RHEL 6 platform\" (#758) at dotnet/standard","RelatedBody":"We are using following version of Microsoft.Packaging.Tools.Trimming package with the 2.1.3_RC1 build of dotnet SDK on RHEL 6.7 platform\r\n\r\n<PackageReference Include=\"Microsoft.Packaging.Tools.Trimming\" Version=\"1.1.0-preview1-25818-01\" />\r\n\r\nWe get the following error on dotnet build command\r\n\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly. [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: System.Exception: Root package Microsoft.NETCore.App was specified but was not found in PackageDependencies [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.DotNet.Build.Tasks.TrimFiles.GetPackageRoots(IDictionary`2 packages, Trimmable trimmable) [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute() [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n/home/SymantecDLP/.nuget/packages/microsoft.packaging.tools.trimming/1.1.0-preview1-25818-01/build/Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/SymantecDLP/Perforce/amit_shinde_RHEL67RHDT61DEV_8991/depot/main/dev/managed/src/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor/OfficeOpenXMLContentExtractor.csproj]\r\n"},{"Id":"8711737698","Type":"PullRequestEvent","CreatedAt":"2018-12-06T20:04:56","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1001","RelatedDescription":"Merged pull request \"Remove Trimming package from dotnet/standard\" (#1001) at dotnet/standard","RelatedBody":"Fixes: https://github.com/dotnet/standard/issues/788\r\n\r\nThose looking for an officially supported trimming tool should try:\r\nhttps://github.com/dotnet/core/blob/master/samples/linker-instructions.md\r\n\r\nThe assembly level linker has moved to:\r\nhttps://github.com/ericstj/Microsoft.Packaging.Tools.Trimming"},{"Id":"8711737670","Type":"IssuesEvent","CreatedAt":"2018-12-06T20:04:56","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/788","RelatedDescription":"Closed issue \"Trimming package should be removed from dotnet/standard repo\" (#788) at dotnet/standard","RelatedBody":"There's really no good reason for this package to live in the standard repo.\r\n\r\nA few suggestions for a new home:\r\n1. CoreFxLab\r\n2. Its own repo under dotnet\r\n3. Its own repo under ericstj, since I'm the sole contributor.  I'd change the name of the package if I did this.\r\n\r\nThe downside of lab is that it implies an experiment and never has \"releases\" however I'd actually like to push towards a stable release of this tool.\r\n\r\n@weshaggard @Petermarcu @terrajobst do any of you have an opinion?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8713638844","Type":"IssuesEvent","CreatedAt":"2018-12-07T03:40:02","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33844","RelatedDescription":"Closed issue \"ObjectDisposedException in FileStreamCompletionSource.CompleteCallback crashes the process\" (#33844) at dotnet/corefx","RelatedBody":"See https://github.com/aspnet/AspNetCore/issues/4422\r\n```\r\nApplication: dotnet.exe\r\nCoreCLR Version: 4.6.27110.4\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.ObjectDisposedException: The CancellationTokenSource has been disposed.\r\n   at System.Threading.CancellationTokenSource.ThrowObjectDisposedException()\r\n   at System.IO.FileStream.FileStreamCompletionSource.CompleteCallback(UInt64 packedResult)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)\r\n```\r\n\r\nIn this situation the application is reading files, cancels the reads, and apparently disposing the CancellationTokenSource."},{"Id":"8713420738","Type":"PullRequestEvent","CreatedAt":"2018-12-07T02:33:00","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33901","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview-27207-01, preview-27206-02, respectively (master)\" (#33901) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"8713262119","Type":"PullRequestEvent","CreatedAt":"2018-12-07T01:45:40","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33899","RelatedDescription":"Merged pull request \"Force CoreFX to use source-build's BuildTools\" (#33899) at dotnet/corefx","RelatedBody":"We used this patch to get CoreFX on Arcade to use source-build's copy of buildtools: https://github.com/dotnet/source-build/pull/916.\r\n\r\n@bartonjs can you make sure this (or some better approach) gets merged in to reduce maintenance burden as CoreFX moves along?"},{"Id":"8713192065","Type":"PullRequestEvent","CreatedAt":"2018-12-07T01:24:59","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33900","RelatedDescription":"Opened pull request \"Fix configuration and paths\" (#33900) at dotnet/corefx","RelatedBody":"Fixes #33465"},{"Id":"8713064297","Type":"PullRequestEvent","CreatedAt":"2018-12-07T00:47:53","Actor":"dagood","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33218","RelatedDescription":"Merged pull request \"[master] Skip CoreFx.Private.TestUtilities in source-build\" (#33218) at dotnet/corefx","RelatedBody":"This project referenced the XUnit.Runtime dependency project, causing test-only prebuilt dependencies.\r\n\r\nEven though source-build always passes BuildTests=false, include a condition to handle \"true\" to make intent clear.\r\n\r\n---\r\n\r\nPorts https://github.com/dotnet/corefx/pull/33217 to `master` (see that PR for details)."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8713531675","Type":"PullRequestEvent","CreatedAt":"2018-12-07T03:06:04","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31607","RelatedDescription":"Opened pull request \"Remove remaining artifacts of symbol-centric NonNullTypes context.\" (#31607) at dotnet/roslyn","RelatedBody":"Closes #30171.\r\nCloses #29838."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8713588411","Type":"PullRequestEvent","CreatedAt":"2018-12-07T03:23:30","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6654","RelatedDescription":"Merged pull request \"R2R all methods in entrypoint assemblies\" (#6654) at dotnet/corert","RelatedBody":"Our early work retained the split that the classic RyuJit-based CoreRT compiler uses where for assemblies with a `Main` method only the set of methods statically reachable from `Main` were compiled. This was fine for a single-file AOT compiler, because we built the entire call graph across assemblies. For ready-to-run, this can cause methods needed at runtime to not get compiled if they're called in a round-about way (via dependency injection for example)."},{"Id":"8712112840","Type":"PullRequestEvent","CreatedAt":"2018-12-06T21:13:39","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6657","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6657) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8712021730","Type":"PullRequestEvent","CreatedAt":"2018-12-06T20:56:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6656","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6656) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"8711569681","Type":"PullRequestEvent","CreatedAt":"2018-12-06T19:36:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6656","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6656) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8711546604","Type":"PullRequestEvent","CreatedAt":"2018-12-06T19:31:58","Actor":"jkoritzinsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6652","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6652) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkoritzinsky"},{"Id":"8711296525","Type":"PullRequestEvent","CreatedAt":"2018-12-06T18:48:18","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6655","RelatedDescription":"Opened pull request \"Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#6655) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/21394 to corert"},{"Id":"8711229521","Type":"PullRequestEvent","CreatedAt":"2018-12-06T18:36:09","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6654","RelatedDescription":"Opened pull request \"R2R all methods in entrypoint assemblies\" (#6654) at dotnet/corert","RelatedBody":"Our early work retained the split that the classic RyuJit-based CoreRT compiler uses where for assemblies with a `Main` method only the set of methods statically reachable from `Main` were compiled. This was fine for a single-file AOT compiler, because we built the entire call graph across assemblies. For ready-to-run, this can cause methods needed at runtime to not get compiled if they're called in a round-about way (via dependency injection for example)."},{"Id":"8711225140","Type":"PullRequestEvent","CreatedAt":"2018-12-06T18:35:20","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6653","RelatedDescription":"Opened pull request \"Improvements to R2R Test Harness\" (#6653) at dotnet/corert","RelatedBody":"To support multi-core testing, associate the test process's PID with the ETW filter so that only assemblies loaded by the runtime the harness started are considered.\r\n\r\nEmit the assembly name for methods that are jitted to allow grouping of methods by their assembly.\r\n\r\nAdd a new parameter, `--include` which configures the ETW filter to include all assemblies in a given folder, instead of having to specify a large number of assemblies individually.\r\n\r\nBug fixes around path casing causing events to be dropped."},{"Id":"8711021315","Type":"PullRequestEvent","CreatedAt":"2018-12-06T17:59:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6652","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6652) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8709338508","Type":"PullRequestEvent","CreatedAt":"2018-12-06T13:42:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6651","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6651) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8713210173","Type":"PullRequestEvent","CreatedAt":"2018-12-07T01:30:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2728) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8713097722","Type":"IssuesEvent","CreatedAt":"2018-12-07T00:57:38","Actor":"NTaylorMullen","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2729","RelatedDescription":"Opened issue \"Represent FrameworkReference of transitive project's and package's in the deps.json file.\" (#2729) at dotnet/sdk","RelatedBody":"Today transitive project/package references aren't properly represented in a deps.json. For instance given this project (Bug4332 is a web app, Bug4332RCL is a Razor class library, both targeting netcoreapp3.0):\r\n![image](https://user-images.githubusercontent.com/2008729/49620733-0f6c9980-f977-11e8-8da3-e2d28605a2e1.png)\r\n\r\nToday you get the following `Bug4332.deps.json` entry for `Bug4332RCL`:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe min-bar expectation would be for the deps.json to look something like:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.AspNetCore.App\": \"3.0.0-preview-18579-0056\"\r\n        },\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThis is blocking [a critical scenario](https://github.com/aspnet/AspNetCore/issues/4332) in ASP.NET Core MVC 3.0 of having Razor views in a class library.\r\n\r\nLastly, I imagine this issue depends on the completion of the following (please correct me if i'm wrong):\r\n- **Referencing a shared framework does not flow across ProjectReference** https://github.com/dotnet/sdk/issues/2420 \r\n- **Represent FrameworkReferences in NuGet packages and assets files** https://github.com/NuGet/Home/issues/7342 \r\n\r\n\r\n@livarcocc @dsplaisted @natemcmaster @mkArtakMSFT @rynowak"},{"Id":"8712902053","Type":"PullRequestEvent","CreatedAt":"2018-12-07T00:01:29","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to master\" (#2728) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8712901880","Type":"PullRequestEvent","CreatedAt":"2018-12-07T00:01:27","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2727","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#2727) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8711677379","Type":"PullRequestEvent","CreatedAt":"2018-12-06T19:54:40","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2718","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#2718) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8711676816","Type":"PullRequestEvent","CreatedAt":"2018-12-06T19:54:34","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2719","RelatedDescription":"Merged pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#2719) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8711583009","Type":"IssuesEvent","CreatedAt":"2018-12-06T19:38:30","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2726","RelatedDescription":"Closed issue \"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648\" (#2726) at dotnet/sdk","RelatedBody":"Hi on 5 Dec 2018, I downloaded the .NET Core SDK with version 2.2.100 and after install on my sytem, i checked that there is an existing 2.2.200-preview-009648 version is installed. Please let me know which one latest? it seem 2.2.100 is latest as per download page but from version number it seem 2.2.200 is latest."},{"Id":"8711533377","Type":"IssuesEvent","CreatedAt":"2018-12-06T19:29:41","Actor":"sarbjithanjra","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2726","RelatedDescription":"Opened issue \"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648\" (#2726) at dotnet/sdk","RelatedBody":"Hi on 5 Dec 2018, I downloaded the .NET Core SDK with version 2.2.100 and after install on my sytem, i checked that there is an existing 2.2.200-preview-009648 version is installed. Please let me know which one latest? it seem 2.2.100 is latest as per download page but from version number it seem 2.2.200 is latest."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"279475345","IsPullRequest":true,"CreatedAt":"2018-05-18T19:10:06","Actor":"heiligerdankgesang","Number":"92","RawContent":null,"Title":"Remove contact email from system.drawing.md","State":"closed","Body":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information.","Url":"https://github.com/dotnet/foundation/pull/92","RelatedDescription":"Closed or merged PR \"Remove contact email from system.drawing.md\" (#92)"},{"Id":"285274998","IsPullRequest":true,"CreatedAt":"2018-05-18T19:09:35","Actor":"onovotny","Number":"93","RawContent":null,"Title":"Add Humanizer","State":"closed","Body":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682","Url":"https://github.com/dotnet/foundation/pull/93","RelatedDescription":"Closed or merged PR \"Add Humanizer\" (#93)"},{"Id":"286511421","IsPullRequest":true,"CreatedAt":"2018-05-18T19:07:08","Actor":"ctaggart","Number":"94","RawContent":null,"Title":"add SourceLink","State":"closed","Body":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138","Url":"https://github.com/dotnet/foundation/pull/94","RelatedDescription":"Closed or merged PR \"add SourceLink\" (#94)"},{"Id":"288415599","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:48","Actor":"bfistein","Number":"95","RawContent":null,"Title":"Fix broken logo URL","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/95","RelatedDescription":"Closed or merged PR \"Fix broken logo URL\" (#95)"},{"Id":"288749196","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:24","Actor":"galatrash","Number":"96","RawContent":null,"Title":"Adding DNN Platform.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/96","RelatedDescription":"Closed or merged PR \"Adding DNN Platform.\" (#96)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"388499320","IsPullRequest":true,"CreatedAt":"2018-12-07T04:15:45","Actor":"tannergooding","Number":"21432","RawContent":null,"Title":"Moving various Vector128/256 helper method to be implemented using other intrinsics","State":"open","Body":"As per the title, this updates various helper method for `Vector128` and `Vector256` to be implemented using other intrinsics","Url":"https://github.com/dotnet/coreclr/pull/21432","RelatedDescription":"Open PR \"Moving various Vector128/256 helper method to be implemented using other intrinsics\" (#21432)"},{"Id":"388353751","IsPullRequest":true,"CreatedAt":"2018-12-07T03:39:31","Actor":"stephentoub","Number":"21417","RawContent":null,"Title":"[release/2.2] Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"CTR.Token should never throw, but it's currently throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed.\r\n\r\nPorts https://github.com/dotnet/coreclr/pull/21394 to release/2.2\r\nFixes https://github.com/dotnet/corefx/issues/33844","Url":"https://github.com/dotnet/coreclr/pull/21417","RelatedDescription":"Closed or merged PR \"[release/2.2] Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#21417)"},{"Id":"388471351","IsPullRequest":true,"CreatedAt":"2018-12-07T01:44:25","Actor":"fiigii","Number":"21431","RawContent":null,"Title":"Fix a bug that disabled Bmi1/2.X64","State":"open","Body":"Fix a bug from https://github.com/dotnet/coreclr/pull/21264","Url":"https://github.com/dotnet/coreclr/pull/21431","RelatedDescription":"Open PR \"Fix a bug that disabled Bmi1/2.X64\" (#21431)"},{"Id":"388464325","IsPullRequest":true,"CreatedAt":"2018-12-07T01:10:45","Actor":"AaronRobinsonMSFT","Number":"21430","RawContent":null,"Title":"Add support for loading registered TLBs","State":"open","Body":"See #20531\r\n\r\ncc @jeffschwMSFT @richlander ","Url":"https://github.com/dotnet/coreclr/pull/21430","RelatedDescription":"Open PR \"Add support for loading registered TLBs\" (#21430)"},{"Id":"388462063","IsPullRequest":true,"CreatedAt":"2018-12-07T00:59:39","Actor":"jkoritzinsky","Number":"21429","RawContent":null,"Title":"Add PNSE implementations of other custom marshalers","State":"open","Body":"Add PNSE implementations of unsupported built-in custom marshalers to enable good error messages on PIAs that could possibly directly use them.\r\n","Url":"https://github.com/dotnet/coreclr/pull/21429","RelatedDescription":"Open PR \"Add PNSE implementations of other custom marshalers\" (#21429)"},{"Id":"388460336","IsPullRequest":true,"CreatedAt":"2018-12-07T00:51:34","Actor":"janvorli","Number":"21428","RawContent":null,"Title":"Disable obsolete collectible corefx tests","State":"open","Body":"Now that the COM interop support for collectible classes is in, we need\r\nto disable couple of corefx tests that were checking that it fails.\r\n\r\nClose #21398","Url":"https://github.com/dotnet/coreclr/pull/21428","RelatedDescription":"Open PR \"Disable obsolete collectible corefx tests\" (#21428)"},{"Id":"388457890","IsPullRequest":false,"CreatedAt":"2018-12-07T00:39:44","Actor":"BruceForstall","Number":"21427","RawContent":null,"Title":"[Linux/arm64] System.Net.Http.Functional.Tests failure","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/59/consoleFull\r\n\r\nIncluding VM assert:\r\n```\r\nAssert failure(PID 33063 [0x00008127], Thread: 37956 [0x9444]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n```\r\n\r\nPartial log:\r\n```\r\n04:29:37 >>>>> /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.Net.Http.Functional.Tests\r\n04:29:37 \r\n04:29:37 Running tests in /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.Net.Http.Functional.Tests/netcoreapp-Linux-Release-arm64\r\n04:29:37 timeout --kill-after=30s 20m ./RunTests.sh /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64\r\n04:29:37 \r\n04:29:37 ./RunTests.sh: line 110: ulimit: core file size: cannot modify limit: Operation not permitted\r\n04:29:37 ----- start 04:28:33 =============== To repro directly: =====================================================\r\n04:29:37 pushd .\r\n04:29:37 #!/usr/bin/env bash export COMPlus_TieredCompilation=0\r\n04:29:37 chmod +x /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet xunit.console.dll System.Net.Http.Functional.Tests.dll  -xml testResults.xml -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests  -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing\r\n04:29:37 popd\r\n04:29:37 ===========================================================================================================\r\n04:29:37 ~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.Net.Http.Functional.Tests/netcoreapp-Linux-Release-arm64 ~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.Net.Http.Functional.Tests/netcoreapp-Linux-Release-arm64\r\n04:29:37 xUnit.net Console Runner v2.4.1-pre.build.4059 (64-bit .NET Core 4.6.27204.0)\r\n04:29:37 [37m  Discovering: System.Net.Http.Functional.Tests (method display = ClassAndMethod, method display options = None)\r\n04:29:37 [m[37m  Discovered:  System.Net.Http.Functional.Tests (found 629 of 920 test cases)\r\n04:29:37 [m[37m  Starting:    System.Net.Http.Functional.Tests (parallel test collections = on, max threads = 46)\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClient_SelectedSites_Test.RetrieveSite_Succeeds [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsSelectedSitesTestEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientEKUTest.HttpClient_ClientEKUServerAuth_Fails [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClient_SelectedSites_Test.RetrieveSite_Succeeds [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsSelectedSitesTestEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.MakeAndFaultManyRequests [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.MakeAndFaultManyRequests [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClient_SelectedSites_Test.RetrieveSite_Debug_Helper [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsSelectedSitesTestEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClient_SelectedSites_Test.RetrieveSite_Debug_Helper [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsSelectedSitesTestEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.UnreadResponseMessage_Collectible [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.SingleClient_ManyGets_Async [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.CreateAndDestroyManyClients [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.ManyClients_ManyPosts_Async [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.ManyClients_ManyGets [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientMiniStress.SingleClient_ManyGets_Sync [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.ManyClients_ManyPosts_Async [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.SingleClient_ManyGets_Sync [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.UnreadResponseMessage_Collectible [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.ManyClients_ManyGets [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.SingleClient_ManyGets_Async [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientMiniStress.CreateAndDestroyManyClients [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"IsStressModeEnabled\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientEKUTest.HttpClient_NoEKUServerAuth_Ok [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientEKUTest.HttpClient_NoEKUClientAuth_Ok [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestClientCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.SocketsHttpHandler_HttpClientEKUTest.HttpClient_ServerEKUClientAuth_Fails [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestClientCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientEKUTest.HttpClient_ServerEKUClientAuth_Fails [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestClientCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientEKUTest.HttpClient_NoEKUClientAuth_Ok [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestClientCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientEKUTest.HttpClient_NoEKUServerAuth_Ok [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestCertificates\"\r\n04:29:37 [m[33;1m    System.Net.Http.Functional.Tests.PlatformHandler_HttpClientEKUTest.HttpClient_ClientEKUServerAuth_Fails [SKIP]\r\n04:29:37 [m[37m      Condition(s) not met: \"CanTestCertificates\"\r\n04:29:37 [mCLR: Managed code called FailFast, saying \"[This assert catches satellite assembly build/deployment problems - report this message to your build lab & loc engineer]\r\n04:29:37 GetSatelliteAssembly failed for culture en-US and version 4.1.1.0 of assembly System.Net.Security with error code 0x80131509\r\n04:29:37 Exception: System.IO.FileLoadException: Could not load file or assembly 'System.Net.Security.resources, Version=4.1.1.0, Culture=en-US, PublicKeyToken=b03f5f7f11d50a3a'. An operation is not legal in the current state. (Exception from HRESULT: 0x80131509 (COR_E_INVALIDOPERATION))\r\n04:29:37 File name: 'System.Net.Security.resources, Version=4.1.1.0, Culture=en-US, PublicKeyToken=b03f5f7f11d50a3a'\r\n04:29:37    at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, IntPtr ptrLoadContextBinder)\r\n04:29:37    at System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(String name, CultureInfo culture, Version version, Boolean throwOnFileNotFound, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 \r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(CultureInfo culture, Dictionary`2 localResourceSets, Boolean tryParents, Boolean createIfNotExists, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo requestedCulture, Boolean createIfNotExists, Boolean tryParents, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)\r\n04:29:37    at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n04:29:37    at System.Resources.ResourceManager.GetString(String name)\r\n04:29:37    at System.SR.GetResourceString(String resourceKey, String defaultString) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Common/src/System/SR.cs:line 29\r\n04:29:37    at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs:line 250\r\n04:29:37    at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslStreamPal.Unix.cs:line 158\r\n04:29:37    at System.Net.Security.SecureChannel.GenerateToken(Byte[] input, Int32 offset, Int32 count, Byte[]& output) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SecureChannel.cs:line 841\r\n04:29:37    at System.Net.Security.SecureChannel.NextMessage(Byte[] incoming, Int32 offset, Int32 count) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SecureChannel.cs:line 729\r\n04:29:37    at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 749\r\n04:29:37    at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 965\r\n04:29:37    at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 1111\r\n04:29:37    at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/FixedSizeReader.cs:line 72\r\n04:29:37    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n04:29:37    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\r\n04:29:37    at System.Threading.ThreadPoolGlobals.<>c.<.cctor>b__6_0(Object state)\r\n04:29:37    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.InvokeContinuation(Action`1 continuation, Object state, Boolean forceAsync) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs:line 1040\r\n04:29:37    at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n04:29:37    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\"\r\n04:29:37 Assertion Failed\r\n04:29:37 [This assert catches satellite assembly build/deployment problems - report this message to your build lab & loc engineer]\r\n04:29:37 GetSatelliteAssembly failed for culture en-US and version 4.1.1.0 of assembly System.Net.Security with error code 0x80131509\r\n04:29:37 Exception: System.IO.FileLoadException: Could not load file or assembly 'System.Net.Security.resources, Version=4.1.1.0, Culture=en-US, PublicKeyToken=b03f5f7f11d50a3a'. An operation is not legal in the current state. (Exception from HRESULT: 0x80131509 (COR_E_INVALIDOPERATION))\r\n04:29:37 File name: 'System.Net.Security.resources, Version=4.1.1.0, Culture=en-US, PublicKeyToken=b03f5f7f11d50a3a'\r\n04:29:37    at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, IntPtr ptrLoadContextBinder)\r\n04:29:37    at System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(String name, CultureInfo culture, Version version, Boolean throwOnFileNotFound, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 \r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(CultureInfo culture, Dictionary`2 localResourceSets, Boolean tryParents, Boolean createIfNotExists, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo requestedCulture, Boolean createIfNotExists, Boolean tryParents, StackCrawlMark& stackMark)\r\n04:29:37    at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)\r\n04:29:37    at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)\r\n04:29:37    at System.Resources.ResourceManager.GetString(String name)\r\n04:29:37    at System.SR.GetResourceString(String resourceKey, String defaultString) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Common/src/System/SR.cs:line 29\r\n04:29:37    at Interop.OpenSsl.DoSslHandshake(SafeSslHandle context, Byte[] recvBuf, Int32 recvOffset, Int32 recvCount, Byte[]& sendBuf, Int32& sendCount) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs:line 250\r\n04:29:37    at System.Net.Security.SslStreamPal.HandshakeInternal(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, SslAuthenticationOptions sslAuthenticationOptions) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslStreamPal.Unix.cs:line 158\r\n04:29:37    at System.Net.Security.SecureChannel.GenerateToken(Byte[] input, Int32 offset, Int32 count, Byte[]& output) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SecureChannel.cs:line 841\r\n04:29:37    at System.Net.Security.SecureChannel.NextMessage(Byte[] incoming, Int32 offset, Int32 count) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SecureChannel.cs:line 729\r\n04:29:37    at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 749\r\n04:29:37    at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 965\r\n04:29:37    at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/Security/SslState.cs:line 1111\r\n04:29:37    at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Security/src/System/Net/FixedSizeReader.cs:line 72\r\n04:29:37    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n04:29:37    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\r\n04:29:37    at System.Threading.ThreadPoolGlobals.<>c.<.cctor>b__6_0(Object state)\r\n04:29:37    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.InvokeContinuation(Action`1 continuation, Object state, Boolean forceAsync) in /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/_/fx/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs:line 1040\r\n04:29:37    at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n04:29:37    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n04:29:37 \r\n04:29:37 \r\nAssert failure(PID 33063 [0x00008127], Thread: 37956 [0x9444]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 \r\nAssert failure(PID 33063 [0x00008127], Thread: 37956 [0x9444]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 Assert failure(PID 33063 [0x00008127], Thread: 37389 [0x920d]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 Assert failure(PID 33063 [0x00008127], Thread: 37389 [0x920d]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 Assert failure(PID 33063 [0x00008127], Thread: 38054 [0x94a6]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 \r\n04:29:37 Assert failure(PID 33063 [0x00008127], Thread: 38054 [0x94a6]): g_fEEShutDown >= ShutDown_Finalize2 || !\"This should not be called unless we are in the last phase of shutdown!\"\r\n04:29:37     File: /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline/src/vm/excep.cpp Line: 165\r\n04:29:37     Image: /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/testhost/netcoreapp-Linux-Release-arm64/dotnet\r\n04:29:37 \r\n04:29:37 ./RunTests.sh: line 127: 33063 Aborted                 (core dumped) $RUNTIME_PATH/dotnet xunit.console.dll System.Net.Http.Functional.Tests.dll -xml testResults.xml -notrait category=nonnetcoreapptests -notrait category=nonlinuxtests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing\r\n04:29:37 ~/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/_/fx/artifacts/bin/tests/System.Net.Http.Functional.Tests/netcoreapp-Linux-Release-arm64\r\n04:29:37 ----- end 04:29:15 ----- exit code 134 ----------------------------------------------------------\r\n04:29:37 exit code 134 means SIGABRT Abort. Managed or native assert, or runtime check such as heap corruption, caused call to abort(). Core dumped.\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/21427","RelatedDescription":"Open issue \"[Linux/arm64] System.Net.Http.Functional.Tests failure\" (#21427)"},{"Id":"388453956","IsPullRequest":true,"CreatedAt":"2018-12-07T00:20:27","Actor":"janvorli","Number":"21426","RawContent":null,"Title":"Fix SOS thread statics display","State":"open","Body":"I've noticed that when dumping an object with thread locals using SOS\r\ndumpobj command, I never get the thread locals. I've stepped through the\r\ncode in SOS that displays thread statics and found that for some strange\r\nreason, it dismisses threads where DomainLocalModule doesn't have\r\n\"initialized\" flag set for the given class. However, when runtime\r\naccesses thread statics, it just checks \"allocated\" flag set for the\r\ngiven class in the ThreadLocalModule. Removing the extra check for\r\nDomainLocalModule fixed the problem and now thread statics are displayed\r\nproperly.","Url":"https://github.com/dotnet/coreclr/pull/21426","RelatedDescription":"Open PR \"Fix SOS thread statics display\" (#21426)"},{"Id":"388449429","IsPullRequest":true,"CreatedAt":"2018-12-07T00:00:27","Actor":"BruceForstall","Number":"21425","RawContent":null,"Title":"[WIP] test re-enable all Windows arm corefx testing","State":"open","Body":"See if any failures have gone away","Url":"https://github.com/dotnet/coreclr/pull/21425","RelatedDescription":"Open PR \"[WIP] test re-enable all Windows arm corefx testing\" (#21425)"},{"Id":"388444948","IsPullRequest":false,"CreatedAt":"2018-12-06T23:41:11","Actor":"tannergooding","Number":"21424","RawContent":null,"Title":"Investigate emitting `movq` for the `CreateScalarUnsafe` helper intrinsics that take a `long/ulong` on x86","State":"open","Body":"For the `CreateScalarUnsafe` helper intrinsics that take a `long/ulong`, it may be beneficial to emit the `movq xmm, [mem]` instruction on x86, rather than falling back to emulating the behavior in software.\r\n\r\nGiven that the input is a regular `long/ulong`, but on x86 the instruction requires the second operand come from memory, this may require some additional work to make happen or we may find it not worthwhile to do at all.","Url":"https://github.com/dotnet/coreclr/issues/21424","RelatedDescription":"Open issue \"Investigate emitting `movq` for the `CreateScalarUnsafe` helper intrinsics that take a `long/ulong` on x86\" (#21424)"},{"Id":"388441661","IsPullRequest":true,"CreatedAt":"2018-12-06T23:27:33","Actor":"dagood","Number":"21423","RawContent":null,"Title":"Build Microsoft.NET.Sdk.IL package during source-build","State":"open","Body":"Allowing `Microsoft.NET.Sdk.IL` to build during source-build means CoreFX can use the source-built version rather than a prebuilt.\r\n\r\n@RussKeldorph can you make sure this (or some better approach) gets merged in to reduce maintenance burden as CoreCLR moves along?","Url":"https://github.com/dotnet/coreclr/pull/21423","RelatedDescription":"Open PR \"Build Microsoft.NET.Sdk.IL package during source-build\" (#21423)"},{"Id":"388440758","IsPullRequest":false,"CreatedAt":"2018-12-06T23:24:08","Actor":"jashook","Number":"21422","RawContent":null,"Title":"[Azure Dev Ops][armel] Enable armel/Tizen jobs in Azure Dev Ops","State":"open","Body":"Change the tizen(armel) jobs to run using helix. This will unblock moving the armel jobs from netci to azure dev ops. Currently there are several things that blocking this effort, see the summary below.\r\n\r\n1. A reproducible dockerfile to create the tizen image we use in netci checked into https://github.com/dotnet/dotnet-buildtools-prereqs-docker.\r\n    - Current docker image used is: tizendotnet/dotnet-buildtools-prereqs:ubuntu-16.04-cross-e435274-20180426002255-tizen-rootfs-5.0m1\r\n    - The image that will be used in https://github.com/dotnet/dotnet-buildtools-prereqs-docker should be able to build armel, and also should be able to chroot into the rootfs to run the built coreclr\r\n2. Arm32 hardware (either raspberry pi or jetson tx2) in the lab in its own helix queue, which can run docker.\r\n\r\n------------------------\r\n\r\nThe proposed testing plan is:\r\n\r\n1. docker run -i --rm -v coreclr:/coreclr -w /coreclr -e ROOTFS_DIR=/crossrootfs/armel microsoft/dotnet-buildtools-prereqs:ubuntu-16.04-cross-armel ./build.sh armel cross checked\r\n\r\n2. docker run -i --rm -v coreclr:/coreclr -w /coreclr -e ROOTFS_DIR=/crossrootfs/armel microsoft/dotnet-buildtools-prereqs:ubuntu-16.04-cross-armel ./build-test.sh armel checked\r\n\r\n3. helixpublishwitharcade.proj\r\n\r\n--------------------------\r\n\r\nHelix nodes will run on arm64/armhf hardware, connected under the tizen docker image. Once helix supports running under docker, we can change this to point at the new tizen image.","Url":"https://github.com/dotnet/coreclr/issues/21422","RelatedDescription":"Open issue \"[Azure Dev Ops][armel] Enable armel/Tizen jobs in Azure Dev Ops\" (#21422)"},{"Id":"388430213","IsPullRequest":true,"CreatedAt":"2018-12-06T22:45:14","Actor":"BruceForstall","Number":"21421","RawContent":null,"Title":"Disable ObjectStackAllocationTests for ARM32","State":"open","Body":"Issue #21376","Url":"https://github.com/dotnet/coreclr/pull/21421","RelatedDescription":"Open PR \"Disable ObjectStackAllocationTests for ARM32\" (#21421)"},{"Id":"388426860","IsPullRequest":true,"CreatedAt":"2018-12-06T22:33:56","Actor":"tarekgh","Number":"21420","RawContent":null,"Title":"Leap Seconds Support","State":"open","Body":"Port the leap seconds changes done in the full framework to net core.","Url":"https://github.com/dotnet/coreclr/pull/21420","RelatedDescription":"Open PR \"Leap Seconds Support\" (#21420)"},{"Id":"388411579","IsPullRequest":true,"CreatedAt":"2018-12-06T21:45:53","Actor":"trylek","Number":"21419","RawContent":null,"Title":"R2RDump support for parsing the field in FIELD_ADDRESS helper","State":"open","Body":"What it says on the tin - minor tweaks to R2RSignature to display\r\nthe field in question as part of the signature of the FIELD_ADDRESS\r\nhelper. This is the R2RDump counterpart of CPAOT changes I'm working\r\non right now regarding fixes to field placement algorithms.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/21419","RelatedDescription":"Open PR \"R2RDump support for parsing the field in FIELD_ADDRESS helper\" (#21419)"},{"Id":"388405021","IsPullRequest":true,"CreatedAt":"2018-12-06T21:27:29","Actor":"AndyAyersMS","Number":"21418","RawContent":null,"Title":"JIT: block general cloning of candidate calls","State":"open","Body":"Follow-up from #21270 and #21414.\r\n\r\nBlock general cloning from inadvertently cloning a candidate call.\r\n\r\nAdd a separate path for cloning calls that are inline and guarded\r\ndevirtualization candidates for use by guarded devirtualization.\r\nCallers need to take extra steps after cloning one of these calls\r\nto properly fix everything up.\r\n\r\nAlso fix up some issues in the large comment for the fat calli\r\ntransformation.","Url":"https://github.com/dotnet/coreclr/pull/21418","RelatedDescription":"Open PR \"JIT: block general cloning of candidate calls\" (#21418)"},{"Id":"388326019","IsPullRequest":true,"CreatedAt":"2018-12-06T21:18:28","Actor":"adiaaida","Number":"21412","RawContent":null,"Title":"Revert \"Move the perf jobs to Windows.10.Amd64.ClientRS4.DevEx.15.8.Open (#21258)\"","State":"closed","Body":"This reverts commit 5bb1b41dd19bca8f25b6d048c27d6708b86326cb.","Url":"https://github.com/dotnet/coreclr/pull/21412","RelatedDescription":"Closed or merged PR \"Revert \"Move the perf jobs to Windows.10.Amd64.ClientRS4.DevEx.15.8.Open (#21258)\"\" (#21412)"},{"Id":"388289838","IsPullRequest":true,"CreatedAt":"2018-12-06T21:11:50","Actor":"stephentoub","Number":"21405","RawContent":null,"Title":"Use Span instead of manual copy in MetadataImport.GetUserString","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21405","RelatedDescription":"Closed or merged PR \"Use Span instead of manual copy in MetadataImport.GetUserString\" (#21405)"},{"Id":"388290479","IsPullRequest":true,"CreatedAt":"2018-12-06T21:11:34","Actor":"stephentoub","Number":"21407","RawContent":null,"Title":"Remove char[] allocation from EventPipePayloadDecoder for strings","State":"closed","Body":"cc: @brianrob ","Url":"https://github.com/dotnet/coreclr/pull/21407","RelatedDescription":"Closed or merged PR \"Remove char[] allocation from EventPipePayloadDecoder for strings\" (#21407)"},{"Id":"388313690","IsPullRequest":true,"CreatedAt":"2018-12-06T21:11:10","Actor":"stephentoub","Number":"21410","RawContent":null,"Title":"Use string.Create in Path.GetRandomFilePath","State":"closed","Body":"Removes a good chunk of the unsafe code.\r\n\r\nAlso makes it a bit faster. This:\r\n```C#\r\n[Benchmark] public string GetRandomFileName() => Path.GetRandomFileName();\r\n```\r\nresults in this before:\r\n```\r\n            Method |     Mean |    Error |   StdDev |  Gen 0 | Allocated |\r\n------------------ |---------:|---------:|---------:|-------:|----------:|\r\n GetRandomFileName | 113.1 ns | 2.323 ns | 5.385 ns | 0.0113 |      48 B |\r\n```\r\nand this after:\r\n```\r\n            Method |     Mean |    Error |   StdDev |  Gen 0 | Allocated |\r\n------------------ |---------:|---------:|---------:|-------:|----------:|\r\n GetRandomFileName | 104.8 ns | 1.577 ns | 1.398 ns | 0.0113 |      48 B |\r\n```","Url":"https://github.com/dotnet/coreclr/pull/21410","RelatedDescription":"Closed or merged PR \"Use string.Create in Path.GetRandomFilePath\" (#21410)"},{"Id":"388341467","IsPullRequest":true,"CreatedAt":"2018-12-06T20:58:49","Actor":"AndyAyersMS","Number":"21414","RawContent":null,"Title":"JIT: move indirect call transformations to a new source file","State":"closed","Body":"Follow-up from a review comment in #21270.","Url":"https://github.com/dotnet/coreclr/pull/21414","RelatedDescription":"Closed or merged PR \"JIT: move indirect call transformations to a new source file\" (#21414)"},{"Id":"388353501","IsPullRequest":true,"CreatedAt":"2018-12-06T19:33:11","Actor":"stephentoub","Number":"21416","RawContent":null,"Title":"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"CTR.Token should never throw, but it's currently throwing an ObjectDisposedException if the associated CancellationTokenSource has been disposed.\r\n\r\nPorts https://github.com/dotnet/coreclr/pull/21394 to release/2.1\r\nFixes https://github.com/dotnet/corefx/issues/33844","Url":"https://github.com/dotnet/coreclr/pull/21416","RelatedDescription":"Closed or merged PR \"[release/2.1] Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#21416)"},{"Id":"388290135","IsPullRequest":true,"CreatedAt":"2018-12-06T19:27:43","Actor":"stephentoub","Number":"21406","RawContent":null,"Title":"Replace a few new string(char, 1) with char.ToString(char)","State":"closed","Body":"Slightly cleaner, slightly faster.","Url":"https://github.com/dotnet/coreclr/pull/21406","RelatedDescription":"Closed or merged PR \"Replace a few new string(char, 1) with char.ToString(char)\" (#21406)"},{"Id":"388345384","IsPullRequest":true,"CreatedAt":"2018-12-06T18:42:30","Actor":"jkoritzinsky","Number":"21415","RawContent":null,"Title":"[WIP] Refactor usage of NFT_* values outside of field marshalling","State":"open","Body":"As part of a general refactoring goal I have of integrating our field marshalling with our parameter marshalling, I've taken a stab at refactoring how non-marshalling portions of the code use NFTs.\r\n\r\nAdds a concept of a \"native field category\" and \"native field subcategories\", both designed for their use in the HFA and SystemV classifiers (the only non-marshalling portions of the runtime that were using NFT values).\r\n","Url":"https://github.com/dotnet/coreclr/pull/21415","RelatedDescription":"Open PR \"[WIP] Refactor usage of NFT_* values outside of field marshalling\" (#21415)"},{"Id":"388339553","IsPullRequest":false,"CreatedAt":"2018-12-06T18:25:32","Actor":"sdmaclea","Number":"21413","RawContent":null,"Title":"Windows arm64 build instructions","State":"open","Body":"It would be nice to update Documentation/building/windows-instructions.md to include arm64 build instructions (prerequisites)\r\n\r\n@BruceForstall mentioned a few prerequisites in #18817","Url":"https://github.com/dotnet/coreclr/issues/21413","RelatedDescription":"Open issue \"Windows arm64 build instructions\" (#21413)"},{"Id":"388324557","IsPullRequest":true,"CreatedAt":"2018-12-06T17:47:19","Actor":"adiaaida","Number":"21411","RawContent":null,"Title":"Revert \"Move the perf jobs to Windows.10.Amd64.ClientRS4.DevEx.15.8.Open\"","State":"closed","Body":"Reverts dotnet/coreclr#21258\r\n\r\nUntil we can get the queue back to a state with Python3 on it, revert this change to unblock PRs.","Url":"https://github.com/dotnet/coreclr/pull/21411","RelatedDescription":"Closed or merged PR \"Revert \"Move the perf jobs to Windows.10.Amd64.ClientRS4.DevEx.15.8.Open\"\" (#21411)"},{"Id":"388299844","IsPullRequest":true,"CreatedAt":"2018-12-06T16:44:13","Actor":"stephentoub","Number":"21409","RawContent":null,"Title":"Use string.Create in ConvertFromUtf32","State":"open","Body":"Removes the unsafe code from the method.\r\n\r\nAlso happens to make it a bit faster.  This:\r\n```C#\r\n[Benchmark] public string ConvertFromUtf32() => char.ConvertFromUtf32(0x1D161);\r\n```\r\nresults in this before:\r\n```\r\n           Method |     Mean |     Error |    StdDev |  Gen 0 | Allocated |\r\n----------------- |---------:|----------:|----------:|-------:|----------:|\r\n ConvertFromUtf32 | 13.48 ns | 0.4161 ns | 0.3893 ns | 0.0076 |      32 B |\r\n```\r\nand this after:\r\n```\r\n           Method |     Mean |     Error |    StdDev |  Gen 0 | Allocated |\r\n----------------- |---------:|----------:|----------:|-------:|----------:|\r\n ConvertFromUtf32 | 9.318 ns | 0.0690 ns | 0.0645 ns | 0.0076 |      32 B |\r\n```","Url":"https://github.com/dotnet/coreclr/pull/21409","RelatedDescription":"Open PR \"Use string.Create in ConvertFromUtf32\" (#21409)"},{"Id":"388297698","IsPullRequest":false,"CreatedAt":"2018-12-06T16:39:16","Actor":"EgorBo","Number":"21408","RawContent":null,"Title":"JIT doesn't eliminate bounds checks sometimes","State":"open","Body":"During https://github.com/dotnet/coreclr/pull/21336 I noticed that JIT doesn't eliminate bounds checks in some cases despite the `(uint)` pattern, e.g.:\r\n```csharp\r\npublic void WriteBytes(Span<byte> destination)\r\n{\r\n    if ((uint)destination.Length >= 5)\r\n    {\r\n        destination[0] = 1;\r\n        destination[1] = 2;\r\n        destination[2] = 3;\r\n        destination[3] = 4;\r\n        destination[4] = 5;\r\n    }\r\n}\r\n```\r\nOutput:\r\n```assembly\r\nWriteBytes(System.Span`1)\r\n  | cmp     edx,0\r\n  | jbe     00007ffd`190b6d11\r\n  | mov     byte ptr [rax],1\r\n  | cmp     edx,1\r\n  | jbe     00007ffd`190b6d11\r\n  | mov     byte ptr [rax+1],2\r\n  | cmp     edx,2\r\n  | jbe     00007ffd`190b6d11\r\n  | mov     byte ptr [rax+2],3\r\n  | cmp     edx,3\r\n  | jbe     00007ffd`190b6d11\r\n  | mov     byte ptr [rax+3],4\r\n  | cmp     edx,4\r\n  | jbe     00007ffd`190b6d11\r\n  | mov     byte ptr [rax+4],5\r\n  | add     rsp,28h\r\n```\r\n\r\n but if I change the condition a bit - it might help:\r\n`if ((uint)destination.Length >= 5)` - remain\r\n`if ((uint)destination.Length > 4)`   - **eliminated!**\r\n`if ((uint)destination.Length == 5)` - **eliminated!**\r\n`if (5 <= (uint)destination.Length)` - remain\r\n\r\nIs it a known issue/feature-request?\r\n\r\nTieredJit is disabled\r\n.NET Core 3.0.0-preview-27122-01 (CoreCLR 4.6.27121.03, CoreFX 4.7.18.57103), 64bit RyuJIT","Url":"https://github.com/dotnet/coreclr/issues/21408","RelatedDescription":"Open issue \"JIT doesn't eliminate bounds checks sometimes\" (#21408)"},{"Id":"388206943","IsPullRequest":false,"CreatedAt":"2018-12-06T14:46:53","Actor":"pkanavos","Number":"21404","RawContent":null,"Title":"Enumerable.Range terminates prematurely inside an async iterator","State":"closed","Body":"The code in issue #21379 compiles succesfully after adding the bridging code but `Enumerable.Range()` iterates only twice. The following code : \r\n\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Linq;\r\n    using System.Threading.Tasks;\r\n\r\n    namespace TestCsConsole\r\n    {\r\n        class Program\r\n        {\r\n            static async Task Main(string[] args)\r\n            {\r\n                await foreach (var num in GetNumbersAsync())\r\n                {\r\n                    Console.WriteLine($\"{ num,5}\");\r\n                }\r\n                Console.ReadKey();\r\n            }\r\n\r\n            private static async IAsyncEnumerable<int> GetNumbersAsync()\r\n            {\r\n                foreach (var num in Enumerable.Range(0, 10))\r\n                {\r\n                    await Task.Delay(100);\r\n                    yield return num;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\nWill print just \r\n\r\n    0\r\n    1\r\n\r\nThis doesn't happen with arrays or even other iterator methods. This code : \r\n\r\n    private static async IAsyncEnumerable<int> GetNumbersAsync()\r\n    {\r\n        foreach (var num in counter(0, 10))\r\n        {\r\n            await Task.Delay(100);\r\n            yield return num;\r\n        }\r\n    }\r\n    private static IEnumerable<int> counter(int start,int count)\r\n    {\r\n        for (int i = start; i < count; i++)\r\n        {\r\n            yield return i;\r\n        }\r\n    }\r\n\r\nWIll print : \r\n\r\n    0\r\n    1\r\n    2\r\n    3\r\n    4\r\n    5\r\n    6\r\n    7\r\n    8\r\n    9\r\n\r\nUsing .NET Core SDK 3.0.100-preview-009812 on Windows 10 x64 ","Url":"https://github.com/dotnet/coreclr/issues/21404","RelatedDescription":"Closed issue \"Enumerable.Range terminates prematurely inside an async iterator\" (#21404)"},{"Id":"388204558","IsPullRequest":true,"CreatedAt":"2018-12-06T13:03:01","Actor":"dotnet-maestro[bot]","Number":"21403","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21403","RelatedDescription":"Open PR \"Update dependency files\" (#21403)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"388204756","IsPullRequest":true,"CreatedAt":"2018-12-07T00:44:03","Actor":"dotnet-maestro[bot]","Number":"10444","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10444","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10444)"},{"Id":"388418998","IsPullRequest":false,"CreatedAt":"2018-12-06T22:07:58","Actor":"wli3","Number":"10446","RawContent":null,"Title":"dotnet new tool-manifest will put dotnet-tools.json under .config folder","State":"open","Body":"Open this issue for feedback. We hope to use the convention of `.config` folder to avoid the clutter of config file under the repo root. Start from local tools manifest","Url":"https://github.com/dotnet/cli/issues/10446","RelatedDescription":"Open issue \"dotnet new tool-manifest will put dotnet-tools.json under .config folder\" (#10446)"},{"Id":"387533618","IsPullRequest":true,"CreatedAt":"2018-12-06T20:51:59","Actor":"dotnet-bot","Number":"10435","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10435","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10435)"},{"Id":"388384314","IsPullRequest":false,"CreatedAt":"2018-12-06T20:26:59","Actor":"aL3891","Number":"10445","RawContent":null,"Title":"Incorrect binding redirect in net471 project with .net core 3 sdk","State":"open","Body":"Hello friends,\r\n\r\nI'm having an odd issue with our existing projects that are targeting net 471. After installing the .net core 3 preview, binding redirects are generated differently, causing runtime exceptions. What's more, setting the sdk version in global.json does not seem to fix the issue, only uninstalling the v3 sdk does the trick. (this seems very strange to me btw, almost to the point that i think i've done something wrong)\r\n\r\nOne webapp that is using signalR on full framework produces this .config snippet without .net core 3 sdk\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin.Security\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.0.0\" newVersion=\"4.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-11.0.0.0\" newVersion=\"11.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n```\r\n\r\nand with the .net 3 sdk installed (exact same source):\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-10.0.0.0\" newVersion=\"10.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-2.1.0.0\" newVersion=\"2.1.0.0\" />\r\n      </dependentAssembly>\r\n```\r\n\r\ni can supply binlog files if it would be helpful but our solution is fairly large so i might have to send them directly to someone\r\n\r\nI was just wondering if anyone else has seen something like this. if i set the binding redirects manually to the correct versions everything works, it's just the auto generated ones that seem fail. These project uses the new format.","Url":"https://github.com/dotnet/cli/issues/10445","RelatedDescription":"Open issue \"Incorrect binding redirect in net471 project with .net core 3 sdk\" (#10445)"},{"Id":"387275861","IsPullRequest":true,"CreatedAt":"2018-12-06T00:42:57","Actor":"dotnet-maestro[bot]","Number":"10429","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18603.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.18603.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10429","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10429)"},{"Id":"387078012","IsPullRequest":true,"CreatedAt":"2018-12-05T23:34:07","Actor":"wli3","Number":"10426","RawContent":null,"Title":"dotnet tool list --local","State":"closed","Body":"There are several renames, please review by commit.\r\n\r\n```\r\n17:21 $ dotnet tool list\r\nPackage Id            Version      Commands             Manifest\r\n----------------------------------------------------------------------------------------------------------------------\r\ndotnet-dbinfo         1.3.1        dotnet-dbinfo        /Users/williamli/Documents/temp/temp/sub/dotnet-tools.json\r\ndotnet-depends        0.2.0        dotnet-depends       /Users/williamli/Documents/temp/temp/sub/dotnet-tools.json\r\namazon.ecs.tools      3.0.0        dotnet-ecs           /Users/williamli/Documents/temp/temp/sub/dotnet-tools.json\r\ndotnet-encrypto       1.0.5        dotnet-encrypto      /Users/williamli/Documents/temp/temp/sub/dotnet-tools.json\r\nt-rex                 1.0.53       t-rex                /Users/williamli/Documents/temp/temp/.config/dotnet-tools.json\r\n```","Url":"https://github.com/dotnet/cli/pull/10426","RelatedDescription":"Closed or merged PR \"dotnet tool list --local\" (#10426)"},{"Id":"387878638","IsPullRequest":true,"CreatedAt":"2018-12-05T23:02:07","Actor":"livarcocc","Number":"10441","RawContent":null,"Title":"Update SDK to 2.2.101-preview3-63605-02","State":"closed","Body":"Contains a matching nuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10441","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.101-preview3-63605-02\" (#10441)"},{"Id":"387968555","IsPullRequest":true,"CreatedAt":"2018-12-05T22:11:17","Actor":"rainersigwald","Number":"10443","RawContent":null,"Title":"MSBuild 16.0.256-preview","State":"open","Body":"This version of MSBuild is in VS `lab/d16.0stg` at the moment.","Url":"https://github.com/dotnet/cli/pull/10443","RelatedDescription":"Open PR \"MSBuild 16.0.256-preview\" (#10443)"},{"Id":"387752546","IsPullRequest":true,"CreatedAt":"2018-12-05T21:47:26","Actor":"singhsarab","Number":"10439","RawContent":null,"Title":"TestPlatform insertion 16.0.0-preview-20181205-02","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.0.0-preview-20181205-02\r\n","Url":"https://github.com/dotnet/cli/pull/10439","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.0.0-preview-20181205-02\" (#10439)"},{"Id":"386456461","IsPullRequest":true,"CreatedAt":"2018-12-05T21:46:31","Actor":"dotnet-maestro[bot]","Number":"10419","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18603.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18604.15\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10419","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10419)"},{"Id":"387611038","IsPullRequest":true,"CreatedAt":"2018-12-05T18:56:34","Actor":"livarcocc","Number":"10437","RawContent":null,"Title":"Update SDK to 2.1.501-preview-63605-01","State":"closed","Body":"This SDK version contains a matching NuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10437","RelatedDescription":"Closed or merged PR \"Update SDK to 2.1.501-preview-63605-01\" (#10437)"},{"Id":"387879538","IsPullRequest":false,"CreatedAt":"2018-12-05T18:06:51","Actor":"livarcocc","Number":"10442","RawContent":null,"Title":"Use flattened runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10442","RelatedDescription":"Open issue \"Use flattened runtime packs\" (#10442)"},{"Id":"387877676","IsPullRequest":false,"CreatedAt":"2018-12-05T18:01:32","Actor":"livarcocc","Number":"10440","RawContent":null,"Title":"Switching to using Download only packages to acquire runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10440","RelatedDescription":"Open issue \"Switching to using Download only packages to acquire runtime packs\" (#10440)"},{"Id":"387725033","IsPullRequest":true,"CreatedAt":"2018-12-05T12:01:18","Actor":"dotnet-bot","Number":"10438","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10438","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10438)"},{"Id":"387537734","IsPullRequest":true,"CreatedAt":"2018-12-05T05:09:24","Actor":"dsplaisted","Number":"10436","RawContent":null,"Title":"Remove test for scenario which is better covered elsewhere","State":"closed","Body":"The GivenFrameworkDependentApps and GivenSelfContainedAppsRollForward tests do a better job of covering this scenario","Url":"https://github.com/dotnet/cli/pull/10436","RelatedDescription":"Closed or merged PR \"Remove test for scenario which is better covered elsewhere\" (#10436)"},{"Id":"386386603","IsPullRequest":true,"CreatedAt":"2018-12-05T00:21:58","Actor":"dotnet-bot","Number":"10418","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10418","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10418)"},{"Id":"387434122","IsPullRequest":true,"CreatedAt":"2018-12-05T00:19:09","Actor":"nugetlurker","Number":"10434","RawContent":null,"Title":"Insert NuGet Build 4.9.2-rtm.5706 into cli","State":"closed","Body":"Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.1.502 branch","Url":"https://github.com/dotnet/cli/pull/10434","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.2-rtm.5706 into cli\" (#10434)"},{"Id":"387405736","IsPullRequest":true,"CreatedAt":"2018-12-05T00:18:27","Actor":"livarcocc","Number":"10430","RawContent":null,"Title":"Updating branding to 2.1.502.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10430","RelatedDescription":"Closed or merged PR \"Updating branding to 2.1.502.\" (#10430)"},{"Id":"387434019","IsPullRequest":true,"CreatedAt":"2018-12-05T00:18:14","Actor":"nugetlurker","Number":"10433","RawContent":null,"Title":"Insert NuGet Build 4.9.2-rtm.5706 into cli","State":"closed","Body":"Insert NuGet Build 4.9.2-rtm.5706 into cli release/2.2.1xx branch","Url":"https://github.com/dotnet/cli/pull/10433","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.2-rtm.5706 into cli\" (#10433)"},{"Id":"387406206","IsPullRequest":true,"CreatedAt":"2018-12-04T22:46:34","Actor":"livarcocc","Number":"10431","RawContent":null,"Title":"Updating branding to 2.1.503","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10431","RelatedDescription":"Closed or merged PR \"Updating branding to 2.1.503\" (#10431)"},{"Id":"387424012","IsPullRequest":false,"CreatedAt":"2018-12-04T18:35:30","Actor":"svick","Number":"10432","RawContent":null,"Title":"dotnet tool run is too verbose","State":"open","Body":"One of the most common operations with tools is to run them from the command line, so I think it's important that the experience of doing that is good. Global tools are run as either `mytool` or `dotnet mytool` and I think both are fine. But the new local tools require `dotnet tool run mytool` and I think that's way too verbose, since it's about twice as many words than necessary.\r\n\r\nIt's also inconsistent with global tools. And even if full consistency by supporting `mytool` for local tools is not possible, I think at least `dotnet mytool` should work.\r\n\r\nAlso, I think it would be nice if running `dotnet tool restore` before running the tool was not necessary. I don't have to run `dotnet restore` or `dotnet build` before `dotnet run`, and this should be no different.","Url":"https://github.com/dotnet/cli/issues/10432","RelatedDescription":"Open issue \"dotnet tool run is too verbose\" (#10432)"},{"Id":"386677886","IsPullRequest":false,"CreatedAt":"2018-12-04T13:14:19","Actor":"aaabbbcccddd00001111","Number":"10423","RawContent":null,"Title":"dotnet build Performance not Fast Enough","State":"closed","Body":"`dotnet build` performance is not fast enough. It takes up to 4 seconds to build a exe.\r\n\r\nIf it takes less than 1 second it is fast enough.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10423","RelatedDescription":"Closed issue \"dotnet build Performance not Fast Enough\" (#10423)"},{"Id":"387149072","IsPullRequest":false,"CreatedAt":"2018-12-04T07:10:09","Actor":"mairaw","Number":"10428","RawContent":null,"Title":"dotnet list reference help text and output","State":"open","Body":"## Steps to reproduce\r\n1. `dotnet list reference --help`\r\n2. `dotnet list reference solution-name.sln`\r\n3. `dotnet list reference` on a folder that contains a project with no P2P references\r\n\r\n## Expected  behavior\r\n1. It seems that dotnet list reference doesn't accept solution files as a parameter but its description was changed in 2.2 SDK to say it supports solution files. I'd expect that `dotnet list reference --help` wouldn't say that is either a project or solution if solution files aren't supported.\r\n2. I'm assuming this shouldn't work by design. So, fixing the help text would avoid confusions. Or if it's supposed to be supported, then it should list the P2P references from the solution.\r\n3. For a project that has no P2P references, I'd expect a cleaner output, such as:\r\n`There are no project-to-project references in project C:\\Users\\mairaw\\Documents\\GitHub\\samples\\core\\getting-started\\unit-testing-using-nunit\\PrimeService\\.`\r\n\r\n## Actual behavior\r\n1. `dotnet list reference --help` tells me I can provide a project or solution in .NET Core 2.2 SDK\r\n2. `dotnet list reference solution-name.sln` doesn't work\r\n3. For a project that has no P2P references, the output is a bit garbled. For example:\r\n`There are no Project to Project references in project C:\\Users\\mairaw\\Documents\\GitHub\\samples\\core\\getting-started\\unit-testing-using-nunit\\PrimeService\\. ;; Project to Project is the type of the item being requested (project, package, p2p) and C:\\Users\\mairaw\\Documents\\GitHub\\samples\\core\\getting-started\\unit-testing-using-nunit\\PrimeService\\ is the object operated on (a project file or a solution file).`\r\n\r\n## Environment data\r\n`dotnet --info` output\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    51868761f2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10428","RelatedDescription":"Open issue \"dotnet list reference help text and output\" (#10428)"},{"Id":"387098127","IsPullRequest":false,"CreatedAt":"2018-12-04T02:59:38","Actor":"MiYanni","Number":"10427","RawContent":null,"Title":"dotnet sln add: Support flag to disable solution folder creation","State":"open","Body":"## Steps to reproduce\r\nUse `dotnet sln add` to add a project to an existing solution file.\r\n\r\n## Expected  behavior\r\nUsing `dotnet sln add` and providing an additional flag, such as `--no-solution-folders`, you'd add a project to the solution at the root of the solution. This action would not create any solution folders.\r\n\r\n## Actual behavior\r\nThere is no `--no-solution-folders` flag. You cannot suppress the creation of solution folders when using `dotnet sln add`.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10427","RelatedDescription":"Open issue \"dotnet sln add: Support flag to disable solution folder creation\" (#10427)"},{"Id":"386995125","IsPullRequest":false,"CreatedAt":"2018-12-03T21:21:29","Actor":"mairaw","Number":"10425","RawContent":null,"Title":"dotnet new nunit in 2.2 creates a template with a 2.1 project","State":"closed","Body":"## Steps to reproduce\r\ndotnet new nunit\r\n\r\n## Expected  behavior\r\nThe template would contain a netcore2.2 project with Microsoft.NET.Test.Sdk version 15.9 similar to the one created when you do dotnet new xunit.\r\n\r\n## Actual behavior\r\n2.1 project is created\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n\r\n    <IsPackable>false</IsPackable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"nunit\" Version=\"3.10.1\" />\r\n    <PackageReference Include=\"NUnit3TestAdapter\" Version=\"3.10.0\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.8.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    51868761f2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview3-008443 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-30431 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-30431 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview3-26404-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10425","RelatedDescription":"Closed issue \"dotnet new nunit in 2.2 creates a template with a 2.1 project\" (#10425)"},{"Id":"386735938","IsPullRequest":false,"CreatedAt":"2018-12-03T17:46:07","Actor":"kaar","Number":"10424","RawContent":null,"Title":"Wrong help message for dotnet test on solution","State":"closed","Body":"The help message for adding IsTestProject is missing ending tag.\r\n`</IsTestProject>`\r\n\r\n## Steps to reproduce\r\n\r\nRun `dotnet test` on solution without a project having a `<IsTestProject>` property\r\n\r\n## Expected  behavior\r\n```xml\r\n<IsTestProject>true</IsTestProject>\r\n```\r\n```\r\nTo run tests with dotnet test add \"<IsTestProject>true</IsTestProject>\" property to project file.\r\nBuild completed.\r\n```\r\n\r\n## Actual behavior\r\n```xml\r\n<IsTestProject>true<IsTestProject>\r\n```\r\n\r\n```\r\nTo run tests with dotnet test add \"<IsTestProject>true<IsTestProject>\" property to project file.\r\nBuild completed.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10424","RelatedDescription":"Closed issue \"Wrong help message for dotnet test on solution\" (#10424)"},{"Id":"386601022","IsPullRequest":false,"CreatedAt":"2018-12-02T21:18:07","Actor":"richlander","Number":"10422","RawContent":null,"Title":"dotnet config","State":"open","Body":"# Add global user configuration\r\n\r\nIt happened! We just past that moment where we absolutely need `dotnet config`. It's time to go build it, I propose for 3.0.\r\n\r\nThe key scenario that affects a lot of people is installing .NET Core preview SDKs. They are very hard to manage.\r\n\r\nGit has `git config` as documented at [git config](https://git-scm.com/docs/git-config). We need something kinda/sorta the same.\r\n\r\nglobal.json would still override these settings, where there is overlap.\r\n\r\n## Basic Scenarios\r\n- [bool] Use previews by default\r\n- [string] Use this SDK version (same concept as global.json) -- need more options on `min` and ranges and such.\r\n- [string] Use this `--framework` as the default for `dotnet new` (for example, `netcoreapp2.2`). This one might need both a default and a way to say \"Oh, I want `netstandard2.0` for the `classlib` template). `latest-stable` would be an awesome durable default. \r\n\r\nSome folks would want to opt out of previews by default. Others would want the SDK preview, but want to default new projects to stay with the stable runtime/TFM. Those are both valid lifestyle options. I would choose the second choice, but I more people to choose the former.\r\n\r\n## Advanced Scenarios\r\n- [string] Use this `--configuration` by default (for example `release`, `debug`), potentially with different values for `run`, `build`, `publish` and `pack`. For example, I'd set `release` for `publish` and `pack` and go with the default for other scenarios.\r\n\r\n## More ideas, requiring more thought\r\n- [string] Use this `--framework` as the default for `dotnet run` -- useful for multi-targeted projects.\r\n- [array of strings] Use these flags for `dotnet test` by default (like the logger)\r\n- [array of strings] Use these flags for `dotnet publish` by default (like self-contained of cross-gen)\r\n- [array of strings] Always build for these RIDs\r\n- [array of key/values] Environment variables to set at `dotnet run` process launch","Url":"https://github.com/dotnet/cli/issues/10422","RelatedDescription":"Open issue \"dotnet config\" (#10422)"},{"Id":"386494121","IsPullRequest":false,"CreatedAt":"2018-12-01T20:21:51","Actor":"CanIGetaPR","Number":"10421","RawContent":null,"Title":"Dotnet build and publish don't have parameters for platform","State":"open","Body":"## Steps to reproduce\r\nHave a csproj file with conditional configs as such: \r\n`<PropertyGroup Condition=\"'$(Configuration)|$(Platform)' == 'Debug|x64'\">\r\n`\r\n## Expected  behavior\r\nThere's a configuration parameter (`dotnet build -c Debug`) (`dotnet publish -c Debug`) that fills in `$(Configuration)` so I expect there to be a parameter to fill in $(Platform)\r\n\r\n## Actual behavior\r\nThere is no parameter and specific configuration details don't get applied because Platform does not get set to x64\r\n\r\n## Current Work-around\r\nExplicitly setting the Platform EV for the current command prompt using\r\n`SET Platform=x64`\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10421","RelatedDescription":"Open issue \"Dotnet build and publish don't have parameters for platform\" (#10421)"},{"Id":"386485407","IsPullRequest":false,"CreatedAt":"2018-12-01T20:18:54","Actor":"zivkan","Number":"10420","RawContent":null,"Title":"Remove <clear/> from new nuget.config template","State":"closed","Body":"I couldn't find where the nuget.config template is, so I hope creating this issue here is good enough.\r\n\r\n`dotnet new nugetconfig` creates a `nuget.config` file with the following content:\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n    <add key=\"git\" value=\"https://api.git.org/v3/index.json\" />\r\n </packageSources>\r\n</configuration>\r\n```\r\n\r\nI propose that the `<clear />` element be commented out by default and the comment above amended appropriately. Consider also commenting out the sample package source.\r\n\r\nThe reason I ask for this is because using `dotnet new nugetconfig` is a great way to create the file in a test script, which I can then edit using `nuget.exe config -set ....` or `nuget.exe sources -configfile nuget.config add -name ... -source ...`. However, I can't find an easy way to script removing the `<clear />`. Using myself as anecdotal evidence, even if it's not data, I only want to clear the package sources on work projects when I get packages from a curated feed. But for every one of these I create, I create a hundred throw-away projects to investigate/test something where I want to use nuget.org, and therefore don't want to clear the sources list. In these cases the first thing I always do is edit the file and remove the package sources element and children.\r\n\r\nTherefore, by not clearing package sources, this becomes a great tool for automation, as nuget.exe doesn't support editing an empty file, so scripts need a way to bootstrap the root element creation.","Url":"https://github.com/dotnet/cli/issues/10420","RelatedDescription":"Closed issue \"Remove <clear/> from new nuget.config template\" (#10420)"},{"Id":"386340811","IsPullRequest":true,"CreatedAt":"2018-11-30T21:52:27","Actor":"wli3","Number":"10417","RawContent":null,"Title":"Fix auto merge","State":"closed","Body":"Github auto merge failed here","Url":"https://github.com/dotnet/cli/pull/10417","RelatedDescription":"Closed or merged PR \"Fix auto merge\" (#10417)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"381888184","IsPullRequest":false,"CreatedAt":"2018-12-06T22:36:35","Actor":"AaronRobinsonMSFT","Number":"973","RawContent":null,"Title":"Consider adding IDispatchConstantAttribute","State":"closed","Body":"The `IUnknownConstantAttribute` is in netstandard, but the related `IDispatchConstantAttribute` is not. We should consider whether this attribute should be added for consistency.\r\n\r\nSee dotnet/corefx#33559","Url":"https://github.com/dotnet/standard/issues/973","RelatedDescription":"Closed issue \"Consider adding IDispatchConstantAttribute\" (#973)"},{"Id":"388402668","IsPullRequest":true,"CreatedAt":"2018-12-06T22:17:23","Actor":"wtgodbe","Number":"1002","RawContent":null,"Title":"Move build output from `bin` to `artifacts`","State":"closed","Body":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC","Url":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Closed or merged PR \"Move build output from `bin` to `artifacts`\" (#1002)"},{"Id":"388373169","IsPullRequest":true,"CreatedAt":"2018-12-06T20:04:55","Actor":"ericstj","Number":"1001","RawContent":null,"Title":"Remove Trimming package from dotnet/standard","State":"closed","Body":"Fixes: https://github.com/dotnet/standard/issues/788\r\n\r\nThose looking for an officially supported trimming tool should try:\r\nhttps://github.com/dotnet/core/blob/master/samples/linker-instructions.md\r\n\r\nThe assembly level linker has moved to:\r\nhttps://github.com/ericstj/Microsoft.Packaging.Tools.Trimming","Url":"https://github.com/dotnet/standard/pull/1001","RelatedDescription":"Closed or merged PR \"Remove Trimming package from dotnet/standard\" (#1001)"},{"Id":"386996248","IsPullRequest":true,"CreatedAt":"2018-12-06T18:57:40","Actor":"wtgodbe","Number":"991","RawContent":null,"Title":"Dummy commit to trigger CI - don't merge","State":"closed","Body":"Attempting to trigger CI again, please don't merge","Url":"https://github.com/dotnet/standard/pull/991","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI - don't merge\" (#991)"},{"Id":"388204009","IsPullRequest":true,"CreatedAt":"2018-12-06T13:11:37","Actor":"dotnet-maestro[bot]","Number":"1000","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1000","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1000)"},{"Id":"388028724","IsPullRequest":true,"CreatedAt":"2018-12-06T02:23:11","Actor":"terrajobst","Number":"999","RawContent":null,"Title":"Sync .NET Standard's RefEmit with .NET Framework","State":"open","Body":"Fixes #987\r\n\r\nThe point of the sync is to get increase parity with .NET Framework and thus making it easier to port more existing code to .NET Standard 2.1 (or any platform implementing it).","Url":"https://github.com/dotnet/standard/pull/999","RelatedDescription":"Open PR \"Sync .NET Standard's RefEmit with .NET Framework\" (#999)"},{"Id":"387555933","IsPullRequest":true,"CreatedAt":"2018-12-06T02:14:39","Actor":"terrajobst","Number":"996","RawContent":null,"Title":"List excluded reflection emit APIs","State":"closed","Body":"I did a diff between `System.Reflection.Emit` in .NET Framework and .NET Standard to make sure the APIs we explicitly didn't bring to .NET Standard are listed here. This adds no APIs to .NET Standard, just comments to the source code of the reference assembly.\r\n\r\nI assume the @dotnet/nsboard has no problems with that as it's just book keeping for folks like me. Unless there is push back, I'm going to merge this tomorrow.\r\n\r\n**Update:** I forgot to mention that I plan to add another PR with the APIs we plan to add .NET Standard.","Url":"https://github.com/dotnet/standard/pull/996","RelatedDescription":"Closed or merged PR \"List excluded reflection emit APIs\" (#996)"},{"Id":"387902379","IsPullRequest":true,"CreatedAt":"2018-12-05T20:00:00","Actor":"wtgodbe","Number":"998","RawContent":null,"Title":"Change yml name to azure-pipelines.yml","State":"closed","Body":"In response to https://github.com/dotnet/arcade/issues/690#issuecomment-444562580\r\n\r\nChanges name of our pipeline file to the standard `azure-pipelines.yml`. I'll also update the build defs to reflect this change.\r\n\r\nCC @chcosta ","Url":"https://github.com/dotnet/standard/pull/998","RelatedDescription":"Closed or merged PR \"Change yml name to azure-pipelines.yml\" (#998)"},{"Id":"387746721","IsPullRequest":true,"CreatedAt":"2018-12-05T18:59:29","Actor":"dotnet-maestro[bot]","Number":"997","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18604.15\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/997","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#997)"},{"Id":"387484691","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:23","Actor":"wtgodbe","Number":"995","RawContent":null,"Title":"Output packages into Artifacts dir","State":"closed","Body":"This outputs packages into `ArtifactsPackagesDir`, so that Arcade can easily find them for signing & publishing (with this, we no longer need a custom `Signing.props` to specify where our packages live).\r\n\r\n@chcosta @ericstj PTAL\r\n\r\nShould fix the build error in https://dnceng.visualstudio.com/internal/_build/results?buildId=52052","Url":"https://github.com/dotnet/standard/pull/995","RelatedDescription":"Closed or merged PR \"Output packages into Artifacts dir\" (#995)"},{"Id":"387041262","IsPullRequest":true,"CreatedAt":"2018-12-04T18:10:15","Actor":"wtgodbe","Number":"993","RawContent":null,"Title":"Don't reference FeedTasksPackage","State":"closed","Body":"Arcade already restores this package when trying to publish: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Tools.proj#L49\r\n\r\nSince the default version in arcade is currently `2.2-xxx` (https://github.com/dotnet/arcade/blob/069237d9a7e83bed62c9f664228125b95ddf91f6/src/Microsoft.DotNet.Arcade.Sdk/tools/DefaultVersions.props#L71), the build would fail when trying to import files from that package, since only the 3.0.0 version was getting restored: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Publish.proj#L30\r\n\r\nCC @safern you'll want to make a similar change in CoreFx if you plan on doing Arcade publishing\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/993","RelatedDescription":"Closed or merged PR \"Don't reference FeedTasksPackage\" (#993)"},{"Id":"387274996","IsPullRequest":true,"CreatedAt":"2018-12-04T13:16:29","Actor":"dotnet-maestro[bot]","Number":"994","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18603.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/994","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#994)"},{"Id":"387011624","IsPullRequest":true,"CreatedAt":"2018-12-03T21:47:39","Actor":"wtgodbe","Number":"992","RawContent":null,"Title":"Fix _SignType, Variable Groups in pipebuild","State":"closed","Body":"This PR makes it so that we only access secrets in internal builds, and passes _SignType to the Windows builds.\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/992","RelatedDescription":"Closed or merged PR \"Fix _SignType, Variable Groups in pipebuild\" (#992)"},{"Id":"386963305","IsPullRequest":true,"CreatedAt":"2018-12-03T20:38:05","Actor":"wtgodbe","Number":"990","RawContent":null,"Title":"Dummy commit to test new CI - DO NOT MERGE","State":"closed","Body":"Testing to see if the new dnceng CI will trigger on this PR, and if it works. Please don't merge this.","Url":"https://github.com/dotnet/standard/pull/990","RelatedDescription":"Closed or merged PR \"Dummy commit to test new CI - DO NOT MERGE\" (#990)"},{"Id":"385881132","IsPullRequest":true,"CreatedAt":"2018-12-03T19:07:06","Actor":"wtgodbe","Number":"986","RawContent":null,"Title":"Convert Standard's CI/Pipebuild to YAML","State":"closed","Body":"This will allow us to move Standard's CI & pipebuild into DNCENG. I already have https://dnceng.visualstudio.com/internal/_build?definitionId=246&_a=summary & https://dnceng.visualstudio.com/public/_build?definitionId=235&_a=summary for the internal & public builds, respectively, which I'll have to point at `master` instead of my testing branch once this is merged. I'll also have to remove the triggers (and maybe delete?) the VSTS Standard pipebuild.\r\n\r\n@chcosta @riarenas @safern PTAL\r\n\r\nCC @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/986","RelatedDescription":"Closed or merged PR \"Convert Standard's CI/Pipebuild to YAML\" (#986)"},{"Id":"386456347","IsPullRequest":true,"CreatedAt":"2018-12-01T13:11:15","Actor":"dotnet-maestro[bot]","Number":"989","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18580.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/989","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#989)"},{"Id":"386178352","IsPullRequest":true,"CreatedAt":"2018-11-30T13:16:26","Actor":"dotnet-maestro[bot]","Number":"988","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18579.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/988","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#988)"},{"Id":"386016375","IsPullRequest":false,"CreatedAt":"2018-11-30T02:55:16","Actor":"terrajobst","Number":"987","RawContent":null,"Title":"System.Reflection.*: we should review differences with .NET Framework","State":"open","Body":"Reflection and Reflection.Emit were heavily subset; we should make sure that we're adding all the APIs back, unless they cause bad dependencies (such as CAS) or not supported on any platform (such as Reflection.Emit persistence).","Url":"https://github.com/dotnet/standard/issues/987","RelatedDescription":"Open issue \"System.Reflection.*: we should review differences with .NET Framework\" (#987)"},{"Id":"385725689","IsPullRequest":true,"CreatedAt":"2018-11-29T13:16:34","Actor":"dotnet-maestro[bot]","Number":"985","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18578.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18578.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/985","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#985)"},{"Id":"385257703","IsPullRequest":true,"CreatedAt":"2018-11-28T13:11:41","Actor":"dotnet-maestro[bot]","Number":"984","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18577.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18577.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/984","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#984)"},{"Id":"384784248","IsPullRequest":true,"CreatedAt":"2018-11-28T13:01:05","Actor":"dotnet-maestro[bot]","Number":"983","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18576.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18576.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/983","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#983)"},{"Id":"384320442","IsPullRequest":true,"CreatedAt":"2018-11-26T13:16:39","Actor":"dotnet-maestro[bot]","Number":"982","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18575.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18575.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/982","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#982)"},{"Id":"382463251","IsPullRequest":false,"CreatedAt":"2018-11-24T23:17:50","Actor":"verb0se","Number":"976","RawContent":null,"Title":"Could not load file or assembly System.Configuration.ConfigurationManager","State":"closed","Body":"Upgrading some .NET Framework projects to Standard 2.0, I've installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet on all projects.  Getting the following error:\r\n\r\nUnhandled Exception: System.IO.FileNotFoundException: Could not load file or assembly 'System.Configuration.ConfigurationManager, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n  \r\nJust to see if the issue might have been due to something with the current solution, I created a new Standard 2.0 console app, installed the System.Configuration.ConfigurationManager package v4.5.0 via NuGet as the only dependency, and got the same error.\r\n\r\nFrom the deps.json file:\r\n\r\n\"System.Configuration.ConfigurationManager/4.5.0\": {\r\n        \"dependencies\": {\r\n          \"System.Security.Cryptography.ProtectedData\": \"4.5.0\",\r\n          \"System.Security.Permissions\": \"4.5.0\"\r\n        },\r\n        \"runtime\": {\r\n          \"lib/netstandard2.0/System.Configuration.ConfigurationManager.dll\": {\r\n            \"assemblyVersion\": \"4.0.1.0\",\r\n            \"fileVersion\": \"4.6.26515.6\"\r\n          }\r\n        }\r\n      }\r\n\r\nWe would like to use System.Configuration.ConfigurationManager with our upgrade but I can't seem to load it from a project \r\n","Url":"https://github.com/dotnet/standard/issues/976","RelatedDescription":"Closed issue \"Could not load file or assembly System.Configuration.ConfigurationManager\" (#976)"},{"Id":"383526186","IsPullRequest":true,"CreatedAt":"2018-11-22T13:11:28","Actor":"dotnet-maestro[bot]","Number":"980","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18571.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18571.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/980","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#980)"},{"Id":"382877179","IsPullRequest":true,"CreatedAt":"2018-11-21T17:57:15","Actor":"wtgodbe","Number":"978","RawContent":null,"Title":"Make sure Signing target finds packages to sign","State":"closed","Body":"This will fix a build error where we can't find any packages to sign. The problem was caused by me moving the `PackageOutputPath` property from `Directory.Build.props` to `Directory.Build.targets`, which was a workaround to allow us to continue outputting packages to the bin dir while using Arcade's packaging tasks. Once we're outputting packages to `artifacts`, we can revert this PR.\r\n\r\nCC @danmosemsft @JohnTortugo","Url":"https://github.com/dotnet/standard/pull/978","RelatedDescription":"Closed or merged PR \"Make sure Signing target finds packages to sign\" (#978)"},{"Id":"383107897","IsPullRequest":true,"CreatedAt":"2018-11-21T13:11:28","Actor":"dotnet-maestro[bot]","Number":"979","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18570.17\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18570.17\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/979","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#979)"},{"Id":"382653062","IsPullRequest":true,"CreatedAt":"2018-11-20T13:11:36","Actor":"dotnet-maestro[bot]","Number":"977","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18569.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18569.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/977","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#977)"},{"Id":"382204388","IsPullRequest":true,"CreatedAt":"2018-11-19T13:11:31","Actor":"dotnet-maestro[bot]","Number":"975","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18568.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/975","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#975)"},{"Id":"381958026","IsPullRequest":true,"CreatedAt":"2018-11-18T13:11:15","Actor":"dotnet-maestro[bot]","Number":"974","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18567.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/974","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#974)"},{"Id":"381861179","IsPullRequest":true,"CreatedAt":"2018-11-17T13:26:19","Actor":"dotnet-maestro[bot]","Number":"972","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18566.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/972","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#972)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"388481008","IsPullRequest":true,"CreatedAt":"2018-12-07T02:32:59","Actor":"dotnet-maestro-bot","Number":"33901","RawContent":null,"Title":"Update CoreClr, CoreSetup to preview-27207-01, preview-27206-02, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/33901","RelatedDescription":"Open PR \"Update CoreClr, CoreSetup to preview-27207-01, preview-27206-02, respectively (master)\" (#33901)"},{"Id":"388437328","IsPullRequest":true,"CreatedAt":"2018-12-07T01:45:39","Actor":"dagood","Number":"33899","RawContent":null,"Title":"Force CoreFX to use source-build's BuildTools","State":"closed","Body":"We used this patch to get CoreFX on Arcade to use source-build's copy of buildtools: https://github.com/dotnet/source-build/pull/916.\r\n\r\n@bartonjs can you make sure this (or some better approach) gets merged in to reduce maintenance burden as CoreFX moves along?","Url":"https://github.com/dotnet/corefx/pull/33899","RelatedDescription":"Closed or merged PR \"Force CoreFX to use source-build's BuildTools\" (#33899)"},{"Id":"388467311","IsPullRequest":true,"CreatedAt":"2018-12-07T01:24:59","Actor":"ericstj","Number":"33900","RawContent":null,"Title":"Fix configuration and paths","State":"open","Body":"Fixes #33465","Url":"https://github.com/dotnet/corefx/pull/33900","RelatedDescription":"Open PR \"Fix configuration and paths\" (#33900)"},{"Id":"388428256","IsPullRequest":false,"CreatedAt":"2018-12-06T23:14:38","Actor":"joperezr","Number":"33891","RawContent":null,"Title":"[arm32/Linux] System.Net.Http.Functional.Tests failures on arm32 linux","State":"closed","Body":"Running the arm32 tests on linux for System.Net.Http.Functional.Tests produced the following results: passed 5807/5833 tests.\r\n\r\nSeems like most of the tests that fail here were because a TaskCanceledException was thrown because reading a response timed out. Here is an example:\r\n```\r\nSystem.AggregateException : One or more errors occurred. (A task was canceled.) (One or more errors occurred. (Unexpected EOF trying to read request header))\\n---- System.Threading.Tasks.TaskCanceledException : A task was canceled.\\n---- System.AggregateException : One or more errors occurred. (Unexpected EOF trying to read request header)\\n-------- System.Exception : Unexpected EOF trying to read request header\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /opt/corefx/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 103\r\n   at System.Net.Test.Common.LoopbackServer.<>c__DisplayClass11_0.<<CreateClientAndServerAsync>b__0>d.MoveNext() in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 83\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options) in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 66\r\n   at System.Net.Http.Functional.Tests.HttpClientHandler_Authentication_Test.PreAuthenticate_FirstRequestNoHeader_SecondRequestVariousStatusCodes_ThirdRequestPreauthenticates(HttpStatusCode statusCode) in /opt/corefx/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Authentication.cs:line 323\r\n--- End of stack trace from previous location where exception was thrown ---\r\n----- Inner Stack Trace #1 (System.Threading.Tasks.TaskCanceledException) -----\r\n\r\n----- Inner Stack Trace #2 (System.AggregateException) -----\r\n\r\n----- Inner Stack Trace -----\r\n   at System.Net.Test.Common.LoopbackServer.Connection.ReadRequestHeaderAsync() in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 416\r\n   at System.Net.Test.Common.LoopbackServer.Connection.ReadRequestHeaderAndSendResponseAsync(HttpStatusCode statusCode, String additionalHeaders, String content) in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 436\r\n   at System.Net.Test.Common.LoopbackServer.<>c__DisplayClass14_0.<<AcceptConnectionSendResponseAndCloseAsync>b__0>d.MoveNext() in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 143\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Test.Common.LoopbackServer.AcceptConnectionAsync(Func`2 funcAsync) in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 116\r\n   at System.Net.Test.Common.LoopbackServer.AcceptConnectionSendResponseAndCloseAsync(HttpStatusCode statusCode, String additionalHeaders, String content) in /opt/corefx/src/Common/tests/System/Net/Http/LoopbackServer.cs:line 141\r\n   at System.Net.Http.Functional.Tests.HttpClientHandler_Authentication_Test.<>c__DisplayClass14_0.<<PreAuthenticate_FirstRequestNoHeader_SecondRequestVariousStatusCodes_ThirdRequestPreauthenticates>b__1>d.MoveNext() in /opt/corefx/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Authentication.cs:line 345\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655197/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33891","RelatedDescription":"Closed issue \"[arm32/Linux] System.Net.Http.Functional.Tests failures on arm32 linux\" (#33891)"},{"Id":"388433734","IsPullRequest":false,"CreatedAt":"2018-12-06T23:13:44","Actor":"joperezr","Number":"33896","RawContent":null,"Title":"[arm32/Linux] System.Runtime.Serialization.Formatters.Tests failures on arm32 linux","State":"closed","Body":"Running the arm32 tests on linux for System.Runtime.Serialization.Formatters.Tests produced the following results: passed 7071/7085 tests.\r\n\r\n14 tests fail throwing an ArgumentException. Here is an example:\r\n```\r\nSystem.ArgumentException : Field 'value' in TypedReferences cannot be static or init only.\r\n   at System.TypedReference.MakeTypedReference(Object target, FieldInfo[] flds)\r\n   at System.Runtime.Serialization.ObjectManager.DoValueTypeFixup(FieldInfo memberToFix, ObjectHolder holder, Object value)\r\n   at System.Runtime.Serialization.ObjectManager.CompleteObject(ObjectHolder holder, Boolean bObjectFullyComplete)\r\n   at System.Runtime.Serialization.ObjectManager.DoNewlyRegisteredObjectFixups(ObjectHolder holder)\r\n   at System.Runtime.Serialization.ObjectManager.RegisterObject(Object obj, Int64 objectID, SerializationInfo info, Int64 idOfContainingObj, MemberInfo member, Int32[] arrayIndex)\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.RegisterObject(Object obj, ParseRecord pr, ParseRecord objectPr, Boolean bIsString)\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.ParseObjectEnd(ParseRecord pr)\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Parse(ParseRecord pr)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.Run()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Tests.BinaryFormatterHelpers.Clone[T](T obj, ISerializationSurrogate surrogate, FormatterAssemblyStyle assemblyFormat, TypeFilterLevel filterLevel, FormatterTypeStyle typeFormat) in /opt/corefx/src/Common/tests/System/Runtime/Serialization/Formatters/BinaryFormatterHelpers.cs:line 44\r\n   at System.Runtime.Serialization.Formatters.Tests.BinaryFormatterTests.ValidateBasicObjectsRoundtrip(Object obj, FormatterAssemblyStyle assemblyFormat, TypeFilterLevel filterLevel, FormatterTypeStyle typeFormat) in /opt/corefx/src/System.Runtime.Serialization.Formatters/tests/BinaryFormatterTests.cs:line 54\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655235/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33896","RelatedDescription":"Closed issue \"[arm32/Linux] System.Runtime.Serialization.Formatters.Tests failures on arm32 linux\" (#33896)"},{"Id":"388436546","IsPullRequest":false,"CreatedAt":"2018-12-06T23:12:30","Actor":"joperezr","Number":"33898","RawContent":null,"Title":"[arm32/Linux] Microsoft.VisualBasic.Tests failures on arm32 linux","State":"closed","Body":"Running the arm32 tests on linux for Microsoft.VisualBasic.Tests produced the following results: passed 19046/19079 tests.\r\n\r\nMost test failures are caused to an InvalidCastException:\r\n```\r\nSystem.InvalidCastException : Conversion from type 'DBNull' to type 'String' is not valid.\r\n   at Microsoft.VisualBasic.CompilerServices.Conversions.ToString(Object Value)\r\n   at Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Object Left, Object Right)\r\n   at Microsoft.VisualBasic.CompilerServices.Tests.OperatorsTests.ConcatenateObject_Invoke_ReturnsExpected(Object left, Object right, Object expected) in /opt/corefx/src/Microsoft.VisualBasic/tests/OperatorsTests.cs:line 1182\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655256/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33898","RelatedDescription":"Closed issue \"[arm32/Linux] Microsoft.VisualBasic.Tests failures on arm32 linux\" (#33898)"},{"Id":"388434399","IsPullRequest":false,"CreatedAt":"2018-12-06T22:59:40","Actor":"divega","Number":"33897","RawContent":null,"Title":"Consider porting System.Data.SqlServerCe to .NET Core","State":"open","Body":"Creating this issue so that we can gather customer feedback on usage of SQL CE, and to try to figure out its relative priority to simplify the move of existing .NET Framework applications to .NET Core.\r\n\r\nAt the moment we don't have any concrete plans to do this port, and we haven't figured out feasibility. \r\n\r\nHere are a few questions we would like you to consider answering if you decide to vote (via thumbs up :+1: on this comment) or post your own comments on this issue:\r\n\r\n1. Do you own an application that you want to port to .NET Core but find yourself blocked because you cannot use SQL CE? \r\n2. What version of SQL CE are you using. E.g. 3.5 or 4.0? Why?\r\n4. Have you considered other options, like SQLite (e.g. using Microsoft.Data.Sqlite)?\r\n5. Does your application also depend on the Microsoft Sync framework?\r\n6. Are you using SQL CE directly or through an O/RM? Which one?","Url":"https://github.com/dotnet/corefx/issues/33897","RelatedDescription":"Open issue \"Consider porting System.Data.SqlServerCe to .NET Core\" (#33897)"},{"Id":"388433250","IsPullRequest":false,"CreatedAt":"2018-12-06T22:55:39","Actor":"jhudsoncedaron","Number":"33895","RawContent":null,"Title":"name collision with type Index added to System namespace","State":"open","Body":"tag:discussion\r\n\r\nWe have this very old class that's used all over the place called Index, which is basically a Dictionary that accepts more than one item per key. It's used like a mutable IGrouping and was recently retrofitted to implement IGrouping. It's use is so pervasive that it grew another implementation called SortedIndex which is to Index as SortedDictionary is to Dictionary.\r\n\r\nSo now we've got literally thousands of files importing System and expecting Index to be ours (in a far namespace), and on upgrading to .NET Core 3 we get a completely ridiculous number of errors.\r\n\r\nSo now we've got to figure out how to handle this name collision. Trying to rename Index is going to break back-compatibility of our nuget packages all over the place.\r\n\r\n(Yes, some parts of our .NET Core codebase are literally 11 years old and I've got the source control trees to prove 9 of them and would have more but for a disk crash.)","Url":"https://github.com/dotnet/corefx/issues/33895","RelatedDescription":"Open issue \"name collision with type Index added to System namespace\" (#33895)"},{"Id":"388431667","IsPullRequest":false,"CreatedAt":"2018-12-06T22:50:06","Actor":"joperezr","Number":"33894","RawContent":null,"Title":"[arm32/Linux] System.Diagnostics.TraceSource.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Diagnostics.TraceSource.Tests produced the following results: passed 272/273 tests.\r\n\r\nTest System.Diagnostics.TraceSourceTests.DefaultTraceListenerClassTests.EntryAssemblyName_Null_NotIncludedInTrace threw an exception:\r\n```\r\nSystem.Diagnostics.RemoteExecutorTestBase+RemoteInvokeHandle+RemoteExecutionException : Remote process failed with an unhandled exception.\r\n\r\nChild exception:\r\n  System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Diagnostics.TraceSourceTests.DefaultTraceListenerClassTests.MakeAssemblyGetEntryAssemblyReturnNull() in /opt/corefx/src/System.Diagnostics.TraceSource/tests/DefaultTraceListenerClassTests.netcoreapp.cs:line 46\r\n   at System.Diagnostics.TraceSourceTests.DefaultTraceListenerClassTests.<>c.<EntryAssemblyName_Null_NotIncludedInTrace>b__12_0() in /opt/corefx/src/System.Diagnostics.TraceSource/tests/DefaultTraceListenerClassTests.netcoreapp.cs:line 32\r\n\r\nChild process:\r\n  System.Diagnostics.TraceSource.Tests, Version=4.1.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 System.Diagnostics.TraceSourceTests.DefaultTraceListenerClassTests+<>c Void <EntryAssemblyName_Null_NotIncludedInTrace>b__12_0()\r\n```","Url":"https://github.com/dotnet/corefx/issues/33894","RelatedDescription":"Open issue \"[arm32/Linux] System.Diagnostics.TraceSource.Tests failures on arm32 linux\" (#33894)"},{"Id":"388430831","IsPullRequest":false,"CreatedAt":"2018-12-06T22:47:18","Actor":"joperezr","Number":"33893","RawContent":null,"Title":"[arm32/Linux] System.IO.FileSystem.Watcher.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.IO.FileSystem.Watcher.Tests produced the following results: passed 258/259 tests.\r\n\r\nTest System.IO.Tests.FileSystemWatcherFilterListTests.FileSystemWatcher_ModifyFiltersConcurrentWithEvents threw an InvalidOperationException:\r\n```\r\nSystem.InvalidOperationException : Collection was modified; enumeration operation may not execute.\r\n   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()\r\n   at System.Collections.Generic.List`1.Enumerator.MoveNext()\r\n   at System.IO.Tests.FileSystemWatcherTest.RecreateWatcher(FileSystemWatcher watcher) in /opt/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.netcoreapp.cs:line 22\r\n   at System.IO.Tests.FileSystemWatcherTest.ExpectEvent(FileSystemWatcher watcher, WatcherChangeTypes expectedEvents, Action action, Action cleanup, String[] expectedPaths, Int32 attempts, Int32 timeout) in /opt/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs:line 172\r\n   at System.IO.Tests.FileSystemWatcherTest.ExpectEvent(FileSystemWatcher watcher, WatcherChangeTypes expectedEvents, Action action, Action cleanup, String expectedPath, Int32 attempts, Int32 timeout) in /opt/corefx/src/System.IO.FileSystem.Watcher/tests/Utility/FileSystemWatcherTest.cs:line 149\r\n   at System.IO.Tests.FileSystemWatcherFilterListTests.FileSystemWatcher_ModifyFiltersConcurrentWithEvents() in /opt/corefx/src/System.IO.FileSystem.Watcher/tests/FileSystemWatcher.unit.netcoreapp.cs:line 494\r\n```","Url":"https://github.com/dotnet/corefx/issues/33893","RelatedDescription":"Open issue \"[arm32/Linux] System.IO.FileSystem.Watcher.Tests failures on arm32 linux\" (#33893)"},{"Id":"388430107","IsPullRequest":true,"CreatedAt":"2018-12-06T22:44:50","Actor":"tannergooding","Number":"33892","RawContent":null,"Title":"Regenerating the System.Runtime.Intrinsics ref assembly via /t:GenerateReferenceSource","State":"open","Body":"As recommended by @ahsonkhan, this regenerates the `System.Runtime.Intrinsics` ref assembly by running `msbuild /t:GenerateReferenceSource`","Url":"https://github.com/dotnet/corefx/pull/33892","RelatedDescription":"Open PR \"Regenerating the System.Runtime.Intrinsics ref assembly via /t:GenerateReferenceSource\" (#33892)"},{"Id":"388425357","IsPullRequest":false,"CreatedAt":"2018-12-06T22:29:02","Actor":"joperezr","Number":"33890","RawContent":null,"Title":"[arm32/Linux] System.Configuration.ConfigurationManager.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Configuration.ConfigurationManager.Tests produced the following results: passed 611/614 tests.\r\n\r\nAll three tests failed with:\r\n```\r\nSystem.MissingMethodException : Method not found: 'Void System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord, System.Security.PermissionSet ByRef, Boolean ByRef)'.\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655177/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33890","RelatedDescription":"Open issue \"[arm32/Linux] System.Configuration.ConfigurationManager.Tests failures on arm32 linux\" (#33890)"},{"Id":"388420500","IsPullRequest":false,"CreatedAt":"2018-12-06T22:12:58","Actor":"joperezr","Number":"33889","RawContent":null,"Title":"[arm32/Linux] System.IO.Compression.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.IO.Compression.Tests produced the following results: passed 312/314 tests.\r\n\r\nTwo tests are failing Assert equal statements, the tests are:\r\n\r\n```\r\nSystem.IO.Compression.Tests.zip_CreateTests.CreateUncompressedArchive\r\nSystem.IO.Compression.Tests.zip_UpdateTests.UpdateUncompressedArchive\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655133/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33889","RelatedDescription":"Open issue \"[arm32/Linux] System.IO.Compression.Tests failures on arm32 linux\" (#33889)"},{"Id":"388416208","IsPullRequest":false,"CreatedAt":"2018-12-06T21:59:23","Actor":"joperezr","Number":"33888","RawContent":null,"Title":"[arm32/Linux] System.Console.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Console.Tests produced the following results: passed 138/139 tests.\r\n\r\nTest WindowAndCursorProps.NonRedirectedCursorVisible failed with the following message:\r\n```\r\nAssert.True() Failure\\nExpected: True\\nActual:   False\r\n   at WindowAndCursorProps.<>c.<NonRedirectedCursorVisible>b__18_0(MemoryStream data) in /opt/corefx/src/System.Console/tests/WindowAndCursorProps.cs:line 181\r\n   at Helpers.RunInNonRedirectedOutput(Action`1 command) in /opt/corefx/src/System.Console/tests/Helpers.cs:line 81\r\n   at WindowAndCursorProps.NonRedirectedCursorVisible() in /opt/corefx/src/System.Console/tests/WindowAndCursorProps.cs:line 181\r\n```","Url":"https://github.com/dotnet/corefx/issues/33888","RelatedDescription":"Open issue \"[arm32/Linux] System.Console.Tests failures on arm32 linux\" (#33888)"},{"Id":"388414934","IsPullRequest":false,"CreatedAt":"2018-12-06T21:56:07","Actor":"danmosemsft","Number":"33886","RawContent":null,"Title":"Failure on SLES of ExecWaitWithCapture_CurrentDirectorySpecified_OutputIncludesSpecifiedDirectory","State":"closed","Body":"Test added in https://github.com/dotnet/corefx/pull/33760/ is failing in SLES\r\n\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20181206.01/workItem/System.CodeDom.Tests/analysis/xunit/System.CodeDom.Compiler.Tests.ExecutorTests~2FExecWaitWithCapture_CurrentDirectorySpecified_OutputIncludesSpecifiedDirectory\r\n\r\n```\r\n  System.ComponentModel.Win32Exception (2): No such file or directory\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean throwOnNoExec) in /root/corefx-2257473/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs:line 400\r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo) in /root/corefx-2257473/src/System.Diagnostics.Process/src/System/Diagnostics/Process.Unix.cs:line 364\r\n   at System.Diagnostics.Process.Start() in /root/corefx-2257473/src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs:line 1216\r\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo) in /root/corefx-2257473/src/System.Diagnostics.Process/src/System/Diagnostics/Process.cs:line 1259\r\n   at System.CodeDom.Compiler.Executor.ExecWaitWithCapture(IntPtr userToken, String cmd, String currentDir, TempFileCollection tempFiles, String& outputName, String& errorName) in /root/corefx-2257473/src/System.CodeDom/src/System/CodeDom/Compiler/Executor.cs:line 68\r\n   at System.CodeDom.Compiler.Executor.ExecWaitWithCapture(String cmd, String currentDir, TempFileCollection tempFiles, String& outputName, String& errorName) in /root/corefx-2257473/src/System.CodeDom/src/System/CodeDom/Compiler/Executor.cs:line 29\r\n   at System.CodeDom.Compiler.Tests.ExecutorTests.<ExecWaitWithCapture_CurrentDirectorySpecified_OutputIncludesSpecifiedDirectory>b__6_0() in /root/corefx-2257473/src/System.CodeDom/tests/System/CodeDom/Compiler/ExecutorTests.cs:line 106\r\n\r\n```\r\n@stephentoub @bazuka5801 ","Url":"https://github.com/dotnet/corefx/issues/33886","RelatedDescription":"Closed issue \"Failure on SLES of ExecWaitWithCapture_CurrentDirectorySpecified_OutputIncludesSpecifiedDirectory\" (#33886)"},{"Id":"388414945","IsPullRequest":false,"CreatedAt":"2018-12-06T21:55:41","Actor":"joperezr","Number":"33887","RawContent":null,"Title":"[arm32/Linux] System.Numerics.Tensors.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Numerics.Tensors.Tests produced the following results: passed 814/820 tests.\r\n\r\nAll 6 tests fail with the following message:\r\n```\r\nAssert.Equal() Failure\\n           ↓ (pos 1)\\n\r\nExpected: \r\n{\\\\r\\\\n    {\\\\r\\\\n        {0,1},\\\\r\\\\n        {2,3},\\\\r\\\\n···\\n\r\nActual:   \r\n{\\\\n    {\\\\n        {0,1},\\\\n        {2,3},\\\\n    ···\\n           ↑ (pos 1)\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655063/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33887","RelatedDescription":"Open issue \"[arm32/Linux] System.Numerics.Tensors.Tests failures on arm32 linux\" (#33887)"},{"Id":"388413981","IsPullRequest":false,"CreatedAt":"2018-12-06T21:52:47","Actor":"rjmholt","Number":"33885","RawContent":null,"Title":"System.Runtime.InteropServices.RuntimeInformation.get_OSArchitecture() in cross-platform PowerShell module","State":"open","Body":"I'm the maintainer of the [PowerShell language server](https://github.com/PowerShell/PowerShellEditorServices), which is hosted as a cross-platform PowerShell module.\r\n\r\nIt targets net451 and netstandard1.6 (we have an upstream branch targeting netstandard2.0 we are moving to soon enough). We run on PowerShell v3/4/5.1 with net451 and PowerShell 6.0+ with netstandard1.6.\r\n\r\nBecause we rely on Windows Compatibility Pack features, we have to [assemble the DLLs manually](https://github.com/PowerShell/PowerShellEditorServices/blob/bb65b2a646167e483c936d2c53db9b3a75ffb6cd/PowerShellEditorServices.build.ps1#L250-L299) for module loading.\r\n\r\nWe pulled in System.Runtime.InteropServices.RuntimeInformation for a few things, such as checking OSArchitecture but [users on Windows 7 report a crash at startup](https://github.com/PowerShell/vscode-powershell/issues/1633):\r\n\r\n```\r\nVERBOSE: Exception calling \"StartLogging\" with \"2\" argument(s): \"Unable to load DLL 'api-ms-win-core-sysinfo-l1-2-0.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\"\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n   at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess)\r\n   at System.Management.Automation.PSScriptCmdlet.DoEndProcessing()\r\n   at System.Management.Automation.CommandProcessorBase.Complete()\r\nUnable to load DLL 'api-ms-win-core-sysinfo-l1-2-0.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Interop.mincore.GetNativeSystemInfo(SYSTEM_INFO& lpSystemInfo)\r\n   at System.Runtime.InteropServices.RuntimeInformation.get_OSArchitecture()\r\n   at Microsoft.PowerShell.EditorServices.Host.EditorServicesHost.StartLogging(String logFilePath, LogLevel logLevel)\r\n   at CallSite.Target(Closure , CallSite , Object , Object , Object )\r\n```\r\n\r\nI had a look through the issues and commented [here](https://github.com/dotnet/corefx/issues/13566#issuecomment-444968316), but have now seen this will probably affect [other widely used PowerShell modules](https://github.com/lzybkr/PSReadLine/blob/a878b3686cba23ad39fcd98a6b418c9db0bb77ab/PSReadLine.build.ps1#L226-L233), so I'm opening this issue.\r\n\r\nMy questions are:\r\n\r\n- [This comment](https://github.com/dotnet/corefx/issues/19313#issuecomment-299048329) implies that the native api sets are no longer used in the latest version of System.Runtime.InteropServices.RuntimeInformation. Is that still true? We are pulling in v4.3.0 and hitting what looks like an api set problem. I saw that another dotnet repo [fixed this issue](https://github.com/dotnet/buildtools/pull/1249) by upgrading the package, but to version 4.4.0-beta-24813-03, which is newer than the latest version on Nuget.\r\n- Building for a broad RID or no RID does not pull in the api sets, but building for win7-x64 (for example) does. Is there some higher level mechanism the higher-level RIDs are using instead that I can use?\r\n- Another comment [suggested adding Microsoft.NETCore.Windows.ApiSets](https://github.com/dotnet/corefx/issues/13566#issuecomment-322882746) but I pulled that module both manually and added it to our build and in both cases I couldn't find the api sets DLLs as part of the pulled assets. In the manually pulled package, that seemed to have no DLLs at all in it. Is there something I've missed there for getting the api sets DLLs? Maybe I'm not looking in the right part of the nuget package structure?\r\n- If we do need to fall back to api sets, is there a way to not need to build for specific RIDs like win7-x64? Needing to do that will double the complexity of the PowerShell module we create.\r\n\r\nThanks for your help. I know this is a complex issue. We'd appreciate any help you can offer.","Url":"https://github.com/dotnet/corefx/issues/33885","RelatedDescription":"Open issue \"System.Runtime.InteropServices.RuntimeInformation.get_OSArchitecture() in cross-platform PowerShell module\" (#33885)"},{"Id":"388413623","IsPullRequest":false,"CreatedAt":"2018-12-06T21:51:51","Actor":"joperezr","Number":"33884","RawContent":null,"Title":"[arm32/Linux] System.Text.Json.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Text.Json.Tests produced the following results: passed 900/908 tests.\r\n\r\nThe 8 failures all throw a JsonReaderException with the following message:\r\n```\r\nSystem.Text.Json.JsonReaderException : '}' is invalid after a single JSON value. Expected end of data.\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2655043/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/33884","RelatedDescription":"Open issue \"[arm32/Linux] System.Text.Json.Tests failures on arm32 linux\" (#33884)"},{"Id":"388412645","IsPullRequest":false,"CreatedAt":"2018-12-06T21:49:01","Actor":"AlphaGit","Number":"33883","RawContent":null,"Title":"Invalid client certificates and AWS API Gateway","State":"open","Body":"Hi there! I've been debugging for a while since I was not able to get my SSL Client Certificates to be available in my `HttpContext.Connection.ClientCertificate`.\r\n\r\nI've come across #30483 which explains why some certificates are not included at all in the request information.\r\n\r\nAnd yet, I have a use case: the client certificates generated by AWS API Gateway do not have the required properties, are self-signed and as such will never appear in .NETCore hosted apps.\r\n\r\nI'm including an example certificate generated by AWS API Gateway so you can inspect it in detail:\r\n\r\n```\r\n-----BEGIN CERTIFICATE-----\r\nMIIC6DCCAdCgAwIBAgIIZv0a28aR8qgwDQYJKoZIhvcNAQELBQAwNDELMAkGA1UE\r\nBhMCVVMxEDAOBgNVBAcTB1NlYXR0bGUxEzARBgNVBAMTCkFwaUdhdGV3YXkwHhcN\r\nMTgxMjA2MjE0NTIzWhcNMTkxMjA2MjE0NTIzWjA0MQswCQYDVQQGEwJVUzEQMA4G\r\nA1UEBxMHU2VhdHRsZTETMBEGA1UEAxMKQXBpR2F0ZXdheTCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBAI0AcktNwcPvvXut1lay3UGkpKIAyZVd0Qdk7D8w\r\nkb1uqjQmzifxeVV8Vbc3III7c2hf1++R0ZshI+whtOOkrKhTjAZ1Ap8Et9SbvV27\r\nQgHAXGNAIaeaJLpThOmsm7Aw4ZQNE8WhSl7y2AmEh9P4Dz7H/gGZJGnavyGeAzj0\r\n83A9OQMDWRfM8cuTuEtprZsxNZboYpsC639RL6wSZeHS+UbICQB4Jv18ItBCq2xy\r\nsJB/LT7Wsb5uf68JZAtayvdps0DV/q4UbTE1ZS/xtk05CGJbUOwgngEpE7K2bfbV\r\ntQ8nGpfuIpaDWM3yBVmjqvxJYw8hR+2344tmV3Ja2c9oJNcCAwEAATANBgkqhkiG\r\n9w0BAQsFAAOCAQEACTtH/MIOm/JwexCqmrNqpYD79GLsR035eHYC//K37kuSUWFV\r\ncLDGTRsIjjNOIGvwXj/EH+ecWfH60O+SpV7fV65VpAf6n+pJDWbAk9TJMf5AaDPA\r\nT13pVwq4rv8CVJ2AaNN+40HGVd4SctCxFQbLeQj6qcZjkx5P4fc2dJEx/8yKgD2v\r\nbgRwjf9rswVpVBsPzuX+xYyvb1ZrOJROGoTJXRLsT56Ou+vq57fkZ1olcUkXVbol\r\nuZElOp40O4zYtbACd2+kq61DkZPdOtbVINGRFKzyg3FCpgkUj79FGETe5JbDhC/t\r\nv2rmf5P5U6qnTeO0AMkZ02fGOdf9NStEI86W9w==\r\n-----END CERTIFICATE-----\r\n```\r\n\r\nI have no authority to dictate what .NETCore should do, but aside from asking how to allow .NETCore apps from verifying that the caller is indeed AWS API Gateway, here are a few ideas that I think could help others (even in the case of self-signing for local testing):\r\n\r\n- Maybe we could include an option so that invalid certificates are not automatically discarded, but rather included in the request information?\r\n- Maybe we could include an option so that client certificates are not automatically checked?\r\n- Maybe we could include the rejected SSL certificates somewhere in the HTTP context?\r\n- Maybe there's a workaround I didn't know about?\r\n\r\nLet me know what do you think a good next steps should be -- anyway, thank you for your time, and thanks for the .NETCore effort! It's incredible and better every day!","Url":"https://github.com/dotnet/corefx/issues/33883","RelatedDescription":"Open issue \"Invalid client certificates and AWS API Gateway\" (#33883)"},{"Id":"388402996","IsPullRequest":false,"CreatedAt":"2018-12-06T21:21:37","Actor":"davidkaya","Number":"33882","RawContent":null,"Title":"RestoreSDKProject.csproj contains end tag </PropertyGroup> without matching start tag","State":"open","Body":"There is a `</PropertyGroup>` end tag without matching start tag in https://github.com/dotnet/corefx/blob/master/src/SharedFrameworkValidation/RestoreSDKProject/RestoreSDKProject.csproj#L6\r\n\r\nBuild of tests failed on that issue:\r\n\r\n```\r\ncorefx/src/System.IO.FileSystem/tests on  master [⇣!?] via .NET 2.1.302\r\n➜ ../../../build.sh .\r\n/Users/kaya/workspace/personal/corefx/.dotnet/sdk/2.1.401/MSBuild.dll /nologo -maxcpucount /m -verbosity:m /v:minimal /bl:/Users/kaya/workspace/personal/corefx/eng/common/../../artifacts/log/Debug/Build.binlog /clp:Summary /nr:true /p:Configuration=Debug /p:Projects=/Users/kaya/workspace/personal/corefx/eng/common/../../*.sln /p:RepoRoot=/Users/kaya/workspace/personal/corefx/eng/common/../.. /p:Restore=true /p:Build=true /p:Rebuild=false /p:Test=false /p:Pack=false /p:IntegrationTest=false /p:PerformanceTest=false /p:Sign=false /p:Publish=false /p:ContinuousIntegrationBuild=false /p:DirectoryToBuild=. /Users/kaya/.nuget/packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.18603.8/tools/Build.proj\r\n  Restore completed in 50.06 ms for /Users/kaya/.nuget/packages/microsoft.dotnet.arcade.sdk/1.0.0-beta.18603.8/tools/Tools.proj.\r\n  Package Id                             Version      Commands\r\n  -------------------------------------------------------------------\r\n  coverlet.console                       1.3.0        coverlet\r\n  dotnet-reportgenerator-globaltool      4.0.4        reportgenerator\r\n/Users/kaya/workspace/personal/corefx/Tools/FrameworkTargeting.targets(149,3): warning MSB4011: \"/Users/kaya/workspace/personal/corefx/.dotnet/sdk/2.1.401/Microsoft.CSharp.targets\" cannot be imported again. It was already imported at \"/Users/kaya/workspace/personal/corefx/src/Common/tests/System/Net/Prerequisites/Servers/CoreFxNetCloudService/WebServer/WebServer.csproj (158,3)\". This is most likely a build authoring error. This subsequent import will be ignored.\r\n/Users/kaya/workspace/personal/corefx/src/SharedFrameworkValidation/RestoreSDKProject/RestoreSDKProject.csproj(6,5): error MSB4025: The project file could not be loaded. The 'Project' start tag on line 1 position 2 does not match the end tag of 'PropertyGroup'. Line 6, position 5.\r\n\r\nBuild FAILED.\r\n\r\n/Users/kaya/workspace/personal/corefx/Tools/FrameworkTargeting.targets(149,3): warning MSB4011: \"/Users/kaya/workspace/personal/corefx/.dotnet/sdk/2.1.401/Microsoft.CSharp.targets\" cannot be imported again. It was already imported at \"/Users/kaya/workspace/personal/corefx/src/Common/tests/System/Net/Prerequisites/Servers/CoreFxNetCloudService/WebServer/WebServer.csproj (158,3)\". This is most likely a build authoring error. This subsequent import will be ignored.\r\n/Users/kaya/workspace/personal/corefx/src/SharedFrameworkValidation/RestoreSDKProject/RestoreSDKProject.csproj(6,5): error MSB4025: The project file could not be loaded. The 'Project' start tag on line 1 position 2 does not match the end tag of 'PropertyGroup'. Line 6, position 5.\r\n    1 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:11.44\r\nBuild failed (exit code '1'). See log: /Users/kaya/workspace/personal/corefx/eng/common/../../artifacts/log/Debug/Build.binlog\r\n```\r\n\r\nCan send PR if wanted.","Url":"https://github.com/dotnet/corefx/issues/33882","RelatedDescription":"Open issue \"RestoreSDKProject.csproj contains end tag </PropertyGroup> without matching start tag\" (#33882)"},{"Id":"388400169","IsPullRequest":true,"CreatedAt":"2018-12-06T21:13:31","Actor":"Dotnet-GitSync-Bot","Number":"33881","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/33881","RelatedDescription":"Open PR \"Mirror changes from dotnet/corert,coreclr\" (#33881)"},{"Id":"388399910","IsPullRequest":false,"CreatedAt":"2018-12-06T21:12:46","Actor":"jcouv","Number":"33880","RawContent":null,"Title":"APIs that could use annotations or attributes for nullability","State":"open","Body":"In C# 8.0 with the nullability analysis turned on, libraries that don't carry explicit nullable annotations are treated as \"oblivious\", which means the analysis assumes the best (to minimize nullability warnings).\r\n\r\nThis is generally a reasonable assumption, but it hides some potentially useful warnings. As a rule of thumb:\r\n- any API which could return a `null` should declare that.\r\n- any API which throws an exception on a `null` input should declare that. For instance, `Path.GetDirectoryName(string! name)`.\r\n\r\nThe experience of using nullability analysis on APIs can be further enhanced with some attributes that provide hints about the semantics of the API:\r\n- `bool string.IsNullOrEmpty([NotNullWhenFalse] string value)`\r\n- `bool string.IsNullOrWhiteSpace([NotNullWhenFalse] string value)`\r\n- `[MaybeNull] T FirstOrDefault(...)`\r\n- `Debug.Assert([EnsuresTrue] ...)`\r\n\r\nWe are still working to finalize the set of such attributes (tracked by https://github.com/dotnet/roslyn/issues/26761).\r\n\r\nI'm opening this issue to collect such examples, so that we have some idea which APIs should be annotated first, once we are ready to do that.","Url":"https://github.com/dotnet/corefx/issues/33880","RelatedDescription":"Open issue \"APIs that could use annotations or attributes for nullability\" (#33880)"},{"Id":"388347249","IsPullRequest":false,"CreatedAt":"2018-12-06T21:11:26","Actor":"vsfeedback","Number":"33872","RawContent":null,"Title":"Control over each iteration of Parallel foreach loop","State":"closed","Body":"<p>Dear,</p><p></p><p>Good Morning. Parallel foreach helps us to improve application performance very efficiently. If we include a feature such as developer shall have control over each iteration of Parallel foreach loop i.e. If developer wants to set a timeout for each iteration rather than setting timeout for entire parallel foreach loop then it will be much more efficient. For instance, Lets say we have 80000 iteration to be executed in the parallel foreach loop, in this case, if any one of the iteration got struck due to some issue (and without any exception) in this case it will be difficult for developer to use parallel foreach loop as developer doesn't have control over each iteration such as setting timeout etc. for each iteration in parallel foreach loop. If we include these kind of features i.e. control over each iteration of parallel foreach loop then it would very useful for all developers. </p><p></p><p> Thanks &amp; Regards,</p><p>Kalyan Sagar J</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/389072/control-over-each-iteration-of-parallel-foreach-lo.html\nVSTS ticketId: 733780_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 11/22/2018, 00:43 AM (13 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/corefx/issues/33872","RelatedDescription":"Closed issue \"Control over each iteration of Parallel foreach loop\" (#33872)"},{"Id":"388369396","IsPullRequest":true,"CreatedAt":"2018-12-06T21:09:22","Actor":"Dotnet-GitSync-Bot","Number":"33876","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/33876","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#33876)"},{"Id":"388395238","IsPullRequest":false,"CreatedAt":"2018-12-06T20:59:21","Actor":"tactical-drone","Number":"33879","RawContent":null,"Title":"`[DllImport]` library dependencies. ","State":"open","Body":"- system: `dotnet-sdk-2.2` in a Windows 10 bash (ubuntu). \r\n\r\nCurrently `DllImport`does not support calling libraries that depend on other libraries. You get symbol not found errors. \r\n\r\nThe proposed hack is to `[DllImport(\"dl\")] dlopen` with `RTLD_GLOBAL` set. But this does not work. For some reason the handles for most libs returned are `0`, even for libraries that work with `DllImport`. The ones that do return handles, do so randomly. They are generated in the same way as the other libs with just different code in them. It makes no sense what so ever. \r\n\r\nRegardless, pre loading libraries with `dlopen` before `DllImport` calls do not solve the dependency problem. For now I had to recompile the code into a custom library, but this requires upkeep. I would rather just that it worked. But how?\r\n\r\nHow do you get interop to work with shared libraries that depend on other shared libraries?\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/33879","RelatedDescription":"Open issue \"`[DllImport]` library dependencies. \" (#33879)"},{"Id":"388383825","IsPullRequest":false,"CreatedAt":"2018-12-06T20:25:38","Actor":"ebekker","Number":"33878","RawContent":null,"Title":"Add NTLM authentication to SqlClient","State":"open","Body":"While #4198 added support for integrated authentication when a client runs on a domain-joined host, it can be quite useful to support NTLM-based Windows authentication from a non-domain-joined host, especially in today's serverless or container environments.\r\n\r\nI know this is possible simply at the protocol level (TDS) because this has been supported in the [jTDS](https://sourceforge.net/p/jtds/code/HEAD/tree/branches/jTDS%201.3%20%28stable%29/src/main/net/sourceforge/jtds/jdbc/TdsCore.java#l2238) JDBC driver for quite some time.\r\n\r\nThe goal is to be able to connect to a SQL Server instance using Windows Authentication from a non-domain-joined host (and also, not necessarily a Windows host), simply by providing the connection credentials in the connection string (domain, username, password).  Is this possible today?\r\n","Url":"https://github.com/dotnet/corefx/issues/33878","RelatedDescription":"Open issue \"Add NTLM authentication to SqlClient\" (#33878)"},{"Id":"388369614","IsPullRequest":false,"CreatedAt":"2018-12-06T19:47:04","Actor":"joperezr","Number":"33877","RawContent":null,"Title":"[arm32/Linux] System.Resources.ResourceManager.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Resources.ResourceManager.Tests produced the following results: passed 94/96 tests.\r\n\r\nBoth test failures failed with the following callstack:\r\n```\r\nSystem.TypeInitializationException : The type initializer for 'Gdip' threw an exception.\\n---- System.DllNotFoundException : Unable to load DLL 'libgdiplus': The specified module could not be found.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipCreateBitmapFromFile(String filename, IntPtr& bitmap)\r\n   at System.Drawing.Bitmap..ctor(String filename, Boolean useIcm)\r\n   at System.Drawing.Bitmap..ctor(String filename)\r\n   at System.Resources.Tests.ResourceManagerTests.EnglishImageResourceData()+MoveNext() in /opt/corefx/src/System.Resources.ResourceManager/tests/ResourceManagerTests.cs:line 266\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n----- Inner Stack Trace -----\r\n   at System.Runtime.InteropServices.FunctionWrapper`1.get_Delegate()\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdiplusStartup(IntPtr& token, StartupInput& input, StartupOutput& output)\r\n   at System.Drawing.SafeNativeMethods.Gdip..cctor()\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/33877","RelatedDescription":"Open issue \"[arm32/Linux] System.Resources.ResourceManager.Tests failures on arm32 linux\" (#33877)"},{"Id":"388368515","IsPullRequest":false,"CreatedAt":"2018-12-06T19:44:00","Actor":"joperezr","Number":"33875","RawContent":null,"Title":"[arm32/Linux] System.ServiceModel.Syndication.Tests failures on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.ServiceModel.Syndication.Tests produced the following results: passed 1108/1211 tests.\r\n\r\nMost of the failures are caused by PlatformNotSupportedExceptions so I believe that they should all be skipped when running in linux arm32.","Url":"https://github.com/dotnet/corefx/issues/33875","RelatedDescription":"Open issue \"[arm32/Linux] System.ServiceModel.Syndication.Tests failures on arm32 linux\" (#33875)"},{"Id":"388364698","IsPullRequest":false,"CreatedAt":"2018-12-06T19:34:09","Actor":"joperezr","Number":"33874","RawContent":null,"Title":"[arm32/Linux] System.Security.Permissions.Tests fail with TypeLoadException on arm32 linux","State":"open","Body":"Running the arm32 tests on linux for System.Security.Permissions.Tests produced the following results: passed 95/137 tests.\r\n\r\nMost of the failures have the following message:\r\n```\r\nSystem.TypeLoadException : Could not load type 'System.Security.IStackWalk' from assembly 'System.Runtime.Extensions, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n```\r\nwhile there are also a couple that fail with:\r\n```\r\nSystem.MissingMethodException : Method not found: 'Void System.Security.Permissions.PrincipalPermission..ctor(System.Security.Permissions.PermissionState)'.\r\n```","Url":"https://github.com/dotnet/corefx/issues/33874","RelatedDescription":"Open issue \"[arm32/Linux] System.Security.Permissions.Tests fail with TypeLoadException on arm32 linux\" (#33874)"},{"Id":"388360408","IsPullRequest":false,"CreatedAt":"2018-12-06T19:22:54","Actor":"jwang98052","Number":"33873","RawContent":null,"Title":"System.IO.Compression assembly load failure in Net47","State":"open","Body":"I got the following error at runtime:\r\n\"Could not load file or assembly 'System.IO.Compression, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies. The system cannot find the file specified.\"\r\n\r\nThis is in my csproj file:\r\n<TargetFramework>net47</TargetFramework>\r\n\r\nI see System.IO.Compression.dll 4.2.0.0 is at my working folder. And AutoGenerateBindingRedirects in app.config point to 4.2.0.0. But still get this runtime exception. \r\n\r\nSimilar error happens for System.Net.Http.dll\r\n\"cannot find the file specified.,Could not load file or assembly 'System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.,Could not load file or assembly 'System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.]\"\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/33873","RelatedDescription":"Open issue \"System.IO.Compression assembly load failure in Net47\" (#33873)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"388487176","IsPullRequest":true,"CreatedAt":"2018-12-07T03:06:04","Actor":"AlekseyTs","Number":"31607","RawContent":null,"Title":"Remove remaining artifacts of symbol-centric NonNullTypes context.","State":"open","Body":"Closes #30171.\r\nCloses #29838.","Url":"https://github.com/dotnet/roslyn/pull/31607","RelatedDescription":"Open PR \"Remove remaining artifacts of symbol-centric NonNullTypes context.\" (#31607)"},{"Id":"388449426","IsPullRequest":true,"CreatedAt":"2018-12-07T02:00:05","Actor":"dotnet-bot","Number":"31600","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31600","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31600)"},{"Id":"388469862","IsPullRequest":false,"CreatedAt":"2018-12-07T01:36:47","Actor":"SergeyTeplyakov","Number":"31606","RawContent":null,"Title":"Lack of warning for not nullable field like array initialization with null literal","State":"open","Body":"**Version Used**: \r\nVS2019 Preview\r\n\r\n```csharp\r\nclass FooBar\r\n{\r\n    // No warning\r\n    public string[] Ss { get; } = new string[] { null };\r\n}\r\n\r\nclass FooBar2\r\n{\r\n    // Cannot convert null literal to non-nullable reference or unconstrained type parameter.\r\n    public string[] Ss { get; } = new string[] { null };\r\n\r\n    // Defining empty constructor \"forces\" the warning to appear.\r\n    public FooBar2()\r\n    {               \r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31606","RelatedDescription":"Open issue \"Lack of warning for not nullable field like array initialization with null literal\" (#31606)"},{"Id":"388468573","IsPullRequest":true,"CreatedAt":"2018-12-07T01:31:00","Actor":"heejaechang","Number":"31605","RawContent":null,"Title":"make sure we don't load assembly too early for vsix installed analyze…","State":"open","Body":"…r dlls.\r\n\r\nwe had special code around vsix installed analyzers dlls to make sure it doesn't get loaded until it is actually used. that got broken when I made this fix - https://github.com/dotnet/roslyn/pull/31438\r\n\r\nthis puts that special behavior back to make RPS happy.","Url":"https://github.com/dotnet/roslyn/pull/31605","RelatedDescription":"Open PR \"make sure we don't load assembly too early for vsix installed analyze…\" (#31605)"},{"Id":"388465986","IsPullRequest":true,"CreatedAt":"2018-12-07T01:18:36","Actor":"chsienki","Number":"31604","RawContent":null,"Title":"Lookup dispose methods on the underlying type for nullable value types:","State":"open","Body":" - Create a conversion from the NVT to the underlying type before searching for dispose\r\n- Add tests to cover behavior","Url":"https://github.com/dotnet/roslyn/pull/31604","RelatedDescription":"Open PR \"Lookup dispose methods on the underlying type for nullable value types:\" (#31604)"},{"Id":"388464558","IsPullRequest":true,"CreatedAt":"2018-12-07T01:11:51","Actor":"mavasani","Number":"31603","RawContent":null,"Title":"Add new analyzer API (DiagnosticSuppressor) to suppress reported comp…","State":"open","Body":"…iler/analyzer diagnostics\r\n\r\nFixes #20242 and #30172\r\n\r\nAdded public APIs with documentation comments:\r\n```cs\r\nnamespace Microsoft.CodeAnalysis.Diagnostics\r\n{\r\n    /// <summary>\r\n    /// The base type for diagnostic suppressors that can programmatically suppress diagnostics.\r\n    /// </summary>\r\n    public abstract class DiagnosticSuppressor : DiagnosticAnalyzer\r\n    {\r\n        // Disallow suppressors from reporting diagnostics or registering analysis actions.\r\n        public sealed override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics => ImmutableArray<DiagnosticDescriptor>.Empty;\r\n\r\n        public sealed override void Initialize(AnalysisContext context) { }\r\n\r\n        /// <summary>\r\n        /// Returns a set of descriptors for the suppressions that this suppressor is capable of producing.\r\n        /// </summary>\r\n        public abstract ImmutableArray<SuppressionDescriptor> SupportedSuppressions { get; }\r\n\r\n        /// <summary>\r\n        /// Suppress analyzer and/or compiler diagnostics reported for the compilation.\r\n        /// This may be a subset of the full set of reported diagnostics, as an optimization for\r\n        /// supporting incremental and partial analysis scenarios.\r\n        /// A diagnostic is considered suppressible by analyzers if *all* of the following conditions are met:\r\n        ///     1. Diagnostic is not already suppressed in source via pragma/suppress message attribute.\r\n        ///     2. Diagnostic's <see cref=\"Diagnostic.DefaultSeverity\"/> is not <see cref=\"DiagnosticSeverity.Error\"/>.\r\n        ///     3. Diagnostic is not tagged with <see cref=\"WellKnownDiagnosticTags.NotConfigurable\"/> custom tag.\r\n        /// </summary>\r\n        public abstract void ReportSuppressions(SuppressionAnalysisContext context);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Provides a description about a programmatic suppression of a <see cref=\"Diagnostic\"/> by a <see cref=\"DiagnosticSuppressor\"/>.\r\n    /// </summary>\r\n    public sealed class SuppressionDescriptor : IEquatable<SuppressionDescriptor>\r\n    {\r\n        /// <summary>\r\n        /// An unique identifier for the suppression.\r\n        /// </summary>\r\n        public string Id { get; }\r\n\r\n        /// <summary>\r\n        /// Identifier of the suppressed diagnostic, i.e. <see cref=\"Diagnostic.Id\"/>.\r\n        /// </summary>\r\n        public string SuppressedDiagnosticId { get; }\r\n\r\n        /// <summary>\r\n        /// A localizable description about the suppression.\r\n        /// </summary>\r\n        public LocalizableString Description { get; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Context for suppressing analyzer and/or compiler diagnostics reported for the compilation.\r\n    /// </summary>\r\n    public struct SuppressionAnalysisContext\r\n    {\r\n        /// <summary>\r\n        /// Suppressible analyzer and/or compiler diagnostics reported for the compilation.\r\n        /// This may be a subset of the full set of reported diagnostics, as an optimization for\r\n        /// supporting incremental and partial analysis scenarios.\r\n        /// A diagnostic is considered suppressible by analyzers if *all* of the following conditions are met:\r\n        ///     1. Diagnostic is not already suppressed in source via pragma/suppress message attribute.\r\n        ///     2. Diagnostic's <see cref=\"Diagnostic.DefaultSeverity\"/> is not <see cref=\"DiagnosticSeverity.Error\"/>.\r\n        ///     3. Diagnostic is not tagged with <see cref=\"WellKnownDiagnosticTags.NotConfigurable\"/> custom tag.\r\n        /// </summary>\r\n        public ImmutableArray<Diagnostic> ReportedDiagnostics { get; }\r\n\r\n        /// <summary>\r\n        /// Report a <see cref=\"Suppression\"/> for a reported diagnostic.\r\n        /// </summary>\r\n        public void ReportSuppression(Suppression suppression);\r\n\r\n        /// <summary>\r\n        /// Gets a <see cref=\"SemanticModel\"/> for the given <see cref=\"SyntaxTree\"/>, which is shared across all analyzers.\r\n        /// </summary>\r\n        public SemanticModel GetSemanticModel(SyntaxTree syntaxTree);\r\n\r\n        /// <summary>\r\n        /// <see cref=\"CodeAnalysis.Compilation\"/> for the context.\r\n        /// </summary>\r\n        public Compilation Compilation { get; }\r\n\r\n        /// <summary>\r\n        /// Options specified for the analysis.\r\n        /// </summary>\r\n        public AnalyzerOptions Options { get; }\r\n\r\n        /// <summary>\r\n        /// Token to check for requested cancellation of the analysis.\r\n        /// </summary>\r\n        public CancellationToken CancellationToken { get; }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Programmatic suppression of a <see cref=\"Diagnostic\"/> by a <see cref=\"DiagnosticSuppressor\"/>.\r\n    /// </summary>\r\n    public struct Suppression\r\n    {\r\n        /// <summary>\r\n        /// Creates a suppression of a <see cref=\"Diagnostic\"/> with the given <see cref=\"SuppressionDescriptor\"/>.\r\n        /// </summary>\r\n        /// <param name=\"descriptor\">\r\n        /// Descriptor for the suppression, which must be from <see cref=\"DiagnosticSuppressor.SupportedSuppressions\"/>\r\n        /// for the <see cref=\"DiagnosticSuppressor\"/> creating this suppression.\r\n        /// </param>\r\n        /// <param name=\"suppressedDiagnostic\">\r\n        /// <see cref=\"Diagnostic\"/> to be suppressed, which must be from <see cref=\"SuppressionAnalysisContext.ReportedDiagnostics\"/>\r\n        /// for the suppression context in which this suppression is being created.</param>\r\n        public static Suppression Create(SuppressionDescriptor descriptor, Diagnostic suppressedDiagnostic);\r\n\r\n        /// <summary>\r\n        /// Descriptor for this suppression.\r\n        /// </summary>\r\n        public SuppressionDescriptor Descriptor { get; }\r\n\r\n        /// <summary>\r\n        /// Diagnostic suppressed by this suppression.\r\n        /// </summary>\r\n        public Diagnostic SuppressedDiagnostic { get; }\r\n    }\r\n}\r\n```\r\n\r\nFor batch compilation, suppressors always run after all the compiler and analyzer diagnostics have been computed.\r\nFor IDE partial/incremental analysis scenario, we may run the suppressors with partial diagnostics.\r\nSuppressed diagnostics from diagnostic suppressors are equivalent to source suppressed diagnostics: they show up in the error list with \"Suppression State\" column as \"Suppressed\" and are also output to errorlog as suppressed diagnostics.\r\n\r\nNote that this API has been approved at the IDE/analyzer design meeting.","Url":"https://github.com/dotnet/roslyn/pull/31603","RelatedDescription":"Open PR \"Add new analyzer API (DiagnosticSuppressor) to suppress reported comp…\" (#31603)"},{"Id":"388449449","IsPullRequest":true,"CreatedAt":"2018-12-07T01:00:04","Actor":"dotnet-bot","Number":"31601","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31601","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#31601)"},{"Id":"388461026","IsPullRequest":true,"CreatedAt":"2018-12-07T00:54:56","Actor":"RikkiGibson","Number":"31602","RawContent":null,"Title":"[WIP] Unmanaged constructed types tests","State":"open","Body":"This branch is a running WIP containing the new tests added to flesh out coverage for unmanaged constructed types.\r\n\r\nSeeing an interesting test failure in the new verification test in \r\n7b278f4. Anything come to mind on how to address this @jaredpar @agocke?\r\n\r\n```\r\nSystem.Exception : Verification failed\r\n---- Roslyn.Test.Utilities.Desktop.RuntimePeVerifyException : \r\nPeVerify failed for assembly 'C:\\Users\\rigibson\\AppData\\Local\\Temp\\RoslynTests':\r\n[ : MyStruct`1[T]::get_Item][mdToken=0x6000002][offset 0x0000000F][found unmanaged pointer] Expected numeric type on the stack.\r\n[ : C::Main][mdToken=0x6000003][offset 0x00000012][found address of Single] Expected numeric type on the stack.\r\n\r\n\r\nStack Trace:\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\Platform\\Desktop\\DesktopRuntimeEnvironment.cs(320,0): at Roslyn.Test.Utilities.Desktop.DesktopRuntimeEnvironment.Verify(Verification verification)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\CompilationVerifier.cs(160,0): at Microsoft.CodeAnalysis.Test.Utilities.CompilationVerifier.Emit(String expectedOutput, Nullable`1 expectedReturnCode, String[] args, IEnumerable`1 manifestResources, EmitOptions emitOptions, Verification peVerify, SignatureDescription[] expectedSignatures)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\CommonTestBase.cs(154,0): at Microsoft.CodeAnalysis.Test.Utilities.CommonTestBase.Emit(Compilation compilation, IEnumerable`1 dependencies, IEnumerable`1 manifestResources, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, Action`1 assemblyValidator, Action`1 symbolValidator, EmitOptions emitOptions, Verification verify)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\CommonTestBase.cs(68,0): at Microsoft.CodeAnalysis.Test.Utilities.CommonTestBase.CompileAndVerifyCommon(Compilation compilation, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 assemblyValidator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, EmitOptions emitOptions, Verification verify)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Compilers\\Test\\Utilities\\CSharp\\CSharpTestBase.cs(605,0): at Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CompileAndVerify(Compilation compilation, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 validator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, EmitOptions emitOptions, Verification verify)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Compilers\\Test\\Utilities\\CSharp\\CSharpTestBase.cs(564,0): at Microsoft.CodeAnalysis.CSharp.Test.Utilities.CSharpTestBase.CompileAndVerify(CSharpTestSource source, IEnumerable`1 references, IEnumerable`1 manifestResources, IEnumerable`1 dependencies, Action`1 sourceSymbolValidator, Action`1 assemblyValidator, Action`1 symbolValidator, SignatureDescription[] expectedSignatures, String expectedOutput, Nullable`1 expectedReturnCode, String[] args, CSharpCompilationOptions options, CSharpParseOptions parseOptions, EmitOptions emitOptions, TargetFramework targetFramework, Verification verify)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Compilers\\CSharp\\Test\\Semantic\\Semantics\\GenericConstraintsTests.cs(3659,0): at Microsoft.CodeAnalysis.CSharp.Semantic.UnitTests.Semantics.GenericConstraintsTests.NestedGenericStructContainingPointer()\r\n  ----- Inner Stack Trace -----\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\Platform\\Desktop\\RuntimeAssemblyManager.cs(455,0): at Roslyn.Test.Utilities.Desktop.RuntimeAssemblyManager.PeVerifyModules(String[] modulesToVerify, Boolean throwOnError)\r\n     at Roslyn.Test.Utilities.Desktop.RuntimeAssemblyManager.PeVerifyModules(String[] modulesToVerify, Boolean throwOnError)\r\n  C:\\Users\\rigibson\\src\\roslyn\\src\\Test\\Utilities\\Portable\\Platform\\Desktop\\DesktopRuntimeEnvironment.cs(310,0): at Roslyn.Test.Utilities.Desktop.DesktopRuntimeEnvironment.Verify(Verification verification)\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/pull/31602","RelatedDescription":"Open PR \"[WIP] Unmanaged constructed types tests\" (#31602)"},{"Id":"388437469","IsPullRequest":true,"CreatedAt":"2018-12-07T00:45:31","Actor":"RikkiGibson","Number":"31597","RawContent":null,"Title":"Merge master to unmanaged constructed type feature branch","State":"closed","Body":"Just grabbing what's happened lately so I don't fall too far out of sync.","Url":"https://github.com/dotnet/roslyn/pull/31597","RelatedDescription":"Closed or merged PR \"Merge master to unmanaged constructed type feature branch\" (#31597)"},{"Id":"388446620","IsPullRequest":true,"CreatedAt":"2018-12-06T23:48:35","Actor":"sharwell","Number":"31599","RawContent":null,"Title":"Add when_multiline option for csharp_prefer_braces","State":"open","Body":"Closes #31032","Url":"https://github.com/dotnet/roslyn/pull/31599","RelatedDescription":"Open PR \"Add when_multiline option for csharp_prefer_braces\" (#31599)"},{"Id":"388444245","IsPullRequest":false,"CreatedAt":"2018-12-06T23:38:17","Actor":"AlekseyTs","Number":"31598","RawContent":null,"Title":"Need to make sure all speculative APIs on Semantic model properly pick up nullable context for the position where the speculation occurs","State":"open","Body":"See NonNullTypesContext_22 through NonNullTypesContext_37 for inspiration","Url":"https://github.com/dotnet/roslyn/issues/31598","RelatedDescription":"Open issue \"Need to make sure all speculative APIs on Semantic model properly pick up nullable context for the position where the speculation occurs\" (#31598)"},{"Id":"388353274","IsPullRequest":false,"CreatedAt":"2018-12-06T23:34:09","Actor":"ScottLouvau","Number":"31588","RawContent":null,"Title":"VS 2017 Enterprise 15.0.28307.145 says it's incompatible with .NET Compiler Platform SDK","State":"closed","Body":"I tried to follow the steps to implement a Code Fixer today, on a just-updated copy of VS 2017 Enterprise.\r\n\r\nAfter I installed the .NET Compiler Platform SDK (either from https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.NETCompilerPlatformSDK or from Tools -> Extensions and Updates), VS reports that the SDK is incompatible with Visual Studio.\r\n\r\nIs a release coming that will work?\r\n![image](https://user-images.githubusercontent.com/15742033/49605889-a4a36a00-f946-11e8-8122-7b1ee2dea542.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/31588","RelatedDescription":"Closed issue \"VS 2017 Enterprise 15.0.28307.145 says it's incompatible with .NET Compiler Platform SDK\" (#31588)"},{"Id":"388434946","IsPullRequest":true,"CreatedAt":"2018-12-06T23:01:34","Actor":"ivanbasov","Number":"31596","RawContent":null,"Title":"asynccompletion: number of changes when making large changes differ with the original completion","State":"open","Body":"Fixes #30972","Url":"https://github.com/dotnet/roslyn/pull/31596","RelatedDescription":"Open PR \"asynccompletion: number of changes when making large changes differ with the original completion\" (#31596)"},{"Id":"388421828","IsPullRequest":true,"CreatedAt":"2018-12-06T22:17:18","Actor":"mavasani","Number":"31595","RawContent":null,"Title":"Fix couple of bugs in unused private members analyzer","State":"open","Body":"1. https://github.com/dotnet/roslyn/commit/1196711c981829ba53e4ef307cf79f25b3b0bff2: Fixes #31572. Fix detection of entry point methods to account for `int` return type.\r\n\r\n2. https://github.com/dotnet/roslyn/commit/9cc8b0c5388bff6453c0807b2fbe96f7ef6f0dc8: Fixes #31581. Add a workaround for #19965 to detect references to method/property from method group/property group argument to `nameof` operator. We also provide a different diagnostic message for private methods that have name-only references.","Url":"https://github.com/dotnet/roslyn/pull/31595","RelatedDescription":"Open PR \"Fix couple of bugs in unused private members analyzer\" (#31595)"},{"Id":"388415332","IsPullRequest":false,"CreatedAt":"2018-12-06T21:56:47","Actor":"KirillOsenkov","Number":"31594","RawContent":null,"Title":"Prefer braces code fix does not support single-line blocks","State":"open","Body":"**Version Used**: \r\nVS 15.9.3\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. New C# console app\r\n2. Add this code:\r\n```\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        if (args.Length > 0) Console.WriteLine();\r\n    }\r\n}\r\n```\r\n3. Use this .editorconfig:\r\n```\r\n[*.cs] \r\ncsharp_prefer_braces = true:silent \r\ncsharp_preserve_single_line_statements = true \r\ncsharp_preserve_single_line_blocks = true \r\n```\r\n4. Format Document\r\n\r\n**Expected Behavior**:\r\nShould convert the line to:\r\n\r\n```\r\n        if (args.Length > 0) { Console.WriteLine(); }\r\n```\r\n\r\nNote that as a combination of the three rules above I'd expect the single-line block to remain on a single line, and the curlies to be added.\r\n\r\n**Actual Behavior**:\r\n```\r\n        if (args.Length > 0)\r\n        {\r\n            Console.WriteLine();\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31594","RelatedDescription":"Open issue \"Prefer braces code fix does not support single-line blocks\" (#31594)"},{"Id":"388414763","IsPullRequest":true,"CreatedAt":"2018-12-06T21:55:08","Actor":"agocke","Number":"31593","RawContent":null,"Title":"Hide AnalyzerConfig section matching implementation","State":"open","Body":"The existing API publicly exposes that we match AnalyzerConfig sections\r\nusing a Regex compilation strategy. There are numerous reasons why we\r\nmay want to change this implementation strategy in the future, so this\r\nchanges the API to return an opaque \"matcher\" struct instead of a regex\r\nstring.","Url":"https://github.com/dotnet/roslyn/pull/31593","RelatedDescription":"Open PR \"Hide AnalyzerConfig section matching implementation\" (#31593)"},{"Id":"388399656","IsPullRequest":true,"CreatedAt":"2018-12-06T21:12:02","Actor":"333fred","Number":"31592","RawContent":null,"Title":"More Test Hook Fixes","State":"open","Body":"This fixes another couple of bugs with the test hook. There are only 2 tests left that need to be fixed before we can enable the test hook in ADO for https://github.com/dotnet/roslyn/issues/31450.\r\n\r\nEach commit is an isolated bug fix and test addition.","Url":"https://github.com/dotnet/roslyn/pull/31592","RelatedDescription":"Open PR \"More Test Hook Fixes\" (#31592)"},{"Id":"388396174","IsPullRequest":true,"CreatedAt":"2018-12-06T21:01:51","Actor":"JoeRobich","Number":"31591","RawContent":null,"Title":"Change to use ConfigureAwait(true) following JTF SwitchToMainThread","State":"open","Body":"Fixes this issue brought up in this comment https://github.com/dotnet/roslyn/pull/31569#pullrequestreview-182446633","Url":"https://github.com/dotnet/roslyn/pull/31591","RelatedDescription":"Open PR \"Change to use ConfigureAwait(true) following JTF SwitchToMainThread\" (#31591)"},{"Id":"388355418","IsPullRequest":true,"CreatedAt":"2018-12-06T19:10:00","Actor":"ryzngard","Number":"31590","RawContent":null,"Title":"Don't warn about deprecated licenseUrl property","State":"open","Body":"This property is deprecated but we can't quite fix it yet. See #31589 to track when we can undo this change and fix completely ","Url":"https://github.com/dotnet/roslyn/pull/31590","RelatedDescription":"Open PR \"Don't warn about deprecated licenseUrl property\" (#31590)"},{"Id":"388355177","IsPullRequest":false,"CreatedAt":"2018-12-06T19:09:15","Actor":"ryzngard","Number":"31589","RawContent":null,"Title":"LicenseUrl is depricated","State":"open","Body":"We use LicenseUrl in our NuGet packages. We should move to packaging the License.txt file and using that, but we need support for `PackageLicenseFile` which is only available in `2.1.600-preview-009426` or newer. \r\n","Url":"https://github.com/dotnet/roslyn/issues/31589","RelatedDescription":"Open issue \"LicenseUrl is depricated\" (#31589)"},{"Id":"388338679","IsPullRequest":false,"CreatedAt":"2018-12-06T18:23:04","Actor":"jad359","Number":"31587","RawContent":null,"Title":"NullReferenceException in LocalRewriter.MakeConversionNode","State":"open","Body":"Some of the existing csprojs I work with failed compilation with `\"csc.exe\" exited with code -2146232797.`\r\n\r\nRelated stack traces, pulled from Windows Application Logs:\r\n```Application: csc.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(BoundConversion oldNode, SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, TypeSymbol rewrittenType, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteNullableConversion(SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(BoundConversion oldNode, SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConversion(BoundConversion node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConditionalOperator(BoundConditionalOperator node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitAssignmentOperator(BoundAssignmentOperator node, Boolean used)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteExpressionStatement(BoundExpressionStatement node, Boolean suppressInstrumentation)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionStatement(BoundExpressionStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchSection(BoundSwitchSection node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchSections(ImmutableArray`1 sections)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchStatement(BoundSwitchStatement node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.CSharp.BoundConversion, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteNullableConversion(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.CSharp.BoundConversion, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConversion(Microsoft.CodeAnalysis.CSharp.BoundConversion)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConditionalOperator(Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitAssignmentOperator(Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator, Boolean)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement, Boolean)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.Collections.Immutable.ImmutableArray`1<System.__Canon>)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.BoundSwitchSection)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchSections(System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundSwitchSection>)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.DiagnosticBag, Boolean ByRef, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nAnd another, very similar but with VBCSCompiler.exe instead of csc.exe, and stack trace including `RewriteFullyLiftedBuiltInConversion` unlike the above:\r\n```\r\nApplication: VBCSCompiler.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(BoundConversion oldNode, SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, TypeSymbol rewrittenType, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteFullyLiftedBuiltInConversion(SyntaxNode syntax, BoundExpression operand, Conversion conversion, Boolean checked, TypeSymbol type)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteNullableConversion(SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(BoundConversion oldNode, SyntaxNode syntax, BoundExpression rewrittenOperand, Conversion conversion, Boolean checked, Boolean explicitCastInCode, ConstantValue constantValueOpt, TypeSymbol rewrittenType)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConversion(BoundConversion node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.AddObjectInitializer(ArrayBuilder`1& dynamicSiteInitializers, ArrayBuilder`1& temps, ArrayBuilder`1 result, BoundExpression rewrittenReceiver, BoundAssignmentOperator assignment)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.AddObjectInitializers(ArrayBuilder`1& dynamicSiteInitializers, ArrayBuilder`1& temps, ArrayBuilder`1 result, BoundExpression rewrittenReceiver, ImmutableArray`1 initializers)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeObjectCreationWithInitializer(SyntaxNode syntax, BoundExpression rewrittenObjectCreation, BoundExpression initializerExpression, TypeSymbol type)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitObjectCreationExpression(BoundObjectCreationExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32& recursionDepth, BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(BoundExpression node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitLocalDeclaration(BoundLocalDeclaration node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(BoundBlock node)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(CSharpCompilation compilation, MethodSymbol method, Int32 methodOrdinal, NamedTypeSymbol containingType, BoundStatement statement, TypeCompilationState compilationState, SynthesizedSubmissionFields previousSubmissionFields, Boolean allowOmissionOfConditionalCalls, Boolean instrumentForDynamicAnalysis, ImmutableArray`1& dynamicAnalysisSpans, DebugDocumentProvider debugDocumentProvider, DiagnosticBag diagnostics, Boolean& sawLambdas, Boolean& sawLocalFunctions, Boolean& sawAwaitInExceptionHandler)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(MethodSymbol method, Int32 methodOrdinal, BoundStatement body, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, DebugDocumentProvider debugDocumentProvider, ImmutableArray`1& dynamicAnalysisSpans, DiagnosticBag diagnostics, VariableSlotAllocator& lazyVariableSlotAllocator, ArrayBuilder`1 lambdaDebugInfoBuilder, ArrayBuilder`1 closureDebugInfoBuilder, StateMachineTypeSymbol& stateMachineTypeOpt)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.CSharp.BoundConversion, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteFullyLiftedBuiltInConversion(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.RewriteNullableConversion(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeConversionNode(Microsoft.CodeAnalysis.CSharp.BoundConversion, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Conversion, Boolean, Boolean, Microsoft.CodeAnalysis.ConstantValue, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitConversion(Microsoft.CodeAnalysis.CSharp.BoundConversion)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.AddObjectInitializer(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression> ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol> ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.AddObjectInitializers(Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression> ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol> ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>, Microsoft.CodeAnalysis.CSharp.BoundExpression, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CSharp.BoundExpression>)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.MakeObjectCreationWithInitializer(Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.BoundExpression, Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriterWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor.VisitExpressionWithStackGuard(Int32 ByRef, Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitExpressionImpl(Microsoft.CodeAnalysis.CSharp.BoundExpression)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitLocalDeclaration(Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.BoundBlock)\r\n   at Microsoft.CodeAnalysis.CSharp.LocalRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation, Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Boolean, Boolean, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, Microsoft.CodeAnalysis.DiagnosticBag, Boolean ByRef, Boolean ByRef, Boolean ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.LowerBodyOrInitializer(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, Microsoft.CodeAnalysis.CSharp.BoundStatement, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState, Boolean, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.CodeGen.SourceSpan> ByRef, Microsoft.CodeAnalysis.DiagnosticBag, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator ByRef, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo>, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder`1<Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo>, Microsoft.CodeAnalysis.CSharp.StateMachineTypeSymbol ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol, Int32, ProcessedFieldInitializers ByRef, Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields, Microsoft.CodeAnalysis.CSharp.TypeCompilationState)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler+<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0()\r\n   at Roslyn.Utilities.UICultureUtilities+<>c__DisplayClass5_0.<WithCurrentUICulture>b__0()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31587","RelatedDescription":"Open issue \"NullReferenceException in LocalRewriter.MakeConversionNode\" (#31587)"},{"Id":"388332623","IsPullRequest":false,"CreatedAt":"2018-12-06T18:06:17","Actor":"JosefPihrt","Number":"31586","RawContent":null,"Title":"Proposal: Fix all occurrences in open documents","State":"open","Body":"Title says it all.","Url":"https://github.com/dotnet/roslyn/issues/31586","RelatedDescription":"Open issue \"Proposal: Fix all occurrences in open documents\" (#31586)"},{"Id":"388305165","IsPullRequest":false,"CreatedAt":"2018-12-06T16:56:05","Actor":"gabeluci","Number":"31585","RawContent":null,"Title":"False positive IDE0047 : \"Parentheses can be removed\" when chaining null-conditional operators","State":"open","Body":"**Version Used**: \r\nVisual Studio Pro 2017 15.9.3\r\n\r\n**Steps to Reproduce**:\r\n\r\nUse multiple null-conditional operators on an object and a non-nullable property. Without parentheses it does not compile (which is fine). With parentheses, it suggests you remove them.\r\n\r\n    var guidString = (test?.guid)?.ToString();\r\n\r\n\r\n**Expected Behavior**:\r\nNo warnings.\r\n\r\n**Actual Behavior**:\r\nIt suggests you change your code to something that will not compile.\r\n\r\n![ide0047](https://user-images.githubusercontent.com/13784326/49598784-60679800-f94d-11e8-8332-4b0f713bf034.jpg)\r\n","Url":"https://github.com/dotnet/roslyn/issues/31585","RelatedDescription":"Open issue \"False positive IDE0047 : \"Parentheses can be removed\" when chaining null-conditional operators\" (#31585)"},{"Id":"388192073","IsPullRequest":false,"CreatedAt":"2018-12-06T12:27:46","Actor":"jhinder","Number":"31584","RawContent":null,"Title":"Null analysis seems to lose non-null information for delegates captured in lambdas","State":"open","Body":"**Version Used**: VS 16.0 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Copy the code into a C# 8.0 project with nullable reference types enabled.\r\n\r\n```c#\r\nvoid M<T>(Func<T, bool>? predicate)\r\n{\r\n    var items = Enumerable.Empty<T>();\r\n    if (predicate != null)\r\n        items = items.Where(x => predicate(x));\r\n}\r\n```\r\n\r\n**Expected Behavior**: No warning about null dereference is reported, as `predicate` was checked to be not null.\r\n\r\n**Actual Behavior**: Warning CS8602 (\"Possible deference of a null reference\") is reported on the delegate invocation.\r\n\r\nI've asked two colleagues about this, and both said they would expect `predicate` to be non-null after the null check, including inside the lambda.","Url":"https://github.com/dotnet/roslyn/issues/31584","RelatedDescription":"Open issue \"Null analysis seems to lose non-null information for delegates captured in lambdas\" (#31584)"},{"Id":"388178572","IsPullRequest":false,"CreatedAt":"2018-12-06T11:48:20","Actor":"heejaechang","Number":"31583","RawContent":null,"Title":"move redundant assignment below add using","State":"open","Body":"![image](https://user-images.githubusercontent.com/1333179/49582342-9be07300-f909-11e8-881b-cf386e7cf21a.png)\r\n\r\nwe probably want to keep \"add using\" as top suggested code fix at least when no third party fixers are installed.","Url":"https://github.com/dotnet/roslyn/issues/31583","RelatedDescription":"Open issue \"move redundant assignment below add using\" (#31583)"},{"Id":"388133375","IsPullRequest":false,"CreatedAt":"2018-12-06T09:48:58","Actor":"jhinder","Number":"31582","RawContent":null,"Title":"IDE0052 should not be reported for fields with method invocations","State":"open","Body":"**Version Used**: VS 16.0 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Copy the code below into a C# 8 project with nullable reference types enabled.\r\n\r\n```c#\r\npublic class Repro\r\n{\r\n    private object? o;\r\n\r\n    public void Init()\r\n    {\r\n        o = new object();\r\n    }\r\n\r\n    public int M() => o!.GetHashCode();\r\n}\r\n```\r\n\r\n**Expected Behavior**: IDE0052 is not reported for `o` because one of its member function is used in `M()`.\r\n\r\n**Actual Behavior**: IDE0052 is reported for `o`.","Url":"https://github.com/dotnet/roslyn/issues/31582","RelatedDescription":"Open issue \"IDE0052 should not be reported for fields with method invocations\" (#31582)"},{"Id":"388111274","IsPullRequest":false,"CreatedAt":"2018-12-06T08:47:25","Actor":"jhinder","Number":"31581","RawContent":null,"Title":"IDE0051 should not be reported when methods are referenced in nameof() expressions","State":"open","Body":"**Version Used**: VS 16.0 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Copy the code into a C# file.\r\n\r\n```c#\r\npublic string P => nameof(M);\r\nprivate void M() { }\r\n```\r\n\r\n**Expected Behavior**: IDE0051 is not reported for `M`.\r\n\r\n**Actual Behavior**: IDE0051 is reported for `M`. The code fix breaks any code that references `M`.","Url":"https://github.com/dotnet/roslyn/issues/31581","RelatedDescription":"Open issue \"IDE0051 should not be reported when methods are referenced in nameof() expressions\" (#31581)"},{"Id":"388074911","IsPullRequest":true,"CreatedAt":"2018-12-06T06:30:53","Actor":"jcouv","Number":"31580","RawContent":null,"Title":"Async-streams: Fix crash with async-iterator method with only throw","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/31552","Url":"https://github.com/dotnet/roslyn/pull/31580","RelatedDescription":"Open PR \"Async-streams: Fix crash with async-iterator method with only throw\" (#31580)"},{"Id":"388067120","IsPullRequest":true,"CreatedAt":"2018-12-06T05:54:52","Actor":"jhinder","Number":"31579","RawContent":null,"Title":"Add syntax classification for nullable directives","State":"open","Body":"This PR adds syntax classification support for `#nullable [enable|disable]` directives.\r\n\r\nLeft: 16.0 Preview 1, right: VS 15.9 with this PR\r\n![nullable-directives](https://user-images.githubusercontent.com/823398/49564216-0fdb4500-f923-11e8-8b2c-ca6bb9776729.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/31579","RelatedDescription":"Open PR \"Add syntax classification for nullable directives\" (#31579)"},{"Id":"388055813","IsPullRequest":true,"CreatedAt":"2018-12-06T04:51:30","Actor":"jasonmalinowski","Number":"31578","RawContent":null,"Title":"Replace AnalyzerConfig.GetAnalyzerConfigOptions() with a new API","State":"open","Body":"GetAnalyzerConfigOptions() was doing two separate things:\r\n\r\n1. Parse and process the .editorconfig files.\r\n2. Compute how those files apply to source file paths.\r\n\r\nThis breaks these out into two steps: there's now a Merge method that does the first step, and you can then ask the result of that for the second step. This is intended to better fit the IDE model, where we will do step 1 and then share that to the different places that lazily do step 2. It also allows for parallelization of step 2 across files.","Url":"https://github.com/dotnet/roslyn/pull/31578","RelatedDescription":"Open PR \"Replace AnalyzerConfig.GetAnalyzerConfigOptions() with a new API\" (#31578)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"388343215","IsPullRequest":true,"CreatedAt":"2018-12-07T03:23:30","Actor":"nattress","Number":"6654","RawContent":null,"Title":"R2R all methods in entrypoint assemblies","State":"closed","Body":"Our early work retained the split that the classic RyuJit-based CoreRT compiler uses where for assemblies with a `Main` method only the set of methods statically reachable from `Main` were compiled. This was fine for a single-file AOT compiler, because we built the entire call graph across assemblies. For ready-to-run, this can cause methods needed at runtime to not get compiled if they're called in a round-about way (via dependency injection for example).","Url":"https://github.com/dotnet/corert/pull/6654","RelatedDescription":"Closed or merged PR \"R2R all methods in entrypoint assemblies\" (#6654)"},{"Id":"388400207","IsPullRequest":true,"CreatedAt":"2018-12-06T21:13:39","Actor":"Dotnet-GitSync-Bot","Number":"6657","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6657","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx,coreclr\" (#6657)"},{"Id":"388365422","IsPullRequest":true,"CreatedAt":"2018-12-06T20:56:58","Actor":"Dotnet-GitSync-Bot","Number":"6656","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6656","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6656)"},{"Id":"388329912","IsPullRequest":true,"CreatedAt":"2018-12-06T19:31:58","Actor":"Dotnet-GitSync-Bot","Number":"6652","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkoritzinsky","Url":"https://github.com/dotnet/corert/pull/6652","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6652)"},{"Id":"388347383","IsPullRequest":true,"CreatedAt":"2018-12-06T18:48:18","Actor":"stephentoub","Number":"6655","RawContent":null,"Title":"Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"open","Body":"Port https://github.com/dotnet/coreclr/pull/21394 to corert","Url":"https://github.com/dotnet/corert/pull/6655","RelatedDescription":"Open PR \"Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#6655)"},{"Id":"388342926","IsPullRequest":true,"CreatedAt":"2018-12-06T18:35:20","Actor":"nattress","Number":"6653","RawContent":null,"Title":"Improvements to R2R Test Harness","State":"open","Body":"To support multi-core testing, associate the test process's PID with the ETW filter so that only assemblies loaded by the runtime the harness started are considered.\r\n\r\nEmit the assembly name for methods that are jitted to allow grouping of methods by their assembly.\r\n\r\nAdd a new parameter, `--include` which configures the ETW filter to include all assemblies in a given folder, instead of having to specify a large number of assemblies individually.\r\n\r\nBug fixes around path casing causing events to be dropped.","Url":"https://github.com/dotnet/corert/pull/6653","RelatedDescription":"Open PR \"Improvements to R2R Test Harness\" (#6653)"},{"Id":"388164134","IsPullRequest":true,"CreatedAt":"2018-12-06T13:42:11","Actor":"MichalStrehovsky","Number":"6651","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6651","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6651)"},{"Id":"387989880","IsPullRequest":true,"CreatedAt":"2018-12-06T00:52:47","Actor":"dotnet-bot","Number":"6650","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6650","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6650)"},{"Id":"387791081","IsPullRequest":true,"CreatedAt":"2018-12-05T16:23:29","Actor":"MichalStrehovsky","Number":"6649","RawContent":null,"Title":"Update CoreFX","State":"closed","Body":"We started getting `warning : Method [System.Memory]System.Buffers.Text.FormattingHelpers.CountHexDigits(uint64) will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: UInt64 System.Runtime.Intrinsics.X86.Lzcnt.LeadingZeroCount(UInt64)` and `warning : Method [System.Numerics.Vectors]System.Numerics.Matrix4x4.op_Multiply(Matrix4x4,float32) will always throw because: [TEMPORARY EXCEPTION MESSAGE] MissingMethod: System.Runtime.Intrinsics.Vector128_1<Single> System.Runtime.Intrinsics.X86.Sse.SetAllVector128(Single)`.\r\n\r\nMy guess is stale CoreFX.","Url":"https://github.com/dotnet/corert/pull/6649","RelatedDescription":"Closed or merged PR \"Update CoreFX\" (#6649)"},{"Id":"387572368","IsPullRequest":true,"CreatedAt":"2018-12-05T06:11:18","Actor":"Dotnet-GitSync-Bot","Number":"6648","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/6648","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6648)"},{"Id":"387541663","IsPullRequest":true,"CreatedAt":"2018-12-05T01:33:49","Actor":"Dotnet-GitSync-Bot","Number":"6647","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub @fiigii","Url":"https://github.com/dotnet/corert/pull/6647","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6647)"},{"Id":"386582531","IsPullRequest":true,"CreatedAt":"2018-12-04T21:29:37","Actor":"MarcoRossignoli","Number":"6634","RawContent":null,"Title":"[ILVerify]Add InterfaceImplHasDuplicate/ValidType check","State":"closed","Body":"contributes to https://github.com/dotnet/corert/issues/6203\r\n\r\nAdded check:\r\n1) ValidType\r\n2) Double interface implementation https://github.com/lewischeng-ms/sscli/blob/master/clr/src/md/compiler/mdvalidator.cpp#L2696\r\n\r\nI've got other checks ready...but before I want to \"standardise\" code for check and report.\r\n\r\nOutput is a bit different from PEVerify because I think it's more clear, let me know if it makes sense\r\n\r\nPEVerify `[MD]: Error: InterfaceImpl has a duplicate, token=0x09000002. [token:0x09000001]` <- **I don't understand how extract this [second token](https://github.com/lewischeng-ms/sscli/blob/master/clr/src/tools/peverify/main.cpp#L324)**\r\n\r\nILVerify `[MD]: Error: Interface implementation has a duplicate. Class '[InterfaceImplementation]InterfaceImplHasDuplicate_InvalidType_InterfaceImplHasDuplicate' Interface: '[InterfaceDefinition]Interface', token=09000003`\r\n\r\n\r\n/cc @jkotas @MichalStrehovsky ","Url":"https://github.com/dotnet/corert/pull/6634","RelatedDescription":"Closed or merged PR \"[ILVerify]Add InterfaceImplHasDuplicate/ValidType check\" (#6634)"},{"Id":"387355033","IsPullRequest":false,"CreatedAt":"2018-12-04T20:43:17","Actor":"deinok","Number":"6644","RawContent":null,"Title":"[Question] Build Static Libraries","State":"closed","Body":"The README.md states the following:\r\n> It can also produce standalone dynamic or static libraries that can be consumed by applications written in other programming languages. \r\n\r\nBut I can't find information about how to do it. Can sombody give me more information?","Url":"https://github.com/dotnet/corert/issues/6644","RelatedDescription":"Closed issue \"[Question] Build Static Libraries\" (#6644)"},{"Id":"387400056","IsPullRequest":true,"CreatedAt":"2018-12-04T20:43:02","Actor":"jkotas","Number":"6645","RawContent":null,"Title":"Add native library sample","State":"closed","Body":"Fixes #4987 and #6644","Url":"https://github.com/dotnet/corert/pull/6645","RelatedDescription":"Closed or merged PR \"Add native library sample\" (#6645)"},{"Id":"387437647","IsPullRequest":true,"CreatedAt":"2018-12-04T20:18:08","Actor":"Anipik","Number":"6646","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6646","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6646)"},{"Id":"387304048","IsPullRequest":true,"CreatedAt":"2018-12-04T19:08:38","Actor":"Anipik","Number":"6643","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @tannergooding","Url":"https://github.com/dotnet/corert/pull/6643","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6643)"},{"Id":"387108441","IsPullRequest":true,"CreatedAt":"2018-12-04T14:09:58","Actor":"Anipik","Number":"6642","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6642","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#6642)"},{"Id":"387069035","IsPullRequest":true,"CreatedAt":"2018-12-04T03:51:07","Actor":"Anipik","Number":"6641","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6641","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6641)"},{"Id":"386937961","IsPullRequest":true,"CreatedAt":"2018-12-04T01:25:52","Actor":"MichalStrehovsky","Number":"6637","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6637","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6637)"},{"Id":"387053739","IsPullRequest":true,"CreatedAt":"2018-12-04T00:39:57","Actor":"Anipik","Number":"6640","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/6640","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6640)"},{"Id":"386503523","IsPullRequest":true,"CreatedAt":"2018-12-04T00:04:53","Actor":"trylek","Number":"6631","RawContent":null,"Title":"Loose port of CoreCLR changes #7895 and #9138 to CPAOT","State":"closed","Body":"Based on Michal's suggestion I have implemented an approximate\r\nport of the two quoted CoreCLR changes. These changes improve\r\nperformance of GetHashCode on Enum types by avoiding boxing\r\nthanks to transforming the calls to the equivalent method calls\r\non their underlying types.\r\n\r\nMy proposed compensation for #9138 is in the signature builder -\r\nwe just check whether the MemberRef token we received has\r\nthe proper owning type and, when it doesn't, we encode it\r\nexplicitly in the signature.\r\n\r\nI have created a simple unit test that actually doesn't do much\r\nbut I verified by submitting it to R2RDump that I indeed see\r\ndirect calls to byte.GetHashCode and int.GetHashCode in the\r\nproduced machine code.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6631","RelatedDescription":"Closed or merged PR \"Loose port of CoreCLR changes #7895 and #9138 to CPAOT\" (#6631)"},{"Id":"387000759","IsPullRequest":true,"CreatedAt":"2018-12-03T23:34:56","Actor":"Anipik","Number":"6639","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @fiigii @fiigii","Url":"https://github.com/dotnet/corert/pull/6639","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6639)"},{"Id":"386565413","IsPullRequest":true,"CreatedAt":"2018-12-03T21:32:54","Actor":"MichalStrehovsky","Number":"6633","RawContent":null,"Title":"Fix compilation with alternative class libraries","State":"closed","Body":"RyuJIT asks question about runtime types even without any reflection being present.\r\n\r\nThis breaks our ability to compile class libraries that don't have the concept of reflection.\r\n\r\nWe either do something like what's in this pull request, or fix up RyuJIT to be able to understand the NULL coming out of getBuiltinClass for this.","Url":"https://github.com/dotnet/corert/pull/6633","RelatedDescription":"Closed or merged PR \"Fix compilation with alternative class libraries\" (#6633)"},{"Id":"386971780","IsPullRequest":true,"CreatedAt":"2018-12-03T19:39:39","Actor":"dotnet-bot","Number":"6638","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6638","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6638)"},{"Id":"386922274","IsPullRequest":true,"CreatedAt":"2018-12-03T18:28:19","Actor":"Anipik","Number":"6636","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @lillo42","Url":"https://github.com/dotnet/corert/pull/6636","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6636)"},{"Id":"386855555","IsPullRequest":true,"CreatedAt":"2018-12-03T14:57:17","Actor":"kbaladurin","Number":"6635","RawContent":null,"Title":"[CppCodeGen] Use ClassConstructorRunner to run cctor","State":"open","Body":"This patch makes static class initialization thread-safe: https://github.com/dotnet/corert/issues/6404","Url":"https://github.com/dotnet/corert/pull/6635","RelatedDescription":"Open PR \"[CppCodeGen] Use ClassConstructorRunner to run cctor\" (#6635)"},{"Id":"386266481","IsPullRequest":false,"CreatedAt":"2018-12-03T08:49:22","Actor":"iarischenko","Number":"6628","RawContent":null,"Title":"[Tizen/armel/quiestion] Unable to compile \"Hello, World!\" app","State":"closed","Body":"I've pulled the latest CoreRT, CoreFX and CoreCLR, rebuild, created build overlay and now i'm not able to compile a \"hello world!\" app.\r\nCould you please take a look at log and point me that is wrong?\r\n``` shell\r\ncd /overlay.armel.Debug && ./corerun ilc.dll --verbose --codegenopt \"AltJitNgen=*\" @/overlay.armel.Debug/exception/base.ilc.rsp\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Flt2LngOvf(float32)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Flt2IntOvf(float32)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Dbl2ULngOvf(float64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Dbl2LngOvf(float64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Dbl2UIntOvf(float64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.Dbl2IntOvf(float64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.ULMulOvf(uint64,uint64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.MathHelpers.LMulOvf(int64,int64)\r\nCompiling [S.P.CoreLib]Internal.Runtime.CompilerHelpers.StartupCodeHelpers.InitializeModules(native int,native int*,int32,native int*,int32)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCast(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCast2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOf(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOf2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.AreTypesEquivalent(EETypePtr,EETypePtr)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.LdelemaRef(Array,int32,native int)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.StelemRef(Array,int32,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckVectorElemAddr(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckArrayStore(object,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastInterface(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastInterface2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.AreTypesAssignable(void*,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfInterface(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfInterface2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastArray(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastArray2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfArray(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfArray2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckUnbox(object,uint8)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastClass(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.CheckCastClass2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfClass(object,void*)\r\nCompiling [S.P.CoreLib]System.Runtime.TypeCast.IsInstanceOfClass2(void*,object)\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhGetThunkSize()\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhTryGetThunkData(object,native int,native int&,native int&)\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhSetThunkData(object,native int,native int,native int)\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhFreeThunk(object,native int)\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhAllocateThunk(object)\r\nCompiling [S.P.CoreLib]System.Runtime.RuntimeExports.RhCreateThunksHeap(native int)\r\nTo repro, add following arguments to the command line:\r\n--singlemethodtypename \"System.Runtime.RuntimeExports\" --singlemethodname RhCreateThunksHeap\r\nUnhandled Exception: ILCompiler.CodeGenerationFailedException: Code generation failed ---> System.NotImplementedException: mergeClasses\r\n   at Internal.JitInterface.CorInfoImpl.mergeClasses(CORINFO_CLASS_STRUCT_* cls1, CORINFO_CLASS_STRUCT_* cls2)\r\n   at Internal.JitInterface.CorInfoImpl._mergeClasses(IntPtr thisHandle, IntPtr* ppException, CORINFO_CLASS_STRUCT_* cls1, CORINFO_CLASS_STRUCT_* cls2)\r\n   --- End of inner exception stack trace ---\r\n   at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n   at Internal.JitInterface.CorInfoImpl.CompileMethod(IMethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL)\r\n   at ILCompiler.RyuJitCompilation.ComputeDependencyNodeDependencies(List`1 obj)\r\n   at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeDependencies(List`1 deferredStaticDependencies)\r\n   at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n   at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n   at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n   at ILCompiler.Program.Run(String[] args)\r\n   at ILCompiler.Program.Main(String[] args)\r\nAborted (core dumped)\r\n```\r\nThe dependency file: \r\n[base.ilc.txt](https://github.com/dotnet/corert/files/2634221/base.ilc.txt)\r\n","Url":"https://github.com/dotnet/corert/issues/6628","RelatedDescription":"Closed issue \"[Tizen/armel/quiestion] Unable to compile \"Hello, World!\" app\" (#6628)"},{"Id":"386563760","IsPullRequest":true,"CreatedAt":"2018-12-03T07:12:31","Actor":"jkotas","Number":"6632","RawContent":null,"Title":"Reduce differences with CoreCLR in Enum.cs","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6632","RelatedDescription":"Closed or merged PR \"Reduce differences with CoreCLR in Enum.cs\" (#6632)"},{"Id":"386355488","IsPullRequest":true,"CreatedAt":"2018-11-30T22:12:09","Actor":"trylek","Number":"6630","RawContent":null,"Title":"Skip native libraries in CPAOT build of CoreCLR framework","State":"closed","Body":"Currently there's just one native library that gets picked up\r\nby the above wildcard spec - Microsoft.DiaSymReader.Native.amd64 -\r\nso I have excluded it explicitly in the script as I don't expect\r\nthis list of exclusions to fluctuate too wildly. We would need\r\nsomething smarter if we wanted to be able to automatically\r\norchestrate builds of complete folders (e.g. a UWP app).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6630","RelatedDescription":"Closed or merged PR \"Skip native libraries in CPAOT build of CoreCLR framework\" (#6630)"},{"Id":"386347313","IsPullRequest":true,"CreatedAt":"2018-11-30T22:11:37","Actor":"trylek","Number":"6629","RawContent":null,"Title":"Fix for Enum thunks in CPAOT per GitHub issue #6315","State":"closed","Body":"This change implements the fixes described by Michal in the\r\nquoted issue and, in doing so, fixes two issues caused by\r\ninvalid casts of the enum helpers in CPAOT build of CoreCLR\r\nframework.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6629","RelatedDescription":"Closed or merged PR \"Fix for Enum thunks in CPAOT per GitHub issue #6315\" (#6629)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"388449696","IsPullRequest":true,"CreatedAt":"2018-12-07T01:30:08","Actor":"dotnet-bot","Number":"2728","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2728)"},{"Id":"388461573","IsPullRequest":false,"CreatedAt":"2018-12-07T00:57:37","Actor":"NTaylorMullen","Number":"2729","RawContent":null,"Title":"Represent FrameworkReference of transitive projects and packages in the deps.json file.","State":"open","Body":"Today transitive project/package references aren't properly represented in a deps.json. For instance given this project (Bug4332 is a web app, Bug4332RCL is a Razor class library, both targeting netcoreapp3.0):\r\n![image](https://user-images.githubusercontent.com/2008729/49620733-0f6c9980-f977-11e8-8da3-e2d28605a2e1.png)\r\n\r\nToday you get the following `Bug4332.deps.json` entry for `Bug4332RCL`:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe min-bar expectation would be for the deps.json to look something like:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.AspNetCore.App\": \"3.0.0-preview-18579-0056\"\r\n        },\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThis is blocking [a core scenario](https://github.com/aspnet/AspNetCore/issues/4332) in ASP.NET Core MVC 3.0 of having Razor views in a class library.\r\n\r\nLastly, I imagine this issue depends on the completion of the following (please correct me if i'm wrong):\r\n- **Referencing a shared framework does not flow across ProjectReference** https://github.com/dotnet/sdk/issues/2420 \r\n- **Represent FrameworkReferences in NuGet packages and assets files** https://github.com/NuGet/Home/issues/7342 \r\n\r\n\r\n@livarcocc @dsplaisted @natemcmaster @mkArtakMSFT @rynowak","Url":"https://github.com/dotnet/sdk/issues/2729","RelatedDescription":"Open issue \"Represent FrameworkReference of transitive projects and packages in the deps.json file.\" (#2729)"},{"Id":"388449684","IsPullRequest":true,"CreatedAt":"2018-12-07T00:01:27","Actor":"dotnet-bot","Number":"2727","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2727","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2727)"},{"Id":"387725123","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:40","Actor":"dotnet-bot","Number":"2718","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2718","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2718)"},{"Id":"387725148","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:33","Actor":"dotnet-bot","Number":"2719","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2719","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2719)"},{"Id":"388363069","IsPullRequest":false,"CreatedAt":"2018-12-06T19:38:29","Actor":"sarbjithanjra","Number":"2726","RawContent":null,"Title":"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648","State":"closed","Body":"Hi on 5 Dec 2018, I downloaded the .NET Core SDK with version 2.2.100 and after install on my sytem, i checked that there is an existing 2.2.200-preview-009648 version is installed. Please let me know which one latest? it seem 2.2.100 is latest as per download page but from version number it seem 2.2.200 is latest.","Url":"https://github.com/dotnet/sdk/issues/2726","RelatedDescription":"Closed issue \"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648\" (#2726)"},{"Id":"385725859","IsPullRequest":true,"CreatedAt":"2018-12-06T18:46:32","Actor":"dotnet-maestro[bot]","Number":"2705","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18578.9\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18579.9\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18603.7\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18604.15\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2705","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2705)"},{"Id":"388344039","IsPullRequest":false,"CreatedAt":"2018-12-06T18:38:39","Actor":"zawor","Number":"2725","RawContent":null,"Title":"Uninstalling may be not enough","State":"open","Body":"@KathleenDollard asked me to post dotnet/docs#9412 here so here we go:\r\n\r\nHad a lot of runtimes and sdks accumulated over time on my dev machine. At some point i decided to do the cleanup and uninstalled quite a few from under appwiz.cpl (or add/remove programs). Unfortunately after running `dotnet --list-sdks` or `dotnet --list-runtimes` i still saw those which were uninstalled... Interestingly enough i discovered that installers have left a lot of empty dirs under `C:\\Program Files\\dotnet\\sdk`, `C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All` and `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App`. Removing those made `--list-sdks` and `--list-runtimes` to no longer list uninstalled runtimes/sdks.","Url":"https://github.com/dotnet/sdk/issues/2725","RelatedDescription":"Open issue \"Uninstalling may be not enough\" (#2725)"},{"Id":"388114295","IsPullRequest":false,"CreatedAt":"2018-12-06T08:56:48","Actor":"Szer","Number":"2724","RawContent":null,"Title":"FSharp.Core explicit dependency downgraded to implicit one","State":"open","Body":"**Problem:**\r\n\r\nIf I put explicit dependency on FSharp.Core higher than implicit one (which for 2.1.500 is 4.5.2) it will downgrade it to implicit one no matter what.\r\n\r\n**Steps to reproduce**\r\n* Net SDK 2.1.500\r\n* FSproj:\r\n```fsproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup> \r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Core\" Version=\"4.5.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n* useless Program.fs\r\n```fsharp\r\nmodule A\r\nlet a = 1\r\n```\r\n* `dotnet restore` or `dotnet build`\r\n* check `FSharp.Core` version in `obj\\project.assets.json`\r\n\r\n**Expected**\r\n\r\n`FSharp.Core` should restore to explicit version, to `4.5.4`\r\n\r\n**Actual**\r\n\r\n`FSharp.Core` is being restored to implicit version, to `4.5.2`\r\n\r\n**Known workarounds**\r\n\r\n* Add `<DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>` to fsproj\r\n* Use VisualStudio 15.9.3 `ctrl-shift-B` (strangely it restores OK)\r\n* Use `Paket`\r\n\r\n**Notes**\r\n\r\nThis behavior is the reason for package degradation warnings in case any other packages require something like `>=4.5.4` or `=4.5.4`","Url":"https://github.com/dotnet/sdk/issues/2724","RelatedDescription":"Open issue \"FSharp.Core explicit dependency downgraded to implicit one\" (#2724)"},{"Id":"387757437","IsPullRequest":false,"CreatedAt":"2018-12-05T19:45:55","Actor":"AArnott","Number":"2720","RawContent":null,"Title":" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'","State":"closed","Body":"Very similar to #1321, except that it works fine on my own machine, but [consistently fails when run in Azure Pipelines](https://dev.azure.com/azure-public/vside/_build/results?buildId=816). \r\n\r\n> C:\\hostedtoolcache\\windows\\dncs\\2.1.500\\x64\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1005: Assets file 'D:\\a\\1\\s\\obj\\Microsoft.VisualStudio.Composition.LocalizationShell\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'. Ensure that restore has run and that you have included 'netstandard1.5' in the TargetFrameworks for your project. [D:\\a\\1\\s\\src\\Microsoft.VisualStudio.Composition.LocalizationShell\\Microsoft.VisualStudio.Composition.LocalizationShell.csproj]\r\n\r\nThe [LocalizationShell project targets netstandard1.0](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition.LocalizationShell/Microsoft.VisualStudio.Composition.LocalizationShell.csproj#L7), and is referenced by [a multitargeting project that targets several frameworks including netstandard1.5](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition/Microsoft.VisualStudio.Composition.csproj#L3).\r\n\r\nThe odd thing is this works on my machine, on AppVeyor, and even on Azure Pipelines in the past. But now it's consistently failing.\r\n\r\nThis *may* be a dupe of #2563","Url":"https://github.com/dotnet/sdk/issues/2720","RelatedDescription":"Closed issue \" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'\" (#2720)"},{"Id":"387825674","IsPullRequest":false,"CreatedAt":"2018-12-05T16:44:33","Actor":"xoofx","Number":"2723","RawContent":null,"Title":"How to debug msbuild?","State":"closed","Body":"Hey,\r\n\r\nSo I would like to investigate a problem related to [slow RAR in msbuild](https://github.com/Microsoft/msbuild/issues/2015) and while I have been able to initially hack something to debug msbuild, that was very convoluted, copying files around from regular Sdk...etc.\r\n\r\nSo I would like to do this more cleanly and follow a more deterministic procedure to debug directly MsBuild project from MsBuild.sln solution  (so it is issuing a dotnet msbuild.dll or msbuild.exe)  for \r\n1.  new csproj with .NET Sdk\r\n2.  regular old csproj \r\n\r\nWhich repository should I build, variable that I should set...etc.? (Or I could avoid building by reusing maybe an installed dotnet folder?)\r\n\r\n## For new csproj\r\n\r\nLet's try just on the new csproj format for now, starting with a plain `dotnet new --name Helloworld`\r\n\r\nAssuming that I built this repository, and I'm setting the MSBuildSDKsPath to point to the `artifacts\\Debug\\bin\\Sdks`\r\n\r\nI'm getting the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/715038/49525579-5a6eaa00-f8ae-11e8-9220-1c9166120934.png)\r\n\r\n```\r\nProject \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" on node 1 (default targets).\r\nC:\\Code\\dotnet\\sdk\\artifacts\\Debug\\bin\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.props(33,11): error MSB4226: The imported project\r\n \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props\" was not found. Also, tried to find\r\n \"Current\\Microsoft.Common.props\" in the fallback search path(s) for $(MSBuildExtensionsPath) - \"C:\\Program Files (x86)\r\n\\MSBuild\" . These search paths are defined in \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\MSBuild.exe.Config\".\r\nConfirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search pat\r\nhs. [C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj]\r\nDone Building Project \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" (default targets) -- FAILED.\r\n```\r\n\r\nIt is trying to resolve `artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props` which is not in this folder.\r\nNot sure why it is trying `Current` by default, while the solution seems to build in this file in `artifacts\\Debug\\bin\\15.0\\Microsoft.Common.props` , so assume that the tooling version should be 15.0... but still, can I setup a MsBuild special variable path for pointing to this folder?\r\n\r\nSo likely after that, it will complain about missing NuGet resolver or similar. How do I pass them through?\r\n\r\ncc: @davkean @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/2723","RelatedDescription":"Closed issue \"How to debug msbuild?\" (#2723)"},{"Id":"387824002","IsPullRequest":false,"CreatedAt":"2018-12-05T15:57:16","Actor":"vitek-karas","Number":"2722","RawContent":null,"Title":"RID publish as framework dependent app produces broken app on Linux","State":"open","Body":"The simplest repro:\r\n\r\nOn Linux (I used Ubuntu 18)\r\ninstall .NET Core SDK 2.2.100\r\nrun:\r\n`mkdir webapp`\r\n`cd webapp`\r\n`dotnet new web`\r\n`dotnet publish -c release -r linux-x64 --self-contained false`\r\n`./bin/release/netcoreapp2.2/linux-x64/publish/webapp`\r\n\r\nThis will fail to find a usable framework to run on.\r\n\r\nThe root cause is that when we publish a RID specific (so with apphost) app as framework dependent, for some reason the SDK includes `hostfxr` and `hostpolicy` libraries in the published folder. The `apphost` searches for `hostfxr` first in the local folder, then in global locations. Since it finds it in the local folder it uses that. Then it tries to resolve a framework, but on Linux where there is no global location for frameworks, it looks only in the local folder... and fails.\r\n\r\nOn Windows to works \"by luck\", we still load the `hostfxr` from the app, but then since we do have global location for frameworks, we end up loading the framework from the global location.\r\n\r\nDeleting the `hostfxr` and `hostpolicy` from the publish folder doesn't help, because for some reason they are listed as native runtime assets in the `.deps.json`. In fact there are native assets for `hostpolicy`, `hostfxr` and `apphost` which won't resolve at runtime either.\r\n\r\nThe SDK should not include `hostfxr`, `hostpolixy` in the publish folder and it should not include dependencies to the `Microsoft.NETCore.DotNetHostPolicy`, `Microsoft.NETCore.DotNetHostResolver` and `Microsoft.NETCore.DotNetAppHost` in the `.deps.json` since those bring wrong native assets.","Url":"https://github.com/dotnet/sdk/issues/2722","RelatedDescription":"Open issue \"RID publish as framework dependent app produces broken app on Linux\" (#2722)"},{"Id":"387804807","IsPullRequest":false,"CreatedAt":"2018-12-05T15:18:16","Actor":"NinoFloris","Number":"2721","RawContent":null,"Title":"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings","State":"open","Body":"Could not upgrade all projects to new 2.2.100 sdk, as we got conflict warnings for among others \r\n\r\n```\r\n1:7>/usr/local/share/dotnet/sdk/2.2.100/Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.AspNetCore.Authentication.Abstractions\" that couldnot be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/projpath]\r\n```\r\n\r\n- Microsoft.Extensions.Options\r\n- Microsoft.Extensions.DependencyInjection.Abstractions\r\n- Microsoft.AspNetCore.Http.Abstractions\r\n- Microsoft.Extensions.Configuration.Abstractions\r\n- Microsoft.AspNetCore.Hosting\r\n- Microsoft.AspNetCore.Hosting.Abstractions\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.WebUtilities\r\n- Microsoft.AspNetCore.Authentication.Abstractions\r\n\r\nWhat all of these packages have in common is that they list a 2.2.0 release on nuget.org\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Options/2.2.0 and if you look carefully they are all at Downloads: 0. \r\n\r\nWhich is why msbuild detailed logs gives errors like these \r\n\r\n```\r\n         Dependency \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n[...]\r\nThere was a conflict between \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was chosen because it was primary and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was not.\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll].\r\n                 /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n                   Project file item includes which caused reference \"/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\".\r\n                     /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [].\r\n                 myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n                   Project file item includes which caused reference \"myproj/bin/Debug/netcoreapp2.2/myproj.dll\".\r\n                     myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n```\r\n\r\n**Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".**\r\n\r\nNow that seems like a problem","Url":"https://github.com/dotnet/sdk/issues/2721","RelatedDescription":"Open issue \"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings\" (#2721)"},{"Id":"387707214","IsPullRequest":false,"CreatedAt":"2018-12-05T11:16:12","Actor":"mcm-ham","Number":"2717","RawContent":null,"Title":"2.2.100 causes 2.1.500 build failure: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly","State":"closed","Body":"If I install 2.2.100, and then add global.json to a project to use 2.1.500 I then get the following build failure:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.DefaultItems.targets(212,5): error MSB4062: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly C:\\Program Files\\dotnet\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\..\\tools\\netcoreapp2.0/Microsoft.NET.Build.Tasks.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\repo\\netstandard-lib.csproj] [C:\\repo\\netcoreapp-site.csproj]\r\n```\r\nIf I uninstall 2.2.100 then the project builds fine.","Url":"https://github.com/dotnet/sdk/issues/2717","RelatedDescription":"Closed issue \"2.2.100 causes 2.1.500 build failure: The \"CheckForImplicitPackageReferenceOverrides\" task could not be loaded from the assembly\" (#2717)"},{"Id":"387433997","IsPullRequest":true,"CreatedAt":"2018-12-05T06:27:18","Actor":"nugetlurker","Number":"2713","RawContent":null,"Title":"Insert NuGet Build 4.9.2-rtm.5706 into sdk","State":"closed","Body":"Insert NuGet Build 4.9.2-rtm.5706 into sdk release/2.2.1xx branch","Url":"https://github.com/dotnet/sdk/pull/2713","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.2-rtm.5706 into sdk\" (#2713)"},{"Id":"387434108","IsPullRequest":true,"CreatedAt":"2018-12-05T06:06:52","Actor":"nugetlurker","Number":"2714","RawContent":null,"Title":"Insert NuGet Build 4.9.2-rtm.5706 into sdk","State":"closed","Body":"Insert NuGet Build 4.9.2-rtm.5706 into sdk release/2.1.5xx branch","Url":"https://github.com/dotnet/sdk/pull/2714","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 4.9.2-rtm.5706 into sdk\" (#2714)"},{"Id":"387070085","IsPullRequest":false,"CreatedAt":"2018-12-05T00:17:21","Actor":"ryanbrandenburg","Number":"2710","RawContent":null,"Title":"SNK is not considered when determining if a re-build is required","State":"closed","Body":"1. Build a project which has InternalsVisibleTo into another project using any given StrongNameKey.\r\n2. Build the project again, with a different StrongNameKey.\r\n3. See an error like:\r\n```\r\nFriend access was granted by 'Microsoft.Extensions.Configuration.UserSecrets, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35', but the public key of the output assembly ('0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9') does not match that specified by the InternalsVisibleTo attribute in the granting assembly.\r\n```\r\nThe base project wasn't rebuilt with the new key.","Url":"https://github.com/dotnet/sdk/issues/2710","RelatedDescription":"Closed issue \"SNK is not considered when determining if a re-build is required\" (#2710)"},{"Id":"387482485","IsPullRequest":false,"CreatedAt":"2018-12-04T21:14:50","Actor":"tmat","Number":"2716","RawContent":null,"Title":"NRE from GenerateDepsFile during Roslyn build","State":"open","Body":"This is a non-standard build with my local changes. Not sure how to repro this exactly.\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.600-preview-009426\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.NET.Build.Tasks.ReferenceInfo.GetVersion(ITaskItem referencePath)\r\n   at Microsoft.NET.Build.Tasks.ReferenceInfo.CreateReferenceInfo(ITaskItem referencePath)\r\n   at Microsoft.NET.Build.Tasks.ReferenceInfo.CreateReferenceInfos(IEnumerable`1 referencePaths)\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [D:\\R3\\src\\Workspaces\\CSharp\\Portable\\Microsoft.CodeAnalysis.CSharp.Workspaces.csproj]\r\n```\r\n\r\nbinlog:\r\n[Binlog.zip](https://github.com/dotnet/sdk/files/2646153/Binlog.zip)\r\n\r\n`Binaries\\Obj\\Microsoft.CodeAnalysis.CSharp.Workspaces\\project.assets.json`\r\n[project.assets.zip](https://github.com/dotnet/sdk/files/2646158/project.assets.zip)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2716","RelatedDescription":"Open issue \"NRE from GenerateDepsFile during Roslyn build\" (#2716)"},{"Id":"387443610","IsPullRequest":true,"CreatedAt":"2018-12-04T19:27:34","Actor":"Gwindalmir","Number":"2715","RawContent":null,"Title":"Spaces in the configuration name create invalid preprocessor defines","State":"open","Body":"If you have a custom configuration, such as \"Release Obfuscated\", the implicit defines created contain spaces, but they don't throw any compiler errors. Though they are still unusable.\r\nReplace spaces if they exist in the configuration name.\r\n\r\nFor example, as shown in Visual Studio IDE:\r\n\r\n`NETSTANDARD2_0;RELEASE OBFUSCATED;MYDEFINE`","Url":"https://github.com/dotnet/sdk/pull/2715","RelatedDescription":"Open PR \"Spaces in the configuration name create invalid preprocessor defines\" (#2715)"},{"Id":"387423413","IsPullRequest":false,"CreatedAt":"2018-12-04T18:33:54","Actor":"livarcocc","Number":"2712","RawContent":null,"Title":"Use TestRunnerAdditionalArguments with arcade","State":"open","Body":"There has been a change in arcade that changed `XUnitRunnerAdditionalArguments` to `TestRunnerAddtionalArguments`.\r\n\r\nWe will have to re-act to it here once that build becomes available.","Url":"https://github.com/dotnet/sdk/issues/2712","RelatedDescription":"Open issue \"Use TestRunnerAdditionalArguments with arcade\" (#2712)"},{"Id":"387376531","IsPullRequest":false,"CreatedAt":"2018-12-04T16:40:00","Actor":"poke","Number":"2711","RawContent":null,"Title":"2.2.100 final release can be installed side-by-side with the 2.2.100 from 2.2.1xx latest feed","State":"open","Body":"I downloaded the 2.2.100 SDK earlier today from [dotnet/core-sdk](https://github.com/dotnet/core-sdk#installers-and-binaries) which gave me a `dotnet-sdk-latest-win-x64.exe`. That SDK has been versioned as 2.2.100 for a while already and when installing it, it _is_ a 2.2.100 SDK that is being installed.\r\n\r\nNow, on [dotnet.microsoft.com](https://dotnet.microsoft.com/download), the 2.2 release is now official and a final release for 2.2.100 is available.\r\n\r\nUpon comparing the `dotnet-sdk-2.2.100-win-x64.exe` with the installer downloaded earlier showed that it is actually a different file, although both are expected to contain 2.2.100. What’s worse, I can install both versions side-by-side so I actually get two entries in Windows:\r\n\r\n![Two identical SDKs in programs & settings](https://user-images.githubusercontent.com/132240/49457558-5594f200-f7eb-11e8-9231-1629d6bb7b65.png)\r\n\r\nOf course, since both SDKs have the same version, they both installed into the same folder, so the `dotnet` CLI will only see one SDK. But ideally, the previously released 2.2.100 SDK should have either be the identical version as the now-released final 2.2.100, or it should have been a different version.","Url":"https://github.com/dotnet/sdk/issues/2711","RelatedDescription":"Open issue \"2.2.100 final release can be installed side-by-side with the 2.2.100 from 2.2.1xx latest feed\" (#2711)"},{"Id":"387059568","IsPullRequest":true,"CreatedAt":"2018-12-04T01:00:09","Actor":"dotnet-bot","Number":"2709","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2709","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2709)"},{"Id":"386316667","IsPullRequest":true,"CreatedAt":"2018-12-03T19:55:22","Actor":"dotnet-bot","Number":"2708","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2708","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2708)"},{"Id":"386310438","IsPullRequest":false,"CreatedAt":"2018-11-30T19:00:58","Actor":"chabiss","Number":"2707","RawContent":null,"Title":"Need \"Designer.RuntimeConfig.Json\" at design-time compilation for the designers (WPF and Winforms) to work ","State":"open","Body":"The surface processes for WPF and Winforms will be shipped as part of VS, but they will not include the generated runtimeconfig.Json in the setup. \r\n\r\nWhen a new project is created, we need the designer process to know which framework the surface process needs to bind to. For this, a design-time build needs to provide the runtime config for the process to use in order to launch the surface process. \r\n\r\nThe flow is as follow: \r\n\r\n1.\tGenerating Designer.RuntimeConfig.Json (Designer.Deps.Json) and at design-time. \r\n\r\n- Those design file should be generated under the obj directory\r\n- \"Microsoft.NETCore.DotNetHostPolicy.SetAppPaths\": true” needs to be included in the config file.\r\n\r\n2.\tNew OutputGroups \"DesignerOutput\"?  that gives us all the files that need to be copied into ShadowCache. This would include the generated Designer.RuntimeConfig.Json \r\n\r\n- Project.ConfigurationManager.Configurations.Item.OutputGroups(\"DesignerOutput\")\r\n","Url":"https://github.com/dotnet/sdk/issues/2707","RelatedDescription":"Open issue \"Need \"Designer.RuntimeConfig.Json\" at design-time compilation for the designers (WPF and Winforms) to work \" (#2707)"},{"Id":"385880193","IsPullRequest":true,"CreatedAt":"2018-11-30T18:12:44","Actor":"dotnet-bot","Number":"2706","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2706","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2706)"},{"Id":"385509484","IsPullRequest":true,"CreatedAt":"2018-11-29T18:23:49","Actor":"dotnet-bot","Number":"2704","RawContent":null,"Title":"Merge release/2.1.4xx to release/2.1.5xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2704","RelatedDescription":"Closed or merged PR \"Merge release/2.1.4xx to release/2.1.5xx\" (#2704)"},{"Id":"385500715","IsPullRequest":false,"CreatedAt":"2018-11-28T23:24:22","Actor":"twsouthwick","Number":"2703","RawContent":null,"Title":"PresentationFramework.Aero not included by default when compiling against .NET Framework","State":"open","Body":"I'm porting an app that relies on `PresentationFramework.Aero` for `ButtonChrome` and found I need to include the following in the csproj to get it to compile when building for .NET Framework 4.7.1:\r\n\r\n```xml\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'net471'\">\r\n    <Reference Include=\"PresentationFramework.Aero\" />\r\n  </ItemGroup\r\n```\r\n\r\nIs there a reason this isn't automatically included when setting `<UseWindowsForms>true</UseWindowsForms>`?","Url":"https://github.com/dotnet/sdk/issues/2703","RelatedDescription":"Open issue \"PresentationFramework.Aero not included by default when compiling against .NET Framework\" (#2703)"},{"Id":"385392299","IsPullRequest":true,"CreatedAt":"2018-11-28T21:54:59","Actor":"johnbeisner","Number":"2702","RawContent":null,"Title":"Backport performance test fixes from SDK master","State":"closed","Body":"Reference: https://github.com/dotnet/sdk/pull/2696\r\nAddressing the 103 exitcode [inability to find the Python exe] on official performance machines.\r\n\r\n@DrewScoggins","Url":"https://github.com/dotnet/sdk/pull/2702","RelatedDescription":"Closed or merged PR \"Backport performance test fixes from SDK master\" (#2702)"},{"Id":"385058288","IsPullRequest":true,"CreatedAt":"2018-11-28T20:52:38","Actor":"peterhuene","Number":"2700","RawContent":null,"Title":"Skip resource updating on Nano Server.","State":"closed","Body":"This commit fixes the resource updater usage to be skipped when building on\r\nNano Server.\r\n\r\nFor Windows Server Nano 2016, this fixes an `EntryPointNotFoundException` because\r\n`BeginUpdateResource` cannot be found in kernel32.\r\n\r\nFor 1709+ of Windows Server Nano, this fixes an `HResultException` with code\r\n`80070000`, because the export resolves but seemingly is not implemented.\r\n\r\nFixes #2652.","Url":"https://github.com/dotnet/sdk/pull/2700","RelatedDescription":"Closed or merged PR \"Skip resource updating on Nano Server.\" (#2700)"},{"Id":"385093777","IsPullRequest":true,"CreatedAt":"2018-11-28T20:50:02","Actor":"peterhuene","Number":"2701","RawContent":null,"Title":"Rename `_HandlePackageFileConflictsForBuild` back to `_HandlePackageFileConflicts`","State":"closed","Body":"This commit renames the `_HandlePackageFileConflictsForBuild` target back to\r\nthe original name of `_HandlePackageFileConflicts`.\r\n\r\nThis prevents a failure to find the target when using a previously shipping\r\n`Microsoft.NET.Build.Extensions.NETFramework.targets` with a 3.0 .NET Core SDK.\r\n\r\nFixes #2695.","Url":"https://github.com/dotnet/sdk/pull/2701","RelatedDescription":"Closed or merged PR \"Rename `_HandlePackageFileConflictsForBuild` back to `_HandlePackageFileConflicts`\" (#2701)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":".NET Core November Update - 2.1.6 and SDK 2.1.500","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console apps. ASP.NET Core is not yet functional.\r\n\r\nSee following known issues:\r\n\r\n* [dotnet/core-sdk #75](https://github.com/dotnet/core-sdk/issues/75)\r\n* [dotnet/core-sdk #76](https://github.com/dotnet/core-sdk/issues/76)\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"},{"Id":"304852590","IsPullRequest":false,"CreatedAt":"2018-03-13T17:01:52","Actor":"blowdart","Number":"62","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse https://github.com/dotnet/corefx/issues/28010 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be updated to target the updated .NET Core runtime, recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, update your application to target the updated .NET Core runtime, recompile and redeploy. To update your runtime version edit the `RuntimeFrameworkVersion` property in the project's .csproj file to indicate the desired target version. For example:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <RuntimeFrameworkVersion>2.0.6</RuntimeFrameworkVersion>\r\n</PropertyGroup>\r\n```\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `{applicationName}.runtimeconfig.json` file for that application., where `{applicationName}` is the name of the executable, for example `example.exe` would have a runtime configuration file titled `example.runtimeconfig.json`. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `{applicationName}.runtimeconfig.json` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.2 (Mar 26, 2018): Corrected instructions for runtimeconfig.json\r\nV1.1 (Mar 14, 2018): Added instructions for self contained application retargetting.\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.2_\r\n_Last Updated 2018-03-26_","Url":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\" (#62)"},{"Id":"300505281","IsPullRequest":false,"CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Number":"61","RawContent":null,"Title":"New offline books released for Visual Studio 2017","State":"open","Body":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Help Viewer installation\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Add and Remove Content\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)","Url":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Open issue \"New offline books released for Visual Studio 2017\" (#61)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1070731847620050944","CreatedAt":"2018-12-06T17:29:00+00:00","UserScreenname":"dotnet","Text":"Learn about the latest F# Tooling Updates for Visual Studio 2017 from @_cartermp in this episode of the #OnDotNet s… https://t.co/wSjVH0qlRz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":14,"RawContent":null},{"Id":"1070171866193571840","CreatedAt":"2018-12-05T04:23:50+00:00","UserScreenname":"dotnet","Text":"Imagine you could draw an architecture and have it converted to an Azure environment. Silly? You bet.  But also ins… https://t.co/A13GJJ7iEw","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":19,"RawContent":null},{"Id":"1070077811283632130","CreatedAt":"2018-12-04T22:10:05+00:00","UserScreenname":"dotnet","Text":"Happening now @ #MSFTConnect - Join @CoolCSH &amp; Mike Harsh as they explore the latest #dotNET Core release. PLUS, yo… https://t.co/0yWWIL76wp","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":19,"FavoriteCount":2,"RawContent":null},{"Id":"1070033626551721989","CreatedAt":"2018-12-04T19:14:31+00:00","UserScreenname":"dotnet","Text":"#MSFTConnect announcement: #dotNET Core 2.2 is now available for download. \n\n...now w/ improvements to #ASPNET Core… https://t.co/lkrvCr12Oc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":194,"FavoriteCount":125,"RawContent":null},{"Id":"1070007006088425472","CreatedAt":"2018-12-04T17:28:44+00:00","UserScreenname":"dotnet","Text":"Announcing https://t.co/XkD7piEeFS 0.8 – Machine Learning for .NET https://t.co/8tFKK3l4H8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":80,"FavoriteCount":44,"RawContent":null},{"Id":"1070005066231373824","CreatedAt":"2018-12-04T17:21:02+00:00","UserScreenname":"dotnet","Text":"Heard @ #MSFTConnect, #dotNET Core 3 is now in public preview - complete w/ support for WPF, Windows Forms, &amp; EF6.… https://t.co/wCMXNwi4tQ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":224,"FavoriteCount":129,"RawContent":null}]}},"RunOn":"2018-12-07T05:30:45.3897391Z","RunDurationInMilliseconds":19599}